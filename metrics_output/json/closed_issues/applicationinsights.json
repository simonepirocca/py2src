{"total_count": 39, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/163", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/163/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/163/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/163", "id": 432830544, "node_id": "MDU6SXNzdWU0MzI4MzA1NDQ=", "number": 163, "title": "Open Schema or Data collector API", "user": {"login": "tomavitan", "id": 37827927, "node_id": "MDQ6VXNlcjM3ODI3OTI3", "avatar_url": "https://avatars0.githubusercontent.com/u/37827927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomavitan", "html_url": "https://github.com/tomavitan", "followers_url": "https://api.github.com/users/tomavitan/followers", "following_url": "https://api.github.com/users/tomavitan/following{/other_user}", "gists_url": "https://api.github.com/users/tomavitan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomavitan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomavitan/subscriptions", "organizations_url": "https://api.github.com/users/tomavitan/orgs", "repos_url": "https://api.github.com/users/tomavitan/repos", "events_url": "https://api.github.com/users/tomavitan/events{/privacy}", "received_events_url": "https://api.github.com/users/tomavitan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498777, "node_id": "MDU6TGFiZWwxNDk0OTg3Nzc=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-13T09:58:21Z", "updated_at": "2019-04-25T21:39:05Z", "closed_at": "2019-04-25T21:39:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I received an email from Azure with the following title \"Migrate from Azure Application Insights Open Schema to the HTTP Data Collector API by April 15, 2019\". \r\n\r\nWill it affect our use of this SDK? The email says that \"data sent [using Open Schema] to the ingestion endpoint will not be processed.\"\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/146", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/146/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/146/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/146", "id": 410321483, "node_id": "MDU6SXNzdWU0MTAzMjE0ODM=", "number": 146, "title": "Setting role_name on Flask app", "user": {"login": "vshulev", "id": 5750234, "node_id": "MDQ6VXNlcjU3NTAyMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5750234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vshulev", "html_url": "https://github.com/vshulev", "followers_url": "https://api.github.com/users/vshulev/followers", "following_url": "https://api.github.com/users/vshulev/following{/other_user}", "gists_url": "https://api.github.com/users/vshulev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vshulev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vshulev/subscriptions", "organizations_url": "https://api.github.com/users/vshulev/orgs", "repos_url": "https://api.github.com/users/vshulev/repos", "events_url": "https://api.github.com/users/vshulev/events{/privacy}", "received_events_url": "https://api.github.com/users/vshulev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-14T14:18:43Z", "updated_at": "2019-03-18T20:00:07Z", "closed_at": "2019-03-18T20:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find relevant docs on how to set `cloud.role_name` on a Flask app. The `AppInsights` class doesn't seem to have a `context` attribute. Is there a way to set it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/136", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/136/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/136/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/136", "id": 380903836, "node_id": "MDU6SXNzdWUzODA5MDM4MzY=", "number": 136, "title": "set user.id on each flask request", "user": {"login": "sdementen", "id": 1304950, "node_id": "MDQ6VXNlcjEzMDQ5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdementen", "html_url": "https://github.com/sdementen", "followers_url": "https://api.github.com/users/sdementen/followers", "following_url": "https://api.github.com/users/sdementen/following{/other_user}", "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions", "organizations_url": "https://api.github.com/users/sdementen/orgs", "repos_url": "https://api.github.com/users/sdementen/repos", "events_url": "https://api.github.com/users/sdementen/events{/privacy}", "received_events_url": "https://api.github.com/users/sdementen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-14T21:55:16Z", "updated_at": "2019-03-18T20:00:07Z", "closed_at": "2019-03-18T20:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I set the context.user.id or context.user.authUserId for a Flask App ?\r\nI have wrapped the flask app with `appinsights = AppInsights(app)` and I see the requests in my App Insight.\r\nI have tried\r\n```python\r\n@app.before_request\r\ndef before_request():\r\n    user_id = request.headers.get(\"X-Ms-Client-Principal-Name\") # header provided by AAD auth on Azure Web app\r\n    appinsights._exception_telemetry_client.context.user.id = user_id\r\n    appinsights._exception_telemetry_client.context.user.authUserId = user_id\r\n    appinsights.flush()\r\n```\r\nbut without success. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/129", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/129/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/129/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/129", "id": 358596991, "node_id": "MDU6SXNzdWUzNTg1OTY5OTE=", "number": 129, "title": "Get Operation Id from Flask integration", "user": {"login": "snobu", "id": 6472374, "node_id": "MDQ6VXNlcjY0NzIzNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6472374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snobu", "html_url": "https://github.com/snobu", "followers_url": "https://api.github.com/users/snobu/followers", "following_url": "https://api.github.com/users/snobu/following{/other_user}", "gists_url": "https://api.github.com/users/snobu/gists{/gist_id}", "starred_url": "https://api.github.com/users/snobu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snobu/subscriptions", "organizations_url": "https://api.github.com/users/snobu/orgs", "repos_url": "https://api.github.com/users/snobu/repos", "events_url": "https://api.github.com/users/snobu/events{/privacy}", "received_events_url": "https://api.github.com/users/snobu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-10T12:17:13Z", "updated_at": "2018-09-10T20:01:12Z", "closed_at": "2018-09-10T19:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given this code snippet:\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom applicationinsights.flask.ext import AppInsights\r\n\r\n# instantiate the Flask application\r\napp = Flask(__name__)\r\napp.config['APPINSIGHTS_INSTRUMENTATIONKEY'] = '<YOUR INSTRUMENTATION KEY GOES HERE>'\r\n\r\n# log requests, traces and exceptions to the Application Insights service\r\nappinsights = AppInsights(app)\r\n\r\ndef predict_image_handler(project=None):\r\n       # Collect Flask 'Operation Id' and use it as 'Operation Id' for\r\n       # a tc.track_trace() call.\r\n        ...\r\n        return resp\r\n```\r\n\r\nHow do i get a hold of _Operation Id_, in code, for the Flask request?\r\n\r\n![image](https://user-images.githubusercontent.com/6472374/45297000-8cb97700-b50c-11e8-9eeb-203e55aa84a2.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/124", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/124/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/124/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/124", "id": 356693443, "node_id": "MDU6SXNzdWUzNTY2OTM0NDM=", "number": 124, "title": "Current approach of exception logging in flask plugin isn's safe", "user": {"login": "hirochachacha", "id": 898442, "node_id": "MDQ6VXNlcjg5ODQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/898442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hirochachacha", "html_url": "https://github.com/hirochachacha", "followers_url": "https://api.github.com/users/hirochachacha/followers", "following_url": "https://api.github.com/users/hirochachacha/following{/other_user}", "gists_url": "https://api.github.com/users/hirochachacha/gists{/gist_id}", "starred_url": "https://api.github.com/users/hirochachacha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hirochachacha/subscriptions", "organizations_url": "https://api.github.com/users/hirochachacha/orgs", "repos_url": "https://api.github.com/users/hirochachacha/repos", "events_url": "https://api.github.com/users/hirochachacha/events{/privacy}", "received_events_url": "https://api.github.com/users/hirochachacha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-04T07:56:15Z", "updated_at": "2019-03-18T18:27:21Z", "closed_at": "2019-03-18T18:27:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Microsoft/ApplicationInsights-Python/blob/439f175cb446e30d7a541bee03d31393febf88c2/applicationinsights/flask/ext.py#L160-L169\r\n\r\nThe above code has undesirable side-effects.\r\nIt swallow any exceptions - not only critical one, but also [HTTP Exception](http://werkzeug.pocoo.org/docs/0.14/exceptions/#werkzeug.exceptions.HTTPException) which is used for internal control flows such as redirect, 404 hander, ... etc.\r\n\r\nYou can check it by a following simple program:\r\n```\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n@app.errorhandler(Exception)\r\ndef handle_exception(e):\r\n    raise e\r\n\r\n\r\n@app.route('/')\r\ndef root():\r\n    return 'hello'\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nNormally, requesting '/notfound' invoke the builtin 404 handler.\r\nIn the above code, `@app.errorhandler(Exception)` swallows `werkzeug.exceptions.NotFound`, so the builtin 404 handler is never called.\r\nIt means `@app.errorhandler(Exception)` broke a normal flask application.\r\n\r\nI'm not sure but I'd suggest using http://flask.pocoo.org/docs/1.0/signals/ instead, which presumably have no side-effects.\r\nI assume that Sentry is doing that approach.\r\n\r\nhttps://github.com/getsentry/raven-python/blob/master/raven/contrib/flask.py#L300-L301 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/121", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/121/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/121/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/121", "id": 348256683, "node_id": "MDU6SXNzdWUzNDgyNTY2ODM=", "number": 121, "title": "Incompatible with python 3.7, breaks Azure CLI", "user": {"login": "maximbaz", "id": 1177900, "node_id": "MDQ6VXNlcjExNzc5MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1177900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximbaz", "html_url": "https://github.com/maximbaz", "followers_url": "https://api.github.com/users/maximbaz/followers", "following_url": "https://api.github.com/users/maximbaz/following{/other_user}", "gists_url": "https://api.github.com/users/maximbaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximbaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximbaz/subscriptions", "organizations_url": "https://api.github.com/users/maximbaz/orgs", "repos_url": "https://api.github.com/users/maximbaz/repos", "events_url": "https://api.github.com/users/maximbaz/events{/privacy}", "received_events_url": "https://api.github.com/users/maximbaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T10:15:04Z", "updated_at": "2018-08-07T12:28:04Z", "closed_at": "2018-08-07T12:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n\r\n```\r\n\u276f az aks get-versions --location westeurope\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/lib/python3.7/site-packages/azure/cli/__main__.py\", line 14, in <module>\r\n    import azure.cli.core.telemetry as telemetry\r\n  File \"/usr/lib/python3.7/site-packages/azure/cli/core/telemetry.py\", line 20, in <module>\r\n    import azure.cli.core.telemetry_upload as telemetry_core\r\n  File \"/usr/lib/python3.7/site-packages/azure/cli/core/telemetry_upload.py\", line 20, in <module>\r\n    from applicationinsights import TelemetryClient\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/__init__.py\", line 1, in <module>\r\n    from .TelemetryClient import TelemetryClient\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/TelemetryClient.py\", line 5, in <module>\r\n    from applicationinsights import channel\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/channel/__init__.py\", line 7, in <module>\r\n    from .TelemetryChannel import TelemetryChannel\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/channel/TelemetryChannel.py\", line 6, in <module>\r\n    from .TelemetryContext import TelemetryContext\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/channel/TelemetryContext.py\", line 4, in <module>\r\n    from applicationinsights.channel import contracts\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/channel/contracts/__init__.py\", line 7, in <module>\r\n    from .RemoteDependencyData import RemoteDependencyData\r\n  File \"/usr/lib/python3.7/site-packages/applicationinsights/channel/contracts/RemoteDependencyData.py\", line 256\r\n    def async(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nThis is because python 3.7 was recently released, and [async and await are now reserved keywords](https://docs.python.org/3/whatsnew/3.7.html).\r\n\r\nPlease also enable check for 3.7 on Travis \ud83d\ude09 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/119", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/119/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/119/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/119", "id": 346995920, "node_id": "MDU6SXNzdWUzNDY5OTU5MjA=", "number": 119, "title": "Cloud contract is not used", "user": {"login": "gugu91", "id": 5994936, "node_id": "MDQ6VXNlcjU5OTQ5MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5994936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gugu91", "html_url": "https://github.com/gugu91", "followers_url": "https://api.github.com/users/gugu91/followers", "following_url": "https://api.github.com/users/gugu91/following{/other_user}", "gists_url": "https://api.github.com/users/gugu91/gists{/gist_id}", "starred_url": "https://api.github.com/users/gugu91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gugu91/subscriptions", "organizations_url": "https://api.github.com/users/gugu91/orgs", "repos_url": "https://api.github.com/users/gugu91/repos", "events_url": "https://api.github.com/users/gugu91/events{/privacy}", "received_events_url": "https://api.github.com/users/gugu91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-02T12:46:04Z", "updated_at": "2018-10-02T08:22:09Z", "closed_at": "2018-10-02T08:22:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seems to me that TelemetryContext should have a reference to Cloud so that we could populate cloud_RoleName and cloud_RoleInstance in appInsights.\r\n\r\nNot sure if I am mistaken, in that case would be great to have an example for how to properly populate those fields.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/110", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/110/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/110/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/110", "id": 337932579, "node_id": "MDU6SXNzdWUzMzc5MzI1Nzk=", "number": 110, "title": "Setting context attributes for logging handler", "user": {"login": "janhaviagrawal", "id": 19838991, "node_id": "MDQ6VXNlcjE5ODM4OTkx", "avatar_url": "https://avatars1.githubusercontent.com/u/19838991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janhaviagrawal", "html_url": "https://github.com/janhaviagrawal", "followers_url": "https://api.github.com/users/janhaviagrawal/followers", "following_url": "https://api.github.com/users/janhaviagrawal/following{/other_user}", "gists_url": "https://api.github.com/users/janhaviagrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/janhaviagrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janhaviagrawal/subscriptions", "organizations_url": "https://api.github.com/users/janhaviagrawal/orgs", "repos_url": "https://api.github.com/users/janhaviagrawal/repos", "events_url": "https://api.github.com/users/janhaviagrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/janhaviagrawal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498774, "node_id": "MDU6TGFiZWwxNDk0OTg3NzQ=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-03T14:47:37Z", "updated_at": "2018-07-12T16:35:02Z", "closed_at": "2018-07-11T16:04:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the latest release, it is possible to set up context.properties for logging handler but it still does not allow setting other context attributes (user, operation etc) passed as channel.context.\r\nThis is because in the channel write code\r\n```\r\nlocal_context = context or self._context\r\nfor key, value in self._write_tags(local_context):\r\n    tags[key] = value\r\n```\r\nThis ignores the attributes set in the channel itself. This should be\r\n```\r\nfor prop_context in [self._context, context]:\r\n    for key, value in self._write_tags(prop_context):\r\n        tags[key] = value\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/106", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/106/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/106/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/106", "id": 336959629, "node_id": "MDU6SXNzdWUzMzY5NTk2Mjk=", "number": 106, "title": "Missing documention for setting operation id", "user": {"login": "janhaviagrawal", "id": 19838991, "node_id": "MDQ6VXNlcjE5ODM4OTkx", "avatar_url": "https://avatars1.githubusercontent.com/u/19838991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janhaviagrawal", "html_url": "https://github.com/janhaviagrawal", "followers_url": "https://api.github.com/users/janhaviagrawal/followers", "following_url": "https://api.github.com/users/janhaviagrawal/following{/other_user}", "gists_url": "https://api.github.com/users/janhaviagrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/janhaviagrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janhaviagrawal/subscriptions", "organizations_url": "https://api.github.com/users/janhaviagrawal/orgs", "repos_url": "https://api.github.com/users/janhaviagrawal/repos", "events_url": "https://api.github.com/users/janhaviagrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/janhaviagrawal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498775, "node_id": "MDU6TGFiZWwxNDk0OTg3NzU=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-29T11:12:04Z", "updated_at": "2018-07-11T05:13:12Z", "closed_at": "2018-07-11T05:13:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seems to be no documentation for setting up operation id. It would be really helpful to have some with examples for setting up correlation.\r\n```\r\ntc = TelemetryClient(instrumentation_key=instrumentation_key)\r\ntc.context.operation.id = <operation_id>\r\ntc.track_trace('Test trace')\r\ntc.flush()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/104", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/104/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/104/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/104", "id": 335897138, "node_id": "MDU6SXNzdWUzMzU4OTcxMzg=", "number": 104, "title": "Context properties of custom Channel ignored in LoggingHandler", "user": {"login": "letmaik", "id": 530988, "node_id": "MDQ6VXNlcjUzMDk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/530988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letmaik", "html_url": "https://github.com/letmaik", "followers_url": "https://api.github.com/users/letmaik/followers", "following_url": "https://api.github.com/users/letmaik/following{/other_user}", "gists_url": "https://api.github.com/users/letmaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/letmaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letmaik/subscriptions", "organizations_url": "https://api.github.com/users/letmaik/orgs", "repos_url": "https://api.github.com/users/letmaik/repos", "events_url": "https://api.github.com/users/letmaik/events{/privacy}", "received_events_url": "https://api.github.com/users/letmaik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498774, "node_id": "MDU6TGFiZWwxNDk0OTg3NzQ=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-26T16:21:11Z", "updated_at": "2018-06-28T09:33:04Z", "closed_at": "2018-06-28T09:33:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm trying to set up a LoggingHandler with a few context properties but this is impossible currently:\r\n```py\r\nimport logging\r\nfrom applicationinsights import channel\r\nfrom applicationinsights.logging import LoggingHandler\r\n\r\nchannel = channel.TelemetryChannel()\r\nchannel.context.properties['foo'] = 'bar'\r\nhandler = LoggingHandler(key, telemetry_channel=channel)\r\nlogging.basicConfig(handlers=[handler], format='%(message)s', level=logging.DEBUG)\r\n\r\nlogging.info(\"foo\") # trace does not include foo property\r\nlogging.shutdown()\r\n```\r\n\r\nThe reason this is not working is that LoggingHandler constructs a new TelemetryClient instance which then ignores the existing context from the passed channel object:\r\n```py\r\nclass TelemetryClient(object):\r\n    def __init__(self, instrumentation_key, telemetry_channel=None):\r\n        ...\r\n        self._context = channel.TelemetryContext()\r\n        self._context.instrumentation_key = instrumentation_key\r\n        self._channel = telemetry_channel or channel.TelemetryChannel()\r\n\r\n    @property\r\n    def context(self):\r\n        return self._context\r\n```\r\n\r\nShouldn't this be instead:\r\n```py\r\nclass TelemetryClient(object):\r\n    def __init__(self, instrumentation_key, telemetry_channel=None):\r\n        self._channel = telemetry_channel or channel.TelemetryChannel()\r\n        self.context.instrumentation_key = instrumentation_key\r\n\r\n    @property\r\n    def context(self):\r\n        return self._channel.context\r\n```\r\n?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/103", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/103/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/103/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/103", "id": 335849377, "node_id": "MDU6SXNzdWUzMzU4NDkzNzc=", "number": 103, "title": "Allow setting custom context properties for applicationinsights.exceptions.enable()", "user": {"login": "letmaik", "id": 530988, "node_id": "MDQ6VXNlcjUzMDk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/530988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letmaik", "html_url": "https://github.com/letmaik", "followers_url": "https://api.github.com/users/letmaik/followers", "following_url": "https://api.github.com/users/letmaik/following{/other_user}", "gists_url": "https://api.github.com/users/letmaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/letmaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letmaik/subscriptions", "organizations_url": "https://api.github.com/users/letmaik/orgs", "repos_url": "https://api.github.com/users/letmaik/repos", "events_url": "https://api.github.com/users/letmaik/events{/privacy}", "received_events_url": "https://api.github.com/users/letmaik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T14:33:41Z", "updated_at": "2018-06-28T09:32:47Z", "closed_at": "2018-06-28T09:32:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently there doesn't seem to be an easy way to use `applicationinsights.exceptions.enable()` while also sending context properties for those unhandled exceptions. Looking at the code it seems that one has to do something like the following currently (not tested):\r\n\r\n```py\r\nfrom applicationinsights import channel, TelemetryClient\r\nfrom applicationinsights.exceptions import enable\r\n\r\nchannel = channel.TelemetryChannel()\r\nclient = TelemetryClient(\"my-key\", channel)\r\nclient.context.properties[\"foo\"] = \"bar\"\r\nenable(\"my-key\", telemetry_channel=channel) # must be kw arg\r\n```\r\n\r\nI think https://github.com/Microsoft/ApplicationInsights-Python/issues/56 would help for this case as well so that the user doesn't have to deal with TelemetryChannel objects.\r\n\r\nGiven bug https://github.com/Microsoft/ApplicationInsights-Python/pull/102 I think that the above code currently wouldn't work anyway since the `track_exception` call that happens in the background doesn't get `properties` which triggers the bug where the context properties are ignored as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/100", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/100/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/100/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/100", "id": 335802825, "node_id": "MDU6SXNzdWUzMzU4MDI4MjU=", "number": 100, "title": "Add link to API docs", "user": {"login": "letmaik", "id": 530988, "node_id": "MDQ6VXNlcjUzMDk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/530988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letmaik", "html_url": "https://github.com/letmaik", "followers_url": "https://api.github.com/users/letmaik/followers", "following_url": "https://api.github.com/users/letmaik/following{/other_user}", "gists_url": "https://api.github.com/users/letmaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/letmaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letmaik/subscriptions", "organizations_url": "https://api.github.com/users/letmaik/orgs", "repos_url": "https://api.github.com/users/letmaik/repos", "events_url": "https://api.github.com/users/letmaik/events{/privacy}", "received_events_url": "https://api.github.com/users/letmaik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498774, "node_id": "MDU6TGFiZWwxNDk0OTg3NzQ=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 149498775, "node_id": "MDU6TGFiZWwxNDk0OTg3NzU=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-26T12:46:57Z", "updated_at": "2018-12-14T21:25:11Z", "closed_at": "2018-12-14T21:25:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The API docs are at https://microsoft.github.io/ApplicationInsights-Python/ but they are not discoverable, I had to craft the URL myself. It would be good if a link to that page is added somewhere, e.g. in the README.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/97", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/97/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/97/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/97", "id": 333702632, "node_id": "MDU6SXNzdWUzMzM3MDI2MzI=", "number": 97, "title": "Provide a package and update documentation for Anaconda", "user": {"login": "stansw", "id": 10059486, "node_id": "MDQ6VXNlcjEwMDU5NDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/10059486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stansw", "html_url": "https://github.com/stansw", "followers_url": "https://api.github.com/users/stansw/followers", "following_url": "https://api.github.com/users/stansw/following{/other_user}", "gists_url": "https://api.github.com/users/stansw/gists{/gist_id}", "starred_url": "https://api.github.com/users/stansw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stansw/subscriptions", "organizations_url": "https://api.github.com/users/stansw/orgs", "repos_url": "https://api.github.com/users/stansw/repos", "events_url": "https://api.github.com/users/stansw/events{/privacy}", "received_events_url": "https://api.github.com/users/stansw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-19T14:40:09Z", "updated_at": "2018-06-20T15:47:34Z", "closed_at": "2018-06-20T15:47:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to install all of my dependencies through conda. \r\n\r\n```\r\n(base) >conda install applicationinsights\r\nSolving environment: failed\r\n\r\nPackagesNotFoundError: The following packages are not available from current channels:\r\n\r\n  - applicationinsights\r\n\r\nCurrent channels:\r\n\r\n  - https://repo.anaconda.com/pkgs/main/win-64\r\n  - https://repo.anaconda.com/pkgs/main/noarch\r\n  - https://repo.anaconda.com/pkgs/free/win-64\r\n  - https://repo.anaconda.com/pkgs/free/noarch\r\n  - https://repo.anaconda.com/pkgs/r/win-64\r\n  - https://repo.anaconda.com/pkgs/r/noarch\r\n  - https://repo.anaconda.com/pkgs/pro/win-64\r\n  - https://repo.anaconda.com/pkgs/pro/noarch\r\n  - https://repo.anaconda.com/pkgs/msys2/win-64\r\n  - https://repo.anaconda.com/pkgs/msys2/noarch\r\n\r\nTo search for alternate channels that may provide the conda package you're\r\nlooking for, navigate to\r\n\r\n    https://anaconda.org\r\n\r\nand use the search bar at the top of the page.\r\n```\r\n\r\n\r\nCurrently the only conda package I found was this one, but it wasn't published by Microsoft.\r\nhttps://anaconda.org/clinicalgraphics/applicationinsights/files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/96", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/96/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/96/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/96", "id": 332543271, "node_id": "MDU6SXNzdWUzMzI1NDMyNzE=", "number": 96, "title": "role_name and role_instance not uploaded anymore", "user": {"login": "timotheeguerin", "id": 1031227, "node_id": "MDQ6VXNlcjEwMzEyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1031227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timotheeguerin", "html_url": "https://github.com/timotheeguerin", "followers_url": "https://api.github.com/users/timotheeguerin/followers", "following_url": "https://api.github.com/users/timotheeguerin/following{/other_user}", "gists_url": "https://api.github.com/users/timotheeguerin/gists{/gist_id}", "starred_url": "https://api.github.com/users/timotheeguerin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timotheeguerin/subscriptions", "organizations_url": "https://api.github.com/users/timotheeguerin/orgs", "repos_url": "https://api.github.com/users/timotheeguerin/repos", "events_url": "https://api.github.com/users/timotheeguerin/events{/privacy}", "received_events_url": "https://api.github.com/users/timotheeguerin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-14T19:58:38Z", "updated_at": "2018-06-14T20:29:03Z", "closed_at": "2018-06-14T20:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since version 0.11.4(Just tried reverting to 0.11.3 and it works) it seems like `role_name` and `role_instance` are not being passed anymore.\r\n\r\nThis is I have in the code\r\n```\r\ncontext = self.telemetry_client.context\r\ncontext.device.role_name = pool_id\r\ncontext.device.role_instance = node_id\r\n```\r\nThis is the result\r\n![image](https://user-images.githubusercontent.com/1031227/41435019-5d90cb10-6fd2-11e8-8259-e6aaaae1550d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/95", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/95/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/95/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/95", "id": 331525829, "node_id": "MDU6SXNzdWUzMzE1MjU4Mjk=", "number": 95, "title": "Causes error when used with django.contrib.syndication.views", "user": {"login": "jossingram", "id": 5364807, "node_id": "MDQ6VXNlcjUzNjQ4MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5364807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jossingram", "html_url": "https://github.com/jossingram", "followers_url": "https://api.github.com/users/jossingram/followers", "following_url": "https://api.github.com/users/jossingram/following{/other_user}", "gists_url": "https://api.github.com/users/jossingram/gists{/gist_id}", "starred_url": "https://api.github.com/users/jossingram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jossingram/subscriptions", "organizations_url": "https://api.github.com/users/jossingram/orgs", "repos_url": "https://api.github.com/users/jossingram/repos", "events_url": "https://api.github.com/users/jossingram/events{/privacy}", "received_events_url": "https://api.github.com/users/jossingram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-12T10:17:32Z", "updated_at": "2018-06-15T09:55:55Z", "closed_at": "2018-06-13T21:30:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an RSS feed in my Django app that uses 'django.contrib.syndication.views import Feed' but when Application Insights is running in the app I get this error when visiting the feed url. Django version is 1.11.13, Python 2.7.12\r\n\r\nIf I remove the middleware line for insights the feed works again.\r\n\r\n```\r\nRequest Method: | GET\r\n-- | --\r\nhttp://localhost:8000/latest/news/\r\n1.11.13\r\nAttributeError\r\n'LatestNewsFeed' object has no attribute '__name__'\r\n/usr/local/lib/python2.7/dist-packages/applicationinsights/django/middleware.py in process_view, line 175\r\n/usr/bin/python\r\n2.7.12\r\n['/code',  '/usr/local/bin',  '/usr/lib/python2.7',  '/usr/lib/python2.7/plat-x86_64-linux-gnu',  '/usr/lib/python2.7/lib-tk',  '/usr/lib/python2.7/lib-old',  '/usr/lib/python2.7/lib-dynload',  '/usr/local/lib/python2.7/dist-packages',  '/usr/lib/python2.7/dist-packages']\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/90", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/90/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/90/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/90", "id": 327627532, "node_id": "MDU6SXNzdWUzMjc2Mjc1MzI=", "number": 90, "title": "Flask Integration Not Working", "user": {"login": "adamcunnington", "id": 771940, "node_id": "MDQ6VXNlcjc3MTk0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/771940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamcunnington", "html_url": "https://github.com/adamcunnington", "followers_url": "https://api.github.com/users/adamcunnington/followers", "following_url": "https://api.github.com/users/adamcunnington/following{/other_user}", "gists_url": "https://api.github.com/users/adamcunnington/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamcunnington/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamcunnington/subscriptions", "organizations_url": "https://api.github.com/users/adamcunnington/orgs", "repos_url": "https://api.github.com/users/adamcunnington/repos", "events_url": "https://api.github.com/users/adamcunnington/events{/privacy}", "received_events_url": "https://api.github.com/users/adamcunnington/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-30T08:33:45Z", "updated_at": "2018-05-30T20:40:16Z", "closed_at": "2018-05-30T20:40:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "My understanding is that the following is all that is required to cause requests, traces (exceptions) and custom events (logs) to be sent to Application Insights:\r\napplicationinsights.flask.ext.AppInsights(flask.Flask(\"foo\"))\r\n\r\nI'm not completely clear on whether I need to be manually calling .flush() or not - please advise.\r\n\r\nEither way, I've tried:\r\napp = flask.Flask(\"foo\")\r\napp_insights = applicationinsights.flask.ext.AppInsights(app)\r\napp.logger.info(\"test\")\r\napp_insights.flush()\r\n\r\nRequests are logged but no custom events appear in app insights. No errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/89", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/89/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/89/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/89", "id": 327595366, "node_id": "MDU6SXNzdWUzMjc1OTUzNjY=", "number": 89, "title": "Deduplicate readme/description", "user": {"login": "jjjordanmsft", "id": 16109716, "node_id": "MDQ6VXNlcjE2MTA5NzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/16109716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjjordanmsft", "html_url": "https://github.com/jjjordanmsft", "followers_url": "https://api.github.com/users/jjjordanmsft/followers", "following_url": "https://api.github.com/users/jjjordanmsft/following{/other_user}", "gists_url": "https://api.github.com/users/jjjordanmsft/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjjordanmsft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjjordanmsft/subscriptions", "organizations_url": "https://api.github.com/users/jjjordanmsft/orgs", "repos_url": "https://api.github.com/users/jjjordanmsft/repos", "events_url": "https://api.github.com/users/jjjordanmsft/events{/privacy}", "received_events_url": "https://api.github.com/users/jjjordanmsft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-30T06:51:34Z", "updated_at": "2018-06-04T04:12:58Z", "closed_at": "2018-06-04T04:12:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Proposed:\r\n\r\n1. Update DESCRIPTION.rst with all the recent changes.\r\n2. Delete README.md, rename DESCRIPTION.rst => README.rst [to make github point to it by default](https://github.com/github/markup/issues/360#issuecomment-55700463)\r\n3. Update [this line](https://github.com/Microsoft/ApplicationInsights-Python/blob/master/setup.py#L8) in the package setup.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/84", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/84/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/84/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/84", "id": 321676634, "node_id": "MDU6SXNzdWUzMjE2NzY2MzQ=", "number": 84, "title": "Create contributing.md", "user": {"login": "SergeyKanzhelev", "id": 9950081, "node_id": "MDQ6VXNlcjk5NTAwODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9950081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergeyKanzhelev", "html_url": "https://github.com/SergeyKanzhelev", "followers_url": "https://api.github.com/users/SergeyKanzhelev/followers", "following_url": "https://api.github.com/users/SergeyKanzhelev/following{/other_user}", "gists_url": "https://api.github.com/users/SergeyKanzhelev/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergeyKanzhelev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergeyKanzhelev/subscriptions", "organizations_url": "https://api.github.com/users/SergeyKanzhelev/orgs", "repos_url": "https://api.github.com/users/SergeyKanzhelev/repos", "events_url": "https://api.github.com/users/SergeyKanzhelev/events{/privacy}", "received_events_url": "https://api.github.com/users/SergeyKanzhelev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-09T18:26:08Z", "updated_at": "2018-06-05T05:43:40Z", "closed_at": "2018-06-05T05:43:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- [x] how to build/test\r\n- [x] should we keep VS project files or switch to VS Code completely?\r\n- [x] how to update documentation (https://github.com/Microsoft/ApplicationInsights-Python/tree/master/doc)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/80", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/80/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/80/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/80", "id": 320857244, "node_id": "MDU6SXNzdWUzMjA4NTcyNDQ=", "number": 80, "title": "AI: Server telemetry channel was not initialized. So persistent storage is turned off. You need to call ServerTelemetryChannel.Initialize(). Currently monitoring will continue but if telemetry cannot be sent it will be dropped.", "user": {"login": "emft", "id": 34380013, "node_id": "MDQ6VXNlcjM0MzgwMDEz", "avatar_url": "https://avatars0.githubusercontent.com/u/34380013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emft", "html_url": "https://github.com/emft", "followers_url": "https://api.github.com/users/emft/followers", "following_url": "https://api.github.com/users/emft/following{/other_user}", "gists_url": "https://api.github.com/users/emft/gists{/gist_id}", "starred_url": "https://api.github.com/users/emft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emft/subscriptions", "organizations_url": "https://api.github.com/users/emft/orgs", "repos_url": "https://api.github.com/users/emft/repos", "events_url": "https://api.github.com/users/emft/events{/privacy}", "received_events_url": "https://api.github.com/users/emft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498777, "node_id": "MDU6TGFiZWwxNDk0OTg3Nzc=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-07T15:51:46Z", "updated_at": "2018-05-07T18:09:04Z", "closed_at": "2018-05-07T18:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the vanilla defaults with Django, installed as shown in the docs.  And every half hour, I get this trace in App Insight:\r\n`\r\nAI: Server telemetry channel was not initialized. So persistent storage is turned off. You need to call ServerTelemetryChannel.Initialize(). Currently monitoring will continue but if telemetry cannot be sent it will be dropped.\r\n`\r\n\r\nAs well, this trace also shows up occasionally:\r\n`\r\nAI: Performance counter is not available in the web app supported list. Counter is \\Memory\\Available Bytes\r\n`\r\n\r\nI've poked around the portal but haven't seen anything that would address this.  Getting these messages makes it seem like something is improperly configured, but like I said, I'm just using the vanilla Django defaults installed per instruction.  Please advise.  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/75", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/75/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/75/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/75", "id": 312921860, "node_id": "MDU6SXNzdWUzMTI5MjE4NjA=", "number": 75, "title": "Misleading documentation on pypi", "user": {"login": "tomjaguarpaw", "id": 1951567, "node_id": "MDQ6VXNlcjE5NTE1Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1951567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjaguarpaw", "html_url": "https://github.com/tomjaguarpaw", "followers_url": "https://api.github.com/users/tomjaguarpaw/followers", "following_url": "https://api.github.com/users/tomjaguarpaw/following{/other_user}", "gists_url": "https://api.github.com/users/tomjaguarpaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjaguarpaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjaguarpaw/subscriptions", "organizations_url": "https://api.github.com/users/tomjaguarpaw/orgs", "repos_url": "https://api.github.com/users/tomjaguarpaw/repos", "events_url": "https://api.github.com/users/tomjaguarpaw/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjaguarpaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-10T13:27:08Z", "updated_at": "2018-05-07T18:05:05Z", "closed_at": "2018-05-07T18:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "On pypi the following sentence appears\r\n\r\n> Python 2.7 and Python 3.4 are currently supported by this module.\r\n\r\nhttps://pypi.python.org/pypi/applicationinsights/0.8.0\r\n\r\nwhereas the README says\r\n\r\n> Python >=2.7 and Python >=3.4 are currently supported by this module.\r\n\r\nhttps://github.com/Microsoft/ApplicationInsights-Python\r\n\r\nThe former sentence is rather misleading.  I initially interpreted as implying that ApplicationInsights-Python is very out of date!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/66", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/66/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/66/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/66", "id": 297163709, "node_id": "MDU6SXNzdWUyOTcxNjM3MDk=", "number": 66, "title": "Add support for dependency tracking", "user": {"login": "twschiller", "id": 1879821, "node_id": "MDQ6VXNlcjE4Nzk4MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twschiller", "html_url": "https://github.com/twschiller", "followers_url": "https://api.github.com/users/twschiller/followers", "following_url": "https://api.github.com/users/twschiller/following{/other_user}", "gists_url": "https://api.github.com/users/twschiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/twschiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twschiller/subscriptions", "organizations_url": "https://api.github.com/users/twschiller/orgs", "repos_url": "https://api.github.com/users/twschiller/repos", "events_url": "https://api.github.com/users/twschiller/events{/privacy}", "received_events_url": "https://api.github.com/users/twschiller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 953612272, "node_id": "MDU6TGFiZWw5NTM2MTIyNzI=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/composite-apps", "name": "composite-apps", "color": "29d1b5", "default": false, "description": ""}, {"id": 149498774, "node_id": "MDU6TGFiZWwxNDk0OTg3NzQ=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-14T16:38:12Z", "updated_at": "2018-06-27T19:48:04Z", "closed_at": "2018-06-27T19:48:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "To help diagnose server performance issues, it's be great to add support for Application Insight's dependency tracking feature\r\n\r\nGeneral:\r\n* Fix contract for Remote Dependency Data\r\n* Add track dependency method to the telemetry client\r\n \r\nDjango Middleware:\r\n* Set the parent ID for the request being processed (see #55) \r\n* Expose the request ID somehow so that clients can set the parent ID appropriately when calling track dependency. One way to do this is to just expose a telemetry client using thread local storage with the parent ID set to the request ID. (However, I don't think using TLS is recommended by the Django team.)\r\n\r\nThese changes are all prototyped here: https://github.com/twschiller/ApplicationInsights-Python/commit/fdff3d8fca64597fd2b3e408ed8a2af77d66ce02. \r\n\r\nFor those wondering how to track their SQL/cache dependencies when using Django:\r\n* SQL: wrap the `CursorWrapper.execute` and `CursorWrapper.executemany` methods\r\n* Redis (using `django_redis`): wrap the `RedisCache.get` method, which includes both the network call and the deserialization\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/65", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/65/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/65/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/65", "id": 296465347, "node_id": "MDU6SXNzdWUyOTY0NjUzNDc=", "number": 65, "title": "Incorrect channel configuration documentation ", "user": {"login": "twschiller", "id": 1879821, "node_id": "MDQ6VXNlcjE4Nzk4MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twschiller", "html_url": "https://github.com/twschiller", "followers_url": "https://api.github.com/users/twschiller/followers", "following_url": "https://api.github.com/users/twschiller/following{/other_user}", "gists_url": "https://api.github.com/users/twschiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/twschiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twschiller/subscriptions", "organizations_url": "https://api.github.com/users/twschiller/orgs", "repos_url": "https://api.github.com/users/twschiller/repos", "events_url": "https://api.github.com/users/twschiller/events{/privacy}", "received_events_url": "https://api.github.com/users/twschiller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 953612191, "node_id": "MDU6TGFiZWw5NTM2MTIxOTE=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/channel", "name": "channel", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-12T17:45:00Z", "updated_at": "2018-12-14T21:24:34Z", "closed_at": "2018-12-14T21:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for channel configuration is incorrect:\r\n\r\n```\r\nfrom applicationinsights import TelemetryClient\r\ntc = TelemetryClient('<YOUR INSTRUMENTATION KEY GOES HERE>')\r\n# flush telemetry every 30 seconds (assuming we don't hit max_queue_item_count first)\r\ntc.channel.sender.send_interval_in_milliseconds = 30 * 1000\r\n```\r\n\r\nThe client created by TelemetryClient is a synchronous client, so there's no notion of `send_interval_in_milliseconds`. Additionally, `send_interval_in_milliseconds` is not a property of `SynchronousClient`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/61", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/61/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/61/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/61", "id": 270139669, "node_id": "MDU6SXNzdWUyNzAxMzk2Njk=", "number": 61, "title": "Error processing response in Django middleware when another request middleware short-circuits", "user": {"login": "twschiller", "id": 1879821, "node_id": "MDQ6VXNlcjE4Nzk4MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twschiller", "html_url": "https://github.com/twschiller", "followers_url": "https://api.github.com/users/twschiller/followers", "following_url": "https://api.github.com/users/twschiller/following{/other_user}", "gists_url": "https://api.github.com/users/twschiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/twschiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twschiller/subscriptions", "organizations_url": "https://api.github.com/users/twschiller/orgs", "repos_url": "https://api.github.com/users/twschiller/repos", "events_url": "https://api.github.com/users/twschiller/events{/privacy}", "received_events_url": "https://api.github.com/users/twschiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-31T22:31:46Z", "updated_at": "2018-03-15T00:16:07Z", "closed_at": "2018-03-15T00:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Django insights middleware crashes in `process_response` when a middleware short-circuits when processing the request because the `process_request` hasn't be run.\r\n\r\nFor example, the `CommonMiddleware` will short-circuit to affix a missing trailing slash with a 301 Moved Permanently response if the client accesses `/admin` when `/admin/` is the registered URL\r\n\r\n```\r\nMIDDLEWARE_CLASSES = [\r\n    # ...\r\n   'django.middleware.common.CommonMiddleware',\r\n    # ...\r\n   'applicationinsights.django.ApplicationInsightsMiddleware'\r\n]\r\n```\r\n\r\nThe reasonable solution is probably to check for the presence of the `appinsights` attribute in the `process_response` method. The method can submit the event without the `duration` field set, if the `appinsights` attribute is missing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/59", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/59/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/59/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/59", "id": 265014732, "node_id": "MDU6SXNzdWUyNjUwMTQ3MzI=", "number": 59, "title": "Exception thrown when Django auth middleware is not used", "user": {"login": "deamontg", "id": 8693590, "node_id": "MDQ6VXNlcjg2OTM1OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8693590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deamontg", "html_url": "https://github.com/deamontg", "followers_url": "https://api.github.com/users/deamontg/followers", "following_url": "https://api.github.com/users/deamontg/following{/other_user}", "gists_url": "https://api.github.com/users/deamontg/gists{/gist_id}", "starred_url": "https://api.github.com/users/deamontg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deamontg/subscriptions", "organizations_url": "https://api.github.com/users/deamontg/orgs", "repos_url": "https://api.github.com/users/deamontg/repos", "events_url": "https://api.github.com/users/deamontg/events{/privacy}", "received_events_url": "https://api.github.com/users/deamontg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-12T16:57:42Z", "updated_at": "2018-03-15T00:16:31Z", "closed_at": "2017-10-13T00:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Scenario**\r\nI am writing several Django based APIs that utilize Application Insights for logging. These APIs do not have Django's built-in authentication, so the authentication middleware is not used.\r\n\r\n**The problem**\r\nThis package does not take this into account, so an exception is thrown when processing the request because `request.user` is not set.\r\n\r\n**Solution**\r\nI made the necessary code change to allow for this behavior. Here is the pull request: #58 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/51", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/51/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/51/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/51", "id": 255458805, "node_id": "MDU6SXNzdWUyNTU0NTg4MDU=", "number": 51, "title": "ApplicationInsightsMiddleware.process_template_response didn't return an HttpResponse object.", "user": {"login": "dopic", "id": 937765, "node_id": "MDQ6VXNlcjkzNzc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/937765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dopic", "html_url": "https://github.com/dopic", "followers_url": "https://api.github.com/users/dopic/followers", "following_url": "https://api.github.com/users/dopic/following{/other_user}", "gists_url": "https://api.github.com/users/dopic/gists{/gist_id}", "starred_url": "https://api.github.com/users/dopic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dopic/subscriptions", "organizations_url": "https://api.github.com/users/dopic/orgs", "repos_url": "https://api.github.com/users/dopic/repos", "events_url": "https://api.github.com/users/dopic/events{/privacy}", "received_events_url": "https://api.github.com/users/dopic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-06T02:05:07Z", "updated_at": "2017-09-07T00:54:53Z", "closed_at": "2017-09-07T00:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nWhen my response has a render() method (Django's TemplateResponse), it throws the following exception:\r\n\r\n**ApplicationInsightsMiddleware.process_template_response didn't return an HttpResponse object. It returned None instead.**\r\n\r\nIf I return the response object in method process_template_response from django's middleware, it works fine.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/46", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/46/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/46/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/46", "id": 251153838, "node_id": "MDU6SXNzdWUyNTExNTM4Mzg=", "number": 46, "title": "process_template_response must return an HttpResponse.", "user": {"login": "allieus", "id": 13359, "node_id": "MDQ6VXNlcjEzMzU5", "avatar_url": "https://avatars1.githubusercontent.com/u/13359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allieus", "html_url": "https://github.com/allieus", "followers_url": "https://api.github.com/users/allieus/followers", "following_url": "https://api.github.com/users/allieus/following{/other_user}", "gists_url": "https://api.github.com/users/allieus/gists{/gist_id}", "starred_url": "https://api.github.com/users/allieus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allieus/subscriptions", "organizations_url": "https://api.github.com/users/allieus/orgs", "repos_url": "https://api.github.com/users/allieus/repos", "events_url": "https://api.github.com/users/allieus/events{/privacy}", "received_events_url": "https://api.github.com/users/allieus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-18T06:43:44Z", "updated_at": "2017-09-07T00:55:19Z", "closed_at": "2017-08-23T23:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "function \"process_template_response\" must return an HttpResponse. The code below returns None.\r\n\r\nError Point : https://github.com/Microsoft/ApplicationInsights-Python/blob/master/applicationinsights/django/middleware.py#L215\r\n\r\nRef django code : https://github.com/django/django/blob/master/django/core/handlers/base.py#L150\r\n\r\nHere's what you can change:\r\n\r\n```python\r\ndef process_template_response(self, request, response):\r\n    if hasattr(request, 'appinsights') and hasattr(response, 'template_name'):\r\n        data = request.appinsights.request\r\n        data.properties['template_name'] = response.template_name\r\n\r\n    return response  # FIX POINT\r\n```\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/43", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/43/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/43/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/43", "id": 249878944, "node_id": "MDU6SXNzdWUyNDk4Nzg5NDQ=", "number": 43, "title": "django.core.exceptions.ImproperlyConfigured", "user": {"login": "bjomi", "id": 403149, "node_id": "MDQ6VXNlcjQwMzE0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/403149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjomi", "html_url": "https://github.com/bjomi", "followers_url": "https://api.github.com/users/bjomi/followers", "following_url": "https://api.github.com/users/bjomi/following{/other_user}", "gists_url": "https://api.github.com/users/bjomi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjomi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjomi/subscriptions", "organizations_url": "https://api.github.com/users/bjomi/orgs", "repos_url": "https://api.github.com/users/bjomi/repos", "events_url": "https://api.github.com/users/bjomi/events{/privacy}", "received_events_url": "https://api.github.com/users/bjomi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-13T15:02:02Z", "updated_at": "2018-06-03T07:28:54Z", "closed_at": "2018-06-03T07:28:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I add the django middleware for application insights I get the following error:\r\n\r\ndjango.core.exceptions.ImproperlyConfigured: WSGI application 'projectile.wsgi.application' could not be loaded; Error importing module: 'No module named django'\r\n\r\nAs soon as I comment out the middleware the exception goes away. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/36", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/36/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/36/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/36", "id": 226786429, "node_id": "MDU6SXNzdWUyMjY3ODY0Mjk=", "number": 36, "title": "Examples not working", "user": {"login": "helger", "id": 648332, "node_id": "MDQ6VXNlcjY0ODMzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/648332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helger", "html_url": "https://github.com/helger", "followers_url": "https://api.github.com/users/helger/followers", "following_url": "https://api.github.com/users/helger/following{/other_user}", "gists_url": "https://api.github.com/users/helger/gists{/gist_id}", "starred_url": "https://api.github.com/users/helger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helger/subscriptions", "organizations_url": "https://api.github.com/users/helger/orgs", "repos_url": "https://api.github.com/users/helger/repos", "events_url": "https://api.github.com/users/helger/events{/privacy}", "received_events_url": "https://api.github.com/users/helger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-06T16:50:32Z", "updated_at": "2018-06-18T02:42:00Z", "closed_at": "2018-06-03T07:26:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following examples from the README do not see to work:\r\n\r\n- Basic logging configuration (first option)\r\n- Basic logging configuration (second option)\r\n\r\nThere are no errors but no data is being logged on Application Insights.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/32", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/32/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/32/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/32", "id": 221079723, "node_id": "MDU6SXNzdWUyMjEwNzk3MjM=", "number": 32, "title": "Wheel support", "user": {"login": "kevin-brown", "id": 1991850, "node_id": "MDQ6VXNlcjE5OTE4NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1991850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevin-brown", "html_url": "https://github.com/kevin-brown", "followers_url": "https://api.github.com/users/kevin-brown/followers", "following_url": "https://api.github.com/users/kevin-brown/following{/other_user}", "gists_url": "https://api.github.com/users/kevin-brown/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevin-brown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevin-brown/subscriptions", "organizations_url": "https://api.github.com/users/kevin-brown/orgs", "repos_url": "https://api.github.com/users/kevin-brown/repos", "events_url": "https://api.github.com/users/kevin-brown/events{/privacy}", "received_events_url": "https://api.github.com/users/kevin-brown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-11T21:03:01Z", "updated_at": "2018-06-03T07:26:24Z", "closed_at": "2018-06-03T07:26:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pythonwheels.com/\r\n\r\nRight now, only the `tar.gz` file is being distributed on PyPI for [applicationinsights](https://pypi.python.org/pypi/applicationinsights), which isn't _that much_ of an issue, but it does add some time to installing the package.\r\n\r\nThis package should be compatible with the Wheel format, considering it doesn't appear to have any C dependencies and it is compatible with both Python 2 and 3. As a result, you should only need to generate a universal wheel and then everyone (on all systems) will get the ability to install applicationinsights with just the wheel, without having to do any extra work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/29", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/29/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/29/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/29", "id": 216146128, "node_id": "MDU6SXNzdWUyMTYxNDYxMjg=", "number": 29, "title": "No reaction on the portal, when using this library", "user": {"login": "amitbend", "id": 11259265, "node_id": "MDQ6VXNlcjExMjU5MjY1", "avatar_url": "https://avatars2.githubusercontent.com/u/11259265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amitbend", "html_url": "https://github.com/amitbend", "followers_url": "https://api.github.com/users/amitbend/followers", "following_url": "https://api.github.com/users/amitbend/following{/other_user}", "gists_url": "https://api.github.com/users/amitbend/gists{/gist_id}", "starred_url": "https://api.github.com/users/amitbend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amitbend/subscriptions", "organizations_url": "https://api.github.com/users/amitbend/orgs", "repos_url": "https://api.github.com/users/amitbend/repos", "events_url": "https://api.github.com/users/amitbend/events{/privacy}", "received_events_url": "https://api.github.com/users/amitbend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-22T17:22:00Z", "updated_at": "2018-05-09T18:32:21Z", "closed_at": "2018-05-09T18:32:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a flask app on Azure,\r\nI opened a new generic application insights (on a different subscription)\r\n\r\nI'm trying to send exceptions with this method\r\n`\r\nimport logging\r\nfrom applicationinsights.logging import enable\r\n`\r\n`\r\nenable(<YOUR INSTRUMENTATION KEY GOES HERE>)\r\nraise Exception('Some exception')\r\nlogging.error('This is a message')\r\n`\r\n\r\nbut i can't see anything on the dashboard\r\n\r\nI tried also the other apporach\r\n`from applicationinsights import TelemetryClient\r\ntc = TelemetryClient('<YOUR INSTRUMENTATION KEY GOES HERE>')\r\ntry:\r\n    raise Exception('blah')\r\nexcept:\r\n    tc.track_exception()`\r\n\r\nbut still nothing.\r\n\r\nI don't get any errors on my python script as well. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/23", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/23/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/23/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/23", "id": 201623038, "node_id": "MDU6SXNzdWUyMDE2MjMwMzg=", "number": 23, "title": "A broken way to Iterate dict in TelemetryChannel", "user": {"login": "silencev", "id": 24366323, "node_id": "MDQ6VXNlcjI0MzY2MzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/24366323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silencev", "html_url": "https://github.com/silencev", "followers_url": "https://api.github.com/users/silencev/followers", "following_url": "https://api.github.com/users/silencev/following{/other_user}", "gists_url": "https://api.github.com/users/silencev/gists{/gist_id}", "starred_url": "https://api.github.com/users/silencev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silencev/subscriptions", "organizations_url": "https://api.github.com/users/silencev/orgs", "repos_url": "https://api.github.com/users/silencev/repos", "events_url": "https://api.github.com/users/silencev/events{/privacy}", "received_events_url": "https://api.github.com/users/silencev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-18T16:28:47Z", "updated_at": "2017-08-18T04:12:14Z", "closed_at": "2017-08-18T04:12:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[TelemetryChannel.py](https://github.com/Microsoft/ApplicationInsights-Python/blob/master/applicationinsights/channel/TelemetryChannel.py) line 104\r\n```python\r\n            for key, value in local_context.properties\r\n                if key not in properties:\r\n                    properties[key] = value\r\n```\r\nPython will complain too many values to unpack", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/19", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/19/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/19/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/19", "id": 178986797, "node_id": "MDU6SXNzdWUxNzg5ODY3OTc=", "number": 19, "title": "Test suite is broken for Python 3.x", "user": {"login": "irl", "id": 1208651, "node_id": "MDQ6VXNlcjEyMDg2NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1208651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irl", "html_url": "https://github.com/irl", "followers_url": "https://api.github.com/users/irl/followers", "following_url": "https://api.github.com/users/irl/following{/other_user}", "gists_url": "https://api.github.com/users/irl/gists{/gist_id}", "starred_url": "https://api.github.com/users/irl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irl/subscriptions", "organizations_url": "https://api.github.com/users/irl/orgs", "repos_url": "https://api.github.com/users/irl/repos", "events_url": "https://api.github.com/users/irl/events{/privacy}", "received_events_url": "https://api.github.com/users/irl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-23T22:29:30Z", "updated_at": "2018-05-09T06:03:59Z", "closed_at": "2018-05-09T06:03:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The module `test.test_support` exists only in Python 2. This was renamed to `test.support` in Python 3. I am shipping the following patch in the Debian package for this module:\n\n```\nDescription: Use test.support if Python 3 to enable test suite on Python 3\nAuthor: Iain R. Learmonth <irl@debian.org>\nLast-Update: 2016-09-23\n\n---\n--- a/tests/applicationinsights_tests/TestTelemetryClient.py\n+++ b/tests/applicationinsights_tests/TestTelemetryClient.py\n@@ -1,10 +1,15 @@\n+import sys\n+import os\n+import os.path\n import unittest\n import inspect\n import json\n\n-from test import test_support\n+if sys.version_info < (3, 0):\n+    from test import test_support\n+else:\n+    from test import support as test_support\n\n-import sys, os, os.path\n rootDirectory = os.path.join(os.path.dirname(os.path.realpath(__file__)), '..', '..')\n if rootDirectory not in sys.path:\n     sys.path.append(rootDirectory)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/18", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/18/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/18/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/18", "id": 170717751, "node_id": "MDU6SXNzdWUxNzA3MTc3NTE=", "number": 18, "title": "Id property in telemetry context not submitted", "user": {"login": "marcelkieser", "id": 19962677, "node_id": "MDQ6VXNlcjE5OTYyNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19962677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelkieser", "html_url": "https://github.com/marcelkieser", "followers_url": "https://api.github.com/users/marcelkieser/followers", "following_url": "https://api.github.com/users/marcelkieser/following{/other_user}", "gists_url": "https://api.github.com/users/marcelkieser/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelkieser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelkieser/subscriptions", "organizations_url": "https://api.github.com/users/marcelkieser/orgs", "repos_url": "https://api.github.com/users/marcelkieser/repos", "events_url": "https://api.github.com/users/marcelkieser/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelkieser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-11T18:48:32Z", "updated_at": "2018-05-10T15:33:10Z", "closed_at": "2018-05-10T15:33:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the documentation you set up the telemetry context in the following way and pass an id to the application object:\n\n```\nfrom applicationinsights import TelemetryClient\ntc = TelemetryClient('<YOUR INSTRUMENTATION KEY GOES HERE>')\ntc.context.application.id = 'My application'\ntc.context.application.ver = '1.2.3'\n```\n\nBut as only defined keys are written in the `Utils._write_complex_object(...)` method and the _id_ property is not defined there it will not be transmitted:\n\n```\nclass Application(object):\n    \"\"\"Data contract class for type Application.\n    \"\"\"\n    _defaults = collections.OrderedDict([\n        ('ai.application.ver', None)\n    ])\n...\n   def write(self):\n        \"\"\"Writes the contents of this object and returns the content as a dict object.\n\n        Returns:\n            (dict). the object that represents the same data as the current instance.\n        \"\"\"\n        return _write_complex_object(self._defaults, self._values)\n...\ndef _write_complex_object(defaults, values):\n    output = collections.OrderedDict()\n    for key in defaults.keys():\n        default = defaults[key]\n        if key in values:\n```\n\nIs the documentation wrong or is the _id_ property missing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/17", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/17/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/17/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/17", "id": 169962164, "node_id": "MDU6SXNzdWUxNjk5NjIxNjQ=", "number": 17, "title": "Custom event isn't shown in portal", "user": {"login": "qin-nz", "id": 6998071, "node_id": "MDQ6VXNlcjY5OTgwNzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6998071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qin-nz", "html_url": "https://github.com/qin-nz", "followers_url": "https://api.github.com/users/qin-nz/followers", "following_url": "https://api.github.com/users/qin-nz/following{/other_user}", "gists_url": "https://api.github.com/users/qin-nz/gists{/gist_id}", "starred_url": "https://api.github.com/users/qin-nz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qin-nz/subscriptions", "organizations_url": "https://api.github.com/users/qin-nz/orgs", "repos_url": "https://api.github.com/users/qin-nz/repos", "events_url": "https://api.github.com/users/qin-nz/events{/privacy}", "received_events_url": "https://api.github.com/users/qin-nz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-08T16:11:04Z", "updated_at": "2016-12-19T01:27:06Z", "closed_at": "2016-12-19T01:27:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I try to use the library to track event.\nI just try following code with my instrumentation key.\n\n```\nfrom applicationinsights import TelemetryClient\ntc = TelemetryClient('<YOUR INSTRUMENTATION KEY GOES HERE>')\ntc.track_event('Test event')\ntc.flush()\n```\n\n![image](https://cloud.githubusercontent.com/assets/6998071/17486938/5631822c-5dc5-11e6-9ce8-a7e56fe35546.png)\n\nI won't see anything from azure portal.\n![image](https://cloud.githubusercontent.com/assets/6998071/17487082/e5fdbbfa-5dc5-11e6-94c1-35c743c8d94f.png)\n\nI'm not sure whether the data was send to the portal.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/15", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/15/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/15/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/15", "id": 71940507, "node_id": "MDU6SXNzdWU3MTk0MDUwNw==", "number": 15, "title": "Logging isn't sent", "user": {"login": "lezi226", "id": 11544177, "node_id": "MDQ6VXNlcjExNTQ0MTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/11544177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lezi226", "html_url": "https://github.com/lezi226", "followers_url": "https://api.github.com/users/lezi226/followers", "following_url": "https://api.github.com/users/lezi226/following{/other_user}", "gists_url": "https://api.github.com/users/lezi226/gists{/gist_id}", "starred_url": "https://api.github.com/users/lezi226/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lezi226/subscriptions", "organizations_url": "https://api.github.com/users/lezi226/orgs", "repos_url": "https://api.github.com/users/lezi226/repos", "events_url": "https://api.github.com/users/lezi226/events{/privacy}", "received_events_url": "https://api.github.com/users/lezi226/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-29T17:44:52Z", "updated_at": "2019-08-19T19:03:30Z", "closed_at": "2015-05-02T06:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I tried to using this library to send logging, it never shown in the azure portal. \nBut if I invoke LoggingHandler.flush() explicitly, the logging will be shown in portal.\n\nThe question is how to make the logging sending to server without explicitly invoking flush()?\nFrom code, looks like there is 1 minute timer in AsynchronousSender.py, but I tried to wait for 1 minute too, still not work.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/12", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/12/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/12/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/12", "id": 56572497, "node_id": "MDU6SXNzdWU1NjU3MjQ5Nw==", "number": 12, "title": "track_request is not working", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498772, "node_id": "MDU6TGFiZWwxNDk0OTg3NzI=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-04T19:10:12Z", "updated_at": "2015-02-19T04:50:25Z", "closed_at": "2015-02-19T04:50:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've been trying out `WSGIApplication` and I'm not seeing any request messages being tracked. If I replace the call to `track_request` with `track_event` and make a string out of all the contents, then it comes through fine.\n\nIt may just be that AppInsights isn't running well right now (neither is Azure storage...), but simple events seems to be coming through eventually. Is there possibly something failing during serialization or not matching what the service expects and being rejected?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/8", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/8/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/8/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/8", "id": 54409408, "node_id": "MDU6SXNzdWU1NDQwOTQwOA==", "number": 8, "title": "exceptions.enable() not sending events?", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "BogdanBe", "id": 9849850, "node_id": "MDQ6VXNlcjk4NDk4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9849850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BogdanBe", "html_url": "https://github.com/BogdanBe", "followers_url": "https://api.github.com/users/BogdanBe/followers", "following_url": "https://api.github.com/users/BogdanBe/following{/other_user}", "gists_url": "https://api.github.com/users/BogdanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BogdanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BogdanBe/subscriptions", "organizations_url": "https://api.github.com/users/BogdanBe/orgs", "repos_url": "https://api.github.com/users/BogdanBe/repos", "events_url": "https://api.github.com/users/BogdanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/BogdanBe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BogdanBe", "id": 9849850, "node_id": "MDQ6VXNlcjk4NDk4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9849850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BogdanBe", "html_url": "https://github.com/BogdanBe", "followers_url": "https://api.github.com/users/BogdanBe/followers", "following_url": "https://api.github.com/users/BogdanBe/following{/other_user}", "gists_url": "https://api.github.com/users/BogdanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BogdanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BogdanBe/subscriptions", "organizations_url": "https://api.github.com/users/BogdanBe/orgs", "repos_url": "https://api.github.com/users/BogdanBe/repos", "events_url": "https://api.github.com/users/BogdanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/BogdanBe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-01-15T03:45:30Z", "updated_at": "2015-01-21T16:22:02Z", "closed_at": "2015-01-21T03:22:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've been trying the unhandled exception filter and it doesn't seem to be sending events.\n\nMy code is roughly:\n\n```\n>>> from applicationinsights.exceptions import enable\n>>> enable(\"my-key-goes-here\")\n>>> 1 / 0\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nZeroDivisionError: division by zero\n```\n\nThere's a visible pause before the exception message appears, which I assume is the flush() call in the handler, but the messages never appear in the portal. (Adding trace messages also shows that the handler is being called, but I didn't look any deeper than that.)\n\nBy contrast, if I create a client with the same key and call `tc.track_exception()` within an except block, the message appears in the portal in less than a minute.\n\n(Using Python 3.4.2)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/7", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/7/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/7/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/7", "id": 54408576, "node_id": "MDU6SXNzdWU1NDQwODU3Ng==", "number": 7, "title": "TelemetryClient constructor taking instrumentation key?", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498774, "node_id": "MDU6TGFiZWwxNDk0OTg3NzQ=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": {"login": "BogdanBe", "id": 9849850, "node_id": "MDQ6VXNlcjk4NDk4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9849850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BogdanBe", "html_url": "https://github.com/BogdanBe", "followers_url": "https://api.github.com/users/BogdanBe/followers", "following_url": "https://api.github.com/users/BogdanBe/following{/other_user}", "gists_url": "https://api.github.com/users/BogdanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BogdanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BogdanBe/subscriptions", "organizations_url": "https://api.github.com/users/BogdanBe/orgs", "repos_url": "https://api.github.com/users/BogdanBe/repos", "events_url": "https://api.github.com/users/BogdanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/BogdanBe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BogdanBe", "id": 9849850, "node_id": "MDQ6VXNlcjk4NDk4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9849850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BogdanBe", "html_url": "https://github.com/BogdanBe", "followers_url": "https://api.github.com/users/BogdanBe/followers", "following_url": "https://api.github.com/users/BogdanBe/following{/other_user}", "gists_url": "https://api.github.com/users/BogdanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BogdanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BogdanBe/subscriptions", "organizations_url": "https://api.github.com/users/BogdanBe/orgs", "repos_url": "https://api.github.com/users/BogdanBe/repos", "events_url": "https://api.github.com/users/BogdanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/BogdanBe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-01-15T03:28:46Z", "updated_at": "2015-01-21T13:46:06Z", "closed_at": "2015-01-21T13:46:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice to be able to construct a TelemetryClient with just a key, rather than having to remember about setting it via context.\n\n```\ntc = TelemetryClient('12345678-1234-1234-1234567890')\n```\n\nSince the first parameter can currently only be a TelemetryChannel, it seems easy enough to test for that type.\n\nMaybe there's some reason why it makes sense to disallow this, but I can't think of it myself.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/6", "repository_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python", "labels_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/6/comments", "events_url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/issues/6/events", "html_url": "https://github.com/microsoft/ApplicationInsights-Python/issues/6", "id": 54408428, "node_id": "MDU6SXNzdWU1NDQwODQyOA==", "number": 6, "title": "Description is not rendered correctly on PyPI", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149498772, "node_id": "MDU6TGFiZWwxNDk0OTg3NzI=", "url": "https://api.github.com/repos/microsoft/ApplicationInsights-Python/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": {"login": "BogdanBe", "id": 9849850, "node_id": "MDQ6VXNlcjk4NDk4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9849850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BogdanBe", "html_url": "https://github.com/BogdanBe", "followers_url": "https://api.github.com/users/BogdanBe/followers", "following_url": "https://api.github.com/users/BogdanBe/following{/other_user}", "gists_url": "https://api.github.com/users/BogdanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BogdanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BogdanBe/subscriptions", "organizations_url": "https://api.github.com/users/BogdanBe/orgs", "repos_url": "https://api.github.com/users/BogdanBe/repos", "events_url": "https://api.github.com/users/BogdanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/BogdanBe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BogdanBe", "id": 9849850, "node_id": "MDQ6VXNlcjk4NDk4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9849850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BogdanBe", "html_url": "https://github.com/BogdanBe", "followers_url": "https://api.github.com/users/BogdanBe/followers", "following_url": "https://api.github.com/users/BogdanBe/following{/other_user}", "gists_url": "https://api.github.com/users/BogdanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BogdanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BogdanBe/subscriptions", "organizations_url": "https://api.github.com/users/BogdanBe/orgs", "repos_url": "https://api.github.com/users/BogdanBe/repos", "events_url": "https://api.github.com/users/BogdanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/BogdanBe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-01-15T03:25:46Z", "updated_at": "2015-01-21T13:46:16Z", "closed_at": "2015-01-21T13:46:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The PyPI page is not rendering the long description correctly. This normally happens because of a markup error somewhere in the description, and PyPI does not help.\n\nThe [distutils docs](https://docs.python.org/3/distutils/packageindex.html#pypi-package-display) suggest a way to check for markup errors.\n", "performed_via_github_app": null, "score": 1.0}]}