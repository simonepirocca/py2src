{"total_count": 14, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/59", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/59/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/59/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/59", "id": 659999778, "node_id": "MDU6SXNzdWU2NTk5OTk3Nzg=", "number": 59, "title": "tests and examples are distributed in wheels and installed", "user": {"login": "McSinyx", "id": 13689192, "node_id": "MDQ6VXNlcjEzNjg5MTky", "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McSinyx", "html_url": "https://github.com/McSinyx", "followers_url": "https://api.github.com/users/McSinyx/followers", "following_url": "https://api.github.com/users/McSinyx/following{/other_user}", "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions", "organizations_url": "https://api.github.com/users/McSinyx/orgs", "repos_url": "https://api.github.com/users/McSinyx/repos", "events_url": "https://api.github.com/users/McSinyx/events{/privacy}", "received_events_url": "https://api.github.com/users/McSinyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pavdmyt", "id": 10200820, "node_id": "MDQ6VXNlcjEwMjAwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10200820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavdmyt", "html_url": "https://github.com/pavdmyt", "followers_url": "https://api.github.com/users/pavdmyt/followers", "following_url": "https://api.github.com/users/pavdmyt/following{/other_user}", "gists_url": "https://api.github.com/users/pavdmyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavdmyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavdmyt/subscriptions", "organizations_url": "https://api.github.com/users/pavdmyt/orgs", "repos_url": "https://api.github.com/users/pavdmyt/repos", "events_url": "https://api.github.com/users/pavdmyt/events{/privacy}", "received_events_url": "https://api.github.com/users/pavdmyt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pavdmyt", "id": 10200820, "node_id": "MDQ6VXNlcjEwMjAwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10200820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavdmyt", "html_url": "https://github.com/pavdmyt", "followers_url": "https://api.github.com/users/pavdmyt/followers", "following_url": "https://api.github.com/users/pavdmyt/following{/other_user}", "gists_url": "https://api.github.com/users/pavdmyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavdmyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavdmyt/subscriptions", "organizations_url": "https://api.github.com/users/pavdmyt/orgs", "repos_url": "https://api.github.com/users/pavdmyt/repos", "events_url": "https://api.github.com/users/pavdmyt/events{/privacy}", "received_events_url": "https://api.github.com/users/pavdmyt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-18T08:17:15Z", "updated_at": "2020-07-21T07:30:04Z", "closed_at": "2020-07-21T06:34:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am not familiar with Poetry but somehow the following lines cause `examples` and `tests` to be distributed in wheels:\r\n\r\nhttps://github.com/pavdmyt/yaspin/blob/fe14dc5e619fa204c9c8eea6e2ac603a7bb3d359/pyproject.toml#L17-L18", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/57", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/57/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/57/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/57", "id": 653700661, "node_id": "MDU6SXNzdWU2NTM3MDA2NjE=", "number": 57, "title": "passing variable in the shortlink", "user": {"login": "therealelyayo", "id": 60529195, "node_id": "MDQ6VXNlcjYwNTI5MTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/60529195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealelyayo", "html_url": "https://github.com/therealelyayo", "followers_url": "https://api.github.com/users/therealelyayo/followers", "following_url": "https://api.github.com/users/therealelyayo/following{/other_user}", "gists_url": "https://api.github.com/users/therealelyayo/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealelyayo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealelyayo/subscriptions", "organizations_url": "https://api.github.com/users/therealelyayo/orgs", "repos_url": "https://api.github.com/users/therealelyayo/repos", "events_url": "https://api.github.com/users/therealelyayo/events{/privacy}", "received_events_url": "https://api.github.com/users/therealelyayo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 738897456, "node_id": "MDU6TGFiZWw3Mzg4OTc0NTY=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pavdmyt", "id": 10200820, "node_id": "MDQ6VXNlcjEwMjAwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10200820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavdmyt", "html_url": "https://github.com/pavdmyt", "followers_url": "https://api.github.com/users/pavdmyt/followers", "following_url": "https://api.github.com/users/pavdmyt/following{/other_user}", "gists_url": "https://api.github.com/users/pavdmyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavdmyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavdmyt/subscriptions", "organizations_url": "https://api.github.com/users/pavdmyt/orgs", "repos_url": "https://api.github.com/users/pavdmyt/repos", "events_url": "https://api.github.com/users/pavdmyt/events{/privacy}", "received_events_url": "https://api.github.com/users/pavdmyt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pavdmyt", "id": 10200820, "node_id": "MDQ6VXNlcjEwMjAwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10200820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavdmyt", "html_url": "https://github.com/pavdmyt", "followers_url": "https://api.github.com/users/pavdmyt/followers", "following_url": "https://api.github.com/users/pavdmyt/following{/other_user}", "gists_url": "https://api.github.com/users/pavdmyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavdmyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavdmyt/subscriptions", "organizations_url": "https://api.github.com/users/pavdmyt/orgs", "repos_url": "https://api.github.com/users/pavdmyt/repos", "events_url": "https://api.github.com/users/pavdmyt/events{/privacy}", "received_events_url": "https://api.github.com/users/pavdmyt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-09T01:47:59Z", "updated_at": "2020-07-17T08:10:58Z", "closed_at": "2020-07-17T08:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "would it be possible to append ?email=jackson@be.com to these redirect and then using the domain of the email to redirect somewhere ,\r\nexample?email=t@gmail.com would goto gmail.com\r\n\r\nand t@yahoo.com shuld got yahoo.com\r\n\r\nwould that be possible", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/45", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/45/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/45/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/45", "id": 610755991, "node_id": "MDU6SXNzdWU2MTA3NTU5OTE=", "number": 45, "title": "redirected output has spinners", "user": {"login": "coreybrett", "id": 4440265, "node_id": "MDQ6VXNlcjQ0NDAyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4440265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coreybrett", "html_url": "https://github.com/coreybrett", "followers_url": "https://api.github.com/users/coreybrett/followers", "following_url": "https://api.github.com/users/coreybrett/following{/other_user}", "gists_url": "https://api.github.com/users/coreybrett/gists{/gist_id}", "starred_url": "https://api.github.com/users/coreybrett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coreybrett/subscriptions", "organizations_url": "https://api.github.com/users/coreybrett/orgs", "repos_url": "https://api.github.com/users/coreybrett/repos", "events_url": "https://api.github.com/users/coreybrett/events{/privacy}", "received_events_url": "https://api.github.com/users/coreybrett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T13:39:27Z", "updated_at": "2020-05-07T11:18:19Z", "closed_at": "2020-05-07T11:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "My redirected output has...\r\n\r\n`\u001b[33m\u280b\u001b[0m \u001b[K\r\n\u001b[33m\u2819\u001b[0m \u001b[K\r\n\u001b[33m\u2839\u001b[0m \u001b[K\r\n\u001b[33m\u2838\u001b[0m \u001b[K\r\n\u001b[33m\u283c\u001b[0m \u001b[K\r\n\u001b[33m\u2834\u001b[0m \u001b[K\r\n\u001b[33m\u2826\u001b[0m \u001b[K\r\n\u001b[33m\u2827\u001b[0m \u001b[K\r\n\u001b[33m\u2807\u001b[0m \u001b[K`\r\n\r\nIs there anyway to get rid of that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/44", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/44/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/44/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/44", "id": 600604793, "node_id": "MDU6SXNzdWU2MDA2MDQ3OTM=", "number": 44, "title": "Unittesting custom signal handlers", "user": {"login": "justinlulejian", "id": 9301642, "node_id": "MDQ6VXNlcjkzMDE2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9301642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinlulejian", "html_url": "https://github.com/justinlulejian", "followers_url": "https://api.github.com/users/justinlulejian/followers", "following_url": "https://api.github.com/users/justinlulejian/following{/other_user}", "gists_url": "https://api.github.com/users/justinlulejian/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinlulejian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinlulejian/subscriptions", "organizations_url": "https://api.github.com/users/justinlulejian/orgs", "repos_url": "https://api.github.com/users/justinlulejian/repos", "events_url": "https://api.github.com/users/justinlulejian/events{/privacy}", "received_events_url": "https://api.github.com/users/justinlulejian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 738897456, "node_id": "MDU6TGFiZWw3Mzg4OTc0NTY=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T21:40:30Z", "updated_at": "2020-04-24T10:07:45Z", "closed_at": "2020-04-24T10:07:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have code that handles keyboard interrupts with ctrl+c:\r\n\r\n``` \r\n# my_code.py\r\n\r\ndef my_signal_handler(signum, frame, spinner):\r\n  # does some things\r\n\r\ndef run_a_long_running_command()\r\n  with yaspin.yaspin(\r\n        sigmap={\r\n            signal.SIGINT: my_signal_handler\r\n        }, color=\"yellow\").point as spinner:\r\n    time.sleep(10)\r\n```\r\nAnd a unit test (e.g. my_code_test.py) that is attempting to engage the lines in `my_signal_handler()` to assert something is done inside it.\r\n\r\nBut I haven't been able to make this happen when using the unittest framework. I first tried to raise a KeyboardInterrupt, but realized that signals are not an exception. I then realized that making `time.sleep(10)` instead do `os.kill(os.getpid(), signal.SIGINT)` doesn't work either. Is there a way to manually cause the signal to occur from another file? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/43", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/43/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/43/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/43", "id": 589776554, "node_id": "MDU6SXNzdWU1ODk3NzY1NTQ=", "number": 43, "title": "Yaspin thread in daemon mode", "user": {"login": "brupelo", "id": 18058492, "node_id": "MDQ6VXNlcjE4MDU4NDky", "avatar_url": "https://avatars3.githubusercontent.com/u/18058492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brupelo", "html_url": "https://github.com/brupelo", "followers_url": "https://api.github.com/users/brupelo/followers", "following_url": "https://api.github.com/users/brupelo/following{/other_user}", "gists_url": "https://api.github.com/users/brupelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/brupelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brupelo/subscriptions", "organizations_url": "https://api.github.com/users/brupelo/orgs", "repos_url": "https://api.github.com/users/brupelo/repos", "events_url": "https://api.github.com/users/brupelo/events{/privacy}", "received_events_url": "https://api.github.com/users/brupelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 738897456, "node_id": "MDU6TGFiZWw3Mzg4OTc0NTY=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-29T12:03:34Z", "updated_at": "2020-04-07T08:01:19Z", "closed_at": "2020-04-07T08:01:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any good reason for not allowing yaspin to be spawned in daemon mode? \r\n\r\nWhy am I asking? Because if not you can't interrupt the process execution using `Ctrl+C`.\r\n\r\nThx.\r\n\r\nNs. Pretty amazing library I must say... sadly I can't see colored emojis using conemu on win7 :'(", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/32", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/32/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/32/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/32", "id": 424136133, "node_id": "MDU6SXNzdWU0MjQxMzYxMzM=", "number": 32, "title": "pipenv's patch to prevent AttributeError in _register_signal_handlers", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1286233469, "node_id": "MDU6TGFiZWwxMjg2MjMzNDY5", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/windows", "name": "windows", "color": "24b7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-22T10:17:43Z", "updated_at": "2019-04-04T19:29:37Z", "closed_at": "2019-04-04T19:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "pipenv applies a patch to their vendored copy of tomlkit, and it seems that it has parts which belong here, but havent been raised here.\r\n\r\nThe patch is https://github.com/pypa/pipenv/blob/master/tasks/vendoring/patches/vendor/yaspin-signal-handling.patch , but only the following bit looks like it belongs here:\r\n\r\n```diff\r\ndiff --git a/pipenv/vendor/yaspin/core.py b/pipenv/vendor/yaspin/core.py\r\nindex d01fb98e..06b8b621 100644\r\n--- a/yaspin/core.py\r\n+++ b/yaspin/core.py\r\n@@ -369,11 +375,14 @@ class Yaspin(object):\r\n         # SIGKILL cannot be caught or ignored, and the receiving\r\n         # process cannot perform any clean-up upon receiving this\r\n         # signal.\r\n-        if signal.SIGKILL in self._sigmap.keys():\r\n-            raise ValueError(\r\n-                \"Trying to set handler for SIGKILL signal. \"\r\n-                \"SIGKILL cannot be cought or ignored in POSIX systems.\"\r\n-            )\r\n+        try:\r\n+            if signal.SIGKILL in self._sigmap.keys():\r\n+                raise ValueError(\r\n+                    \"Trying to set handler for SIGKILL signal. \"\r\n+                    \"SIGKILL cannot be cought or ignored in POSIX systems.\"\r\n+                )\r\n+        except AttributeError:\r\n+            pass\r\n \r\n         for sig, sig_handler in iteritems(self._sigmap):\r\n             # A handler for a particular signal, once set, remains\r\n```\r\n\r\nI am quite confident this is correct and needed here, as `signal` module documentation indicates that the list of signals in this module is host specific, and I am quite sure SIGKILL doesnt exist on Windows.\r\n\r\nIt appears the author of this part of the patch was @techalchemy .\r\n\r\nIdeally they should be submit the patch, or someone elses should submit it with the patch author set to the correct author.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/30", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/30/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/30/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/30", "id": 419237095, "node_id": "MDU6SXNzdWU0MTkyMzcwOTU=", "number": 30, "title": "Is there a way of custom spinners?", "user": {"login": "sniff122", "id": 8513053, "node_id": "MDQ6VXNlcjg1MTMwNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8513053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sniff122", "html_url": "https://github.com/sniff122", "followers_url": "https://api.github.com/users/sniff122/followers", "following_url": "https://api.github.com/users/sniff122/following{/other_user}", "gists_url": "https://api.github.com/users/sniff122/gists{/gist_id}", "starred_url": "https://api.github.com/users/sniff122/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sniff122/subscriptions", "organizations_url": "https://api.github.com/users/sniff122/orgs", "repos_url": "https://api.github.com/users/sniff122/repos", "events_url": "https://api.github.com/users/sniff122/events{/privacy}", "received_events_url": "https://api.github.com/users/sniff122/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 738897456, "node_id": "MDU6TGFiZWw3Mzg4OTc0NTY=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-10T21:47:01Z", "updated_at": "2019-03-11T16:30:48Z", "closed_at": "2019-03-11T16:30:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am curious if you can specify custom spinners in the form of a list variable of the \"frames\" of the animation with the first list value the delay for the animation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/29", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/29/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/29/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/29", "id": 417827172, "node_id": "MDU6SXNzdWU0MTc4MjcxNzI=", "number": 29, "title": "Race condition between spinner thread and write()", "user": {"login": "sebageek", "id": 2045907, "node_id": "MDQ6VXNlcjIwNDU5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2045907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebageek", "html_url": "https://github.com/sebageek", "followers_url": "https://api.github.com/users/sebageek/followers", "following_url": "https://api.github.com/users/sebageek/following{/other_user}", "gists_url": "https://api.github.com/users/sebageek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebageek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebageek/subscriptions", "organizations_url": "https://api.github.com/users/sebageek/orgs", "repos_url": "https://api.github.com/users/sebageek/repos", "events_url": "https://api.github.com/users/sebageek/events{/privacy}", "received_events_url": "https://api.github.com/users/sebageek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 738897443, "node_id": "MDU6TGFiZWw3Mzg4OTc0NDM=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 738897449, "node_id": "MDU6TGFiZWw3Mzg4OTc0NDk=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T14:20:25Z", "updated_at": "2019-05-12T13:36:38Z", "closed_at": "2019-05-12T13:21:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I use `write()` a lot on a spinner it often happens to me that the written text is displayed after the spinner message, like this:\r\n\r\n```\r\n[...]\r\nnoot noot\r\n\u280b spinning...noot noot\r\nnoot noot\r\n[...]\r\n```\r\nI used the script below to recreate the problem. It takes some time (400-800 writes) with it, but happens to me far more often with real world applications.\r\n```python\r\nimport random\r\nimport time\r\n\r\nimport yaspin\r\n\r\nwith yaspin.yaspin() as sp:\r\n    sp.text = 'spinning...'\r\n    while True:\r\n        sp.write('noot noot')\r\n        time.sleep(0.051 + random.randint(0, 10) / 100)\r\n```\r\nI think this happens because of concurrent access to `sys.stdout.write()` by the spinning thread and the spinners `write()`. This should be solvable by using a `threading.Lock()` and guarding access to sys.stdout.write() with it. In a quick local hack-fix-test it worked for me by doing this in `write()` and `_spin()`, but there are a lot more functions that would need guarding, if done right.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/26", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/26/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/26/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/26", "id": 394578378, "node_id": "MDU6SXNzdWUzOTQ1NzgzNzg=", "number": 26, "title": "Fails on PYTHONOPTIMIZE=2", "user": {"login": "gtors", "id": 9943520, "node_id": "MDQ6VXNlcjk5NDM1MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9943520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtors", "html_url": "https://github.com/gtors", "followers_url": "https://api.github.com/users/gtors/followers", "following_url": "https://api.github.com/users/gtors/following{/other_user}", "gists_url": "https://api.github.com/users/gtors/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtors/subscriptions", "organizations_url": "https://api.github.com/users/gtors/orgs", "repos_url": "https://api.github.com/users/gtors/repos", "events_url": "https://api.github.com/users/gtors/events{/privacy}", "received_events_url": "https://api.github.com/users/gtors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 738897443, "node_id": "MDU6TGFiZWw3Mzg4OTc0NDM=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-28T08:21:38Z", "updated_at": "2019-01-27T22:10:32Z", "closed_at": "2019-01-27T22:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Versions:**\r\n\r\nyaspin  0.14\r\npython 3.7\r\n\r\n**Env variables:**\r\n```\r\nPYTHONOPTIMIZE=2\r\n```\r\n\r\n**Traceback**\r\n```\r\n10 99.05 Traceback (most recent call last):\r\n#10 99.05   File \"/usr/local/bin/pipenv\", line 7, in <module>\r\n#10 99.05     from pipenv import cli\r\n#10 99.05   File \"/usr/local/lib/python3.7/site-packages/pipenv/__init__.py\", line 22, in <module>\r\n#10 99.05     from pipenv.vendor.vistir.compat import ResourceWarning, fs_str\r\n#10 99.05   File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/vistir/__init__.py\", line 31, in <module>\r\n#10 99.05     from .spin import VistirSpinner, create_spinner\r\n#10 99.05   File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/vistir/spin.py\", line 19, in <module>\r\n#10 99.05     import yaspin\r\n#10 99.05   File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/yaspin/__init__.py\", line 6, in <module>\r\n#10 99.05     from .api import kbi_safe_yaspin, yaspin\r\n#10 99.05   File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/yaspin/api.py\", line 87, in <module>\r\n#10 99.05     _kbi_safe_doc = yaspin.__doc__.replace(\"yaspin\", \"kbi_safe_yaspin\")\r\n#10 99.05 AttributeError: 'NoneType' object has no attribute 'replace'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/24", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/24/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/24/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/24", "id": 381566434, "node_id": "MDU6SXNzdWUzODE1NjY0MzQ=", "number": 24, "title": "Strange spinner behavior in windows terminal", "user": {"login": "mzylowski", "id": 13780868, "node_id": "MDQ6VXNlcjEzNzgwODY4", "avatar_url": "https://avatars0.githubusercontent.com/u/13780868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzylowski", "html_url": "https://github.com/mzylowski", "followers_url": "https://api.github.com/users/mzylowski/followers", "following_url": "https://api.github.com/users/mzylowski/following{/other_user}", "gists_url": "https://api.github.com/users/mzylowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzylowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzylowski/subscriptions", "organizations_url": "https://api.github.com/users/mzylowski/orgs", "repos_url": "https://api.github.com/users/mzylowski/repos", "events_url": "https://api.github.com/users/mzylowski/events{/privacy}", "received_events_url": "https://api.github.com/users/mzylowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1286233469, "node_id": "MDU6TGFiZWwxMjg2MjMzNDY5", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/windows", "name": "windows", "color": "24b7ad", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T11:46:59Z", "updated_at": "2019-03-23T13:58:48Z", "closed_at": "2019-01-02T09:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! \r\n\r\nI have a simple multi-platform app (it's designed for windows and linux environments).\r\nEverything works fine for bash terminal, but there is a problem when I start my app on windows.\r\nFew firsts lines is printed with strange symbols but, after that everything is fine and my spinner appears:\r\napp.exe > output.txt\r\nFrom notepad.exe:\r\n```\r\n=\u001b[0m message...\u001b[K\b\r\n|\u001b[0m message...\u001b[K\b\r\n]\u001b[0m message...\u001b[K\b\r\n-\u001b[0m message...\u001b[K\b\r\n=\u001b[0m message...\u001b[K\b\r\n|\u001b[0m message...\u001b[K\b\r\n]\u001b[0m message...\u001b[K\b\r\n```\r\nFrom notepad++:\r\n![image](https://user-images.githubusercontent.com/13780868/48619317-6268b780-e99c-11e8-91d8-39793a4f5dde.png)\r\n\r\nCopied from terminal:\r\n```\r\n\u001b[K\u001b[?25hmessage...\r\n```\r\n\r\nIs there any way to fix this behavior? Can I init yaspin class with some specific values to make it work or smth?\r\n\r\n(Please note for debugging purposes I used custom very simple spinner: `=|]-`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/19", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/19/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/19/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/19", "id": 346501609, "node_id": "MDU6SXNzdWUzNDY1MDE2MDk=", "number": 19, "title": "Initial Update", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-01T08:37:28Z", "updated_at": "2018-08-01T08:43:08Z", "closed_at": "2018-08-01T08:43:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The bot created this issue to inform you that pyup.io has been set up on this repo.\nOnce you have closed it, the bot will open pull requests for updates as soon as they are available.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/16", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/16/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/16/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/16", "id": 339015056, "node_id": "MDU6SXNzdWUzMzkwMTUwNTY=", "number": 16, "title": "write() method and leading whitespace", "user": {"login": "makkus", "id": 311257, "node_id": "MDQ6VXNlcjMxMTI1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/311257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makkus", "html_url": "https://github.com/makkus", "followers_url": "https://api.github.com/users/makkus/followers", "following_url": "https://api.github.com/users/makkus/following{/other_user}", "gists_url": "https://api.github.com/users/makkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/makkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makkus/subscriptions", "organizations_url": "https://api.github.com/users/makkus/orgs", "repos_url": "https://api.github.com/users/makkus/repos", "events_url": "https://api.github.com/users/makkus/events{/privacy}", "received_events_url": "https://api.github.com/users/makkus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-06T17:22:47Z", "updated_at": "2018-07-11T08:42:10Z", "closed_at": "2018-07-11T08:42:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to use the `spinner.write()` method to output sorta hierarchical text, but that proves difficult as it strips every input string (here: https://github.com/pavdmyt/yaspin/blob/dd5ad76c7f7a89dbed22427affad6d350c473e41/yaspin/yaspin.py#L193).\r\n\r\nIs there a reason for this, or could this strip() command be removed? I'd be also happy with an option that defaults to strip, but lets me disable it. It's a trivial change, but I'd be happy to provide a pull request if necessary, and if my proposed change is acceptable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/9", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/9/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/9/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/9", "id": 282416016, "node_id": "MDU6SXNzdWUyODI0MTYwMTY=", "number": 9, "title": "Fail to show unicode symbols > 0xffff under Python 2 narrow builds", "user": {"login": "pavdmyt", "id": 10200820, "node_id": "MDQ6VXNlcjEwMjAwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10200820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavdmyt", "html_url": "https://github.com/pavdmyt", "followers_url": "https://api.github.com/users/pavdmyt/followers", "following_url": "https://api.github.com/users/pavdmyt/following{/other_user}", "gists_url": "https://api.github.com/users/pavdmyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavdmyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavdmyt/subscriptions", "organizations_url": "https://api.github.com/users/pavdmyt/orgs", "repos_url": "https://api.github.com/users/pavdmyt/repos", "events_url": "https://api.github.com/users/pavdmyt/events{/privacy}", "received_events_url": "https://api.github.com/users/pavdmyt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1599969983, "node_id": "MDU6TGFiZWwxNTk5OTY5OTgz", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "cea146", "default": false, "description": ""}, {"id": 879043245, "node_id": "MDU6TGFiZWw4NzkwNDMyNDU=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/Py2", "name": "Py2", "color": "8f95d8", "default": false, "description": "python 2 related"}, {"id": 738897443, "node_id": "MDU6TGFiZWw3Mzg4OTc0NDM=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 738897449, "node_id": "MDU6TGFiZWw3Mzg4OTc0NDk=", "url": "https://api.github.com/repos/pavdmyt/yaspin/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-15T12:41:33Z", "updated_at": "2020-05-02T14:07:08Z", "closed_at": "2020-05-02T14:07:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Python 2 narrow build raises `ValueError` for unicode characters greater than 0xffff:\r\n\r\n```python\r\nPython 2.7.13 (default, Jan 18 2017, 11:00:40)\r\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>>\r\n>>> unichr(0xffff + 1)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: unichr() arg not in range(0x10000) (narrow Python build)\r\n```\r\n\r\nFollowing code snippet does not fail but prints \ufffd\ufffd\ufffd (gibberish) into a terminal:\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\n\r\nimport time\r\nfrom yaspin import yaspin, Spinner\r\n\r\nsp = Spinner(\"\ud83d\ude38\ud83d\ude39\ud83d\ude3a\ud83d\ude3b\ud83d\ude3c\ud83d\ude3d\ud83d\ude3e\ud83d\ude3f\ud83d\ude40\", 200)\r\nwith yaspin(sp, text=\"Cat!\"):\r\n    time.sleep(2)\r\n```\r\n\r\nDuring iteration over \"\ud83d\ude38\ud83d\ude39\ud83d\ude3a\ud83d\ude3b\ud83d\ude3c\ud83d\ude3d\ud83d\ude3e\ud83d\ude3f\ud83d\ude40\" sequence narrow build Python represents unicode characters above u+ffff as two codepoints.\r\n\r\nMore info on narrow Python:\r\nhttp://wordaligned.org/articles/narrow-python\r\nhttps://stackoverflow.com/questions/46711888/how-to-properly-iterate-over-unicode-characters-in-python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pavdmyt/yaspin/issues/7", "repository_url": "https://api.github.com/repos/pavdmyt/yaspin", "labels_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/7/comments", "events_url": "https://api.github.com/repos/pavdmyt/yaspin/issues/7/events", "html_url": "https://github.com/pavdmyt/yaspin/issues/7", "id": 278506131, "node_id": "MDU6SXNzdWUyNzg1MDYxMzE=", "number": 7, "title": "AssertionError in Py2 if provided Spinner.frames is a bytes sequence", "user": {"login": "pavdmyt", "id": 10200820, "node_id": "MDQ6VXNlcjEwMjAwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10200820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavdmyt", "html_url": "https://github.com/pavdmyt", "followers_url": "https://api.github.com/users/pavdmyt/followers", "following_url": "https://api.github.com/users/pavdmyt/following{/other_user}", "gists_url": "https://api.github.com/users/pavdmyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavdmyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavdmyt/subscriptions", "organizations_url": "https://api.github.com/users/pavdmyt/orgs", "repos_url": "https://api.github.com/users/pavdmyt/repos", "events_url": "https://api.github.com/users/pavdmyt/events{/privacy}", "received_events_url": "https://api.github.com/users/pavdmyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T15:42:53Z", "updated_at": "2017-12-02T12:46:28Z", "closed_at": "2017-12-02T12:46:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Consider following code:\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\nimport time\r\nfrom yaspin import yaspin, Spinner\r\n\r\nsp = Spinner([\"\ud83d\ude38\", \"\ud83d\ude39\", \"\ud83d\ude3a\", \"\ud83d\ude3b\", \"\ud83d\ude3c\", \"\ud83d\ude3d\", \"\ud83d\ude3e\", \"\ud83d\ude3f\", \"\ud83d\ude40\"], 200)\r\nwith yaspin(sp, text=\"Cat!\"):\r\n    time.sleep(3)\r\n```\r\n\r\nRunning this in Python 2.7 will result in the following exception:\r\n\r\n```\r\n$ python cat_example.py\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/var/pyenv/versions/2.7.14/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/var/pyenv/versions/2.7.14/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/Users/me/PY_proj/yaspin/yaspin/yaspin.py\", line 184, in _spin\r\n    out = self._compose_out(spin_phase)\r\n  File \"/Users/me/PY_proj/yaspin/yaspin/yaspin.py\", line 197, in _compose_out\r\n    assert isinstance(frame, str)\r\nAssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}]}