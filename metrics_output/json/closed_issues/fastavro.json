{"total_count": 198, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/fastavro/fastavro/issues/463", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/463/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/463/events", "html_url": "https://github.com/fastavro/fastavro/issues/463", "id": 677901852, "node_id": "MDU6SXNzdWU2Nzc5MDE4NTI=", "number": 463, "title": "Duplicate deflate compression", "user": {"login": "alistairking", "id": 3588162, "node_id": "MDQ6VXNlcjM1ODgxNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3588162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alistairking", "html_url": "https://github.com/alistairking", "followers_url": "https://api.github.com/users/alistairking/followers", "following_url": "https://api.github.com/users/alistairking/following{/other_user}", "gists_url": "https://api.github.com/users/alistairking/gists{/gist_id}", "starred_url": "https://api.github.com/users/alistairking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alistairking/subscriptions", "organizations_url": "https://api.github.com/users/alistairking/orgs", "repos_url": "https://api.github.com/users/alistairking/repos", "events_url": "https://api.github.com/users/alistairking/events{/privacy}", "received_events_url": "https://api.github.com/users/alistairking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-12T18:47:30Z", "updated_at": "2020-08-12T19:04:17Z", "closed_at": "2020-08-12T19:04:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm very new to this project, so my apologies if I've missed something obvious, but it seems that the pure-python writer compresses each block twice when using deflate:\r\nhttps://github.com/fastavro/fastavro/blob/master/fastavro/_write_py.py#L281\r\n\r\nLooking at the git blame around these lines it seems that it might have been some mess up with the merge of two feature branches. (https://github.com/fastavro/fastavro/commit/f412823fadb048478e40c10e1f6d4776aadcab04 and https://github.com/fastavro/fastavro/commit/53ed64d95d4f82875d1238b1f76d4d87547e40e1)\r\n\r\nIt doesn't impact the correctness of the resulting data, but it does seem like a waste of CPU time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/462", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/462/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/462/events", "html_url": "https://github.com/fastavro/fastavro/issues/462", "id": 677733812, "node_id": "MDU6SXNzdWU2Nzc3MzM4MTI=", "number": 462, "title": "Best way to handle named/dependent schemas", "user": {"login": "edgarrmondragon", "id": 16805946, "node_id": "MDQ6VXNlcjE2ODA1OTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/16805946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarrmondragon", "html_url": "https://github.com/edgarrmondragon", "followers_url": "https://api.github.com/users/edgarrmondragon/followers", "following_url": "https://api.github.com/users/edgarrmondragon/following{/other_user}", "gists_url": "https://api.github.com/users/edgarrmondragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarrmondragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarrmondragon/subscriptions", "organizations_url": "https://api.github.com/users/edgarrmondragon/orgs", "repos_url": "https://api.github.com/users/edgarrmondragon/repos", "events_url": "https://api.github.com/users/edgarrmondragon/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarrmondragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-12T14:22:44Z", "updated_at": "2020-08-12T15:34:44Z", "closed_at": "2020-08-12T14:52:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for creating and maintaining this package. I'm trying to write Avro files with schema dependencies, this is the only way I've found to write Avro files with valid schemas (I'm using [Avro Viewer][1] and [rq][2] to validate the format):\r\n\r\n```python\r\nimport fastavro\r\n\r\nrecords = [\r\n    {\"id\": 1, \"bars\": [{\"id\": 1, \"baz\": \"abc\"}, {\"id\": 2, \"baz\": \"def\"}]},\r\n    {\"id\": 2, \"bars\": [{\"id\": 2, \"baz\": \"uvw\"}, {\"id\": 2, \"baz\": \"xyz\"}]},\r\n]\r\n\r\n# [{\"name\": \"com.namespace.Foo\", \"__named_schemas\": {...}, ...},\r\n#  {\"name\": \"com.dependencies.Bar\", \"__named_schemas\": {...}, ...}]\r\nschemas = fastavro.schema.load_schema(\"com.namespace.Foo.avsc\")\r\n\r\n# [{\"name\": \"com.namespace.Foo\", \"__named_schemas\": {...}, \"fields\": [\r\n#    {\"name\": \"id\", \"type\": \"int\"}\r\n#    {\"name\": \"bars\", \"type\": {\"items\": {\"items\": {\"__named_schemas\": {...}, \"name\": \"com.dependencies.Bar\"}}}}\r\n# ]},\r\n#  {\"name\": \"com.dependencies.Bar\", \"__named_schemas\": {...}}]\r\nexpanded_schema = fastavro.schema.expand_schema(schemas)\r\n\r\n# Pick only the `Foo` schema\r\nfoo_schema = next(filter(lambda s: s[\"name\"] == \"com.namespace.Foo\", expanded_schema))\r\n\r\nwith open(\"foo.avro\", \"wb\") as f:\r\n    fastavro.writer(f, foo_schema, records)\r\n```\r\n\r\n\r\n## com.namespace.Foo.avsc\r\n\r\n```json\r\n{\r\n  \"name\": \"Foo\",\r\n  \"namespace\": \"com.namespace\",\r\n  \"type\": \"record\",\r\n  \"fields\": [\r\n    {\"name\": \"id\", \"type\": \"int\"},\r\n    {\"name\": \"bars\", \"type\": {\"type\": \"array\", \"items\": \"com.dependencies.Bar\"}}\r\n  ]\r\n}\r\n```\r\n\r\n## com.dependencies.Bar.avsc\r\n\r\n```json\r\n{\r\n  \"name\": \"Bar\",\r\n  \"namespace\": \"com.dependencies\",\r\n  \"type\": \"record\",\r\n  \"fields\": [\r\n    {\"name\": \"id\", \"type\": \"int\"},\r\n    {\"name\": \"baz\", \"type\": \"string\"}\r\n  ]\r\n}\r\n```\r\n\r\nAvro Viewer seems to be OK with files written with `schemas` or `foo_schema`, but `rq` only likes `foo_schema`. Is this how I'm supposed to be doing this at all?\r\n\r\n[1]: https://dataformat.net/avro/view-and-convert\r\n[2]: https://github.com/dflemstr/rq\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/458", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/458/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/458/events", "html_url": "https://github.com/fastavro/fastavro/issues/458", "id": 673083423, "node_id": "MDU6SXNzdWU2NzMwODM0MjM=", "number": 458, "title": "timestamp-millis does not serialize accurately for some cases", "user": {"login": "hoogamaphone", "id": 8905162, "node_id": "MDQ6VXNlcjg5MDUxNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8905162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoogamaphone", "html_url": "https://github.com/hoogamaphone", "followers_url": "https://api.github.com/users/hoogamaphone/followers", "following_url": "https://api.github.com/users/hoogamaphone/following{/other_user}", "gists_url": "https://api.github.com/users/hoogamaphone/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoogamaphone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoogamaphone/subscriptions", "organizations_url": "https://api.github.com/users/hoogamaphone/orgs", "repos_url": "https://api.github.com/users/hoogamaphone/repos", "events_url": "https://api.github.com/users/hoogamaphone/events{/privacy}", "received_events_url": "https://api.github.com/users/hoogamaphone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-04T21:06:30Z", "updated_at": "2020-08-06T13:30:57Z", "closed_at": "2020-08-06T13:30:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When serializing a `timestamp-millis` field and then deserializing it, it can sometimes be off by milliseconds.\r\n\r\nHere's an example script that uses `fastavro==0.24.0`\r\n\r\n```python\r\nimport datetime\r\nimport io\r\n\r\nimport fastavro\r\nimport pytz\r\n\r\n\r\ndef record_to_binary(data, schema):\r\n    with io.BytesIO(b\"\") as output_file:\r\n        fastavro.writer(output_file, schema, [data])\r\n        output_file.seek(0)\r\n        bytes_ = output_file.read()\r\n    return bytes_\r\n\r\n\r\ndef binary_to_record(binary, schema):\r\n    with io.BytesIO(binary) as binary_file:\r\n        return next(fastavro.reader(binary_file, reader_schema=schema))\r\n\r\n\r\nschema = {\r\n    \"type\": \"record\",\r\n    \"name\": \"example\",\r\n    \"fields\": [{\"name\": \"datetime\", \"type\": {\"type\": \"long\", \"logicalType\": \"timestamp-millis\"}}],\r\n}\r\nparsed_schema = fastavro.parse_schema(schema)\r\n\r\nmy_date = datetime.datetime(2243, 1, 1, 0, 0, 0, 64000, tzinfo=pytz.utc)\r\nexpected_data = {\"datetime\": my_date}\r\nbinary = record_to_binary(expected_data, parsed_schema)\r\nactual_data = binary_to_record(binary, parsed_schema)\r\nprint(f\"expected_data={expected_data}\")\r\nprint(f\"  actual_data={actual_data}\")\r\nassert actual_data == expected_data\r\n```\r\n\r\nI get the following output when I run this script:\r\n\r\n```\r\nexpected_data={'datetime': datetime.datetime(2243, 1, 1, 0, 0, 0, 64000, tzinfo=<UTC>)}\r\n  actual_data={'datetime': datetime.datetime(2243, 1, 1, 0, 0, 0, 63000, tzinfo=<UTC>)}\r\nTraceback (most recent call last):\r\n  File \"/opt/project/timestamp_round_trip.py\", line 34, in <module>\r\n    assert actual_data == expected_data\r\nAssertionError\r\n```\r\n\r\nThis error does not occur in the `avro-python3` library. I've gone through the code differences, and the only thing I can find is that `fastavro` makes use of [`datetime.timedelta.total_seconds()`](https://docs.python.org/3/library/datetime.html#datetime.timedelta.total_seconds). \r\n\r\nSome other dates that I've been able to replicate this issue for are:\r\n```\r\ndatetime.datetime(1974, 4, 4, 0, 0, 0, 1000, tzinfo=pytz.utc)\r\ndatetime.datetime(2515, 1, 1, 0, 0, 0, 37000, tzinfo=pytz.utc)\r\ndatetime.datetime(881, 1, 1, 0, 0, 0, 257000, tzinfo=pytz.utc)\r\n```\r\n\r\nI am running these in a docker container that is running CentOS 7.5\r\n\r\nLastly, here's a test that uses hypothesis, which is how I found the failing examples\r\n\r\n```python\r\nimport hypothesis\r\nimport hypothesis.strategies\r\n\r\n@hypothesis.given(hypothesis.strategies.datetimes(timezones=st.just(pytz.utc)))\r\n@hypothesis.settings(print_blob=True, deadline=None)\r\ndef test_datetime_round_trip(given_datetime: datetime.datetime):\r\n    datetime_millis = given_datetime.replace(microsecond=given_datetime.microsecond // 1000 * 1000)\r\n    schema = {\r\n        \"type\": \"record\",\r\n        \"name\": \"example\",\r\n        \"fields\": [{\"name\": \"datetime\", \"type\": {\"type\": \"long\", \"logicalType\": \"timestamp-millis\"}}],\r\n    }\r\n    parsed_schema = fastavro.parse_schema(schema)\r\n\r\n    expected_data = {\"datetime\": datetime_millis}\r\n    binary = record_to_binary(expected_data, parsed_schema)\r\n    actual_data = binary_to_record(binary, parsed_schema)\r\n    assert actual_data == expected_data\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/457", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/457/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/457/events", "html_url": "https://github.com/fastavro/fastavro/issues/457", "id": 671892956, "node_id": "MDU6SXNzdWU2NzE4OTI5NTY=", "number": 457, "title": "Improve decimal schema validation", "user": {"login": "matpuk", "id": 8455380, "node_id": "MDQ6VXNlcjg0NTUzODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8455380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matpuk", "html_url": "https://github.com/matpuk", "followers_url": "https://api.github.com/users/matpuk/followers", "following_url": "https://api.github.com/users/matpuk/following{/other_user}", "gists_url": "https://api.github.com/users/matpuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/matpuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matpuk/subscriptions", "organizations_url": "https://api.github.com/users/matpuk/orgs", "repos_url": "https://api.github.com/users/matpuk/repos", "events_url": "https://api.github.com/users/matpuk/events{/privacy}", "received_events_url": "https://api.github.com/users/matpuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-03T08:17:39Z", "updated_at": "2020-08-09T15:08:20Z", "closed_at": "2020-08-09T15:08:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, I found 3 issues with decimal schema:\r\n\r\n1. Negative values for precision and scale are allowed\r\n2. There is no check that specified precision will fit into fixed number of bytes\r\n3. There is no check that precision >= scale\r\n\r\nIs it ok to fix all of the issues in one PR?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/456", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/456/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/456/events", "html_url": "https://github.com/fastavro/fastavro/issues/456", "id": 670071868, "node_id": "MDU6SXNzdWU2NzAwNzE4Njg=", "number": 456, "title": "fastavro and avro expect/generate different binary blob", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-07-31T18:02:08Z", "updated_at": "2020-08-01T05:49:56Z", "closed_at": "2020-08-01T05:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have a case of fastavro and avro library generating and expecting different binaries when serializing a large payload. The sole difference between avro and fastavro output is the presence of a lonely ``(`` at the start of the fastavro one, which is lacking in case of avro. \r\n\r\nHowever, what's encoded by Avro cannot be decoded by fastavro and the other way around because of this. Any idea what could be inserting this extra ``(`` at the start of the fastavro encoding?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/452", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/452/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/452/events", "html_url": "https://github.com/fastavro/fastavro/issues/452", "id": 666807096, "node_id": "MDU6SXNzdWU2NjY4MDcwOTY=", "number": 452, "title": "Schema's decimal precision is ignored when serializing a decimal", "user": {"login": "matpuk", "id": 8455380, "node_id": "MDQ6VXNlcjg0NTUzODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8455380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matpuk", "html_url": "https://github.com/matpuk", "followers_url": "https://api.github.com/users/matpuk/followers", "following_url": "https://api.github.com/users/matpuk/following{/other_user}", "gists_url": "https://api.github.com/users/matpuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/matpuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matpuk/subscriptions", "organizations_url": "https://api.github.com/users/matpuk/orgs", "repos_url": "https://api.github.com/users/matpuk/repos", "events_url": "https://api.github.com/users/matpuk/events{/privacy}", "received_events_url": "https://api.github.com/users/matpuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-28T06:33:04Z", "updated_at": "2020-07-29T17:55:46Z", "closed_at": "2020-07-29T17:55:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A decimal number is not checked for actual precision before serializing. This leads to loss of significant digits during deserialization.\r\n\r\nA check similar to decimal scale validation is needed.\r\n\r\n```\r\nfrom decimal import Decimal, getcontext\r\nfrom io import BytesIO\r\n\r\nimport fastavro\r\n\r\ngetcontext().prec = 18\r\n\r\n\r\ndef serialize(schema, data):\r\n    bytes_writer = BytesIO()\r\n    fastavro.schemaless_writer(bytes_writer, schema, data)\r\n    return bytes_writer.getvalue()\r\n\r\n\r\ndef deserialize(schema, binary):\r\n    bytes_writer = BytesIO()\r\n    bytes_writer.write(binary)\r\n    bytes_writer.seek(0)\r\n\r\n    res = fastavro.schemaless_reader(bytes_writer, schema)\r\n    return res\r\n\r\n\r\ndef test_ignored_precision_value():\r\n    schema = {\r\n        'name': 'test_ignored_precision_value',\r\n        'type': 'bytes',\r\n        'logicalType': 'decimal',\r\n        'precision': 4,\r\n        'scale': 2\r\n    }\r\n\r\n    data1 = Decimal('123456789012345.1')\r\n    print(f'Original: {data1}')\r\n    binary = serialize(schema, data1)\r\n    data2 = deserialize(schema, binary)\r\n    print(f'Restored: {data2}')\r\n    assert (data1 == data2)\r\n\r\n\r\nif __name__ == '__main__':\r\n    test_ignored_precision_value()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/450", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/450/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/450/events", "html_url": "https://github.com/fastavro/fastavro/issues/450", "id": 655916871, "node_id": "MDU6SXNzdWU2NTU5MTY4NzE=", "number": 450, "title": "Multi-schema support", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-13T14:55:57Z", "updated_at": "2020-07-30T02:00:24Z", "closed_at": "2020-07-30T02:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, fastavro caches parsed schema types here: https://github.com/fastavro/fastavro/blob/c98886167f/fastavro/_schema_common.py#L13. This cache is global though, not per parsed schema. This means fastavro does not support multiple schemas in parallel if these schemas have overlapped type names that differ in any shape or form. \r\n\r\nHere's a minimal reproducible version of this (this works with v0.23.5 but not in v0.23.6 as the later now correctly parses array formats via https://github.com/fastavro/fastavro/commit/c98886167fe3347990c6df373bc82bc1eb7879c9):\r\n\r\n```python\r\nfrom io import BytesIO\r\n\r\nfrom fastavro import parse_schema, schemaless_writer, __version__\r\n\r\nprint(__version__)\r\n\r\nschema_v1 = [\r\n    {\"name\": \"Location\", \"type\": \"record\", \"fields\": [{\"name\": \"city\", \"type\": \"string\"}]},\r\n    {\"name\": \"Weather\", \"type\": \"record\", \"fields\": [{\"name\": \"of\", \"type\": \"Location\"}]},\r\n]\r\n\r\nschema_v2 = [\r\n    {\"name\": \"Location\", \"type\": \"record\", \"fields\": [{\"name\": \"city\", \"type\": \"long\"}]},\r\n    {\"name\": \"Weather\", \"type\": \"record\", \"fields\": [{\"name\": \"of\", \"type\": \"Location\"}]},\r\n]\r\n\r\nexample_1 = {\"of\": {\"city\": \"London\"}}\r\nexample_2 = {\"of\": {\"city\": 123}}\r\n\r\nparse_v1 = parse_schema(schema_v1)\r\nparse_v2 = parse_schema(schema_v2)\r\n\r\n\r\nwith BytesIO() as outcome:\r\n    schemaless_writer(outcome, parse_v2, example_2)\r\n    print(outcome.getvalue())\r\n\r\nwith BytesIO() as outcome:\r\n    schemaless_writer(outcome, parse_v1, example_1)\r\n    print(outcome.getvalue())\r\n```\r\n\r\nv0.23.5 output:\r\n```console\r\n0.23.5\r\nb'\\x02\\xf6\\x01'\r\nb'\\x02\\x0cLondon'\r\n```\r\n\r\nv0.23.6 output:\r\n```console\r\n0.23.6\r\nb'\\x02\\xf6\\x01'\r\nTraceback (most recent call last):\r\n  File \"regression.py\", line 29, in <module>\r\n    schemaless_writer(outcome, parse_v1, example_1)\r\n  File \"fastavro/_write.pyx\", line 651, in fastavro._write.schemaless_writer\r\n  File \"fastavro/_write.pyx\", line 335, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 249, in fastavro._write.write_union\r\nValueError: {'of': {'city': 'London'}} (type <class 'dict'>) do not match [{'type': 'record', 'name': 'Location', 'fields': [{'name': 'city', 'type': 'string'}], '__fastavro_parsed': True}, {'type': 'record', 'name': 'Weather', 'fields': [{'name': 'of', 'type': 'Location'}], '__fastavro_parsed': True}]\r\n```\r\n\r\nSuggestion: make the cache schema bound. You could, in theory, achieve this by resetting the cache between calls of ``parse_schema``, but this would mean now parsing would not be thread-safe. Instead, I suggest you create the cache within ``parse_schema`` and pass it through as an additional argument during the parsing.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/444", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/444/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/444/events", "html_url": "https://github.com/fastavro/fastavro/issues/444", "id": 654375971, "node_id": "MDU6SXNzdWU2NTQzNzU5NzE=", "number": 444, "title": "Huge performance drop in schemaless_reader due to schema parsing on every call", "user": {"login": "lexasoft123", "id": 5989491, "node_id": "MDQ6VXNlcjU5ODk0OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5989491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lexasoft123", "html_url": "https://github.com/lexasoft123", "followers_url": "https://api.github.com/users/lexasoft123/followers", "following_url": "https://api.github.com/users/lexasoft123/following{/other_user}", "gists_url": "https://api.github.com/users/lexasoft123/gists{/gist_id}", "starred_url": "https://api.github.com/users/lexasoft123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lexasoft123/subscriptions", "organizations_url": "https://api.github.com/users/lexasoft123/orgs", "repos_url": "https://api.github.com/users/lexasoft123/repos", "events_url": "https://api.github.com/users/lexasoft123/events{/privacy}", "received_events_url": "https://api.github.com/users/lexasoft123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-09T22:04:10Z", "updated_at": "2020-07-11T17:50:57Z", "closed_at": "2020-07-11T17:50:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nSeems that there is a mistake in schemaless_reader, due to it parse_schema is called on every function call even if I use already parsed schema as an argument.\r\n\r\nHere is an example of code I use to parse small Avro messages consumed from Kafka:\r\n```python\r\ndef get_schema():\r\n    with open('schema.json', 'r') as file:\r\n        schema = file.read()\r\n    return fastavro.parse_schema(json.loads(schema))\r\n\r\ndef parse_msg(msg, schema):\r\n    bytes_io = BytesIO(msg)\r\n    msg = fastavro.schemaless_reader(bytes_io, schema, reader_schema=schema)\r\n    return msg\r\n\r\n...\r\n\r\n    schema = get_schema()\r\n        while True:\r\n            msg = c.poll(timeout=1.0)\r\n            parse_msg(msg.value(), schema)\r\n\r\n```\r\nI noticed that parsing consumes most of CPU time. I ran a profiler and noticed that top time spent in parse_schema.\r\n\r\nThe following patch made a 1000x times performance benefit for me:\r\n```\r\ndiff --git a/fastavro/_read.pyx b/fastavro/_read.pyx\r\nindex 3226b46..d460b42 100644\r\n--- a/fastavro/_read.pyx\r\n+++ b/fastavro/_read.pyx\r\n@@ -838,7 +838,7 @@ cpdef schemaless_reader(fo, writer_schema, reader_schema=None,\r\n         # No need for the reader schema if they are the same\r\n         reader_schema = None\r\n\r\n-    writer_schema = parse_schema(writer_schema)\r\n+    #writer_schema = parse_schema(writer_schema)\r\n\r\n     if reader_schema:\r\n         reader_schema = parse_schema(reader_schema)\r\ndiff --git a/fastavro/_read_py.py b/fastavro/_read_py.py\r\nindex 17a4fff..1d4647f 100644\r\n--- a/fastavro/_read_py.py\r\n+++ b/fastavro/_read_py.py\r\n@@ -892,10 +892,10 @@ def schemaless_reader(fo, writer_schema, reader_schema=None,\r\n         # No need for the reader schema if they are the same\r\n         reader_schema = None\r\n\r\n-    writer_schema = parse_schema(writer_schema)\r\n+    #writer_schema = parse_schema(writer_schema)\r\n\r\n-    if reader_schema:\r\n-        reader_schema = parse_schema(reader_schema)\r\n+    #if reader_schema:\r\n+    #    reader_schema = parse_schema(reader_schema)\r\n\r\n     decoder = BinaryDecoder(fo)\r\n```\r\n\r\nPlease explain, is it a bug or there is a problem in how I use the library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/443", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/443/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/443/events", "html_url": "https://github.com/fastavro/fastavro/issues/443", "id": 654368335, "node_id": "MDU6SXNzdWU2NTQzNjgzMzU=", "number": 443, "title": "Error when json encoding in loaded schema only if fields are nullable", "user": {"login": "r-archer37", "id": 30811240, "node_id": "MDQ6VXNlcjMwODExMjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/30811240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r-archer37", "html_url": "https://github.com/r-archer37", "followers_url": "https://api.github.com/users/r-archer37/followers", "following_url": "https://api.github.com/users/r-archer37/following{/other_user}", "gists_url": "https://api.github.com/users/r-archer37/gists{/gist_id}", "starred_url": "https://api.github.com/users/r-archer37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r-archer37/subscriptions", "organizations_url": "https://api.github.com/users/r-archer37/orgs", "repos_url": "https://api.github.com/users/r-archer37/repos", "events_url": "https://api.github.com/users/r-archer37/events{/privacy}", "received_events_url": "https://api.github.com/users/r-archer37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-09T21:47:55Z", "updated_at": "2020-07-11T18:43:57Z", "closed_at": "2020-07-11T18:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been running up against an error trying to use JSON encoding with a schema that is defined across multiple files and has nullable fields all the way down. I'd like help sorting out if this is a problem in how schemas are parsed, how json encoding is done, or if it's a problem with my use of those. I've created a reproducible example that is necessarily broken out across a few files.\r\n\r\nIn addition to sharing everything below, I've also made an ad-hoc github repo to hold the necessary files and explanation of what's been observed: https://github.com/r-archer37/fastavro_error_mre\r\n\r\nAs pasted below, we encounter an error when calling `fastavro.json_writer`. However, if we alter the schema such that there are non-nullable fields in both `test.MultiBroadcaster.avsc` and `test.Broadcaster.avsc` then we no longer encounter that error.\r\n\r\nPython version: 3.7.3\r\nFastavro version: 0.23.5\r\n\r\nPython code:\r\n```python\r\nimport json\r\nimport fastavro\r\nfrom fastavro.schema import load_schema\r\n\r\nINPUT_FILE = 'test_weather_data.json'\r\nOUTPUT_FILE = 'test_weather_data.txt'\r\nSCHEMA_TO_USE = 'Weather.avsc'\r\n\r\nschema = load_schema(SCHEMA_TO_USE)\r\n\r\n\r\ndef fastavro_encode(schema, file_name, data):\r\n    with open(file_name, 'w') as out:\r\n        fastavro.json_writer(out, schema, data)\r\n\r\n\r\ndef fastavro_decode(schema, file_name):\r\n    with open(file_name, 'r') as fo:\r\n        my_reader = fastavro.json_reader(fo, schema)\r\n        for record in my_reader:\r\n            print(record)\r\n\r\n\r\nfastavro_encode(schema,\r\n                OUTPUT_FILE,\r\n                [json.loads(open(INPUT_FILE, 'r').read())])\r\n\r\nfastavro_decode(schema, OUTPUT_FILE)\r\n```\r\n\r\n`test_weather_data.json`:\r\n```json\r\n{\r\n    \"temperature\": 99,\r\n    \"multibroadcaster\": {\r\n        \"broadcaster\": {\r\n            \"presenterName\": \"Pat\",\r\n            \"presenterId\": \"2468ACE\"\r\n        }\r\n    },\r\n    \"station\": {\r\n        \"stationId\": \"13579BDF\",\r\n        \"stationName\": \"Local\"\r\n    },\r\n    \"time\": 1234567890\r\n}\r\n```\r\n\r\n`Weather.avsc`:\r\n```json\r\n{\r\n    \"doc\": \"A weather reading.\",\r\n    \"name\": \"Weather\",\r\n    \"namespace\": \"test\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\"name\": \"temperature\", \"type\": \"int\"},\r\n        {\"name\": \"time\", \"type\": [\"null\", \"long\"], \"default\": null},\r\n        {\"name\": \"multibroadcaster\", \"type\": [\"null\", \"test.MultiBroadcaster\"],\r\n            \"default\": null\r\n        },\r\n        {\"name\": \"station\", \"type\": [\"null\", \"test.Station\"], \"default\": null}\r\n    ]\r\n}\r\n```\r\n\r\n`test.Station.avsc`\r\n```json\r\n{\r\n    \"namespace\": \"test\",\r\n    \"type\": \"record\",\r\n    \"name\": \"Station\",\r\n    \"fields\": [\r\n        {\"name\": \"stationId\", \"type\": \"string\"},\r\n        {\"name\": \"stationName\", \"type\": [\"null\", \"string\"], \"default\": null}\r\n    ]\r\n}\r\n```\r\n\r\n`test.MultiBroadcaster.avsc`\r\n```json\r\n{\r\n    \"namespace\": \"test\",\r\n    \"type\": \"record\",\r\n    \"name\": \"MultiBroadcaster\",\r\n    \"fields\": [\r\n        {\"name\": \"broadcaster\", \"type\": [\"null\", \"test.Broadcaster\"], \"default\": null}\r\n    ]\r\n}\r\n```\r\n\r\n`test.Broadcaster.avsc`\r\n```json\r\n{\r\n    \"namespace\": \"test\",\r\n    \"type\": \"record\",\r\n    \"name\": \"Broadcaster\",\r\n    \"fields\": [\r\n        {\"name\": \"presenterId\", \"type\": [\"null\", \"string\"], \"default\": null},\r\n        {\"name\": \"presenterName\", \"type\": [\"null\", \"string\"], \"default\": null}\r\n    ]\r\n}\r\n```\r\n\r\n**Expected Output**\r\n```python\r\n{'temperature': 99, 'time': 1234567890, 'multibroadcaster': {'broadcaster': {'presenterId': '2468ACE', 'presenterName': 'Pat'}}, 'station': {'stationId': '13579BDF', 'stationName': 'Local'}}\r\n```\r\n\r\n**Actual Output**\r\n```\r\nTraceback (most recent call last):\r\n  File \"weather_avro.py\", line 27, in <module>\r\n    [json.loads(open(INPUT_FILE, 'r').read())])\r\n  File \"weather_avro.py\", line 15, in fastavro_encode\r\n    fastavro.json_writer(out, schema, data)\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/json_write.py\", line 46, in json_writer\r\n    return writer(AvroJSONEncoder(fo), schema, records)\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/_write_py.py\", line 600, in writer\r\n    output.flush()\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/_write_py.py\", line 484, in flush\r\n    self.encoder.flush()\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/io/json_encoder.py\", line 72, in flush\r\n    self._parser.flush()\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/io/parser.py\", line 140, in flush\r\n    self.action_function(top)\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/io/json_encoder.py\", line 78, in do_action\r\n    self.write_object_end()\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/io/json_encoder.py\", line 158, in write_object_end\r\n    self._pop()\r\n  File \"/opt/conda/lib/python3.7/site-packages/fastavro/io/json_encoder.py\", line 50, in _pop\r\n    prev_current[prev_key] = self._current\r\nTypeError: unhashable type: 'list'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/442", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/442/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/442/events", "html_url": "https://github.com/fastavro/fastavro/issues/442", "id": 653542324, "node_id": "MDU6SXNzdWU2NTM1NDIzMjQ=", "number": 442, "title": "Kafka topic returning HOCON-like instead of JSON", "user": {"login": "tonio-m", "id": 25779394, "node_id": "MDQ6VXNlcjI1Nzc5Mzk0", "avatar_url": "https://avatars3.githubusercontent.com/u/25779394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonio-m", "html_url": "https://github.com/tonio-m", "followers_url": "https://api.github.com/users/tonio-m/followers", "following_url": "https://api.github.com/users/tonio-m/following{/other_user}", "gists_url": "https://api.github.com/users/tonio-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonio-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonio-m/subscriptions", "organizations_url": "https://api.github.com/users/tonio-m/orgs", "repos_url": "https://api.github.com/users/tonio-m/repos", "events_url": "https://api.github.com/users/tonio-m/events{/privacy}", "received_events_url": "https://api.github.com/users/tonio-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-08T19:30:47Z", "updated_at": "2020-07-18T14:55:43Z", "closed_at": "2020-07-18T14:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was consuming a kafka topic using spark streaming and decoding the records using  the `fastavro.schemaless_reader`.\r\n\r\nThe original message being published is in JSON, binary encoded in avro.\r\nBut when I read it using `fastavro.schemaless_reader` it returns a HOCON like string.\r\n\r\nDo you have any idea what is going on?\r\n\r\n```python\r\nimport json\r\nimport pyhocon\r\nimport fastavro\r\nimport requests\r\nfrom io import BytesIO\r\nfrom pyspark.sql import SparkSession\r\n\r\n\r\nspark = SparkSession.builder.getOrCreate()\r\n\r\n\r\ndef from_confluent_avro(msg, schema):\r\n    bytes_io = BytesIO(msg)\r\n    bytes_io.seek(5)\r\n    msg = fastavro.schemaless_reader(bytes_io, schema)\r\n    return msg\r\n\r\n\r\ndef get_schema(registry_url,topic):\r\n    URL = f\"{registry_url}/subjects/{topic}/versions/latest\"\r\n    response = requests.get(url=URL, verify=False)\r\n    subject = response.json()\r\n    schema_id = subject['id']\r\n    schema = json.loads(subject['schema'])\r\n    return [schema_id, schema]\r\n\r\n\r\nschema_id, schema = get_schema(registry_url=SCHEMA_REGISTRY=,topic=SUBSCRIBE_TOPIC)\r\nspark.udf.register(\"from_confluent_avro\",lambda value: from_confluent_avro(value,schema))\r\nspark.readStream \\\r\n    .format(\"kafka\") \\\r\n    .option(\"subscribe\", SUBSCRIBE_TOPIC) \\\r\n    .option(\"startingOffsets\", \"earliest\") \\\r\n    .option(\"kafka.bootstrap.servers\", HOST) \\\r\n    .option(\"kafka.security.protocol\", \"SSL\") \\\r\n    .option(\"kafka.ssl.key.password\", KEYSTORE_PASSWORD) \\\r\n    .option(\"kafka.ssl.keystore.location\", KEYSTORE_PATH) \\\r\n    .option(\"kafka.ssl.truststore.location\", KEYSTORE_PATH) \\\r\n    .option(\"kafka.ssl.keystore.password\", KEYSTORE_PASSWORD) \\\r\n    .option(\"kafka.ssl.truststore.password\", KEYSTORE_PASSWORD) \\\r\n    .load() \\\r\n    .selectExpr(f\"from_confluent_avro(value) as value\") \\\r\n    .limit(1) \\\r\n    .writeStream \\\r\n    .format(\"console\") \\\r\n    .start()\r\n```\r\n\r\nExamples of the output:\r\nmessage after being read (I added the line breaks for readability):\r\n```HOCON\r\n{\r\n  someVersion=1.1.1-dev,\r\n  someName=IF,\r\n  message=Hello World!. [BL123],\r\n  someInfo=STRINGEXAMPLE,\r\n  someStatus=STRINGEXAMPLE,\r\n  duration=3500,\r\n  someNumber=1111111,\r\n  someSource=STRINGEXAMPLE, \r\n  someOtherId=c3UASSQTiWvl_YA9DYpDV:APA91DS0D8TuzJDuCjj4tgbRNcJcbGfVcLNNGL20hfmaDYASIBRVEE2FnA4exnE4ZWTuupRX7FQkdcJiMWkNEatk8lehb4r_SVnktkFcpR7P7mabIabGInW2JUGK8gjagGZ6pGyweDkx, \r\n  someSerial=00002, \r\n  someOrigin=null, \r\n  OS=null, \r\n  eventSubType=STRINGEXAMPLE, \r\n  tokenAotp=, \r\n  ip=error, \r\n  coordinates=17.4220043,-184.01405, \r\n  eventType=SUCCESS, \r\n  someKey=aWg4V01qSmlEWGJ6aExnc2xDMjAvWnZJbWZVPQ==, \r\n  macAddress=33d94a3f7d2f8aff, \r\n  someJsonString={\"ip\":\"error\",\"hostname\":null,\"type\":null,\"continent_code\":null,\"continent_name\":null,\"country_code\":null,\"country_name\":null,\"region_code\":null,\"region_name\":null,\"city\":null,\"zip\":null,\"latitude\":null,\"longitude\":null,\"location\":{\"geoname_id\":null,\"capital\":null,\"languages\":null,\"country_flag\":null,\"country_flag_emoji\":null,\"country_flag_emoji_unicode\":null,\"calling_code\":null,\"is_eu\":null},\"time_zone\":{\"id\":null,\"current_time\":null,\"gmt_offset\":null,\"code\":null,\"is_daylight_saving\":null},\"currency\":{\"code\":null,\"name\":null,\"plural\":null,\"symbol\":null,\"symbol_native\":null},\"connection\":{\"asn\":null,\"isp\":null},\"security\":{\"is_proxy\":null,\"proxy_type\":null,\"is_crawler\":null,\"crawler_name\":null,\"crawler_type\":null,\"is_tor\":null,\"threat_level\":null,\"threat_types\":null}}, \r\n  someLetters=IFPF, \r\n  codeNumber=40149, \r\n  device=Android SDK built for x86, \r\n  eventDate=1/1/20 2:13 PM\r\n}\r\n```\r\n\r\nkafka schema registry schema:\r\n```JSON\r\n{\r\n  \"type\": \"record\",\r\n  \"name\": \"SomeAvro\",\r\n  \"namespace\": \"br.com.foo.models\",\r\n  \"fields\": [\r\n    { \"name\": \"codeNumber\", \"type\": [\"null\", \"int\"] },\r\n    {\r\n      \"name\": \"someNumber\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"macAddress\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someKey\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"coordinates\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someName\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someLetters\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someVersion\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"ip\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someJsonString\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"eventType\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"eventSubType\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"eventDate\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someStatus\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someOtherId\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someSerial\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"message\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someSource\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someInfo\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"OS\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    { \"name\": \"duration\", \"type\": [\"null\", \"long\"], \"default\": \"0\" },\r\n    {\r\n      \"name\": \"tokenAotp\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"device\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    },\r\n    {\r\n      \"name\": \"someOrigin\",\r\n      \"type\": [\"null\", { \"type\": \"string\", \"avro.java.string\": \"String\" }],\r\n      \"avro.java.string\": \"String\"\r\n    }\r\n  ]\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/440", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/440/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/440/events", "html_url": "https://github.com/fastavro/fastavro/issues/440", "id": 640168866, "node_id": "MDU6SXNzdWU2NDAxNjg4NjY=", "number": 440, "title": "ValueError: {} (type <class 'dict'>) do not match", "user": {"login": "JulianScherp", "id": 61968854, "node_id": "MDQ6VXNlcjYxOTY4ODU0", "avatar_url": "https://avatars1.githubusercontent.com/u/61968854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianScherp", "html_url": "https://github.com/JulianScherp", "followers_url": "https://api.github.com/users/JulianScherp/followers", "following_url": "https://api.github.com/users/JulianScherp/following{/other_user}", "gists_url": "https://api.github.com/users/JulianScherp/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianScherp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianScherp/subscriptions", "organizations_url": "https://api.github.com/users/JulianScherp/orgs", "repos_url": "https://api.github.com/users/JulianScherp/repos", "events_url": "https://api.github.com/users/JulianScherp/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianScherp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-17T06:09:14Z", "updated_at": "2020-06-19T08:55:03Z", "closed_at": "2020-06-17T14:05:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to write the Metadata of my GDrive files into an Avro file, but there seems to be a problem with \"videoMediaMetadata\" and \"imageMediaMetadata.location\".\r\nI don't see the difference to, for example, \"permissons\".\r\nAny recommedations or ideas how to fix it would be really appreciated.\r\n\r\nInstruction how to connect to the GDrive API:\r\nhttps://developers.google.com/drive/api/v3/quickstart/python\r\n\r\nHere are more informations about the Metadata:\r\nhttps://developers.google.com/drive/api/v3/reference/files\r\n\r\n\r\nwith the following code it should be possible to reproduce the `code:`\r\n\r\n```\r\nfrom __future__ import print_function\r\nfrom fastavro import writer, parse_schema\r\nimport pickle\r\nimport os.path\r\nfrom googleapiclient.discovery import build, Resource\r\nfrom google_auth_oauthlib.flow import InstalledAppFlow\r\nfrom google.auth.transport.requests import Request\r\n\r\n# If modifying these scopes, delete the file token.pickle.\r\nSCOPES = ['https://www.googleapis.com/auth/drive']\r\n\r\ndef main(permissions=None):\r\n    \"\"\"Shows basic usage of the Drive v3 API.\r\n    Prints the names and ids of the first 10 files the user has access to.\r\n    \"\"\"\r\n\r\n    creds = None\r\n    # The file token.pickle stores the user's access and refresh tokens, and is\r\n    # created automatically when the authorization flow completes for the first\r\n    # time.\r\n    if os.path.exists('token.pickle'):\r\n        with open('token.pickle', 'rb') as token:\r\n            creds = pickle.load(token)\r\n    # If there are no (valid) credentials available, let the user log in.\r\n    if not creds or not creds.valid:\r\n        if creds and creds.expired and creds.refresh_token:\r\n            creds.refresh(Request())\r\n        else:\r\n            flow = InstalledAppFlow.from_client_secrets_file(\r\n                'credentials.json', SCOPES)\r\n            creds = flow.run_local_server(port=0)\r\n        # Save the credentials for the next run\r\n        with open('token.pickle', 'wb') as token:\r\n            pickle.dump(creds, token)\r\n\r\n    service = build('drive', 'v3', credentials=creds)\r\n\r\n    # Call the Drive v3 API\r\n    # Import of Metadata\r\n    results = service.files().list(\r\n        pageSize=10, fields=\"nextPageToken, files(\"\r\n                            \"kind,\"\r\n                            \" id,\"\r\n                            \" name,\"\r\n                            \" mimeType,\"\r\n                            \" description,\"\r\n                            \" starred,\"\r\n                            \" trashed,\"\r\n                            \" explicitlyTrashed,\"\r\n                            \" trashingUser,\"\r\n                            \" trashedTime,\"\r\n                            \" parents,\"\r\n                            \" properties\"\r\n                            \" (key),\"\r\n                            \" appProperties\"\r\n                            \" (key),\"\r\n                            \" spaces,\"\r\n                            \" teamDriveId,\"\r\n                            \" driveId,\"\r\n                            \" lastModifyingUser,\"\r\n                            \" shared,\"\r\n                            \" ownedByMe,\"\r\n                            \" capabilities,\"\r\n                            \" viewersCanCopyContent,\"\r\n                            \" copyRequiresWriterPermission,\"\r\n                            \" writersCanShare,\"\r\n                            \" permissions,\"\r\n                            \" permissionIds,\"\r\n                            \" hasAugmentedPermissions,\"\r\n                            \" folderColorRgb,\"\r\n                            \" originalFilename,\"\r\n                            \" fullFileExtension,\"\r\n                            \" fileExtension,\"\r\n                            \" md5Checksum,\"\r\n                            \" size,\"\r\n                            \" quotaBytesUsed,\"\r\n                            \" headRevisionId,\"\r\n                            \" contentHints, \"\r\n                            \" imageMediaMetadata,\"\r\n                            \" videoMediaMetadata,\"\r\n                            \" isAppAuthorized,\"\r\n                            \"shortcutDetails \"\r\n\r\n                            \")\"\r\n    ).execute()\r\n    records = results.get('files', [])\r\n\r\n    # Writes Avro File\r\n    if not records:\r\n        print('No files found.')\r\n    else:\r\n        print('Files:')\r\n        for edwSequence, record in enumerate(records, start=1):\r\n            print(\"edwSequence: \", edwSequence, record)\r\n\r\n            schema = {\r\n                'name': 'GDrive',\r\n                'type': 'record',\r\n                'fields': [\r\n                    {'name': 'kind', 'type': 'string'},\r\n                    {'name': 'name', 'type': 'string'},\r\n                    {'name': 'id', 'type': 'string'},\r\n                    {'name': 'mimeType', 'type': 'string'},\r\n                    {'name': 'description', 'type': ['string', 'null']},\r\n                    {'name': 'starred', 'type': ['boolean', 'null']},\r\n                    {'name': 'trashed', 'type': ['boolean', 'null']},\r\n                    {'name': 'trashingUser', 'type': ['string', 'null']},\r\n                    {'name': 'trashedTime', 'type': ['string', 'null']},\r\n                    {'name': 'properties', 'type': ['string', 'null']},\r\n                    {'name': 'appProperties', 'type': ['string', 'null']},\r\n                    {'name': 'spaces',\r\n                     'type': {'type': 'array', 'items': 'string'}\r\n                     },\r\n                    {'name': 'driveId', 'type': ['string', 'null']},\r\n                    {\"name\": \"lastModifyingUser\",\r\n                     \"type\": {\r\n                         \"type\": \"record\",\r\n                         \"name\": \"lastModifyingUser\",\r\n                         \"fields\": [\r\n                             {\"name\": \"kind\", \"type\": ['string', 'null']},\r\n                             {\"name\": \"displayName\", \"type\": ['string', 'null']},\r\n                             {\"name\": \"photoLink\", \"type\": ['string', 'null']},\r\n                             {\"name\": \"me\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"permissionId\", \"type\": ['string', 'null']},\r\n                             {\"name\": \"emailAddress\", \"type\": ['string', 'null']}\r\n                         ]\r\n                     }},\r\n                    {'name': 'shared', 'type': ['boolean', 'null']},\r\n                    {'name': 'ownedByMe', 'type': ['boolean', 'null']},\r\n                    {\"name\": \"capabilities\",\r\n                     \"type\": {\r\n                         \"type\": \"record\",\r\n                         \"name\": \"capabilities\",\r\n                         \"fields\": [\r\n                             {\"name\": \"canAddChildren\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canAddMyDriveParent\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canChangeCopyRequiresWriterPermission\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canChangeViewersCanCopyContent\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canComment\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canCopy\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canDelete\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canDeleteChildren\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canDownload\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canEdit\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canListChildren\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canModifyContent\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canMoveChildrenOutOfDrive\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canMoveChildrenWithinDrive\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canMoveItemOutOfDrive\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canMoveItemWithinDrive\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canReadRevisions\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canReadDrive\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canRemoveChildren\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canRemoveMyDriveParent\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canRename\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canShare\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canTrash\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canTrashChildren\", \"type\": ['boolean', 'null']},\r\n                             {\"name\": \"canUntrash\", \"type\": ['boolean', 'null']}\r\n                         ]\r\n                     }},\r\n                    {'name': 'copyRequiresWriterPermission', 'type': ['boolean', 'null']},\r\n                    {'name': 'writersCanShare', 'type': ['boolean', 'null']},\r\n                    {\"name\": \"permissions\",\r\n                     \"type\": {\r\n                         \"type\": \"array\",\r\n                         \"items\": {\r\n                             \"type\": \"record\",\r\n                             \"name\": \"permissions\",\r\n                             \"fields\": [\r\n                                 {\"name\": \"kind\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"id\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"type\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"emailAddress\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"domain\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"role\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"allowFileDiscovery\", \"type\": ['boolean', 'null']},\r\n                                 {\"name\": \"displayName\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"photoLink\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"expirationTime\", \"type\": ['string', 'null']},\r\n                                 {\"name\": \"permissionDetails\",\r\n                                  \"type\": [{\r\n                                      \"type\": \"record\",\r\n                                      \"name\": \"permissionDetails\",\r\n                                      \"fields\": [\r\n                                          {\"name\": \"permissionType\", \"type\": ['string', 'null']},\r\n                                          {\"name\": \"role\", \"type\": ['string', 'null']},\r\n                                          {\"name\": 'inheritedFrom', \"type\": ['string', 'null']},\r\n                                          {\"name\": \"inherited\", \"type\": ['boolean', 'null']}\r\n                                      ]\r\n\r\n                                  }, \"null\"]},\r\n                                 {\"name\": \"deleted\", \"type\": ['boolean', 'null']}]\r\n                         }\r\n                     }},\r\n                    {'name': 'permissionIds',\r\n                     'type': {'type': 'array', 'items': 'string'}\r\n                     },\r\n                    {'name': 'hasAugmentedPermissions', 'type': ['boolean', 'null']},\r\n                    {'name': 'folderColorRgb', 'type': ['string', 'null']},\r\n                    {'name': 'originalFilename', 'type': ['string', 'null']},\r\n                    {'name': 'fullFileExtension', 'type': ['string', 'null']},\r\n                    {'name': 'fileExtension', 'type': ['string', 'null']},\r\n                    {'name': 'md5Checksum', 'type': ['string', 'null']},\r\n                    {'name': 'headRevisionId', 'type': ['string', 'null']},\r\n                    {'name': 'thumbnail', 'type': ['string', 'null']},  #\r\n                    {'name': 'image', 'type': ['bytes', 'null']},  #\r\n                    {'name': 'indexableText', 'type': ['string', 'null']},\r\n\r\n                    {\"name\": \"imageMediaMetadata\",\r\n                     \"type\": [{\r\n                         \"type\": \"record\",\r\n                         \"name\": \"imageMediaMetadata\",\r\n                         \"fields\": [\r\n                             {\"name\": \"width\", \"type\": ['int', 'null']},\r\n                             {\"name\": \"height\", \"type\": ['int', 'null']},\r\n                             {\"name\": \"rotation\", \"type\": ['int', 'null']},\r\n                                                      {\"name\": \"location\",\r\n                                                     \"type\": [{\r\n                                                        \"type\": \"array\",\r\n                                                       \"items\": {\r\n                                                          \"type\": \"record\",\r\n                                                         \"name\": \"location\",\r\n                                                         \"fields\": [\r\n                                                           {\"name\": \"latitude\", \"type\": ['double', 'null']},\r\n                                                          {\"name\": \"longtitude\", \"type\": ['double', 'null']},\r\n                                                         {\"name\": 'altitude', \"type\": ['double', 'null']}\r\n                                                    ]\r\n                                               }}]\r\n                                          }\r\n                                         ,\r\n                             {'name': 'time', 'type': ['string', 'null']},\r\n                             {'name': 'cameraMake', 'type': ['string', 'null']},\r\n                             {'name': 'cameraModel', 'type': ['string', 'null']},\r\n                             {'name': 'exposureTime', 'type': ['float', 'null']},\r\n                             {'name': 'aperture', 'type': ['float', 'null']},\r\n                             {'name': 'flashUsed', 'type': ['boolean', 'null']},\r\n                             {'name': 'focalLength', 'type': ['float', 'null']},\r\n                             {'name': 'isoSpeed', 'type': ['int', 'null']},\r\n                             {'name': 'meteringMode', 'type': ['string', 'null']},\r\n                             {'name': 'sensor', 'type': ['string', 'null']},\r\n                             {'name': 'exposureMode', 'type': ['string', 'null']},\r\n                             {'name': 'colorSpace', 'type': ['string', 'null']},\r\n                             {'name': 'whiteBalance', 'type': ['string', 'null']},\r\n                             {'name': 'exposureBias', 'type': ['float', 'null']},\r\n                             {'name': 'maxApertureValue', 'type': ['float', 'null']},\r\n                             {'name': 'subjectDistance', 'type': ['int', 'null']},\r\n                             {'name': 'lens', 'type': ['string', 'null']}]\r\n                     }, \"null\"]},\r\n\r\n                    {\"name\": \"videoMediaMetadata\",\r\n                     \"type\": [{\r\n                         \"type\": \"record\",\r\n                         \"name\": \"videoMediaMetadata\",\r\n                         \"fields\": [\r\n                             {\"name\": \"width\", \"type\": ['int', 'null']},\r\n                             {\"name\": \"height\", \"type\": ['int', 'null']},\r\n                             {\"name\": \"durationMillis\", \"type\": ['long', 'null']},\r\n                         ]\r\n                     }, \"null\"]\r\n                     }\r\n                    ,\r\n                    {'name': 'isAppAuthorized', 'type': ['boolean', 'null']},\r\n                    {'name': 'exportLinks', 'type': ['string', 'null']},\r\n                    {'name': 'shortcutDetails', 'type': ['string', 'null']},\r\n                    {'name': 'targetId', 'type': ['string', 'null']},\r\n                    {'name': 'targetMimeType', 'type': ['string', 'null']},\r\n\r\n                ],\r\n            }\r\n        parsed_schema = parse_schema(schema)\r\n\r\n        for record in records:\r\n            print(u'{0} ({1})'.format(record['name'],\r\n                                      record['id']))\r\n\r\n        with open('GDrive.avro', 'wb') as out:\r\n            writer(out, parsed_schema, records)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/439", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/439/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/439/events", "html_url": "https://github.com/fastavro/fastavro/issues/439", "id": 636417409, "node_id": "MDU6SXNzdWU2MzY0MTc0MDk=", "number": 439, "title": "Include fieldname and value in TypeError and ValueError", "user": {"login": "juarezr", "id": 576780, "node_id": "MDQ6VXNlcjU3Njc4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/576780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juarezr", "html_url": "https://github.com/juarezr", "followers_url": "https://api.github.com/users/juarezr/followers", "following_url": "https://api.github.com/users/juarezr/following{/other_user}", "gists_url": "https://api.github.com/users/juarezr/gists{/gist_id}", "starred_url": "https://api.github.com/users/juarezr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juarezr/subscriptions", "organizations_url": "https://api.github.com/users/juarezr/orgs", "repos_url": "https://api.github.com/users/juarezr/repos", "events_url": "https://api.github.com/users/juarezr/events{/privacy}", "received_events_url": "https://api.github.com/users/juarezr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T17:16:32Z", "updated_at": "2020-08-05T14:13:57Z", "closed_at": "2020-08-05T14:13:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Problem\r\n\r\nSometimes is hard to figure out what is the wrong when writing rows with fastavro.\r\n\r\nIt may be a error with the:\r\n\r\n1. field defined in schema\r\n2. column value in some row of the data\r\n3. wrong definition for `precision` or `scale`\r\n4. missing value for a required field\r\n5. etc...\r\n\r\nIn this cases a exception like bellow is raised:\r\n\r\n```\r\n  File \"/home/juarezr/src/github/petl/petl/io/avro.py\", line 409, in _write_toavro\r\n    fastavro.writer(fo=target_file,\r\n  File \"fastavro/_write.pyx\", line 628, in fastavro._write.writer\r\n  File \"fastavro/_write.pyx\", line 581, in fastavro._write.Writer.write\r\n  File \"fastavro/_write.pyx\", line 335, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 285, in fastavro._write.write_record\r\n  File \"fastavro/_write.pyx\", line 329, in fastavro._write.write_data\r\nTypeError: Expected list, got str\r\n```\r\n### Enhancement\r\n\r\nI suggest including information for the developer figure out what's wrong in the exception message.\r\n\r\nIt can be information like:\r\n\r\n- field name with error\r\n- the value that raised the error\r\n- the row number for large datasets\r\n- any additional tip for fixing it\r\n\r\nMaybe this will make our lives easy. :smile: \r\n\r\nThanks for the excelent library.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/435", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/435/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/435/events", "html_url": "https://github.com/fastavro/fastavro/issues/435", "id": 615957705, "node_id": "MDU6SXNzdWU2MTU5NTc3MDU=", "number": 435, "title": "Update docs to show an example of how to use the tuple notation to explicitly select the branch a union should take", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T15:05:37Z", "updated_at": "2020-07-11T17:52:29Z", "closed_at": "2020-07-11T17:52:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The feature was add [a long time ago in this PR](https://github.com/fastavro/fastavro/pull/153) but I don't believe it's really documented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/434", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/434/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/434/events", "html_url": "https://github.com/fastavro/fastavro/issues/434", "id": 614939721, "node_id": "MDU6SXNzdWU2MTQ5Mzk3MjE=", "number": 434, "title": "Use type annotations", "user": {"login": "spenczar", "id": 880413, "node_id": "MDQ6VXNlcjg4MDQxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/880413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spenczar", "html_url": "https://github.com/spenczar", "followers_url": "https://api.github.com/users/spenczar/followers", "following_url": "https://api.github.com/users/spenczar/following{/other_user}", "gists_url": "https://api.github.com/users/spenczar/gists{/gist_id}", "starred_url": "https://api.github.com/users/spenczar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spenczar/subscriptions", "organizations_url": "https://api.github.com/users/spenczar/orgs", "repos_url": "https://api.github.com/users/spenczar/repos", "events_url": "https://api.github.com/users/spenczar/events{/privacy}", "received_events_url": "https://api.github.com/users/spenczar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-08T19:30:05Z", "updated_at": "2020-06-22T15:49:49Z", "closed_at": "2020-06-22T15:49:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Type annotations are getting increasingly popular and common in the Python ecosystem. I'm interested in adding annotations to fastavro. Would a PR that does so be of interest?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/433", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/433/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/433/events", "html_url": "https://github.com/fastavro/fastavro/issues/433", "id": 611469590, "node_id": "MDU6SXNzdWU2MTE0Njk1OTA=", "number": 433, "title": "Datetime values pass validation in integer fields", "user": {"login": "zachary-povey", "id": 64191599, "node_id": "MDQ6VXNlcjY0MTkxNTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/64191599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachary-povey", "html_url": "https://github.com/zachary-povey", "followers_url": "https://api.github.com/users/zachary-povey/followers", "following_url": "https://api.github.com/users/zachary-povey/following{/other_user}", "gists_url": "https://api.github.com/users/zachary-povey/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachary-povey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachary-povey/subscriptions", "organizations_url": "https://api.github.com/users/zachary-povey/orgs", "repos_url": "https://api.github.com/users/zachary-povey/repos", "events_url": "https://api.github.com/users/zachary-povey/events{/privacy}", "received_events_url": "https://api.github.com/users/zachary-povey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-03T17:56:08Z", "updated_at": "2020-07-11T20:57:45Z", "closed_at": "2020-07-11T20:57:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Datetime values present in normal integer fields will pass validation, see minimum example below.\r\n```python\r\nfrom fastavro import validate\r\nschema = {\r\n    \"name\": \"schema\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"int_field\",\r\n            \"type\": \"int\",\r\n        }\r\n    ]\r\n}\r\nvalidate({\"int_field\": datetime(2020, 1, 1)}, schema)\r\n```\r\n\r\nI understand that the reason that this is the case is because the date/timestamp logicalTypes are based upon int - however this doesn't seem to be desired behaviour when no logicalType has been set. I therefore imagine the two cases (logical type is/is not set) should have different treatment by `validate`. \r\n\r\nN.B. this _will_ fail to write to avro using this schema.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/432", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/432/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/432/events", "html_url": "https://github.com/fastavro/fastavro/issues/432", "id": 610293000, "node_id": "MDU6SXNzdWU2MTAyOTMwMDA=", "number": 432, "title": "Unable to use codecs with schemaless_writer/reader", "user": {"login": "yeralin", "id": 8620461, "node_id": "MDQ6VXNlcjg2MjA0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeralin", "html_url": "https://github.com/yeralin", "followers_url": "https://api.github.com/users/yeralin/followers", "following_url": "https://api.github.com/users/yeralin/following{/other_user}", "gists_url": "https://api.github.com/users/yeralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeralin/subscriptions", "organizations_url": "https://api.github.com/users/yeralin/orgs", "repos_url": "https://api.github.com/users/yeralin/repos", "events_url": "https://api.github.com/users/yeralin/events{/privacy}", "received_events_url": "https://api.github.com/users/yeralin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T18:26:19Z", "updated_at": "2020-04-30T20:28:35Z", "closed_at": "2020-04-30T20:28:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I might have a silly question, but is it possible to use compression with schemaless writers/readers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/427", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/427/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/427/events", "html_url": "https://github.com/fastavro/fastavro/issues/427", "id": 609296300, "node_id": "MDU6SXNzdWU2MDkyOTYzMDA=", "number": 427, "title": "Unable to install Apache Beam - With fastavro", "user": {"login": "vishalaj1", "id": 20736482, "node_id": "MDQ6VXNlcjIwNzM2NDgy", "avatar_url": "https://avatars2.githubusercontent.com/u/20736482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishalaj1", "html_url": "https://github.com/vishalaj1", "followers_url": "https://api.github.com/users/vishalaj1/followers", "following_url": "https://api.github.com/users/vishalaj1/following{/other_user}", "gists_url": "https://api.github.com/users/vishalaj1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishalaj1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishalaj1/subscriptions", "organizations_url": "https://api.github.com/users/vishalaj1/orgs", "repos_url": "https://api.github.com/users/vishalaj1/repos", "events_url": "https://api.github.com/users/vishalaj1/events{/privacy}", "received_events_url": "https://api.github.com/users/vishalaj1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-04-29T19:18:06Z", "updated_at": "2020-06-14T05:06:21Z", "closed_at": "2020-05-05T20:57:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "   ERROR: Command errored out with exit status 1:\r\n     command: /Users/vishalmac/env/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/hw/m9my2qkx31z3dvr6_96yp03m0000gn/T/pip-install-0lpk0vfj/fastavro/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/hw/m9my2qkx31z3dvr6_96yp03m0000gn/T/pip-install-0lpk0vfj/fastavro/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/hw/m9my2qkx31z3dvr6_96yp03m0000gn/T/pip-record-2zvmlmwi/install-record.txt --single-version-externally-managed --compile --install-headers /Users/vishalmac/env/include/site/python3.8/fastavro\r\n         cwd: /private/var/folders/hw/m9my2qkx31z3dvr6_96yp03m0000gn/T/pip-install-0lpk0vfj/fastavro/\r\n    Complete output (164 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.macosx-10.9-x86_64-3.8\r\n    creating build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_schema_common.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_schema_py.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/write.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_write_py.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/__init__.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_read_py.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_read_common.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_validate_common.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_validation_py.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/six.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/_timezone.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/__main__.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/const.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/schema.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/read.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    copying fastavro/validation.py -> build/lib.macosx-10.9-x86_64-3.8/fastavro\r\n    running build_ext\r\n    building 'fastavro._read' extension\r\n    creating build/temp.macosx-10.9-x86_64-3.8\r\n    creating build/temp.macosx-10.9-x86_64-3.8/fastavro\r\n    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -I/Users/vishalmac/env/include -I/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -c fastavro/_read.c -o build/temp.macosx-10.9-x86_64-3.8/fastavro/_read.o\r\n    fastavro/_read.c:15771:267: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(5, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__11, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_iter_avro_records, 628, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__5)) __PYX_ERR(0, 628, __pyx_L1_error)\r\n                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15783:266: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__6 = (PyObject*)__Pyx_PyCode_New(5, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_iter_avro_blocks, 648, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__6)) __PYX_ERR(0, 648, __pyx_L1_error)\r\n                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15795:254: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__14 = (PyObject*)__Pyx_PyCode_New(8, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__13, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_init, 675, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__14)) __PYX_ERR(0, 675, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15807:253: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__7 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__15, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_iter, 685, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__7)) __PYX_ERR(0, 685, __pyx_L1_error)\r\n                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15819:253: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__16, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_str, 690, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) __PYX_ERR(0, 690, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15831:254: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_init, 697, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(0, 697, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15846:258: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__21, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_schema_2, 724, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) __PYX_ERR(0, 724, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15858:254: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__24 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__23, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_iter, 732, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__24)) __PYX_ERR(0, 732, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15870:254: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__26 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__25, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_next, 737, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__26)) __PYX_ERR(0, 737, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15882:254: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__28 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__27, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_init, 744, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__28)) __PYX_ERR(0, 744, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15897:254: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_init, 755, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(0, 755, __pyx_L1_error)\r\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    fastavro/_read.c:15964:70: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]\r\n      __pyx_type_8fastavro_5_read___pyx_scope_struct___iter_avro_records.tp_print = 0;\r\n                                                                         ^\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here\r\n        Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);\r\n        ^\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'\r\n    #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                         ^\r\n    fastavro/_read.c:15970:70: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]\r\n      __pyx_type_8fastavro_5_read___pyx_scope_struct_1__iter_avro_blocks.tp_print = 0;\r\n                                                                         ^\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here\r\n        Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);\r\n        ^\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'\r\n    #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                         ^\r\n    fastavro/_read.c:15976:61: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]\r\n      __pyx_type_8fastavro_5_read___pyx_scope_struct_2___iter__.tp_print = 0;\r\n                                                                ^\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here\r\n        Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);\r\n        ^\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'\r\n    #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                         ^\r\n    fastavro/_read.c:20695:9: error: too many arguments to function call, expected 15, have 16\r\n            __pyx_empty_bytes  /*PyObject *lnotab*/\r\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    fastavro/_read.c:318:82: note: expanded from macro '__Pyx_PyCode_New'\r\n              PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n              ~~~~~~~~~~                                                             ^~~~\r\n    /Library/Frameworks/Python.framework/Versions/3.8/include/python3.8/code.h:122:12: note: 'PyCode_New' declared here\r\n    PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n               ^\r\n    3 warnings and 12 errors generated.\r\n    error: command 'gcc' failed with exit status 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/425", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/425/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/425/events", "html_url": "https://github.com/fastavro/fastavro/issues/425", "id": 608200797, "node_id": "MDU6SXNzdWU2MDgyMDA3OTc=", "number": 425, "title": "Performance regression introduced in 051b10 makes fastavro slower than avro in some cases", "user": {"login": "stestagg", "id": 704526, "node_id": "MDQ6VXNlcjcwNDUyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/704526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stestagg", "html_url": "https://github.com/stestagg", "followers_url": "https://api.github.com/users/stestagg/followers", "following_url": "https://api.github.com/users/stestagg/following{/other_user}", "gists_url": "https://api.github.com/users/stestagg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stestagg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stestagg/subscriptions", "organizations_url": "https://api.github.com/users/stestagg/orgs", "repos_url": "https://api.github.com/users/stestagg/repos", "events_url": "https://api.github.com/users/stestagg/events{/privacy}", "received_events_url": "https://api.github.com/users/stestagg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-28T10:21:37Z", "updated_at": "2020-04-30T22:26:53Z", "closed_at": "2020-04-29T14:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing an avro python library, and am running performance comparisons between fastavro and avro-python3:  [Benchmarks](https://stestagg.github.io/cavro/benchmark.html)\r\n\r\nI noticed recently that fastavro is now slower than avro-python3 when dealing with more complex schemas (This benchmark + schema is unfortunately an attempt to recreate a simpler schema based on a real-world scenario that I've dealt with!)\r\n\r\nWith the 70kb schema in the attached zip, fastavro is about 30% slower than avro-python3. \r\n\r\nI've extracted a kinda-minimal test case to reproduce this, and a simple bisect confirmed that 051b10 is the culprit (which makes sense given the commit description)\r\n\r\nThe test case + schema are attached and in this gist: https://gist.github.com/stestagg/76410b684dc9343b28d3cf9919345ad8\r\n\r\nZipped version: [fastavro.zip](https://github.com/fastavro/fastavro/files/4544959/fastavro.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/421", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/421/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/421/events", "html_url": "https://github.com/fastavro/fastavro/issues/421", "id": 604474969, "node_id": "MDU6SXNzdWU2MDQ0NzQ5Njk=", "number": 421, "title": "(Python 3.8.x only) fastavro/_read.c:15771:267: error: too many arguments to function call, expected 15, have 16", "user": {"login": "yohei1126", "id": 407811, "node_id": "MDQ6VXNlcjQwNzgxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/407811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yohei1126", "html_url": "https://github.com/yohei1126", "followers_url": "https://api.github.com/users/yohei1126/followers", "following_url": "https://api.github.com/users/yohei1126/following{/other_user}", "gists_url": "https://api.github.com/users/yohei1126/gists{/gist_id}", "starred_url": "https://api.github.com/users/yohei1126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yohei1126/subscriptions", "organizations_url": "https://api.github.com/users/yohei1126/orgs", "repos_url": "https://api.github.com/users/yohei1126/repos", "events_url": "https://api.github.com/users/yohei1126/events{/privacy}", "received_events_url": "https://api.github.com/users/yohei1126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-22T05:48:48Z", "updated_at": "2020-04-26T18:45:18Z", "closed_at": "2020-04-23T02:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error when I tried to install `apache-beam` using poetry on **Python 3.8.1.**\r\n**Note that this issue is not reproducible on Python 3.7.7.**\r\n\r\nPlease also check the attached error log file.\r\n\r\n[error.log](https://github.com/fastavro/fastavro/files/4514010/error.log)\r\n\r\n```\r\n$ poetry add apache-beam\r\nUsing version ^2.20.0 for apache-beam\r\n\r\nUpdating dependencies\r\nResolving dependencies... (0.4s)\r\n\r\n\r\nPackage operations: 14 installs, 0 updates, 0 removals\r\n\r\n  - Installing fastavro (0.21.24)\r\n\r\n[EnvCommandError]\r\nCommand ['/Users/yohei/Library/Caches/pypoetry/virtualenvs/click-stream-dCjrXsV8-py3.8/bin/pip', 'install', '--no-deps', 'fastavro==0.21.24'] errored with the following return code 1, and output:\r\nCollecting fastavro==0.21.24\r\n  Using cached fastavro-0.21.24.tar.gz (496 kB)\r\nInstalling collected packages: fastavro\r\n    Running setup.py install for fastavro: started\r\n    Running setup.py install for fastavro: finished with status 'error'\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /Users/yohei/Library/Caches/pypoetry/virtualenvs/click-stream-dCjrXsV8-py3.8/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/py/bt32yyqd33zg_gtj9nx6b6w80000gn/T/pip-install-6rr_zerb/fastavro/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/py/bt32yyqd33zg_gtj9nx6b6w80000gn/T/pip-install-6rr_zerb/fastavro/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/py/bt32yyqd33zg_gtj9nx6b6w80000gn/T/pip-record-kedp6za7/install-record.txt --single-version-externally-managed --compile --install-headers /Users/yohei/Library/Caches/pypoetry/virtualenvs/click-stream-dCjrXsV8-py3.8/include/site/python3.8/fastavro\r\n         cwd: /private/var/folders/py/bt32yyqd33zg_gtj9nx6b6w80000gn/T/pip-install-6rr_zerb/fastavro/\r\n    Complete output (164 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.macosx-10.13-x86_64-3.8\r\n    creating build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_schema_common.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_schema_py.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/write.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_write_py.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/__init__.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_read_py.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_read_common.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_validate_common.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_validation_py.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/six.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/_timezone.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/__main__.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/const.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/schema.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/read.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    copying fastavro/validation.py -> build/lib.macosx-10.13-x86_64-3.8/fastavro\r\n    running build_ext\r\n    building 'fastavro._read' extension\r\n    creating build/temp.macosx-10.13-x86_64-3.8\r\n    creating build/temp.macosx-10.13-x86_64-3.8/fastavro\r\n    clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -I/Users/yohei/Library/Caches/pypoetry/virtualenvs/click-stream-dCjrXsV8-py3.8/include -I/Users/yohei/.pyenv/versions/3.8.1/include/python3.8 -c fastavro/_read.c -o build/temp.macosx-10.13-x86_64-3.8/fastavro/_read.o\r\n    fastavro/_read.c:15771:267: error: too many arguments to function call, expected 15, have 16\r\n      __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(5, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple,\r\n...\r\n```\r\n\r\nThe same error also happened when I run pip install on virtualenv.\r\n\r\n[error_log2.txt](https://github.com/fastavro/fastavro/files/4514061/error_log2.txt)\r\n\r\n```\r\n$ virtualenv -p python3.8 click_stream\r\n$ source click_stream/bin/activate\r\n(click_stream) \u279c  1_click_stream git:(master) \u2717\r\n(click_stream) \u279c  1_click_stream git:(master) \u2717 touch requirements.txt\r\n(click_stream) \u279c  1_click_stream git:(master) \u2717 pip install -r requirements.txt\r\nERROR: Could not find a version that satisfies the requirement apache-beam==2.22.0 (from -r requirements.txt (line 1)) (from versions: 0.6.0, 2.0.0, 2.1.0, 2.1.1, 2.2.0, 2.11.0, 2.12.0, 2.13.0, 2.14.0, 2.15.0, 2.16.0, 2.17.0, 2.18.0, 2.19.0, 2.20.0)\r\nERROR: No matching distribution found for apache-beam==2.22.0 (from -r requirements.txt (line 1))\r\n...\r\n  clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -I/Users/yohei/Documents/Lazada-Data-Engineering-Assignment/1_click_stream/click_stream/include -I/Users/yohei/.pyenv/versions/3.8.1/include/python3.8 -c fastavro/_read.c -o build/temp.macosx-10.13-x86_64-3.8/fastavro/_read.o\r\n  fastavro/_read.c:15771:267: error: too many arguments to function call, expected 15, have 16\r\n    __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(5, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__11, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_fastavro__read_pyx, __pyx_n_s_iter_avro_records, 628, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__5)) __PYX_ERR(0, 628, __pyx_L1_error)\r\n                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/418", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/418/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/418/events", "html_url": "https://github.com/fastavro/fastavro/issues/418", "id": 602285016, "node_id": "MDU6SXNzdWU2MDIyODUwMTY=", "number": 418, "title": "Error writing JSON records with schemas that include dependent schemas", "user": {"login": "gudjonragnar", "id": 10629275, "node_id": "MDQ6VXNlcjEwNjI5Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/10629275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gudjonragnar", "html_url": "https://github.com/gudjonragnar", "followers_url": "https://api.github.com/users/gudjonragnar/followers", "following_url": "https://api.github.com/users/gudjonragnar/following{/other_user}", "gists_url": "https://api.github.com/users/gudjonragnar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gudjonragnar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gudjonragnar/subscriptions", "organizations_url": "https://api.github.com/users/gudjonragnar/orgs", "repos_url": "https://api.github.com/users/gudjonragnar/repos", "events_url": "https://api.github.com/users/gudjonragnar/events{/privacy}", "received_events_url": "https://api.github.com/users/gudjonragnar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T23:29:20Z", "updated_at": "2020-04-18T18:31:05Z", "closed_at": "2020-04-18T18:31:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have an Avro spec that I want to use when writing records as JSON. This spec contains schemas that have dependencies. When trying to write records using `json_writer` I however faced this:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/gudjonragnar/fastavro/tests/test_json.py\", line 493, in test_with_dependent_schema\r\n    new_records = roundtrip(schema, records)\r\n  File \"/Users/gudjonragnar/fastavro/tests/test_json.py\", line 13, in roundtrip\r\n    json_writer(new_file, schema, records)\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/json_write.py\", line 46, in json_writer\r\n    return writer(AvroJSONEncoder(fo), schema, records)\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/_write_py.py\", line 595, in writer\r\n    codec_compression_level,\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/_write_py.py\", line 476, in __init__\r\n    self.encoder.configure(self.schema)\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/io/json_encoder.py\", line 69, in configure\r\n    self._parser = Parser(schema, self.do_action)\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/io/parser.py\", line 14, in __init__\r\n    self.stack = self.parse()\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/io/parser.py\", line 17, in parse\r\n    symbol = self._parse(self.schema)\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/io/parser.py\", line 31, in _parse\r\n    production.insert(0, self._parse(field[\"type\"]))\r\n  File \"/Users/gudjonragnar/fastavro/fastavro/io/parser.py\", line 95, in _parse\r\n    raise Exception(\"Unhandled type: {}\".format(record_type))\r\nException: Unhandled type: test.Dependency\r\n```\r\nwhere `test.Dependency` is a schema that is already loaded and is featured in a field in another schema as so:\r\n```\r\n...\r\n    \"fields\": [{\r\n        \"name\": \"_dependency\",\r\n        \"type\": \"Dependency\"\r\n    }]\r\n...\r\n```\r\nI wrote a simple test, using the `roundtrip()` method from `test_json.py` which fails with the above error.\r\n```\r\nfrom fastavro.schema import parse_schema\r\n\r\n def test_with_dependent_schema():\r\n    \"\"\"Tests a schema with dependent schema\"\"\"\r\n    dependency = {\r\n        \"type\": \"record\",\r\n        \"name\": \"Dependency\",\r\n        \"namespace\": \"test\",\r\n        \"fields\": [{\r\n            \"name\": \"_name\",\r\n            \"type\": \"string\"\r\n        }]\r\n    }\r\n\r\n    schema = {\r\n        \"type\": \"record\",\r\n        \"name\": \"Test\",\r\n        \"namespace\": \"test\",\r\n        \"fields\": [{\r\n            \"name\": \"_name\",\r\n            \"type\": \"string\"\r\n\r\n        }, {\r\n            \"name\": \"_dependency\",\r\n            \"type\": \"Dependency\"\r\n        }]\r\n    }\r\n\r\n    records = [{\r\n        '_name': 'parent',\r\n        '_dependency': {\r\n            '_name': 'child'\r\n        } \r\n    }]\r\n\r\n    parse_schema(dependency, \"/tmp/dir\")\r\n    parse_schema(schema, \"/tmp/dir\")\r\n\r\n    new_records = roundtrip(schema, records)\r\n    assert records == new_records\r\n```\r\nI found a simple fix for this which I will submit a PR for. I want to include the test above, would `test_json.py` be a fitting place for it @scottbelden ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/416", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/416/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/416/events", "html_url": "https://github.com/fastavro/fastavro/issues/416", "id": 592598428, "node_id": "MDU6SXNzdWU1OTI1OTg0Mjg=", "number": 416, "title": "Bugs in validate", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-02T12:37:36Z", "updated_at": "2020-04-03T12:40:51Z", "closed_at": "2020-04-03T12:40:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "\r\nBug 1:\r\n\r\n```python\r\nfrom fastavro import parse_schema\r\nfrom fastavro.validation import validate\r\n\r\n# Define an schema.\r\nschema_1 = {\r\n    \"type\": \"record\",\r\n    \"name\": \"my_schema_v1\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"type\": {\r\n                \"type\": \"record\",\r\n                \"name\": \"my_field_type\",\r\n                \"fields\": [\r\n                    {\r\n                        \"name\": \"sub_field\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"field2\",\r\n            \"type\": \"my_field_type\"\r\n        }\r\n    ]\r\n}\r\n\r\n# And some data which complies with that schema.\r\ndata_schema_1_compliant = {\r\n    \"field1\": {\"sub_field\": \"foo\"}, \"field2\": {\"sub_field\": \"bar\"}\r\n}\r\nassert validate(data_schema_1_compliant, schema_1)\r\n```\r\n\r\n`validate` expects a parsed_schema. If a non-parsed schema was provided, we should parse it.\r\n\r\nBug 2:\r\n\r\n```python\r\nfrom fastavro import parse_schema\r\nfrom fastavro.validation import validate\r\n\r\n# Define an schema.\r\nschema_1 = {\r\n    \"type\": \"record\",\r\n    \"name\": \"my_schema_v1\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"type\": {\r\n                \"type\": \"record\",\r\n                \"name\": \"my_field_type\",\r\n                \"fields\": [\r\n                    {\r\n                        \"name\": \"sub_field\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"field2\",\r\n            \"type\": \"my_field_type\"\r\n        }\r\n    ]\r\n}\r\nparsed_s1 = parse_schema(schema_1)\r\n\r\n# And some data which complies with that schema.\r\ndata_schema_1_compliant = {\r\n    \"field1\": {\"sub_field\": \"foo\"}, \"field2\": {\"sub_field\": \"bar\"}\r\n}\r\nassert validate(data_schema_1_compliant, parsed_s1)  # so far so good!\r\n\r\n# Another schema! Maybe this is an evolution of schema_2, or it's something\r\n# completely unrelated which just happens to use the same name internally.\r\nschema_2 = {\r\n    \"type\": \"record\",\r\n    \"name\": \"my_schema_v2\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"type\": {\r\n                \"type\": \"record\",\r\n                \"name\": \"my_field_type\",\r\n                \"fields\": [\r\n                    {\r\n                        \"name\": \"sub_field\",\r\n                        \"type\": \"int\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}\r\nparsed_s2 = parse_schema(schema_2)\r\n\r\n# Neither the data nor schema_1 have changed, but this now throws a\r\n# ValidationError.\r\nassert validate(data_schema_1_compliant, parsed_s1)\r\n```\r\n\r\nThe second schema is overriding the first. We should probably always parse the schema again so that `SCHEMA_DEFS` is updated.\r\n\r\nIf fact, parsing the schema by default should alleviate both of these issues.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/409", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/409/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/409/events", "html_url": "https://github.com/fastavro/fastavro/issues/409", "id": 585391309, "node_id": "MDU6SXNzdWU1ODUzOTEzMDk=", "number": 409, "title": "test_ancient_datetime test fails due to a timezone different than UTC", "user": {"login": "mateuszmrozewski", "id": 63337, "node_id": "MDQ6VXNlcjYzMzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/63337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mateuszmrozewski", "html_url": "https://github.com/mateuszmrozewski", "followers_url": "https://api.github.com/users/mateuszmrozewski/followers", "following_url": "https://api.github.com/users/mateuszmrozewski/following{/other_user}", "gists_url": "https://api.github.com/users/mateuszmrozewski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mateuszmrozewski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mateuszmrozewski/subscriptions", "organizations_url": "https://api.github.com/users/mateuszmrozewski/orgs", "repos_url": "https://api.github.com/users/mateuszmrozewski/repos", "events_url": "https://api.github.com/users/mateuszmrozewski/events{/privacy}", "received_events_url": "https://api.github.com/users/mateuszmrozewski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-21T00:23:34Z", "updated_at": "2020-03-23T11:59:58Z", "closed_at": "2020-03-23T11:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\r\n1. Set system timezone to something other than UTC/GMT, ie. 'Australia/Sydney'.\r\n2. Run the test.\r\n\r\nExpected:\r\nTest works\r\n\r\nActual:\r\nTest fails with different times:\r\n`FAILED tests/test_logical_types.py::test_ancient_datetime - assert datetime.date...0, 1, 1, 0, 0) == datetime.date...12, 31, 14, 0)`\r\n\r\n\r\nThe test seems to try to go around it, but From Python documentation about datetime.replace() method:\r\n\r\n> Note that tzinfo=None can be specified to create a naive datetime from an aware datetime with no conversion of date and time data.\r\n\r\nIt seems that serialization and deserialization may have an issue with timezones.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/408", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/408/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/408/events", "html_url": "https://github.com/fastavro/fastavro/issues/408", "id": 585384657, "node_id": "MDU6SXNzdWU1ODUzODQ2NTc=", "number": 408, "title": "Failing tests on a clean ubuntu setup", "user": {"login": "mateuszmrozewski", "id": 63337, "node_id": "MDQ6VXNlcjYzMzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/63337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mateuszmrozewski", "html_url": "https://github.com/mateuszmrozewski", "followers_url": "https://api.github.com/users/mateuszmrozewski/followers", "following_url": "https://api.github.com/users/mateuszmrozewski/following{/other_user}", "gists_url": "https://api.github.com/users/mateuszmrozewski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mateuszmrozewski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mateuszmrozewski/subscriptions", "organizations_url": "https://api.github.com/users/mateuszmrozewski/orgs", "repos_url": "https://api.github.com/users/mateuszmrozewski/repos", "events_url": "https://api.github.com/users/mateuszmrozewski/events{/privacy}", "received_events_url": "https://api.github.com/users/mateuszmrozewski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-20T23:57:49Z", "updated_at": "2020-03-23T12:39:02Z", "closed_at": "2020-03-23T12:39:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\r\n\r\n1. Spin up a new Ubuntu (I use a VM with Ubuntu 18.04)\r\n2. Install python\r\n3. Clone fastavro\r\n4. Create virtual environment\r\n5. Install dependencies using `pip install -r developer_requirements.txt`\r\n6. Run test using run-tests.sh\r\n\r\nExpected result:\r\nAll tests pass\r\n\r\nActual result:\r\nA few tests fail due to missing lz4, zstandard, snappy. I had to install those packages on top of the developer_requirements.txt. This also required installing some ubuntu packages.\r\n\r\nFor the missing dependencies, should they be added to developer_requirements.txt?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/406", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/406/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/406/events", "html_url": "https://github.com/fastavro/fastavro/issues/406", "id": 584477969, "node_id": "MDU6SXNzdWU1ODQ0Nzc5Njk=", "number": 406, "title": " \"TypeError: list indices must be integers or slices, not str\" when trying to make a field nullable", "user": {"login": "eino", "id": 4985, "node_id": "MDQ6VXNlcjQ5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eino", "html_url": "https://github.com/eino", "followers_url": "https://api.github.com/users/eino/followers", "following_url": "https://api.github.com/users/eino/following{/other_user}", "gists_url": "https://api.github.com/users/eino/gists{/gist_id}", "starred_url": "https://api.github.com/users/eino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eino/subscriptions", "organizations_url": "https://api.github.com/users/eino/orgs", "repos_url": "https://api.github.com/users/eino/repos", "events_url": "https://api.github.com/users/eino/events{/privacy}", "received_events_url": "https://api.github.com/users/eino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T15:03:32Z", "updated_at": "2020-03-22T16:12:09Z", "closed_at": "2020-03-22T16:12:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using fastavro to deserialize data ; however I'm having an issue when trying to handle a schema migration that makes a field nullable. As I still need to accept the old data, I followed the Schema resolution rules, especially the following one : \r\n\r\n>  if reader's is a union, but writer's is not\r\n> The first schema in the reader's union that matches the writer's schema is recursively resolved against it. If none match, an error is signalled.\r\n\r\nSo the new reader's schema will have an union containing the existing record and null. As I don't need to handle a default case, they can be in either order. \r\nAs I understand the specification, the best bet is to put the matching record first in the union, so they match first. \r\n\r\nHowever deserialization generates the following TypeError : \r\n\r\n> Traceback (most recent call last):\r\n>   File \"test.py\", line 30, in <module>\r\n>     for record in avro_reader:\r\n>   File \"fastavro/_read.pyx\", line 675, in _iter_avro_records\r\n>   File \"fastavro/_read.pyx\", line 557, in fastavro._read._read_data\r\n>   File \"fastavro/_read.pyx\", line 468, in fastavro._read.read_record\r\n>   File \"fastavro/_read.pyx\", line 557, in fastavro._read._read_data\r\n>   File \"fastavro/_read.pyx\", line 457, in fastavro._read.read_record\r\n> TypeError: list indices must be integers or slices, not str\r\n\r\n\r\nHere are schemas that reproduce the issue : \r\nWriter schema : \r\n```\r\n{\r\n    \"namespace\": \"com.eino\",\r\n    \"name\": \"Item\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\"name\": \"category\",\r\n            \"type\": {\r\n                \"type\": \"record\",\r\n                \"name\":\"Category\",\r\n                \"fields\": [\r\n                    {\"name\": \"name\", \"type\": \"string\"}                    \r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}\r\n\r\n```\r\nReader schema : \r\n\r\n```\r\n{\r\n    \"namespace\": \"com.eino\",\r\n    \"name\": \"Item\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\"name\": \"category\",\r\n            \"type\": [\r\n                {\r\n                    \"type\": \"record\",\r\n                    \"name\":\"Category\",\r\n                    \"fields\": [\r\n                        {\"name\": \"name\", \"type\": \"string\"}\r\n                    ]\r\n                },\r\n                \"null\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nAnd a sample code\r\n\r\n```\r\nimport avro\r\nfrom fastavro import reader, parse_schema\r\nfrom avro.datafile import DataFileWriter\r\nfrom avro.io import DatumWriter\r\nimport json\r\n\r\n\r\ndata = {\r\n    \"category\": {\r\n        \"name\": \"my-category\"\r\n    }\r\n}\r\n\r\nschema_file = open(\"writerschema.avsc\", \"r\")\r\n                                    \r\norders_schema = avro.schema.Parse(schema_file.read())\r\n\r\nout_file = open(\"data.avro\", \"wb\")\r\nwriter = DataFileWriter(out_file, DatumWriter(), orders_schema)\r\nwriter.append(data)\r\nwriter.close()\r\n\r\nwith open(\"readerschema.avsc\", \"r\") as f:\r\n        reader_schema_dict = json.load(f)\r\nreader_schema = parse_schema(reader_schema_dict)\r\nwith open(\"data.avro\", \"rb\") as avro_stream:\r\n    avro_reader = reader(avro_stream, reader_schema=reader_schema)\r\n    for record in avro_reader:\r\n        print(record)\r\n```\r\n\r\nIf I write the schema with the reader's schema, everything works. So It seems the schema itself is correct.\r\n\r\nAny Idea ? Shouldn't fastavro deserialization work with the previous example ?\r\nI'm using the last 0.22.13 by the way.\r\n\r\nThanks in advance !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/405", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/405/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/405/events", "html_url": "https://github.com/fastavro/fastavro/issues/405", "id": 583207558, "node_id": "MDU6SXNzdWU1ODMyMDc1NTg=", "number": 405, "title": "Add xz codec support", "user": {"login": "brokenjacobs", "id": 3159463, "node_id": "MDQ6VXNlcjMxNTk0NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3159463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brokenjacobs", "html_url": "https://github.com/brokenjacobs", "followers_url": "https://api.github.com/users/brokenjacobs/followers", "following_url": "https://api.github.com/users/brokenjacobs/following{/other_user}", "gists_url": "https://api.github.com/users/brokenjacobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/brokenjacobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brokenjacobs/subscriptions", "organizations_url": "https://api.github.com/users/brokenjacobs/orgs", "repos_url": "https://api.github.com/users/brokenjacobs/repos", "events_url": "https://api.github.com/users/brokenjacobs/events{/privacy}", "received_events_url": "https://api.github.com/users/brokenjacobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T18:18:30Z", "updated_at": "2020-03-22T18:22:47Z", "closed_at": "2020-03-22T18:22:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw a closed issue discussing adding xz support when python2.7 support is dropped from the library.\r\n\r\nCan this be reconsidered now? If not, could support be built using the lzma backports library?\r\nhttps://pypi.org/project/backports.lzma/\r\n\r\nWe are using xz codec in many of our avro files and this would be very helpful. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/402", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/402/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/402/events", "html_url": "https://github.com/fastavro/fastavro/issues/402", "id": 574300462, "node_id": "MDU6SXNzdWU1NzQzMDA0NjI=", "number": 402, "title": "Include an example of serializing a record using the tuple notation", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-02T22:51:41Z", "updated_at": "2020-03-03T15:55:51Z", "closed_at": "2020-03-03T15:55:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "While this has existed for a while, it is missing from the docs and it's a common question that comes up so we should add an example of that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/401", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/401/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/401/events", "html_url": "https://github.com/fastavro/fastavro/issues/401", "id": 574292272, "node_id": "MDU6SXNzdWU1NzQyOTIyNzI=", "number": 401, "title": "Incorrect/unexpected schema selection from union of record schemas due to silent failures", "user": {"login": "znatty22", "id": 10283712, "node_id": "MDQ6VXNlcjEwMjgzNzEy", "avatar_url": "https://avatars2.githubusercontent.com/u/10283712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/znatty22", "html_url": "https://github.com/znatty22", "followers_url": "https://api.github.com/users/znatty22/followers", "following_url": "https://api.github.com/users/znatty22/following{/other_user}", "gists_url": "https://api.github.com/users/znatty22/gists{/gist_id}", "starred_url": "https://api.github.com/users/znatty22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/znatty22/subscriptions", "organizations_url": "https://api.github.com/users/znatty22/orgs", "repos_url": "https://api.github.com/users/znatty22/repos", "events_url": "https://api.github.com/users/znatty22/events{/privacy}", "received_events_url": "https://api.github.com/users/znatty22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T22:32:23Z", "updated_at": "2020-03-22T16:14:31Z", "closed_at": "2020-03-22T16:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom fastavro import writer, reader, parse_schema\r\nfrom pprint import pprint\r\n\r\n# Avro schema describing data that will go into avro file\r\nschema = {\r\n     \"namespace\": \"kidsfirst\",\r\n     \"type\": \"record\",\r\n     \"name\": \"FileSchema\",\r\n     \"fields\": [\r\n         {\r\n             'name': 'object',\r\n             'type': [\r\n                {\r\n                    'fields': [\r\n                         {\"name\": \"external_id\", \"type\": [\"null\", \"string\"], 'default': None},\r\n                         {\"name\": \"gender\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n                         {\"name\": \"race\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n                         {\"name\": \"age\",  \"type\": [\"null\", \"int\"], 'default': None}\r\n                     ],\r\n                     'type': 'record',\r\n                     'name': 'patient'\r\n                },\r\n                {\r\n                    'fields': [\r\n                        {\"name\": \"external_id\", \"type\": [\"null\", \"string\"], 'default': None},\r\n                        {\"name\": \"analyte_type\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n                        {\"name\": \"composition\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n                        {\r\n                            \"name\": \"duo_ids\", \r\n                            \"type\": {\r\n                                 'type': 'array',\r\n                                 'items': 'string'\r\n                             }\r\n                        }\r\n                     ],\r\n                     'type': 'record',\r\n                     'name': 'specimen'\r\n                } \r\n             ]\r\n         }\r\n     ]\r\n}\r\n\r\n# Create some data \r\nrecords = [\r\n    {'object': {\"external_id\": \"Patient1\", \"gender\": \"female\"}},\r\n    {'object': {\"external_id\": \"Specimen1\", \"analyte_type\": \"DNA\"}},\r\n]\r\n\r\n# Write \r\nwith open('out.avro', 'wb') as out:\r\n    writer(out, parse_schema(schema), records, validator=True)\r\n    \r\n\r\n# Read\r\nwith open('out.avro', 'rb') as fo:\r\n    for record in reader(fo):\r\n        pprint(record)\r\n```\r\n \r\n**ACTUAL OUTPUT:**\r\n```\r\n{'object': {'age': None,\r\n            'external_id': 'Patient1',\r\n            'gender': 'female',\r\n            'race': None}}\r\n{'object': {'age': None,\r\n            'external_id': 'Specimen1',\r\n            'gender': None,\r\n            'race': None}}\r\n```\r\n\r\n**EXPECTED OUTPUT:**\r\n```\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\n<ipython-input-6-99a6989e7d9d> in <module>\r\n     54 # Write\r\n     55 with open('out.avro', 'wb') as out:\r\n---> 56     writer(out, parse_schema(schema), records, validator=True)\r\n     57 \r\n     58 \r\n\r\nfastavro/_write.pyx in fastavro._write.writer()\r\n\r\nfastavro/_write.pyx in fastavro._write.Writer.write()\r\n\r\nfastavro/_validation.pyx in fastavro._validation.validate()\r\n\r\nfastavro/_validation.pyx in fastavro._validation.validate()\r\n\r\nfastavro/_validation.pyx in fastavro._validation.validate_record()\r\n\r\nfastavro/_validation.pyx in fastavro._validation.validate()\r\n\r\nfastavro/_validation.pyx in fastavro._validation.validate_union()\r\n\r\nValidationError: [\r\n  \"Field(kidsfirst.FileSchema.object.kidsfirst.specimen.duo_ids) is None expected {'type': 'array', 'items': 'string'}\"\r\n]\r\n```\r\n\r\nI'm not sure how schema selection is done in fastavro, but it seems that\r\nthe `specimen` schema should have been selected for deserializing the \r\nsecond record in `records`. Since it was not selected and instead the \r\n`patient` schema was selected, we get an unexpected/incorrect output.\r\n\r\nIf I run this: \r\n\r\n```\r\nfrom fastavro import writer, reader, parse_schema\r\nfrom pprint import pprint\r\n\r\n# Avro schema describing data that will go into avro file\r\nschema = {\r\n     \"namespace\": \"kidsfirst\",\r\n     \"type\": \"record\",\r\n     \"name\": \"FileSchema\",\r\n     \"fields\": [\r\n         {\r\n             'name': 'object',\r\n             'type': [\r\n#                 {\r\n#                     'fields': [\r\n#                          {\"name\": \"external_id\", \"type\": [\"null\", \"string\"], 'default': None},\r\n#                          {\"name\": \"gender\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n#                          {\"name\": \"race\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n#                          {\"name\": \"age\",  \"type\": [\"null\", \"int\"], 'default': None}\r\n#                      ],\r\n#                      'type': 'record',\r\n#                      'name': 'patient'\r\n#                 },\r\n                {\r\n                    'fields': [\r\n                        {\"name\": \"external_id\", \"type\": [\"null\", \"string\"], 'default': None},\r\n                        {\"name\": \"analyte_type\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n                        {\"name\": \"composition\",  \"type\": [\"null\", \"string\"], 'default': None},\r\n                        {\r\n                            \"name\": \"duo_ids\", \r\n                            \"type\": {\r\n                                 'type': 'array',\r\n                                 'items': 'string'\r\n                             }\r\n                        }\r\n                     ],\r\n                     'type': 'record',\r\n                     'name': 'specimen'\r\n                } \r\n             ]\r\n         }\r\n     ]\r\n}\r\n\r\n# Create some data \r\nrecords = [\r\n    {'object': {\"external_id\": \"Patient1\", \"gender\": \"female\"}},\r\n    {'object': {\"external_id\": \"Specimen1\", \"analyte_type\": \"DNA\"}},\r\n]\r\n\r\n# Write \r\nwith open('out.avro', 'wb') as out:\r\n    writer(out, parse_schema(schema), records, validator=True)\r\n    \r\n\r\n# Read\r\nwith open('out.avro', 'rb') as fo:\r\n    for record in reader(fo):\r\n        pprint(record)\r\n```\r\n\r\nI get the expected response above (the `ValidationError`)\r\n\r\nRegardless of how schema selection is done, perhaps the user should somehow \r\nbe able to see which named record schema was selected to deserialize \r\neach record. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/399", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/399/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/399/events", "html_url": "https://github.com/fastavro/fastavro/issues/399", "id": 574180945, "node_id": "MDU6SXNzdWU1NzQxODA5NDU=", "number": 399, "title": "Not possible to deserialize event using json_reader with unions", "user": {"login": "marcosschroh", "id": 2828842, "node_id": "MDQ6VXNlcjI4Mjg4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2828842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcosschroh", "html_url": "https://github.com/marcosschroh", "followers_url": "https://api.github.com/users/marcosschroh/followers", "following_url": "https://api.github.com/users/marcosschroh/following{/other_user}", "gists_url": "https://api.github.com/users/marcosschroh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcosschroh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcosschroh/subscriptions", "organizations_url": "https://api.github.com/users/marcosschroh/orgs", "repos_url": "https://api.github.com/users/marcosschroh/repos", "events_url": "https://api.github.com/users/marcosschroh/events{/privacy}", "received_events_url": "https://api.github.com/users/marcosschroh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-02T19:02:35Z", "updated_at": "2020-03-03T14:05:56Z", "closed_at": "2020-03-03T14:05:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst at all thanks for this library. I am running into an issue in which is not possible to deserialize event using `json_reader` with `unions`. The serialization works fine, but when I want to get the original payload the library seems not to work properly. Here the steps to reproduce:\r\n\r\n```python\r\nimport fastavro\r\nimport io\r\n\r\nschema = {\r\n    'type': 'record',\r\n    'name': 'Inbox',\r\n    'fields': [\r\n        {'type': 'string', 'name': 'id'},\r\n        {'type': 'string', 'name': 'msg_title'},\r\n        {'type': ['null', 'long'], 'name': 'date_sent', 'default': None},\r\n        {   \r\n            'name': 'msg_content',\r\n            'type': {\r\n                'type': 'array',\r\n                'items': [\r\n                    {\r\n                        'type': 'record',\r\n                        'name': 'LimitedTime',\r\n                        'fields': [\r\n                            {\r\n                                'type': ['string', 'null'],\r\n                                'name': 'type',\r\n                                'default': 'now'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        'type': 'record',\r\n                        'name': 'Text',\r\n                        'fields': [\r\n                            {\r\n                                'type': ['string', 'null'],\r\n                                'name': 'text'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}\r\n\r\npayload = {\r\n    'id': 1234,\r\n    'msg_title': 'Hi',\r\n    'msg_content': [{'type': 'now'}, {'text': 'hi from here!'}]\r\n}\r\n\r\nfp = io.StringIO()\r\nfastavro.json_writer(fp, fastavro.parse_schema(schema), [payload])\r\n\r\n# let's see how serialization works fine\r\nfp.getvalue()\r\n\r\n# '{\"id\": 1234, \"msg_title\": \"Hi\", \"date_sent\": null, \"msg_content\": [{\"LimitedTime\": {\"type\": {\"string\": \"now\"}}}, {\"Text\": {\"text\": {\"string\": \"hi from here!\"}}}]}'\r\n\r\n# let's go to the initial position on fp\r\nfp.seek(0)\r\n\r\n# deserialize\r\nrecords = fastavro.json_reader(fp, fastavro.parse_schema(new_schema))\r\n\r\nlist(records)\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-97-ce04fdb3167a> in <module>\r\n----> 1 list(records)\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in _elems()\r\n    768                         self.writer_schema,\r\n    769                         self.reader_schema,\r\n--> 770                         self.return_record_name\r\n    771                     )\r\n    772                     self.decoder.drain()\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in read_data(decoder, writer_schema, reader_schema, return_record_name)\r\n    431             if record_type in ['array', 'map', 'record', 'union']:\r\n    432                 data = reader_fn(decoder, writer_schema, reader_schema,\r\n--> 433                                  return_record_name)\r\n    434             else:\r\n    435                 data = reader_fn(decoder, writer_schema, reader_schema)\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in read_record(decoder, writer_schema, reader_schema, return_record_name)\r\n    325         for field in writer_schema['fields']:\r\n    326             record[field['name']] = read_data(decoder, field['type'], None,\r\n--> 327                                               return_record_name)\r\n    328     else:\r\n    329         readers_field_dict = {}\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in read_data(decoder, writer_schema, reader_schema, return_record_name)\r\n    431             if record_type in ['array', 'map', 'record', 'union']:\r\n    432                 data = reader_fn(decoder, writer_schema, reader_schema,\r\n--> 433                                  return_record_name)\r\n    434             else:\r\n    435                 data = reader_fn(decoder, writer_schema, reader_schema)\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in read_array(decoder, writer_schema, reader_schema, return_record_name)\r\n    228     for item in decoder.iter_array():\r\n    229         read_items.append(item_reader(decoder, writer_schema, reader_schema,\r\n--> 230                                       return_record_name))\r\n    231\r\n    232     decoder.read_array_end()\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in item_reader(decoder, w_schema, _, return_record_name)\r\n    220         def item_reader(decoder, w_schema, _, return_record_name):\r\n    221             return read_data(decoder, w_schema['items'], None,\r\n--> 222                              return_record_name)\r\n    223\r\n    224     read_items = []\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in read_data(decoder, writer_schema, reader_schema, return_record_name)\r\n    431             if record_type in ['array', 'map', 'record', 'union']:\r\n    432                 data = reader_fn(decoder, writer_schema, reader_schema,\r\n--> 433                                  return_record_name)\r\n    434             else:\r\n    435                 data = reader_fn(decoder, writer_schema, reader_schema)\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/_read_py.py in read_union(decoder, writer_schema, reader_schema, return_record_name)\r\n    262                return_record_name=False):\r\n    263     # schema resolution\r\n--> 264     index = decoder.read_index()\r\n    265     idx_schema = writer_schema[index]\r\n    266     if reader_schema:\r\n\r\n~/Projects/rae-schemalib-py/venv/lib/python3.7/site-packages/fastavro/io/json_decoder.py in read_index(self)\r\n    165         alternative_symbol = self._parser.pop_symbol()\r\n    166\r\n--> 167         if self._current[self._key] is None:\r\n    168             label = \"null\"\r\n    169         else:\r\n\r\nKeyError: 'msg_content'\r\n```\r\n\r\nAny ideas?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/393", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/393/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/393/events", "html_url": "https://github.com/fastavro/fastavro/issues/393", "id": 563207817, "node_id": "MDU6SXNzdWU1NjMyMDc4MTc=", "number": 393, "title": "_parse_schema strips \"doc\" key from record", "user": {"login": "ulrikjohansson", "id": 387677, "node_id": "MDQ6VXNlcjM4NzY3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/387677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulrikjohansson", "html_url": "https://github.com/ulrikjohansson", "followers_url": "https://api.github.com/users/ulrikjohansson/followers", "following_url": "https://api.github.com/users/ulrikjohansson/following{/other_user}", "gists_url": "https://api.github.com/users/ulrikjohansson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulrikjohansson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulrikjohansson/subscriptions", "organizations_url": "https://api.github.com/users/ulrikjohansson/orgs", "repos_url": "https://api.github.com/users/ulrikjohansson/repos", "events_url": "https://api.github.com/users/ulrikjohansson/events{/privacy}", "received_events_url": "https://api.github.com/users/ulrikjohansson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T13:30:34Z", "updated_at": "2020-02-26T20:24:20Z", "closed_at": "2020-02-26T20:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code here: \r\nhttps://github.com/fastavro/fastavro/blob/7df1334ae761d1c4ae3e087a4f3d2683998fd0d6/fastavro/_schema.pyx#L88-L93\r\nstrips \"doc\" keys from avro records when calling `fastavro.parse_schema(schema)`.\r\nIs this intentional? It seems like \"doc\" keys are valid optional keys in record types.\r\n\r\nAn example input python dict schema:\r\n```\r\n{\r\n  \"type\": \"record\",\r\n  \"name\": \"record_name\",\r\n  \"doc\": \"blah\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"field1\",\r\n      \"type\": \"string\",\r\n      \"default\": \"\"\r\n    }\r\n  ]\r\n}\r\n```\r\nResult of `parse_schema()`\r\n```\r\n{\r\n  \"type\": \"record\",\r\n  \"name\": \"record_name\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"field1\",\r\n      \"type\": \"string\",\r\n      \"default\": \"\"\r\n    }\r\n  ]\r\n}\r\n```\r\nI'm using fastavro v0.22.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/389", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/389/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/389/events", "html_url": "https://github.com/fastavro/fastavro/issues/389", "id": 555489620, "node_id": "MDU6SXNzdWU1NTU0ODk2MjA=", "number": 389, "title": "pre-1970 timestamps on Windows", "user": {"login": "jmgpeeters", "id": 7912339, "node_id": "MDQ6VXNlcjc5MTIzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7912339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmgpeeters", "html_url": "https://github.com/jmgpeeters", "followers_url": "https://api.github.com/users/jmgpeeters/followers", "following_url": "https://api.github.com/users/jmgpeeters/following{/other_user}", "gists_url": "https://api.github.com/users/jmgpeeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmgpeeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmgpeeters/subscriptions", "organizations_url": "https://api.github.com/users/jmgpeeters/orgs", "repos_url": "https://api.github.com/users/jmgpeeters/repos", "events_url": "https://api.github.com/users/jmgpeeters/events{/privacy}", "received_events_url": "https://api.github.com/users/jmgpeeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-27T10:41:36Z", "updated_at": "2020-02-25T21:40:11Z", "closed_at": "2020-02-25T21:40:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When serialising or deserialising a timestamp (I'm using millis) with negative offset to the 1970-1-1 epoch, this generally fails on Windows platforms. This is because\r\n\r\n```\r\ncpdef parse_timestamp(data, resolution):\r\n    return datetime.datetime.fromtimestamp(data / resolution, tz=utc)\r\n```\r\nwill get hit with a negative argument. E.g.\r\n\r\n```\r\ndatetime.datetime.fromtimestamp(-1.0)\r\n---------------------------------------------------------------------------\r\nOSError                                   Traceback (most recent call last)\r\n<ipython-input-146-844a4ebeb041> in <module>\r\n    ----> 1 datetime.datetime.fromtimestamp(-1.0)\r\nOSError: [Errno 22] Invalid argument\r\n```\r\n\r\nOn Linux I'm not seeing issues. This is clearly a known problem (e.g. https://bugs.python.org/issue1646728) but nevertheless annoying, as it prevents fastavro from being used reliably on Windows (for our purposes).\r\n\r\nI'm not sure what the performance implications would be, but the function could be replaced by\r\n\r\n```\r\nEPOCH_UTC = datetime.datetime(1970, 1, 1, tzinfo=fastavro._timezone.utc)\r\ncpdef parse_timestamp(data, resolution):\r\n   return EPOCH_UTC + datetime.timedelta(seconds=data/resolution)\r\n```\r\n\r\nSomething similar would also be needed on the write end, where\r\n\r\n```\r\ncpdef prepare_timestamp_millis(object data, schema):\r\n   ...\r\n            return <long64>(<double>(data.timestamp()) * MLS_PER_SECOND)\r\n  ...\r\n```\r\ncauses a similar failure, when calling .timestamp on a pre-EPOCH datetime.\r\nIf you agree (maybe this has come up before?) I'm happy to prepare a PR or test out a branch.\r\n\r\nBest,\r\n-Joris.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/388", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/388/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/388/events", "html_url": "https://github.com/fastavro/fastavro/issues/388", "id": 550994514, "node_id": "MDU6SXNzdWU1NTA5OTQ1MTQ=", "number": 388, "title": "Top-Level Union unsupported", "user": {"login": "danieltahara", "id": 1313465, "node_id": "MDQ6VXNlcjEzMTM0NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1313465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieltahara", "html_url": "https://github.com/danieltahara", "followers_url": "https://api.github.com/users/danieltahara/followers", "following_url": "https://api.github.com/users/danieltahara/following{/other_user}", "gists_url": "https://api.github.com/users/danieltahara/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieltahara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieltahara/subscriptions", "organizations_url": "https://api.github.com/users/danieltahara/orgs", "repos_url": "https://api.github.com/users/danieltahara/repos", "events_url": "https://api.github.com/users/danieltahara/events{/privacy}", "received_events_url": "https://api.github.com/users/danieltahara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-16T18:59:03Z", "updated_at": "2020-01-16T20:08:01Z", "closed_at": "2020-01-16T20:08:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "fastavro version: 0.22.9\r\n\r\nTop-level primitive, record, array, and other fields are allowed, but top-level union fields are not. It's not obvious to me from the Avro spec that this isn't allowed, but I could see how it would make decoding super tricky. https://avro.apache.org/docs/current/spec.html#schemas. That said, fastavro supports a vanilla union type as the schema, so I don't see why there's the limitation.\r\n\r\n```\r\nIn [1]: from fastavro import parse_schema\r\n\r\nIn [2]: schema = {\r\n   ...:    \"name\": \"sensor_native\",\r\n   ...:    \"type\": [\"null\", \"double\"],\r\n   ...: }\r\n\r\nIn [3]: parse_schema(schema)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-551aa533bb5f> in <module>\r\n----> 1 parse_schema(schema)\r\n\r\nfastavro/_schema.pyx in fastavro._schema.parse_schema()\r\n\r\nfastavro/_schema.pyx in fastavro._schema._parse_schema()\r\n\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\nversus:\r\n```\r\nIn [6]: schema = [\"null\", {\r\n   ...:    \"name\": \"sensor_native\",\r\n   ...:    \"type\": \"double\"\r\n   ...: }]\r\n\r\nIn [7]: parse_schema(schema)\r\nOut[7]: ['null', {'type': 'double'}]\r\n```\r\n\r\nThere needs to be an `isinstance(schema_type, list)` here: https://github.com/fastavro/fastavro/blob/master/fastavro/_schema.pyx#L180", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/387", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/387/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/387/events", "html_url": "https://github.com/fastavro/fastavro/issues/387", "id": 544012411, "node_id": "MDU6SXNzdWU1NDQwMTI0MTE=", "number": 387, "title": "Avro serialisation in-memory", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-30T21:10:46Z", "updated_at": "2020-02-17T19:56:54Z", "closed_at": "2020-02-17T19:55:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "How about adding a function that allows Avro serialisation in-memory, without hitting the disk?\r\n\r\nI know it's possible via `io.BytesIO` now:\r\n```\r\nfrom io import BytesIO\r\nout = BytesIO()\r\nwriter(out, parsed_schema, records)\r\nout.getvalue()\r\n```\r\n\r\nBut e.g. https://docs.python.org/3/library/json.html has direct support for that use case via `dumps` and `loads`. It's common when sending things instead of writing to a file.\r\n\r\nAlternatively, I'd suggest adding a docs example mentioning this pattern of using `io.BytesIO` to serialise and de-serialise in-memory.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/383", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/383/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/383/events", "html_url": "https://github.com/fastavro/fastavro/issues/383", "id": 539842270, "node_id": "MDU6SXNzdWU1Mzk4NDIyNzA=", "number": 383, "title": "Bad deserialization of unions with parameter return_record_name set to True", "user": {"login": "swoutch", "id": 38116812, "node_id": "MDQ6VXNlcjM4MTE2ODEy", "avatar_url": "https://avatars1.githubusercontent.com/u/38116812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swoutch", "html_url": "https://github.com/swoutch", "followers_url": "https://api.github.com/users/swoutch/followers", "following_url": "https://api.github.com/users/swoutch/following{/other_user}", "gists_url": "https://api.github.com/users/swoutch/gists{/gist_id}", "starred_url": "https://api.github.com/users/swoutch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swoutch/subscriptions", "organizations_url": "https://api.github.com/users/swoutch/orgs", "repos_url": "https://api.github.com/users/swoutch/repos", "events_url": "https://api.github.com/users/swoutch/events{/privacy}", "received_events_url": "https://api.github.com/users/swoutch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T18:21:26Z", "updated_at": "2019-12-19T22:59:04Z", "closed_at": "2019-12-19T22:59:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When deserializing an union with the parameter `return_record_name` set to `True`, we should get something like this : \r\n```python\r\n{\"my_union\": (\"foo\", {\"field1\": 1})}\r\n```\r\ninstead of the following if we set `return_record_name` to `False`:\r\n```python\r\n{\"my_union\": {\"field1\": 1}}\r\n```\r\n\r\n\r\nHowever, when there are 2 union fields in the same record, it does not work.\r\nIndeed, instead of getting:\r\n```python\r\n{\"my_1st_union\": (\"foo\", {\"field1\": 1}), \"my_2nd_union\": (\"bar\", {\"field1\": 1})}\r\n```\r\nI get:\r\n```python\r\n{\"my_1st_union\": (\"foo\", {\"field1\": 1}), \"my_2nd_union\": {\"field1\": 1}}\r\n```\r\n\r\nHere is the code to reproduce the bug:\r\n```python\r\nimport fastavro\r\n\r\nrecords = [\r\n    {\r\n        \"my_1st_union\": (\"foo\", {\"some_field\": 1}),\r\n        \"my_2nd_union\": (\"bar\", {\"some_field\": 2}),\r\n    }\r\n]\r\n\r\nschema = {\r\n    \"type\": \"record\",\r\n    \"name\": \"my_record\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"my_1st_union\",\r\n            \"type\": [\r\n                {\r\n                    \"name\": \"foo\",\r\n                    \"type\": \"record\",\r\n                    \"fields\": [{\"name\": \"some_field\", \"type\": \"int\"}],\r\n                },\r\n                {\r\n                    \"name\": \"bar\",\r\n                    \"type\": \"record\",\r\n                    \"fields\": [{\"name\": \"some_field\", \"type\": \"int\"}],\r\n                },\r\n            ],\r\n        },\r\n        {\"name\": \"my_2nd_union\", \"type\": [\"foo\", \"bar\"]},\r\n    ],\r\n}\r\n\r\nwith open(\"records.avro\", \"wb\") as avro_file:\r\n    fastavro.writer(avro_file, schema, records)\r\n\r\nwith open(\"records.avro\", \"rb\") as avro_file:\r\n    for record in fastavro.reader(avro_file, schema, return_record_name=True):\r\n        print(record)\r\n```\r\n\r\nthis code prints:\r\n```python\r\n{'my_1st_union': ('foo', {'some_field': 1}), 'my_2nd_union': {'some_field': 2}}\r\n```\r\nbut we should get:\r\n```python\r\n{'my_1st_union': ('foo', {'some_field': 1}), 'my_2nd_union': ('bar', {'some_field': 2})}\r\n```\r\n(I ran this code with python 3.7.4 and fastavro 0.22.7)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/382", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/382/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/382/events", "html_url": "https://github.com/fastavro/fastavro/issues/382", "id": 539160866, "node_id": "MDU6SXNzdWU1MzkxNjA4NjY=", "number": 382, "title": "how to buffering records to avro file by chunks?", "user": {"login": "regaladodiaz", "id": 51205493, "node_id": "MDQ6VXNlcjUxMjA1NDkz", "avatar_url": "https://avatars2.githubusercontent.com/u/51205493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regaladodiaz", "html_url": "https://github.com/regaladodiaz", "followers_url": "https://api.github.com/users/regaladodiaz/followers", "following_url": "https://api.github.com/users/regaladodiaz/following{/other_user}", "gists_url": "https://api.github.com/users/regaladodiaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/regaladodiaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regaladodiaz/subscriptions", "organizations_url": "https://api.github.com/users/regaladodiaz/orgs", "repos_url": "https://api.github.com/users/regaladodiaz/repos", "events_url": "https://api.github.com/users/regaladodiaz/events{/privacy}", "received_events_url": "https://api.github.com/users/regaladodiaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-17T16:01:51Z", "updated_at": "2020-01-02T19:17:03Z", "closed_at": "2020-01-02T19:17:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wondered if there is a way to write an avro file by chunks to a buffer.\r\nI'm trying to do this\r\n```python\r\nimport fastavro\r\nimport io\r\nimport os\r\n\r\nschema = {\r\n    'doc': 'A weather reading.',\r\n    'name': 'Weather',\r\n    'namespace': 'test',\r\n    'type': 'record',\r\n    'fields': [\r\n        {'name': 'a', 'type': 'int'},\r\n        {'name': 'b', 'type': 'int'}]\r\n    }\r\n\r\n# generate records\r\ndef generate_records():\r\n    odd = [x for x in range(1,1000) if x % 2 !=0]\r\n    even = [x for x in range(1,1000) if x % 2 ==0]\r\n    records = [{'a': x, 'b': y} for x,y in zip(odd, even)]\r\n    return records\r\n\r\ndef write_avro_streaming(records, chunk_size, file_name): \r\n    parsed_schema = fastavro.parse_schema(schema)\r\n    with open(file_name, 'wb') as fp:\r\n        with io.BytesIO() as bytes_writer:\r\n            while records:\r\n                if len(records)>= chunk_size:\r\n                    partial_results = records[:chunk_size]\r\n                    records = records[chunk_size:]\r\n                else:\r\n                    partial_results = records\r\n                    records = []\r\n\r\n                fastavro.writer(bytes_writer, parsed_schema, partial_results)\r\n                raw_bytes = bytes_writer.getvalue()\r\n                fp.write(raw_bytes)\r\n\r\n\r\nif __name__ == '__main__':\r\n    records = generate_records()\r\n    file_name = 'fp.avro'\r\n    write_avro_streaming(records[:100], 10, file_name)\r\n\r\n```\r\nbut when I run `python buffered_avro.py && fastavro fp.avro` I got `ValueError: expected sync marker not found`\r\n \r\n```bash\r\n$python buffered_avro.py && fastavro fp.avro\r\n{\"a\": 1, \"b\": 2}\r\n{\"a\": 3, \"b\": 4}\r\n{\"a\": 5, \"b\": 6}\r\n{\"a\": 7, \"b\": 8}\r\n{\"a\": 9, \"b\": 10}\r\n{\"a\": 11, \"b\": 12}\r\n{\"a\": 13, \"b\": 14}\r\n{\"a\": 15, \"b\": 16}\r\n{\"a\": 17, \"b\": 18}\r\n{\"a\": 19, \"b\": 20}\r\nTraceback (most recent call last):\r\n  File \"/Users/developer/.virtualenvs/platform-management/bin/fastavro\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/developer/.virtualenvs/platform-management/lib/python3.7/site-packages/fastavro/__main__.py\", line 81, in main\r\n    for record in reader:\r\n  File \"fastavro/_read.pyx\", line 639, in _iter_avro_records\r\n  File \"fastavro/_read.pyx\", line 564, in fastavro._read.skip_sync\r\nValueError: expected sync marker not found\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/380", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/380/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/380/events", "html_url": "https://github.com/fastavro/fastavro/issues/380", "id": 536561213, "node_id": "MDU6SXNzdWU1MzY1NjEyMTM=", "number": 380, "title": "empty map fails to serialize", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-11T19:10:49Z", "updated_at": "2019-12-20T14:44:40Z", "closed_at": "2019-12-19T16:02:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Inside https://github.com/fastavro/fastavro/blob/master/fastavro/_write_py.py#L121-L127\r\n\r\nThe map start write block is not written on empty map, so the map end writes throws error for a mapping type. Is this intentional?\r\n\r\n```python\r\n    if len(datum) > 0:\r\n        encoder.write_map_start(len(datum))\r\n        vtype = schema['values']\r\n        for key, val in iteritems(datum):\r\n            encoder.write_utf8(key)\r\n            write_data(encoder, val, vtype)\r\n    encoder.write_map_end()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/379", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/379/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/379/events", "html_url": "https://github.com/fastavro/fastavro/issues/379", "id": 536166316, "node_id": "MDU6SXNzdWU1MzYxNjYzMTY=", "number": 379, "title": "Support for lz4 codec", "user": {"login": "mcguipat", "id": 29676113, "node_id": "MDQ6VXNlcjI5Njc2MTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/29676113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcguipat", "html_url": "https://github.com/mcguipat", "followers_url": "https://api.github.com/users/mcguipat/followers", "following_url": "https://api.github.com/users/mcguipat/following{/other_user}", "gists_url": "https://api.github.com/users/mcguipat/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcguipat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcguipat/subscriptions", "organizations_url": "https://api.github.com/users/mcguipat/orgs", "repos_url": "https://api.github.com/users/mcguipat/repos", "events_url": "https://api.github.com/users/mcguipat/events{/privacy}", "received_events_url": "https://api.github.com/users/mcguipat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-11T06:17:35Z", "updated_at": "2019-12-16T14:18:31Z", "closed_at": "2019-12-16T14:18:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would there be support for adding an lz4 codec?  If so, I'd be happy to PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/378", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/378/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/378/events", "html_url": "https://github.com/fastavro/fastavro/issues/378", "id": 533361183, "node_id": "MDU6SXNzdWU1MzMzNjExODM=", "number": 378, "title": "Make `schema_name` part of the public API", "user": {"login": "rnpridgeon", "id": 5313961, "node_id": "MDQ6VXNlcjUzMTM5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5313961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnpridgeon", "html_url": "https://github.com/rnpridgeon", "followers_url": "https://api.github.com/users/rnpridgeon/followers", "following_url": "https://api.github.com/users/rnpridgeon/following{/other_user}", "gists_url": "https://api.github.com/users/rnpridgeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnpridgeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnpridgeon/subscriptions", "organizations_url": "https://api.github.com/users/rnpridgeon/orgs", "repos_url": "https://api.github.com/users/rnpridgeon/repos", "events_url": "https://api.github.com/users/rnpridgeon/events{/privacy}", "received_events_url": "https://api.github.com/users/rnpridgeon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T13:45:42Z", "updated_at": "2020-02-26T21:08:20Z", "closed_at": "2020-02-26T21:08:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be handy if the public API for `fatavro.schema` exposed [schema_name](https://github.com/fastavro/fastavro/blob/master/fastavro/schema.py#L9) as part of the public API.  Although my use case is specific to the use of[ Confluent's Schema Registry's subject naming strategies ](https://docs.confluent.io/current/schema-registry/serializer-formatter.html#sr-avro-subject-name-strategy) I'm sure this feature may be useful to others. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/377", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/377/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/377/events", "html_url": "https://github.com/fastavro/fastavro/issues/377", "id": 529159070, "node_id": "MDU6SXNzdWU1MjkxNTkwNzA=", "number": 377, "title": "Specify Deflate compression level", "user": {"login": "drghifari", "id": 21213533, "node_id": "MDQ6VXNlcjIxMjEzNTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/21213533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drghifari", "html_url": "https://github.com/drghifari", "followers_url": "https://api.github.com/users/drghifari/followers", "following_url": "https://api.github.com/users/drghifari/following{/other_user}", "gists_url": "https://api.github.com/users/drghifari/gists{/gist_id}", "starred_url": "https://api.github.com/users/drghifari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drghifari/subscriptions", "organizations_url": "https://api.github.com/users/drghifari/orgs", "repos_url": "https://api.github.com/users/drghifari/repos", "events_url": "https://api.github.com/users/drghifari/events{/privacy}", "received_events_url": "https://api.github.com/users/drghifari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-27T07:07:10Z", "updated_at": "2019-12-19T17:47:16Z", "closed_at": "2019-12-19T17:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "As we know that Deflate has compression level from 0-9 [1]. And fastavro uses default level of zlib [2]. The default zlib value is -1 (`Z_DEFAULT_COMPRESSION`) which represents a default compromise between speed and compression (currently equivalent to level 6) according to the python docs [3]\r\n\r\nIs there any chance that we can specify deflate compression level?\r\n\r\n[1] https://en.wikipedia.org/wiki/DEFLATE#Encoder/compressor\r\n[2] https://github.com/fastavro/fastavro/blob/master/fastavro/_write_py.py#L257\r\n[3] https://docs.python.org/3/library/zlib.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/376", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/376/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/376/events", "html_url": "https://github.com/fastavro/fastavro/issues/376", "id": 524393400, "node_id": "MDU6SXNzdWU1MjQzOTM0MDA=", "number": 376, "title": "Not able to specify codec in reader", "user": {"login": "d-tork", "id": 22127152, "node_id": "MDQ6VXNlcjIyMTI3MTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/22127152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-tork", "html_url": "https://github.com/d-tork", "followers_url": "https://api.github.com/users/d-tork/followers", "following_url": "https://api.github.com/users/d-tork/following{/other_user}", "gists_url": "https://api.github.com/users/d-tork/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-tork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-tork/subscriptions", "organizations_url": "https://api.github.com/users/d-tork/orgs", "repos_url": "https://api.github.com/users/d-tork/repos", "events_url": "https://api.github.com/users/d-tork/events{/privacy}", "received_events_url": "https://api.github.com/users/d-tork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-18T14:13:07Z", "updated_at": "2019-11-20T12:14:40Z", "closed_at": "2019-11-20T12:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "My script randomly encountered an issue with `python-snappy` not being installed (while my script is able to process hundreds of .avro files just fine, while walking through a particular folder it failed for not having snappy). And because I'm having issues getting `python-snappy` in my particular case because of the environment at work, I wanted to change the codec that fastavro uses. \r\n\r\n[The docs include](https://fastavro.readthedocs.io/en/latest/reader.html#fastavro._read_py.reader.codec) a `codec` parameter listed below the `reader()` class, but when I try to set the codec like so:\r\n```\r\nreader = fastavro.reader(fp, codec='deflate')\r\n```\r\nI'm getting \r\n```\r\nTypeError: __init__() got an unexpected keyword argument 'codec'\r\n```\r\n\r\nIs the documentation wrong? How in the world can I skip over snappy? \r\n\r\nAnd according to stack overflow [answers](https://stackoverflow.com/questions/39699490/issue-in-using-snappy-with-avro-in-python#) I've read, fastavro supposedly checks for snappy but moves on if it can't import it. So I'm lost as to why my original script fails with \r\n```\r\nValueError: snappy codec is supported but you need to install python-snappy.\r\n```\r\nwhen I've never explicitly set snappy as the codec for reading. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/375", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/375/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/375/events", "html_url": "https://github.com/fastavro/fastavro/issues/375", "id": 521033579, "node_id": "MDU6SXNzdWU1MjEwMzM1Nzk=", "number": 375, "title": "Extracting all names, types for coercion", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-11T15:37:52Z", "updated_at": "2019-11-18T17:33:34Z", "closed_at": "2019-11-18T17:33:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "We get data from `xmltodict` where all dict values are set as string. I like to parse each nested dict and cast the values based on the target avro schema.\r\n\r\nI see a few helper functions in `schema` module that could help but not sure how to traverse easily. I could write a dedicated function to do so but fastavro could best handle the coercion directly in the `prepare_xxx` functions - this would save from parsing twice.\r\n\r\nThoughts ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/372", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/372/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/372/events", "html_url": "https://github.com/fastavro/fastavro/issues/372", "id": 518590843, "node_id": "MDU6SXNzdWU1MTg1OTA4NDM=", "number": 372, "title": "compile for 3.8", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T16:37:33Z", "updated_at": "2019-11-06T18:10:34Z", "closed_at": "2019-11-06T18:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Didn't manage to 64bit compile for Python 3.8.\r\n\r\nCan you build and add the pre-compiled binaries ?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/368", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/368/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/368/events", "html_url": "https://github.com/fastavro/fastavro/issues/368", "id": 500507389, "node_id": "MDU6SXNzdWU1MDA1MDczODk=", "number": 368, "title": "validating nameless schema", "user": {"login": "Rosswell", "id": 24869120, "node_id": "MDQ6VXNlcjI0ODY5MTIw", "avatar_url": "https://avatars3.githubusercontent.com/u/24869120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rosswell", "html_url": "https://github.com/Rosswell", "followers_url": "https://api.github.com/users/Rosswell/followers", "following_url": "https://api.github.com/users/Rosswell/following{/other_user}", "gists_url": "https://api.github.com/users/Rosswell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rosswell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rosswell/subscriptions", "organizations_url": "https://api.github.com/users/Rosswell/orgs", "repos_url": "https://api.github.com/users/Rosswell/repos", "events_url": "https://api.github.com/users/Rosswell/events{/privacy}", "received_events_url": "https://api.github.com/users/Rosswell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-30T20:30:32Z", "updated_at": "2019-09-30T20:48:46Z", "closed_at": "2019-09-30T20:48:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having an issue validating a nameless/recordless schema, where the schema is \r\n```\r\n{\r\n\t\"subject\":\"test_data-key\",\r\n\t\"version\":1,\r\n\t\"id\":30,\r\n\t\"schema\":\"\\\"string\\\"\"\r\n}\r\n```\r\nand so the corresponding `data.avsc` file is just\r\n```\r\n{\r\n  \"type\" : \"string\"\r\n}\r\n```\r\neven though `fastavro.parse_schema(schema)` succeeds (as it is a valid avro schema), calling `fastavro.validate(schema, 'key_data')` results in:\r\n```\r\nfastavro/_validation.pyx:167: in fastavro._validation.validate\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   ???\r\nE   UnknownType: key_data\r\n\r\nfastavro/_validation.pyx:224: UnknownType\r\n```\r\nIs there something I'm doing wrong here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/365", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/365/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/365/events", "html_url": "https://github.com/fastavro/fastavro/issues/365", "id": 495702092, "node_id": "MDU6SXNzdWU0OTU3MDIwOTI=", "number": 365, "title": "Fastavro validation not working properly from 22.1 to 22.2", "user": {"login": "josepduarte", "id": 15365800, "node_id": "MDQ6VXNlcjE1MzY1ODAw", "avatar_url": "https://avatars3.githubusercontent.com/u/15365800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josepduarte", "html_url": "https://github.com/josepduarte", "followers_url": "https://api.github.com/users/josepduarte/followers", "following_url": "https://api.github.com/users/josepduarte/following{/other_user}", "gists_url": "https://api.github.com/users/josepduarte/gists{/gist_id}", "starred_url": "https://api.github.com/users/josepduarte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josepduarte/subscriptions", "organizations_url": "https://api.github.com/users/josepduarte/orgs", "repos_url": "https://api.github.com/users/josepduarte/repos", "events_url": "https://api.github.com/users/josepduarte/events{/privacy}", "received_events_url": "https://api.github.com/users/josepduarte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-19T10:08:01Z", "updated_at": "2019-09-19T17:29:45Z", "closed_at": "2019-09-19T17:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "From version 22.1 to version 22.2, fastavro validation is not working properly. \r\nThe following piece of code:\r\n```\r\nimport fastavro\r\n\r\nschema_json = {\r\n\t\"namespace\": \"com.test.avro\",\r\n    \"name\": \"Test\",\r\n    \"type\": \"record\",\r\n    \"fields\" : [\r\n        {\"name\": \"type_label\", \"type\": \"string\"},\r\n        {\"name\": \"created_at\", \"type\": {\"type\": \"long\", \"logicalType\": \"timestamp-micros\"}}\r\n    ]\r\n}\r\nschema = fastavro.parse_schema(schema_json)\r\n\r\nINVALID_SCHEMA = {\r\n    'type_label': 'type',\r\n    'created_at': 'this_field_should_be_a_long_and_not_a_string',  # This is the invalid field\r\n}\r\n\r\nis_valid = fastavro.validate(INVALID_SCHEMA, schema_json, raise_errors=True)\r\n\r\nprint(\"\\nis_valid: \" + str(is_valid))\r\n```\r\n\r\n, produces the following result:\r\n\r\n```\r\nTypeError: an integer is required\r\nException TypeError: 'an integer is required' in 'fastavro._logical_writers.prepare_timestamp_micros' ignored\r\n\r\nis_valid: True\r\n```\r\n\r\nIt is printing the exception with the expected result but that exception is being ignored (even when the `raise_erros` flag is set).\r\nAlso, it is returning True and should be returning False.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/363", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/363/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/363/events", "html_url": "https://github.com/fastavro/fastavro/issues/363", "id": 494918581, "node_id": "MDU6SXNzdWU0OTQ5MTg1ODE=", "number": 363, "title": "No recursive schema resolution for arrays?", "user": {"login": "smalyshev", "id": 155000, "node_id": "MDQ6VXNlcjE1NTAwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/155000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smalyshev", "html_url": "https://github.com/smalyshev", "followers_url": "https://api.github.com/users/smalyshev/followers", "following_url": "https://api.github.com/users/smalyshev/following{/other_user}", "gists_url": "https://api.github.com/users/smalyshev/gists{/gist_id}", "starred_url": "https://api.github.com/users/smalyshev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smalyshev/subscriptions", "organizations_url": "https://api.github.com/users/smalyshev/orgs", "repos_url": "https://api.github.com/users/smalyshev/repos", "events_url": "https://api.github.com/users/smalyshev/events{/privacy}", "received_events_url": "https://api.github.com/users/smalyshev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-18T00:09:52Z", "updated_at": "2019-09-19T17:19:50Z", "closed_at": "2019-09-19T17:19:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use schema resolution with fastavro, and it works on simple examples when adding a field, but stops working if a field is added in nested structure.\r\n\r\nConsider this schema:\r\n```\r\n{\r\n\t\"type\": \"record\",\r\n\t\"name\": \"DataRecord\",\r\n\t\"fields\": [\r\n\t\t{\r\n\t\t\t\"name\": \"s1\",\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"subrecord\",\r\n\t\t\t\"type\": {\r\n\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\"items\": {\r\n\t\t\t\t\t\"type\": \"record\",\r\n\t\t\t\t\t\"name\": \"SubRecord\",\r\n\t\t\t\t\t\"fields\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"name\": \"s2\",\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n}]}}}]}\r\n```\r\n\r\nIt has a record which contains an array of subrecords each having one field. I am using it as writer schema. Now I have this reader schema:\r\n\r\n```\r\n{\r\n\t\"type\": \"record\",\r\n\t\"name\": \"DataRecord\",\r\n\t\"fields\": [\r\n\t\t{\r\n\t\t\t\"name\": \"s1\",\r\n\t\t\t\"type\": \"string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"subrecord\",\r\n\t\t\t\"type\": {\r\n\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\"items\": {\r\n\t\t\t\t\t\"name\": \"SubRecord\",\r\n\t\t\t\t\t\"type\": \"record\",\r\n\t\t\t\t\t\"fields\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"name\": \"s2\",\r\n\t\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"name\": \"logs\",\r\n\t\t\t\t\t\t\t\"default\": null,\r\n\t\t\t\t\t\t\t\"type\": [\r\n\t\t\t\t\t\t\t\t\"null\",\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\r\n\t\t\t\t\t\t\t\t\t\"items\": {\r\n\t\t\t\t\t\t\t\t\t\t\"name\": \"log\",\r\n\t\t\t\t\t\t\t\t\t\t\"type\": \"record\",\r\n\t\t\t\t\t\t\t\t\t\t\"fields\": [\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"msg\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"default\": \"\"\r\n}]}}]}]}}}]}\r\n```\r\n\r\nThis adds optional logs record which should be no problem for schema resolution - old schema did not have this, so just add default null and everything is OK. However, this does not work. Test script:\r\n\r\n```\r\nfrom io import BytesIO\r\nimport json\r\nfrom fastavro.write import schemaless_writer\r\nfrom fastavro.read import  schemaless_reader\r\n\r\nschema1 = json.loads(open(\"1.json\", 'r').read())\r\nschema2 = json.loads(open(\"2.json\", 'r').read())\r\n\r\ndata = {\r\n        's1': \"test\",\r\n        'subrecord': []\r\n}\r\n\r\nbinary1 = BytesIO()\r\nschemaless_writer(binary1, schema1, data)\r\nwith open('f', 'wb') as f:\r\n    f.write(binary1.getvalue())\r\n    \r\nbinary1.seek(0)\r\nprint(schemaless_reader(binary1, schema1))\r\n\r\nbinary1.seek(0)\r\nprint(schemaless_reader(binary1, schema1, reader_schema=schema2))\r\n```\r\nproduces this:\r\n```\r\n{'s1': 'test', 'subrecord': []}\r\nTraceback (most recent call last):\r\n  File \"tf.py\", line 23, in <module>\r\n    print(schemaless_reader(binary1, schema1, reader_schema=schema2))\r\n  File \"fastavro/_read.pyx\", line 759, in fastavro._read.schemaless_reader\r\n  File \"fastavro/_read.pyx\", line 769, in fastavro._read.schemaless_reader\r\n  File \"fastavro/_read.pyx\", line 536, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 447, in fastavro._read.read_record\r\n  File \"fastavro/_read.pyx\", line 508, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 119, in fastavro._read.match_schemas\r\nfastavro._read_common.SchemaResolutionError: Schema mismatch: {'type': 'array', 'items': {'type': 'record', 'name': 'SubRecord', 'fields': [{'name': 's2', 'type': 'string'}]}} is not {'type': 'array', 'items': {'type': 'record', 'name': 'SubRecord', 'fields': [{'name': 's2', 'type': 'string'}, {'default': None, 'name': 'logs', 'type': ['null', {'type': 'array', 'items': {'type': 'record', 'name': 'log', 'fields': [{'default': '', 'name': 'msg', 'type': 'string'}]}}]}]}}\r\n```\r\n\r\nThis seems to be because match_schemas when checking array items uses:\r\n```\r\n      elif w_type == r_type == 'array':\r\n            if match_types(w_schema['items'], r_schema['items']):\r\n                return True\r\n ```\r\n which tries to compare records directly instead of checking that those both are records and comparing them later. It happens on the top level but not when checking arrays and maps. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/362", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/362/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/362/events", "html_url": "https://github.com/fastavro/fastavro/issues/362", "id": 491252116, "node_id": "MDU6SXNzdWU0OTEyNTIxMTY=", "number": 362, "title": "Error when opening large Avro file (2.8 GB) - Unhandled SIGSEGV: A segmentation fault occurred", "user": {"login": "j450h1", "id": 7351530, "node_id": "MDQ6VXNlcjczNTE1MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7351530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j450h1", "html_url": "https://github.com/j450h1", "followers_url": "https://api.github.com/users/j450h1/followers", "following_url": "https://api.github.com/users/j450h1/following{/other_user}", "gists_url": "https://api.github.com/users/j450h1/gists{/gist_id}", "starred_url": "https://api.github.com/users/j450h1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j450h1/subscriptions", "organizations_url": "https://api.github.com/users/j450h1/orgs", "repos_url": "https://api.github.com/users/j450h1/repos", "events_url": "https://api.github.com/users/j450h1/events{/privacy}", "received_events_url": "https://api.github.com/users/j450h1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-09-09T18:23:40Z", "updated_at": "2019-12-19T21:08:25Z", "closed_at": "2019-12-19T21:08:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Input:**\r\n```\r\nprint(\"\\nOpening file: \\n\".format(raw_destination_file_name))\r\n\r\nwith open(raw_destination_file_name, 'rb') as fo:\r\n    avro_reader = fastavro.reader(fo)\r\n    schema = avro_reader.writer_schema\r\n    records = list(avro_reader)\r\n```\r\n\r\n**Output:**\r\n```\r\nOpening file:\r\n\r\n------------------------------------------------------------------------\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/cypari/_pari.cpython-37m-x86_64-linux-gnu.so(+0x7e804)[0x7f8819874804]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/cypari/_pari.cpython-37m-x86_64-linux-gnu.so(+0x7e845)[0x7f8819874845]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/cypari/_pari.cpython-37m-x86_64-linux-gnu.so(+0x181ece)[0x7f8819977ece]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x11390)[0x7f881e9f1390]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x82786)[0x7f881e692786]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_malloc+0x54)[0x7f881e694184]\r\npython(PyObject_Malloc+0xc6)[0x7f881efb7f96]\r\npython(+0x15de60)[0x7f881f00ce60]\r\npython(PyDict_SetItem+0x300)[0x7f881f0265c0]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0xe677)[0x7f881b18e677]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x30241)[0x7f881b1b0241]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x11467)[0x7f881b191467]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x3017b)[0x7f881b1b017b]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0xe54e)[0x7f881b18e54e]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x30241)[0x7f881b1b0241]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x2fe92)[0x7f881b1afe92]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0xe54e)[0x7f881b18e54e]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x30241)[0x7f881b1b0241]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x3677a)[0x7f881b1b677a]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x134b5)[0x7f881b1934b5]\r\n/home/jsohi/miniconda3/lib/python3.7/site-packages/fastavro/_read.cpython-37m-x86_64-linux-gnu.so(+0x18f5f)[0x7f881b198f5f]\r\npython(+0x1bc064)[0x7f881f06b064]\r\npython(_PyObject_FastCallKeywords+0x128)[0x7f881f0289b8]\r\npython(_PyEval_EvalFrameDefault+0x4bf6)[0x7f881f084026]\r\npython(_PyFunction_FastCallKeywords+0xfb)[0x7f881f02779b]\r\npython(_PyEval_EvalFrameDefault+0x416)[0x7f881f07f846]\r\npython(_PyFunction_FastCallKeywords+0xfb)[0x7f881f02779b]\r\npython(_PyEval_EvalFrameDefault+0x416)[0x7f881f07f846]\r\npython(_PyEval_EvalCodeWithName+0x2f9)[0x7f881efc54f9]\r\npython(PyEval_EvalCodeEx+0x44)[0x7f881efc63c4]\r\npython(PyEval_EvalCode+0x1c)[0x7f881efc63ec]\r\npython(+0x22f874)[0x7f881f0de874]\r\npython(PyRun_FileExFlags+0xa1)[0x7f881f0e8b81]\r\npython(PyRun_SimpleFileExFlags+0x1c3)[0x7f881f0e8d73]\r\npython(+0x23ae5f)[0x7f881f0e9e5f]\r\npython(_Py_UnixMain+0x3c)[0x7f881f0e9f7c]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7f881e630830]\r\npython(+0x1e0122)[0x7f881f08f122]\r\n------------------------------------------------------------------------\r\nUnhandled SIGSEGV: A segmentation fault occurred.\r\nThis probably occurred because a *compiled* module has a bug\r\nin it and is not properly wrapped with sig_on(), sig_off().\r\nPython will now terminate.\r\n------------------------------------------------------------------------\r\nSegmentation fault (core dumped)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/358", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/358/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/358/events", "html_url": "https://github.com/fastavro/fastavro/issues/358", "id": 466248127, "node_id": "MDU6SXNzdWU0NjYyNDgxMjc=", "number": 358, "title": "appending to an avro file gives an error", "user": {"login": "EricLeer", "id": 9433920, "node_id": "MDQ6VXNlcjk0MzM5MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9433920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricLeer", "html_url": "https://github.com/EricLeer", "followers_url": "https://api.github.com/users/EricLeer/followers", "following_url": "https://api.github.com/users/EricLeer/following{/other_user}", "gists_url": "https://api.github.com/users/EricLeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricLeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricLeer/subscriptions", "organizations_url": "https://api.github.com/users/EricLeer/orgs", "repos_url": "https://api.github.com/users/EricLeer/repos", "events_url": "https://api.github.com/users/EricLeer/events{/privacy}", "received_events_url": "https://api.github.com/users/EricLeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-10T11:11:04Z", "updated_at": "2019-07-12T19:38:39Z", "closed_at": "2019-07-12T19:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried to append to an existing avro file using fastavro and got the error. Upon further inspection even the example code in the documentation throws the same error.\r\n\r\n```\r\nfrom fastavro import writer, parse_schema\r\n\r\nschema = {\r\n    'doc': 'A weather reading.',\r\n    'name': 'Weather',\r\n    'namespace': 'test',\r\n    'type': 'record',\r\n    'fields': [\r\n        {'name': 'station', 'type': 'string'},\r\n        {'name': 'time', 'type': 'long'},\r\n        {'name': 'temp', 'type': 'int'},\r\n    ],\r\n}\r\nparsed_schema = parse_schema(schema)\r\n\r\nrecords = [\r\n    {u'station': u'011990-99999', u'temp': 0, u'time': 1433269388},\r\n    {u'station': u'011990-99999', u'temp': 22, u'time': 1433270389},\r\n    {u'station': u'011990-99999', u'temp': -11, u'time': 1433273379},\r\n    {u'station': u'012650-99999', u'temp': 111, u'time': 1433275478},\r\n]\r\n\r\nmore_records = [\r\n    {u'station': u'012990-99999', u'temp': 1, u'time': 1433279388},\r\n    {u'station': u'012990-99999', u'temp': 21, u'time': 1433280389},\r\n    {u'station': u'012990-99999', u'temp': -10, u'time': 1433283379},\r\n    {u'station': u'013650-99999', u'temp': 110, u'time': 1433285478},\r\n]\r\n\r\nwith open('weather.avro', 'wb') as out:\r\n    writer(out, parsed_schema, records)\r\n\r\n# Write some more records\r\nwith open('weather.avro', 'a+') as out:\r\n    writer(out, parsed_schema, more_records)\r\n```\r\n\r\nThis code gives me the following error:\r\n\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-37-eaf39a75b14e> in <module>\r\n     34 # Write some more records\r\n     35 with open('weather.avro', 'a+') as out:\r\n---> 36     writer(out, parsed_schema, more_records)\r\n\r\nfastavro/_write.pyx in fastavro._write.writer()\r\n\r\nfastavro/_write.pyx in fastavro._write.Writer.__init__()\r\n\r\nfastavro/_six.pyx in fastavro._six.py3_appendable()\r\n\r\nAttributeError: 'OutStream' object has no attribute 'buffer'\r\n```\r\nIt seems like a test designed for OSX is failing. I'm on ubuntu 18.0.4\r\n\r\n```\r\ndef py3_appendable(file_like):\r\n        # in addition to \"are you seekable?\" and \"do you know your position?\"\r\n        # we also do this direct identity comparison of 'file_like' vs.\r\n        # sys.stdout.buffer, this works around a strange discovery of OSX\r\n        # Platform, that stdout.buffer *is* seekable, and *does* know its\r\n        # position, strange!\r\n        if (file_like.seekable() and file_like.tell() != 0\r\nand file_like is not sys.stdout.buffer):\r\n         ...\r\n```\r\nAny ideas on a possible solution?\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/352", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/352/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/352/events", "html_url": "https://github.com/fastavro/fastavro/issues/352", "id": 463514113, "node_id": "MDU6SXNzdWU0NjM1MTQxMTM=", "number": 352, "title": "ValueError: Unrecognized codec: 'snappy' on avro read", "user": {"login": "VinothRajasekar", "id": 3857385, "node_id": "MDQ6VXNlcjM4NTczODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3857385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VinothRajasekar", "html_url": "https://github.com/VinothRajasekar", "followers_url": "https://api.github.com/users/VinothRajasekar/followers", "following_url": "https://api.github.com/users/VinothRajasekar/following{/other_user}", "gists_url": "https://api.github.com/users/VinothRajasekar/gists{/gist_id}", "starred_url": "https://api.github.com/users/VinothRajasekar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VinothRajasekar/subscriptions", "organizations_url": "https://api.github.com/users/VinothRajasekar/orgs", "repos_url": "https://api.github.com/users/VinothRajasekar/repos", "events_url": "https://api.github.com/users/VinothRajasekar/events{/privacy}", "received_events_url": "https://api.github.com/users/VinothRajasekar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T02:31:34Z", "updated_at": "2019-07-08T20:41:22Z", "closed_at": "2019-07-08T20:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "    for record in avro_reader:\r\n  File \"fastavro/_read.pyx\", line 635, in _iter_avro_records\r\nValueError: Unrecognized codec: 'snappy'\r\n\r\nUsing 0.22.0 version. looks like snappy codec is supported on read with 0.22.2 version. However, on read getting unrecognized codec for snappy code avro records.\r\n\r\n```from fastavro import reader\r\nwith open('episodes.avro', 'rb') as fo:\r\n    avro_reader = reader(fo)\r\n    for record in avro_reader:\r\n        print(record)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/347", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/347/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/347/events", "html_url": "https://github.com/fastavro/fastavro/issues/347", "id": 456276626, "node_id": "MDU6SXNzdWU0NTYyNzY2MjY=", "number": 347, "title": "Add tests for compressions like snappy", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T14:25:15Z", "updated_at": "2019-06-19T14:11:38Z", "closed_at": "2019-06-19T14:11:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We don't want it to break like mentioned in https://github.com/fastavro/fastavro/issues/345", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/345", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/345/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/345/events", "html_url": "https://github.com/fastavro/fastavro/issues/345", "id": 456267204, "node_id": "MDU6SXNzdWU0NTYyNjcyMDQ=", "number": 345, "title": "Snappy support seems to have broken", "user": {"login": "mattomatic", "id": 1058671, "node_id": "MDQ6VXNlcjEwNTg2NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1058671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattomatic", "html_url": "https://github.com/mattomatic", "followers_url": "https://api.github.com/users/mattomatic/followers", "following_url": "https://api.github.com/users/mattomatic/following{/other_user}", "gists_url": "https://api.github.com/users/mattomatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattomatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattomatic/subscriptions", "organizations_url": "https://api.github.com/users/mattomatic/orgs", "repos_url": "https://api.github.com/users/mattomatic/repos", "events_url": "https://api.github.com/users/mattomatic/events{/privacy}", "received_events_url": "https://api.github.com/users/mattomatic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-14T14:05:29Z", "updated_at": "2019-06-14T14:26:36Z", "closed_at": "2019-06-14T14:26:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, \r\n\r\nI noticed that snappy seems to have been broken with release 0.0.22. \r\n\r\nThe issue is that `snappy_read_block` previously expected to get in a file descriptor which had method `read` on it. However, after https://github.com/fastavro/fastavro/commit/7376b0121695b2de84090da26c6fbe4a6d3940ef the reader was replaced by a decoder, and the decoder doesn't have `read`, resulting in:\r\n\r\n```\r\n  File \"/opt/venv/lib/python3.6/site-packages/fastavro/_read_py.py\", line 504, in _iter_avro_records\r\n    block_fo = read_block(decoder)\r\n  File \"/opt/venv/lib/python3.6/site-packages/fastavro/_read_py.py\", line 476, in snappy_read_block\r\n    data = fo.read(length - 4)\r\nAttributeError: 'BinaryDecoder' object has no attribute 'read'\r\n```\r\n\r\nI think the fix is to change `snappy_read_block` to look like:\r\n```\r\ndef snappy_read_block(fo):\r\n    length = read_long(fo)\r\n    data = fo.read_fixed(length - 4)\r\n    fo.read_fixed(4)  # CRC\r\n    return MemoryIO(snappy.decompress(data))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/341", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/341/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/341/events", "html_url": "https://github.com/fastavro/fastavro/issues/341", "id": 447803957, "node_id": "MDU6SXNzdWU0NDc4MDM5NTc=", "number": 341, "title": "UUID/logical type removal", "user": {"login": "sjk83", "id": 16724512, "node_id": "MDQ6VXNlcjE2NzI0NTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/16724512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjk83", "html_url": "https://github.com/sjk83", "followers_url": "https://api.github.com/users/sjk83/followers", "following_url": "https://api.github.com/users/sjk83/following{/other_user}", "gists_url": "https://api.github.com/users/sjk83/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjk83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjk83/subscriptions", "organizations_url": "https://api.github.com/users/sjk83/orgs", "repos_url": "https://api.github.com/users/sjk83/repos", "events_url": "https://api.github.com/users/sjk83/events{/privacy}", "received_events_url": "https://api.github.com/users/sjk83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-23T18:13:35Z", "updated_at": "2019-05-23T20:02:43Z", "closed_at": "2019-05-23T19:14:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use fastavro in a restricted environment where syscalls to clone are not allowed. On import the python uuid module runs a shell command which calls clone a number of times.  \r\n\r\nI have two questions:\r\n1. I am new to avro so the use of logical types is not clear to me. The avro documentation mentions logical types, but I can't find a uuid logical type. Where did this come from? what is it used for?\r\n\r\n2. will removing the uuid logical type have any side effects? Will this only prevent me from using the uuid logical type and nothing else? I have a hacked together version of fast avro that does this, but some of the tests are failing outside of just things that are UUID related.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/336", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/336/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/336/events", "html_url": "https://github.com/fastavro/fastavro/issues/336", "id": 440526057, "node_id": "MDU6SXNzdWU0NDA1MjYwNTc=", "number": 336, "title": "Error on optional array of records", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-06T03:13:45Z", "updated_at": "2019-05-07T14:02:03Z", "closed_at": "2019-05-06T22:02:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code to reproduce:\r\n\r\n```\r\nfrom fastavro import writer, reader\r\n\r\nschema = {\r\n    \"type\": \"record\",\r\n    \"name\": \"test\",\r\n    \"fields\": [\r\n        {\"name\": \"name\", \"type\": \"string\"},\r\n        {\"name\": \"address\",\r\n         \"type\": [\r\n             \"null\",\r\n             {\"type\": \"array\",\r\n              \"items\": {\r\n                  \"type\": \"record\",\r\n                  \"name\": \"whatever\",\r\n                  \"fields\": [\r\n                      {\"name\": \"street\", \"type\": [\"null\", \"string\"]},\r\n                      {\"name\": \"zip\", \"type\": [\"null\", \"string\"]}\r\n                      ]\r\n                  }\r\n              }\r\n            ]\r\n         }\r\n    ]\r\n}\r\n\r\nrecords = [\r\n    {'name': 'name1', 'address': [{'street': '22st'}]},\r\n    {'name': 'name2'}\r\n]\r\n\r\n\r\nwith open('test.avro', 'wb') as f:\r\n    writer(f, schema, records, codec='deflate')\r\n\r\nwith open('test.avro', 'rb') as f:\r\n    print(list(reader(f)))\r\n```\r\n\r\nIf I write record `name2` only, no error and reader returns `[{'name': 'name2', 'address': None}]`\r\nHowever for `name1` where `address` is passed (correctly, as a list), it errors out:\r\n`...(type <class 'list'>) do not match ['null', {'type': 'array', 'items': {'type': 'record'...`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/334", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/334/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/334/events", "html_url": "https://github.com/fastavro/fastavro/issues/334", "id": 440487830, "node_id": "MDU6SXNzdWU0NDA0ODc4MzA=", "number": 334, "title": "Req: ISO date string conversion to int ", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-05T20:37:28Z", "updated_at": "2019-05-07T00:22:50Z", "closed_at": "2019-05-07T00:22:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "To avoid transforming YYYY-MM-DD to int for logicalType date before calling the writer, could we extend `prepare_date()` like so:\r\n\r\n```\r\ndef prepare_date(data, schema):\r\n    \"\"\"Converts datetime.date or 'YYYY-MM-DD' to int timestamp\"\"\"\r\n    if isinstance(data, datetime.date):\r\n        return data.toordinal() - DAYS_SHIFT\r\n    elif isinstance(data, str):\r\n        return datetime.strptime(data, \"%Y-%m-%d\").toordinal() - DAYS_SHIFT\r\n    else:\r\n        return data\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/333", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/333/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/333/events", "html_url": "https://github.com/fastavro/fastavro/issues/333", "id": 440134082, "node_id": "MDU6SXNzdWU0NDAxMzQwODI=", "number": 333, "title": "avro schema validation", "user": {"login": "gangadhar01a", "id": 23003116, "node_id": "MDQ6VXNlcjIzMDAzMTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/23003116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gangadhar01a", "html_url": "https://github.com/gangadhar01a", "followers_url": "https://api.github.com/users/gangadhar01a/followers", "following_url": "https://api.github.com/users/gangadhar01a/following{/other_user}", "gists_url": "https://api.github.com/users/gangadhar01a/gists{/gist_id}", "starred_url": "https://api.github.com/users/gangadhar01a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gangadhar01a/subscriptions", "organizations_url": "https://api.github.com/users/gangadhar01a/orgs", "repos_url": "https://api.github.com/users/gangadhar01a/repos", "events_url": "https://api.github.com/users/gangadhar01a/events{/privacy}", "received_events_url": "https://api.github.com/users/gangadhar01a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-03T16:58:35Z", "updated_at": "2019-06-27T15:17:23Z", "closed_at": "2019-06-27T15:17:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using fastavro to validate the syntax of the avro schema, for this purpose we are using the factavro module. \r\n\r\n\"avrolint.py\"  loads the fastavro module and throws if there are any exceptions. This works for any generic date types (string, int etc...), except for the customized type (example: com.hautelook.halo-www.order.service.Money) which has been listed in below example. \r\n\r\nThough the schema has the valid syntax, it's throwing a following exception \r\n\"_fastavro._schema_common.UnknownType: com.hautelook.halo-www.order.service.Money_\"\r\n\r\n**avrolint.py**\r\n\r\n_#!/usr/bin/env python3\r\nimport fastavro\r\nimport sys\r\n\r\ntry:\r\n    test = fastavro.schema.load_schema(sys.argv[1])\r\n    print(test)\r\nexcept Exception as e:\r\n    print(\"Error {}\".format(e))\r\n    raise_\r\n\r\nSchema to check \r\n**test.avsc** \r\n_{\r\n  \"type\" : \"record\",\r\n  \"namespace\" : \"com.hautelook.halo-www.order.service\",\r\n  \"name\": \"FreightData\",\r\n  \"fields\": [\r\n    {\"name\": \"freightSubtotal\", \"type\": \"com.hautelook.halo-www.order.service.Money\"},\r\n    {\"name\": \"freightTaxes\", \"type\": \"com.hautelook.halo-www.order.service.Money\"},\r\n    {\"name\": \"freightDiscount\", \"type\": \"com.hautelook.halo-www.order.service.Money\"},\r\n    {\"name\": \"freightTotal\", \"type\": \"com.hautelook.halo-www.order.service.Money\"}\r\n  ]\r\n}_\r\n\r\n\r\n**l874-c02rp479g8wn:Desktop gangahdar.reddy$ **python3 avro.py test.avsc** \r\n**Error com.hautelook.halo-www.order.service.Money**\r\nTraceback (most recent call last):\r\n  File \"fastavro/_schema.pyx\", line 205, in fastavro._schema._load_schema\r\n  File \"fastavro/_schema.pyx\", line 193, in fastavro._schema.load_schema\r\nFileNotFoundError: [Errno 2] No such file or directory: 'com.hautelook.halo-www.order.service.Money.avsc**'\r\n\r\n**During handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"avro.py\", line 7, in <module>\r\n    test = fastavro.schema.load_schema(sys.argv[1])\r\n  File \"fastavro/_schema.pyx\", line 196, in fastavro._schema.load_schema\r\n  File \"fastavro/_schema.pyx\", line 207, in fastavro._schema._load_schema\r\n  File \"fastavro/_schema.pyx\", line 201, in fastavro._schema._load_schema\r\n  File \"fastavro/_schema.pyx\", line 59, in fastavro._schema.parse_schema\r\n  File \"fastavro/_schema.pyx\", line 143, in fastavro._schema._parse_schema\r\n  File \"fastavro/_schema.pyx\", line 180, in fastavro._schema.parse_field\r\n  File \"fastavro/_schema.pyx\", line 76, in fastavro._schema._parse_schema\r\nfastavro._schema_common.UnknownType: com.hautelook.halo-www.order.service.Money**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/332", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/332/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/332/events", "html_url": "https://github.com/fastavro/fastavro/issues/332", "id": 438122847, "node_id": "MDU6SXNzdWU0MzgxMjI4NDc=", "number": 332, "title": "PyCon 2019", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-29T01:25:40Z", "updated_at": "2019-05-10T03:26:02Z", "closed_at": "2019-05-10T03:26:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If anyone is going to PyCon in Cleveland and wants to meet up to say hi feel free to reach out to me as I will be there. :snake: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/330", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/330/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/330/events", "html_url": "https://github.com/fastavro/fastavro/issues/330", "id": 437448322, "node_id": "MDU6SXNzdWU0Mzc0NDgzMjI=", "number": 330, "title": "Mac/BSD, for sys.stdout: \"When appending to an avro file you must use the 'a+' mode\"", "user": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-26T00:19:25Z", "updated_at": "2019-05-29T21:02:45Z", "closed_at": "2019-05-29T21:02:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "How curious how we learn how these platforms behave differently,\r\n\r\nmac\r\n---\r\n\r\n```\r\n$ python -V\r\nPython 3.6.5\r\n$ python -c 'import sys;print(sys.stdout.buffer.tell())'\r\n1151335\r\n```\r\n\r\nlinux\r\n-----\r\n\r\n```\r\n$ python -V\r\nPython 3.6.6\r\n$ python -c 'import sys;print(sys.stdout.buffer.tell())'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nOSError: [Errno 29] Illegal seek\r\n```\r\n\r\nThis platform-specific behavior impedes an edge-case feature: what if we wanted to use fastavro to stream directly to `sys.stdout`? Such as in a classic unix pipe -- this works perfectly ok on Linux, great! \r\n\r\nExample:\r\n\r\n```\r\nIn [3]: import sys, fastavro                                                                                         \r\n\r\nIn [4]: fout = fastavro.write.Writer(sys.stdout.buffer, schema=fastavro.parse_schema({'name': 'ohhai', 'type': 'record', 'fields': [ {'name': 'temp', 'type': 'int'}]})); fout.flush()                                            \r\nObjavro.codenullavro.schema\ufffd{\"type\": \"record\", \"name\": \"ohhai\", \"fields\": [{\"name\": \"temp\", \"type\": \"int\"}], \"__fastavro_parsed\": true}D\ufffdA\ufffd7G+*+w\ufffd9\u0268\ufffd\r\n```\r\n\r\nCool :) But on Mac, this isn't possible, the code introduced in https://github.com/fastavro/fastavro/commit/aaf02423#diff-fbbdb913f5928803608b2925d15d137fR49 raises the ValueError,\r\n\r\nrelated comment, https://github.com/fastavro/fastavro/issues/276#issuecomment-424309799\r\n\r\n```\r\nIn [2]: fout = fastavro.write.Writer(sys.stdout.buffer, schema=fastavro.parse_schema({'name': 'ohhai', 'type': 'record'\r\n   ...: , 'fields': [ {'name': 'temp', 'type': 'int'}]})); fout.flush()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-dc0833ee58e4> in <module>\r\n----> 1 fout = fastavro.write.Writer(sys.stdout.buffer, schema=fastavro.parse_schema({'name': 'ohhai', 'type': 'record', 'fields': [ {'name': 'temp', 'type': 'int'}]})); fout.flush()\r\n\r\n~/Code/fastavro/fastavro/_write.pyx in fastavro._write.Writer.__init__()\r\n\r\n~/Code/fastavro/fastavro/_six.pyx in fastavro._six.py3_appendable()\r\n\r\nValueError: When appending to an avro file you must use the 'a+' mode, not just 'a'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/328", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/328/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/328/events", "html_url": "https://github.com/fastavro/fastavro/issues/328", "id": 434351846, "node_id": "MDU6SXNzdWU0MzQzNTE4NDY=", "number": 328, "title": "optional C extension built for windows", "user": {"login": "tchiotludo", "id": 2064609, "node_id": "MDQ6VXNlcjIwNjQ2MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2064609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tchiotludo", "html_url": "https://github.com/tchiotludo", "followers_url": "https://api.github.com/users/tchiotludo/followers", "following_url": "https://api.github.com/users/tchiotludo/following{/other_user}", "gists_url": "https://api.github.com/users/tchiotludo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tchiotludo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tchiotludo/subscriptions", "organizations_url": "https://api.github.com/users/tchiotludo/orgs", "repos_url": "https://api.github.com/users/tchiotludo/repos", "events_url": "https://api.github.com/users/tchiotludo/events{/privacy}", "received_events_url": "https://api.github.com/users/tchiotludo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-04-17T15:37:50Z", "updated_at": "2019-04-26T23:57:24Z", "closed_at": "2019-04-19T12:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to have the fastavro c extension build & package on pypi ? \r\nIt really painful to build on windows since it need a big c++ lib. \r\n\r\nI think people windows user will be really happy with this feature ! :pray:  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/323", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/323/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/323/events", "html_url": "https://github.com/fastavro/fastavro/issues/323", "id": 425559747, "node_id": "MDU6SXNzdWU0MjU1NTk3NDc=", "number": 323, "title": "Aliases in enum isn't working as expected", "user": {"login": "m0nhawk", "id": 8220926, "node_id": "MDQ6VXNlcjgyMjA5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8220926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m0nhawk", "html_url": "https://github.com/m0nhawk", "followers_url": "https://api.github.com/users/m0nhawk/followers", "following_url": "https://api.github.com/users/m0nhawk/following{/other_user}", "gists_url": "https://api.github.com/users/m0nhawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m0nhawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m0nhawk/subscriptions", "organizations_url": "https://api.github.com/users/m0nhawk/orgs", "repos_url": "https://api.github.com/users/m0nhawk/repos", "events_url": "https://api.github.com/users/m0nhawk/events{/privacy}", "received_events_url": "https://api.github.com/users/m0nhawk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-26T17:43:15Z", "updated_at": "2019-03-26T18:19:04Z", "closed_at": "2019-03-26T18:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use aliases to rename node name and enum values. I have the following (slightly modified `fastavro` example, I added enum field `badness`, schema change and reading with a new schema); but this doesn't work:\r\n\r\n```python\r\nimport json\r\nfrom fastavro import writer, reader, parse_schema\r\n\r\nschema = {\r\n    'doc': 'A weather reading.',\r\n    'name': 'Weather',\r\n    'namespace': 'test',\r\n    'type': 'record',\r\n    'fields': [\r\n        {'name': 'station', 'type': 'string'},\r\n        {'name': 'time', 'type': 'long'},\r\n        {'name': 'temp', 'type': 'int'},\r\n        {'name': 'badness', 'type': {\r\n                \"type\": \"enum\",\r\n                \"name\": \"badness\",\r\n                \"symbols\" : [\"good\", \"medium\", \"bad\"]\r\n            }, \"default\": \"good\"\r\n        }\r\n    ],\r\n}\r\nparsed_schema = parse_schema(schema)\r\n\r\n# 'records' can be an iterable (including generator)\r\nrecords = [\r\n    {u'station': u'011990-99999', u'temp': 0, u'time': 1433269388, u'badness': 'medium'},\r\n    {u'station': u'011990-99999', u'temp': 22, u'time': 1433270389, u'badness': 'good'},\r\n    {u'station': u'011990-99999', u'temp': -11, u'time': 1433273379},\r\n    {u'station': u'012650-99999', u'temp': 111, u'time': 1433275478, u'badness': 'bad'},\r\n]\r\n\r\n# Writing\r\nwith open('weather.avro', 'wb') as out:\r\n    writer(out, parsed_schema, records)\r\n\r\nschema['fields'][3]['name'] = 'fairness'\r\nschema['fields'][3]['aliases'] = ['badness']\r\nschema['fields'][3]['type']['symbols'] = ['good', 'neutral', 'bad']\r\nschema['fields'][3]['type']['aliases'] = ['good', 'medium', 'bad']\r\n\r\n# Reading\r\nwith open('weather.avro', 'rb') as fo:\r\n    for record in reader(fo, parse_schema(schema)):\r\n        print(record)\r\n```\r\n\r\nI'm using `fastavro==0.21.19`. Aliases for node names working as expected, but for enum values it's seems to ignore `aliases` section at all.\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nSchemaResolutionError                     Traceback (most recent call last)\r\n<ipython-input-70-ba38f2e08a2c> in <module>\r\n      1 # Reading\r\n      2 with open('weather.avro', 'rb') as fo:\r\n----> 3     for record in reader(fo, parse_schema(schema)):\r\n      4         print(record)\r\nfastavro/_read.pyx in _iter_avro_records()\r\nfastavro/_read.pyx in fastavro._read._read_data()\r\nfastavro/_read.pyx in fastavro._read.read_record()\r\nfastavro/_read.pyx in fastavro._read._read_data()\r\nfastavro/_read.pyx in fastavro._read.read_enum()\r\nSchemaResolutionError: medium not found in reader symbol list ['good', 'neutral', 'bad']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/321", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/321/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/321/events", "html_url": "https://github.com/fastavro/fastavro/issues/321", "id": 422825348, "node_id": "MDU6SXNzdWU0MjI4MjUzNDg=", "number": 321, "title": "Python 3.7 warning on `write.py` `from . import _write`. `in 3.8 it will stop working`", "user": {"login": "kurtostfeld", "id": 7574400, "node_id": "MDQ6VXNlcjc1NzQ0MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7574400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kurtostfeld", "html_url": "https://github.com/kurtostfeld", "followers_url": "https://api.github.com/users/kurtostfeld/followers", "following_url": "https://api.github.com/users/kurtostfeld/following{/other_user}", "gists_url": "https://api.github.com/users/kurtostfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/kurtostfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kurtostfeld/subscriptions", "organizations_url": "https://api.github.com/users/kurtostfeld/orgs", "repos_url": "https://api.github.com/users/kurtostfeld/repos", "events_url": "https://api.github.com/users/kurtostfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/kurtostfeld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-19T16:16:50Z", "updated_at": "2019-03-20T00:30:56Z", "closed_at": "2019-03-19T23:42:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n  /Users/.../lib/python3.7/site-packages/fastavro/write.py:2: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from . import _write\r\n```\r\n\r\nThis isn't causing any functional problems, but I'm getting loud warnings in my log output that I'd prefer to remove.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/320", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/320/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/320/events", "html_url": "https://github.com/fastavro/fastavro/issues/320", "id": 420410416, "node_id": "MDU6SXNzdWU0MjA0MTA0MTY=", "number": 320, "title": "Handling of \"null\" type", "user": {"login": "norim13", "id": 7649578, "node_id": "MDQ6VXNlcjc2NDk1Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7649578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/norim13", "html_url": "https://github.com/norim13", "followers_url": "https://api.github.com/users/norim13/followers", "following_url": "https://api.github.com/users/norim13/following{/other_user}", "gists_url": "https://api.github.com/users/norim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/norim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/norim13/subscriptions", "organizations_url": "https://api.github.com/users/norim13/orgs", "repos_url": "https://api.github.com/users/norim13/repos", "events_url": "https://api.github.com/users/norim13/events{/privacy}", "received_events_url": "https://api.github.com/users/norim13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-13T10:00:28Z", "updated_at": "2019-03-13T13:18:03Z", "closed_at": "2019-03-13T13:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having some doubts about how fastavro should handle `null` type. \r\n\r\nI currently use the [avro](https://pypi.org/project/avro/) python lib, and null fields are interpreted as optional. For example, if I have a field that has a type such as `\"type\": [\"null\", \"integer\"]`, the field would be valid if it was either (1) null, (2) integer, or (3) not present. fastavro's validation doesn't contemplate case (3), and requires null fields to be present.\r\n\r\nThe [official avro schema documentation](https://avro.apache.org/docs/1.8.2/spec.html#schema_primitive) is pretty concise about null fields:\r\n\r\n> null: no value\r\n\r\nThis may be a bit ambiguous, but I believe that it's pretty legitimate that \"no value\" can mean the absence of the field.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/315", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/315/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/315/events", "html_url": "https://github.com/fastavro/fastavro/issues/315", "id": 409757956, "node_id": "MDU6SXNzdWU0MDk3NTc5NTY=", "number": 315, "title": "Union[bool, int] works; Union[int, bool] doesn't", "user": {"login": "redsk", "id": 4172433, "node_id": "MDQ6VXNlcjQxNzI0MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4172433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redsk", "html_url": "https://github.com/redsk", "followers_url": "https://api.github.com/users/redsk/followers", "following_url": "https://api.github.com/users/redsk/following{/other_user}", "gists_url": "https://api.github.com/users/redsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/redsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redsk/subscriptions", "organizations_url": "https://api.github.com/users/redsk/orgs", "repos_url": "https://api.github.com/users/redsk/repos", "events_url": "https://api.github.com/users/redsk/events{/privacy}", "received_events_url": "https://api.github.com/users/redsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-13T11:26:58Z", "updated_at": "2019-02-14T03:45:25Z", "closed_at": "2019-02-14T03:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on `0.21.17`. It seems `Union[int, bool]` returns `1` instead of `True` as shown below.\r\n\r\n```\r\nimport unittest\r\nimport fastavro\r\nfrom io import BytesIO\r\n\r\ndef serialize(schema, data):\r\n    bytes_writer = BytesIO()\r\n    fastavro.schemaless_writer(bytes_writer, schema, data)\r\n    return bytes_writer.getvalue()\r\n\r\ndef deserialize(schema, binary):\r\n    bytes_writer = BytesIO()\r\n    bytes_writer.write(binary)\r\n    bytes_writer.seek(0)\r\n\r\n    res = fastavro.schemaless_reader(bytes_writer, schema)\r\n    return res\r\n\r\nschema1 = {\r\n    \"name\": \"TestRecord\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"union_int_boolean\",\r\n            \"type\": [\r\n                \"int\",\r\n                \"boolean\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\ndata1 = {'union_int_boolean': True}\r\nbinary = serialize(schema1, data1)\r\ndata2 = deserialize(schema1, binary)\r\ndata3 = {'union_int_boolean': 1}\r\nbinary = serialize(schema1, data3)\r\ndata4 = deserialize(schema1, binary)\r\nprint(data1)\r\nprint(data2)\r\nprint(data3)\r\nprint(data4)\r\nprint('\\n')\r\n\r\nschema2 = {\r\n    \"name\": \"TestRecord\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"union_int_boolean\",\r\n            \"type\": [\r\n                \"boolean\",\r\n                \"int\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\ndata1 = {'union_int_boolean': True}\r\nbinary = serialize(schema2, data1)\r\ndata2 = deserialize(schema2, binary)\r\ndata3 = {'union_int_boolean': 1}\r\nbinary = serialize(schema2, data3)\r\ndata4 = deserialize(schema2, binary)\r\nprint(data1)\r\nprint(data2)\r\nprint(data3)\r\nprint(data4)\r\n\r\n# maybe related?\r\nb = True\r\ni = 1\r\nunittest.TestCase().assertEqual(b, i)\r\n```\r\n\r\nReturns:\r\n```\r\n# Union[int, bool] \r\n{'union_int_boolean': True}\r\n{'union_int_boolean': 1}\r\n{'union_int_boolean': 1}\r\n{'union_int_boolean': 1}\r\n\r\n# Union[bool, int] \r\n{'union_int_boolean': True}\r\n{'union_int_boolean': True}\r\n{'union_int_boolean': 1}\r\n{'union_int_boolean': 1}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/314", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/314/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/314/events", "html_url": "https://github.com/fastavro/fastavro/issues/314", "id": 409274908, "node_id": "MDU6SXNzdWU0MDkyNzQ5MDg=", "number": 314, "title": "Nested schemas replaced by parse_schema", "user": {"login": "norim13", "id": 7649578, "node_id": "MDQ6VXNlcjc2NDk1Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7649578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/norim13", "html_url": "https://github.com/norim13", "followers_url": "https://api.github.com/users/norim13/followers", "following_url": "https://api.github.com/users/norim13/following{/other_user}", "gists_url": "https://api.github.com/users/norim13/gists{/gist_id}", "starred_url": "https://api.github.com/users/norim13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/norim13/subscriptions", "organizations_url": "https://api.github.com/users/norim13/orgs", "repos_url": "https://api.github.com/users/norim13/repos", "events_url": "https://api.github.com/users/norim13/events{/privacy}", "received_events_url": "https://api.github.com/users/norim13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-02-12T12:30:56Z", "updated_at": "2020-02-27T00:20:39Z", "closed_at": "2020-02-27T00:20:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way I can get a complex schema (with dependencies on other schemas) with its dependencies already replaced? \r\n\r\nIt's probably best for me to give an example:\r\n\r\nMaster Schema:\r\n```\r\n{\r\n    \"name\": \"MasterSchema\",\r\n    \"namespace\": \"com.namespace.master\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\"name\": \"field_1\", \"type\": \"com.namespace.dependencies.Dependency\"}\r\n    ]\r\n}\r\n```\r\n\r\nDependency Schema:\r\n```\r\n{\r\n    \"name\": \"Dependency\",\r\n    \"namespace\": \"com.namespace.dependencies\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\"name\": \"sub_field_1\", \"type\": \"string\"}\r\n    ]\r\n}\r\n```\r\n\r\nGiven this two schemas were parsed with fastavro, and are stored in  `SCHEMA_DEFS`, I'd like to have a way of getting this:\r\n```\r\n{\r\n    \"name\": \"MasterSchema\",\r\n    \"namespace\": \"com.namespace.master\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"field_1\", \r\n            \"type\": {\r\n                \"name\": \"Dependency\",\r\n                \"namespace\": \"com.namespace.dependencies\",\r\n                \"type\": \"record\",\r\n                \"fields\": [\r\n                    {\"name\": \"sub_field_1\", \"type\": \"string\"}\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}\r\n``` \r\n\r\nI'm currently using \"avro\" for python and it allows this kind of parsing. This issue came to me when I was trying to migrate from that library to fastavro. Do you think this is a legitimate request? Is there any way of accomplishing this in the current release of fastavro?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/313", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/313/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/313/events", "html_url": "https://github.com/fastavro/fastavro/issues/313", "id": 404253682, "node_id": "MDU6SXNzdWU0MDQyNTM2ODI=", "number": 313, "title": "ValueError when saving datetime64[ns] value that contains the NaT value", "user": {"login": "simonejsing", "id": 9471242, "node_id": "MDQ6VXNlcjk0NzEyNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9471242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonejsing", "html_url": "https://github.com/simonejsing", "followers_url": "https://api.github.com/users/simonejsing/followers", "following_url": "https://api.github.com/users/simonejsing/following{/other_user}", "gists_url": "https://api.github.com/users/simonejsing/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonejsing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonejsing/subscriptions", "organizations_url": "https://api.github.com/users/simonejsing/orgs", "repos_url": "https://api.github.com/users/simonejsing/repos", "events_url": "https://api.github.com/users/simonejsing/events{/privacy}", "received_events_url": "https://api.github.com/users/simonejsing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-01-29T11:50:09Z", "updated_at": "2019-01-30T14:57:31Z", "closed_at": "2019-01-30T14:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a ValueError when trying to save a pandas data frame using 'pandavro' which wraps 'fastavro'. This error happens when a datetime64[ns] column contains a None/NaT value.\r\n\r\nThe following snippet reproduces the error:\r\n```\r\nimport pandavro as pdx\r\nimport pandas as pd\r\nimport datetime as dt\r\n\r\ndf = pd.DataFrame({ 'col': [dt.datetime.utcnow(), None] })\r\nprint(df[df['col'].isna() == True])\r\nprint(df['col'].dtypes)\r\npdx.to_avro('temp.avro', df)\r\n```\r\n\r\nAnd raises the error:\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\npandas/_libs/tslibs/nattype.pyx in pandas._libs.tslibs.nattype._make_error_func.f()\r\n\r\nValueError: NaTType does not support timestamp\r\n\r\nException ignored in: 'fastavro._write.prepare_timestamp_micros'\r\nTraceback (most recent call last):\r\n  File \"pandas/_libs/tslibs/nattype.pyx\", line 59, in pandas._libs.tslibs.nattype._make_error_func.f\r\nValueError: NaTType does not support timestamp\r\n\r\n\r\nIs this behavior expected? Can I not save NaT values for datetime values in AVRO files?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/312", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/312/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/312/events", "html_url": "https://github.com/fastavro/fastavro/issues/312", "id": 402769560, "node_id": "MDU6SXNzdWU0MDI3Njk1NjA=", "number": 312, "title": ".pyx files need _force argument on parse_schema", "user": {"login": "dmsolow", "id": 10577780, "node_id": "MDQ6VXNlcjEwNTc3Nzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10577780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmsolow", "html_url": "https://github.com/dmsolow", "followers_url": "https://api.github.com/users/dmsolow/followers", "following_url": "https://api.github.com/users/dmsolow/following{/other_user}", "gists_url": "https://api.github.com/users/dmsolow/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmsolow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmsolow/subscriptions", "organizations_url": "https://api.github.com/users/dmsolow/orgs", "repos_url": "https://api.github.com/users/dmsolow/repos", "events_url": "https://api.github.com/users/dmsolow/events{/privacy}", "received_events_url": "https://api.github.com/users/dmsolow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T15:47:05Z", "updated_at": "2019-03-02T23:53:58Z", "closed_at": "2019-03-02T23:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since fastavro writes the schema to datafiles with `__fastavro_parsed` intact, a separate process reading the file may fail with schemas that used aliases, because it won't parse the schema upon reading. This is addressed in in .py files with the `_force` argument to `parse_schema`, but it needs to be added to .pyx files\r\n\r\nA longer term solution would probably be to change how this process works. I don't think writing `__fastavro_parsed` to the datafile is a good idea.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/309", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/309/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/309/events", "html_url": "https://github.com/fastavro/fastavro/issues/309", "id": 401394806, "node_id": "MDU6SXNzdWU0MDEzOTQ4MDY=", "number": 309, "title": "Unions with uuid logical type are broken", "user": {"login": "kkirsanov", "id": 1369246, "node_id": "MDQ6VXNlcjEzNjkyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1369246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkirsanov", "html_url": "https://github.com/kkirsanov", "followers_url": "https://api.github.com/users/kkirsanov/followers", "following_url": "https://api.github.com/users/kkirsanov/following{/other_user}", "gists_url": "https://api.github.com/users/kkirsanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkirsanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkirsanov/subscriptions", "organizations_url": "https://api.github.com/users/kkirsanov/orgs", "repos_url": "https://api.github.com/users/kkirsanov/repos", "events_url": "https://api.github.com/users/kkirsanov/events{/privacy}", "received_events_url": "https://api.github.com/users/kkirsanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-21T15:10:25Z", "updated_at": "2019-01-22T01:19:52Z", "closed_at": "2019-01-22T01:19:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nfrom io import BytesIO\r\nimport fastavro\r\nimport uuid\r\n\r\nschema = {\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"maybe_uuid\",\r\n            \"type\": [\"null\", {\"type\": \"string\",\r\n                              \"logicalType\": \"uuid\",\r\n                              }],\r\n        },\r\n    ],\r\n    \"namespace\": \"namespace\",\r\n    \"name\": \"name\",\r\n    \"type\": \"record\"\r\n}\r\n\r\ndef serialize(schema, data):\r\n    bytes_writer = BytesIO()\r\n    fastavro.schemaless_writer(bytes_writer, schema, data)\r\n    return bytes_writer.getvalue()\r\n\r\n# ok\r\nbinary = serialize(schema, dict(maybe_uuid=None))\r\n# broken\r\nbinary = serialize(schema, dict(maybe_uuid=uuid.uuid4()))\r\n```\r\n\r\nValueError: UUID('9a70215f-229f-432b-9824-41e4c4a97ec3') (type <class 'uuid.UUID'>) do not match ['null', {'logicalType': 'uuid', 'type': 'string'}]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/303", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/303/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/303/events", "html_url": "https://github.com/fastavro/fastavro/issues/303", "id": 381166947, "node_id": "MDU6SXNzdWUzODExNjY5NDc=", "number": 303, "title": "Order of values in map makes difference", "user": {"login": "Artimi", "id": 1468560, "node_id": "MDQ6VXNlcjE0Njg1NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1468560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Artimi", "html_url": "https://github.com/Artimi", "followers_url": "https://api.github.com/users/Artimi/followers", "following_url": "https://api.github.com/users/Artimi/following{/other_user}", "gists_url": "https://api.github.com/users/Artimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Artimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Artimi/subscriptions", "organizations_url": "https://api.github.com/users/Artimi/orgs", "repos_url": "https://api.github.com/users/Artimi/repos", "events_url": "https://api.github.com/users/Artimi/events{/privacy}", "received_events_url": "https://api.github.com/users/Artimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T13:44:11Z", "updated_at": "2018-11-17T19:30:36Z", "closed_at": "2018-11-17T19:30:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have `fastavro==0.21.13` and following script adapted from documentation:\r\n```\r\nfrom fastavro import writer, reader, parse_schema\r\n\r\nschema = {\r\n    'doc': 'A weather reading.',\r\n    'name': 'Weather',\r\n    'namespace': 'test',\r\n    'type': 'record',\r\n    'fields': [\r\n        {'name': 'metadata', 'type': {'type': 'map', 'values': [\r\n\t        {'type': 'array', 'items': 'string'}, # array before map\r\n                {'type': 'map', 'values': ['string']},\r\n            ]}},\r\n    ],\r\n}\r\nparsed_schema = parse_schema(schema)\r\n\r\n# 'records' can be an iterable (including generator)\r\nrecords = [\r\n\t{'metadata': {'map1': {'map2': 'str'}}}\r\n]\r\n\r\n# Writing\r\nwith open('weather.avro', 'wb') as out:\r\n    writer(out, parsed_schema, records)\r\n\r\n# Reading\r\nwith open('weather.avro', 'rb') as fo:\r\n    for record in reader(fo):\r\n        print(record)\r\n\r\n```\r\nWhen I run this I get following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"avro_nested_map.py\", line 24, in <module>\r\n    writer(out, parsed_schema, records)\r\n  File \"fastavro/_write.pyx\", line 724, in fastavro._write.writer\r\n  File \"fastavro/_write.pyx\", line 689, in fastavro._write.Writer.write\r\n  File \"fastavro/_write.pyx\", line 537, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 474, in fastavro._write.write_record\r\n  File \"fastavro/_write.pyx\", line 533, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 395, in fastavro._write.write_map\r\n  File \"fastavro/_write.pyx\", line 535, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 443, in fastavro._write.write_union\r\n  File \"fastavro/_write.pyx\", line 531, in fastavro._write.write_data\r\nTypeError: Expected list, got dict\r\n```\r\nHowever, when I change just order of `values` in first map:\r\n```\r\nschema = {\r\n    'doc': 'A weather reading.',\r\n    'name': 'Weather',\r\n    'namespace': 'test',\r\n    'type': 'record',\r\n    'fields': [\r\n        {'name': 'metadata', 'type': {'type': 'map', 'values': [\r\n                {'type': 'map', 'values': ['string']}, # map before array\r\n\t        {'type': 'array', 'items': 'string'},\r\n            ]}},\r\n    ],\r\n}\r\n```\r\nEverything works as expected with output:\r\n```\r\n{'metadata': {'map1': {'map2': 'str'}}}\r\n```\r\nSo there is problem with first form that badly recognizes the type. And it is also weird that it works otherwise around.\r\nIs there maybe some problem with the schema? Am I using it right?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/302", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/302/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/302/events", "html_url": "https://github.com/fastavro/fastavro/issues/302", "id": 381158964, "node_id": "MDU6SXNzdWUzODExNTg5NjQ=", "number": 302, "title": "reader_schema ignored when dealing with doubles", "user": {"login": "afiodorov", "id": 5437870, "node_id": "MDQ6VXNlcjU0Mzc4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5437870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afiodorov", "html_url": "https://github.com/afiodorov", "followers_url": "https://api.github.com/users/afiodorov/followers", "following_url": "https://api.github.com/users/afiodorov/following{/other_user}", "gists_url": "https://api.github.com/users/afiodorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/afiodorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afiodorov/subscriptions", "organizations_url": "https://api.github.com/users/afiodorov/orgs", "repos_url": "https://api.github.com/users/afiodorov/repos", "events_url": "https://api.github.com/users/afiodorov/events{/privacy}", "received_events_url": "https://api.github.com/users/afiodorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T13:23:33Z", "updated_at": "2018-12-22T02:51:40Z", "closed_at": "2018-12-22T02:51:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code:\r\n\r\n```\r\nimport fastavro\r\nimport io\r\n\r\nrecords = [{'a': 1000}, {'a': 14}]\r\n\r\nwrite_schema = {\r\n    \"name\": \"test\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\"name\": \"a\", \"type\": \"long\"}\r\n    ]\r\n}\r\n\r\nread_schema = {\r\n        \"name\": \"test\",\r\n        \"type\": \"record\",\r\n        \"fields\": [\r\n            {\"name\": \"a\", \"type\": \"double\"}\r\n        ]\r\n    }\r\n\r\nout = io.BytesIO()\r\nfastavro.writer(out, fastavro.parse_schema(write_schema), records)\r\ndata = out.getvalue()\r\n\r\nreader = fastavro.reader(io.BytesIO(data), reader_schema=fastavro.parse_schema(read_schema))\r\nprint(list(reader))\r\n```\r\n\r\nProduces the output\r\n> [{'a': 1000}, {'a': 14}]\r\n\r\nHowever, as the `read_schema` says type of `a` is `double`, I anticipate the following output:\r\n> [{'a': 1000.0}, {'a': 14.0}]\r\n\r\nIs this a bug or is this expected?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/300", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/300/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/300/events", "html_url": "https://github.com/fastavro/fastavro/issues/300", "id": 379263768, "node_id": "MDU6SXNzdWUzNzkyNjM3Njg=", "number": 300, "title": "When the same avro file is created multiple times, its md5 checksum changes", "user": {"login": "ali-auro", "id": 41199051, "node_id": "MDQ6VXNlcjQxMTk5MDUx", "avatar_url": "https://avatars2.githubusercontent.com/u/41199051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ali-auro", "html_url": "https://github.com/ali-auro", "followers_url": "https://api.github.com/users/ali-auro/followers", "following_url": "https://api.github.com/users/ali-auro/following{/other_user}", "gists_url": "https://api.github.com/users/ali-auro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ali-auro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ali-auro/subscriptions", "organizations_url": "https://api.github.com/users/ali-auro/orgs", "repos_url": "https://api.github.com/users/ali-auro/repos", "events_url": "https://api.github.com/users/ali-auro/events{/privacy}", "received_events_url": "https://api.github.com/users/ali-auro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-09T18:01:00Z", "updated_at": "2018-11-12T01:20:17Z", "closed_at": "2018-11-12T01:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use fastavro 0.21.12. We calculate a MD5 checksum for the avro file we are generating and use the checksum to indicate if the file content changed or not. We have found that the checksum changes even when we recreate the exact same avro file. When doing a diff from shell, diff says that the binary files differ. Apparently, the avro file contains something related to file creation time. We tried codec='null' and codec='deflate' when calling fastavro.writer, the results are the same. \r\n\r\nWould it be possible to provide an option to turn off adding time related info to the file such that the same avro file will always have the same MD5 checksum?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/298", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/298/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/298/events", "html_url": "https://github.com/fastavro/fastavro/issues/298", "id": 376203768, "node_id": "MDU6SXNzdWUzNzYyMDM3Njg=", "number": 298, "title": "See if it's possible to have the block reader not depend on the tell() API", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T23:58:53Z", "updated_at": "2018-12-20T21:30:13Z", "closed_at": "2018-12-20T21:30:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In https://github.com/fastavro/fastavro/pull/297, we had to duplicate some code because the normal avro reader should not depend on the `io.tell()` API. The `block_reader` currently does, but I think it might be possible to calculate the `size` without needing to use `io.tell()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/295", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/295/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/295/events", "html_url": "https://github.com/fastavro/fastavro/issues/295", "id": 375815218, "node_id": "MDU6SXNzdWUzNzU4MTUyMTg=", "number": 295, "title": "Did fastavro lose support for streaming reader with PR #208 ?", "user": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-31T06:19:59Z", "updated_at": "2018-10-31T23:54:06Z", "closed_at": "2018-10-31T23:54:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been scratching my head for some time over this one, I'm not sure if its a bug/regression or design choice, please advise -- if I build a program ``test.sh`` that contains:\r\n```\r\ncat some/avro_file.avro\r\n```\r\n\r\nAnd then execute this program::\r\n```\r\nimport fastavro, subprocess\r\nnext(fastavro.reader(subprocess.Popen(['./test.sh'], stdout=subprocess.PIPE).stdout))\r\n```\r\nIt raises exception in `_iter_avro_blocks`:\r\n\r\n```\r\n~/.pyenv/versions/3.6.6/envs/jupyter36/lib/python3.6/site-packages/fastavro/_read_py.py in _iter_avro_blocks(fo, header, codec, writer_schema, reader_schema)                                     \r\n    543                                                                                          \r\n    544     while True:                                                                          \r\n--> 545         offset = fo.tell()                                                               \r\n    546         try:                                                                             \r\n    547             num_block_records = read_long(fo)                                            \r\n                                                                                                 \r\nOSError: [Errno 29] Illegal seek                                                                 \r\n```\r\n\r\nReviewing PR #208 in detail, It looks like there is meant to be an option, *not* to use the block reader, can you advise @ryan-williams if that was the intent?\r\n\r\nThis line https://github.com/fastavro/fastavro/pull/208/files#diff-4393ec29a73aadf5c03299080aa0b819R597 in `_iter_avro_records`, appears to exist only to be distinguished from `_iter_avro_blocks`, for outer classes `reader` and `block_reader`, respectively.\r\n\r\nHowever, `_iter_avro_blocks` uses the very same `_iter_avro_blocks` function, so it seems like a design choice to *only* support the new avro block reader, but this new function *requires the position to be known* which is not compatible with a stream.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/291", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/291/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/291/events", "html_url": "https://github.com/fastavro/fastavro/issues/291", "id": 374078454, "node_id": "MDU6SXNzdWUzNzQwNzg0NTQ=", "number": 291, "title": "Validate fails for union fields default values", "user": {"login": "m0nhawk", "id": 8220926, "node_id": "MDQ6VXNlcjgyMjA5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8220926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m0nhawk", "html_url": "https://github.com/m0nhawk", "followers_url": "https://api.github.com/users/m0nhawk/followers", "following_url": "https://api.github.com/users/m0nhawk/following{/other_user}", "gists_url": "https://api.github.com/users/m0nhawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m0nhawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m0nhawk/subscriptions", "organizations_url": "https://api.github.com/users/m0nhawk/orgs", "repos_url": "https://api.github.com/users/m0nhawk/repos", "events_url": "https://api.github.com/users/m0nhawk/events{/privacy}", "received_events_url": "https://api.github.com/users/m0nhawk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-25T18:39:42Z", "updated_at": "2018-10-25T20:59:43Z", "closed_at": "2018-10-25T20:35:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code:\r\n\r\n```\r\nimport json\r\n\r\nfrom fastavro import writer, parse_schema, reader\r\nfrom fastavro.validation import validate_many\r\n\r\nif __name__ == '__main__':\r\n    schema = open(\"schema/test.avsc\", \"rb\").read()\r\n    schema = json.loads(schema)\r\n    parsed_schema = parse_schema(schema)\r\n\r\n    records = [{'name': 'foo'}, {'name': 'bar', 'datetime': 'haha'}]\r\n\r\n    with open('test.avro', 'wb') as out:\r\n        writer(out, parsed_schema, records)\r\n\r\n    with open('test.avro', 'rb') as fo:\r\n        avro_reader = reader(fo)\r\n        for record in avro_reader:\r\n            print(record)\r\n\r\n    validate_many(records, parsed_schema)\r\n```\r\n\r\nAnd the output:\r\n\r\n```\r\n{'name': 'foo', 'datetime': None}\r\n{'name': 'bar', 'datetime': 'haha'}\r\nTraceback (most recent call last):\r\n  File \"write.py\", line 21, in <module>\r\n    validate_many(records, parsed_schema)\r\n  File \"fastavro/_validation.pyx\", line 214, in fastavro._validation.validate_many\r\n  File \"fastavro/_validation.pyx\", line 225, in fastavro._validation.validate_many\r\nfastavro._validate_common.ValidationError: [\r\n  \"test.datetime is <<object object at 0x1085e01f0>> of type <class 'object'> expected null\",\r\n  \"test.datetime is <<object object at 0x1085e01f0>> of type <class 'object'> expected string\"\r\n]\r\n```\r\n\r\nIt does work (script outputs both records correctly with `None` for missing union item), but the `validate_many` and `validate` doesn't work.\r\n\r\nMy schema:\r\n\r\n```\r\n{\r\n  \"type\" : \"record\",\r\n  \"name\" : \"test\",\r\n  \"fields\" : [ {\r\n    \"name\" : \"name\",\r\n    \"type\" : \"string\"\r\n  }, {\r\n    \"name\" : \"datetime\",\r\n    \"type\" : [ \"null\", \"string\" ]\r\n  } ]\r\n}\r\n```\r\n\r\n`avro-tools` works well also.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/288", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/288/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/288/events", "html_url": "https://github.com/fastavro/fastavro/issues/288", "id": 373588750, "node_id": "MDU6SXNzdWUzNzM1ODg3NTA=", "number": 288, "title": "KeyError on nested records", "user": {"login": "m0nhawk", "id": 8220926, "node_id": "MDQ6VXNlcjgyMjA5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8220926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m0nhawk", "html_url": "https://github.com/m0nhawk", "followers_url": "https://api.github.com/users/m0nhawk/followers", "following_url": "https://api.github.com/users/m0nhawk/following{/other_user}", "gists_url": "https://api.github.com/users/m0nhawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m0nhawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m0nhawk/subscriptions", "organizations_url": "https://api.github.com/users/m0nhawk/orgs", "repos_url": "https://api.github.com/users/m0nhawk/repos", "events_url": "https://api.github.com/users/m0nhawk/events{/privacy}", "received_events_url": "https://api.github.com/users/m0nhawk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T17:16:12Z", "updated_at": "2018-10-25T01:57:55Z", "closed_at": "2018-10-25T01:57:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following IDL schema:\r\n\r\n```\r\nprotocol PFB {\r\n  record UUID {\r\n    string id;\r\n  }\r\n  record foo {\r\n    UUID id = {\"id\": \"\"};\r\n    string description;\r\n    float size;\r\n  }\r\n  record bar {\r\n    UUID id = {\"id\": \"\"};\r\n    string name;\r\n    long age;\r\n  }\r\n  record u {\r\n    union{foo, bar} item;\r\n  }\r\n}\r\n```\r\n\r\nAnd the following code to write Avro file:\r\n\r\n```\r\nimport json\r\n\r\nfrom fastavro import writer, parse_schema, reader\r\n\r\n\r\nif __name__ == '__main__':\r\n    schema = open(\"schema/u.avsc\", \"rb\").read()\r\n    schema = json.loads(schema)\r\n    parsed_schema = parse_schema(schema)\r\n\r\n    records = [{'item': ('foo', {'description': 'test', 'size': 1.34})},\r\n               {'item': ('bar', {'id': {'id': '#1'}, 'name': 'foobar', 'age': 12})}]\r\n\r\n    with open('test.avro', 'wb') as out:\r\n        writer(out, parsed_schema, records)\r\n\r\n    with open('test.avro', 'rb') as fo:\r\n        avro_reader = reader(fo)\r\n        for record in avro_reader:\r\n            print(record)\r\n```\r\n\r\nThe output is expected:\r\n\r\n```\r\n{'item': {'id': {'id': ''}, 'description': 'test', 'size': 1.340000033378601}}\r\n{'item': {'id': {'id': '#1'}, 'name': 'foobar', 'age': 12}}\r\n```\r\n\r\nNow, when I try to read from other file:\r\n\r\n```\r\nfrom fastavro import reader\r\n\r\nif __name__ == '__main__':\r\n    with open('test.avro', 'rb') as fo:\r\n        avro_reader = reader(fo)\r\n        for record in avro_reader:\r\n            print(record)\r\n```\r\n\r\nIt fails:\r\n\r\n```\r\n{'item': {'id': {'id': ''}, 'description': 'test', 'size': 1.340000033378601}}\r\nTraceback (most recent call last):\r\n  File \"read.py\", line 13, in <module>\r\n    for record in avro_reader:\r\n  File \"fastavro/_read.pyx\", line 622, in _iter_avro_blocks\r\n  File \"fastavro/_read.pyx\", line 641, in __iter__\r\n  File \"fastavro/_read.pyx\", line 539, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 451, in fastavro._read.read_record\r\n  File \"fastavro/_read.pyx\", line 537, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 426, in fastavro._read.read_union\r\n  File \"fastavro/_read.pyx\", line 539, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 451, in fastavro._read.read_record\r\n  File \"fastavro/_read.pyx\", line 543, in fastavro._read._read_data\r\nKeyError: 'UUID'\r\n```\r\n\r\nI assume it has something with nested `UUID` record.\r\n\r\nProbably it's a bug in `fastavro`, because `avro-tools` reads the file properly. Or it just tolerate the error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/286", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/286/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/286/events", "html_url": "https://github.com/fastavro/fastavro/issues/286", "id": 370032847, "node_id": "MDU6SXNzdWUzNzAwMzI4NDc=", "number": 286, "title": "Issue when writing data to file. ", "user": {"login": "Code-nomad", "id": 1986008, "node_id": "MDQ6VXNlcjE5ODYwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Code-nomad", "html_url": "https://github.com/Code-nomad", "followers_url": "https://api.github.com/users/Code-nomad/followers", "following_url": "https://api.github.com/users/Code-nomad/following{/other_user}", "gists_url": "https://api.github.com/users/Code-nomad/gists{/gist_id}", "starred_url": "https://api.github.com/users/Code-nomad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Code-nomad/subscriptions", "organizations_url": "https://api.github.com/users/Code-nomad/orgs", "repos_url": "https://api.github.com/users/Code-nomad/repos", "events_url": "https://api.github.com/users/Code-nomad/events{/privacy}", "received_events_url": "https://api.github.com/users/Code-nomad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-15T07:30:29Z", "updated_at": "2018-10-16T06:37:17Z", "closed_at": "2018-10-16T06:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I pump data over from a csv to a dataframe all goes well but if I try to use fastavro to produce a file from this I get a stack trace saying there are encoding issues. \r\n\r\n`df = pd.read_csv(filename, sep='|', header=None, names=field_names)\r\n\r\nprint(field_names)\r\n\r\n\\# Create and parse schema\r\nschema = {\r\n       'doc': 'Dummy',\r\n       'type': 'record',\r\n       'name': 'sampleAvro',\r\n       'namespace': 'AVRO',\r\n       'fields': fields\r\n   }\r\n\r\nparsed_schema = parse_schema(schema)\r\n\r\n\\# convert pandas dataframe to dictionary\r\ndictionary = df.to_dict('records')\r\n\r\n\\#print(dictionary)\r\nprint(parsed_schema)\r\n\\# Write dict to avro file\r\n\r\nwith open('example.avro', 'wb') as out:\r\n    writer(out, parsed_schema, dictionary)\r\n`\r\n\r\nI get the following stacktrace: \r\n\r\n`    writer(out, parsed_schema, dictionary)\r\n  File \"fastavro/_write.pyx\", line 719, in fastavro._write.writer\r\n  File \"fastavro/_write.pyx\", line 686, in fastavro._write.Writer.write\r\n  File \"fastavro/_write.pyx\", line 535, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 472, in fastavro._write.write_record\r\n  File \"fastavro/_write.pyx\", line 513, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 316, in fastavro._write.write_utf8\r\n  File \"fastavro/_six.pyx\", line 22, in fastavro._six.py3_utob\r\nTypeError: encoding without a string argument`\r\n\r\n\r\nThis is a sample of data I am loading, \r\n\r\n`ANDO|20|00204|19970729|19970729|0|0\r\nTERI|334|03345|20160518|20160518|1728|0`\r\n\r\nThe schema object has this content upon writing:\r\n\r\n`{\r\n  'type': 'record',\r\n  'name': 'AVRO.sampleAvro',\r\n  'fields': [{\r\n    'name': 'C7B1CD',\r\n    'type': 'string'\r\n  }, {\r\n    'name': 'C7SQN2',\r\n    'type': 'int'\r\n  }, {\r\n    'name': 'C7X2CB',\r\n    'type': 'string'\r\n  }, {\r\n    'name': 'C7AADT',\r\n    'type': 'int'\r\n  }, {\r\n    'name': 'C7ABDT',\r\n    'type': 'int'\r\n  }, {\r\n    'name': 'C7AATM',\r\n    'type': 'int'\r\n  }, {\r\n    'name': 'C7ABNB',\r\n    'type': 'int'\r\n  }],\r\n  '__fastavro_parsed': True\r\n}`\r\n\r\nthe dict looks something like this:\r\n\r\n`[{\r\n  'C7B1CD': 'ANDO',\r\n  'C7SQN2': 20,\r\n  'C7X2CB': 204,\r\n  'C7AADT': 19970729,\r\n  'C7ABDT': 19970729,\r\n  'C7AATM': 0,\r\n  'C7ABNB': 0\r\n}, {\r\n  'C7B1CD': 'TERI',\r\n  'C7SQN2': 334,\r\n  'C7X2CB': 3345,\r\n  'C7AADT': 20160518,\r\n  'C7ABDT': 20160518,\r\n  'C7AATM': 1728,\r\n  'C7ABNB': 0\r\n}]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/285", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/285/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/285/events", "html_url": "https://github.com/fastavro/fastavro/issues/285", "id": 368856855, "node_id": "MDU6SXNzdWUzNjg4NTY4NTU=", "number": 285, "title": "logical type time_micros  failing since its outside of range", "user": {"login": "hfaouaz", "id": 7283511, "node_id": "MDQ6VXNlcjcyODM1MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7283511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hfaouaz", "html_url": "https://github.com/hfaouaz", "followers_url": "https://api.github.com/users/hfaouaz/followers", "following_url": "https://api.github.com/users/hfaouaz/following{/other_user}", "gists_url": "https://api.github.com/users/hfaouaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hfaouaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hfaouaz/subscriptions", "organizations_url": "https://api.github.com/users/hfaouaz/orgs", "repos_url": "https://api.github.com/users/hfaouaz/repos", "events_url": "https://api.github.com/users/hfaouaz/events{/privacy}", "received_events_url": "https://api.github.com/users/hfaouaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-10T21:12:01Z", "updated_at": "2018-10-11T14:48:48Z", "closed_at": "2018-10-11T14:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "reading a logical time micro, if the time is midnight, the time conversion fails in, \r\ndef read_time_micros(data, writer_schema=None, reader_schema=None):\r\n\r\nexample:\r\ndata = 87741000000    #( 00:22:21 )\r\n\r\nh = int(data / MCS_PER_HOUR)\r\nm = int(data / MCS_PER_MINUTE) % 60\r\ns = int(data / MCS_PER_SECOND) % 60\r\nmcs = data % MCS_PER_SECOND\r\nprint(datetime.time(h, m, s, mcs))\r\n\r\nAlso, there is no way to set the timezone.\r\n\r\n\r\nNote:  I believe this is due to providing a UTC offset.  Once time in micro is converted the result need to be offset.  I am still debugging it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/284", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/284/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/284/events", "html_url": "https://github.com/fastavro/fastavro/issues/284", "id": 368776716, "node_id": "MDU6SXNzdWUzNjg3NzY3MTY=", "number": 284, "title": "if date is jan 1 year 1, we get ValueError: ordinal must be >= 1", "user": {"login": "hfaouaz", "id": 7283511, "node_id": "MDQ6VXNlcjcyODM1MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7283511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hfaouaz", "html_url": "https://github.com/hfaouaz", "followers_url": "https://api.github.com/users/hfaouaz/followers", "following_url": "https://api.github.com/users/hfaouaz/following{/other_user}", "gists_url": "https://api.github.com/users/hfaouaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hfaouaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hfaouaz/subscriptions", "organizations_url": "https://api.github.com/users/hfaouaz/orgs", "repos_url": "https://api.github.com/users/hfaouaz/repos", "events_url": "https://api.github.com/users/hfaouaz/events{/privacy}", "received_events_url": "https://api.github.com/users/hfaouaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-10T17:42:28Z", "updated_at": "2018-10-11T13:57:39Z", "closed_at": "2018-10-10T18:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the code in _read_py.py doesn;t handle year 1 correctly.\r\n\r\ndef read_date(data, writer_schema=None, reader_schema=None):\r\n    return datetime.date.fromordinal(data + DAYS_SHIFT)\r\n\r\nI had to update the code to check if the ordinal difference is less than 1 then set to year one.\r\nif diff <1:\r\n    d = -719162 #year one ordinal value\r\nIs this an issue with datetime or fastavro implementation on handling year 1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/282", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/282/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/282/events", "html_url": "https://github.com/fastavro/fastavro/issues/282", "id": 368235887, "node_id": "MDU6SXNzdWUzNjgyMzU4ODc=", "number": 282, "title": "scale is optional per Avro spec.", "user": {"login": "hfaouaz", "id": 7283511, "node_id": "MDQ6VXNlcjcyODM1MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7283511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hfaouaz", "html_url": "https://github.com/hfaouaz", "followers_url": "https://api.github.com/users/hfaouaz/followers", "following_url": "https://api.github.com/users/hfaouaz/following{/other_user}", "gists_url": "https://api.github.com/users/hfaouaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hfaouaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hfaouaz/subscriptions", "organizations_url": "https://api.github.com/users/hfaouaz/orgs", "repos_url": "https://api.github.com/users/hfaouaz/repos", "events_url": "https://api.github.com/users/hfaouaz/events{/privacy}", "received_events_url": "https://api.github.com/users/hfaouaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-09T14:21:23Z", "updated_at": "2018-10-09T15:03:24Z", "closed_at": "2018-10-09T15:03:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "My schema had no scale in decimal logical type, and fastavro throws an error  as such:\r\n\r\nFile \"fastavro/_read.pyx\", line 187, in fastavro._read._read_decimal\r\nKeyError: 'scale'\r\n\r\nPer avro 1.8 specs:  \r\n\r\n\"scale, a JSON integer representing the scale (optional). If not specified the scale is 0.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/280", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/280/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/280/events", "html_url": "https://github.com/fastavro/fastavro/issues/280", "id": 365692302, "node_id": "MDU6SXNzdWUzNjU2OTIzMDI=", "number": 280, "title": "Issue with LONG and INT columns when extracting from Oracle", "user": {"login": "oyamin", "id": 18358029, "node_id": "MDQ6VXNlcjE4MzU4MDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/18358029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oyamin", "html_url": "https://github.com/oyamin", "followers_url": "https://api.github.com/users/oyamin/followers", "following_url": "https://api.github.com/users/oyamin/following{/other_user}", "gists_url": "https://api.github.com/users/oyamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/oyamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oyamin/subscriptions", "organizations_url": "https://api.github.com/users/oyamin/orgs", "repos_url": "https://api.github.com/users/oyamin/repos", "events_url": "https://api.github.com/users/oyamin/events{/privacy}", "received_events_url": "https://api.github.com/users/oyamin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-10-02T00:21:55Z", "updated_at": "2019-07-09T19:00:00Z", "closed_at": "2019-07-09T19:00:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am extracting data from oracle and generating avro schema based on column types from cx_Oracle. I have the following:\r\n\r\n`\r\nif defaultType == cx_Oracle.NUMBER:\r\n\r\n    type = {\r\n        \"name\": name,\r\n        \"type\": [\"null\", {\"name\": name, \"type\": \"long\"}]\r\n    }\r\n    avro_schema.append(type)\r\n`\r\nThe main issue is that output_type_handler in cx_oracle puts LONG and INT under NUMBER datatype (or at least that's how dba had the tables setup). When trying to generate the avro file with the schema and I encounter an INT column, I get the following error:\r\n\r\n`\r\nValueError: 3453453453532423323L (type <type 'long'>) do not match ['null', {'type': 'long'}]\r\n`\r\n\r\nSo i tried to convert all int and long to decimal:\r\n\r\n`\r\nif defaultType == cx_Oracle.NUMBER:\r\n\r\n    type = {\r\n        \"name\": name,\r\n        \"type\": [\"null\", {\"name\": name, \"type\": \"bytes\", \"logicalType\": \"decimal\", \"precision\": 38, \"scale\": 0}]\r\n    }\r\n    avro_schema.append(type)\r\n`\r\n\r\nand i get error (i also tried replacing bytes with long) and same issue:\r\n\r\nwith long:\r\n\r\n`\r\nValueError: 3453453453532423323L (type <type 'long'>) do not match [{'logicalType': 'decimal', 'scale': 0, 'type': 'long', 'precision': 38}, 'null']\r\n`\r\n\r\nwith bytes:\r\n\r\n`\r\nValueError: 3453232446456443 (type <type 'int'>) do not match [{'logicalType': 'decimal', 'scale': 0, 'type': 'bytes', 'precision': 38}, 'null']\r\n`\r\n\r\nPlease let me know if there is any way around this.\r\n\r\nI am using \r\npython==2.7.12\r\nfastavro==0.21.5\r\ncx-Oracle==6.2\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/276", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/276/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/276/events", "html_url": "https://github.com/fastavro/fastavro/issues/276", "id": 361641782, "node_id": "MDU6SXNzdWUzNjE2NDE3ODI=", "number": 276, "title": "Appending to an existing avro file", "user": {"login": "ellimilial", "id": 1521320, "node_id": "MDQ6VXNlcjE1MjEzMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1521320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellimilial", "html_url": "https://github.com/ellimilial", "followers_url": "https://api.github.com/users/ellimilial/followers", "following_url": "https://api.github.com/users/ellimilial/following{/other_user}", "gists_url": "https://api.github.com/users/ellimilial/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellimilial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellimilial/subscriptions", "organizations_url": "https://api.github.com/users/ellimilial/orgs", "repos_url": "https://api.github.com/users/ellimilial/repos", "events_url": "https://api.github.com/users/ellimilial/events{/privacy}", "received_events_url": "https://api.github.com/users/ellimilial/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-19T08:46:18Z", "updated_at": "2018-09-25T20:41:51Z", "closed_at": "2018-09-25T20:41:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to append to an already existing `avro` file, possible with `writer` interface?\r\n\r\nWhen opening a file in `ab` mode, upon reading I encounter `ValueError: expected sync marker not found`. `r+b` mode doesn't seem to do any appending.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/274", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/274/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/274/events", "html_url": "https://github.com/fastavro/fastavro/issues/274", "id": 360804556, "node_id": "MDU6SXNzdWUzNjA4MDQ1NTY=", "number": 274, "title": "error after update to 0.21.6", "user": {"login": "rsichny", "id": 745639, "node_id": "MDQ6VXNlcjc0NTYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/745639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsichny", "html_url": "https://github.com/rsichny", "followers_url": "https://api.github.com/users/rsichny/followers", "following_url": "https://api.github.com/users/rsichny/following{/other_user}", "gists_url": "https://api.github.com/users/rsichny/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsichny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsichny/subscriptions", "organizations_url": "https://api.github.com/users/rsichny/orgs", "repos_url": "https://api.github.com/users/rsichny/repos", "events_url": "https://api.github.com/users/rsichny/events{/privacy}", "received_events_url": "https://api.github.com/users/rsichny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-09-17T10:21:52Z", "updated_at": "2018-09-17T20:01:52Z", "closed_at": "2018-09-17T18:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure what has changed in 0.21.6, but the following code totally worked in 0.21.5 and stopped working (message doesn't pass validation) after update:\r\n\r\n```\r\nimport json\r\nfrom collections import OrderedDict\r\nfrom datetime import datetime\r\n\r\nfrom fastavro import validate\r\n\r\nschema = json.loads(\"\"\"\r\n{\r\n    \"type\": \"record\",\r\n    \"name\": \"questionnaire\",\r\n    \"namespace\": \"vela.messages.questionnaire\",\r\n    \"fields\": [\r\n        {\r\n            \"type\": {\r\n                \"type\": \"record\",\r\n                \"major_version\": 4,\r\n                \"minor_version\": 10,\r\n                \"name\": \"message_header\",\r\n                \"namespace\": \"vela.messages\",\r\n                \"fields\": [\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"message_uuid\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"enum\",\r\n                            \"name\": \"_message_source_name\",\r\n                            \"namespace\": \"vela.messages\",\r\n                            \"symbols\": [\r\n                                \"questionnaire_api\"\r\n                            ]\r\n                        },\r\n                        \"name\": \"message_source\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": \"string\"\r\n                        },\r\n                        \"name\": \"producer_ip_addresses\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"long\",\r\n                            \"logicalType\": \"timestamp-micros\"\r\n                        },\r\n                        \"name\": \"message_created_at\"\r\n                    },\r\n                    {\r\n                        \"type\": \"long\",\r\n                        \"name\": \"partner_internal_id\"\r\n                    },\r\n                    {\r\n                        \"type\": \"long\",\r\n                        \"name\": \"organization_internal_id\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"enum\",\r\n                            \"name\": \"_business_event_type\",\r\n                            \"namespace\": \"vela.messages\",\r\n                            \"symbols\": [\r\n                                \"QUESTIONNAIRE_CREATED\",\r\n                                \"QUESTIONNAIRE_UPDATED\",\r\n                                \"QUESTIONNAIRE_DELETED\"\r\n                            ]\r\n                        },\r\n                        \"name\": \"business_event_type\"\r\n                    }\r\n                ]\r\n            },\r\n            \"name\": \"header\"\r\n        },\r\n        {\r\n            \"type\": {\r\n                \"type\": \"record\",\r\n                \"name\": \"questionnaire\",\r\n                \"namespace\": \"vela.model.questionnaire\",\r\n                \"fields\": [\r\n                    {\r\n                        \"type\": \"long\",\r\n                        \"name\": \"questionnaire_internal_id\"\r\n                    },\r\n                    {\r\n                        \"type\": \"string\",\r\n                        \"name\": \"label\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"map\",\r\n                            \"values\": \"string\"\r\n                        },\r\n                        \"name\": \"display_label\"\r\n                    },\r\n                    {\r\n                        \"type\": [\r\n                            \"null\",\r\n                            \"string\"\r\n                        ],\r\n                        \"name\": \"data_tag\",\r\n                        \"default\": null\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"array\",\r\n                            \"items\": [\r\n                                {\r\n                                    \"type\": \"record\",\r\n                                    \"name\": \"_question\",\r\n                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                    \"fields\": [\r\n                                        {\r\n                                            \"type\": \"long\",\r\n                                            \"name\": \"questionnaire_node_internal_id\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"enum\",\r\n                                                \"name\": \"_questionnaire_node_type_question\",\r\n                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                \"symbols\": [\r\n                                                    \"QUESTION\"\r\n                                                ]\r\n                                            },\r\n                                            \"name\": \"questionnaire_node_type\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": \"string\",\r\n                                            \"name\": \"label\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"map\",\r\n                                                \"values\": \"string\"\r\n                                            },\r\n                                            \"name\": \"text\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": [\r\n                                                \"null\",\r\n                                                \"string\"\r\n                                            ],\r\n                                            \"name\": \"data_tag\",\r\n                                            \"default\": null\r\n                                        },\r\n                                        {\r\n                                            \"type\": [\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_open_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_open\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"OPEN\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                \"long\"\r\n                                                            ],\r\n                                                            \"name\": \"min_length\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                \"long\"\r\n                                                            ],\r\n                                                            \"name\": \"max_length\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_open_widget\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"INPUT\",\r\n                                                                    \"TEXTAREA\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"widget\"\r\n                                                        }\r\n                                                    ]\r\n                                                },\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_choice_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_choice\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"CHOICE\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"array\",\r\n                                                                \"items\": {\r\n                                                                    \"type\": \"record\",\r\n                                                                    \"name\": \"choice_option\",\r\n                                                                    \"namespace\": \"vela.model.types.questionnaire\",\r\n                                                                    \"fields\": [\r\n                                                                        {\r\n                                                                            \"type\": \"string\",\r\n                                                                            \"name\": \"value\"\r\n                                                                        },\r\n                                                                        {\r\n                                                                            \"type\": {\r\n                                                                                \"type\": \"map\",\r\n                                                                                \"values\": \"string\"\r\n                                                                            },\r\n                                                                            \"name\": \"text\"\r\n                                                                        }\r\n                                                                    ]\r\n                                                                }\r\n                                                            },\r\n                                                            \"name\": \"choices\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_choice_widget\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"DROPDOWN\",\r\n                                                                    \"RADIO\",\r\n                                                                    \"BUTTON\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"widget\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"long\",\r\n                                                            \"name\": \"columns_number\",\r\n                                                            \"default\": 1\r\n                                                        }\r\n                                                    ]\r\n                                                },\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_multichoice_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_multichoice\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"MULTICHOICE\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"array\",\r\n                                                                \"items\": \"vela.model.types.questionnaire.choice_option\"\r\n                                                            },\r\n                                                            \"name\": \"choices\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_multichoice_widget\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"SELECT\",\r\n                                                                    \"CHECKBOX\",\r\n                                                                    \"BUTTON\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"widget\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"long\",\r\n                                                            \"name\": \"columns_number\",\r\n                                                            \"default\": 1\r\n                                                        }\r\n                                                    ]\r\n                                                },\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_datepicker_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_datepicker\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"DATEPICKER\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                {\r\n                                                                    \"type\": \"int\",\r\n                                                                    \"logicalType\": \"date\"\r\n                                                                }\r\n                                                            ],\r\n                                                            \"name\": \"min_value\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                {\r\n                                                                    \"type\": \"int\",\r\n                                                                    \"logicalType\": \"date\"\r\n                                                                }\r\n                                                            ],\r\n                                                            \"name\": \"max_value\",\r\n                                                            \"default\": null\r\n                                                        }\r\n                                                    ]\r\n                                                },\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_datetimepicker_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_datetimepicker\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"DATETIMEPICKER\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                {\r\n                                                                    \"type\": \"long\",\r\n                                                                    \"logicalType\": \"timestamp-micros\"\r\n                                                                }\r\n                                                            ],\r\n                                                            \"name\": \"min_value\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                {\r\n                                                                    \"type\": \"long\",\r\n                                                                    \"logicalType\": \"timestamp-micros\"\r\n                                                                }\r\n                                                            ],\r\n                                                            \"name\": \"max_value\",\r\n                                                            \"default\": null\r\n                                                        }\r\n                                                    ]\r\n                                                },\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_timepicker_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_timepicker\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"TIMEPICKER\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                {\r\n                                                                    \"type\": \"long\",\r\n                                                                    \"logicalType\": \"time-micros\"\r\n                                                                }\r\n                                                            ],\r\n                                                            \"name\": \"min_value\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                {\r\n                                                                    \"type\": \"long\",\r\n                                                                    \"logicalType\": \"time-micros\"\r\n                                                                }\r\n                                                            ],\r\n                                                            \"name\": \"max_value\",\r\n                                                            \"default\": null\r\n                                                        }\r\n                                                    ]\r\n                                                },\r\n                                                {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"_number_options\",\r\n                                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_question_type_number\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"NUMBER\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"question_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"boolean\",\r\n                                                            \"name\": \"required\",\r\n                                                            \"default\": false\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                \"double\"\r\n                                                            ],\r\n                                                            \"name\": \"min_value\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                \"double\"\r\n                                                            ],\r\n                                                            \"name\": \"max_value\",\r\n                                                            \"default\": null\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": \"long\",\r\n                                                            \"name\": \"precision\",\r\n                                                            \"default\": 0\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_number_widget\",\r\n                                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"INPUT\",\r\n                                                                    \"INPUT_WITH_BUTTONS\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"widget\"\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                            ],\r\n                                            \"name\": \"options\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"array\",\r\n                                                \"items\": {\r\n                                                    \"type\": \"record\",\r\n                                                    \"name\": \"flow_rule\",\r\n                                                    \"namespace\": \"vela.model.types.questionnaire\",\r\n                                                    \"fields\": [\r\n                                                        {\r\n                                                            \"type\": \"string\",\r\n                                                            \"name\": \"rule_code\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": {\r\n                                                                \"type\": \"enum\",\r\n                                                                \"name\": \"_flow_rule_type\",\r\n                                                                \"namespace\": \"vela.model.types.questionnaire\",\r\n                                                                \"symbols\": [\r\n                                                                    \"SKIP\",\r\n                                                                    \"JUMP\"\r\n                                                                ]\r\n                                                            },\r\n                                                            \"name\": \"rule_type\"\r\n                                                        },\r\n                                                        {\r\n                                                            \"type\": [\r\n                                                                \"null\",\r\n                                                                \"long\"\r\n                                                            ],\r\n                                                            \"name\": \"target_questionnaire_node_internal_id\",\r\n                                                            \"default\": null\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                            },\r\n                                            \"name\": \"flow_rules\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"long\",\r\n                                                \"logicalType\": \"timestamp-micros\"\r\n                                            },\r\n                                            \"name\": \"created_at\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"long\",\r\n                                                \"logicalType\": \"timestamp-micros\"\r\n                                            },\r\n                                            \"name\": \"updated_at\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": \"long\",\r\n                                            \"name\": \"created_by\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": \"long\",\r\n                                            \"name\": \"updated_by\"\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    \"type\": \"record\",\r\n                                    \"name\": \"_questionnaire_node\",\r\n                                    \"namespace\": \"vela.model.questionnaire\",\r\n                                    \"fields\": [\r\n                                        {\r\n                                            \"type\": \"long\",\r\n                                            \"name\": \"questionnaire_node_internal_id\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"enum\",\r\n                                                \"name\": \"_questionnaire_node_type_generic\",\r\n                                                \"namespace\": \"vela.model.questionnaire\",\r\n                                                \"symbols\": [\r\n                                                    \"SECTION\",\r\n                                                    \"GROUP\"\r\n                                                ]\r\n                                            },\r\n                                            \"name\": \"questionnaire_node_type\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": \"string\",\r\n                                            \"name\": \"label\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": [\r\n                                                \"null\",\r\n                                                {\r\n                                                    \"type\": \"map\",\r\n                                                    \"values\": \"string\"\r\n                                                }\r\n                                            ],\r\n                                            \"name\": \"text\",\r\n                                            \"default\": null\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"array\",\r\n                                                \"items\": \"vela.model.types.questionnaire.flow_rule\"\r\n                                            },\r\n                                            \"name\": \"flow_rules\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"long\",\r\n                                                \"logicalType\": \"timestamp-micros\"\r\n                                            },\r\n                                            \"name\": \"created_at\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"long\",\r\n                                                \"logicalType\": \"timestamp-micros\"\r\n                                            },\r\n                                            \"name\": \"updated_at\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": \"long\",\r\n                                            \"name\": \"created_by\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": \"long\",\r\n                                            \"name\": \"updated_by\"\r\n                                        },\r\n                                        {\r\n                                            \"type\": {\r\n                                                \"type\": \"array\",\r\n                                                \"items\": [\r\n                                                    \"vela.model.questionnaire._questionnaire_node\",\r\n                                                    \"vela.model.questionnaire._question\"\r\n                                                ]\r\n                                            },\r\n                                            \"name\": \"children\",\r\n                                            \"default\": []\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"name\": \"nodes\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"long\",\r\n                            \"logicalType\": \"timestamp-micros\"\r\n                        },\r\n                        \"name\": \"created_at\"\r\n                    },\r\n                    {\r\n                        \"type\": {\r\n                            \"type\": \"long\",\r\n                            \"logicalType\": \"timestamp-micros\"\r\n                        },\r\n                        \"name\": \"updated_at\"\r\n                    },\r\n                    {\r\n                        \"type\": \"long\",\r\n                        \"name\": \"created_by\"\r\n                    },\r\n                    {\r\n                        \"type\": \"long\",\r\n                        \"name\": \"updated_by\"\r\n                    }\r\n                ]\r\n            },\r\n            \"name\": \"body\"\r\n        }\r\n    ]\r\n}\r\n\"\"\")\r\n\r\nmessage = {\r\n    'header': OrderedDict([\r\n        ('message_uuid', '6e644c49-89d0-4858-aabe-b02ae944e709'),\r\n        ('message_source', 'questionnaire_api'),\r\n        ('producer_ip_addresses', ['127.0.0.1']),\r\n        ('message_created_at', datetime.now()),\r\n        ('partner_internal_id', 39302), ('organization_internal_id', 39302),\r\n        ('business_event_type', 'QUESTIONNAIRE_UPDATED')\r\n    ]),\r\n    'body': OrderedDict([\r\n        ('created_at', datetime.now()),\r\n        ('updated_at', datetime.now()),\r\n        ('created_by', 177033),\r\n        ('updated_by', 177033),\r\n        ('questionnaire_internal_id', 733),\r\n        ('label', 'adawdaw'),\r\n        ('display_label', {'en': 'adawdaw'}),\r\n        ('data_tag', None),\r\n        ('nodes', [\r\n            {\r\n                'created_at': datetime.now(),\r\n                'updated_at': datetime.now(),\r\n                'created_by': 177033,\r\n                'updated_by': 177033,\r\n                'questionnaire_node_internal_id': 734,\r\n                'label': 'how_are_you_adawdaw',\r\n                'text': {'en': 'How are you doing today? Choose an answer.'},\r\n                'flow_rules': [\r\n\r\n                ],\r\n                'children': [],\r\n                'questionnaire_node_type': 'QUESTION',\r\n                'data_tag': 'UPMC',\r\n                'options': {\r\n                    'widget': 'RADIO',\r\n                    'choices': [\r\n                        OrderedDict([('value', 'good'), ('text', {'en': 'I had a good day.'})]),\r\n                        OrderedDict([('value', 'ok'), ('text', {'en': 'I had an ok day \u2013 ups and downs.'})]),\r\n                        OrderedDict([('value', 'struggled'), ('text', {'en': 'I struggled \u2013 today was a hard day.'})])\r\n                    ],\r\n                    'required': True,\r\n                    'columns_number': 1,\r\n                    'question_type': 'CHOICE'\r\n                }\r\n            }\r\n        ])\r\n    ])\r\n}\r\n\r\nvalidate(message, schema)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/272", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/272/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/272/events", "html_url": "https://github.com/fastavro/fastavro/issues/272", "id": 360336581, "node_id": "MDU6SXNzdWUzNjAzMzY1ODE=", "number": 272, "title": "UnionSchema deduction is too permissive", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-14T14:49:23Z", "updated_at": "2018-09-16T21:45:55Z", "closed_at": "2018-09-16T21:45:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See https://issues.apache.org/jira/browse/AVRO-2226.\r\n\r\nWe have the same problem.\r\n\r\nThis test case currently fails:\r\n\r\n```python\r\ndef test():\r\n    schema = [{\r\n         \"type\": \"record\",\r\n         \"name\": \"A\",\r\n         \"fields\": [{\"name\": \"foo\", \"type\": [\"string\", \"null\"]}]\r\n        },\r\n        {\r\n         \"type\": \"record\",\r\n         \"name\": \"B\",\r\n         \"fields\": [{\"name\": \"bar\", \"type\": [\"string\", \"null\"]}]\r\n        },\r\n        {\r\n         \"type\": \"record\",\r\n         \"name\": \"AOrB\",\r\n         \"fields\": [{\"name\": \"entity\", \"type\": [\"A\", \"B\"]}]\r\n        }]\r\n\r\n    datum_to_read = {'entity': {'foo': 'this is an instance of schema A'}}\r\n\r\n    assert [datum_to_read] == roundtrip(schema, [datum_to_read])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/271", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/271/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/271/events", "html_url": "https://github.com/fastavro/fastavro/issues/271", "id": 360077605, "node_id": "MDU6SXNzdWUzNjAwNzc2MDU=", "number": 271, "title": "Load schema definition from an existing avro file", "user": {"login": "alexflint", "id": 640247, "node_id": "MDQ6VXNlcjY0MDI0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/640247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexflint", "html_url": "https://github.com/alexflint", "followers_url": "https://api.github.com/users/alexflint/followers", "following_url": "https://api.github.com/users/alexflint/following{/other_user}", "gists_url": "https://api.github.com/users/alexflint/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexflint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexflint/subscriptions", "organizations_url": "https://api.github.com/users/alexflint/orgs", "repos_url": "https://api.github.com/users/alexflint/repos", "events_url": "https://api.github.com/users/alexflint/events{/privacy}", "received_events_url": "https://api.github.com/users/alexflint/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-13T21:44:04Z", "updated_at": "2018-10-05T13:00:07Z", "closed_at": "2018-10-05T13:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I load a schema definition from an avro file using fastavro?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/269", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/269/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/269/events", "html_url": "https://github.com/fastavro/fastavro/issues/269", "id": 360063545, "node_id": "MDU6SXNzdWUzNjAwNjM1NDU=", "number": 269, "title": "ValidationError class has error in Python2.7 when used with Union", "user": {"login": "soluwalana", "id": 558812, "node_id": "MDQ6VXNlcjU1ODgxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/558812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soluwalana", "html_url": "https://github.com/soluwalana", "followers_url": "https://api.github.com/users/soluwalana/followers", "following_url": "https://api.github.com/users/soluwalana/following{/other_user}", "gists_url": "https://api.github.com/users/soluwalana/gists{/gist_id}", "starred_url": "https://api.github.com/users/soluwalana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soluwalana/subscriptions", "organizations_url": "https://api.github.com/users/soluwalana/orgs", "repos_url": "https://api.github.com/users/soluwalana/repos", "events_url": "https://api.github.com/users/soluwalana/events{/privacy}", "received_events_url": "https://api.github.com/users/soluwalana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-13T20:57:04Z", "updated_at": "2018-09-16T22:00:51Z", "closed_at": "2018-09-16T22:00:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimal code to reproduce error:\r\n\r\n```# -*- coding: utf-8 -*-\r\nfrom fastavro.validation import validate\r\nfrom fastavro.schema import parse_schema\r\n\r\nschema = parse_schema({\r\n    \"namespace\": \"ns\",\r\n    \"type\": \"record\",\r\n    \"name\": \"event\",\r\n    \"fields\": [\r\n        {\"name\": \"event_id\", \"type\": [\"null\", \"string\"]}\r\n    ]\r\n})\r\nevent = {\"event_id\": u\"\u306a\u306b\"}\r\nvalidate(event, schema, raise_errors=True)\r\n\r\n\r\nschema = parse_schema({\r\n    \"namespace\": \"ns\",\r\n    \"type\": \"record\",\r\n    \"name\": \"event\",\r\n    \"fields\": [\r\n        {\"name\": \"event_id\", \"type\": [\"string\", \"null\"]}\r\n    ]\r\n})\r\nevent = {\"event_id\": u\"\u306a\u306b\"}\r\nvalidate(event, schema, raise_errors=True)\r\n```\r\n\r\nExpected behavior:\r\n\r\nBoth cases for validate should be valid\r\n\r\nActual behavior:\r\n\r\n```\r\n$ python bug.py                                                                                                                                                                                                                                                                                                                                                                                                                                                       \r\nTraceback (most recent call last):\r\n  File \"bug.py\", line 14, in <module>\r\n    validate(event, schema, raise_errors=True)\r\n  File \"fastavro/_validation.pyx\", line 152, in fastavro._validation.validate\r\n  File \"fastavro/_validation.pyx\", line 195, in fastavro._validation.validate\r\n  File \"fastavro/_validation.pyx\", line 115, in fastavro._validation.validate_record\r\n  File \"fastavro/_validation.pyx\", line 192, in fastavro._validation.validate\r\n  File \"fastavro/_validation.pyx\", line 139, in fastavro._validation.validate_union\r\n  File \"fastavro/_validation.pyx\", line 206, in fastavro._validation.validate\r\n  File \"/usr/local/lib/python2.7/site-packages/fastavro-0.21.4-py2.7-macosx-10.13-x86_64.egg/fastavro/_validate_common.py\", line 29, in __init__\r\n    message = json.dumps([str(e) for e in errors],\r\n  File \"/usr/local/lib/python2.7/site-packages/fastavro-0.21.4-py2.7-macosx-10.13-x86_64.egg/fastavro/_validate_common.py\", line 24, in __str__\r\n    schema=self.schema, field=field)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/268", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/268/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/268/events", "html_url": "https://github.com/fastavro/fastavro/issues/268", "id": 359661903, "node_id": "MDU6SXNzdWUzNTk2NjE5MDM=", "number": 268, "title": "type: \"fixed\" - fastavro._schema_common.UnknownType: fixed", "user": {"login": "oyamin", "id": 18358029, "node_id": "MDQ6VXNlcjE4MzU4MDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/18358029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oyamin", "html_url": "https://github.com/oyamin", "followers_url": "https://api.github.com/users/oyamin/followers", "following_url": "https://api.github.com/users/oyamin/following{/other_user}", "gists_url": "https://api.github.com/users/oyamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/oyamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oyamin/subscriptions", "organizations_url": "https://api.github.com/users/oyamin/orgs", "repos_url": "https://api.github.com/users/oyamin/repos", "events_url": "https://api.github.com/users/oyamin/events{/privacy}", "received_events_url": "https://api.github.com/users/oyamin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-12T21:36:37Z", "updated_at": "2018-09-20T13:11:00Z", "closed_at": "2018-09-20T13:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use fixed datatype when generating an Avro schema, but when I try to use it, I get an error.\r\n\r\nVersions:\r\n\r\n- Red Hat Enterprise Linux Server release 6.6\r\n- Python 2.7.12\r\n- fastavro==0.21.5\r\n\r\n  \r\n```\r\ntype = {\r\n       \"name\": \"testing\",\r\n       \"type\": \"fixed\",\r\n       \"size\": 1\r\n}\r\n\r\nparsed_schema = parse_schema(schema)\r\n  File \"/usr/local/lib/python2.7/site-packages/fastavro/_schema_py.py\", line 81, in parse_schema\r\n    return _parse_schema(schema, \"\", _write_hint)\r\n  File \"/usr/local/lib/python2.7/site-packages/fastavro/_schema_py.py\", line 165, in _parse_schema\r\n    parse_field(field, namespace, _write_hint)\r\n  File \"/usr/local/lib/python2.7/site-packages/fastavro/_schema_py.py\", line 202, in parse_field\r\n    parsed_field[\"type\"] = _parse_schema(field[\"type\"], namespace, _write_hint)\r\n  File \"/usr/local/lib/python2.7/site-packages/fastavro/_schema_py.py\", line 98, in _parse_schema\r\n    raise UnknownType(schema)\r\nfastavro._schema_common.UnknownType: fixed\r\n```\r\n\r\nI was able to bypass that error when I added \"fixed\" to PRIMITIVES dict in _schema_common.py but I am sure that is not how it should be since fixed is a complex type.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/265", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/265/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/265/events", "html_url": "https://github.com/fastavro/fastavro/issues/265", "id": 356948208, "node_id": "MDU6SXNzdWUzNTY5NDgyMDg=", "number": 265, "title": "Fix issue with embedded records namespacing", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-04T19:38:44Z", "updated_at": "2018-09-04T21:36:39Z", "closed_at": "2018-09-04T21:36:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This test currently breaks:\r\n\r\n```python\r\ndef test_embedded_records_get_namespaced_correctly():\r\n    schema = {\r\n        'namespace': 'test',\r\n        'name': 'OuterName',\r\n        'type': 'record',\r\n        'fields': [{\r\n            'name': 'data',\r\n            'type': [{\r\n                'type': 'record',\r\n                'name': 'UUID',\r\n                'fields': [{\r\n                    'name': 'uuid',\r\n                    'type': 'string'\r\n                }]\r\n            }, {\r\n                'type': 'record',\r\n                'name': 'Abstract',\r\n                'fields': [{\r\n                    'name': 'uuid',\r\n                    'type': 'UUID',\r\n                }],\r\n            }, {\r\n                'type': 'record',\r\n                'name': 'Concrete',\r\n                'fields': [{\r\n                    'name': 'abstract',\r\n                    'type': 'Abstract'\r\n                }, {\r\n                    'name': 'custom',\r\n                    'type': 'string',\r\n                }],\r\n            }]\r\n        }]\r\n    }\r\n\r\n    records = [{\r\n        'data': {'abstract': {'uuid': 'some_uuid'}, 'custom': 'some_string'}\r\n    }]\r\n\r\n    assert records == roundtrip(schema, records)\r\n```\r\n\r\nRelated to the fact that we do [`SCHEMA_DEFS[fullname] = schema`](https://github.com/fastavro/fastavro/blob/cc17d64433176fda454019ecdd2c1d250954aaca/fastavro/_schema_py.py#L129) in a few places instead of something like `SCHEMA_DEFS[fullname] = parsed_schema`.\r\n\r\nHowever, changing it to store the `parsed_schema` causes a few breakages so I still need to fix up something...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/264", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/264/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/264/events", "html_url": "https://github.com/fastavro/fastavro/issues/264", "id": 356172368, "node_id": "MDU6SXNzdWUzNTYxNzIzNjg=", "number": 264, "title": "Write avro files with Pyspark", "user": {"login": "argenisleon", "id": 37144, "node_id": "MDQ6VXNlcjM3MTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/37144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/argenisleon", "html_url": "https://github.com/argenisleon", "followers_url": "https://api.github.com/users/argenisleon/followers", "following_url": "https://api.github.com/users/argenisleon/following{/other_user}", "gists_url": "https://api.github.com/users/argenisleon/gists{/gist_id}", "starred_url": "https://api.github.com/users/argenisleon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/argenisleon/subscriptions", "organizations_url": "https://api.github.com/users/argenisleon/orgs", "repos_url": "https://api.github.com/users/argenisleon/repos", "events_url": "https://api.github.com/users/argenisleon/events{/privacy}", "received_events_url": "https://api.github.com/users/argenisleon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-01T04:57:22Z", "updated_at": "2018-09-17T19:34:16Z", "closed_at": "2018-09-17T19:34:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nAny hint about how to save a Spark dataframe as avro files?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/263", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/263/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/263/events", "html_url": "https://github.com/fastavro/fastavro/issues/263", "id": 356043891, "node_id": "MDU6SXNzdWUzNTYwNDM4OTE=", "number": 263, "title": "Add better documentation for the public attributes some classes", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-31T16:18:56Z", "updated_at": "2018-09-21T14:47:54Z", "closed_at": "2018-09-21T14:47:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The objects returned from the `reader`, `block_reader`, and maybe others have useful attributes but aren't documented well. When someone does:\r\n\r\n```python\r\n        from fastavro import block_reader\r\n        with open('some-file.avro', 'rb') as fo:\r\n            avro_reader = block_reader(fo)\r\n            for block in avro_reader:\r\n                process_block(block)\r\n```\r\n\r\nThe documentation should mention that `block` will have attributes like `num_records`, `reader_schema`, `writer_schema`, etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/262", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/262/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/262/events", "html_url": "https://github.com/fastavro/fastavro/issues/262", "id": 352633698, "node_id": "MDU6SXNzdWUzNTI2MzM2OTg=", "number": 262, "title": "Add better schema validation of logical types", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-21T17:14:11Z", "updated_at": "2018-09-04T22:20:00Z", "closed_at": "2018-09-04T22:20:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As mentioned in https://github.com/fastavro/fastavro/issues/261, we should give a better error when someone's schema doesn't match the specification.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/261", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/261/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/261/events", "html_url": "https://github.com/fastavro/fastavro/issues/261", "id": 352624490, "node_id": "MDU6SXNzdWUzNTI2MjQ0OTA=", "number": 261, "title": "Cannot read dec.avro from ", "user": {"login": "jkolash", "id": 801170, "node_id": "MDQ6VXNlcjgwMTE3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/801170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkolash", "html_url": "https://github.com/jkolash", "followers_url": "https://api.github.com/users/jkolash/followers", "following_url": "https://api.github.com/users/jkolash/following{/other_user}", "gists_url": "https://api.github.com/users/jkolash/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkolash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkolash/subscriptions", "organizations_url": "https://api.github.com/users/jkolash/orgs", "repos_url": "https://api.github.com/users/jkolash/repos", "events_url": "https://api.github.com/users/jkolash/events{/privacy}", "received_events_url": "https://api.github.com/users/jkolash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-21T16:45:58Z", "updated_at": "2018-08-21T17:43:37Z", "closed_at": "2018-08-21T17:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the following code\r\n```python\r\nimport fastavro\r\n\r\nwith open(\"dec.avro\", \"rb\") as fo:\r\n     for record in fastavro.reader(fo):\r\n         print(record)\r\n```\r\nI get this error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 5, in <module>\r\n    for record in fastavro.reader(fo):\r\n  File \"fastavro/_read.pyx\", line 622, in _iter_avro_blocks\r\n  File \"fastavro/_read.pyx\", line 641, in __iter__\r\n  File \"fastavro/_read.pyx\", line 539, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 451, in fastavro._read.read_record\r\n  File \"fastavro/_read.pyx\", line 552, in fastavro._read._read_data\r\n  File \"fastavro/_read.pyx\", line 172, in fastavro._read.read_bytes_decimal\r\n  File \"fastavro/_read.pyx\", line 174, in fastavro._read.read_bytes_decimal\r\n  File \"fastavro/_read.pyx\", line 207, in fastavro._read._read_decimal\r\n  File \"fastavro/_read.pyx\", line 208, in fastavro._read._read_decimal\r\nTypeError: an integer is required\r\n```\r\n\r\ndec.avro is from\r\nhttps://issues.apache.org/jira/browse/HIVE-5823\r\n\r\nenvironment + version information\r\n```bash\r\n(env)  env python --version\r\nPython 3.6.4\r\n(env)  env pip freeze\r\nfastavro==0.21.4\r\n(env)  env\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/259", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/259/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/259/events", "html_url": "https://github.com/fastavro/fastavro/issues/259", "id": 345853357, "node_id": "MDU6SXNzdWUzNDU4NTMzNTc=", "number": 259, "title": "TypeError: encoding without a string argument", "user": {"login": "IceS2", "id": 4912399, "node_id": "MDQ6VXNlcjQ5MTIzOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4912399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceS2", "html_url": "https://github.com/IceS2", "followers_url": "https://api.github.com/users/IceS2/followers", "following_url": "https://api.github.com/users/IceS2/following{/other_user}", "gists_url": "https://api.github.com/users/IceS2/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceS2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceS2/subscriptions", "organizations_url": "https://api.github.com/users/IceS2/orgs", "repos_url": "https://api.github.com/users/IceS2/repos", "events_url": "https://api.github.com/users/IceS2/events{/privacy}", "received_events_url": "https://api.github.com/users/IceS2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-30T17:19:57Z", "updated_at": "2018-07-30T19:57:02Z", "closed_at": "2018-07-30T19:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writting a few records to avro, but on one spec\u00edfic record I'm getting the following error\r\n```\r\nIn [45]: writer(avro_buffer, parsed_schema, [json_message])\r\n------------------------------------------------------------------------\r\nTypeError                              Traceback (most recent call last)\r\n<ipython-input-45-bd914c8464ad> in <module>()\r\n----> 1 writer(avro_buffer, parsed_schema, [json_message])\r\n\r\nfastavro/_write.pyx in fastavro._write.writer()\r\n\r\nfastavro/_write.pyx in fastavro._write.Writer.write()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_data()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_record()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_data()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_record()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_data()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_record()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_data()\r\n\r\nfastavro/_write.pyx in fastavro._write.write_utf8()\r\n\r\nfastavro/_six.pyx in fastavro._six.py3_utob()\r\n\r\nTypeError: encoding without a string argument\r\n```\r\n\r\nDoes anybody have any idea of why is this error arising? thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/258", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/258/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/258/events", "html_url": "https://github.com/fastavro/fastavro/issues/258", "id": 345742950, "node_id": "MDU6SXNzdWUzNDU3NDI5NTA=", "number": 258, "title": "Add support for other default codecs", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-30T12:47:45Z", "updated_at": "2019-07-09T18:52:36Z", "closed_at": "2019-07-09T18:52:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The Java implementation currently has [six](https://github.com/apache/avro/blob/cf2f30336efe0ecc3debc7bede86fde6d23f7c79/lang/java/avro/src/main/java/org/apache/avro/file/CodecFactory.java#L85-L105) while we only have three.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/256", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/256/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/256/events", "html_url": "https://github.com/fastavro/fastavro/issues/256", "id": 344830001, "node_id": "MDU6SXNzdWUzNDQ4MzAwMDE=", "number": 256, "title": "Have appveyor publish artifacts to github releases like travis does", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T12:49:35Z", "updated_at": "2018-09-20T21:19:56Z", "closed_at": "2018-09-20T21:19:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Seems simple... just need to find some time to do it. Here's some docs: https://www.appveyor.com/docs/deployment/github/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/254", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/254/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/254/events", "html_url": "https://github.com/fastavro/fastavro/issues/254", "id": 343756164, "node_id": "MDU6SXNzdWUzNDM3NTYxNjQ=", "number": 254, "title": "Better document that records should be a list/iterable of data dictionaries", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T19:03:14Z", "updated_at": "2018-07-30T20:19:21Z", "closed_at": "2018-07-30T20:19:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As mentioned in https://github.com/fastavro/fastavro/issues/252#issuecomment-407165534, it's not as clear as it should be that `records` is an iterable of data dictionaries. If someone provides just a dictionary they get a confusing exception. Perhaps we could also add a small check to make sure data is an acceptable format.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/253", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/253/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/253/events", "html_url": "https://github.com/fastavro/fastavro/issues/253", "id": 343744820, "node_id": "MDU6SXNzdWUzNDM3NDQ4MjA=", "number": 253, "title": "Publish .whl files for macOS", "user": {"login": "ryan-williams", "id": 465045, "node_id": "MDQ6VXNlcjQ2NTA0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/465045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryan-williams", "html_url": "https://github.com/ryan-williams", "followers_url": "https://api.github.com/users/ryan-williams/followers", "following_url": "https://api.github.com/users/ryan-williams/following{/other_user}", "gists_url": "https://api.github.com/users/ryan-williams/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryan-williams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryan-williams/subscriptions", "organizations_url": "https://api.github.com/users/ryan-williams/orgs", "repos_url": "https://api.github.com/users/ryan-williams/repos", "events_url": "https://api.github.com/users/ryan-williams/events{/privacy}", "received_events_url": "https://api.github.com/users/ryan-williams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-23T18:29:11Z", "updated_at": "2018-07-26T01:55:27Z", "closed_at": "2018-07-25T21:58:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ported from @aaltay's [comment on BEAM-4749](https://issues.apache.org/jira/browse/BEAM-4749?focusedCommentId=16547313&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16547313)\r\n\r\nit sounds like using fastavro in Beam would be smoother if `.whl` files were published for macOS, as they already are for Linux/Windows\r\n\r\nI'm not super familiar with this topic, but wanted to get the discussion started; does that proposal make sense?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/252", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/252/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/252/events", "html_url": "https://github.com/fastavro/fastavro/issues/252", "id": 343742450, "node_id": "MDU6SXNzdWUzNDM3NDI0NTA=", "number": 252, "title": "I'm trying to debug an issue I'm having atm with some complex data structures, but I couldn't make pdb work within _write_py.py", "user": {"login": "IceS2", "id": 4912399, "node_id": "MDQ6VXNlcjQ5MTIzOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4912399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceS2", "html_url": "https://github.com/IceS2", "followers_url": "https://api.github.com/users/IceS2/followers", "following_url": "https://api.github.com/users/IceS2/following{/other_user}", "gists_url": "https://api.github.com/users/IceS2/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceS2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceS2/subscriptions", "organizations_url": "https://api.github.com/users/IceS2/orgs", "repos_url": "https://api.github.com/users/IceS2/repos", "events_url": "https://api.github.com/users/IceS2/events{/privacy}", "received_events_url": "https://api.github.com/users/IceS2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T18:22:25Z", "updated_at": "2018-07-23T19:00:15Z", "closed_at": "2018-07-23T19:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error is: \r\n```\r\nTraceback (most recent call last):\r\n  File \"fastavro/_write.pyx\", line 454, in fastavro._write.write_record\r\nTypeError: Expected dict, got str\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test_avro.py\", line 12, in <module>\r\n    writer(out, parsed_schema, json_message)\r\n  File \"fastavro/_write.pyx\", line 691, in fastavro._write.writer\r\n  File \"fastavro/_write.pyx\", line 663, in fastavro._write.Writer.write\r\n  File \"fastavro/_write.pyx\", line 535, in fastavro._write.write_data\r\n  File \"fastavro/_write.pyx\", line 463, in fastavro._write.write_record\r\nAttributeError: 'str' object has no attribute 'get'\r\n```\r\n\r\nI've tried to see if some data type as miss mapped but I couldn't find an error, I'd love some help either by haviing some extra eyes to  pass through the extensive json or to  help me with the debugger issue.\r\n\r\nschema\r\n```\r\n{\r\n  \"name\": \"jobs\",\r\n  \"namespace\": \"levee.datalake\",\r\n  \"doc\": \"\",\r\n  \"type\": \"record\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"headers\",\r\n      \"type\": {\r\n        \"name\": \"headers_def\",\r\n        \"namespace\": \"levee.datalake.headers\",\r\n        \"doc\": \"\",\r\n        \"type\": \"record\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"appName\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"resource\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"origin\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"action\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"schemaVersion\",\r\n            \"type\": \"float\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"body\",\r\n      \"type\": {\r\n        \"name\": \"body_def\",\r\n        \"namespace\": \"levee.datalake.body\",\r\n        \"doc\": \"\",\r\n        \"type\": \"record\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"title\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"alternative_name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"category\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"position\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"experience\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"drivers_license\",\r\n            \"type\": {\r\n              \"type\": \"array\",\r\n              \"items\": \"null\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"description\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"short_description\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"available_at\",\r\n            \"type\": \"null\"\r\n          },\r\n          {\r\n            \"name\": \"close_at\",\r\n            \"type\": \"null\"\r\n          },\r\n          {\r\n            \"name\": \"created_by\",\r\n            \"type\": {\r\n              \"name\": \"created_by_def\",\r\n              \"namespace\": \"levee.datalake.body.created_by\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"rank\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"branch_id\",\r\n                  \"type\": \"null\"\r\n                },\r\n                {\r\n                  \"name\": \"recruiter\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"role_type\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"user_name\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"company_id\",\r\n                  \"type\": \"int\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"company_id\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"company_name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"branch_id\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"candidates\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"candidates_requested\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"schedule_type\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"gender\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"age\",\r\n            \"type\": {\r\n              \"name\": \"age_def\",\r\n              \"namespace\": \"levee.datalake.body.age\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"maximum\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"minimum\",\r\n                  \"type\": \"int\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"education\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"contract\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"benefits\",\r\n            \"type\": {\r\n              \"name\": \"benefits_def\",\r\n              \"namespace\": \"levee.datalake.body.benefits\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"transit_voucher\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"meal_ticket\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"food_stamps\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"grocery\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"on_site_meal\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"life_insurance\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"healthcare_plan\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"dental_plan\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"others\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"career_plan\",\r\n                  \"type\": \"boolean\"\r\n                },\r\n                {\r\n                  \"name\": \"training\",\r\n                  \"type\": \"boolean\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"address\",\r\n            \"type\": {\r\n              \"name\": \"address_def\",\r\n              \"namespace\": \"levee.datalake.body.address\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"zip_code\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"name\",\r\n                  \"type\": \"null\"\r\n                },\r\n                {\r\n                  \"name\": \"address\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"number\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"complement\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"suburb\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"city\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"state\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"company_id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"coordinates\",\r\n                  \"type\": {\r\n                    \"name\": \"coordinates_def\",\r\n                    \"namespace\": \"levee.datalake.body.address.coordinates\",\r\n                    \"doc\": \"\",\r\n                    \"type\": \"record\",\r\n                    \"fields\": [\r\n                      {\r\n                        \"name\": \"latitude\",\r\n                        \"type\": \"float\"\r\n                      },\r\n                      {\r\n                        \"name\": \"longitude\",\r\n                        \"type\": \"float\"\r\n                      }\r\n                    ]\r\n                  }\r\n                },\r\n                {\r\n                  \"name\": \"reference\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"created_at\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"updated_at\",\r\n                  \"type\": \"string\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"updated_at\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"created_at\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"origin\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"company\",\r\n            \"type\": {\r\n              \"name\": \"company_def\",\r\n              \"namespace\": \"levee.datalake.body.company\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"name\",\r\n                  \"type\": \"string\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"open_positions\",\r\n            \"type\": \"int\"\r\n          },\r\n          {\r\n            \"name\": \"allow_cv_db\",\r\n            \"type\": \"boolean\"\r\n          },\r\n          {\r\n            \"name\": \"allow_el_db\",\r\n            \"type\": \"boolean\"\r\n          },\r\n          {\r\n            \"name\": \"approved_count\",\r\n            \"type\": \"null\"\r\n          },\r\n          {\r\n            \"name\": \"hired_count\",\r\n            \"type\": \"null\"\r\n          },\r\n          {\r\n            \"name\": \"show_up_count\",\r\n            \"type\": \"null\"\r\n          },\r\n          {\r\n            \"name\": \"knowledge_test\",\r\n            \"type\": \"null\"\r\n          },\r\n          {\r\n            \"name\": \"max_distance\",\r\n            \"type\": \"float\"\r\n          },\r\n          {\r\n            \"name\": \"interview_place\",\r\n            \"type\": {\r\n              \"name\": \"interview_place_def\",\r\n              \"namespace\": \"levee.datalake.body.interview_place\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"job_id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"contact\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"address\",\r\n                  \"type\": {\r\n                    \"name\": \"address_def\",\r\n                    \"namespace\": \"levee.datalake.body.interview_place.address\",\r\n                    \"doc\": \"\",\r\n                    \"type\": \"record\",\r\n                    \"fields\": [\r\n                      {\r\n                        \"name\": \"id\",\r\n                        \"type\": \"int\"\r\n                      },\r\n                      {\r\n                        \"name\": \"zip_code\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"name\",\r\n                        \"type\": \"null\"\r\n                      },\r\n                      {\r\n                        \"name\": \"address\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"number\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"complement\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"suburb\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"city\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"state\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"company_id\",\r\n                        \"type\": \"int\"\r\n                      },\r\n                      {\r\n                        \"name\": \"coordinates\",\r\n                        \"type\": {\r\n                          \"name\": \"coordinates_def\",\r\n                          \"namespace\": \"levee.datalake.body.interview_place.address.coordinates\",\r\n                          \"doc\": \"\",\r\n                          \"type\": \"record\",\r\n                          \"fields\": [\r\n                            {\r\n                              \"name\": \"latitude\",\r\n                              \"type\": \"float\"\r\n                            },\r\n                            {\r\n                              \"name\": \"longitude\",\r\n                              \"type\": \"float\"\r\n                            }\r\n                          ]\r\n                        }\r\n                      },\r\n                      {\r\n                        \"name\": \"reference\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"created_at\",\r\n                        \"type\": \"string\"\r\n                      },\r\n                      {\r\n                        \"name\": \"updated_at\",\r\n                        \"type\": \"string\"\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"salary\",\r\n            \"type\": {\r\n              \"name\": \"salary_def\",\r\n              \"namespace\": \"levee.datalake.body.salary\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"kind\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"minimum\",\r\n                  \"type\": \"null\"\r\n                },\r\n                {\r\n                  \"name\": \"maximum\",\r\n                  \"type\": \"null\"\r\n                },\r\n                {\r\n                  \"name\": \"value\",\r\n                  \"type\": \"null\"\r\n                },\r\n                {\r\n                  \"name\": \"additional\",\r\n                  \"type\": \"null\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"period\",\r\n            \"type\": {\r\n              \"name\": \"period_def\",\r\n              \"namespace\": \"levee.datalake.body.period\",\r\n              \"doc\": \"\",\r\n              \"type\": \"record\",\r\n              \"fields\": [\r\n                {\r\n                  \"name\": \"id\",\r\n                  \"type\": \"int\"\r\n                },\r\n                {\r\n                  \"name\": \"kind\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"start_day\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"finish_day\",\r\n                  \"type\": \"string\"\r\n                },\r\n                {\r\n                  \"name\": \"ratio\",\r\n                  \"type\": \"null\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"working_times\",\r\n            \"type\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"name\": \"working_times\",\r\n                \"namespace\": \"levee.datalake.body.working_times.working_times\",\r\n                \"doc\": \"\",\r\n                \"type\": \"record\",\r\n                \"fields\": [\r\n                  {\r\n                    \"name\": \"id\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"job_id\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"start_hour\",\r\n                    \"type\": \"string\"\r\n                  },\r\n                  {\r\n                    \"name\": \"finish_hour\",\r\n                    \"type\": \"string\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"state_changes\",\r\n            \"type\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"name\": \"state_changes\",\r\n                \"namespace\": \"levee.datalake.body.state_changes.state_changes\",\r\n                \"doc\": \"\",\r\n                \"type\": \"record\",\r\n                \"fields\": [\r\n                  {\r\n                    \"name\": \"id\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"old_state\",\r\n                    \"type\": \"string\"\r\n                  },\r\n                  {\r\n                    \"name\": \"new_state\",\r\n                    \"type\": \"string\"\r\n                  },\r\n                  {\r\n                    \"name\": \"updated_by\",\r\n                    \"type\": {\r\n                      \"name\": \"updated_by_def\",\r\n                      \"namespace\": \"levee.datalake.body.state_changes.state_changes.updated_by\",\r\n                      \"doc\": \"\",\r\n                      \"type\": \"record\",\r\n                      \"fields\": [\r\n                        {\r\n                          \"name\": \"id\",\r\n                          \"type\": \"int\"\r\n                        },\r\n                        {\r\n                          \"name\": \"rank\",\r\n                          \"type\": \"null\"\r\n                        },\r\n                        {\r\n                          \"name\": \"branch_id\",\r\n                          \"type\": \"null\"\r\n                        },\r\n                        {\r\n                          \"name\": \"role_type\",\r\n                          \"type\": \"string\"\r\n                        },\r\n                        {\r\n                          \"name\": \"company_id\",\r\n                          \"type\": \"null\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  },\r\n                  {\r\n                    \"name\": \"job_id\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"created_at\",\r\n                    \"type\": \"string\"\r\n                  },\r\n                  {\r\n                    \"name\": \"updated_at\",\r\n                    \"type\": \"string\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"interviews\",\r\n            \"type\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"name\": \"interviews\",\r\n                \"namespace\": \"levee.datalake.body.interviews.interviews\",\r\n                \"doc\": \"\",\r\n                \"type\": \"record\",\r\n                \"fields\": [\r\n                  {\r\n                    \"name\": \"id\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"interview_place_id\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"date\",\r\n                    \"type\": \"string\"\r\n                  },\r\n                  {\r\n                    \"name\": \"candidates\",\r\n                    \"type\": \"int\"\r\n                  },\r\n                  {\r\n                    \"name\": \"max_candidates\",\r\n                    \"type\": \"int\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nData\r\n```\r\n{\r\n  \"headers\": {\r\n    \"appName\": \"JobsSVC\",\r\n    \"resource\": \"job\",\r\n    \"origin\": \"el\",\r\n    \"action\": \"activated\",\r\n    \"schemaVersion\": 1.0\r\n  },\r\n  \"body\": {\r\n    \"id\": 32045,\r\n    \"title\": \"Putzideiro\",\r\n    \"alternative_name\": \"\",\r\n    \"category\": 210,\r\n    \"position\": 206,\r\n    \"experience\": 0,\r\n    \"drivers_license\": [],\r\n    \"description\": \"adasdasdd\",\r\n    \"short_description\": \"asddadasasd\",\r\n    \"available_at\": null,\r\n    \"close_at\": null,\r\n    \"created_by\": {\r\n      \"id\": 4519253,\r\n      \"rank\": \"admin\",\r\n      \"branch_id\": null,\r\n      \"recruiter\": true,\r\n      \"role_type\": \"RECRUITER\",\r\n      \"user_name\": \"Bruno Boni\",\r\n      \"company_id\": 5151\r\n    },\r\n    \"state\": \"activated\",\r\n    \"company_id\": 5151,\r\n    \"company_name\": \"Leveeeeees\",\r\n    \"branch_id\": 5210,\r\n    \"candidates\": 0,\r\n    \"candidates_requested\": 123,\r\n    \"schedule_type\": \"auto\",\r\n    \"gender\": \"both\",\r\n    \"age\": {\r\n      \"maximum\": 60,\r\n      \"minimum\": 16\r\n    },\r\n    \"education\": \"any\",\r\n    \"contract\": \"regular\",\r\n    \"benefits\": {\r\n      \"transit_voucher\": true,\r\n      \"meal_ticket\": false,\r\n      \"food_stamps\": false,\r\n      \"grocery\": true,\r\n      \"on_site_meal\": true,\r\n      \"life_insurance\": false,\r\n      \"healthcare_plan\": false,\r\n      \"dental_plan\": false,\r\n      \"others\": false,\r\n      \"career_plan\": false,\r\n      \"training\": false\r\n    },\r\n    \"address\": {\r\n      \"id\": 63803,\r\n      \"zip_code\": \"02054-050\",\r\n      \"name\": null,\r\n      \"address\": \"Rua Henrique Felipe da Costa\",\r\n      \"number\": \"123\",\r\n      \"complement\": \"asdasdas\",\r\n      \"suburb\": \"Vila Guilherme\",\r\n      \"city\": \"S\u00e3o Paulo\",\r\n      \"state\": \"SP\",\r\n      \"company_id\": 5151,\r\n      \"coordinates\": {\r\n        \"latitude\": -23.51788,\r\n        \"longitude\": -46.6075495\r\n      },\r\n      \"reference\": \"asdasdas\",\r\n      \"created_at\": \"2018-06-14T17:17:48+00:00\",\r\n      \"updated_at\": \"2018-06-14T17:17:48+00:00\"\r\n    },\r\n    \"updated_at\": \"2018-06-14T17:18:38+00:00\",\r\n    \"created_at\": \"2018-06-14T17:17:48+00:00\",\r\n    \"origin\": \"EL\",\r\n    \"company\": {\r\n      \"id\": 5151,\r\n      \"name\": \"Leveeeeees\"\r\n    },\r\n    \"open_positions\": 123,\r\n    \"allow_cv_db\": true,\r\n    \"allow_el_db\": true,\r\n    \"approved_count\": null,\r\n    \"hired_count\": null,\r\n    \"show_up_count\": null,\r\n    \"knowledge_test\": null,\r\n    \"max_distance\": 15.0,\r\n    \"interview_place\": {\r\n      \"id\": 31770,\r\n      \"job_id\": 32045,\r\n      \"contact\": \"asdasdasasdw\",\r\n      \"address\": {\r\n        \"id\": 63804,\r\n        \"zip_code\": \"02054-050\",\r\n        \"name\": null,\r\n        \"address\": \"Rua Henrique Felipe da Costa\",\r\n        \"number\": \"123\",\r\n        \"complement\": \"asdasdas\",\r\n        \"suburb\": \"Vila Guilherme\",\r\n        \"city\": \"S\u00e3o Paulo\",\r\n        \"state\": \"SP\",\r\n        \"company_id\": 5151,\r\n        \"coordinates\": {\r\n          \"latitude\": -23.51788,\r\n          \"longitude\": -46.6075495\r\n        },\r\n        \"reference\": \"asdasdas\",\r\n        \"created_at\": \"2018-06-14T17:17:48+00:00\",\r\n        \"updated_at\": \"2018-06-14T17:17:48+00:00\"\r\n      }\r\n    },\r\n    \"salary\": {\r\n      \"id\": 32044,\r\n      \"kind\": \"negotiable\",\r\n      \"minimum\": null,\r\n      \"maximum\": null,\r\n      \"value\": null,\r\n      \"additional\": null\r\n    },\r\n    \"period\": {\r\n      \"id\": 32045,\r\n      \"kind\": \"fixed\",\r\n      \"start_day\": \"sunday\",\r\n      \"finish_day\": \"saturday\",\r\n      \"ratio\": null\r\n    },\r\n    \"working_times\": [\r\n      {\r\n        \"id\": 64473,\r\n        \"job_id\": 32045,\r\n        \"start_hour\": \"00:00\",\r\n        \"finish_hour\": \"04:30\"\r\n      }\r\n    ],\r\n    \"state_changes\": [\r\n      {\r\n        \"id\": 1722,\r\n        \"old_state\": \"draft\",\r\n        \"new_state\": \"activated\",\r\n        \"updated_by\": {\r\n          \"id\": 48,\r\n          \"rank\": null,\r\n          \"branch_id\": null,\r\n          \"role_type\": \"SUPPORT\",\r\n          \"company_id\": null\r\n        },\r\n        \"job_id\": 32045,\r\n        \"created_at\": \"2018-06-14T17:18:38+00:00\",\r\n        \"updated_at\": \"2018-06-14T17:18:38+00:00\"\r\n      }\r\n    ],\r\n    \"interviews\": [\r\n      {\r\n        \"id\": 249503,\r\n        \"interview_place_id\": 31770,\r\n        \"date\": \"2018-06-28T23:12:00+00:00\",\r\n        \"candidates\": 0,\r\n        \"max_candidates\": 123\r\n      }\r\n    ]\r\n  }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/251", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/251/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/251/events", "html_url": "https://github.com/fastavro/fastavro/issues/251", "id": 343703524, "node_id": "MDU6SXNzdWUzNDM3MDM1MjQ=", "number": 251, "title": "UnknownType: namespace.record", "user": {"login": "IceS2", "id": 4912399, "node_id": "MDQ6VXNlcjQ5MTIzOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4912399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceS2", "html_url": "https://github.com/IceS2", "followers_url": "https://api.github.com/users/IceS2/followers", "following_url": "https://api.github.com/users/IceS2/following{/other_user}", "gists_url": "https://api.github.com/users/IceS2/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceS2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceS2/subscriptions", "organizations_url": "https://api.github.com/users/IceS2/orgs", "repos_url": "https://api.github.com/users/IceS2/repos", "events_url": "https://api.github.com/users/IceS2/events{/privacy}", "received_events_url": "https://api.github.com/users/IceS2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T16:23:01Z", "updated_at": "2018-07-23T16:48:17Z", "closed_at": "2018-07-23T16:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm trying to  parse a schema I created for testing and I'm not able too due to  the following error:\r\n```\r\n------------------------------------------------------------------------\r\nUnknownType                            Traceback (most recent call last)\r\n<ipython-input-50-8fdde22dcc52> in <module>()\r\n     48     }]}\r\n     49 \r\n---> 50 parsed_schema = parse_schema(schema)\r\n\r\nfastavro/_schema.pyx in fastavro._schema.parse_schema()\r\n\r\nfastavro/_schema.pyx in fastavro._schema._parse_schema()\r\n\r\nfastavro/_schema.pyx in fastavro._schema.parse_field()\r\n\r\nfastavro/_schema.pyx in fastavro._schema._parse_schema()\r\n\r\nUnknownType: my_namespace.record\r\n```\r\n\r\nThis happens when I run the following piece of code\r\n\r\n```\r\n\r\nfrom fastavro import writer, reader, parse_schema\r\nimport json\r\n\r\nmessage = {\r\n  \"headers\": {\r\n    \"appName\": \"my_service\",\r\n    \"resource\": \"jobs\",\r\n    \"origin\": \"el\",\r\n    \"action\": \"created\",\r\n    \"schemaVersion\": 1.0\r\n  }\r\n}\r\n\r\nschema = {\r\n  \"name\": \"jobs\",\r\n  \"namespace\": \"my_namespace\",\r\n  \"type\": \"record\",\r\n  \"doc\": \"This schema describes a job createevent.\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"headers\",\r\n      \"namespace\": \"my_subnamespace\",\r\n      \"type\": \"record\",\r\n      \"doc\": \"\",\r\n      \"fields\": [\r\n        {\r\n          \"name\": \"appName\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"name\": \"resource\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"name\": \"origin\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"name\": \"action\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"name\": \"schemaVersion\",\r\n          \"type\": \"float\"\r\n        }\r\n      ]\r\n    }]}\r\n\r\nparsed_schema = parse_schema(schema)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/250", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/250/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/250/events", "html_url": "https://github.com/fastavro/fastavro/issues/250", "id": 342837058, "node_id": "MDU6SXNzdWUzNDI4MzcwNTg=", "number": 250, "title": "IndexError: list index out of range because when saving a dataframe with pySpark it doesn't generate a _metadata directory", "user": {"login": "IceS2", "id": 4912399, "node_id": "MDQ6VXNlcjQ5MTIzOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4912399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceS2", "html_url": "https://github.com/IceS2", "followers_url": "https://api.github.com/users/IceS2/followers", "following_url": "https://api.github.com/users/IceS2/following{/other_user}", "gists_url": "https://api.github.com/users/IceS2/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceS2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceS2/subscriptions", "organizations_url": "https://api.github.com/users/IceS2/orgs", "repos_url": "https://api.github.com/users/IceS2/repos", "events_url": "https://api.github.com/users/IceS2/events{/privacy}", "received_events_url": "https://api.github.com/users/IceS2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-19T18:18:44Z", "updated_at": "2018-07-19T18:32:52Z", "closed_at": "2018-07-19T18:30:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saved a pySpark dataframe to a parquet file trying to reproduce a error I encountered on nested parquet files where I could load them with fastparquet but couldn't transform them into a pandas DataFrame because `ValueError` would rise because there was a Null value in an integer column.\r\n\r\nTrying to load the dataframe now is raising `IndexError: list index out of range`\r\n\r\n```>>> df.show()\r\n+------------+\r\n|        body|\r\n+------------+\r\n| [32189, 10]|\r\n|[32196, 100]|\r\n|[32197, 100]|\r\n|[32198, 100]|\r\n|[32192, 100]|\r\n|[32193, 100]|\r\n| [32187, 10]|\r\n|[32191, 100]|\r\n|    [32210,]|\r\n|[32212, 123]|\r\n|[32213, 100]|\r\n|[32152, 100]|\r\n| [32148, 10]|\r\n| [32178, 10]|\r\n| [32176, 10]|\r\n| [32179, 10]|\r\n|[32196, 100]|\r\n|[32197, 100]|\r\n|[32198, 100]|\r\n| [32205, 10]|\r\n+------------+\r\nonly showing top 20 rows\r\n\r\n>>> df.write.parquet('test.parquet', mode='overwrite')\r\n>>> df.printSchema()\r\nroot\r\n |-- body: struct (nullable = true)\r\n |    |-- id: integer (nullable = true)\r\n |    |-- candidates_requested: integer (nullable = true)\r\n```\r\n\r\n```In [1]: import fastparquet as fp\r\n   ...: pq = fp.ParquetFile('part-00000-c0834688-6375-4c0f-bc44-a2f5b3d0\r\n   ...: bc4b-c000.snappy.parquet')\r\n   ...: df = pq.to_pandas()\r\n   ...: \r\n   ...: \r\n------------------------------------------------------------------------\r\nNotADirectoryError                     Traceback (most recent call last)\r\n~/.virtualenvs/default/lib/python3.6/site-packages/fastparquet/api.py in __init__(self, fn, verify, open_with, root, sep)\r\n     93                 self.fn = fn2\r\n---> 94                 with open_with(fn2, 'rb') as f:\r\n     95                     self._parse_header(f, verify)\r\n\r\n~/.virtualenvs/default/lib/python3.6/site-packages/fastparquet/util.py in default_open(f, mode)\r\n     36 def default_open(f, mode='rb'):\r\n---> 37     return open(f, mode)\r\n     38 \r\n\r\nNotADirectoryError: [Errno 20] Not a directory: 'part-00000-c0834688-6375-4c0f-bc44-a2f5b3d0bc4b-c000.snappy.parquet/_metadata'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nIndexError                             Traceback (most recent call last)\r\n<ipython-input-1-c3650c67f022> in <module>()\r\n      1 import fastparquet as fp\r\n----> 2 pq = fp.ParquetFile('part-00000-c0834688-6375-4c0f-bc44-a2f5b3d0bc4b-c000.snappy.parquet')\r\n      3 df = pq.to_pandas()\r\n\r\n~/.virtualenvs/default/lib/python3.6/site-packages/fastparquet/api.py in __init__(self, fn, verify, open_with, root, sep)\r\n     98                 self.fn = join_path(fn)\r\n     99                 with open_with(fn, 'rb') as f:\r\n--> 100                     self._parse_header(f, verify)\r\n    101         self.open = open_with\r\n    102         self.sep = sep\r\n\r\n~/.virtualenvs/default/lib/python3.6/site-packages/fastparquet/api.py in _parse_header(self, f, verify)\r\n    122         self.head_size = head_size\r\n    123         self.fmd = fmd\r\n--> 124         self._set_attrs()\r\n    125 \r\n    126     def _set_attrs(self):\r\n\r\n~/.virtualenvs/default/lib/python3.6/site-packages/fastparquet/api.py in _set_attrs(self)\r\n    141                                            for rg in self.row_groups])\r\n    142         self._read_partitions()\r\n--> 143         self._dtypes()\r\n    144 \r\n    145     @ property\r\n\r\n~/.virtualenvs/default/lib/python3.6/site-packages/fastparquet/api.py in _dtypes(self, categories)\r\n    458                 num_nulls = 0\r\n    459                 for rg in self.row_groups:\r\n--> 460                     chunk = rg.columns[i]\r\n    461                     if chunk.meta_data.statistics is None:\r\n    462                         num_nulls = True\r\n\r\nIndexError: list index out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/248", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/248/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/248/events", "html_url": "https://github.com/fastavro/fastavro/issues/248", "id": 340505539, "node_id": "MDU6SXNzdWUzNDA1MDU1Mzk=", "number": 248, "title": "load_shcema error when Parent.avsc has multiple  Child type", "user": {"login": "lsyarn", "id": 13413617, "node_id": "MDQ6VXNlcjEzNDEzNjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/13413617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsyarn", "html_url": "https://github.com/lsyarn", "followers_url": "https://api.github.com/users/lsyarn/followers", "following_url": "https://api.github.com/users/lsyarn/following{/other_user}", "gists_url": "https://api.github.com/users/lsyarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsyarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsyarn/subscriptions", "organizations_url": "https://api.github.com/users/lsyarn/orgs", "repos_url": "https://api.github.com/users/lsyarn/repos", "events_url": "https://api.github.com/users/lsyarn/events{/privacy}", "received_events_url": "https://api.github.com/users/lsyarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-12T06:31:31Z", "updated_at": "2018-07-12T12:46:05Z", "closed_at": "2018-07-12T12:46:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`test_reading_after_writing_with_load_schema` work fine when `Parent.avsc` has only on Child Type field(Defined by `Child.asvc`).But when `Parent.avsc` has multiple  Child type, an exception will be raised:`TypeError: 'dict' object cannot be interpreted as an integer`\u3002\r\n\r\nUse schemas bellow can reappear this bug:\r\nParent.avsc\r\n```\r\n{\r\n  \"type\":\"record\",\r\n  \"name\":\"Parent\",\r\n  \"fields\":[\r\n    {\r\n      \"name\": \"child\",\r\n      \"type\": \"Child\"\r\n    },\r\n    {\r\n      \"name\": \"anotherChild\",\r\n      \"type\": \"AnotherChild\"\r\n    }\r\n  ]\r\n}\r\n```\r\nChild.avsc\r\n```\r\n{\r\n  \"type\":\"record\",\r\n  \"name\":\"Child\",\r\n  \"fields\":[]\r\n}\r\n```\r\nAnotherChild.avsc\r\n```\r\n{\r\n  \"type\":\"record\",\r\n  \"name\":\"AnotherChild\",\r\n  \"fields\":[]\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/246", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/246/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/246/events", "html_url": "https://github.com/fastavro/fastavro/issues/246", "id": 340427779, "node_id": "MDU6SXNzdWUzNDA0Mjc3Nzk=", "number": 246, "title": "Deprecate/remove reader.schema", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-11T22:28:44Z", "updated_at": "2018-11-21T23:00:08Z", "closed_at": "2018-11-21T23:00:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently the `reader` and `block_reader` have a `schema`, `writer_schema`, and `reader_schema`. The `schema` attribute is from the days when the reader didn't consume an optional `reader_schema` and so it is equivalent to the `writer_schema` attribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/244", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/244/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/244/events", "html_url": "https://github.com/fastavro/fastavro/issues/244", "id": 340268457, "node_id": "MDU6SXNzdWUzNDAyNjg0NTc=", "number": 244, "title": "Test breaks after 0.21.0", "user": {"login": "chobeat", "id": 2822010, "node_id": "MDQ6VXNlcjI4MjIwMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2822010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chobeat", "html_url": "https://github.com/chobeat", "followers_url": "https://api.github.com/users/chobeat/followers", "following_url": "https://api.github.com/users/chobeat/following{/other_user}", "gists_url": "https://api.github.com/users/chobeat/gists{/gist_id}", "starred_url": "https://api.github.com/users/chobeat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chobeat/subscriptions", "organizations_url": "https://api.github.com/users/chobeat/orgs", "repos_url": "https://api.github.com/users/chobeat/repos", "events_url": "https://api.github.com/users/chobeat/events{/privacy}", "received_events_url": "https://api.github.com/users/chobeat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-11T14:30:01Z", "updated_at": "2018-07-11T22:59:41Z", "closed_at": "2018-07-11T22:59:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is my message:\r\n`{'is_error': True, 'outcome': {'errors': {'field_1': 'some_message', 'field_2': 'some_other_message'}}}`\r\n\r\nand this is my schema\r\n\r\n`\r\n{'namespace': 'test.avro.training', 'name': 'SomeMessage', 'type': 'record',\r\n 'fields': [{'name': 'is_error', 'type': 'boolean', 'default': False}, {'name': 'outcome', 'type': [\r\n     {'type': 'record', 'name': 'SomeMessage',\r\n      'fields': ... some fields for the success case...\r\n     {'type': 'record', 'name': 'ErrorRecord', 'fields': [\r\n         {'name': 'errors', 'type': {'type': 'map', 'values': 'string'},\r\n          'doc': 'Map containing the errors produced by an operation. The key is the error qualifier (usually connected to an input or output field related to the error) and the value is an error message with further details.'}]}]}]}`\r\n\r\nWhen I serialize to avro and then deserialize, this is the error I get:\r\n\r\n> fastavro/_read.pyx:424: SchemaResolutionError\r\n\r\nwith the reader and writer schema dumped.\r\n\r\nThis is the line that creates the problems:\r\n\r\n`bytes_to_records(\r\nmessages_to_bytes([error_message], analysis_completed_schema),\r\nanalysis_completed_schema\r\n)`\r\n\r\nso I'm 100% sure the schemas are the same because they are the same python object and because it always worked.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/239", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/239/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/239/events", "html_url": "https://github.com/fastavro/fastavro/issues/239", "id": 338983915, "node_id": "MDU6SXNzdWUzMzg5ODM5MTU=", "number": 239, "title": "file_reader isn't doing anything useful when the writer and reader schemas match", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-06T15:37:17Z", "updated_at": "2018-07-12T05:08:14Z", "closed_at": "2018-07-12T05:08:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In https://github.com/fastavro/fastavro/commit/14f5833ff2e6d05a65ebfb8e5d69f9d5da511852#diff-32e7cfc438f3c071ebde3e0295f40985 a small check was done to see if the writer and reader schemas match. If they do, the reader is supposed to be set to `None` to prevent the `match_schema` checks. However, here: https://github.com/fastavro/fastavro/blob/5729d04297276ee0e01cf02ef7c7c4cd1779746a/fastavro/_read.pyx#L682 and here: https://github.com/fastavro/fastavro/blob/5729d04297276ee0e01cf02ef7c7c4cd1779746a/fastavro/_read_py.py#L604 we set `reader_schema = None` when we should be setting `self.reader_schema = None`.\r\n\r\nA few tests need to be updated for this to be fixed. We might need to do something like create a new `_internal_reader_schema` that gets set to `None` while the normal `reader_schema` attribute is still set to the real schema so that `reader_schema` attribute still continues to hold the schema that is passed in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fastavro/fastavro/issues/235", "repository_url": "https://api.github.com/repos/fastavro/fastavro", "labels_url": "https://api.github.com/repos/fastavro/fastavro/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/fastavro/fastavro/issues/235/comments", "events_url": "https://api.github.com/repos/fastavro/fastavro/issues/235/events", "html_url": "https://github.com/fastavro/fastavro/issues/235", "id": 337425020, "node_id": "MDU6SXNzdWUzMzc0MjUwMjA=", "number": 235, "title": "extract_named_schemas_into_repo broken in 0.19.9", "user": {"login": "kkirsanov", "id": 1369246, "node_id": "MDQ6VXNlcjEzNjkyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1369246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkirsanov", "html_url": "https://github.com/kkirsanov", "followers_url": "https://api.github.com/users/kkirsanov/followers", "following_url": "https://api.github.com/users/kkirsanov/following{/other_user}", "gists_url": "https://api.github.com/users/kkirsanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkirsanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkirsanov/subscriptions", "organizations_url": "https://api.github.com/users/kkirsanov/orgs", "repos_url": "https://api.github.com/users/kkirsanov/repos", "events_url": "https://api.github.com/users/kkirsanov/events{/privacy}", "received_events_url": "https://api.github.com/users/kkirsanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-02T08:53:07Z", "updated_at": "2018-07-02T14:44:13Z", "closed_at": "2018-07-02T14:43:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```python\r\nimport fastavro\r\n\r\nschema_0 = {\r\n    \"name\": \"UUID\",\r\n    \"namespace\": \"rfi.type\",\r\n    \"type\": \"string\",\r\n    \"logicalType\": \"uuid\"\r\n}\r\n\r\nschema_1 = {\r\n    \"name\": \"meta\",\r\n    \"namespace\": \"rfi.transport\",\r\n    \"type\": \"record\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"trace_id\",\r\n            \"type\": \"rfi.type.UUID\"\r\n        },\r\n    ]\r\n}\r\n\r\nfastavro.acquaint_schema(schema_0)\r\nfastavro.acquaint_schema(schema_1)\r\n```\r\nworks on fastavro <=0.19.8 but  on 0.19.9:\r\n\r\n```fastavro._schema_common.UnknownType: rfi.type.UUID```", "performed_via_github_app": null, "score": 1.0}]}