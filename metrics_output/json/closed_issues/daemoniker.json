{"total_count": 1, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Muterra/py_daemoniker/issues/3", "repository_url": "https://api.github.com/repos/Muterra/py_daemoniker", "labels_url": "https://api.github.com/repos/Muterra/py_daemoniker/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Muterra/py_daemoniker/issues/3/comments", "events_url": "https://api.github.com/repos/Muterra/py_daemoniker/issues/3/events", "html_url": "https://github.com/Muterra/py_daemoniker/issues/3", "id": 194703345, "node_id": "MDU6SXNzdWUxOTQ3MDMzNDU=", "number": 3, "title": "Test capability for PRs", "user": {"login": "Badg", "id": 6155386, "node_id": "MDQ6VXNlcjYxNTUzODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6155386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badg", "html_url": "https://github.com/Badg", "followers_url": "https://api.github.com/users/Badg/followers", "following_url": "https://api.github.com/users/Badg/following{/other_user}", "gists_url": "https://api.github.com/users/Badg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badg/subscriptions", "organizations_url": "https://api.github.com/users/Badg/orgs", "repos_url": "https://api.github.com/users/Badg/repos", "events_url": "https://api.github.com/users/Badg/events{/privacy}", "received_events_url": "https://api.github.com/users/Badg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-09T21:40:11Z", "updated_at": "2017-04-22T00:13:46Z", "closed_at": "2017-04-22T00:13:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In order to properly review and accept PRs, daemoniker needs to be able to test them before merging.\r\n\r\nThe workflow I want goes like this:\r\n\r\n1. Someone forks, does some work, and submits a pull request\r\n2. Someone with commit permissions to daemoniker comments on the pull request, something to the effect of \"okay to test\"\r\n3. Tests run using existing CI pipeline on both Travis and Appveyor\r\n4. Tests create comment in PR indicating test success/failure\r\n\r\nThis is essentially a direct clone of the cryptography.io project's PR experience, which you can see in action [here](https://github.com/pyca/cryptography/pull/3291#issuecomment-263566689). One option (the same one the cryptography uses) is Jenkins. I am open to alternative suggestions, but Jenkins certainly seems like the most widely used -- or at least the one I've personally seen the most.\r\n\r\nObviously, since this infrastructure isn't in place yet, PRs against this issue will be exempt! \ud83d\udc4d\r\n\r\nWhat I need to make this happen:\r\n\r\n- [ ] A decision on what automation system to use (probably, but not definitely, Jenkins)\r\n- [ ] Simple, clear, step-by-step, all-encompassing instructions on how to go from where we are now, to the scenario above. This could be as simple as a link to a stackoverflow answer, Jenkins documentation, or whatever -- I just don't have the bandwidth to devote to finding the answer myself right now.", "performed_via_github_app": null, "score": 1.0}]}