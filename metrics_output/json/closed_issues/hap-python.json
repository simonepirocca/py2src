{"total_count": 83, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/272", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/272/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/272/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/272", "id": 654309581, "node_id": "MDU6SXNzdWU2NTQzMDk1ODE=", "number": 272, "title": "Multiple stream support", "user": {"login": "Harryjholmes", "id": 31574402, "node_id": "MDQ6VXNlcjMxNTc0NDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/31574402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harryjholmes", "html_url": "https://github.com/Harryjholmes", "followers_url": "https://api.github.com/users/Harryjholmes/followers", "following_url": "https://api.github.com/users/Harryjholmes/following{/other_user}", "gists_url": "https://api.github.com/users/Harryjholmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harryjholmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harryjholmes/subscriptions", "organizations_url": "https://api.github.com/users/Harryjholmes/orgs", "repos_url": "https://api.github.com/users/Harryjholmes/repos", "events_url": "https://api.github.com/users/Harryjholmes/events{/privacy}", "received_events_url": "https://api.github.com/users/Harryjholmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-09T19:53:39Z", "updated_at": "2020-07-25T21:59:20Z", "closed_at": "2020-07-25T17:20:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add RTPStreamManagement to allow multiple devices to view streams at once.\r\n\r\n`Wait until someone else in this home stops viewing this camera and try again `", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/266", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/266/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/266/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/266", "id": 632579812, "node_id": "MDU6SXNzdWU2MzI1Nzk4MTI=", "number": 266, "title": "HomeKit does not update state of garage", "user": {"login": "hegga", "id": 49037, "node_id": "MDQ6VXNlcjQ5MDM3", "avatar_url": "https://avatars3.githubusercontent.com/u/49037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hegga", "html_url": "https://github.com/hegga", "followers_url": "https://api.github.com/users/hegga/followers", "following_url": "https://api.github.com/users/hegga/following{/other_user}", "gists_url": "https://api.github.com/users/hegga/gists{/gist_id}", "starred_url": "https://api.github.com/users/hegga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hegga/subscriptions", "organizations_url": "https://api.github.com/users/hegga/orgs", "repos_url": "https://api.github.com/users/hegga/repos", "events_url": "https://api.github.com/users/hegga/events{/privacy}", "received_events_url": "https://api.github.com/users/hegga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-06T16:42:38Z", "updated_at": "2020-06-07T08:54:08Z", "closed_at": "2020-06-07T08:54:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThank you for providing this very awesome Python project, I am currently using it in a custom project for creating a custom-built HomeKit enabled garage opener for a friend of mine.\r\n\r\nI have a small problem which I hope someone probably already has solved, the HomeKit apps (both on iOS and macOS) does not display the correct state of the door, except for \"Open\" and \"Opening\", despite that the logs shows that the correct value is being sent to HomeKit:\r\n\r\n```\r\n[2020-06-06 17:33:50] app=garage-door level=DEBUG msg=Send event: topic(1.9), data(b'{\"characteristics\": [{\"aid\": 1, \"iid\": 9, \"value\": 0}]}'), sender_client_addr(None)\r\n[2020-06-06 17:33:53] app=garage-door level=DEBUG msg=Send event: topic(1.9), data(b'{\"characteristics\": [{\"aid\": 1, \"iid\": 9, \"value\": 3}]}'), sender_client_addr(None)\r\n[2020-06-06 17:34:02] app=garage-door level=DEBUG msg=Send event: topic(1.9), data(b'{\"characteristics\": [{\"aid\": 1, \"iid\": 9, \"value\": 1}]}'), sender_client_addr(None)\r\n```\r\nThe push notifications which is being sent is correct for both \"Open\" and \"Closed\", so to me it seems like HomeKit is getting the correct status.\r\n\r\nDoes anyone have any idea in regards to what might be the cause of this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/265", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/265/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/265/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/265", "id": 631308496, "node_id": "MDU6SXNzdWU2MzEzMDg0OTY=", "number": 265, "title": "Accessories are not accessible from internet through Home Hub", "user": {"login": "Adam-Langley", "id": 16373742, "node_id": "MDQ6VXNlcjE2MzczNzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/16373742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adam-Langley", "html_url": "https://github.com/Adam-Langley", "followers_url": "https://api.github.com/users/Adam-Langley/followers", "following_url": "https://api.github.com/users/Adam-Langley/following{/other_user}", "gists_url": "https://api.github.com/users/Adam-Langley/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adam-Langley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adam-Langley/subscriptions", "organizations_url": "https://api.github.com/users/Adam-Langley/orgs", "repos_url": "https://api.github.com/users/Adam-Langley/repos", "events_url": "https://api.github.com/users/Adam-Langley/events{/privacy}", "received_events_url": "https://api.github.com/users/Adam-Langley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-05T04:48:05Z", "updated_at": "2020-06-29T23:22:09Z", "closed_at": "2020-06-29T23:22:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have an Apple TV set up to act as my Home Hub.\r\nI am running the HAP-Python examples on a Raspberry Pi, connected to wifi.\r\nThis works for retail HomeKit devices, as well as custom HomeKit software implementations using the software library https://github.com/brutella/hc\r\n\r\nThe example HAP-python accessories work locally, but not through the Home Hub. The HAP-python server never receives any incoming requests when access is attempted from the internet.\r\n\r\nHas anyone proven otherwise?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/262", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/262/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/262/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/262", "id": 627513984, "node_id": "MDU6SXNzdWU2Mjc1MTM5ODQ=", "number": 262, "title": "Two exceptions raised while driver starts up", "user": {"login": "hegga", "id": 49037, "node_id": "MDQ6VXNlcjQ5MDM3", "avatar_url": "https://avatars3.githubusercontent.com/u/49037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hegga", "html_url": "https://github.com/hegga", "followers_url": "https://api.github.com/users/hegga/followers", "following_url": "https://api.github.com/users/hegga/following{/other_user}", "gists_url": "https://api.github.com/users/hegga/gists{/gist_id}", "starred_url": "https://api.github.com/users/hegga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hegga/subscriptions", "organizations_url": "https://api.github.com/users/hegga/orgs", "repos_url": "https://api.github.com/users/hegga/repos", "events_url": "https://api.github.com/users/hegga/events{/privacy}", "received_events_url": "https://api.github.com/users/hegga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-29T20:15:22Z", "updated_at": "2020-05-30T06:54:28Z", "closed_at": "2020-05-30T06:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running version 2.8.4 of HAP-python and version 0.27.0 of zeroconf. While trying to pair with HomeKit, as the driver starts up the following traceback is thrown:\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 1312, in run\r\n    reader.handle_read(socket_)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 1379, in handle_read\r\n    self.zc.handle_query(msg, None, _MDNS_PORT)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 2676, in handle_query\r\n    service.text,\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 623, in __init__\r\n    assert isinstance(text, (bytes, type(None)))\r\nAssertionError\r\n\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=AssertionError()>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyhap/accessory_driver.py\", line 287, in _do_start\r\n    self.advertiser.register_service(self.mdns_service_info)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 2374, in register_service\r\n    self._broadcast_service(info)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 2414, in _broadcast_service\r\n    DNSText(info.name, _TYPE_TXT, _CLASS_IN | _CLASS_UNIQUE, info.other_ttl, info.text), 0\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 623, in __init__\r\n    assert isinstance(text, (bytes, type(None)))\r\nAssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/257", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/257/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/257/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/257", "id": 624627055, "node_id": "MDU6SXNzdWU2MjQ2MjcwNTU=", "number": 257, "title": "Cleaning connection for no apparent reason, resulting in No Response", "user": {"login": "SebasT87", "id": 26200470, "node_id": "MDQ6VXNlcjI2MjAwNDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/26200470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SebasT87", "html_url": "https://github.com/SebasT87", "followers_url": "https://api.github.com/users/SebasT87/followers", "following_url": "https://api.github.com/users/SebasT87/following{/other_user}", "gists_url": "https://api.github.com/users/SebasT87/gists{/gist_id}", "starred_url": "https://api.github.com/users/SebasT87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SebasT87/subscriptions", "organizations_url": "https://api.github.com/users/SebasT87/orgs", "repos_url": "https://api.github.com/users/SebasT87/repos", "events_url": "https://api.github.com/users/SebasT87/events{/privacy}", "received_events_url": "https://api.github.com/users/SebasT87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 43, "created_at": "2020-05-26T06:16:37Z", "updated_at": "2020-05-29T05:36:23Z", "closed_at": "2020-05-29T05:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been breaking my head around an issue where my non-HomeKit devices published through Home Assistant are not responding every couple of minutes. My true-HomeKit devices are no problem though.\r\n\r\nThe problem starts when the connection gets cleaned (for no apparant reason), see log\r\n\r\n> 2020-05-26 08:01:01 DEBUG (Thread-17) [pyhap.accessory_driver] Subscribed client ('192.168.1.25', 49795) to topic 2225605144.9\r\n> 2020-05-26 08:01:01 DEBUG (Thread-17) [pyhap.accessory_driver] Subscribed client ('192.168.1.25', 49795) to topic 2225605144.10\r\n> 2020-05-26 08:01:01 INFO (Thread-17) [pyhap.hap_server] 192.168.1.25 - \"PUT /characteristics HTTP/1.1\" 204 -\r\n> 2020-05-26 08:03:49 DEBUG (Thread-17) [pyhap.hap_server] Cleaning connection to ('192.168.1.25', 49795)\r\n\r\nAfter this nothing gets logged for some time (somtimes up to a couple of minutes) and the devices are not responding. Then all of a sudden it connects and the devices start responding again. After a couple of minutes this loop starts over.\r\n\r\n> 2020-05-26 08:09:07 INFO (Thread-5) [pyhap.hap_server] Got connection with ('192.168.1.25', 49796).\r\n> 2020-05-26 08:09:07 DEBUG (Thread-18) [pyhap.hap_server] Request POST from address '('192.168.1.25', 49796)' for path '/pair-verify'.\r\n> 2020-05-26 08:09:07 DEBUG (Thread-18) [pyhap.hap_server] Pair verify [1/2].\r\n> 2020-05-26 08:09:07 INFO (Thread-18) [pyhap.hap_server] 192.168.1.25 - \"POST /pair-verify HTTP/1.1\" 200 -\r\n> 2020-05-26 08:09:07 DEBUG (Thread-18) [pyhap.hap_server] Request POST from address '('192.168.1.25', 49796)' for path '/pair-verify'.\r\n> 2020-05-26 08:09:07 DEBUG (Thread-18) [pyhap.hap_server] Pair verify [2/2]\r\n> 2020-05-26 08:09:07 DEBUG (Thread-18) [pyhap.hap_server] Pair verify with client '('192.168.1.25', 49796)' completed. Switching to encrypted transport.\r\n> 2020-05-26 08:09:07 INFO (Thread-18) [pyhap.hap_server] 192.168.1.25 - \"POST /pair-verify HTTP/1.1\" 200 -\r\n\r\nWhat might be causing it to clean the connections and is this expected behaviour?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/247", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/247/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/247/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/247", "id": 614490089, "node_id": "MDU6SXNzdWU2MTQ0OTAwODk=", "number": 247, "title": "Calling NeoPixelLightStrip", "user": {"login": "njjerrysmith", "id": 98006, "node_id": "MDQ6VXNlcjk4MDA2", "avatar_url": "https://avatars0.githubusercontent.com/u/98006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njjerrysmith", "html_url": "https://github.com/njjerrysmith", "followers_url": "https://api.github.com/users/njjerrysmith/followers", "following_url": "https://api.github.com/users/njjerrysmith/following{/other_user}", "gists_url": "https://api.github.com/users/njjerrysmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njjerrysmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njjerrysmith/subscriptions", "organizations_url": "https://api.github.com/users/njjerrysmith/orgs", "repos_url": "https://api.github.com/users/njjerrysmith/repos", "events_url": "https://api.github.com/users/njjerrysmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njjerrysmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T04:12:40Z", "updated_at": "2020-05-11T19:23:11Z", "closed_at": "2020-05-11T19:23:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use the NeoPixelLightStrip example to get some led tape running. I've gotten everything installed and busy_home runs with no issues. \r\n\r\nI'm stuck at where to declare the variables needed by the NeoPixelLightStrip Class in my mashup of the neopixel example and main.py example where I'm using the code at the bottom to spin up the bridge. \r\n\r\nMy file looks like: \r\n```\r\nimport logging\r\nimport signal\r\nimport random\r\nfrom neopixel import *\r\nfrom pyhap.accessory import Accessory,Bridge\r\nfrom pyhap.accessory_driver import AccessoryDriver\r\nfrom pyhap.const import CATEGORY_LIGHTBULB\r\n\r\nclass NeoPixelLightStrip(Accessory):\r\n    category = CATEGORY_LIGHTBULB\r\n\r\n    def __init__(self, LED_Count, is_GRB, LED_pin,\r\n                 LED_freq_hz, LED_DMA, LED_brightness,\r\n                 LED_invert, *args, **kwargs):\r\n\r\n        \"\"\"\r\n        LED_Count - the number of LEDs in the array\r\n        is_GRB - most neopixels are GRB format - Normal:True\r\n        LED_pin - must be PWM pin 18 - Normal:18\r\n        LED_freq_hz - frequency of the neopixel leds - Normal:800000\r\n        LED_DMA - Normal:10\r\n        LED_Brightness - overall brightness - Normal:255\r\n        LED_invert - Normal:False\r\n        For more information regarding these settings\r\n            please review rpi_ws281x source code\r\n        \"\"\"\r\n\r\n        super().__init__(*args, **kwargs)\r\n\r\n        # Set our neopixel API services up using Lightbulb base\r\n        serv_light = self.add_preload_service(\r\n            'Lightbulb', chars=['On', 'Hue', 'Saturation', 'Brightness'])\r\n\r\n        # Configure our callbacks\r\n        self.char_hue = serv_light.configure_char(\r\n            'Hue', setter_callback=self.set_hue)\r\n        self.char_saturation = serv_light.configure_char(\r\n            'Saturation', setter_callback=self.set_saturation)\r\n        self.char_on = serv_light.configure_char(\r\n            'On', setter_callback=self.set_state)\r\n        self.char_on = serv_light.configure_char(\r\n            'Brightness', setter_callback=self.set_brightness)\r\n\r\n        # Set our instance variables\r\n        self.accessory_state = 0  # State of the neo light On/Off\r\n        self.hue = 0  # Hue Value 0 - 360 Homekit API\r\n        self.saturation = 100  # Saturation Values 0 - 100 Homekit API\r\n        self.brightness = 100  # Brightness value 0 - 100 Homekit API\r\n\r\n        self.is_GRB = TRUE  # Most neopixels are Green Red Blue\r\n        self.LED_count = LED_count\r\n\r\n        self.neo_strip = Adafruit_NeoPixel(LED_count, LED_pin, LED_freq_hz,\r\n                                           LED_DMA, LED_invert, LED_Brightness)\r\n        self.neo_strip.begin()\r\n\r\n    def set_state(self, value):\r\n        self.accessory_state = value\r\n        if value == 1:  # On\r\n            self.set_hue(self.hue)\r\n        else:\r\n            self.update_neopixel_with_color(0, 0, 0)  # Off\r\n\r\n    def set_hue(self, value):\r\n        # Lets only write the new RGB values if the power is on\r\n        # otherwise update the hue value only\r\n        if self.accessory_state == 1:\r\n            self.hue = value\r\n            rgb_tuple = self.hsv_to_rgb(\r\n                self.hue, self.saturation, self.brightness)\r\n            if len(rgb_tuple) == 3:\r\n                self.update_neopixel_with_color(\r\n                    rgb_tuple[0], rgb_tuple[1], rgb_tuple[2])\r\n        else:\r\n            self.hue = value\r\n\r\n    def set_brightness(self, value):\r\n        self.brightness = value\r\n        self.set_hue(self.hue)\r\n\r\n    def set_saturation(self, value):\r\n        self.saturation = value\r\n        self.set_hue(self.hue)\r\n\r\n    def update_neopixel_with_color(self, red, green, blue):\r\n        for i in range(self.LED_count):\r\n            if(self.is_GRB):\r\n                self.neo_strip.setPixelColor(i, Color(int(green),\r\n                                                      int(red),\r\n                                                      int(blue)))\r\n            else:\r\n                self.neo_strip.setPixelColor(i, Color(int(red),\r\n                                                      int(green),\r\n                                                      int(blue)))\r\n\r\n        self.neo_strip.show()\r\n\r\n    def hsv_to_rgb(self, h, s, v):\r\n        \"\"\"\r\n        This function takes\r\n         h - 0 - 360 Deg\r\n         s - 0 - 100 %\r\n         v - 0 - 100 %\r\n        \"\"\"\r\n\r\n        hPri = h / 60\r\n        s = s / 100\r\n        v = v / 100\r\n\r\n        if s <= 0.0:\r\n            return int(0), int(0), int(0)\r\n\r\n        C = v * s  # Chroma\r\n        X = C * (1 - abs(hPri % 2 - 1))\r\n\r\n        RGB_Pri = [0.0, 0.0, 0.0]\r\n\r\n        if 0 <= hPri <= 1:\r\n            RGB_Pri = [C, X, 0]\r\n        elif 1 <= hPri <= 2:\r\n            RGB_Pri = [X, C, 0]\r\n        elif 2 <= hPri <= 3:\r\n            RGB_Pri = [0, C, X]\r\n        elif 3 <= hPri <= 4:\r\n            RGB_Pri = [0, X, C]\r\n        elif 4 <= hPri <= 5:\r\n            RGB_Pri = [X, 0, C]\r\n        elif 5 <= hPri <= 6:\r\n            RGB_Pri = [C, 0, X]\r\n        else:\r\n            RGB_Pri = [0, 0, 0]\r\n\r\n        m = v - C\r\n\r\n        return int((RGB_Pri[0] + m) * 255), int((RGB_Pri[1] + m) * 255), int((RGB_Pri[2] + m) * 255)\r\ndef get_bridge(driver):\r\n    \"\"\"Call this method to get a Bridge instead of a standalone accessory.\"\"\"\r\n    bridge = Bridge(driver, 'Bridge')\r\n    bridge.add_accessory(NeoPixelLightStrip(driver, 'LED TAPE', 14, 'TRUE', 18, 800000, 10, 255, 'FALSE'))\r\n\r\n     return bridge\r\n\r\n# Start the accessory on port 51826\r\ndriver = AccessoryDriver(port=51826, persist_file='neopixel.state')\r\n# Change `get_accessory` to `get_bridge` if you want to run a Bridge.\r\ndriver.add_accessory(accessory=get_bridge(driver))\r\n# We want SIGTERM (terminate) to be handled by the driver itself,\r\n# so that it can gracefully stop the accessory, server and advertising.\r\nsignal.signal(signal.SIGTERM, driver.signal_handler)\r\n# Start it!\r\ndriver.start()\r\n```\r\n\r\nThe error I'm getting is\r\n```\r\nTraceback (most recent call last):\r\n  File \"neopixel.py\", line 25, in <module>\r\n    from neopixel import *\r\n  File \"/home/pi/hk_project/neopixel.py\", line 173, in <module>\r\n    driver.add_accessory(accessory=get_bridge(driver))\r\n  File \"/home/pi/hk_project/neopixel.py\", line 165, in get_bridge\r\n    bridge.add_accessory(NeoPixelLightStrip(driver, 'LED TAPE', 14, 'TRUE', 18, 800000, 10, 255, 'FALSE'))\r\n  File \"/home/pi/hk_project/neopixel.py\", line 52, in __init__\r\n    super().__init__(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyhap/accessory.py\", line 54, in __init__\r\n    self.add_info_service()\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyhap/accessory.py\", line 83, in add_info_service\r\n    serv_info = self.driver.loader.get_service('AccessoryInformation')\r\nAttributeError: 'int' object has no attribute 'loader'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/242", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/242/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/242/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/242", "id": 601812014, "node_id": "MDU6SXNzdWU2MDE4MTIwMTQ=", "number": 242, "title": "Unable to encode TLV value for camera", "user": {"login": "jdsnape", "id": 376205, "node_id": "MDQ6VXNlcjM3NjIwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/376205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdsnape", "html_url": "https://github.com/jdsnape", "followers_url": "https://api.github.com/users/jdsnape/followers", "following_url": "https://api.github.com/users/jdsnape/following{/other_user}", "gists_url": "https://api.github.com/users/jdsnape/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdsnape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdsnape/subscriptions", "organizations_url": "https://api.github.com/users/jdsnape/orgs", "repos_url": "https://api.github.com/users/jdsnape/repos", "events_url": "https://api.github.com/users/jdsnape/events{/privacy}", "received_events_url": "https://api.github.com/users/jdsnape/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-17T08:53:26Z", "updated_at": "2020-04-22T20:51:44Z", "closed_at": "2020-04-22T20:51:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to create a camera I'm getting this exception:\r\n\r\n```\r\n[hap_server] Exception in set_characteristics: object of type 'int' has no len()\r\nTraceback (most recent call last):\r\n  File \"/home/homekit/camera_test/venv/lib/python3.7/site-packages/pyhap/hap_server.py\", line 559, in handle_set_characteristics\r\n    self.client_address)\r\n  File \"/home/homekit/camera_test/venv/lib/python3.7/site-packages/pyhap/accessory_driver.py\", line 660, in set_characteristics\r\n    char.client_update_value(cq[HAP_REPR_VALUE], client_addr)\r\n  File \"/home/homekit/camera_test/venv/lib/python3.7/site-packages/pyhap/characteristic.py\", line 215, in client_update_value\r\n    self.setter_callback(value)\r\n  File \"/home/homekit/camera_test/venv/lib/python3.7/site-packages/pyhap/camera.py\", line 694, in set_endpoints\r\n    to_base64=True)\r\n  File \"/home/homekit/camera_test/venv/lib/python3.7/site-packages/pyhap/tlv.py\", line 27, in encode\r\n    total_length = len(data)\r\n```\r\n\r\nI think I can see how this has happened in camera.py as tlv.encode is (I think) expecting to receive bytes, but it's being passed video_ssrc/audo_ssrc which are integers.\r\n\r\n```\r\n       video_ssrc = int.from_bytes(os.urandom(3), byteorder=\"big\")\r\n        audio_ssrc = int.from_bytes(os.urandom(3), byteorder=\"big\")\r\n\r\n<snip>\r\n        response_tlv = tlv.encode(\r\n            SETUP_TYPES['SESSION_ID'], session_id.bytes,\r\n            SETUP_TYPES['STATUS'], SETUP_STATUS['SUCCESS'],\r\n            SETUP_TYPES['ADDRESS'], res_address_tlv,\r\n            SETUP_TYPES['VIDEO_SRTP_PARAM'], video_srtp_tlv,\r\n            SETUP_TYPES['AUDIO_SRTP_PARAM'], audio_srtp_tlv,\r\n            SETUP_TYPES['VIDEO_SSRC'], video_ssrc,\r\n            SETUP_TYPES['AUDIO_SSRC'], audio_ssrc,\r\n            to_base64=True)\r\n```\r\n\r\nThis used to work though so I'm a bit confused about what has changed! I'm using python 3.7.5 and HAP-python==2.8.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/238", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/238/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/238/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/238", "id": 597208157, "node_id": "MDU6SXNzdWU1OTcyMDgxNTc=", "number": 238, "title": "'HAPServer' object has no attribute 'connections'", "user": {"login": "nicx", "id": 25152397, "node_id": "MDQ6VXNlcjI1MTUyMzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/25152397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicx", "html_url": "https://github.com/nicx", "followers_url": "https://api.github.com/users/nicx/followers", "following_url": "https://api.github.com/users/nicx/following{/other_user}", "gists_url": "https://api.github.com/users/nicx/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicx/subscriptions", "organizations_url": "https://api.github.com/users/nicx/orgs", "repos_url": "https://api.github.com/users/nicx/repos", "events_url": "https://api.github.com/users/nicx/events{/privacy}", "received_events_url": "https://api.github.com/users/nicx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-04-09T11:13:16Z", "updated_at": "2020-04-11T13:59:58Z", "closed_at": "2020-04-11T13:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error with latest Homeassistant Core Version 108.1:\r\n\r\n```\r\n 13:08:13 ERROR (MainThread) [homeassistant.setup] Error during setup of component homekit\r\nf)\r\n  File \"/usr/local/lib/python3.7/site-packages/pyhap/hap_server.py\", line 840, in __init__\r\n    super(HAPServer, self).__init__(addr_port, handler_type)\r\n  File \"/usr/local/lib/python3.7/socketserver.py\", line 455, in __init__\r\n    self.server_close()\r\n  File \"/usr/local/lib/python3.7/site-packages/pyhap/hap_server.py\", line 911, in server_close\r\n    for sock in list(self.connections.values()):\r\nAttributeError: 'HAPServer' object has no attribute 'connections'\r\n\r\n```\r\n\r\nAny hints?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/230", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/230/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/230/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/230", "id": 584503099, "node_id": "MDU6SXNzdWU1ODQ1MDMwOTk=", "number": 230, "title": "AssertionErrors referencing macOS machine", "user": {"login": "jjlawren", "id": 1203111, "node_id": "MDQ6VXNlcjEyMDMxMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1203111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjlawren", "html_url": "https://github.com/jjlawren", "followers_url": "https://api.github.com/users/jjlawren/followers", "following_url": "https://api.github.com/users/jjlawren/following{/other_user}", "gists_url": "https://api.github.com/users/jjlawren/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjlawren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjlawren/subscriptions", "organizations_url": "https://api.github.com/users/jjlawren/orgs", "repos_url": "https://api.github.com/users/jjlawren/repos", "events_url": "https://api.github.com/users/jjlawren/events{/privacy}", "received_events_url": "https://api.github.com/users/jjlawren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-03-19T15:39:22Z", "updated_at": "2020-08-21T14:49:30Z", "closed_at": "2020-06-26T14:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the Home Assistant [Homekit integration](https://www.home-assistant.io/integrations/homekit/), I occasionally get backtraces referencing HAP-python:\r\n```\r\n----------------------------------------\r\nException happened during processing of request from ('192.168.2.2', 64896)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/socketserver.py\", line 650, in process_request_thread\r\n    self.finish_request(request, client_address)\r\n  File \"/srv/homeassistant-3.7/lib/python3.7/site-packages/pyhap/hap_server.py\", line 880, in finish_request\r\n    self, self.accessory_handler)\r\n  File \"/srv/homeassistant-3.7/lib/python3.7/site-packages/pyhap/hap_server.py\", line 151, in __init__\r\n    super(HAPServerHandler, self).__init__(sock, client_addr, server)\r\n  File \"/usr/lib/python3.7/socketserver.py\", line 720, in __init__\r\n    self.handle()\r\n  File \"/usr/lib/python3.7/http/server.py\", line 428, in handle\r\n    self.handle_one_request()\r\n  File \"/usr/lib/python3.7/http/server.py\", line 394, in handle_one_request\r\n    self.raw_requestline = self.rfile.readline(65537)\r\n  File \"/usr/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"/srv/homeassistant-3.7/lib/python3.7/site-packages/pyhap/hap_server.py\", line 702, in recv_into\r\n    data = self.recv(nbytes, flags)\r\n  File \"/srv/homeassistant-3.7/lib/python3.7/site-packages/pyhap/hap_server.py\", line 725, in recv\r\n    block_length_bytes = self.socket.recv(self.LENGTH_LENGTH)\r\n  File \"/srv/homeassistant-3.7/lib/python3.7/site-packages/pyhap/hap_server.py\", line 713, in recv\r\n    assert not flags and buflen > self.LENGTH_LENGTH\r\nAssertionError\r\n----------------------------------------\r\n```\r\nIn the backtrace above, the 192.168.2.2 host is an unrelated macOS host running 10.15.3. That host has Homekit configured via the Home app but otherwise doesn't provide any Homekit services.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/228", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/228/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/228/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/228", "id": 577584260, "node_id": "MDU6SXNzdWU1Nzc1ODQyNjA=", "number": 228, "title": "Chacha20_Poly1305 performance can result in unresponsive homekit", "user": {"login": "bdraco", "id": 663432, "node_id": "MDQ6VXNlcjY2MzQzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/663432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdraco", "html_url": "https://github.com/bdraco", "followers_url": "https://api.github.com/users/bdraco/followers", "following_url": "https://api.github.com/users/bdraco/following{/other_user}", "gists_url": "https://api.github.com/users/bdraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdraco/subscriptions", "organizations_url": "https://api.github.com/users/bdraco/orgs", "repos_url": "https://api.github.com/users/bdraco/repos", "events_url": "https://api.github.com/users/bdraco/events{/privacy}", "received_events_url": "https://api.github.com/users/bdraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-08T23:24:06Z", "updated_at": "2020-03-28T08:18:59Z", "closed_at": "2020-03-28T08:18:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<img width=\"1100\" alt=\"Screen Shot 2020-03-08 at 6 22 05 PM\" src=\"https://user-images.githubusercontent.com/663432/76173048-c9017e00-6169-11ea-8e51-fbdff83a631c.png\">\r\n\r\nIf the bridge has ~80 devices the startup can timeout on slow systems because the chacha overhead in python.  \r\n\r\nI wonder if this can be switched to be done in C", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/226", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/226/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/226/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/226", "id": 565807697, "node_id": "MDU6SXNzdWU1NjU4MDc2OTc=", "number": 226, "title": "Zeroconf is listening on all interfaces instead of 0.0.0.0 which can cause a broadcast storm when there are many interfaces", "user": {"login": "bdraco", "id": 663432, "node_id": "MDQ6VXNlcjY2MzQzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/663432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdraco", "html_url": "https://github.com/bdraco", "followers_url": "https://api.github.com/users/bdraco/followers", "following_url": "https://api.github.com/users/bdraco/following{/other_user}", "gists_url": "https://api.github.com/users/bdraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdraco/subscriptions", "organizations_url": "https://api.github.com/users/bdraco/orgs", "repos_url": "https://api.github.com/users/bdraco/repos", "events_url": "https://api.github.com/users/bdraco/events{/privacy}", "received_events_url": "https://api.github.com/users/bdraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-15T20:51:23Z", "updated_at": "2020-02-15T22:56:02Z", "closed_at": "2020-02-15T22:56:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a Zeroconf instance per server thread.  We likely need to wait to start the http sever until after Zeroconf to avoid the server inheriting the socket\r\n\r\npython3 596 root   11u     IPv4          107892804      0t0       UDP *:mdns \r\npython3 596 root   12u     IPv4          107892806      0t0       UDP *:mdns \r\npython3 596 root   13u     IPv4          107892807      0t0       UDP *:mdns \r\npython3 596 root   14u     IPv4          107892808      0t0       UDP *:mdns \r\npython3 596 root   15u     IPv4          107892809      0t0       UDP *:mdns \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/225", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/225/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/225/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/225", "id": 563237672, "node_id": "MDU6SXNzdWU1NjMyMzc2NzI=", "number": 225, "title": "HomeKit - No Response", "user": {"login": "svh1985", "id": 5213210, "node_id": "MDQ6VXNlcjUyMTMyMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5213210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svh1985", "html_url": "https://github.com/svh1985", "followers_url": "https://api.github.com/users/svh1985/followers", "following_url": "https://api.github.com/users/svh1985/following{/other_user}", "gists_url": "https://api.github.com/users/svh1985/gists{/gist_id}", "starred_url": "https://api.github.com/users/svh1985/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svh1985/subscriptions", "organizations_url": "https://api.github.com/users/svh1985/orgs", "repos_url": "https://api.github.com/users/svh1985/repos", "events_url": "https://api.github.com/users/svh1985/events{/privacy}", "received_events_url": "https://api.github.com/users/svh1985/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T14:18:26Z", "updated_at": "2020-03-01T20:41:10Z", "closed_at": "2020-03-01T20:41:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI manually setup a machine with Debian Buster and installed Hass.io. After that, I connected my Home Assistant to HomeKit via my iPhone. The pairing was successful and the devices show-up in HomeKit.\r\n\r\nAll good until I noticed that the devices regularly had the status No Response. The devices keeps going between No Response and \u201cResponding\u201d.\r\n\r\n**Some questions I have:**\r\n- What can cause this?\r\n- How can I debug this?\r\n- Does the host system also need avahi-daemon installed?\r\n\r\n**My config:**\r\n- i7 16 GB 265GB SSD\r\n- Debian GNU/Linux 10 (buster)\r\n- Home Assistant Core v0.105.3\r\n- Supervisor v200\r\n- Connected via ethernet cable (no VLAN)\r\n- Own domain with Lets Encrypt Certificate\r\n- Opened port in router to HA on port 443 for HA\r\n- Opened port in router to UDP 5353 and TCP 51827 for mDNS and HomeKit\r\n- Apple TV 4 as HomeKit bridge at 172.16.0.16 (in log)\r\n\r\n**Debug log HomeKit Home Assistant**\r\n```\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 796788239, 'iid': 9, 'ev': True}, {'aid': 796788239, 'iid': 10, 'ev': True}]}\r\n2020-02-11 15:13:33 INFO (Thread-57) [pyhap.hap_server] 172.16.0.12 - \"GET /accessories HTTP/1.1\" 200 -\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 796788239.9\r\n2020-02-11 15:13:33 DEBUG (Thread-55) [pyhap.hap_server] Request PUT from address '('172.16.0.65', 62651)' for path '/characteristics'.\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 796788239.10\r\n2020-02-11 15:13:33 DEBUG (Thread-55) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 3558740872, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 INFO (Thread-54) [pyhap.hap_server] 172.16.0.102 - \"PUT /characteristics HTTP/1.1\" 204 -\r\n2020-02-11 15:13:33 DEBUG (Thread-55) [pyhap.accessory_driver] Subscribed client ('172.16.0.65', 62651) to topic 3558740872.9\r\n2020-02-11 15:13:33 INFO (Thread-55) [pyhap.hap_server] 172.16.0.65 - \"PUT /characteristics HTTP/1.1\" 204 -\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 3558740872, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 3558740872.9\r\n2020-02-11 15:13:33 DEBUG (Thread-55) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 796788239, 'iid': 9, 'ev': True}, {'aid': 796788239, 'iid': 10, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 600182631, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-55) [pyhap.accessory_driver] Subscribed client ('172.16.0.65', 62651) to topic 796788239.9\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 600182631.9\r\n2020-02-11 15:13:33 DEBUG (Thread-55) [pyhap.accessory_driver] Subscribed client ('172.16.0.65', 62651) to topic 796788239.10\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 941295249, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 941295249.9\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1011549895, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1011549895.9\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1187972988, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1187972988.9\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1282475955, 'iid': 9, 'ev': True}, {'aid': 1282475955, 'iid': 10, 'ev': True}, {'aid': 1282475955, 'iid': 11, 'ev': True}, {'aid': 1282475955, 'iid': 12, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.9\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.10\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.11\r\n2020-02-11 15:13:33 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.12\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Request PUT from address '('172.16.0.16', 49615)' for path '/characteristics'.\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1011549895, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1011549895.9\r\n2020-02-11 15:13:33 INFO (Thread-56) [pyhap.hap_server] 172.16.0.16 - \"PUT /characteristics HTTP/1.1\" 204 -\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1282475955, 'iid': 9, 'ev': True}, {'aid': 1282475955, 'iid': 10, 'ev': True}, {'aid': 1282475955, 'iid': 11, 'ev': True}, {'aid': 1282475955, 'iid': 12, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.9\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.10\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.11\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.12\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 3558740872, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 3558740872.9\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 600182631, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 600182631.9\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1187972988, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1187972988.9\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 941295249, 'iid': 9, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 941295249.9\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 796788239, 'iid': 9, 'ev': True}, {'aid': 796788239, 'iid': 10, 'ev': True}]}\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 796788239.9\r\n2020-02-11 15:13:33 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 796788239.10\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.hap_server] Request PUT from address '('172.16.0.102', 62621)' for path '/characteristics'.\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1011549895, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1011549895.9\r\n2020-02-11 15:13:42 INFO (Thread-54) [pyhap.hap_server] 172.16.0.102 - \"PUT /characteristics HTTP/1.1\" 204 -\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1282475955, 'iid': 9, 'ev': False}, {'aid': 1282475955, 'iid': 10, 'ev': False}, {'aid': 1282475955, 'iid': 11, 'ev': False}, {'aid': 1282475955, 'iid': 12, 'ev': False}]}\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.9\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.10\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.11\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1282475955.12\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 600182631, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 600182631.9\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1187972988, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 1187972988.9\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 941295249, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:42 DEBUG (Thread-54) [pyhap.accessory_driver] Subscribed client ('172.16.0.102', 62621) to topic 941295249.9\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.hap_server] Request PUT from address '('172.16.0.16', 49615)' for path '/characteristics'.\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1011549895, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1011549895.9\r\n2020-02-11 15:13:52 INFO (Thread-56) [pyhap.hap_server] 172.16.0.16 - \"PUT /characteristics HTTP/1.1\" 204 -\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 941295249, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 941295249.9\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1187972988, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1187972988.9\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 600182631, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 600182631.9\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.hap_server] Set characteristics content: {'characteristics': [{'aid': 1282475955, 'iid': 11, 'ev': False}, {'aid': 1282475955, 'iid': 12, 'ev': False}, {'aid': 1282475955, 'iid': 10, 'ev': False}, {'aid': 1282475955, 'iid': 9, 'ev': False}]}\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.11\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.12\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.10\r\n2020-02-11 15:13:52 DEBUG (Thread-56) [pyhap.accessory_driver] Subscribed client ('172.16.0.16', 49615) to topic 1282475955.9\r\n2020-02-11 15:14:15 DEBUG (Thread-57) [pyhap.hap_server] Cleaning connection to ('172.16.0.12', 49713)\r\n2020-02-11 15:14:38 DEBUG (Thread-55) [pyhap.hap_server] Cleaning connection to ('172.16.0.65', 62651)\r\n2020-02-11 15:14:38 DEBUG (Thread-56) [pyhap.hap_server] Cleaning connection to ('172.16.0.16', 49615)\r\n2020-02-11 15:14:39 DEBUG (Thread-54) [pyhap.hap_server] Cleaning connection to ('172.16.0.102', 62621)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/223", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/223/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/223/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/223", "id": 543083117, "node_id": "MDU6SXNzdWU1NDMwODMxMTc=", "number": 223, "title": "How do i make an accessory that isn't a temperature sensor?", "user": {"login": "shayypy", "id": 43248357, "node_id": "MDQ6VXNlcjQzMjQ4MzU3", "avatar_url": "https://avatars0.githubusercontent.com/u/43248357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shayypy", "html_url": "https://github.com/shayypy", "followers_url": "https://api.github.com/users/shayypy/followers", "following_url": "https://api.github.com/users/shayypy/following{/other_user}", "gists_url": "https://api.github.com/users/shayypy/gists{/gist_id}", "starred_url": "https://api.github.com/users/shayypy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shayypy/subscriptions", "organizations_url": "https://api.github.com/users/shayypy/orgs", "repos_url": "https://api.github.com/users/shayypy/repos", "events_url": "https://api.github.com/users/shayypy/events{/privacy}", "received_events_url": "https://api.github.com/users/shayypy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-28T07:05:51Z", "updated_at": "2020-02-08T07:35:25Z", "closed_at": "2020-02-08T07:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are no examples in the documentation (\"to be filled out\"), so I feel as though I'm limited to the examples provided on PyPI and github. Is there something I should be using to see what I can make the category? As per a provided example, `CATEGORY_SENSOR`. \r\n\r\nThe provided example works fine, but as stated I don't know what else im able to make. Ideally I want to just have a number or a %. Or even a string, that'd be neat. \r\n\r\nThanks for any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/221", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/221/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/221/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/221", "id": 534407300, "node_id": "MDU6SXNzdWU1MzQ0MDczMDA=", "number": 221, "title": "iPhone does not reconnect with bridge", "user": {"login": "sanvd0000", "id": 8013640, "node_id": "MDQ6VXNlcjgwMTM2NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8013640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanvd0000", "html_url": "https://github.com/sanvd0000", "followers_url": "https://api.github.com/users/sanvd0000/followers", "following_url": "https://api.github.com/users/sanvd0000/following{/other_user}", "gists_url": "https://api.github.com/users/sanvd0000/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanvd0000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanvd0000/subscriptions", "organizations_url": "https://api.github.com/users/sanvd0000/orgs", "repos_url": "https://api.github.com/users/sanvd0000/repos", "events_url": "https://api.github.com/users/sanvd0000/events{/privacy}", "received_events_url": "https://api.github.com/users/sanvd0000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-07T14:18:59Z", "updated_at": "2020-01-29T08:02:15Z", "closed_at": "2020-01-29T08:02:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After disabling / enabling wifi on the Iphone, the Home app does not automatically reconnects to the bridge, no error and RPI is still responsive. \r\n\r\nStatus in app is: no response\r\n\r\nRestarting HAP fixes the issue ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/212", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/212/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/212/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/212", "id": 527749104, "node_id": "MDU6SXNzdWU1Mjc3NDkxMDQ=", "number": 212, "title": "Can not set value to CurrentTemperatre and CurrentRelativeHumidity", "user": {"login": "dpylypen", "id": 24359961, "node_id": "MDQ6VXNlcjI0MzU5OTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/24359961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpylypen", "html_url": "https://github.com/dpylypen", "followers_url": "https://api.github.com/users/dpylypen/followers", "following_url": "https://api.github.com/users/dpylypen/following{/other_user}", "gists_url": "https://api.github.com/users/dpylypen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpylypen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpylypen/subscriptions", "organizations_url": "https://api.github.com/users/dpylypen/orgs", "repos_url": "https://api.github.com/users/dpylypen/repos", "events_url": "https://api.github.com/users/dpylypen/events{/privacy}", "received_events_url": "https://api.github.com/users/dpylypen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-24T20:06:42Z", "updated_at": "2019-12-03T10:27:45Z", "closed_at": "2019-12-03T10:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I do wrong? Can you help? Or is it my fault?\r\n\r\n```\r\nclass TemperatureSensor(Accessory):\r\n    category = pyhap_const.CATEGORY_SENSOR\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        serv_temp = self.add_preload_service(\"TemperatureSensor\")\r\n        self.char_temp = serv_temp.get_characteristic('CurrentTemperature')\r\n        self.char_temp.setter_callback = self.temperature_changed\r\n        self.char_temp.set_value(25.0)  #  this works\r\n\r\n    def temperature_changed(self):\r\n        return 0\r\n\r\n    def get_status(self):\r\n        return(55.0)\r\n\r\n    def set_status(self, status):\r\n        self.char_temp.set_value(status) #  this does not work\r\n\r\n    @Accessory.run_at_interval(5)\r\n    async def run(self):\r\n        status = self.get_status()\r\n        self.set_status(status)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/209", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/209/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/209/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/209", "id": 520520060, "node_id": "MDU6SXNzdWU1MjA1MjAwNjA=", "number": 209, "title": "pickle alternative", "user": {"login": "Pythonaire", "id": 46537110, "node_id": "MDQ6VXNlcjQ2NTM3MTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/46537110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pythonaire", "html_url": "https://github.com/Pythonaire", "followers_url": "https://api.github.com/users/Pythonaire/followers", "following_url": "https://api.github.com/users/Pythonaire/following{/other_user}", "gists_url": "https://api.github.com/users/Pythonaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pythonaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pythonaire/subscriptions", "organizations_url": "https://api.github.com/users/Pythonaire/orgs", "repos_url": "https://api.github.com/users/Pythonaire/repos", "events_url": "https://api.github.com/users/Pythonaire/events{/privacy}", "received_events_url": "https://api.github.com/users/Pythonaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-09T22:04:35Z", "updated_at": "2019-11-26T12:20:36Z", "closed_at": "2019-11-26T12:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "After the NodeJs version I tried these python version. Great work!\r\n\r\nI use 433 MHz sensors and this python based bridge. Unfortunately, I have two processes running, a transceiver python program (receive and transmit packets) and the hap-python program - both as system services. I use python pickle to hand over data to HAP-Python.\r\nIt was a bit tricky, because pickle seems not to prevent writing (dump) and reading (load) at the same time. Try, except solve the problem. I saw \"multiprocessing\" could be a better way, but ... a bit strange for me. \r\nDo you have a good idea idea, to make the data transfer between my python receiver and your HAP-Python more easier and more stable?\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/205", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/205/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/205/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/205", "id": 495084372, "node_id": "MDU6SXNzdWU0OTUwODQzNzI=", "number": 205, "title": "New release?", "user": {"login": "Jc2k", "id": 11544, "node_id": "MDQ6VXNlcjExNTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jc2k", "html_url": "https://github.com/Jc2k", "followers_url": "https://api.github.com/users/Jc2k/followers", "following_url": "https://api.github.com/users/Jc2k/following{/other_user}", "gists_url": "https://api.github.com/users/Jc2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jc2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jc2k/subscriptions", "organizations_url": "https://api.github.com/users/Jc2k/orgs", "repos_url": "https://api.github.com/users/Jc2k/repos", "events_url": "https://api.github.com/users/Jc2k/events{/privacy}", "received_events_url": "https://api.github.com/users/Jc2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-18T08:55:59Z", "updated_at": "2019-09-21T11:01:23Z", "closed_at": "2019-09-21T10:44:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are quite a few HA users who might benefit from #202. Any chance of a new point release so we can roll it out for them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/204", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/204/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/204/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/204", "id": 489472249, "node_id": "MDU6SXNzdWU0ODk0NzIyNDk=", "number": 204, "title": "Siri in the home pod stopped seing half of the devices", "user": {"login": "ignalex", "id": 7232721, "node_id": "MDQ6VXNlcjcyMzI3MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7232721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignalex", "html_url": "https://github.com/ignalex", "followers_url": "https://api.github.com/users/ignalex/followers", "following_url": "https://api.github.com/users/ignalex/following{/other_user}", "gists_url": "https://api.github.com/users/ignalex/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignalex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignalex/subscriptions", "organizations_url": "https://api.github.com/users/ignalex/orgs", "repos_url": "https://api.github.com/users/ignalex/repos", "events_url": "https://api.github.com/users/ignalex/events{/privacy}", "received_events_url": "https://api.github.com/users/ignalex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-05T00:49:24Z", "updated_at": "2019-09-05T09:06:55Z", "closed_at": "2019-09-05T09:06:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi guys \r\nhave some strandge things. \r\nhap-python works well, all the devices are visible and **normally controlable** from the iPhone HOME app. \r\nbut since some time ago, if asking siri (voice) to turn on / off **some** of them, she s replying 'something went wrong, try again later'. \r\nthere is no comms logged from hap side on this. like she doesn't even trying :) \r\nI tried to delete / rebuild accessory.state but no luck. \r\nSame time, she can turn on/off only generic light (which is one of accessories), but lost 'heater', 'coffee' and 'temperature', 'ambient light' and 'computer'. (can turn them only from phone app). \r\n\r\nthis is not the HAP issue, but maybe anyone experiences similar. \r\nI haven't updated hap recently. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/197", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/197/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/197/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/197", "id": 458352136, "node_id": "MDU6SXNzdWU0NTgzNTIxMzY=", "number": 197, "title": "HTTP server must be HTTP/1.1", "user": {"login": "a3135134", "id": 4657206, "node_id": "MDQ6VXNlcjQ2NTcyMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4657206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a3135134", "html_url": "https://github.com/a3135134", "followers_url": "https://api.github.com/users/a3135134/followers", "following_url": "https://api.github.com/users/a3135134/following{/other_user}", "gists_url": "https://api.github.com/users/a3135134/gists{/gist_id}", "starred_url": "https://api.github.com/users/a3135134/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a3135134/subscriptions", "organizations_url": "https://api.github.com/users/a3135134/orgs", "repos_url": "https://api.github.com/users/a3135134/repos", "events_url": "https://api.github.com/users/a3135134/events{/privacy}", "received_events_url": "https://api.github.com/users/a3135134/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-20T05:21:42Z", "updated_at": "2020-01-25T08:07:51Z", "closed_at": "2020-01-25T08:07:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to HAP specification 5.2.4, HTTP server must be HTTP/1.1. Now it's 1.0.\r\n\r\nIf the controller doesn't maintain a persistent connection, the pair verify progress will raise an error. And HTTP 1.0 doesn't require a persistent connection by default.\r\n\r\nI just added the code\r\nself.protocol_version = \"HTTP/1.1\" \r\nin __init__() function of  class HAPServerHandler in \"/pyhap/hap_server.py\". And it works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/195", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/195/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/195/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/195", "id": 451761906, "node_id": "MDU6SXNzdWU0NTE3NjE5MDY=", "number": 195, "title": "Television accessory, InputSource characteristic caused bridge pairing failure", "user": {"login": "quadcube", "id": 13719009, "node_id": "MDQ6VXNlcjEzNzE5MDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/13719009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quadcube", "html_url": "https://github.com/quadcube", "followers_url": "https://api.github.com/users/quadcube/followers", "following_url": "https://api.github.com/users/quadcube/following{/other_user}", "gists_url": "https://api.github.com/users/quadcube/gists{/gist_id}", "starred_url": "https://api.github.com/users/quadcube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quadcube/subscriptions", "organizations_url": "https://api.github.com/users/quadcube/orgs", "repos_url": "https://api.github.com/users/quadcube/repos", "events_url": "https://api.github.com/users/quadcube/events{/privacy}", "received_events_url": "https://api.github.com/users/quadcube/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-04T01:59:22Z", "updated_at": "2019-09-29T01:59:40Z", "closed_at": "2019-09-29T01:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried implementing TV accessory, which basically worked until I added the SourceInput service. The TV accessory implemented on a bridge, which initial pairing process showed pairing was successful on the HAP-python side and then both iOS and HAP-python showed pairing failed/unable to pair.\r\n\r\nHere's a snippet of the TV accessory with SourceInput\r\n`\r\nclass MacMini(Accessory):\r\n\r\n    category = CATEGORY_TELEVISION\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        serv_macmini = self.add_preload_service('Television', chars=['Active', 'ActiveIdentifier', 'ConfiguredName', 'SleepDiscoveryMode', 'CurrentMediaState', 'TargetMediaState', 'RemoteKey'])\r\n        serv_speaker = self.add_preload_service('TelevisionSpeaker', chars=['Mute', 'VolumeSelector'])\r\n        #serv_inputsource = self.add_preload_service('InputSource', chars=['ConfiguredName', 'InputSourceType', 'IsConfigured', 'CurrentVisibilityState'])\r\n        \r\n        self.active = serv_macmini.configure_char('Active', setter_callback=self.set_active)\r\n        self.activeidentifier = serv_macmini.configure_char('ActiveIdentifier', setter_callback=self.set_activeidentifier)\r\n        self.configuredname_macmini = serv_macmini.configure_char('ConfiguredName')\r\n        self.sleepdiscoverymode = serv_macmini.configure_char('SleepDiscoveryMode', setter_callback=self.set_sleepdiscoverymode)\r\n        self.targetmediastate = serv_macmini.configure_char('TargetMediaState', setter_callback=self.set_targetmediastate)\r\n        self.remotekey = serv_macmini.configure_char('RemoteKey', setter_callback=self.set_remotekey)\r\n        \r\n        self.char_mute = serv_speaker.configure_char('Mute', setter_callback=self.set_mute)\r\n        self.char_volume = serv_speaker.configure_char('VolumeSelector', setter_callback=self.set_volume)\r\n    \r\n        self.configuredname_inputsource = serv_inputsource.configure_char('ConfiguredName')\r\n        self.inputsourcetype = serv_inputsource.configure_char('InputSourceType', setter_callback=self.set_inputsourcetype)\r\n        self.isconfigured = serv_inputsource.configure_char('IsConfigured')\r\n        self.currentvisibilitystate = serv_inputsource.configure_char('CurrentVisibilityState')\r\n        \r\n        self.configuredname_macmini.set_value('Mac mini')\r\n        self.configuredname_inputsource.set_value('Thunderbolt 3')\r\n        self.sleepdiscoverymode.set_value(1)\r\n        self.inputsourcetype.set_value(3)\r\n        self.isconfigured.set_value(0)\r\n        self.currentvisibilitystate.set_value(0)\r\n    \r\n    @Accessory.run_at_interval(30)\r\n    def run(self): # We can't just use .set_value(state), because that will trigger our listener\r\n        state = get_display_state()\r\n        if self.active.value != state:\r\n            self.active.value = state\r\n        self.active.notify()\r\n    \r\n    def set_active(self, value):\r\n        if get_display_state() != value:\r\n            set_display_state(value)\r\n\r\n    def set_activeidentifier(self, value):\r\n        print(\"Active Identifier: %s\", value)\r\n\r\n    def set_sleepdiscoverymode(self, value):\r\n        print(\"Sleep Discovery Mode: %s\", value)\r\n\r\n    def set_targetmediastate(self, value):\r\n        print(\"Target Media State: %s\", value)\r\n    \r\n    def set_remotekey(self, value):\r\n        print(\"Remote Key: %s\", value)\r\n    \r\n    def set_inputsourcetype(self, value):\r\n        print(\"Input Source Type: %s\", value)\r\n    \r\n    def set_mute(self, value):\r\n        print(\"Mute: %s\", value)\r\n\r\n    def set_volume(self, value):\r\n        print(\"Volume: %s\", value)\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/192", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/192/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/192/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/192", "id": 440464515, "node_id": "MDU6SXNzdWU0NDA0NjQ1MTU=", "number": 192, "title": "Failed to install ed25519 and curve25519-donna", "user": {"login": "Rjayone", "id": 8685210, "node_id": "MDQ6VXNlcjg2ODUyMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8685210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rjayone", "html_url": "https://github.com/Rjayone", "followers_url": "https://api.github.com/users/Rjayone/followers", "following_url": "https://api.github.com/users/Rjayone/following{/other_user}", "gists_url": "https://api.github.com/users/Rjayone/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rjayone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rjayone/subscriptions", "organizations_url": "https://api.github.com/users/Rjayone/orgs", "repos_url": "https://api.github.com/users/Rjayone/repos", "events_url": "https://api.github.com/users/Rjayone/events{/privacy}", "received_events_url": "https://api.github.com/users/Rjayone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-05T16:41:47Z", "updated_at": "2019-05-06T08:44:53Z", "closed_at": "2019-05-06T08:44:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Faced with issue when trying to install the package using  pip3 install HAP-python[QRCode]\r\nmacos 10.14.4\r\nOther packages are installed.\r\n\r\nhttps://paste.ofcode.org/Gtt5UhkM7ypCfHTy8rYASF", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/191", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/191/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/191/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/191", "id": 439823235, "node_id": "MDU6SXNzdWU0Mzk4MjMyMzU=", "number": 191, "title": "Sensors in Home app stuck on \u201cUpdating\u201d", "user": {"login": "blandry3", "id": 9467857, "node_id": "MDQ6VXNlcjk0Njc4NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9467857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blandry3", "html_url": "https://github.com/blandry3", "followers_url": "https://api.github.com/users/blandry3/followers", "following_url": "https://api.github.com/users/blandry3/following{/other_user}", "gists_url": "https://api.github.com/users/blandry3/gists{/gist_id}", "starred_url": "https://api.github.com/users/blandry3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blandry3/subscriptions", "organizations_url": "https://api.github.com/users/blandry3/orgs", "repos_url": "https://api.github.com/users/blandry3/repos", "events_url": "https://api.github.com/users/blandry3/events{/privacy}", "received_events_url": "https://api.github.com/users/blandry3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-02T22:58:11Z", "updated_at": "2019-05-14T13:16:34Z", "closed_at": "2019-05-14T13:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "My setup in the following :\r\n\r\nHome Assistant 0.92.1 on Win 7\r\nHome app on iPhone 8, iOS 12\r\nHomeKit Hub on iPad Air 2, iOS 11\r\n\r\nThe sensors will eventually update after some time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/185", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/185/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/185/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/185", "id": 411117615, "node_id": "MDU6SXNzdWU0MTExMTc2MTU=", "number": 185, "title": "New Accessory Typs + Services", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-16T21:48:20Z", "updated_at": "2019-04-09T20:38:56Z", "closed_at": "2019-04-09T20:38:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems their might have been new accessories added with iOS version 12.2 beta 1.\r\nI recently saw a feature request to add a TV service and found this afterwards:\r\nhttps://github.com/KhaosT/HAP-NodeJS/pull/638\r\n\r\nI tried to download the current HAP specifications, but it seems they aren't available at the moment. At least I always get an error message. Maybe (Hopefully) they are being updated now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/183", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/183/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/183/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/183", "id": 407097375, "node_id": "MDU6SXNzdWU0MDcwOTczNzU=", "number": 183, "title": "Support non-standard HAP services and characteristics", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-06T06:28:33Z", "updated_at": "2019-02-06T08:19:21Z", "closed_at": "2019-02-06T08:19:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Elgato Eve (for instance) has some non-Apple (and thus non-standard) services and characteristics. Some of these have been discussed at https://gist.github.com/simont77/3f4d4330fa55b83f8ca96388d9004e7d.\r\n\r\nIt would be really nice if there was some standard mechanism for creating a service/characteristic that is non-standard.\r\n\r\nI think I'll be able to just create them using Service and Characteristic objects, but it might be nice to have the Loader handle that too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/176", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/176/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/176/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/176", "id": 386616122, "node_id": "MDU6SXNzdWUzODY2MTYxMjI=", "number": 176, "title": "Homekit intermittent problem with 'No response' on IOS devices", "user": {"login": "jr3us", "id": 2944683, "node_id": "MDQ6VXNlcjI5NDQ2ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2944683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jr3us", "html_url": "https://github.com/jr3us", "followers_url": "https://api.github.com/users/jr3us/followers", "following_url": "https://api.github.com/users/jr3us/following{/other_user}", "gists_url": "https://api.github.com/users/jr3us/gists{/gist_id}", "starred_url": "https://api.github.com/users/jr3us/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jr3us/subscriptions", "organizations_url": "https://api.github.com/users/jr3us/orgs", "repos_url": "https://api.github.com/users/jr3us/repos", "events_url": "https://api.github.com/users/jr3us/events{/privacy}", "received_events_url": "https://api.github.com/users/jr3us/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 223, "created_at": "2018-12-03T00:00:07Z", "updated_at": "2019-09-05T09:41:57Z", "closed_at": "2019-01-08T20:30:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Copied title over here per @cdce8p recommendation:\r\n\r\nThe issue on home assistant is #15675 has the history for what has happened, but I'll paste my last commentary here.\r\n\r\nAfter uprading to 83.1 this morning, and still using the same platform as described initially, I am also seeing that I have no response more often than I have valid information in the Home app for iOS.\r\n\r\nAs @dmonagle indicated on home assistant pull request #18355, the status for devices in Home will work correctly for a few minutes, and then go No response for 4 or 5 minutes.\r\n\r\nSide note:\r\nI had to comment out the start up automation I used above as homeassistant complained about the action: homekit.start. I also removed the autostart False so it would start up.\r\n\r\nRegards!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/175", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/175/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/175/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/175", "id": 386397277, "node_id": "MDU6SXNzdWUzODYzOTcyNzc=", "number": 175, "title": "Homekit Camera", "user": {"login": "Dav0815", "id": 35415680, "node_id": "MDQ6VXNlcjM1NDE1Njgw", "avatar_url": "https://avatars0.githubusercontent.com/u/35415680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dav0815", "html_url": "https://github.com/Dav0815", "followers_url": "https://api.github.com/users/Dav0815/followers", "following_url": "https://api.github.com/users/Dav0815/following{/other_user}", "gists_url": "https://api.github.com/users/Dav0815/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dav0815/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dav0815/subscriptions", "organizations_url": "https://api.github.com/users/Dav0815/orgs", "repos_url": "https://api.github.com/users/Dav0815/repos", "events_url": "https://api.github.com/users/Dav0815/events{/privacy}", "received_events_url": "https://api.github.com/users/Dav0815/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-01T00:24:10Z", "updated_at": "2018-12-01T01:23:36Z", "closed_at": "2018-12-01T01:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry, wrong place\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/174", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/174/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/174/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/174", "id": 382970769, "node_id": "MDU6SXNzdWUzODI5NzA3Njk=", "number": 174, "title": "Multiple bridge", "user": {"login": "quadcube", "id": 13719009, "node_id": "MDQ6VXNlcjEzNzE5MDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/13719009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quadcube", "html_url": "https://github.com/quadcube", "followers_url": "https://api.github.com/users/quadcube/followers", "following_url": "https://api.github.com/users/quadcube/following{/other_user}", "gists_url": "https://api.github.com/users/quadcube/gists{/gist_id}", "starred_url": "https://api.github.com/users/quadcube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quadcube/subscriptions", "organizations_url": "https://api.github.com/users/quadcube/orgs", "repos_url": "https://api.github.com/users/quadcube/repos", "events_url": "https://api.github.com/users/quadcube/events{/privacy}", "received_events_url": "https://api.github.com/users/quadcube/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-21T06:12:39Z", "updated_at": "2018-11-21T16:15:11Z", "closed_at": "2018-11-21T07:24:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't implement more than one bridge on the HAP-python. Is it possible to implement multiple bridges at the same time?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/173", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/173/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/173/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/173", "id": 380653578, "node_id": "MDU6SXNzdWUzODA2NTM1Nzg=", "number": 173, "title": "Can`t share home in HomeKit app", "user": {"login": "dpylypen", "id": 24359961, "node_id": "MDQ6VXNlcjI0MzU5OTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/24359961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpylypen", "html_url": "https://github.com/dpylypen", "followers_url": "https://api.github.com/users/dpylypen/followers", "following_url": "https://api.github.com/users/dpylypen/following{/other_user}", "gists_url": "https://api.github.com/users/dpylypen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpylypen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpylypen/subscriptions", "organizations_url": "https://api.github.com/users/dpylypen/orgs", "repos_url": "https://api.github.com/users/dpylypen/repos", "events_url": "https://api.github.com/users/dpylypen/events{/privacy}", "received_events_url": "https://api.github.com/users/dpylypen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-14T11:23:04Z", "updated_at": "2018-11-15T17:40:16Z", "closed_at": "2018-11-15T17:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I give access to home with HomeKit app (on iPhone to iPhone for example) with bridge on HAP-python lib bride is not working with new device. How I can share access to bridges for several devices?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/172", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/172/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/172/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/172", "id": 379989716, "node_id": "MDU6SXNzdWUzNzk5ODk3MTY=", "number": 172, "title": "HAP server error: Dictionary changed size during iteration", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-11-12T23:12:07Z", "updated_at": "2019-01-03T18:55:35Z", "closed_at": "2019-01-03T18:55:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Error reported by @ehendrix23\r\nObserved with `2.4.0`, but as the diff suggested, it hasn't been fixed yet.\r\n\r\n```\r\n2018-11-12 08:42:48 INFO (SyncWorker_0) [pyhap.hap_server] Stopping HAP server\r\n----------------------------------------\r\nException happened during processing of request from ('xxx.xxx.x.xxx', 51818)\r\n2018-11-12 08:42:48 ERROR (SyncWorker_18) [asyncio] Task exception was never retrieved future:\r\n  <Task finished coro=<AccessoryDriver.async_stop() done,\r\n  defined at /Users/Media/homeassistant/lib/python3.7/site-packages/pyhap/accessory_driver.py:278>\r\n  exception=RuntimeError('dictionary changed size during iteration')>\r\nTraceback (most recent call last):\r\nFile \"/Users/Media/homeassistant/lib/python3.7/site-packages/pyhap/accessory_driver.py\", line 280, in async_stop\r\n  await self.async_add_job(self._do_stop)\r\nFile \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n  result = self.fn(*self.args, **self.kwargs)\r\nFile \"/Users/Media/homeassistant/lib/python3.7/site-packages/pyhap/accessory_driver.py\", line 310, in _do_stop\r\n  self.http_server.server_close()\r\nFile \"/Users/Media/homeassistant/lib/python3.7/site-packages/pyhap/hap_server.py\", line 830, in server_close\r\n  for sock in self.connections.values():\r\nRuntimeError: dictionary changed size during iteration\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/169", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/169/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/169/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/169", "id": 376829859, "node_id": "MDU6SXNzdWUzNzY4Mjk4NTk=", "number": 169, "title": "Asyncio - SafeChildWatcher", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-02T14:21:43Z", "updated_at": "2018-11-05T20:34:58Z", "closed_at": "2018-11-05T20:34:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/ikalchev/HAP-python/blob/dev/pyhap/accessory_driver.py#L201-L203\r\n\r\n`watcher.attach_loop` only works if the loop is in the main thread which isn't the case for Home Assistant. Thus this breaks it. As far as I understand the documentation for it, it isn't even necessary: https://docs.python.org/3/library/asyncio-policy.html#asyncio.SafeChildWatcher", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/167", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/167/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/167/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/167", "id": 376175688, "node_id": "MDU6SXNzdWUzNzYxNzU2ODg=", "number": 167, "title": "Networking issue - CLOSE_WAIT", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-31T21:55:04Z", "updated_at": "2018-11-01T07:26:19Z", "closed_at": "2018-11-01T07:26:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems there is an issue where the TCP connection isn't closed completely and instead the socket hangs at `CLOSE_WAIT`: https://github.com/home-assistant/home-assistant/issues/16692\r\nThe issue is referring to the versions `2.2.2` and `2.3.0` of HAP-python.\r\n\r\nAnother maybe related issue is, that HAP-python sometimes takes it time to shutdown: https://github.com/home-assistant/home-assistant/issues/17365\r\nAlso version `2.2.2` and `2.3.0`.\r\n\r\nI haven't started debugging yet, just wanted to get this out here.\r\n\r\n---\r\n\r\nCC: @dmonagle, @ehendrix23, @jr3us", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/160", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/160/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/160/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/160", "id": 369926922, "node_id": "MDU6SXNzdWUzNjk5MjY5MjI=", "number": 160, "title": "mDNS not publishing when running in FreeBSD VNET jail", "user": {"login": "Wraul", "id": 302716, "node_id": "MDQ6VXNlcjMwMjcxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/302716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wraul", "html_url": "https://github.com/Wraul", "followers_url": "https://api.github.com/users/Wraul/followers", "following_url": "https://api.github.com/users/Wraul/following{/other_user}", "gists_url": "https://api.github.com/users/Wraul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wraul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wraul/subscriptions", "organizations_url": "https://api.github.com/users/Wraul/orgs", "repos_url": "https://api.github.com/users/Wraul/repos", "events_url": "https://api.github.com/users/Wraul/events{/privacy}", "received_events_url": "https://api.github.com/users/Wraul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-14T17:58:54Z", "updated_at": "2020-04-10T16:01:44Z", "closed_at": "2020-04-10T16:01:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I had a lot of trouble with Home Assistant not showing up in the iOS home app when trying to pair.\r\n\r\nI first tried the patched `accessory_driver.py` posted in this issue https://github.com/home-assistant/home-assistant/issues/17181\r\nThis did not improve things.\r\nSo I decided to do a bit of digging, and after a bit of experimental changes to the patched `accessory_driver.py` I managed to solve my issues.\r\n\r\nI changed the intialization of `Zeroconf` from \r\n\r\n```python\r\nself.advertiser = Zeroconf()\r\n```\r\nto\r\n```python\r\nself.advertiser = Zeroconf(InterfaceChoice.Default, False)\r\n```\r\n\r\nOne must also import `InterfaceChoice` by changing\r\n```python\r\nfrom zeroconf import ServiceInfo, Zeroconf, NonUniqueNameException\r\n```\r\nto\r\n```python\r\nfrom zeroconf import ServiceInfo, Zeroconf, NonUniqueNameException, InterfaceChoice\r\n```\r\n\r\nSo it appears that the default value of `InterfaceChoice.All` causes Zeroconf to fail to listen correctly.\r\n\r\nNot 100% confident if the problem is with Zeroconf or with ifaddr which Zeroconf uses.\r\nI'm reporting this here though if someone else encounters this, or if you want to work around the problem similar to how I did.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/156", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/156/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/156/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/156", "id": 366772423, "node_id": "MDU6SXNzdWUzNjY3NzI0MjM=", "number": 156, "title": "New Accessories - Faucet, Valve, Sprinklers, ...", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-04T12:46:17Z", "updated_at": "2018-10-04T19:06:00Z", "closed_at": "2018-10-04T17:29:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@ikalchev Can you run the script to see if they are available?\r\nIf not, I have found another project that has already implemented them, so I could reverse engineer it from there.\r\n\r\nhttps://github.com/maximkulkin/esp-homekit/commit/f064988e023f705908e815b90b35ecd9abff52cf\r\nhttps://github.com/maximkulkin/esp-homekit/blob/master/include/homekit/characteristics.h#L585-L601", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/153", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/153/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/153/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/153", "id": 361267737, "node_id": "MDU6SXNzdWUzNjEyNjc3Mzc=", "number": 153, "title": "Perpetual Updating and No Response ", "user": {"login": "LasCabos", "id": 42500301, "node_id": "MDQ6VXNlcjQyNTAwMzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/42500301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LasCabos", "html_url": "https://github.com/LasCabos", "followers_url": "https://api.github.com/users/LasCabos/followers", "following_url": "https://api.github.com/users/LasCabos/following{/other_user}", "gists_url": "https://api.github.com/users/LasCabos/gists{/gist_id}", "starred_url": "https://api.github.com/users/LasCabos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LasCabos/subscriptions", "organizations_url": "https://api.github.com/users/LasCabos/orgs", "repos_url": "https://api.github.com/users/LasCabos/repos", "events_url": "https://api.github.com/users/LasCabos/events{/privacy}", "received_events_url": "https://api.github.com/users/LasCabos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-09-18T11:54:39Z", "updated_at": "2018-09-24T04:44:23Z", "closed_at": "2018-09-23T11:17:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After pulling your latest changes (commit addb6aa) any sensors or bridges added are in a perpetual state of updating and no response as indicated in the HomeKit iOS App. I have tested this on iOS versions 11.0.3, 11.4.1 and 12.0.0 using your main.py using a bridge setup with 2 temperature sensors and a single lightBulb accessory. On occasion a request will be received by the iOS device but revert to the updating and eventually no response state. \r\n\r\nI pulled commit 5e8a981 and ran with the 3 accessory bridge in main.py. Connecting and updating with iOS 12 works fine. The problem appears to have happened between these two commits. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/152", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/152/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/152/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/152", "id": 358553189, "node_id": "MDU6SXNzdWUzNTg1NTMxODk=", "number": 152, "title": "mqtt2homekit Accessory", "user": {"login": "caius88", "id": 43134410, "node_id": "MDQ6VXNlcjQzMTM0NDEw", "avatar_url": "https://avatars1.githubusercontent.com/u/43134410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caius88", "html_url": "https://github.com/caius88", "followers_url": "https://api.github.com/users/caius88/followers", "following_url": "https://api.github.com/users/caius88/following{/other_user}", "gists_url": "https://api.github.com/users/caius88/gists{/gist_id}", "starred_url": "https://api.github.com/users/caius88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caius88/subscriptions", "organizations_url": "https://api.github.com/users/caius88/orgs", "repos_url": "https://api.github.com/users/caius88/repos", "events_url": "https://api.github.com/users/caius88/events{/privacy}", "received_events_url": "https://api.github.com/users/caius88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-10T10:03:24Z", "updated_at": "2020-08-03T02:15:00Z", "closed_at": "2018-10-03T19:20:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, this is an amazing project! I'm building my personal smart home ecosystem on top of HomeKit with this implementation. I would like to use a unique standard protocol like MQTT (i.e. python library paho-mqtt) for communication between sensors and my custom HAP-python hub.\r\n\r\nAs the title states, can u add an accessory that subscribe to a given MQTT topic and update its value at the HomeKit side when the sensor publish an update?\r\n\r\nI know there are issues like the types of values (int, strings, ecc..) in the communication with MQTT but i only need an example of implementation (e.g. an integer reading of a temperature sensor) to start. My actual wall in the implementation is how to manage the loop where the mqtt client wait for a message inside the accessory loop (@Accessory.run_at_interval() method).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/149", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/149/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/149/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/149", "id": 358365100, "node_id": "MDU6SXNzdWUzNTgzNjUxMDA=", "number": 149, "title": "Inconsistent documentation/code/warning in deprecated method.", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-09T09:48:39Z", "updated_at": "2018-09-09T12:23:34Z", "closed_at": "2018-09-09T12:23:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `accessory.py` there is the following method:\r\n\r\n    def config_changed(self):\r\n        \"\"\"Notify the accessory about configuration changes.\r\n\r\n        These include new services or updated characteristic values, e.g.\r\n        the Name of a service changed.\r\n\r\n        This method also notifies the driver about the change, so that it can\r\n        publish the changes to the world.\r\n\r\n        .. note:: If you are changing the configuration of a bridged accessory\r\n           (i.e. an Accessory that is contained in a Bridge),\r\n           you should call the `config_changed` method on the Bridge.\r\n\r\n        Deprecated. Use `driver.state_change()` instead.\r\n\r\n        \"\"\"\r\n        logger.warning(\r\n            'This method is now deprecated. Use \\' '\r\n            'driver.state_version\\' instead.')\r\n        self.driver.state_changed()\r\n\r\nThe comment, deprecation warning and code all have different names, and it's not actually clear what the actual change I need to make to my code is. I suspect it's the code in the `..note`, because none of the other names appear to actually exist in the code base.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/148", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/148/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/148/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/148", "id": 354111885, "node_id": "MDU6SXNzdWUzNTQxMTE4ODU=", "number": 148, "title": "Reset accessory switch/function", "user": {"login": "ev3rest", "id": 13076941, "node_id": "MDQ6VXNlcjEzMDc2OTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/13076941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ev3rest", "html_url": "https://github.com/ev3rest", "followers_url": "https://api.github.com/users/ev3rest/followers", "following_url": "https://api.github.com/users/ev3rest/following{/other_user}", "gists_url": "https://api.github.com/users/ev3rest/gists{/gist_id}", "starred_url": "https://api.github.com/users/ev3rest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ev3rest/subscriptions", "organizations_url": "https://api.github.com/users/ev3rest/orgs", "repos_url": "https://api.github.com/users/ev3rest/repos", "events_url": "https://api.github.com/users/ev3rest/events{/privacy}", "received_events_url": "https://api.github.com/users/ev3rest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-26T17:18:17Z", "updated_at": "2018-08-26T17:21:00Z", "closed_at": "2018-08-26T17:20:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "There should be reset state/device function implemented (in case pin was lost and device deleted from the app)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/145", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/145/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/145/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/145", "id": 352293272, "node_id": "MDU6SXNzdWUzNTIyOTMyNzI=", "number": 145, "title": "HAPServer doesn't close sockets and eventually hits OS limit", "user": {"login": "undersun81", "id": 3389328, "node_id": "MDQ6VXNlcjMzODkzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3389328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/undersun81", "html_url": "https://github.com/undersun81", "followers_url": "https://api.github.com/users/undersun81/followers", "following_url": "https://api.github.com/users/undersun81/following{/other_user}", "gists_url": "https://api.github.com/users/undersun81/gists{/gist_id}", "starred_url": "https://api.github.com/users/undersun81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/undersun81/subscriptions", "organizations_url": "https://api.github.com/users/undersun81/orgs", "repos_url": "https://api.github.com/users/undersun81/repos", "events_url": "https://api.github.com/users/undersun81/events{/privacy}", "received_events_url": "https://api.github.com/users/undersun81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-08-20T20:56:00Z", "updated_at": "2019-02-23T17:47:35Z", "closed_at": "2018-11-11T21:00:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "After running hap for several days my system hit the limit of listen sockets (128 default on raspbian). Most of them in CLOSE_WAIT, so hap-client sent FIN but hap-server code didn't handle it correctly (it suppose to close socket).\r\n```\r\n>netstat -an | egrep 51826.+CLOSE_WAIT | wc -l\r\n122\r\n```\r\nBriefly looked into hap_server.py, can't see how is this situation handled", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/139", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/139/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/139/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/139", "id": 338880413, "node_id": "MDU6SXNzdWUzMzg4ODA0MTM=", "number": 139, "title": "How to re-add accessories?", "user": {"login": "ilyamordasov", "id": 7156133, "node_id": "MDQ6VXNlcjcxNTYxMzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7156133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilyamordasov", "html_url": "https://github.com/ilyamordasov", "followers_url": "https://api.github.com/users/ilyamordasov/followers", "following_url": "https://api.github.com/users/ilyamordasov/following{/other_user}", "gists_url": "https://api.github.com/users/ilyamordasov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilyamordasov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilyamordasov/subscriptions", "organizations_url": "https://api.github.com/users/ilyamordasov/orgs", "repos_url": "https://api.github.com/users/ilyamordasov/repos", "events_url": "https://api.github.com/users/ilyamordasov/events{/privacy}", "received_events_url": "https://api.github.com/users/ilyamordasov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-06T10:02:10Z", "updated_at": "2018-07-06T21:50:20Z", "closed_at": "2018-07-06T21:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I remove all accessories from HomeKit and try to add the new one, I can't see the pairing code. If I reboot HAP-bridge it's waiting for the accesories from HomeKit.\r\n\r\n`INFO:pyhap.accessory_driver:Loading Accessory state from accessory.state\r\nINFO:pyhap.accessory_driver:Starting the event loop\r\nINFO:pyhap.accessory_driver:Starting accessory Bridge on address 10.0.50.41, port 51826.`\r\n\r\nFor example in Homebridge you have to delete 2 folders from .homebridge to initialise again accessories", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/137", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/137/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/137/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/137", "id": 338427815, "node_id": "MDU6SXNzdWUzMzg0Mjc4MTU=", "number": 137, "title": "Home App \"Couldn't add Bridge\" error", "user": {"login": "KyleLeneau", "id": 103716, "node_id": "MDQ6VXNlcjEwMzcxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/103716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KyleLeneau", "html_url": "https://github.com/KyleLeneau", "followers_url": "https://api.github.com/users/KyleLeneau/followers", "following_url": "https://api.github.com/users/KyleLeneau/following{/other_user}", "gists_url": "https://api.github.com/users/KyleLeneau/gists{/gist_id}", "starred_url": "https://api.github.com/users/KyleLeneau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KyleLeneau/subscriptions", "organizations_url": "https://api.github.com/users/KyleLeneau/orgs", "repos_url": "https://api.github.com/users/KyleLeneau/repos", "events_url": "https://api.github.com/users/KyleLeneau/events{/privacy}", "received_events_url": "https://api.github.com/users/KyleLeneau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-05T05:02:25Z", "updated_at": "2018-07-10T18:22:00Z", "closed_at": "2018-07-10T18:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am not sure the best way to report this issue to you but I have run across something that is very similar to this issue: https://github.com/home-assistant/home-assistant/issues/12868\r\n\r\nFrom the logs it looks like everything is pairing correctly but the Home app is reporting that it can't connect to the accessory afterwards. I am using the latest version of the distribution from PyPi (2.2.2) with no luck and have tried from source and modified the MDNS advertisement like the issue above mentioned.\r\n\r\nI have had this project working in the past on a 1.x version but have decided to upgrade to the latest.\r\n\r\nI am also still in the development phase and am running my app on a MacBook Pro. Both phone and laptop are on the same network as well. What is puzzling is that I don't see any errors from the HAP side.\r\n\r\nAny help or direction would be super helpful. I am happy to help share what I am working on and contribute back to the examples based on the changes in the API I am encountering as well.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/136", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/136/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/136/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/136", "id": 337961087, "node_id": "MDU6SXNzdWUzMzc5NjEwODc=", "number": 136, "title": "HAP-Python in MicroPython", "user": {"login": "Sunrise17", "id": 26038249, "node_id": "MDQ6VXNlcjI2MDM4MjQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/26038249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sunrise17", "html_url": "https://github.com/Sunrise17", "followers_url": "https://api.github.com/users/Sunrise17/followers", "following_url": "https://api.github.com/users/Sunrise17/following{/other_user}", "gists_url": "https://api.github.com/users/Sunrise17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sunrise17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sunrise17/subscriptions", "organizations_url": "https://api.github.com/users/Sunrise17/orgs", "repos_url": "https://api.github.com/users/Sunrise17/repos", "events_url": "https://api.github.com/users/Sunrise17/events{/privacy}", "received_events_url": "https://api.github.com/users/Sunrise17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-03T15:58:20Z", "updated_at": "2019-05-06T10:34:12Z", "closed_at": "2018-08-21T19:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "@ikalchev , how can i apply an accessory code, on ESP32 board? \r\nMicropython is already installed on my board. Is it possible to use HAP-Python accessories on Micropython?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/134", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/134/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/134/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/134", "id": 332996461, "node_id": "MDU6SXNzdWUzMzI5OTY0NjE=", "number": 134, "title": "How to assign a unique topic or ID to an accessory.", "user": {"login": "p000", "id": 7334147, "node_id": "MDQ6VXNlcjczMzQxNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7334147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p000", "html_url": "https://github.com/p000", "followers_url": "https://api.github.com/users/p000/followers", "following_url": "https://api.github.com/users/p000/following{/other_user}", "gists_url": "https://api.github.com/users/p000/gists{/gist_id}", "starred_url": "https://api.github.com/users/p000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p000/subscriptions", "organizations_url": "https://api.github.com/users/p000/orgs", "repos_url": "https://api.github.com/users/p000/repos", "events_url": "https://api.github.com/users/p000/events{/privacy}", "received_events_url": "https://api.github.com/users/p000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-16T15:57:15Z", "updated_at": "2018-06-18T20:19:08Z", "closed_at": "2018-06-18T17:03:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/94", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/94/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/94/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/94", "id": 316508077, "node_id": "MDU6SXNzdWUzMTY1MDgwNzc=", "number": 94, "title": "Remote access accessories", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-21T17:07:09Z", "updated_at": "2018-04-22T17:22:52Z", "closed_at": "2018-04-22T17:22:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "HomeKit supports devices accessing the accessories through hubs. This seems to work with `homebridge`, but not with `HAP-python`. Do you know if it's something we can fix or if it's on Apple's side?\r\n\r\nRelated:\r\nhttps://github.com/home-assistant/home-assistant/issues/13981", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/78", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/78/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/78/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/78", "id": 311118019, "node_id": "MDU6SXNzdWUzMTExMTgwMTk=", "number": 78, "title": "[Feature Request] getter callback", "user": {"login": "thomaspurchas", "id": 782311, "node_id": "MDQ6VXNlcjc4MjMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/782311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaspurchas", "html_url": "https://github.com/thomaspurchas", "followers_url": "https://api.github.com/users/thomaspurchas/followers", "following_url": "https://api.github.com/users/thomaspurchas/following{/other_user}", "gists_url": "https://api.github.com/users/thomaspurchas/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaspurchas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaspurchas/subscriptions", "organizations_url": "https://api.github.com/users/thomaspurchas/orgs", "repos_url": "https://api.github.com/users/thomaspurchas/repos", "events_url": "https://api.github.com/users/thomaspurchas/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaspurchas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-04T07:39:21Z", "updated_at": "2018-05-09T13:33:26Z", "closed_at": "2018-05-09T13:33:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that in all the example accessories there is always some sort of polling loop updating a char `value`.\r\n\r\nI think it would be good to add a `getter_callback` (in addition to the `setter_callback`) that is called when an iOS client requests a char `value`. Then the request can trigger a sensor poll, returning the most recent data, updating the local `value`, and sending any notifications.\r\n\r\nThis would also remove the need for an explicit polling loop in most cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/68", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/68/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/68/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/68", "id": 309744311, "node_id": "MDU6SXNzdWUzMDk3NDQzMTE=", "number": 68, "title": "Type for ColorTemperature is missing", "user": {"login": "morberg", "id": 956034, "node_id": "MDQ6VXNlcjk1NjAzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/956034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morberg", "html_url": "https://github.com/morberg", "followers_url": "https://api.github.com/users/morberg/followers", "following_url": "https://api.github.com/users/morberg/following{/other_user}", "gists_url": "https://api.github.com/users/morberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/morberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morberg/subscriptions", "organizations_url": "https://api.github.com/users/morberg/orgs", "repos_url": "https://api.github.com/users/morberg/repos", "events_url": "https://api.github.com/users/morberg/events{/privacy}", "received_events_url": "https://api.github.com/users/morberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-29T12:58:07Z", "updated_at": "2018-03-29T20:45:32Z", "closed_at": "2018-03-29T19:09:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find [color temperature](https://developer.apple.com/documentation/homekit/hmcharacteristictypecolortemperature) anywhere in the [characteristics.json](https://github.com/ikalchev/HAP-python/blob/dev/pyhap/resources/characteristics.json) file.\r\n\r\nThe HAP-NodeJS implementation has a [color temperature characteristic in HomeKitTypes.js](https://github.com/KhaosT/HAP-NodeJS/blob/a4f806d4eccf97cbb4995207e3225937b7622519/lib/gen/HomeKitTypes.js#L350)\r\n\r\nI think you need this if you want to enable white spectrum lights that supports setting color temperature, but not full color spectrum?\r\n\r\nEdit: I think you also need color temperature as an [OptionalCharacteristic of the Lightbulb service](https://github.com/ikalchev/HAP-python/blob/dev/pyhap/resources/services.json#L304)? HAP-NodeJS seems to have [added this manually](https://github.com/KhaosT/HAP-NodeJS/blob/a4f806d4eccf97cbb4995207e3225937b7622519/lib/gen/HomeKitTypes.js#L3143).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/64", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/64/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/64/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/64", "id": 307798099, "node_id": "MDU6SXNzdWUzMDc3OTgwOTk=", "number": 64, "title": "Async support", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-03-22T20:14:36Z", "updated_at": "2018-11-10T08:03:25Z", "closed_at": "2018-08-21T19:47:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `HAP-python` uses threads which, at least on a larger scale, does impact performance quite a bit. Are there plans to change to an async framework, like `asyncio` in the future?\r\n\r\nUnfortunately this would also require a more recent min python version, to take full advantage of the new async syntax introduced with py3.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/61", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/61/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/61/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/61", "id": 306587201, "node_id": "MDU6SXNzdWUzMDY1ODcyMDE=", "number": 61, "title": "Sixth added accessory to a bridge does not work?!", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-03-19T18:48:42Z", "updated_at": "2018-03-25T09:42:31Z", "closed_at": "2018-03-25T09:42:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have 10 lightbulbs devices but for some reason one or two of them randomly  gets not supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/60", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/60/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/60/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/60", "id": 301967926, "node_id": "MDU6SXNzdWUzMDE5Njc5MjY=", "number": 60, "title": "Http bridge switch", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-03T04:35:08Z", "updated_at": "2018-10-03T19:48:14Z", "closed_at": "2018-10-03T19:48:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is possible ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/59", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/59/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/59/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/59", "id": 301280342, "node_id": "MDU6SXNzdWUzMDEyODAzNDI=", "number": 59, "title": "Pairing not initiating/completing.", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-01T05:15:59Z", "updated_at": "2018-03-01T05:59:25Z", "closed_at": "2018-03-01T05:58:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm still hunting down exactly what's going on, but it seems that for some reason I can't successfully pair _any_ HAP-python accessories any longer.\r\n\r\nI'm not sure this is something that has changed with our code, as I un-paired and then attempted to re-pair with one that I know worked a couple of weeks ago, but without any luck.\r\n\r\nIf you check out the repo to `master`, and then run `tox -e temperature`, it should start a server, and show the QR code. In my case, I'm not able to finish the pairing process.\r\n\r\n![img_0283](https://user-images.githubusercontent.com/23411/36828108-9277b5d6-1d67-11e8-8da8-78f8681c52c8.jpg)\r\n\r\nI've turned logging up to DEBUG, and I don't see the pairing being initiated at all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/53", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/53/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/53/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/53", "id": 298430887, "node_id": "MDU6SXNzdWUyOTg0MzA4ODc=", "number": 53, "title": "Camera accessory ", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 842435700, "node_id": "MDU6TGFiZWw4NDI0MzU3MDA=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/protocol", "name": "protocol", "color": "e29381", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 148, "created_at": "2018-02-19T23:51:07Z", "updated_at": "2019-05-06T22:15:19Z", "closed_at": "2018-10-24T20:17:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "is possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/52", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/52/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/52/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/52", "id": 298423016, "node_id": "MDU6SXNzdWUyOTg0MjMwMTY=", "number": 52, "title": "Race condition when setting timeout for send event; Document Characteristic.setter_callback", "user": {"login": "rodriguez-lucas", "id": 17937384, "node_id": "MDQ6VXNlcjE3OTM3Mzg0", "avatar_url": "https://avatars2.githubusercontent.com/u/17937384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodriguez-lucas", "html_url": "https://github.com/rodriguez-lucas", "followers_url": "https://api.github.com/users/rodriguez-lucas/followers", "following_url": "https://api.github.com/users/rodriguez-lucas/following{/other_user}", "gists_url": "https://api.github.com/users/rodriguez-lucas/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodriguez-lucas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodriguez-lucas/subscriptions", "organizations_url": "https://api.github.com/users/rodriguez-lucas/orgs", "repos_url": "https://api.github.com/users/rodriguez-lucas/repos", "events_url": "https://api.github.com/users/rodriguez-lucas/events{/privacy}", "received_events_url": "https://api.github.com/users/rodriguez-lucas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778579, "node_id": "MDU6TGFiZWw3MTk3Nzg1Nzk=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 841345953, "node_id": "MDU6TGFiZWw4NDEzNDU5NTM=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/documentation", "name": "documentation", "color": "006b75", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-19T22:59:45Z", "updated_at": "2018-02-21T21:35:22Z", "closed_at": "2018-02-21T21:07:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm trying to set up a door (`LockMechanism` service) and I'm having this problem: the hap_server responds with timed out.\r\n\r\nThe door is initially closed and then I tap to open it within the apple's home app.\r\n\r\nHere is what I have:\r\n\r\nmain.py\r\n``` python\r\n\"\"\"An example of how to setup and start an Accessory.\r\n\r\nThis is:\r\n1. Create the Accessory object you want.\r\n2. Add it to an AccessoryDriver, which will advertise it on the local network,\r\n    setup a server to answer client queries, etc.\r\n\"\"\"\r\nimport logging\r\nimport signal\r\n\r\nfrom pyhap.accessories.ElectronicLock import ElectronicLock\r\nfrom pyhap.accessory import Bridge\r\nfrom pyhap.accessory_driver import AccessoryDriver\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\ndef get_accessory():\r\n    \"\"\"Call this method to get a standalone Accessory.\"\"\"\r\n    acc = ElectronicLock(\"Door\")\r\n    return acc\r\n\r\nacc = get_accessory()\r\n\r\n# Start the accessory on port 51826\r\ndriver = AccessoryDriver(acc, port=51826)\r\n# We want KeyboardInterrupts and SIGTERM (kill) to be handled by the driver itself,\r\n# so that it can gracefully stop the accessory, server and advertising.\r\nsignal.signal(signal.SIGINT, driver.signal_handler)\r\nsignal.signal(signal.SIGTERM, driver.signal_handler)\r\n# Start it!\r\ndriver.start()\r\n```\r\n\r\nElectronicLock.py\r\n```python\r\nfrom pyhap.accessory import Accessory, Category\r\nimport pyhap.loader as loader\r\n\r\nclass LOCK_STATE:\r\n   OPEN = 0\r\n   CLOSED = 1\r\n\r\nclass ElectronicLock(Accessory):\r\n   category = Category.DOOR\r\n\r\n   def __init__(self, *args, **kwargs):\r\n      super(ElectronicLock, self).__init__(*args, **kwargs)\r\n\r\n   def set_state(self, value):\r\n      self.get_service(\"LockMechanism\").get_characteristic(\"LockCurrentState\").set_value(value)\r\n      self.get_service(\"LockMechanism\").get_characteristic(\"LockTargetState\").set_value(value, should_callback=False)\r\n\r\n   def lock_target_callback(self, value):\r\n      if value == LOCK_STATE.OPEN:\r\n         print(\"OPEN\")\r\n      else:\r\n         print(\"CLOSED\")\r\n      self.set_state(value)\r\n\r\n   def _set_services(self):\r\n      super(ElectronicLock, self)._set_services()\r\n      lm_service = loader.get_serv_loader().get(\"LockMechanism\")\r\n      self.add_service(lm_service)\r\n      lm_service.get_characteristic(\"LockTargetState\").setter_callback = self.lock_target_callback\r\n\r\n```\r\n\r\nterminal log:\r\n```\r\nDEBUG:pyhap.hap_server:Request PUT from address '('192.168.1.100', 54902)' for path '/characteristics'.\r\nINFO:pyhap.hap_server:192.168.1.100 - \"PUT /characteristics HTTP/1.1\" 207 -\r\nDEBUG:pyhap.hap_server:Request GET from address '('192.168.1.100', 54902)' for path '/characteristics?id=1.8,1.9'.\r\nINFO:pyhap.hap_server:192.168.1.100 - \"GET /characteristics?id=1.8,1.9 HTTP/1.1\" 207 -\r\nDEBUG:pyhap.hap_server:Request PUT from address '('192.168.1.100', 54902)' for path '/characteristics'.\r\nOPEN\r\nINFO:pyhap.hap_server:192.168.1.100 - \"PUT /characteristics HTTP/1.1\" 207 -\r\nINFO:pyhap.hap_server:192.168.1.100 - Request timed out: timeout('timed out',)\r\n```\r\n\r\nThe thing is that after the time out occurs, the server seems to stop listening new requests. I took a look at `HAPServerHandler -> BaseHTTPRequestHandler` but I couldn't find anything.\r\n\r\nAny ideas why this is happening?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/46", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/46/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/46/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/46", "id": 298168119, "node_id": "MDU6SXNzdWUyOTgxNjgxMTk=", "number": 46, "title": "Sphinx Documentation", "user": {"login": "jslay88", "id": 6158929, "node_id": "MDQ6VXNlcjYxNTg5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6158929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jslay88", "html_url": "https://github.com/jslay88", "followers_url": "https://api.github.com/users/jslay88/followers", "following_url": "https://api.github.com/users/jslay88/following{/other_user}", "gists_url": "https://api.github.com/users/jslay88/gists{/gist_id}", "starred_url": "https://api.github.com/users/jslay88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jslay88/subscriptions", "organizations_url": "https://api.github.com/users/jslay88/orgs", "repos_url": "https://api.github.com/users/jslay88/repos", "events_url": "https://api.github.com/users/jslay88/events{/privacy}", "received_events_url": "https://api.github.com/users/jslay88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-19T05:51:49Z", "updated_at": "2018-02-19T06:25:38Z", "closed_at": "2018-02-19T06:25:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Wanted to open an issue to discuss this PR.\r\n\r\nWe should get some Sphinx (or some other auto-generated documentation) in place now that HA is starting to pick up interest. This will help a lot with new people.\r\n\r\nSome basic stuff has been added, wanted to get feedback before I went too deep down the rabbit hole.\r\nIt's setup on the ReadTheDocs theme.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/45", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/45/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/45/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/45", "id": 298130363, "node_id": "MDU6SXNzdWUyOTgxMzAzNjM=", "number": 45, "title": "Accessory Object parameters", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-18T23:41:19Z", "updated_at": "2018-05-13T21:28:38Z", "closed_at": "2018-05-13T21:28:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The issue regarding https://github.com/home-assistant/home-assistant/pull/12488#discussion_r168964460\r\n\r\nAs I mentioned above, I personally don't like the way `Hap-python` handles the `__init__` calls for Accessories. At the moment calls look something like this:\r\n\r\n### main.py\r\n` acc = TemperatureSensor(display_name='Temperatur')`\r\n\r\n### TemperatureSensor(Accessory)\r\n```py\r\ndef __init__(self, *args, **kwargs):\r\n    super().__init__(*args, **kwargs)\r\n```\r\nParameter are just being forwarded until Accessory. If you at a wrapper class in between, another level that just forwards the information is introduced.\r\n\r\nIn python their should be a better way to do this, although that might require some more remodeling. Unfortunately I woun't have time until the next weekend to take a deeper look at it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/44", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/44/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/44/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/44", "id": 298050580, "node_id": "MDU6SXNzdWUyOTgwNTA1ODA=", "number": 44, "title": "Suggestion: Dev branch for repo", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 842649615, "node_id": "MDU6TGFiZWw4NDI2NDk2MTU=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/lifecycle/dev", "name": "lifecycle/dev", "color": "e8af6a", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-18T01:18:42Z", "updated_at": "2018-02-26T05:15:28Z", "closed_at": "2018-02-25T11:10:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Maybe it could be a good idea to create a `dev` branch for this project.\r\nAll PR's would be against the dev branch and later merged with one PR to master.\r\n\r\nThis would allow for easier maintenance of other projects using `HAP-Python` with the added benefit of a rough change log for each new version in the master branch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/43", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/43/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/43/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/43", "id": 298050227, "node_id": "MDU6SXNzdWUyOTgwNTAyMjc=", "number": 43, "title": "Suggestion: HAP-python-min", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 842649615, "node_id": "MDU6TGFiZWw4NDI2NDk2MTU=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/lifecycle/dev", "name": "lifecycle/dev", "color": "e8af6a", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-18T01:11:34Z", "updated_at": "2018-05-19T05:40:11Z", "closed_at": "2018-05-19T05:40:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was thinking if it would make sense to add a new **pypi** project: `HAP-python-min`. This would include all content from `pyhap` except for the `accessories` folder.\r\n\r\nI'm currently working on a component for [Home Assistant](https://github.com/home-assistant/home-assistant). Some of the examples form the accessories folder may work, but to port of all functions is basically more difficult than to write a new class which extends `accessory`. Because the initial code base for Home Assistant is already big their is a focus to keep additional imports as small as possible to improve performance. A `min` version would help accomplish that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/40", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/40/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/40/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/40", "id": 297997417, "node_id": "MDU6SXNzdWUyOTc5OTc0MTc=", "number": 40, "title": "Suggestion: use Services[Characteristic] to make code more pythonic.", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-17T11:16:35Z", "updated_at": "2018-04-07T12:21:21Z", "closed_at": "2018-04-07T12:21:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This could then raise a `KeyError`, rather than an `AssertionError` when a non-existent characteristic is accessed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/37", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/37/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/37/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/37", "id": 297993666, "node_id": "MDU6SXNzdWUyOTc5OTM2NjY=", "number": 37, "title": "AccessoryService information.", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-17T10:02:12Z", "updated_at": "2018-05-05T08:46:05Z", "closed_at": "2018-05-05T08:46:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not exactly sure how to override the `AccessoryService` fields: I've tried a bit in my `GarageDoor._set_services()`, but it doesn't seem to work.\r\n\r\nI wonder if there should be a way to have this information either pulled from the class, or some other mechanism.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/35", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/35/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/35/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/35", "id": 297987765, "node_id": "MDU6SXNzdWUyOTc5ODc3NjU=", "number": 35, "title": "Garage Door Opener", "user": {"login": "jslay88", "id": 6158929, "node_id": "MDQ6VXNlcjYxNTg5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6158929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jslay88", "html_url": "https://github.com/jslay88", "followers_url": "https://api.github.com/users/jslay88/followers", "following_url": "https://api.github.com/users/jslay88/following{/other_user}", "gists_url": "https://api.github.com/users/jslay88/gists{/gist_id}", "starred_url": "https://api.github.com/users/jslay88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jslay88/subscriptions", "organizations_url": "https://api.github.com/users/jslay88/orgs", "repos_url": "https://api.github.com/users/jslay88/repos", "events_url": "https://api.github.com/users/jslay88/events{/privacy}", "received_events_url": "https://api.github.com/users/jslay88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-17T07:56:58Z", "updated_at": "2018-10-04T07:11:58Z", "closed_at": "2018-10-04T07:11:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to get this working, and it works for the HomeKit requests, but not when the door state changes outside of HomeKit (i.e. when I open the garage with my car remote, instead of HomeKit).\r\n\r\nWould like some help troubleshooting this. I am getting the opposite transition state than you would expect, only when the door state changes outside of a HomeKit request from an iOS device.\r\n\r\nYou can easily simulate this on a RPi, by shorting out a GPIO pin to ground for a `CLOSED` state, and removing from ground for an `OPEN` state. On the iOS, device you can request open, then simulate open, and so forth.\r\n\r\nTo repro the issue I am having, simply simulate the opposite state of the door, without requesting it from HAP-python.\r\n\r\nAlso, would like some clarification on how to properly set the initial state of `CurrentDoorState`, as I was seeing some weird things there too, like starting out as `Opening`, even though it was clearly set to `CLOSED`\r\n\r\nHere is a simple driver, using pin 17 (BCM)/ 11(BOARD) for the switch, using the new QR stuff of course ;)\r\n\r\n```\r\nfrom pyhap.accessories.GarageDoor import GarageDoor\r\nfrom pyhap.accessory_driver import AccessoryDriver\r\nimport signal\r\n\r\n\r\ngarage = GarageDoor(2, 17, 'GarageDoorTest', pincode=b'920-54-727')\r\nprint(garage.display_name)\r\nprint(garage.pincode.decode())\r\ngarage.print_qr()\r\ndriver = AccessoryDriver(garage, port=51826)\r\nsignal.signal(signal.SIGINT, driver.signal_handler)\r\nsignal.signal(signal.SIGTERM, driver.signal_handler)\r\ndriver.start()\r\n```\r\n\r\nPlease see PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/32", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/32/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/32/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/32", "id": 297970225, "node_id": "MDU6SXNzdWUyOTc5NzAyMjU=", "number": 32, "title": "Dynamic pin code and setup IDs.", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-17T02:14:04Z", "updated_at": "2018-02-17T09:35:15Z", "closed_at": "2018-02-17T09:35:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reading through the Apple HAP documentation, it's pretty clear that \"if a device _can_ dynamically generate pin codes, it _should_.\"\r\n\r\nTo that end, I started playing around with stuff, and a dynamically generated pin code has no drawbacks (other than having to see what value was generated this time around).\r\n\r\nI believe the same is true of setup id (which is used for the URL generation in https://github.com/ikalchev/HAP-python/pull/31 and https://github.com/ikalchev/HAP-python/pull/30). To that end, I believe that these values should _not_ be stored in the pickle.\r\n\r\nThe other thing I discovered while developing accessories is that pickle is not a great way of storing stuff, especially during development. It means that if you change a class, or an import, then things can stop working, and you'd need to delete the pickle file and then re-add the accessory. There are also possible security implications of pickling data, but I'm less concerned about that because we aren't unpickling user supplied data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/29", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/29/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/29/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/29", "id": 297696249, "node_id": "MDU6SXNzdWUyOTc2OTYyNDk=", "number": 29, "title": "Pull latest Apple HAP types. Define overrides.", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-16T06:56:18Z", "updated_at": "2018-02-18T09:18:09Z", "closed_at": "2018-02-18T09:18:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Apple has pushed new Services and Characteristics, which need to be parsed and added to HAP-python using `gen_hap_types.py`.\r\n\r\nAlso, Apple specifies some non-intuitive default characteristic constraints - for example, by default the CurrentTemperature has a min value of 0, i.e. you cannot report negative values. Thus, there should be a way to override Apple's default values at the end of `gen_hap_types.py`. See pull request #28 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/27", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/27/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/27/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/27", "id": 297545732, "node_id": "MDU6SXNzdWUyOTc1NDU3MzI=", "number": 27, "title": "Characteristic.notify should not fail when broker is None", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T18:15:18Z", "updated_at": "2018-02-16T06:51:42Z", "closed_at": "2018-02-16T06:51:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The notify method should check if the broker is None and attempt to publish only if it is not None.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/26", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/26/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/26/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/26", "id": 297342912, "node_id": "MDU6SXNzdWUyOTczNDI5MTI=", "number": 26, "title": "Allow characteristic properties like minValue to be overridden.", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-15T06:37:24Z", "updated_at": "2018-03-25T08:11:01Z", "closed_at": "2018-03-25T08:11:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It should be possible to configure the properties of a characteristic to align with the functionality of the device and the iOS UI. For example, say your window covering can go up only to 50% open and that it is either closed or open. HAP specifies the default values for the coverings target position as maxValue=100 and minStep=0.1. This means iOS clients can slide at 0.1 step all the way to 100%, which you must map to all-up or all-down in your code.\r\n\r\nInstead, you can do:\r\n```python\r\nservice = loader.get_serv_loader().get(\"WindowCovering\")\r\npos = service.get_characteristic(\"TargetPosition\")\r\npos.properties[\"maxValue\"] = 50\r\npos.properties[\"minStep\"] = 50\r\npos.hap_template = pos._create_hap_template()\r\n```\r\n\r\nNow iOS correctly allows you to only fully go up or down and the max display value is 50%. The hacky thing about the above is the last line and this is the topic of this issue - overriding properties should be more \"native\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/24", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/24/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/24/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/24", "id": 294246667, "node_id": "MDU6SXNzdWUyOTQyNDY2Njc=", "number": 24, "title": "Generate QR Code (and X-HM:// url)", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-02-05T00:44:04Z", "updated_at": "2018-02-17T16:16:16Z", "closed_at": "2018-02-17T09:52:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A nice feature about Homebridge/hap-nodejs is that you can scan a QR code in a terminal window.\r\n\r\nI've had a quick look at the code for generating it, and if I can port it to Python I'll create a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/23", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/23/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/23/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/23", "id": 294045950, "node_id": "MDU6SXNzdWUyOTQwNDU5NTA=", "number": 23, "title": "Customise loaded type during init, as opposed to during get.", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-02T22:41:56Z", "updated_at": "2018-02-03T08:18:43Z", "closed_at": "2018-02-03T08:18:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/22", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/22/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/22/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/22", "id": 294045577, "node_id": "MDU6SXNzdWUyOTQwNDU1Nzc=", "number": 22, "title": "Accessory AIDs, which are part of a Bridge, should be configurable.", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-02T22:40:05Z", "updated_at": "2018-02-03T22:05:29Z", "closed_at": "2018-02-03T22:05:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/21", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/21/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/21/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/21", "id": 294042552, "node_id": "MDU6SXNzdWUyOTQwNDI1NTI=", "number": 21, "title": "indentify callback", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-02T22:25:40Z", "updated_at": "2018-02-03T06:57:50Z", "closed_at": "2018-02-03T06:55:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "do you have an example for identify?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/20", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/20/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/20/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/20", "id": 294040199, "node_id": "MDU6SXNzdWUyOTQwNDAxOTk=", "number": 20, "title": "Accessory calculates AID incorrectly", "user": {"login": "tagdara", "id": 19614458, "node_id": "MDQ6VXNlcjE5NjE0NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/19614458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tagdara", "html_url": "https://github.com/tagdara", "followers_url": "https://api.github.com/users/tagdara/followers", "following_url": "https://api.github.com/users/tagdara/following{/other_user}", "gists_url": "https://api.github.com/users/tagdara/gists{/gist_id}", "starred_url": "https://api.github.com/users/tagdara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tagdara/subscriptions", "organizations_url": "https://api.github.com/users/tagdara/orgs", "repos_url": "https://api.github.com/users/tagdara/repos", "events_url": "https://api.github.com/users/tagdara/events{/privacy}", "received_events_url": "https://api.github.com/users/tagdara/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778579, "node_id": "MDU6TGFiZWw3MTk3Nzg1Nzk=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-02T22:15:35Z", "updated_at": "2018-02-02T22:25:46Z", "closed_at": "2018-02-02T22:24:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Accessory module calculates AID like this:\r\n\r\nacc.aid = len(self.accessories) + 2\r\n\r\nHowever if you have previously deleted and created a new AID, the max number of that AID is higher, so it should be:\r\n\r\nif len(self.accessories)>0:\r\n            acc.aid = max(self.accessories) + 1\r\n        else:\r\n            acc.aid = 2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/19", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/19/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/19/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/19", "id": 293976056, "node_id": "MDU6SXNzdWUyOTM5NzYwNTY=", "number": 19, "title": "Implement Characteristic.set_value callback toggle.", "user": {"login": "tagdara", "id": 19614458, "node_id": "MDQ6VXNlcjE5NjE0NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/19614458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tagdara", "html_url": "https://github.com/tagdara", "followers_url": "https://api.github.com/users/tagdara/followers", "following_url": "https://api.github.com/users/tagdara/following{/other_user}", "gists_url": "https://api.github.com/users/tagdara/gists{/gist_id}", "starred_url": "https://api.github.com/users/tagdara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tagdara/subscriptions", "organizations_url": "https://api.github.com/users/tagdara/orgs", "repos_url": "https://api.github.com/users/tagdara/repos", "events_url": "https://api.github.com/users/tagdara/events{/privacy}", "received_events_url": "https://api.github.com/users/tagdara/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-02T18:09:41Z", "updated_at": "2018-02-18T21:42:24Z", "closed_at": "2018-02-18T21:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a large framework for a home automation system which in many ways is a bridge of bridges, acting as an overall compatibility and abstraction layer across multiple systems.  \r\n\r\n- I can set the values of the lights for Homekit directly from my code using service.characteristic.set_value and this works no problem.\r\n- I need to be notified about lights change requests from a Homekit user so that I can reflect that on the actual device.  Added a setter_callback which pushes the requested change to my code (which then applies it to the physical light) and this works no problem\r\n\r\nHowever with both of these components in place, my code sets the value of the light, which triggers the callback, which calls my code, which updates the value of the light, which triggers the callback (repeat forever).\r\n\r\nIs there a way for me to differentiate so that the callback is only triggered when a user makes a change and not when the device is updated from my code? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/18", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/18/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/18/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/18", "id": 293664563, "node_id": "MDU6SXNzdWUyOTM2NjQ1NjM=", "number": 18, "title": "Char init value should be from the valid values if any were given", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778579, "node_id": "MDU6TGFiZWw3MTk3Nzg1Nzk=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-01T20:01:37Z", "updated_at": "2018-02-03T07:33:00Z", "closed_at": "2018-02-03T07:33:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The characteristic value is set to some default value on init. However, if this is passed to the iOS client, which expects a pre-defined set of valid values, it will not be happy. Therefore, when setting the default, valid values should be considered.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/17", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/17/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/17/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/17", "id": 292514698, "node_id": "MDU6SXNzdWUyOTI1MTQ2OTg=", "number": 17, "title": "Amended commits", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778585, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODU=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T18:37:15Z", "updated_at": "2018-01-29T20:18:10Z", "closed_at": "2018-01-29T20:18:10Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hi @gerswin,\r\n\r\nI needed to amend the author info about all my past commits to HAP-python (no code changes). This may have affected your fork. If so, please accept my apologies and if you need any help in removing issues, please let me know.\r\n\r\nBest,\r\nIvan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/16", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/16/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/16/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/16", "id": 292366767, "node_id": "MDU6SXNzdWUyOTIzNjY3Njc=", "number": 16, "title": "Enforce value constraints in Characteristic. Distinguish raw and HAP value.", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778579, "node_id": "MDU6TGFiZWw3MTk3Nzg1Nzk=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T11:08:02Z", "updated_at": "2018-02-01T12:20:59Z", "closed_at": "2018-02-01T12:20:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, Characteristic only respects min/max value constraints when sending its state through the `to_HAP` method. However, when a value change is published to iOS clients (`notify`), the sent value could be outside of min/max range. There should be a distinction between actual char value and it's \"hap\" representation, .e.g:\r\n```python\r\nchar = Characteristic(...)\r\nchar.value  # raw value\r\nchar.get_value()  # hapified value\r\nchar.set_value(value, ...)\r\n# ^ should be equivalent to\r\nif value not in self.allowed_values: raise ....\r\nself.value = value\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/15", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/15/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/15/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/15", "id": 292269182, "node_id": "MDU6SXNzdWUyOTIyNjkxODI=", "number": 15, "title": " ValueError(\"Duplicate AID found when attempting to add accessory\") ValueError: Duplicate AID found when attempting to add accessory", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-29T02:48:20Z", "updated_at": "2018-01-29T05:42:51Z", "closed_at": "2018-01-29T05:42:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "in last update bridge mode is not working. \r\ntested with main.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/14", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/14/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/14/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/14", "id": 292128021, "node_id": "MDU6SXNzdWUyOTIxMjgwMjE=", "number": 14, "title": "Possible problem in iOS 11", "user": {"login": "sergiookey", "id": 15892768, "node_id": "MDQ6VXNlcjE1ODkyNzY4", "avatar_url": "https://avatars1.githubusercontent.com/u/15892768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergiookey", "html_url": "https://github.com/sergiookey", "followers_url": "https://api.github.com/users/sergiookey/followers", "following_url": "https://api.github.com/users/sergiookey/following{/other_user}", "gists_url": "https://api.github.com/users/sergiookey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergiookey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergiookey/subscriptions", "organizations_url": "https://api.github.com/users/sergiookey/orgs", "repos_url": "https://api.github.com/users/sergiookey/repos", "events_url": "https://api.github.com/users/sergiookey/events{/privacy}", "received_events_url": "https://api.github.com/users/sergiookey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-27T15:14:30Z", "updated_at": "2018-01-28T06:34:52Z", "closed_at": "2018-01-27T23:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Congratulations for your great work. \n\nI add all accessory to homekit and I work perfectly but when I restart process, my iPhone with iOS 11.2.1 not reconnect accesories. The accessories have simbol (!). What can I do?\n\nThank you very much", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/13", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/13/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/13/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/13", "id": 292078504, "node_id": "MDU6SXNzdWUyOTIwNzg1MDQ=", "number": 13, "title": "Bump accessory configuration version on char. changes.", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778579, "node_id": "MDU6TGFiZWw3MTk3Nzg1Nzk=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-27T01:38:12Z", "updated_at": "2018-01-28T09:24:05Z", "closed_at": "2018-01-28T09:24:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "it's me again, can u tell me how to use name characteristic?? \r\n\r\nself.get_service(\"Lightbulb\").get_characteristic(\"Name\").set_value(\"Bed\")\r\n\r\nit's not working", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/12", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/12/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/12/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/12", "id": 292008223, "node_id": "MDU6SXNzdWUyOTIwMDgyMjM=", "number": 12, "title": "Persist accessories in a different format than pickle", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-26T19:34:48Z", "updated_at": "2018-02-13T22:29:13Z", "closed_at": "2018-02-13T22:29:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The new format should allow new HAP-python versions to understand state from an older version, removing the need to `rm accessory.pickle` after updating HAP-python and potentially requiring less space.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/11", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/11/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/11/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/11", "id": 292006973, "node_id": "MDU6SXNzdWUyOTIwMDY5NzM=", "number": 11, "title": "Persist char. values on accessory driver stop", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-26T19:30:03Z", "updated_at": "2018-01-28T09:24:29Z", "closed_at": "2018-01-28T09:24:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Characteristic value updates are not persisted, thus, when HAP-python starts again, the last values are not seen in iOS. This should be done when the accessory driver stops (doing it on every update would be an overkill).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/10", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/10/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/10/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/10", "id": 291085155, "node_id": "MDU6SXNzdWUyOTEwODUxNTU=", "number": 10, "title": "i'm making LightBulb with mqtt and need to get state of device", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-24T05:00:39Z", "updated_at": "2018-01-26T20:01:57Z", "closed_at": "2018-01-26T19:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is my code, can u explain me how to get the status of device. \r\n```\r\n\r\nimport logging\r\n\r\nfrom pyhap.accessory import Accessory, Category\r\nimport pyhap.loader as loader\r\nimport paho.mqtt.subscribe as subscribe\r\nimport paho.mqtt.publish as publish\r\n\r\nauth = {\r\n  'username':\"\",\r\n  'password':\"\"\r\n}\r\n\r\n\r\nclass LightBulb(Accessory):\r\n\r\n    category = Category.LIGHTBULB\r\n\r\n    def __init__(self, *args,**kwargs):\r\n        super(LightBulb, self).__init__(*args, **kwargs)\r\n\r\n        \r\n\r\n\r\n    def __setstate__(self, state):\r\n        self.__dict__.update(state)\r\n       \r\n\r\n    def set_bulb(self, value):\r\n        print(value) \r\n        publish.single(\"inTopic\",\r\n        payload=value,\r\n        hostname=\"localhost\",\r\n        client_id=\"screen\",\r\n        auth=auth,\r\n        retain=False,\r\n        port=1883)\r\n\r\n    def _set_services(self):\r\n        super(LightBulb, self)._set_services()\r\n\r\n        bulb_service = loader.get_serv_loader().get(\"Lightbulb\")\r\n        self.add_service(bulb_service)\r\n        bulb_service.get_characteristic(\"On\").setter_callback = self.set_bulb\r\n\r\n    def stop(self):\r\n        super(LightBulb, self).stop()\r\n        \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/9", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/9/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/9/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/9", "id": 290767636, "node_id": "MDU6SXNzdWUyOTA3Njc2MzY=", "number": 9, "title": "Way to add optional chars. to services in Http Accessory", "user": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 719778581, "node_id": "MDU6TGFiZWw3MTk3Nzg1ODE=", "url": "https://api.github.com/repos/ikalchev/HAP-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ikalchev", "id": 25887324, "node_id": "MDQ6VXNlcjI1ODg3MzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/25887324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikalchev", "html_url": "https://github.com/ikalchev", "followers_url": "https://api.github.com/users/ikalchev/followers", "following_url": "https://api.github.com/users/ikalchev/following{/other_user}", "gists_url": "https://api.github.com/users/ikalchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikalchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikalchev/subscriptions", "organizations_url": "https://api.github.com/users/ikalchev/orgs", "repos_url": "https://api.github.com/users/ikalchev/repos", "events_url": "https://api.github.com/users/ikalchev/events{/privacy}", "received_events_url": "https://api.github.com/users/ikalchev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-01-23T09:35:21Z", "updated_at": "2018-01-27T11:04:15Z", "closed_at": "2018-01-26T19:24:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, you can use the Http accessory to expose non-hap-compatible devices by allowing them to submit characteristic updates in the form of http post requests.\r\n\r\nHowever, you can only add services with their mandatory characteristics, whereas it should be possible to also add optional chars, such as Name.\r\n\r\nThis issue tracks the effort for the above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/7", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/7/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/7/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/7", "id": 290157633, "node_id": "MDU6SXNzdWUyOTAxNTc2MzM=", "number": 7, "title": "use as Bridge", "user": {"login": "gerswin", "id": 2037388, "node_id": "MDQ6VXNlcjIwMzczODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2037388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerswin", "html_url": "https://github.com/gerswin", "followers_url": "https://api.github.com/users/gerswin/followers", "following_url": "https://api.github.com/users/gerswin/following{/other_user}", "gists_url": "https://api.github.com/users/gerswin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerswin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerswin/subscriptions", "organizations_url": "https://api.github.com/users/gerswin/orgs", "repos_url": "https://api.github.com/users/gerswin/repos", "events_url": "https://api.github.com/users/gerswin/events{/privacy}", "received_events_url": "https://api.github.com/users/gerswin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-20T02:31:57Z", "updated_at": "2018-01-24T04:17:01Z", "closed_at": "2018-01-24T04:17:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "do you have an example for use as bridge?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/6", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/6/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/6/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/6", "id": 288539925, "node_id": "MDU6SXNzdWUyODg1Mzk5MjU=", "number": 6, "title": "add  air pressure sensor support?", "user": {"login": "xtqxk", "id": 4744421, "node_id": "MDQ6VXNlcjQ3NDQ0MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4744421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtqxk", "html_url": "https://github.com/xtqxk", "followers_url": "https://api.github.com/users/xtqxk/followers", "following_url": "https://api.github.com/users/xtqxk/following{/other_user}", "gists_url": "https://api.github.com/users/xtqxk/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtqxk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtqxk/subscriptions", "organizations_url": "https://api.github.com/users/xtqxk/orgs", "repos_url": "https://api.github.com/users/xtqxk/repos", "events_url": "https://api.github.com/users/xtqxk/events{/privacy}", "received_events_url": "https://api.github.com/users/xtqxk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-15T10:06:53Z", "updated_at": "2018-01-15T11:32:05Z", "closed_at": "2018-01-15T11:32:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "bme280 support air pressure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/5", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/5/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/5/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/5", "id": 284628431, "node_id": "MDU6SXNzdWUyODQ2Mjg0MzE=", "number": 5, "title": "Garage Door Opener", "user": {"login": "fubano", "id": 34873043, "node_id": "MDQ6VXNlcjM0ODczMDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/34873043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fubano", "html_url": "https://github.com/fubano", "followers_url": "https://api.github.com/users/fubano/followers", "following_url": "https://api.github.com/users/fubano/following{/other_user}", "gists_url": "https://api.github.com/users/fubano/gists{/gist_id}", "starred_url": "https://api.github.com/users/fubano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fubano/subscriptions", "organizations_url": "https://api.github.com/users/fubano/orgs", "repos_url": "https://api.github.com/users/fubano/repos", "events_url": "https://api.github.com/users/fubano/events{/privacy}", "received_events_url": "https://api.github.com/users/fubano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-12-27T01:00:13Z", "updated_at": "2018-01-02T06:27:34Z", "closed_at": "2017-12-27T10:37:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for sharing this project, I find python a little easier to using NodeJS. I can get the TempSensor, LightBulb to work on my Pi Zero W, but my attempt to mash code from multiple existing accessories to create a Garage Door Opener fails (it pairs and then unpairs right away). Can someone can point to the issues with this code? Not sure __getstate__ is needed at all, my suspicion was that the required characteristic state is not getting set correctly.\r\n\r\nclass GarageDoorOpener(Accessory):\r\n    category = Category.GARAGE_DOOR_OPENER\r\n\r\n    @classmethod\r\n    def _gpio_setup(_cls, pulse_pin, sense_pin):\r\n        GPIO.setmode(GPIO.BCM)\r\n        GPIO.setup(pulse_pin, GPIO.OUT)\r\n        GPIO.setup(sense_pin, GPIO.IN)\r\n        GPIO.add_event_detect(sense_pin, GPIO.BOTH, callback=self._detected)\r\n\r\n    def __init__(self, *args, pulse_pin=26, sense_pin=22, **kwargs):\r\n        super(GarageDoorOpener, self).__init__(*args, **kwargs)\r\n\r\n        self.CurrentDoorState = self.get_service(\"GarageDoorOpener\").get_characteristic(\"CurrentDoorState\")\r\n        self.ObstructionDetected = self.get_service(\"GarageDoorOpener\").get_characteristic(\"ObstructionDetected\")\r\n\r\n        self.pulse_pin = pulse_pin\r\n        self.sense_pin = sense_pin\r\n        self._gpio_setup(pulse_pin,sense_pin)\r\n\r\n    def __getstate__(self):\r\n        state = super(GarageDoorOpener, self).__getstate__()\r\n        return state\r\n\r\n    def __setstate__(self, state):\r\n        self.__dict__.update(state)\r\n        self._gpio_setup(self.pulse_pin, self.sense_pin)\r\n\r\n    def _pulse_door(self, value):\r\n        GPIO.output(self.pulse_pin, GPIO.HIGH)\r\n        time.sleep(2)\r\n        GPIO.output(self.pulse_pin, GPIO.LOW)\r\n        time.sleep(2)\r\n\r\n    def _set_services(self):\r\n        super(GarageDoorOpener, self)._set_services()\r\n\r\n        garage_door_opener_service = loader.get_serv_loader().get(\"GarageDoorOpener\")\r\n        self.add_service(garage_door_opener_service)\r\n        garage_door_opener_service.get_characteristic(\"TargetDoorState\").setter_callback = self._pulse_door\r\n\r\n    def _detected(self, _pin):\r\n        if(GPIO.input(self.sense_pin)):\r\n            self.CurrentDoorState.set_value(1)\r\n        else:\r\n            self.CurrentDoorState.set_value(0)\r\n\r\n    def stop(self):\r\n        super(GarageDoorOpener, self).stop()\r\n        GPIO.cleanup()\r\n~\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/4", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/4/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/4/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/4", "id": 277864148, "node_id": "MDU6SXNzdWUyNzc4NjQxNDg=", "number": 4, "title": "Remove accessory is not working properly", "user": {"login": "mkudrnac", "id": 12230741, "node_id": "MDQ6VXNlcjEyMjMwNzQx", "avatar_url": "https://avatars2.githubusercontent.com/u/12230741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkudrnac", "html_url": "https://github.com/mkudrnac", "followers_url": "https://api.github.com/users/mkudrnac/followers", "following_url": "https://api.github.com/users/mkudrnac/following{/other_user}", "gists_url": "https://api.github.com/users/mkudrnac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkudrnac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkudrnac/subscriptions", "organizations_url": "https://api.github.com/users/mkudrnac/orgs", "repos_url": "https://api.github.com/users/mkudrnac/repos", "events_url": "https://api.github.com/users/mkudrnac/events{/privacy}", "received_events_url": "https://api.github.com/users/mkudrnac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-29T18:44:52Z", "updated_at": "2017-11-29T22:32:50Z", "closed_at": "2017-11-29T22:32:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found a small issue with removing accessory.\r\nWhen I try to remove it  I takes very long time sometimes iPhone get stuck and in console there is this error and accessory.pickle is not removed\r\n\r\nscreenshots:\r\n![screen shot 2017-11-29 at 19 39 16](https://user-images.githubusercontent.com/12230741/33392794-5f58e28c-d53d-11e7-8d6f-5ca5cd230249.png)\r\n\r\nbefore remove:\r\n![img_0937](https://user-images.githubusercontent.com/12230741/33392827-7b6b4d5c-d53d-11e7-841d-33b9e8208f17.png)\r\n\r\nafter remove:\r\n![img_0938](https://user-images.githubusercontent.com/12230741/33392838-831c132e-d53d-11e7-899f-64bd48670214.png)\r\n\r\n\r\nI found that there is ```# TODO: can we have more than one connection?``` in my home I have AppleTV as HUB and another iPhone with I'm sharing my home.\r\n\r\nDont worry to ask me with some help :-)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ikalchev/HAP-python/issues/3", "repository_url": "https://api.github.com/repos/ikalchev/HAP-python", "labels_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/3/comments", "events_url": "https://api.github.com/repos/ikalchev/HAP-python/issues/3/events", "html_url": "https://github.com/ikalchev/HAP-python/issues/3", "id": 277394507, "node_id": "MDU6SXNzdWUyNzczOTQ1MDc=", "number": 3, "title": "Implement optional characteristics", "user": {"login": "mkudrnac", "id": 12230741, "node_id": "MDQ6VXNlcjEyMjMwNzQx", "avatar_url": "https://avatars2.githubusercontent.com/u/12230741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkudrnac", "html_url": "https://github.com/mkudrnac", "followers_url": "https://api.github.com/users/mkudrnac/followers", "following_url": "https://api.github.com/users/mkudrnac/following{/other_user}", "gists_url": "https://api.github.com/users/mkudrnac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkudrnac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkudrnac/subscriptions", "organizations_url": "https://api.github.com/users/mkudrnac/orgs", "repos_url": "https://api.github.com/users/mkudrnac/repos", "events_url": "https://api.github.com/users/mkudrnac/events{/privacy}", "received_events_url": "https://api.github.com/users/mkudrnac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-28T14:00:02Z", "updated_at": "2017-11-29T18:40:21Z", "closed_at": "2017-11-29T18:40:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello Ivan,\r\n\r\nI did try to use optional characteristics for example \"RotationSpeed\" for \"Fan\" but this thing is not implemented, so I had to use https://github.com/KhaosT/HAP-NodeJS \r\nBut I prefer using Python instead of JS, would be nice to implement it and I can test it for you with my home-made Fan :-)\r\n\r\nYou can ask me for help :-)\r\n\r\nThanks,\r\nMiroslav", "performed_via_github_app": null, "score": 1.0}]}