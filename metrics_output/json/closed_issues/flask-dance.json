{"total_count": 135, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/318", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/318/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/318/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/318", "id": 656618011, "node_id": "MDU6SXNzdWU2NTY2MTgwMTE=", "number": 318, "title": "oauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) ", "user": {"login": "macmule", "id": 2464974, "node_id": "MDQ6VXNlcjI0NjQ5NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2464974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macmule", "html_url": "https://github.com/macmule", "followers_url": "https://api.github.com/users/macmule/followers", "following_url": "https://api.github.com/users/macmule/following{/other_user}", "gists_url": "https://api.github.com/users/macmule/gists{/gist_id}", "starred_url": "https://api.github.com/users/macmule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macmule/subscriptions", "organizations_url": "https://api.github.com/users/macmule/orgs", "repos_url": "https://api.github.com/users/macmule/repos", "events_url": "https://api.github.com/users/macmule/events{/privacy}", "received_events_url": "https://api.github.com/users/macmule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-14T13:36:01Z", "updated_at": "2020-07-15T15:22:38Z", "closed_at": "2020-07-15T13:41:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "We receive the below error web trying to save who changed an item in our views.py, however this seems to be only in prod.\r\n\r\nIn dev running on kubernetes locally, all is well.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/workers/sync.py\", line 134, in handle\r\n    self.handle_request(listener, req, client, addr)\r\n  File \"/usr/local/lib/python3.6/dist-packages/gunicorn/workers/sync.py\", line 175, in handle_request\r\n    respiter = self.wsgi(environ, resp.start_response)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 2464, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 2450, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 1867, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 2447, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 1952, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 1821, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 1950, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask/app.py\", line 1936, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/base.py\", line 69, in inner\r\n    return self._run_view(f, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/base.py\", line 368, in _run_view\r\n    return fn(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/model/base.py\", line 2143, in edit_view\r\n    if self.update_model(form, model):\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/contrib/sqla/view.py\", line 1160, in update_model\r\n    if not self.handle_view_exception(ex):\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/contrib/sqla/view.py\", line 1112, in handle_view_exception\r\n    return super(ModelView, self).handle_view_exception(exc)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/contrib/sqla/view.py\", line 1157, in update_model\r\n    self._on_model_change(form, model, False)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_admin/model/base.py\", line 1570, in _on_model_change\r\n    self.on_model_change(form, model, is_created)\r\n  File \"/usr/local/envQUERY/views.py\", line 312, in on_model_change\r\n    okta_response = okta_blueprint.session.get('{}/userinfo'.format(ISSUER_URL))\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 543, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/flask_dance/consumer/requests.py\", line 201, in request\r\n    **kwargs\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests_oauthlib/oauth2_session.py\", line 478, in request\r\n    url, http_method=method, body=data, headers=headers\r\n  File \"/usr/local/lib/python3.6/dist-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 198, in add_token\r\n    raise TokenExpiredError()\r\noauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) \r\n```\r\n\r\nTrimmed down views.py:\r\n\r\n```import datetime\r\nfrom flask import (Flask,\r\n                   redirect,\r\n                   url_for)\r\nfrom flask_admin.contrib.sqla import ModelView\r\nfrom flask_dance.consumer import OAuth2ConsumerBlueprint\r\n\r\napp = Flask(__name__, instance_relative_config=True)\r\napp.config.from_object('config.Config')\r\n\r\nISSUER_URL = '{}/v1'.format(app.config['OKTA_ISSUER_URL'])\r\nokta_blueprint = OAuth2ConsumerBlueprint(\r\n    'okta', __name__,\r\n    client_id=app.config['OKTA_CLIENT_ID'],\r\n    client_secret=app.config['OKTA_CLIENT_SECRET'],\r\n    token_url='{}/token'.format(ISSUER_URL),\r\n    authorization_url='{}/authorize'.format(ISSUER_URL),\r\n    scope=['openid', 'profile', 'email'],\r\n    url_prefix='/login'\r\n)\r\n\r\n#pylint: disable=too-few-public-methods\r\nclass RepositoryView(ModelView):\r\n    ''' Settings for the details view '''\r\n\r\n    # redacted\r\n\r\n    @classmethod\r\n    def on_model_change(cls, _, model, is_created):\r\n        ''' If details changed, submit who changed them & remove whitespace'''\r\n\r\n        app.logger.debug(\" --- RepositoryView: on_model_change --- \")\r\n\r\n        if not okta_blueprint.authorized:\r\n            return redirect(url_for(\"okta.login\"))\r\n\r\n        okta_response = okta_blueprint.session.get('{}/userinfo'.format(ISSUER_URL))\r\n\r\n        app.logger.debug(okta_response)\r\n        okta_email = okta_response.json()['email']\r\n        app.logger.debug(okta_email)\r\n\r\n        if is_created is True:\r\n            app.logger.debug('repository record created')\r\n            app.logger.debug(\"okta_response: %s\" % okta_response)\r\n            app.logger.debug(\"okta_email: %s\" % okta_email)\r\n            model.created_by = okta_email\r\n            model.created_time = datetime.datetime.utcnow().replace(microsecond=0)\r\n        else:\r\n            app.logger.debug('repository record modified')\r\n            app.logger.debug(\"okta_response: %s\" % okta_response)\r\n            app.logger.debug(\"okta_email: %s\" % okta_email)\r\n            model.modified_by = okta_email\r\n            model.modified_time = datetime.datetime.utcnow().replace(microsecond=0)\r\n\r\n        model.customer_id = model.customer_id.strip().lower()\r\n        app.logger.debug(\"model.customer_id: %s\" % model.customer_id)\r\n        app.logger.debug(\"model: %s\" % model)\r\n```\r\n\r\nIn dev we're accessing the flask app via the same IP flask is setup on, so 0.0.0.0 but we're on a different port with kubernetes sorting that out.\r\n\r\nIn prod we're connecting via DNS name, could this be the issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/313", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/313/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/313/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/313", "id": 650643744, "node_id": "MDU6SXNzdWU2NTA2NDM3NDQ=", "number": 313, "title": "Surfacing assignment errors", "user": {"login": "macmule", "id": 2464974, "node_id": "MDQ6VXNlcjI0NjQ5NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2464974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macmule", "html_url": "https://github.com/macmule", "followers_url": "https://api.github.com/users/macmule/followers", "following_url": "https://api.github.com/users/macmule/following{/other_user}", "gists_url": "https://api.github.com/users/macmule/gists{/gist_id}", "starred_url": "https://api.github.com/users/macmule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macmule/subscriptions", "organizations_url": "https://api.github.com/users/macmule/orgs", "repos_url": "https://api.github.com/users/macmule/repos", "events_url": "https://api.github.com/users/macmule/events{/privacy}", "received_events_url": "https://api.github.com/users/macmule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-03T14:52:10Z", "updated_at": "2020-07-04T14:02:11Z", "closed_at": "2020-07-04T14:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\r\n\r\nHow do you go about surfacing assignment errors from .authorized?\r\n\r\n`OAuth 2 authorization error: access_denied description: User is not assigned to the client application. uri: None`\r\n\r\nI'm testing & seeing the above (correctly), & would like to present that error in a page.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/312", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/312/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/312/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/312", "id": 650452597, "node_id": "MDU6SXNzdWU2NTA0NTI1OTc=", "number": 312, "title": "OAuth2ConsumerBlueprint & redirect_uri", "user": {"login": "macmule", "id": 2464974, "node_id": "MDQ6VXNlcjI0NjQ5NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2464974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macmule", "html_url": "https://github.com/macmule", "followers_url": "https://api.github.com/users/macmule/followers", "following_url": "https://api.github.com/users/macmule/following{/other_user}", "gists_url": "https://api.github.com/users/macmule/gists{/gist_id}", "starred_url": "https://api.github.com/users/macmule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macmule/subscriptions", "organizations_url": "https://api.github.com/users/macmule/orgs", "repos_url": "https://api.github.com/users/macmule/repos", "events_url": "https://api.github.com/users/macmule/events{/privacy}", "received_events_url": "https://api.github.com/users/macmule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-03T08:58:09Z", "updated_at": "2020-07-04T14:01:25Z", "closed_at": "2020-07-04T14:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does OAuth2ConsumerBlueprint support redirect_uri's?\r\n\r\nCannot see redirect_uri in the class: https://github.com/singingwolfboy/flask-dance/blob/main/flask_dance/consumer/oauth2.py#L23\r\n\r\nWas looking to use flask-dance with okta & need a redirect_uri", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/308", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/308/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/308/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/308", "id": 640080380, "node_id": "MDU6SXNzdWU2NDAwODAzODA=", "number": 308, "title": "pip install flask-dance[sqla] doesn't work", "user": {"login": "gregseguin", "id": 9013332, "node_id": "MDQ6VXNlcjkwMTMzMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9013332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregseguin", "html_url": "https://github.com/gregseguin", "followers_url": "https://api.github.com/users/gregseguin/followers", "following_url": "https://api.github.com/users/gregseguin/following{/other_user}", "gists_url": "https://api.github.com/users/gregseguin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregseguin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregseguin/subscriptions", "organizations_url": "https://api.github.com/users/gregseguin/orgs", "repos_url": "https://api.github.com/users/gregseguin/repos", "events_url": "https://api.github.com/users/gregseguin/events{/privacy}", "received_events_url": "https://api.github.com/users/gregseguin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T01:53:06Z", "updated_at": "2020-06-23T01:43:26Z", "closed_at": "2020-06-23T01:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm able to install flask-dance using:\r\n\r\n pip install flask-dance\r\n\r\nHowever, I'm unable to install the sqlalchemy version with pip install flask-dance[sqla]\r\n\r\nKeep getting 'no matches found'. How do I fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/307", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/307/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/307/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/307", "id": 637730308, "node_id": "MDU6SXNzdWU2Mzc3MzAzMDg=", "number": 307, "title": "Authorized URL on different domain", "user": {"login": "rjobiri", "id": 49593137, "node_id": "MDQ6VXNlcjQ5NTkzMTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/49593137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjobiri", "html_url": "https://github.com/rjobiri", "followers_url": "https://api.github.com/users/rjobiri/followers", "following_url": "https://api.github.com/users/rjobiri/following{/other_user}", "gists_url": "https://api.github.com/users/rjobiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjobiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjobiri/subscriptions", "organizations_url": "https://api.github.com/users/rjobiri/orgs", "repos_url": "https://api.github.com/users/rjobiri/repos", "events_url": "https://api.github.com/users/rjobiri/events{/privacy}", "received_events_url": "https://api.github.com/users/rjobiri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T12:55:07Z", "updated_at": "2020-06-13T10:23:48Z", "closed_at": "2020-06-13T10:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am implementing a Oauth for different services and I am using \"OAuth2ConsumerBlueprint\".\r\nWhat I am planning to do is:\r\n\r\n1. User go on \"<clientname>.mydomain.com\"\r\n\r\n2. User click on Login via FB for example\r\n\r\n3. User gets redirected on social.mydomain.com (so that the authorized URL is always the same). Flask dance is installed on domain \"social.mydomain.com\"\r\n\r\n4. User after FB login should be brought back to \"<clientname>.mydomain.com\"\r\n\r\nit looks like I cannot find a way to do it.. It should be feasible. I tried to parse out different information eg.:\r\n\r\n```\r\nprint(request)\r\nprint(request.referrer)\r\n\r\n```\r\nI even used: @oauth_authorized.connect Printed all the information to see if I could collect some additional information to reuse\r\n\r\n```\r\nprint(vars(request))\r\nprint(vars(blueprint))\r\nprint(vars(token))\r\nprint(session)\r\n```\r\n\r\nAlso I tried to add (on clientname.mydomain.com) in the GET parameters a \"foo\" variable to see if I could read it back again from the social.mydomain.com domain but I couldn't. No idea on how to redirect the user back to the original clientname.mydomain.com\r\n\r\nAny suggestions here on how can I have the authentication done on a specific subdomain (so I only need to whitelist one subdomain in FB/Google, etc.) and then redirect the user to his own domain?\r\n\r\nThat is how I setup everything (on social.mydomain.com):\r\n\r\n```\r\nfacebook = OAuth2ConsumerBlueprint(\r\n    \"fb_social\", __name__, url_prefix='/fb', \r\n    client_id=FB_CLIENT_ID,\r\n    client_secret=FB_SECRET,\r\n    scope='email',\r\n    base_url=\"https://graph.facebook.com/\",\r\n    token_url=\"https://graph.facebook.com/oauth/access_token\",\r\n    authorization_url=\"https://www.facebook.com/dialog/oauth\",\r\n    redirect_to='fb_social.social_facebook',\r\n)\r\n```\r\n\r\nThanks a lot", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/305", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/305/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/305/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/305", "id": 622179831, "node_id": "MDU6SXNzdWU2MjIxNzk4MzE=", "number": 305, "title": "Missing files in sdist", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T01:18:37Z", "updated_at": "2020-05-21T01:19:22Z", "closed_at": "2020-05-21T01:19:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that the manifest is missing at least one file necessary to build\nfrom the sdist for version 3.0.0. You're in good company, about 5% of other\nprojects updated in the last year are also missing files.\n\n```\n+ /tmp/venv/bin/pip3 wheel --no-binary flask-dance -w /tmp/ext flask-dance==3.0.0\nLooking in indexes: http://10.10.0.139:9191/root/pypi/+simple/\nCollecting flask-dance==3.0.0\n  Downloading http://10.10.0.139:9191/root/pypi/%2Bf/5ec/8fae543ef93aa/Flask-Dance-3.0.0.tar.gz (1.4 MB)\n    ERROR: Command errored out with exit status 1:\n     command: /tmp/venv/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-wheel-car0cg_y/flask-dance/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-wheel-car0cg_y/flask-dance/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-wheel-car0cg_y/flask-dance/pip-egg-info\n         cwd: /tmp/pip-wheel-car0cg_y/flask-dance/\n    Complete output (7 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-wheel-car0cg_y/flask-dance/setup.py\", line 63, in <module>\n        tests_require=get_requirements(\"tests/requirements.txt\"),\n      File \"/tmp/pip-wheel-car0cg_y/flask-dance/setup.py\", line 38, in get_requirements\n        with open(path) as f:\n    FileNotFoundError: [Errno 2] No such file or directory: 'tests/requirements.txt'\n    ----------------------------------------\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n```\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/304", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/304/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/304/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/304", "id": 622179596, "node_id": "MDU6SXNzdWU2MjIxNzk1OTY=", "number": 304, "title": "Missing files in sdist", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-21T01:17:50Z", "updated_at": "2020-05-21T18:02:15Z", "closed_at": "2020-05-21T18:02:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that the manifest is missing at least one file necessary to build\nfrom the sdist for version 3.0.0. You're in good company, about 5% of other\nprojects updated in the last year are also missing files.\n\n```\n+ /tmp/venv/bin/pip3 wheel --no-binary flask-dance -w /tmp/ext flask-dance==3.0.0\nLooking in indexes: http://10.10.0.139:9191/root/pypi/+simple/\nCollecting flask-dance==3.0.0\n  Downloading http://10.10.0.139:9191/root/pypi/%2Bf/5ec/8fae543ef93aa/Flask-Dance-3.0.0.tar.gz (1.4 MB)\n    ERROR: Command errored out with exit status 1:\n     command: /tmp/venv/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-wheel-car0cg_y/flask-dance/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-wheel-car0cg_y/flask-dance/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-wheel-car0cg_y/flask-dance/pip-egg-info\n         cwd: /tmp/pip-wheel-car0cg_y/flask-dance/\n    Complete output (7 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-wheel-car0cg_y/flask-dance/setup.py\", line 63, in <module>\n        tests_require=get_requirements(\"tests/requirements.txt\"),\n      File \"/tmp/pip-wheel-car0cg_y/flask-dance/setup.py\", line 38, in get_requirements\n        with open(path) as f:\n    FileNotFoundError: [Errno 2] No such file or directory: 'tests/requirements.txt'\n    ----------------------------------------\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n```\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/301", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/301/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/301/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/301", "id": 570063681, "node_id": "MDU6SXNzdWU1NzAwNjM2ODE=", "number": 301, "title": "google.post to gmail api not properly executing", "user": {"login": "Symply13", "id": 61209626, "node_id": "MDQ6VXNlcjYxMjA5NjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/61209626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Symply13", "html_url": "https://github.com/Symply13", "followers_url": "https://api.github.com/users/Symply13/followers", "following_url": "https://api.github.com/users/Symply13/following{/other_user}", "gists_url": "https://api.github.com/users/Symply13/gists{/gist_id}", "starred_url": "https://api.github.com/users/Symply13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Symply13/subscriptions", "organizations_url": "https://api.github.com/users/Symply13/orgs", "repos_url": "https://api.github.com/users/Symply13/repos", "events_url": "https://api.github.com/users/Symply13/events{/privacy}", "received_events_url": "https://api.github.com/users/Symply13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-24T19:01:01Z", "updated_at": "2020-02-25T17:34:40Z", "closed_at": "2020-02-25T17:34:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! I have been banging my head against the desk for hours trying to figure this out...  \r\n\r\ncode: \r\n```python\r\nmessage = MIMEText(msgbody,'html')\r\nmessage['to'] = recipient\r\nmessage['from'] = sender\r\nmessage['subject'] = subject\r\ngmailbytes = base64.urlsafe_b64encode(message.as_bytes())\r\ngmailstring = gmailbytes.decode()\r\ngmailready = json.dumps({'raw':gmailstring}) \r\nprint(gmailready)\r\nheaders = {'Content-Type': 'message/rfc822'}\r\nresp = google.post(url='https://www.googleapis.com/upload/gmail/v1/users/me/messages/send', headers=headers, data=gmailready)\r\n```\r\n\r\nWhile using Google's API explorer, if I copy and paste the output of gmailready directly into the API explorer, the messages sends as expected... but when executing from google.post() command, it gives me the error: \r\n\r\n```json\r\n{\r\n \"error\": {\r\n  \"errors\": [\r\n   {\r\n    \"domain\": \"global\",\r\n    \"reason\": \"invalidArgument\",\r\n    \"message\": \"Recipient address required\"\r\n   }\r\n  ],\r\n  \"code\": 400,\r\n  \"message\": \"Recipient address required\"\r\n  }\r\n }\r\n```\r\n\r\nif I don't add the headers to the post call, and execute:\r\n`resp = google.post(url='https://www.googleapis.com/upload/gmail/v1/users/me/messages/send', data=gmailready)`\r\n\r\nit gives the error: \r\n\r\n```json\r\n{\r\n \"error\": {\r\n  \"errors\": [\r\n   {\r\n    \"domain\": \"global\",\r\n    \"reason\": \"badContent\",\r\n    \"message\": \"Media type 'application/octet-stream' is not supported. Valid media types: [message/rfc822]\"\r\n   }\r\n  ],\r\n  \"code\": 400,\r\n  \"message\": \"Media type 'application/octet-stream' is not supported. Valid media types: [message/rfc822]\"\r\n }\r\n}\r\n```\r\n\r\nI've tried changing headers to `application/json` (per the google api documentation) and it still complains it wants the `message/rfc882` Where am I going wrong at?\r\n\r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/300", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/300/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/300/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/300", "id": 559899053, "node_id": "MDU6SXNzdWU1NTk4OTkwNTM=", "number": 300, "title": "Verifying OAuth state response", "user": {"login": "kentslaney", "id": 12777122, "node_id": "MDQ6VXNlcjEyNzc3MTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/12777122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kentslaney", "html_url": "https://github.com/kentslaney", "followers_url": "https://api.github.com/users/kentslaney/followers", "following_url": "https://api.github.com/users/kentslaney/following{/other_user}", "gists_url": "https://api.github.com/users/kentslaney/gists{/gist_id}", "starred_url": "https://api.github.com/users/kentslaney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kentslaney/subscriptions", "organizations_url": "https://api.github.com/users/kentslaney/orgs", "repos_url": "https://api.github.com/users/kentslaney/repos", "events_url": "https://api.github.com/users/kentslaney/events{/privacy}", "received_events_url": "https://api.github.com/users/kentslaney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-04T18:26:15Z", "updated_at": "2020-02-04T19:29:01Z", "closed_at": "2020-02-04T19:29:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if I'm missing something, but it seems like [this code](https://github.com/singingwolfboy/flask-dance/blob/master/flask_dance/consumer/oauth2.py#L240-L249) is flawed. Does the response state actually get checked against the stored value? Shouldn't this be vulnerable to CSRF attacks?\r\n\r\nIt also looks like new state requests override the session state of previous ones, meaning that if you open multiple login dances it should fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/299", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/299/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/299/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/299", "id": 558962478, "node_id": "MDU6SXNzdWU1NTg5NjI0Nzg=", "number": 299, "title": "Heroku oauth issue", "user": {"login": "naoned44", "id": 14182873, "node_id": "MDQ6VXNlcjE0MTgyODcz", "avatar_url": "https://avatars1.githubusercontent.com/u/14182873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naoned44", "html_url": "https://github.com/naoned44", "followers_url": "https://api.github.com/users/naoned44/followers", "following_url": "https://api.github.com/users/naoned44/following{/other_user}", "gists_url": "https://api.github.com/users/naoned44/gists{/gist_id}", "starred_url": "https://api.github.com/users/naoned44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naoned44/subscriptions", "organizations_url": "https://api.github.com/users/naoned44/orgs", "repos_url": "https://api.github.com/users/naoned44/repos", "events_url": "https://api.github.com/users/naoned44/events{/privacy}", "received_events_url": "https://api.github.com/users/naoned44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T09:44:23Z", "updated_at": "2020-03-05T10:58:21Z", "closed_at": "2020-03-05T10:58:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nwhen trying to signin with heroku, the heroku.authorized flag stay to false.\r\nIf I check session data, the property heroku_oauth_state is added after loging but no further calls to heroku api can be done: the authentication token is not set in header \r\n\r\nI reproduce this issue with the singingwolfboy/flask-dance-heroku project.\r\n\r\nBest regards\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/298", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/298/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/298/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/298", "id": 554657741, "node_id": "MDU6SXNzdWU1NTQ2NTc3NDE=", "number": 298, "title": "Is there any way we can integrate flask-dance with Flask-Security?", "user": {"login": "JagdishKolhe", "id": 54310972, "node_id": "MDQ6VXNlcjU0MzEwOTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/54310972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JagdishKolhe", "html_url": "https://github.com/JagdishKolhe", "followers_url": "https://api.github.com/users/JagdishKolhe/followers", "following_url": "https://api.github.com/users/JagdishKolhe/following{/other_user}", "gists_url": "https://api.github.com/users/JagdishKolhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JagdishKolhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JagdishKolhe/subscriptions", "organizations_url": "https://api.github.com/users/JagdishKolhe/orgs", "repos_url": "https://api.github.com/users/JagdishKolhe/repos", "events_url": "https://api.github.com/users/JagdishKolhe/events{/privacy}", "received_events_url": "https://api.github.com/users/JagdishKolhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-24T10:32:30Z", "updated_at": "2020-01-24T15:03:29Z", "closed_at": "2020-01-24T15:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way we can integrate flask-dance with Flask-Security", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/292", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/292/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/292/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/292", "id": 540659354, "node_id": "MDU6SXNzdWU1NDA2NTkzNTQ=", "number": 292, "title": "Not authenticated after authenticating successfully with ADFS", "user": {"login": "lazzarello", "id": 3917, "node_id": "MDQ6VXNlcjM5MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazzarello", "html_url": "https://github.com/lazzarello", "followers_url": "https://api.github.com/users/lazzarello/followers", "following_url": "https://api.github.com/users/lazzarello/following{/other_user}", "gists_url": "https://api.github.com/users/lazzarello/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazzarello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazzarello/subscriptions", "organizations_url": "https://api.github.com/users/lazzarello/orgs", "repos_url": "https://api.github.com/users/lazzarello/repos", "events_url": "https://api.github.com/users/lazzarello/events{/privacy}", "received_events_url": "https://api.github.com/users/lazzarello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-20T00:21:18Z", "updated_at": "2019-12-31T03:37:57Z", "closed_at": "2019-12-31T03:37:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "My organization has an Active Directory Federation Services server for all SSO activities, including OAuth2. I'm using a custom OAuth2ConsumerBlueprint() which successfully redirects me to the login page. With a successful login, I get redirected to the location specified in redirect_to. But when I call adfs_blueprint.session.authorized, it returns false. There is a cookie named session that is generated by Flask. If I dump the session object from Flask it looks like this\r\n\r\n```\r\n{'headers': {'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}, 'auth': . at 0x7f045aeaea60>, 'proxies': {}, 'hooks': {'response': []}, 'params': {}, 'stream': False, 'verify': True, 'cert': None, 'max_redirects': 30, 'trust_env': True, 'cookies': , 'adapters': OrderedDict([('https://', ), ('http://', )]), '_client': , 'token': None, 'scope': 'openid', 'redirect_uri': None, 'state': , '_state': None, 'auto_refresh_url': None, 'auto_refresh_kwargs': {}, 'token_updater': .token_updater at 0x7f045aeaeae8>, 'compliance_hook': {'access_token_response': set(), 'refresh_token_response': set(), 'protected_request': set()}, 'blueprint': , 'base_url': URLObject('https://example.com/adfs/oauth2')}\r\n```\r\n\r\nBut `adfs_blueprint.session.authorized` returns false.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/291", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/291/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/291/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/291", "id": 539992138, "node_id": "MDU6SXNzdWU1Mzk5OTIxMzg=", "number": 291, "title": "Flask-Dance abandoned ", "user": {"login": "ElPapi42", "id": 17053461, "node_id": "MDQ6VXNlcjE3MDUzNDYx", "avatar_url": "https://avatars2.githubusercontent.com/u/17053461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElPapi42", "html_url": "https://github.com/ElPapi42", "followers_url": "https://api.github.com/users/ElPapi42/followers", "following_url": "https://api.github.com/users/ElPapi42/following{/other_user}", "gists_url": "https://api.github.com/users/ElPapi42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElPapi42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElPapi42/subscriptions", "organizations_url": "https://api.github.com/users/ElPapi42/orgs", "repos_url": "https://api.github.com/users/ElPapi42/repos", "events_url": "https://api.github.com/users/ElPapi42/events{/privacy}", "received_events_url": "https://api.github.com/users/ElPapi42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-19T00:00:28Z", "updated_at": "2019-12-19T09:49:31Z", "closed_at": "2019-12-19T09:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "is this project abandoned ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/289", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/289/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/289/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/289", "id": 514189004, "node_id": "MDU6SXNzdWU1MTQxODkwMDQ=", "number": 289, "title": "repeated google login if multiple workers", "user": {"login": "dragonyanglong", "id": 16789768, "node_id": "MDQ6VXNlcjE2Nzg5NzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/16789768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dragonyanglong", "html_url": "https://github.com/dragonyanglong", "followers_url": "https://api.github.com/users/dragonyanglong/followers", "following_url": "https://api.github.com/users/dragonyanglong/following{/other_user}", "gists_url": "https://api.github.com/users/dragonyanglong/gists{/gist_id}", "starred_url": "https://api.github.com/users/dragonyanglong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dragonyanglong/subscriptions", "organizations_url": "https://api.github.com/users/dragonyanglong/orgs", "repos_url": "https://api.github.com/users/dragonyanglong/repos", "events_url": "https://api.github.com/users/dragonyanglong/events{/privacy}", "received_events_url": "https://api.github.com/users/dragonyanglong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-29T20:05:34Z", "updated_at": "2019-11-08T22:57:24Z", "closed_at": "2019-11-08T22:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "My flask web app uses gunicorn. If only one gunicorn worker is in use, flask-dance google auth works great. But if multiple gunicorn workers are in use when start the flask app, google login will redirect back to home page like nothing happened, I have to try login multiple times (4-5 times), then finally get in.\r\n\r\nAlso, a user login, it will be login as another user who login earlier, I suspect this is some problem from session between different gunicorn workers.\r\n\r\nWhen it failed, i.e. repeated google login:\r\n```\r\nprint(google.get(\"/oauth2/v2/userinfo\").json())\r\n```\r\nThe output is:\r\n```\r\n{'error': {'code': 401, 'message': 'Request is missing required authentication credential. Expected OAuth 2 access token, login cookie or other valid authentication credential. See https://developers.google.com/identity/sign-in/web/devconsole-project.', 'status': 'UNAUTHENTICATED'}}\r\n```\r\n\r\nWhen it succeed, it will show as normal, including the user's info.\r\n\r\nAny solutions for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/283", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/283/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/283/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/283", "id": 479381497, "node_id": "MDU6SXNzdWU0NzkzODE0OTc=", "number": 283, "title": "Fix for \"MissingTokenError\"", "user": {"login": "rebortg", "id": 24626486, "node_id": "MDQ6VXNlcjI0NjI2NDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/24626486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rebortg", "html_url": "https://github.com/rebortg", "followers_url": "https://api.github.com/users/rebortg/followers", "following_url": "https://api.github.com/users/rebortg/following{/other_user}", "gists_url": "https://api.github.com/users/rebortg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rebortg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rebortg/subscriptions", "organizations_url": "https://api.github.com/users/rebortg/orgs", "repos_url": "https://api.github.com/users/rebortg/repos", "events_url": "https://api.github.com/users/rebortg/events{/privacy}", "received_events_url": "https://api.github.com/users/rebortg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-11T15:29:01Z", "updated_at": "2019-08-27T16:02:54Z", "closed_at": "2019-08-27T16:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "there are some closed issues where user mention the \"MissingTokenError\". in my issue with Hubspot: [#211](https://github.com/singingwolfboy/flask-dance/issues/211)\r\n\r\nin a Mention of this [solution](https://github.com/requests/requests-oauthlib/issues/324#issuecomment-501004440)\r\n\r\ni added `include_client_id=True` [here](https://github.com/singingwolfboy/flask-dance/blob/a6d4d6455a518d313b638f65aff5630fe6909702/flask_dance/consumer/oauth2.py#L256) and it worked for hubspot\r\ni don't want to create a PR because i don't know which things are influenced by it. Maybe we can this discuss it here first. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/280", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/280/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/280/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/280", "id": 466674250, "node_id": "MDU6SXNzdWU0NjY2NzQyNTA=", "number": 280, "title": "React, JWT, and Flask Dance", "user": {"login": "VortexH", "id": 4550124, "node_id": "MDQ6VXNlcjQ1NTAxMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4550124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VortexH", "html_url": "https://github.com/VortexH", "followers_url": "https://api.github.com/users/VortexH/followers", "following_url": "https://api.github.com/users/VortexH/following{/other_user}", "gists_url": "https://api.github.com/users/VortexH/gists{/gist_id}", "starred_url": "https://api.github.com/users/VortexH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VortexH/subscriptions", "organizations_url": "https://api.github.com/users/VortexH/orgs", "repos_url": "https://api.github.com/users/VortexH/repos", "events_url": "https://api.github.com/users/VortexH/events{/privacy}", "received_events_url": "https://api.github.com/users/VortexH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T05:43:16Z", "updated_at": "2019-08-27T15:58:23Z", "closed_at": "2019-08-27T15:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, right now, I have a working version of my app using Flask Dance and Semantic UI but we're transitioning to an architecture where the front end and back end are not tightly coupled.\r\n\r\nFlask Dance handles the redirects to other pages but I'd like for React to handle this.\r\n\r\nI've been reading articles on JWT and I'd like to use that for authentication on the front end but I'm not sure how to create a JWT token on my backend.\r\n\r\nGoing in this direction, I also don't want Flask Dance to handle the redirects, since I'm relying on React to handle that for me.\r\n\r\nIs there any way to simply generate a JWT, pass that to the front end, and pass it to the back end when I need to access certain routes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/278", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/278/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/278/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/278", "id": 464862854, "node_id": "MDU6SXNzdWU0NjQ4NjI4NTQ=", "number": 278, "title": "connect_via with flask_dance", "user": {"login": "MUGABA", "id": 42658956, "node_id": "MDQ6VXNlcjQyNjU4OTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/42658956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MUGABA", "html_url": "https://github.com/MUGABA", "followers_url": "https://api.github.com/users/MUGABA/followers", "following_url": "https://api.github.com/users/MUGABA/following{/other_user}", "gists_url": "https://api.github.com/users/MUGABA/gists{/gist_id}", "starred_url": "https://api.github.com/users/MUGABA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MUGABA/subscriptions", "organizations_url": "https://api.github.com/users/MUGABA/orgs", "repos_url": "https://api.github.com/users/MUGABA/repos", "events_url": "https://api.github.com/users/MUGABA/events{/privacy}", "received_events_url": "https://api.github.com/users/MUGABA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-06T15:08:25Z", "updated_at": "2019-07-07T09:55:04Z", "closed_at": "2019-07-07T09:55:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "@cust_bp.route('/api/v1/customers/facebook', methods = ['POST'])\r\ndef facebook_login():\r\n    if not facebook.authorized:\r\n        return redirect(url_for('facebook.login'))\r\n\r\n    account_info = facebook.get('account/settings.json')\r\n    account_info_json = account_info.json()\r\n\r\n    return '<h1>Your facebook name is @{}'.format(account_info_json['screen_name'])\r\n\r\n\r\n@oauth_authorized.connect_via(facebook_blueprint)\r\ndef facebook_logged_in(blueprint, token):\r\n\r\n    account_info = blueprint.session.get('account/settings.json')\r\n\r\n    if account_info.ok:\r\n        account_info_json = account_info.json()\r\n        username = account_info_json['screen_name']\r\n\r\n        query = Customers.query.filter_by(username=name)\r\n\r\n        try:\r\n            user = query.one()\r\n        except NoResultFound:\r\n            user = User(username=username)\r\n            db.session.add(user)\r\n            db.session.commit()\r\n\r\n        login_user(user)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/276", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/276/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/276/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/276", "id": 462751862, "node_id": "MDU6SXNzdWU0NjI3NTE4NjI=", "number": 276, "title": "Google Oauth Erroring Out After Warning", "user": {"login": "manasgaur1", "id": 12580923, "node_id": "MDQ6VXNlcjEyNTgwOTIz", "avatar_url": "https://avatars2.githubusercontent.com/u/12580923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manasgaur1", "html_url": "https://github.com/manasgaur1", "followers_url": "https://api.github.com/users/manasgaur1/followers", "following_url": "https://api.github.com/users/manasgaur1/following{/other_user}", "gists_url": "https://api.github.com/users/manasgaur1/gists{/gist_id}", "starred_url": "https://api.github.com/users/manasgaur1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manasgaur1/subscriptions", "organizations_url": "https://api.github.com/users/manasgaur1/orgs", "repos_url": "https://api.github.com/users/manasgaur1/repos", "events_url": "https://api.github.com/users/manasgaur1/events{/privacy}", "received_events_url": "https://api.github.com/users/manasgaur1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-01T14:38:01Z", "updated_at": "2019-07-04T08:29:38Z", "closed_at": "2019-07-04T08:29:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey... Need your help.\r\n\r\nMy Google Authentication was working fine last week but has started erroring today. The library gives the following Warning\r\n\r\n> Warning: Scope has changed from \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\" to \"openid https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\"\r\n\r\nThen it errors out at:\r\n> validate_token_parameters(params)\r\n\r\nHere is my blueprint code:\r\n`google_bp = make_google_blueprint(\r\n        client_id=flask_app.config['GOOGLE_CLIENT_ID'],\r\n        client_secret=flask_app.config['GOOGLE_CLIENT_SECRET'],\r\n        redirect_url='/authorized',\r\n        scope=[\"https://www.googleapis.com/auth/userinfo.email\", \"https://www.googleapis.com/auth/userinfo.profile\"]\r\n    )`\r\n\r\nI feel this might be related to Google deprecating the GooglePlus API. The strange point is that this is working with just userinfo.profile, but I need the email also.\r\n\r\nI am using Flask-Dance==1.3.0 with python 2.7.10\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/275", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/275/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/275/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/275", "id": 458694752, "node_id": "MDU6SXNzdWU0NTg2OTQ3NTI=", "number": 275, "title": "Using oauth for programmatic access", "user": {"login": "jimcarreer", "id": 433092, "node_id": "MDQ6VXNlcjQzMzA5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/433092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimcarreer", "html_url": "https://github.com/jimcarreer", "followers_url": "https://api.github.com/users/jimcarreer/followers", "following_url": "https://api.github.com/users/jimcarreer/following{/other_user}", "gists_url": "https://api.github.com/users/jimcarreer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimcarreer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimcarreer/subscriptions", "organizations_url": "https://api.github.com/users/jimcarreer/orgs", "repos_url": "https://api.github.com/users/jimcarreer/repos", "events_url": "https://api.github.com/users/jimcarreer/events{/privacy}", "received_events_url": "https://api.github.com/users/jimcarreer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-06-20T14:32:50Z", "updated_at": "2019-07-28T12:06:02Z", "closed_at": "2019-07-28T12:06:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got flask dance working for Okta.  The redirect / login flow is fine via a browser, but what if I want to provide programmatic access to my applications API? Does flask-dance support that, if so is there some documentation I can look at related to doing this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/270", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/270/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/270/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/270", "id": 453031543, "node_id": "MDU6SXNzdWU0NTMwMzE1NDM=", "number": 270, "title": "Redirecting after OAuth dance AND using multi-user setup", "user": {"login": "jmprovencher", "id": 12234108, "node_id": "MDQ6VXNlcjEyMjM0MTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/12234108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmprovencher", "html_url": "https://github.com/jmprovencher", "followers_url": "https://api.github.com/users/jmprovencher/followers", "following_url": "https://api.github.com/users/jmprovencher/following{/other_user}", "gists_url": "https://api.github.com/users/jmprovencher/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmprovencher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmprovencher/subscriptions", "organizations_url": "https://api.github.com/users/jmprovencher/orgs", "repos_url": "https://api.github.com/users/jmprovencher/repos", "events_url": "https://api.github.com/users/jmprovencher/events{/privacy}", "received_events_url": "https://api.github.com/users/jmprovencher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-06T13:29:19Z", "updated_at": "2019-06-06T14:42:49Z", "closed_at": "2019-06-06T14:42:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Based on the documentation, when using [multi-user setup ](https://flask-dance.readthedocs.io/en/latest/multi-user.html) we're supposed to return False to disable Flask default behavior for saving the token. With the new update regarding #253 ,  now if we want to redirect, we need to do this after the `@oauth_authorized` signal.\r\n```python\r\n@oauth_authorized.connect\r\ndef logged_in(blueprint, token):\r\n    blueprint.token = token\r\n    next_url = flask.session[\"next_url\"]\r\n    return flask.redirect(next_url)\r\n```\r\n\r\nHow can we return a flask.redirect and return False at the same time in the same method? \r\nIt does not seem possible to me. Is there a new behaviour I need to know in order to disable the default token saving?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/265", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/265/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/265/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/265", "id": 448510024, "node_id": "MDU6SXNzdWU0NDg1MTAwMjQ=", "number": 265, "title": "Does Flask-Dance support the Oauth2 \"Authorization Code Grant\" flow?", "user": {"login": "adrianocr", "id": 7603338, "node_id": "MDQ6VXNlcjc2MDMzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7603338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianocr", "html_url": "https://github.com/adrianocr", "followers_url": "https://api.github.com/users/adrianocr/followers", "following_url": "https://api.github.com/users/adrianocr/following{/other_user}", "gists_url": "https://api.github.com/users/adrianocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianocr/subscriptions", "organizations_url": "https://api.github.com/users/adrianocr/orgs", "repos_url": "https://api.github.com/users/adrianocr/repos", "events_url": "https://api.github.com/users/adrianocr/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianocr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-25T22:58:34Z", "updated_at": "2019-06-04T20:53:50Z", "closed_at": "2019-06-04T20:53:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The flow is listed here: https://tools.ietf.org/html/rfc6749#section-4.1\r\nSpecifically I ask because that's how Shopify does oauth: https://help.shopify.com/en/api/getting-started/authentication/oauth#the-oauth-flow\r\n\r\nI'm having a hard time seeing how to use Flask-Dance to go through that flow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/264", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/264/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/264/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/264", "id": 447470643, "node_id": "MDU6SXNzdWU0NDc0NzA2NDM=", "number": 264, "title": "SqlAlchemy storage example - RuntimeError: Working outside of application context.", "user": {"login": "RichardCullen", "id": 45776269, "node_id": "MDQ6VXNlcjQ1Nzc2MjY5", "avatar_url": "https://avatars3.githubusercontent.com/u/45776269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichardCullen", "html_url": "https://github.com/RichardCullen", "followers_url": "https://api.github.com/users/RichardCullen/followers", "following_url": "https://api.github.com/users/RichardCullen/following{/other_user}", "gists_url": "https://api.github.com/users/RichardCullen/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichardCullen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichardCullen/subscriptions", "organizations_url": "https://api.github.com/users/RichardCullen/orgs", "repos_url": "https://api.github.com/users/RichardCullen/repos", "events_url": "https://api.github.com/users/RichardCullen/events{/privacy}", "received_events_url": "https://api.github.com/users/RichardCullen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-23T06:24:26Z", "updated_at": "2019-05-24T00:14:40Z", "closed_at": "2019-05-24T00:14:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying the example code in https://flask-dance.readthedocs.io/en/latest/storages.html#sqlalchemy-storage, the app won't start:\r\n\r\n```\r\n<snip>\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_dance.consumer.storage.sqla import SQLAlchemyStorage, OAuthConsumerMixin\r\n<snip>\r\n\r\napp = Flask(__name__)\r\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///tmp/test.db'\r\ndb = SQLAlchemy(app)\r\n\r\nclass OAuth(OAuthConsumerMixin, db.Model):\r\n    pass\r\n<snip>\r\ncognito.storage = SQLAlchemyStorage(OAuth,db.session,user=current_user)\r\napp.register_blueprint(cognito_bp, url_prefix=\"/login\")\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"cognito.py\", line 58, in <module>\r\n    cognito.storage = SQLAlchemyStorage(OAuth,db.session,user=current_user)\r\n  File \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\werkzeug\\local.py\", line 364, in <lambda>\r\n    __setattr__ = lambda x, n, v: setattr(x._get_current_object(), n, v)\r\n  File \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\werkzeug\\local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\globals.py\", line 44, in _lookup_app_object\r\n    raise RuntimeError(_app_ctx_err_msg)\r\nRuntimeError: Working outside of application context.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/263", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/263/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/263/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/263", "id": 446995503, "node_id": "MDU6SXNzdWU0NDY5OTU1MDM=", "number": 263, "title": "Okta provider not working", "user": {"login": "RichardCullen", "id": 45776269, "node_id": "MDQ6VXNlcjQ1Nzc2MjY5", "avatar_url": "https://avatars3.githubusercontent.com/u/45776269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichardCullen", "html_url": "https://github.com/RichardCullen", "followers_url": "https://api.github.com/users/RichardCullen/followers", "following_url": "https://api.github.com/users/RichardCullen/following{/other_user}", "gists_url": "https://api.github.com/users/RichardCullen/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichardCullen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichardCullen/subscriptions", "organizations_url": "https://api.github.com/users/RichardCullen/orgs", "repos_url": "https://api.github.com/users/RichardCullen/repos", "events_url": "https://api.github.com/users/RichardCullen/events{/privacy}", "received_events_url": "https://api.github.com/users/RichardCullen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-05-22T08:17:30Z", "updated_at": "2019-12-04T15:36:22Z", "closed_at": "2019-12-04T15:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use the Okta provider (which doesn't have an example to follow) \r\n\r\n```\r\nimport os\r\nfrom flask import Flask, redirect, url_for\r\nfrom flask_dance.contrib.okta import make_okta_blueprint, okta\r\nfrom flask_dotenv import DotEnv\r\n\r\napp = Flask(__name__)\r\nenv = DotEnv(app)\r\n\r\napp.secret_key = os.environ.get(\"FLASK_SECRET_KEY\", \"supersekrit\")\r\nokta_bp = make_okta_blueprint(\r\n    client_id=app.config[\"OKTA_OAUTH_CLIENT_ID\"],\r\n    client_secret=app.config[\"OKTA_OAUTH_CLIENT_SECRET\"],)\r\napp.register_blueprint(okta_bp, url_prefix=\"/login\")\r\n\r\n\r\n@app.route(\"/\")\r\ndef index():\r\n    if not okta.authorized:\r\n        return redirect(url_for(\"okta.login\"))\r\n    resp = okta.get(\"/user\")\r\n    assert resp.ok\r\n    return \"You are @{login} on Okta\".format(login=resp.json()[\"login\"])\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True, use_reloader=True)\r\n```\r\n\r\nGives me the following error:\r\n```\r\nbuiltins.AttributeError\r\nAttributeError: 'NoneType' object has no attribute 'lower'\r\n\r\nTraceback (most recent call last)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 2328, in __call__\r\nreturn self.wsgi_app(environ, start_response)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 2314, in wsgi_app\r\nresponse = self.handle_exception(e)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 1760, in handle_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\_compat.py\", line 36, in reraise\r\nraise value\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 2311, in wsgi_app\r\nresponse = self.full_dispatch_request()\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 1834, in full_dispatch_request\r\nrv = self.handle_user_exception(e)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 1737, in handle_user_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\_compat.py\", line 36, in reraise\r\nraise value\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 1832, in full_dispatch_request\r\nrv = self.dispatch_request()\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask\\app.py\", line 1818, in dispatch_request\r\nreturn self.view_functions[rule.endpoint](**req.view_args)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\flask_dance\\consumer\\oauth2.py\", line 201, in login\r\nself.authorization_url, state=self.state, **self.authorization_url_params\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\requests_oauthlib\\oauth2_session.py\", line 158, in authorization_url\r\n**kwargs), state\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\clients\\web_application.py\", line 90, in prepare_request_uri\r\nredirect_uri=redirect_uri, scope=scope, state=state, **kwargs)\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\parameters.py\", line 70, in prepare_grant_uri\r\nif not is_secure_transport(uri):\r\nFile \"C:\\work\\python\\okta-flask-example\\env\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\utils.py\", line 94, in is_secure_transport\r\nreturn uri.lower().startswith('https://')\r\nAttributeError: 'NoneType' object has no attribute 'lower'\r\n```\r\nbecause `self.authorization_url` is empty.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/254", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/254/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/254/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/254", "id": 438622411, "node_id": "MDU6SXNzdWU0Mzg2MjI0MTE=", "number": 254, "title": "User loading tightly couples token setting to storage backend", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-30T06:34:27Z", "updated_at": "2019-05-30T10:12:46Z", "closed_at": "2019-05-30T10:12:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the [example of how to create user accounts on login](https://github.com/singingwolfboy/flask-dance/blob/1c612140bed7c0451fbe4796c7f525d54b401a19/docs/multi-user.rst#overriding-the-default-behavior), there is a tight coupling of the user creation to the toekn storage backend (in this case sqla) using the `oauth_authorized` callback.\r\n\r\nThis has a few downsides:\r\n1. copy and pasting (or similar) code from the [original implementation](https://github.com/singingwolfboy/flask-dance/blob/1500b7bd6d34dd2fb79b87f53112d70642f5cf02/flask_dance/consumer/storage/sqla.py)\r\n2. making it harder to change to other token storage backends\r\n3. losing the [caching functionality](https://github.com/singingwolfboy/flask-dance/blob/1500b7bd6d34dd2fb79b87f53112d70642f5cf02/flask_dance/consumer/storage/sqla.py#L159-L162) (this can be brought, back but then requires more code in the callback)\r\n\r\nessentially a stripped down version of the sqla backend has been re-written within the `oauth_authorized` callback.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/251", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/251/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/251/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/251", "id": 437978188, "node_id": "MDU6SXNzdWU0Mzc5NzgxODg=", "number": 251, "title": "should the provider_user_id & access token be hashed & salted?", "user": {"login": "mkschulze", "id": 3390820, "node_id": "MDQ6VXNlcjMzOTA4MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3390820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkschulze", "html_url": "https://github.com/mkschulze", "followers_url": "https://api.github.com/users/mkschulze/followers", "following_url": "https://api.github.com/users/mkschulze/following{/other_user}", "gists_url": "https://api.github.com/users/mkschulze/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkschulze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkschulze/subscriptions", "organizations_url": "https://api.github.com/users/mkschulze/orgs", "repos_url": "https://api.github.com/users/mkschulze/repos", "events_url": "https://api.github.com/users/mkschulze/events{/privacy}", "received_events_url": "https://api.github.com/users/mkschulze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-27T19:52:56Z", "updated_at": "2019-04-27T20:54:41Z", "closed_at": "2019-04-27T20:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like the title says, I\u2018m unsure whether this could be compromised and misused otherwise.\r\n\r\nthnks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/249", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/249/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/249/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/249", "id": 436440010, "node_id": "MDU6SXNzdWU0MzY0NDAwMTA=", "number": 249, "title": "Support Linkedin as a provider", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-24T00:04:11Z", "updated_at": "2019-05-07T20:16:17Z", "closed_at": "2019-05-07T20:16:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://docs.microsoft.com/en-us/linkedin/shared/authentication/authentication", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/248", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/248/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/248/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/248", "id": 433323305, "node_id": "MDU6SXNzdWU0MzMzMjMzMDU=", "number": 248, "title": "Flask Dance and url_for on Heroku", "user": {"login": "joshua-s", "id": 1479244, "node_id": "MDQ6VXNlcjE0NzkyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1479244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshua-s", "html_url": "https://github.com/joshua-s", "followers_url": "https://api.github.com/users/joshua-s/followers", "following_url": "https://api.github.com/users/joshua-s/following{/other_user}", "gists_url": "https://api.github.com/users/joshua-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshua-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshua-s/subscriptions", "organizations_url": "https://api.github.com/users/joshua-s/orgs", "repos_url": "https://api.github.com/users/joshua-s/repos", "events_url": "https://api.github.com/users/joshua-s/events{/privacy}", "received_events_url": "https://api.github.com/users/joshua-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-04-15T14:46:23Z", "updated_at": "2019-08-23T17:21:40Z", "closed_at": "2019-08-23T17:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using your lovely library Flask Dance in an app on Heroku, but receiving an issue: generated redirect URLs use http instead of https. The odd thing is that any usage of `url_for` with `_external=True` outside of Flask Dance generates an https URL. And, according to the logs, the correct `X-Forwarded-Proto` is being sent.\r\n\r\nI have read your article on proxies and set `PREFERRED_URL_SCHEME`: https://flask-dance.readthedocs.io/en/latest/proxies.html\r\n\r\nPlease let me know what information you would need to debug this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/243", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/243/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/243/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/243", "id": 423093614, "node_id": "MDU6SXNzdWU0MjMwOTM2MTQ=", "number": 243, "title": "Proper way to detect if user is logged in - After doing OAuth Dance", "user": {"login": "KurtKline", "id": 20330796, "node_id": "MDQ6VXNlcjIwMzMwNzk2", "avatar_url": "https://avatars3.githubusercontent.com/u/20330796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KurtKline", "html_url": "https://github.com/KurtKline", "followers_url": "https://api.github.com/users/KurtKline/followers", "following_url": "https://api.github.com/users/KurtKline/following{/other_user}", "gists_url": "https://api.github.com/users/KurtKline/gists{/gist_id}", "starred_url": "https://api.github.com/users/KurtKline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KurtKline/subscriptions", "organizations_url": "https://api.github.com/users/KurtKline/orgs", "repos_url": "https://api.github.com/users/KurtKline/repos", "events_url": "https://api.github.com/users/KurtKline/events{/privacy}", "received_events_url": "https://api.github.com/users/KurtKline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-20T06:48:19Z", "updated_at": "2019-05-30T10:13:14Z", "closed_at": "2019-05-30T10:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am implementing the Google multi-user setup where the local user accounts are created automatically when logging in with OAuth. So I am closely following the code from the \"Overriding Default Behavior\" section of the multi-user setups doc. \r\n\r\nOnce a user is logged in successfully with OAuth + a user account has been verified / created, is it correct to user the `@login_required` decorator from Flask-Login to determine if a user is logged in for the rest of the views? Or is using `if not current_user.is_authenticated` OR `if not google.authorized` a better solution? \r\n\r\nIf I try to use `if not google.authorized` on any view besides the one specified in the blueprint `app.register_blueprint(google_blueprint, url_prefix=\"/login\")` I get a \"ValueError: Cannot get OAuth token without an associated user\". However, both `@login_required` and `if not current_user.is_authenticated` seem to work for me.\r\n\r\nI also noticed in this [video tutorial](https://www.youtube.com/watch?v=G44Tpi58dcc) by Pretty Printed uses the `@login_required` decorator. \r\n\r\nFinally, would you recommend a specific package that handles \"user roles / role based views\" well while also playing nicely with Flask-Login / Flask-Dance?\r\nperformed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/242", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/242/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/242/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/242", "id": 421901039, "node_id": "MDU6SXNzdWU0MjE5MDEwMzk=", "number": 242, "title": "Google Multi-User Setup: \"provider_user_id\" same as \"user_id\"?", "user": {"login": "KurtKline", "id": 20330796, "node_id": "MDQ6VXNlcjIwMzMwNzk2", "avatar_url": "https://avatars3.githubusercontent.com/u/20330796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KurtKline", "html_url": "https://github.com/KurtKline", "followers_url": "https://api.github.com/users/KurtKline/followers", "following_url": "https://api.github.com/users/KurtKline/following{/other_user}", "gists_url": "https://api.github.com/users/KurtKline/gists{/gist_id}", "starred_url": "https://api.github.com/users/KurtKline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KurtKline/subscriptions", "organizations_url": "https://api.github.com/users/KurtKline/orgs", "repos_url": "https://api.github.com/users/KurtKline/repos", "events_url": "https://api.github.com/users/KurtKline/events{/privacy}", "received_events_url": "https://api.github.com/users/KurtKline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-17T09:24:00Z", "updated_at": "2019-05-30T10:13:25Z", "closed_at": "2019-05-30T10:13:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, just wanted to say thank you for creating Flask-Dance. Seems to be an extremely powerful package.\r\n\r\nI would like to clarify the intended column specification for the OAuth table for a Google multi-user setup. On the \"Multi-User Setups\" page of the docs, an OAuth object is initialized in the following way: \r\n\r\n```\r\noauth = OAuth(\r\n            provider=blueprint.name,\r\n            provider_user_id=github_user_id,\r\n            token=token,\r\n        )\r\n```\r\n\r\nHowever, on the \"Token Storages\" page, the OAuth table is setup as follows: \r\n\r\n```\r\nclass OAuth(OAuthConsumerMixin, db.Model):\r\n    user_id = db.Column(db.Integer, db.ForeignKey(User.id))\r\n    user = db.relationship(User)\r\n```\r\n\r\nAre the \"provider_user_id\" and \"user_id\" referring to the same field? Or should the OAuth class have both a \"user_id\" (which links to the User table's \"id\" column) and a \"provider_user_id\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/239", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/239/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/239/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/239", "id": 421753941, "node_id": "MDU6SXNzdWU0MjE3NTM5NDE=", "number": 239, "title": "client_id and client_secret required for Meetup", "user": {"login": "electricworry", "id": 10690531, "node_id": "MDQ6VXNlcjEwNjkwNTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/10690531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/electricworry", "html_url": "https://github.com/electricworry", "followers_url": "https://api.github.com/users/electricworry/followers", "following_url": "https://api.github.com/users/electricworry/following{/other_user}", "gists_url": "https://api.github.com/users/electricworry/gists{/gist_id}", "starred_url": "https://api.github.com/users/electricworry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/electricworry/subscriptions", "organizations_url": "https://api.github.com/users/electricworry/orgs", "repos_url": "https://api.github.com/users/electricworry/repos", "events_url": "https://api.github.com/users/electricworry/events{/privacy}", "received_events_url": "https://api.github.com/users/electricworry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-03-16T01:24:27Z", "updated_at": "2019-06-18T13:23:08Z", "closed_at": "2019-05-30T10:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks very much for writing this package. Should make flask projects a lot tidier!\r\n\r\nI'm having an issue with the Meetup blueprint, and I can't figure out what's up. I've taken the flask-dance-github project as a test (and confirmed it works fine with Github) and modified it minimally so it should work with Meetup. (Slightly different parameter names.) However I get the following error:\r\n\r\n```\r\n127.0.0.1 - - [16/Mar/2019 01:16:15] \"GET /login/meetup/authorized?code=<code>&state=<state> HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/flask_dance/consumer/oauth2.py\", line 266, in authorized\r\n    **self.token_url_params\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/requests_oauthlib/oauth2_session.py\", line 307, in fetch_token\r\n    self._client.parse_request_body_response(r.text, scope=self.scope)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 415, in parse_request_body_response\r\n    self.token = parse_token_response(body, scope=scope)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 425, in parse_token_response\r\n    validate_token_parameters(params)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 432, in validate_token_parameters\r\n    raise_from_error(params.get('error'), params)\r\n  File \"/home/bob/projects/flask-dance-github/venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 405, in raise_from_error\r\n    raise cls(**kwargs)\r\noauthlib.oauth2.rfc6749.errors.InvalidClientIdError: (invalid_request) client_id and client_secret required\r\n```\r\n\r\nI am being successfully redirected to the authorize endpoint on Meetup, and I accept, then I am quickly redirected back to <my site>/meetup/login/authorized. However it seems that the client_id and client_secret are not then being sent to the access endpoint on Meetup.\r\n\r\nDon't currently have a proxy to properly check the requests from flask. Any idea what the cause might be?\r\n\r\nCheers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/236", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/236/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/236/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/236", "id": 419349355, "node_id": "MDU6SXNzdWU0MTkzNDkzNTU=", "number": 236, "title": "Bump OAuthLib requirement to 3.0.1", "user": {"login": "JellyWX", "id": 5578434, "node_id": "MDQ6VXNlcjU1Nzg0MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5578434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JellyWX", "html_url": "https://github.com/JellyWX", "followers_url": "https://api.github.com/users/JellyWX/followers", "following_url": "https://api.github.com/users/JellyWX/following{/other_user}", "gists_url": "https://api.github.com/users/JellyWX/gists{/gist_id}", "starred_url": "https://api.github.com/users/JellyWX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JellyWX/subscriptions", "organizations_url": "https://api.github.com/users/JellyWX/orgs", "repos_url": "https://api.github.com/users/JellyWX/repos", "events_url": "https://api.github.com/users/JellyWX/events{/privacy}", "received_events_url": "https://api.github.com/users/JellyWX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-11T08:37:02Z", "updated_at": "2019-03-11T11:31:55Z", "closed_at": "2019-03-11T11:31:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Potentially this is an issue with pip or apt rather than flask-dance but I'm posting here just in case.\r\n\r\nFought with this for 5 hours yesterday having `InvalidClientError (invalid_client)` when moving from one prod server to another. Eventually ruled out all issues relating to config and code, so checked all my pip installs and found the difference was in the version of oauthlib.\r\n\r\nOn oauthlib 2.1.0, the discord blueprint fails with `invalid_client` every time even with a correct client ID and secret.\r\n\r\nAgain, I've installed flask dance many many times and never had this issue, so maybe this is an issue with pip or apt conflicting versions", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/233", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/233/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/233/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/233", "id": 415658040, "node_id": "MDU6SXNzdWU0MTU2NTgwNDA=", "number": 233, "title": "Provider with HTTPBasic Authentication - Unable to fetch token", "user": {"login": "pgiraud", "id": 319774, "node_id": "MDQ6VXNlcjMxOTc3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/319774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgiraud", "html_url": "https://github.com/pgiraud", "followers_url": "https://api.github.com/users/pgiraud/followers", "following_url": "https://api.github.com/users/pgiraud/following{/other_user}", "gists_url": "https://api.github.com/users/pgiraud/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgiraud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgiraud/subscriptions", "organizations_url": "https://api.github.com/users/pgiraud/orgs", "repos_url": "https://api.github.com/users/pgiraud/repos", "events_url": "https://api.github.com/users/pgiraud/events{/privacy}", "received_events_url": "https://api.github.com/users/pgiraud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-02-28T14:44:38Z", "updated_at": "2019-03-01T08:30:54Z", "closed_at": "2019-03-01T08:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want my application to have the users being authenticated via a gitlab instance we host. Any request to this server requires basic http authentication.\r\n\r\nAfter the user has authorized the application on gitlab, he's been redirected and the `oauth lib` tries to fetch the token. The problem is that without valid credentials the returned response is 401 and I can't get any further in the authentication process.\r\n\r\nI've already tried to provide the session an `auth` property but it gets overwritten in `requests_oauthlib.oauth2_session.OAuth2Session.fetch_token`. https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L302\r\n\r\nIf I provide my own tuple or `requests.auth.HTTPBasicAuth` as value for `auth` when calling ` fetch_token`, I then get an `InvalidClientError` which apparently means that the basic authentification is OK, but unfortunately `client_id` seem to be missing.\r\n\r\nAm I missing something?\r\nThanks for any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/232", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/232/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/232/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/232", "id": 415617266, "node_id": "MDU6SXNzdWU0MTU2MTcyNjY=", "number": 232, "title": "Azure provider and auto_refresh_url", "user": {"login": "mrsixw", "id": 1408135, "node_id": "MDQ6VXNlcjE0MDgxMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1408135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrsixw", "html_url": "https://github.com/mrsixw", "followers_url": "https://api.github.com/users/mrsixw/followers", "following_url": "https://api.github.com/users/mrsixw/following{/other_user}", "gists_url": "https://api.github.com/users/mrsixw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrsixw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrsixw/subscriptions", "organizations_url": "https://api.github.com/users/mrsixw/orgs", "repos_url": "https://api.github.com/users/mrsixw/repos", "events_url": "https://api.github.com/users/mrsixw/events{/privacy}", "received_events_url": "https://api.github.com/users/mrsixw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-28T13:13:30Z", "updated_at": "2019-05-30T10:13:51Z", "closed_at": "2019-05-30T10:13:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wondering if there was a reason why the azure provider doesn't seem to have auto_refresh_url configured?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/231", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/231/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/231/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/231", "id": 414547942, "node_id": "MDU6SXNzdWU0MTQ1NDc5NDI=", "number": 231, "title": "Flask-Dance 2.0", "user": {"login": "singingwolfboy", "id": 132355, "node_id": "MDQ6VXNlcjEzMjM1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/132355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singingwolfboy", "html_url": "https://github.com/singingwolfboy", "followers_url": "https://api.github.com/users/singingwolfboy/followers", "following_url": "https://api.github.com/users/singingwolfboy/following{/other_user}", "gists_url": "https://api.github.com/users/singingwolfboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/singingwolfboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singingwolfboy/subscriptions", "organizations_url": "https://api.github.com/users/singingwolfboy/orgs", "repos_url": "https://api.github.com/users/singingwolfboy/repos", "events_url": "https://api.github.com/users/singingwolfboy/events{/privacy}", "received_events_url": "https://api.github.com/users/singingwolfboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-26T10:49:47Z", "updated_at": "2019-03-30T18:59:04Z", "closed_at": "2019-03-30T18:59:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We're approaching the 2.0 release for Flask-Dance. Incrementing the major version is an opportunity to make backwards-incompatible changes. Here are some proposed changes we could make:\r\n\r\n* drop `next` redirect (PR #230)\r\n* consistent config names for pre-set configurations (PR #229)\r\n* multithreading support? (issue #205)\r\n* auto-refreshing tokens? (issue #143)\r\n* remove special treatment of `expires_at` parameter? (https://github.com/oauthlib/oauthlib/issues/568)\r\n\r\nWe certainly don't have to make _all_ of these changes in version 2.0. In particular, while I would _love_ to get multithreading working, I don't even know how to properly test the code to verify it.\r\n\r\nIf anyone else has ideas of what to include for version 2.0, please add a comment to this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/226", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/226/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/226/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/226", "id": 413024536, "node_id": "MDU6SXNzdWU0MTMwMjQ1MzY=", "number": 226, "title": "Force Google Account chooser", "user": {"login": "jmprovencher", "id": 12234108, "node_id": "MDQ6VXNlcjEyMjM0MTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/12234108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmprovencher", "html_url": "https://github.com/jmprovencher", "followers_url": "https://api.github.com/users/jmprovencher/followers", "following_url": "https://api.github.com/users/jmprovencher/following{/other_user}", "gists_url": "https://api.github.com/users/jmprovencher/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmprovencher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmprovencher/subscriptions", "organizations_url": "https://api.github.com/users/jmprovencher/orgs", "repos_url": "https://api.github.com/users/jmprovencher/repos", "events_url": "https://api.github.com/users/jmprovencher/events{/privacy}", "received_events_url": "https://api.github.com/users/jmprovencher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-21T16:53:30Z", "updated_at": "2019-02-22T09:10:01Z", "closed_at": "2019-02-22T09:10:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to add a parameter in make_google_blueprint to force OAuth to re-prompt the account chooser page.\r\n\r\nIt seems feasible based on this [post](https://stackoverflow.com/questions/14384354/force-google-account-chooser) from stack overflow.\r\n\r\n`prompt=select_account`\r\n\r\nAlso, supposedly, we should use `prompt` now instead of `approval_prompt` in the `authorization_url_params`\r\n\r\nWould like like me to do a PR or do you have any solution for it currently? @singingwolfboy ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/224", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/224/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/224/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/224", "id": 411274012, "node_id": "MDU6SXNzdWU0MTEyNzQwMTI=", "number": 224, "title": "Double Blueprint registration ", "user": {"login": "mrsaicharan1", "id": 25197147, "node_id": "MDQ6VXNlcjI1MTk3MTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/25197147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrsaicharan1", "html_url": "https://github.com/mrsaicharan1", "followers_url": "https://api.github.com/users/mrsaicharan1/followers", "following_url": "https://api.github.com/users/mrsaicharan1/following{/other_user}", "gists_url": "https://api.github.com/users/mrsaicharan1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrsaicharan1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrsaicharan1/subscriptions", "organizations_url": "https://api.github.com/users/mrsaicharan1/orgs", "repos_url": "https://api.github.com/users/mrsaicharan1/repos", "events_url": "https://api.github.com/users/mrsaicharan1/events{/privacy}", "received_events_url": "https://api.github.com/users/mrsaicharan1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-18T02:17:36Z", "updated_at": "2019-02-21T07:50:58Z", "closed_at": "2019-02-18T10:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "@singingwolfboy I'm trying to implement Twitter authentication and flask_dance throws out an error saying that\r\n`AssertionError: A name collision occurred between blueprints <flask_dance.consumer.oauth1.OAuth1ConsumerBlueprint object at 0x7f29b2ab1860> and <flask_dance.consumer.oauth1.OAuth1ConsumerBlueprint object at 0x7f29b3418198>. Both share the same name \"twitter\". Blueprints that are created on the fly need unique names. ` . Can't seem to find out where I'm registering the blueprint twice. For further reference , here's the link to my PR to the repo. [fossasia/open-event-server#5600](https://github.com/fossasia/open-event-server/pull/5600). Would be great if you could help me out here :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/223", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/223/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/223/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/223", "id": 406300578, "node_id": "MDU6SXNzdWU0MDYzMDA1Nzg=", "number": 223, "title": "Rename \"backend\" to \"storage\"", "user": {"login": "singingwolfboy", "id": 132355, "node_id": "MDQ6VXNlcjEzMjM1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/132355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singingwolfboy", "html_url": "https://github.com/singingwolfboy", "followers_url": "https://api.github.com/users/singingwolfboy/followers", "following_url": "https://api.github.com/users/singingwolfboy/following{/other_user}", "gists_url": "https://api.github.com/users/singingwolfboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/singingwolfboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singingwolfboy/subscriptions", "organizations_url": "https://api.github.com/users/singingwolfboy/orgs", "repos_url": "https://api.github.com/users/singingwolfboy/repos", "events_url": "https://api.github.com/users/singingwolfboy/events{/privacy}", "received_events_url": "https://api.github.com/users/singingwolfboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-04T12:09:51Z", "updated_at": "2019-02-21T16:56:32Z", "closed_at": "2019-02-21T16:56:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I think I made a mistake when picking the name \"backend\" for the part of Flask-Dance that stores and retrieves OAuth tokens. \"Backend\" and \"frontend\" already have pretty well agreed-upon meanings in the context of web development, so talking about a different kind of \"backend\" is kind of weird.\r\n\r\nSince the purpose of this object is to store and retrieve data, I think it should be called a \"storage\" instead of a \"backend\". I've already updated the docs in #221 to account for this change. We will need to update the code, as well.\r\n\r\nNote that this will *definitely* be a backwards-incompatible change, which means we'll need to release it with Flask-Dance 2.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/219", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/219/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/219/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/219", "id": 404760643, "node_id": "MDU6SXNzdWU0MDQ3NjA2NDM=", "number": 219, "title": "Add option to insert code before `login` redirect", "user": {"login": "AdamGold", "id": 747847, "node_id": "MDQ6VXNlcjc0Nzg0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/747847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamGold", "html_url": "https://github.com/AdamGold", "followers_url": "https://api.github.com/users/AdamGold/followers", "following_url": "https://api.github.com/users/AdamGold/following{/other_user}", "gists_url": "https://api.github.com/users/AdamGold/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamGold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamGold/subscriptions", "organizations_url": "https://api.github.com/users/AdamGold/orgs", "repos_url": "https://api.github.com/users/AdamGold/repos", "events_url": "https://api.github.com/users/AdamGold/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamGold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-30T13:03:21Z", "updated_at": "2019-02-01T09:56:51Z", "closed_at": "2019-02-01T09:56:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Found myself wanting to create a session before the `login` redirect. For example, A user clicks \"Login with Facebook\" -> getting redirected to `http://example.com/facebook` -> CREATE SESSION -> redirect to Facebook page -> `http://example.com/facebook/authorized?....`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/218", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/218/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/218/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/218", "id": 403551907, "node_id": "MDU6SXNzdWU0MDM1NTE5MDc=", "number": 218, "title": "`include_client_id` in requests oauthlib 1.2.0 is not clear", "user": {"login": "AdamGold", "id": 747847, "node_id": "MDQ6VXNlcjc0Nzg0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/747847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamGold", "html_url": "https://github.com/AdamGold", "followers_url": "https://api.github.com/users/AdamGold/followers", "following_url": "https://api.github.com/users/AdamGold/following{/other_user}", "gists_url": "https://api.github.com/users/AdamGold/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamGold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamGold/subscriptions", "organizations_url": "https://api.github.com/users/AdamGold/orgs", "repos_url": "https://api.github.com/users/AdamGold/repos", "events_url": "https://api.github.com/users/AdamGold/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamGold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-27T13:38:48Z", "updated_at": "2019-01-30T14:09:31Z", "closed_at": "2019-01-30T14:09:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Migrating from `requests-oauthlib` 1.0.0 to 1.2.0, Instagram stopped working.\r\nAfter some debugging, I found out that the `client_id` and `client_secret` are not being sent. Long story short, I've added `token_url_params={'include_client_id': True}` to the initiation of the Instagram blueprint.\r\nI think it should be more clear how to use the `include_client_id` parameter, and pass it as a standalone param instead of inside a dict.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/215", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/215/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/215/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/215", "id": 401682413, "node_id": "MDU6SXNzdWU0MDE2ODI0MTM=", "number": 215, "title": "Twitter redirect to /url after login instead of /", "user": {"login": "PandaWhoCodes", "id": 6967017, "node_id": "MDQ6VXNlcjY5NjcwMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6967017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PandaWhoCodes", "html_url": "https://github.com/PandaWhoCodes", "followers_url": "https://api.github.com/users/PandaWhoCodes/followers", "following_url": "https://api.github.com/users/PandaWhoCodes/following{/other_user}", "gists_url": "https://api.github.com/users/PandaWhoCodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/PandaWhoCodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PandaWhoCodes/subscriptions", "organizations_url": "https://api.github.com/users/PandaWhoCodes/orgs", "repos_url": "https://api.github.com/users/PandaWhoCodes/repos", "events_url": "https://api.github.com/users/PandaWhoCodes/events{/privacy}", "received_events_url": "https://api.github.com/users/PandaWhoCodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-22T09:54:54Z", "updated_at": "2019-01-23T13:29:55Z", "closed_at": "2019-01-23T13:29:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldnt find any documentation to redirect a user to a custom URL after successfull auth.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/213", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/213/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/213/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/213", "id": 401435640, "node_id": "MDU6SXNzdWU0MDE0MzU2NDA=", "number": 213, "title": "@<contrib>.authorization_required - does not work (example or production code)", "user": {"login": "bkgoodman", "id": 473399, "node_id": "MDQ6VXNlcjQ3MzM5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/473399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkgoodman", "html_url": "https://github.com/bkgoodman", "followers_url": "https://api.github.com/users/bkgoodman/followers", "following_url": "https://api.github.com/users/bkgoodman/following{/other_user}", "gists_url": "https://api.github.com/users/bkgoodman/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkgoodman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkgoodman/subscriptions", "organizations_url": "https://api.github.com/users/bkgoodman/orgs", "repos_url": "https://api.github.com/users/bkgoodman/repos", "events_url": "https://api.github.com/users/bkgoodman/events{/privacy}", "received_events_url": "https://api.github.com/users/bkgoodman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-21T16:48:17Z", "updated_at": "2019-02-26T10:21:21Z", "closed_at": "2019-02-26T10:21:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been banging my head against a wall with a _similar_ issue in my code - so I though I'd try a sample to sanity check. It turns out - the sample doesn't work - and it's the same _line_ that has the problem as my code (though in slightly different way):\r\n\r\nWhen running the code in your README/quickstart - on launch - I get:\r\n\r\n`RuntimeError: Working outside of application context.`\r\n\r\nIn your code:\r\n\r\n```python\r\n@app.route(\"/\")\r\n@github.authorization_required\r\ndef index():\r\n    resp = github.get(\"/user\")\r\n```\r\n\r\nIf I remove the `@github.authorization_required` - this error goes away.\r\n\r\nI am of course concerned bycause in my code (using the google backend), when I do:\r\n\r\n```python\r\n@app.route('/test/oauth')\r\n@google.authorization_required\r\ndef TestStd():\r\n    return \"Google auth Required\"\r\n```\r\n\r\nI get:\r\n\r\n`AttributeError: 'AppContext' object has no attribute 'google_oauth'`\r\n\r\nWhich appears to be related to the following:\r\n\r\n```python\r\n    @google_bp.before_app_request\r\n    def set_applocal_session():\r\n        ctx = stack.top\r\n        ctx.google_oauth = google_bp.session\r\n\r\n    return google_bp\r\n\r\ngoogle = LocalProxy(partial(_lookup_app_object, \"google_oauth\"))\r\n```\r\n\r\nfrom contrib/google.py\r\n\r\n(which I can't really make heads-or-tails out of).\r\n\r\nAre these two issues related? How can I resolve?\r\n\r\nThanks!\r\n\r\n-BKG\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/211", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/211/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/211/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/211", "id": 400220899, "node_id": "MDU6SXNzdWU0MDAyMjA4OTk=", "number": 211, "title": "Hubspot Custom Blueprint \"MissingTokenError\"", "user": {"login": "jcopacetic", "id": 11053940, "node_id": "MDQ6VXNlcjExMDUzOTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/11053940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcopacetic", "html_url": "https://github.com/jcopacetic", "followers_url": "https://api.github.com/users/jcopacetic/followers", "following_url": "https://api.github.com/users/jcopacetic/following{/other_user}", "gists_url": "https://api.github.com/users/jcopacetic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcopacetic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcopacetic/subscriptions", "organizations_url": "https://api.github.com/users/jcopacetic/orgs", "repos_url": "https://api.github.com/users/jcopacetic/repos", "events_url": "https://api.github.com/users/jcopacetic/events{/privacy}", "received_events_url": "https://api.github.com/users/jcopacetic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-17T10:58:14Z", "updated_at": "2019-12-13T05:27:12Z", "closed_at": "2019-05-30T10:10:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm following this example: https://flask-dance.readthedocs.io/en/latest/quickstarts/sqla-multiuser.html\r\n\r\nbut instead of github I am creating a custom blueprint to connect to Hubspot.\r\n\r\nHubspot sends the token through the url as '?code=<token>\". I am seeing this in the url where I am getting the error. it occurs to me that flask_dance doesn't know to look at the 'code' query in the url for the token. I would be very grateful if someone could direct me on how to fix this. \r\n\r\n```\r\nfrom flask_dance.consumer.backend.sqla import OAuthConsumerMixin, SQLAlchemyBackend\r\nfrom flask_dance.consumer import OAuth2ConsumerBlueprint, oauth_authorized, oauth_error\r\n\r\nblueprint = OAuth2ConsumerBlueprint(\r\n  \"hubspot\", __name__,\r\n  client_id=\"_not_for_you_\",\r\n  client_secret=\"_not_for_you_\",\r\n  token_url=\"https://api.hubapi.com/oauth/v1/token\",\r\n  redirect_uri='https://127.0.0.1:5000',\r\n  scope=[\"contacts\"],\r\n  authorization_url='https://app.hubspot.com/oauth/authorize',\r\n)\r\napp.register_blueprint(blueprint, url_prefix=\"/login\")\r\n\r\n#create/Login Local user on Succesful OAuth Login\r\n@oauth_authorized.connect_via(blueprint)\r\ndef hubspot_logged_in(blueprint, token):\r\n  if not token:\r\n      flash(\"Failed to log in with Hubspot.\", category=\"error\")\r\n      return False\r\n\r\n  resp = blueprint.session.get(\"/user\")\r\n  if not resp.ok:\r\n      msg = \"Failed to fetch user info from Hubpost.\"\r\n      flash(msg, category=\"error\")\r\n      return False\r\n\r\n  hubspot_info = resp.json()\r\n  hubspot_user_id = str(github_info[\"id\"])\r\n\r\n  # Find this OAuth token in the database, or create it\r\n  query = OAuth.query.filter_by(\r\n    provider=blueprint.name,\r\n    provider_user_id=hubspot_user_id,\r\n  )\r\n  try:\r\n    oauth = query.one()\r\n  except NoResultFound:\r\n    oauth = Oauth(\r\n      provider=blueprint.name,\r\n      provider_user_id=hubspot_user_id,\r\n      token=token,\r\n    )\r\n\r\n  if oauth.user:\r\n    login_user(oauth.user)\r\n    flash(\"Successfully signed in with Hubspot.\")\r\n  else:\r\n    # Create a new local user account for this user\r\n    user = User(\r\n      # Remember that 'email' can be None, if the user declines\r\n      email=Hubspot_info[\"email\"],\r\n      name=hubspot_info[\"name\"],\r\n    )\r\n    oauth.user = user\r\n    db.session.add_all([user, oauth])\r\n    db.session.commit()\r\n    login_user(user)\r\n    flash(\"Successfully signed in with hubspot\")\r\n  \r\n  #Disable Flask-Dance's default behavior for saving the OAuth token\r\n  return False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/203", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/203/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/203/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/203", "id": 396207465, "node_id": "MDU6SXNzdWUzOTYyMDc0NjU=", "number": 203, "title": "Redirecting to a dynamic URL in Google blueprint", "user": {"login": "mephi42", "id": 662616, "node_id": "MDQ6VXNlcjY2MjYxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/662616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mephi42", "html_url": "https://github.com/mephi42", "followers_url": "https://api.github.com/users/mephi42/followers", "following_url": "https://api.github.com/users/mephi42/following{/other_user}", "gists_url": "https://api.github.com/users/mephi42/gists{/gist_id}", "starred_url": "https://api.github.com/users/mephi42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mephi42/subscriptions", "organizations_url": "https://api.github.com/users/mephi42/orgs", "repos_url": "https://api.github.com/users/mephi42/repos", "events_url": "https://api.github.com/users/mephi42/events{/privacy}", "received_events_url": "https://api.github.com/users/mephi42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-01-05T22:52:50Z", "updated_at": "2019-04-24T17:01:39Z", "closed_at": "2019-02-26T10:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to implement the following scenario with Flask-Dance: when a not logged in user tries to access a protected page, he is given an option to log in via Google and, having succeeded, return to the protected page. Having browsed the Flask-Dance code, I've constructed the following URL:\r\n\r\n```\r\nhttps://$HOST/login/google?next=https://$HOST/whatever/user/was/trying/to/do/in/the/first/place\r\n```\r\n\r\nHowever, this fails on the Google side with\r\n\r\n```\r\nThe redirect URI in the request, ..., does not match the ones authorized for the OAuth client\r\n```\r\n\r\nbecause Google supports only statically configured redirect URIs. I have read that one should use `state` parameter in this case. Does Flask-Dance support that out of the box?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/197", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/197/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/197/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/197", "id": 391717680, "node_id": "MDU6SXNzdWUzOTE3MTc2ODA=", "number": 197, "title": "Twitter bp isn't reading config correctly from app config", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-17T13:42:18Z", "updated_at": "2019-01-13T10:13:02Z", "closed_at": "2019-01-13T10:13:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This should be tested by https://github.com/singingwolfboy/flask-dance/blob/master\r\n/tests/contrib/test_twitter.py#L28 \r\nbut adding \r\n```py    \r\n    twitter_bp = make_twitter_blueprint(redirect_to=\"index\")\r\n    assert twitter_bp.client_key == \"foo\"\r\n    assert twitter_bp.client_secret == \"bar\"\r\n    app.register_blueprint(twitter_bp)\r\n```\r\nfails the test.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/191", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/191/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/191/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/191", "id": 386477529, "node_id": "MDU6SXNzdWUzODY0Nzc1Mjk=", "number": 191, "title": "Using Flask-dance for Slack app directory installation or with Add To Slack button", "user": {"login": "Lexy2", "id": 38648992, "node_id": "MDQ6VXNlcjM4NjQ4OTky", "avatar_url": "https://avatars0.githubusercontent.com/u/38648992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lexy2", "html_url": "https://github.com/Lexy2", "followers_url": "https://api.github.com/users/Lexy2/followers", "following_url": "https://api.github.com/users/Lexy2/following{/other_user}", "gists_url": "https://api.github.com/users/Lexy2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lexy2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lexy2/subscriptions", "organizations_url": "https://api.github.com/users/Lexy2/orgs", "repos_url": "https://api.github.com/users/Lexy2/repos", "events_url": "https://api.github.com/users/Lexy2/events{/privacy}", "received_events_url": "https://api.github.com/users/Lexy2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-01T17:20:01Z", "updated_at": "2019-01-07T14:04:51Z", "closed_at": "2019-01-07T14:04:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @singingwolfboy!\r\nThank you for the great Flask app to manage OAuth dance.\r\n\r\nI use Flask-Dance to manage Slack authentication and ran into an issue where your experience may be beneficial.\r\nIf you build OAuth dance starting from `/login/slack` view, everything works fine. However, if you try to install the app from _Add to Slack_ button or directly from Slack app directory, it forwards you to \r\n`https://slack.com/oauth/authorize?scope=SCOPE&client_id=CLIENT_ID`, and once you authorize the app, Slack redirects you to a `redirect_url` that I set in my Slack app to `login/slack/authorized`.\r\nSlack sending the request to `login/slack/authorized` does not set the state as the OAuth dance is not initiated from the consumer.\r\nHere comes the problem. As per `flask_dance/consumer/oauth2.py`, lines 225-228:\r\n```\r\n        if state_key not in flask.session:\r\n            # can't validate state, so redirect back to login view\r\n            log.info(\"state not found, redirecting user to login\")\r\n            return redirect(url_for(\".login\"))\r\n```\r\nSo, Flask-Dance does not see the state parameter recorded in the current session and asks Slack to authorize the app for the second time, now sending the request with `state` parameter set, and the user has to click _Authorize_ twice.\r\n\r\nIt's probably not a problem of Flask-Dance per se, but I would not like to implement a separate Slack redirect URL just for this install flow.\r\n\r\nWhat do you think, how can work around this problem? Or maybe you could suggest a pull request to Flask-Dance?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/190", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/190/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/190/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/190", "id": 384428816, "node_id": "MDU6SXNzdWUzODQ0Mjg4MTY=", "number": 190, "title": "Weakly-referenced object no longer exists when implementing discord", "user": {"login": "iw-an", "id": 25753391, "node_id": "MDQ6VXNlcjI1NzUzMzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/25753391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iw-an", "html_url": "https://github.com/iw-an", "followers_url": "https://api.github.com/users/iw-an/followers", "following_url": "https://api.github.com/users/iw-an/following{/other_user}", "gists_url": "https://api.github.com/users/iw-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/iw-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iw-an/subscriptions", "organizations_url": "https://api.github.com/users/iw-an/orgs", "repos_url": "https://api.github.com/users/iw-an/repos", "events_url": "https://api.github.com/users/iw-an/events{/privacy}", "received_events_url": "https://api.github.com/users/iw-an/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-26T17:12:53Z", "updated_at": "2018-11-26T20:20:57Z", "closed_at": "2018-11-26T20:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "After successfully authenticating via Discord oauth2, I am checking successful authentication via data in the session, any call to the discord class will result in `ReferenceError: weakly-referenced object no longer exists`\r\n\r\nFor reference I am using the latest version of Flask-Dance running on python 3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/188", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/188/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/188/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/188", "id": 383956524, "node_id": "MDU6SXNzdWUzODM5NTY1MjQ=", "number": 188, "title": "authorized_url is http, not https:", "user": {"login": "aardvark82", "id": 32086262, "node_id": "MDQ6VXNlcjMyMDg2MjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/32086262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aardvark82", "html_url": "https://github.com/aardvark82", "followers_url": "https://api.github.com/users/aardvark82/followers", "following_url": "https://api.github.com/users/aardvark82/following{/other_user}", "gists_url": "https://api.github.com/users/aardvark82/gists{/gist_id}", "starred_url": "https://api.github.com/users/aardvark82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aardvark82/subscriptions", "organizations_url": "https://api.github.com/users/aardvark82/orgs", "repos_url": "https://api.github.com/users/aardvark82/repos", "events_url": "https://api.github.com/users/aardvark82/events{/privacy}", "received_events_url": "https://api.github.com/users/aardvark82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-11-24T03:54:06Z", "updated_at": "2018-12-02T18:52:18Z", "closed_at": "2018-12-02T18:52:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm calling flask-dance with make_slack_blueprint, and the URL flask-dance sends to Slack as the authorized_url is \r\n\r\n\"http://mydomain.com/login/slack/authorized\"\r\n\r\ninstead of the proper\r\n\r\n\"http**s**://mydomain.com/login/slack/authorized\"\r\n\r\nThis means the call fails on my production server since I did not set the insecure HTTPS env variable there (and shouldn't)\r\n\r\nhow do I get flask dance to pass the https URL for the authorized_url? If I try to specify an absolute path as the authorized url then it gets treated as a relative path.\r\n\r\n    blueprint_slack = make_slack_blueprint(\r\n        client_id=\"sdfdsg242894452\",\r\n        client_secret=\"53019238021358rrgdf\",\r\n        scope=[\"identify\",  \"chat:write:bot\"],\r\n        **authorized_url='https://www.mydomain.com/login/slack/authorized',**   \r\n        redirect_url='/slack_authorized',\r\n)\r\n\r\nIf it is meaningful:\r\n\r\nI'm running Flask 1.0+ \r\n- with Flask-talisman 0 all URl's redirect to https:// and I have HSTS set \r\n- with a gunicorn server, with relevant https flags set in my gunicorn config file\r\n\r\nsecure_proxy_ssl_header = ('HTTP_X_FORWARDED_PROTO', 'https')\r\nforwarded_allow_ips = '*'\r\nsecure_scheme_headers = {'X-Forwarded-Proto': 'https'}\r\nx_forwarded_for_header = 'X-FORWARDED-FOR'\r\n\r\nPS: And yes, the client_id and secret above are bogus!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/186", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/186/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/186/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/186", "id": 382558525, "node_id": "MDU6SXNzdWUzODI1NTg1MjU=", "number": 186, "title": "Tokens expiring but `authorized` still passing", "user": {"login": "JellyWX", "id": 5578434, "node_id": "MDQ6VXNlcjU1Nzg0MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5578434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JellyWX", "html_url": "https://github.com/JellyWX", "followers_url": "https://api.github.com/users/JellyWX/followers", "following_url": "https://api.github.com/users/JellyWX/following{/other_user}", "gists_url": "https://api.github.com/users/JellyWX/gists{/gist_id}", "starred_url": "https://api.github.com/users/JellyWX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JellyWX/subscriptions", "organizations_url": "https://api.github.com/users/JellyWX/orgs", "repos_url": "https://api.github.com/users/JellyWX/repos", "events_url": "https://api.github.com/users/JellyWX/events{/privacy}", "received_events_url": "https://api.github.com/users/JellyWX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-20T08:52:53Z", "updated_at": "2018-12-03T11:52:25Z", "closed_at": "2018-12-03T11:52:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code is present at https://github.com/reminder-bot/web\r\n\r\nUsers are having issues that the token is expired yet the cache is not cleared. Is this a browser issue or an issue that the cache is set to live too long? These issues have only recently begun.\r\n\r\nUsing `contrib.discord` with Flask Python 3.6. Not aware of any changes to the Discord OAuth API. Increasingly confused since this issue is difficult to reproduce but definitely happening\r\n\r\n`Nov 20 07:38:48 fusiondiscordbots.com gunicorn3[1126]: oauthlib.oauth2.rfc6749.errors.TokenExpiredError: (toke`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/183", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/183/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/183/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/183", "id": 373666425, "node_id": "MDU6SXNzdWUzNzM2NjY0MjU=", "number": 183, "title": "How to white list github orgs", "user": {"login": "johnchase", "id": 2243771, "node_id": "MDQ6VXNlcjIyNDM3NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2243771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnchase", "html_url": "https://github.com/johnchase", "followers_url": "https://api.github.com/users/johnchase/followers", "following_url": "https://api.github.com/users/johnchase/following{/other_user}", "gists_url": "https://api.github.com/users/johnchase/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnchase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnchase/subscriptions", "organizations_url": "https://api.github.com/users/johnchase/orgs", "repos_url": "https://api.github.com/users/johnchase/repos", "events_url": "https://api.github.com/users/johnchase/events{/privacy}", "received_events_url": "https://api.github.com/users/johnchase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T20:36:07Z", "updated_at": "2018-10-26T17:35:29Z", "closed_at": "2018-10-26T17:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have created the basic usage example for authenticating users through github, thanks for the examples provided, this worked great. \r\n\r\nI would like to extend this to only authenticate users that are members of a specific group. In other words how do I whitelist a specific organization, and prevent all others from authenticating?\r\n\r\nI thought I may be able to define this in the `scope` parameter, (though I would have been surprised it if actually worked...)\r\n \r\n```python\r\nblueprint = make_github_blueprint(\r\nclient_id=\"****\",\r\nclient_secret=\"****\",\r\n scope='read:org, my_org'\r\n )\r\n```\r\nThis results in `Warning: Scope has changed from \"read:org,my_org\" to \"read:org\".` I was following #131 though I was unable to find the resolution. I apologize if it is in the docs and I have just missed it. Thanks for your help! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/182", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/182/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/182/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/182", "id": 372975615, "node_id": "MDU6SXNzdWUzNzI5NzU2MTU=", "number": 182, "title": "how to use google services", "user": {"login": "louking", "id": 875138, "node_id": "MDQ6VXNlcjg3NTEzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/875138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louking", "html_url": "https://github.com/louking", "followers_url": "https://api.github.com/users/louking/followers", "following_url": "https://api.github.com/users/louking/following{/other_user}", "gists_url": "https://api.github.com/users/louking/gists{/gist_id}", "starred_url": "https://api.github.com/users/louking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louking/subscriptions", "organizations_url": "https://api.github.com/users/louking/orgs", "repos_url": "https://api.github.com/users/louking/repos", "events_url": "https://api.github.com/users/louking/events{/privacy}", "received_events_url": "https://api.github.com/users/louking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-23T12:32:29Z", "updated_at": "2018-10-25T13:26:04Z", "closed_at": "2018-10-25T12:32:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to map https://developers.google.com/drive/api/v3/quickstart/python, in particular the line `service = build('drive', 'v3', http=creds.authorize(Http()))` through use of flask-dance.\r\n\r\nI see at https://flask-dance.readthedocs.io/en/latest/providers.html#module-flask_dance.contrib.google `flask_dance.contrib.google.google` that this is a `requests.Session` that has the google authentication token loaded.\r\n\r\nBut not sure how to use that with the `build()` method in the example. https://googleapis.github.io/google-api-python-client/docs/epy/googleapiclient.discovery-module.html#build indicates the http parameter is An instance of httplib2.Http or something that acts like it that HTTP requests will be made through.\r\n\r\nI tried using the `requests.Session` object as the http parameter (on the off chance it would work), but got some error in the `build()` process.\r\n\r\nNote: I'm using SQLAlchemy for storage.\r\n\r\nAny suggestions, examples?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/180", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/180/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/180/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/180", "id": 370360765, "node_id": "MDU6SXNzdWUzNzAzNjA3NjU=", "number": 180, "title": "Issues using the example program for Azure AD", "user": {"login": "gauravdce", "id": 1771730, "node_id": "MDQ6VXNlcjE3NzE3MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1771730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauravdce", "html_url": "https://github.com/gauravdce", "followers_url": "https://api.github.com/users/gauravdce/followers", "following_url": "https://api.github.com/users/gauravdce/following{/other_user}", "gists_url": "https://api.github.com/users/gauravdce/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauravdce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauravdce/subscriptions", "organizations_url": "https://api.github.com/users/gauravdce/orgs", "repos_url": "https://api.github.com/users/gauravdce/repos", "events_url": "https://api.github.com/users/gauravdce/events{/privacy}", "received_events_url": "https://api.github.com/users/gauravdce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-15T21:59:38Z", "updated_at": "2020-05-19T10:57:05Z", "closed_at": "2019-02-26T10:47:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**AADSTS50194: Application 'xxxxxx-xxxxxx-xxxxxx-xxxxxx-xxxxxx' is not configured as a multi-tenant application. Usage of the /common endpoint is not supported for such applications created after '10/15/2018'. Use a tenant-specific endpoint or configure the application to be multi-tenant.**'''\r\n\r\nThis is the error received after testing the Azure program", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/179", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/179/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/179/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/179", "id": 369886643, "node_id": "MDU6SXNzdWUzNjk4ODY2NDM=", "number": 179, "title": "About Github logout ", "user": {"login": "hammer2383", "id": 43993049, "node_id": "MDQ6VXNlcjQzOTkzMDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/43993049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hammer2383", "html_url": "https://github.com/hammer2383", "followers_url": "https://api.github.com/users/hammer2383/followers", "following_url": "https://api.github.com/users/hammer2383/following{/other_user}", "gists_url": "https://api.github.com/users/hammer2383/gists{/gist_id}", "starred_url": "https://api.github.com/users/hammer2383/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hammer2383/subscriptions", "organizations_url": "https://api.github.com/users/hammer2383/orgs", "repos_url": "https://api.github.com/users/hammer2383/repos", "events_url": "https://api.github.com/users/hammer2383/events{/privacy}", "received_events_url": "https://api.github.com/users/hammer2383/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-14T10:03:28Z", "updated_at": "2019-07-18T15:45:10Z", "closed_at": "2018-10-23T13:06:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We try to create logout for GitHub \r\nIf you could give some example that would be great\r\nI know this is terribly wrong but we want you to know how bad it is\r\n```python\r\n@app.route(\"/logout\")\r\n@login_required\r\ndef logout():\r\n    resp = app.blueprints[github].get('/authorizations')\r\n    authlist = resp.json()\r\n    client_id = str(authlist['app']['client_id'])\r\n    token = str(authlist['token'])\r\n    if resp.ok:\r\n        github.delete('/applications/:client_id/grants/:token')\r\n        logout_user()\r\n        flash(\"You have logged out\")\r\n    return redirect(url_for(\"index\"))\r\n```                    \r\nThank you \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/176", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/176/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/176/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/176", "id": 365710517, "node_id": "MDU6SXNzdWUzNjU3MTA1MTc=", "number": 176, "title": "Need to provide \"offline_access\" mode for Azure", "user": {"login": "dev-johnlopez", "id": 4293872, "node_id": "MDQ6VXNlcjQyOTM4NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4293872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dev-johnlopez", "html_url": "https://github.com/dev-johnlopez", "followers_url": "https://api.github.com/users/dev-johnlopez/followers", "following_url": "https://api.github.com/users/dev-johnlopez/following{/other_user}", "gists_url": "https://api.github.com/users/dev-johnlopez/gists{/gist_id}", "starred_url": "https://api.github.com/users/dev-johnlopez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dev-johnlopez/subscriptions", "organizations_url": "https://api.github.com/users/dev-johnlopez/orgs", "repos_url": "https://api.github.com/users/dev-johnlopez/repos", "events_url": "https://api.github.com/users/dev-johnlopez/events{/privacy}", "received_events_url": "https://api.github.com/users/dev-johnlopez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T02:04:52Z", "updated_at": "2018-10-02T02:49:35Z", "closed_at": "2018-10-02T02:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added the offline_access scope item as discussed [in this article. (search on offline_access)](https://docs.microsoft.com/en-us/outlook/rest/python-tutorial). I'm looking into your codebase to figure out exactly where the error is occurring.\r\n\r\nHere is the output after I logged in with it:\r\n\r\n```\r\n2018-10-02T01:53:17.127911+00:00 app[web.1]: [2018-10-02 01:53:17 +0000] [24] [ERROR] Error handling request /login/azure/authorized?code=<redacted>&state=<redacted>\r\n2018-10-02T01:53:17.127928+00:00 app[web.1]: Traceback (most recent call last):\r\n2018-10-02T01:53:17.127930+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 135, in handle\r\n2018-10-02T01:53:17.127931+00:00 app[web.1]: self.handle_request(listener, req, client, addr)\r\n2018-10-02T01:53:17.127932+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/gunicorn/workers/sync.py\", line 176, in handle_request\r\n2018-10-02T01:53:17.127934+00:00 app[web.1]: respiter = self.wsgi(environ, resp.start_response)\r\n2018-10-02T01:53:17.127935+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 2309, in __call__\r\n2018-10-02T01:53:17.127937+00:00 app[web.1]: return self.wsgi_app(environ, start_response)\r\n2018-10-02T01:53:17.127938+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/werkzeug/contrib/fixers.py\", line 152, in __call__\r\n2018-10-02T01:53:17.127939+00:00 app[web.1]: return self.app(environ, start_response)\r\n2018-10-02T01:53:17.127941+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 2295, in wsgi_app\r\n2018-10-02T01:53:17.127942+00:00 app[web.1]: response = self.handle_exception(e)\r\n2018-10-02T01:53:17.127943+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1741, in handle_exception\r\n2018-10-02T01:53:17.127944+00:00 app[web.1]: reraise(exc_type, exc_value, tb)\r\n2018-10-02T01:53:17.127946+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n2018-10-02T01:53:17.127947+00:00 app[web.1]: response = self.full_dispatch_request()\r\n2018-10-02T01:53:17.127948+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n2018-10-02T01:53:17.127949+00:00 app[web.1]: rv = self.handle_user_exception(e)\r\n2018-10-02T01:53:17.127951+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n2018-10-02T01:53:17.127952+00:00 app[web.1]: reraise(exc_type, exc_value, tb)\r\n2018-10-02T01:53:17.127953+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n2018-10-02T01:53:17.127954+00:00 app[web.1]: rv = self.dispatch_request()\r\n2018-10-02T01:53:17.127955+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n2018-10-02T01:53:17.127957+00:00 app[web.1]: return self.view_functions[rule.endpoint](**req.view_args)\r\n2018-10-02T01:53:17.127958+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/flask_dance/consumer/oauth2.py\", line 246, in authorized\r\n2018-10-02T01:53:17.127960+00:00 app[web.1]: **self.token_url_params\r\n2018-10-02T01:53:17.127961+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.py\", line 244, in fetch_token\r\n2018-10-02T01:53:17.127962+00:00 app[web.1]: self._client.parse_request_body_response(r.text, scope=self.scope)\r\n2018-10-02T01:53:17.127964+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 411, in parse_request_body_response\r\n2018-10-02T01:53:17.127965+00:00 app[web.1]: self.token = parse_token_response(body, scope=scope)\r\n2018-10-02T01:53:17.127966+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 379, in parse_token_response\r\n2018-10-02T01:53:17.127967+00:00 app[web.1]: validate_token_parameters(params)\r\n2018-10-02T01:53:17.127968+00:00 app[web.1]: File \"/app/.heroku/python/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 409, in validate_token_parameters\r\n2018-10-02T01:53:17.127970+00:00 app[web.1]: raise w\r\n2018-10-02T01:53:17.127971+00:00 app[web.1]: Warning: Scope has changed from \"profile email offline_access openid User.Read\" to \"email profile openid User.Read\".\r\n2018-10-02T01:53:17.128169+00:00 app[web.1]: 10.61.181.115 - - [02/Oct/2018:01:53:17 +0000] \"GET /login/azure/authorized?code=<redacted>&state<redacted>HTTP/1.1\" 500 0 \"-\" \"-\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/175", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/175/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/175/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/175", "id": 365546715, "node_id": "MDU6SXNzdWUzNjU1NDY3MTU=", "number": 175, "title": "provider_user_id isn't written to OAuth table", "user": {"login": "CyberCube37", "id": 35262980, "node_id": "MDQ6VXNlcjM1MjYyOTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/35262980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CyberCube37", "html_url": "https://github.com/CyberCube37", "followers_url": "https://api.github.com/users/CyberCube37/followers", "following_url": "https://api.github.com/users/CyberCube37/following{/other_user}", "gists_url": "https://api.github.com/users/CyberCube37/gists{/gist_id}", "starred_url": "https://api.github.com/users/CyberCube37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CyberCube37/subscriptions", "organizations_url": "https://api.github.com/users/CyberCube37/orgs", "repos_url": "https://api.github.com/users/CyberCube37/repos", "events_url": "https://api.github.com/users/CyberCube37/events{/privacy}", "received_events_url": "https://api.github.com/users/CyberCube37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-01T16:42:35Z", "updated_at": "2018-10-23T13:06:20Z", "closed_at": "2018-10-23T13:06:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running the example code for user creation with flask-dance I ran into a problem, the provider_user_id isn't written to OAuth table. I checked this multiple times but it's the same every time. I printed the variable provider_user_id right before the new user creation and it's not null but when I check the table it says null. (I left out other code, everything else works besides this). If you need any other info I'll be happy to provide it. \r\n\r\n```python\r\ndef logged_in(blueprint, token):\r\n    if not token:\r\n        flash(\"Failed to log in with GitHub.\", category=\"error\")\r\n        return False\r\n\r\n    resp = blueprint.session.get(\"/user\")\r\n    if not resp.ok:\r\n        msg = \"Failed to fetch user info from GitHub.\"\r\n        flash(msg, category=\"error\")\r\n        return False\r\n\r\n    github_info = resp.json()\r\n    github_user_id = str(github_info[\"id\"])\r\n\r\n    # Find this OAuth token in the database, or create it\r\n    query = OAuth.query.filter_by(\r\n        provider=blueprint.name,\r\n        provider_user_id=github_user_id,\r\n    )\r\n    try:\r\n        oauth = query.one()\r\n    except NoResultFound:\r\n    print(github_user_id)\r\n    print(query)\r\n        oauth = OAuth(\r\n            provider=blueprint.name,\r\n            provider_user_id=github_user_id,\r\n            token=token,\r\n        )\r\n    print(github_user_id, type(github_user_id))\r\n\r\n    if oauth.user:\r\n        # If this OAuth token already has an associated local account,\r\n        # log in that local user account.\r\n        # Note that if we just created this OAuth token, then it can't\r\n        # have an associated local account yet.\r\n        login_user(oauth.user)\r\n        flash(\"Successfully signed in with GitHub.\")\r\n\r\n    else:\r\n        # If this OAuth token doesn't have an associated local account,\r\n        # create a new local user account for this user. We can log\r\n        # in that account as well, while we're at it.\r\n        user = User(\r\n            # Remember that `email` can be None, if the user declines\r\n            # to publish their email address on GitHub!\r\n            email=github_info[\"email\"],\r\n            name=github_info[\"name\"],\r\n        )\r\n        # Associate the new local user account with the OAuth token\r\n        oauth.user = user\r\n        # Save and commit our database models\r\n        db.session.add_all([user, oauth])\r\n        db.session.commit()\r\n        # Log in the new local user account\r\n        login_user(user)\r\n        flash(\"Successfully signed in with GitHub.\")\r\n\r\n    # Since we're manually creating the OAuth model in the database,\r\n    # we should return False so that Flask-Dance knows that\r\n    # it doesn't have to do it. If we don't return False, the OAuth token\r\n    # could be saved twice, or Flask-Dance could throw an error when\r\n    # trying to incorrectly save it for us.\r\n    return False\r\n\r\n\r\n```\r\n<img width=\"156\" alt=\"screenshot 2018-10-01 at 18 35 40\" src=\"https://user-images.githubusercontent.com/35262980/46302575-aac54500-c5a9-11e8-805e-2eb262f96c3b.png\">\r\n<img width=\"156\" alt=\"screenshot 2018-10-01 at 18 35 54\" src=\"https://user-images.githubusercontent.com/35262980/46302573-aac54500-c5a9-11e8-8e63-670bdfe5fad0.png\">\r\nEDIT: after some more research I found out that it does get written to the table and the value is there right after it gets written, but when oauth redirects you to your redirect URI the value just dissapears and is suddenly NULL. Can you help please?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/172", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/172/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/172/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/172", "id": 358363360, "node_id": "MDU6SXNzdWUzNTgzNjMzNjA=", "number": 172, "title": "redirect_to with the generated JWT token", "user": {"login": "5hirish", "id": 7095496, "node_id": "MDQ6VXNlcjcwOTU0OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7095496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5hirish", "html_url": "https://github.com/5hirish", "followers_url": "https://api.github.com/users/5hirish/followers", "following_url": "https://api.github.com/users/5hirish/following{/other_user}", "gists_url": "https://api.github.com/users/5hirish/gists{/gist_id}", "starred_url": "https://api.github.com/users/5hirish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5hirish/subscriptions", "organizations_url": "https://api.github.com/users/5hirish/orgs", "repos_url": "https://api.github.com/users/5hirish/repos", "events_url": "https://api.github.com/users/5hirish/events{/privacy}", "received_events_url": "https://api.github.com/users/5hirish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-09T09:19:42Z", "updated_at": "2018-09-24T12:15:26Z", "closed_at": "2018-09-24T12:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to redirect to the URL that returns the generated JWT Token. But the `redirect_to` argument is set early before the OAuth dance starts and the JWT token is generated after the OAuth dance completes. So, how do I return the generated JWT token after the OAuth dance completes?\r\n\r\n```\r\ntwitter_blueprint = make_twitter_blueprint()\r\n...\r\ntwitter_blueprint.redirect_to = \"auth.get_jwt_token\"\r\n... If not logged in:\r\nredirect(url_for(\"twitter.login\"))\r\n... Generate JWT Token\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/171", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/171/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/171/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/171", "id": 357226591, "node_id": "MDU6SXNzdWUzNTcyMjY1OTE=", "number": 171, "title": "Unable to override default 'Bearer' value in Authorization Header", "user": {"login": "tcmRyan", "id": 2284423, "node_id": "MDQ6VXNlcjIyODQ0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2284423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcmRyan", "html_url": "https://github.com/tcmRyan", "followers_url": "https://api.github.com/users/tcmRyan/followers", "following_url": "https://api.github.com/users/tcmRyan/following{/other_user}", "gists_url": "https://api.github.com/users/tcmRyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcmRyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcmRyan/subscriptions", "organizations_url": "https://api.github.com/users/tcmRyan/orgs", "repos_url": "https://api.github.com/users/tcmRyan/repos", "events_url": "https://api.github.com/users/tcmRyan/events{/privacy}", "received_events_url": "https://api.github.com/users/tcmRyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-05T13:20:58Z", "updated_at": "2018-09-08T10:45:54Z", "closed_at": "2018-09-08T10:45:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm writing a Zoho configuration, and their Authorization header requires the token be \"Zoho-oauthtoken\" instead of \"Bearer\".  I've attempted the proposed solution here https://github.com/singingwolfboy/flask-dance/issues/123, however, it does not seem like session_created() is getting called before a get request is being called.\r\n\r\nIn the following example the bp.session returns a HTTPConnectionPool error while the resp generated by making my own request succeeds.\r\n```\r\n@oauth_authorized.connect_via(zoho_bp)\r\ndef zoho_logged_in(bp: OAuth2ConsumerBlueprint, token: str) -> bool:\r\n    if not token:\r\n        flash(\"Failed to log in with Zoho.\", category=\"error\")\r\n        return False\r\n    import requests\r\n    # resp = requests.get('https://www.zohoapis.com/crm/v2/users', params={'type': 'CurrentUser'}, headers={'Authorization': 'Zoho-oauthtoken {}'.format(token['access_token'])})\r\n    resp = bp.session.get(\"/users\", params={'type': 'CurrentUser'})\r\n```\r\n\r\nIn this instance I have changed https://github.com/singingwolfboy/flask-dance/blob/master/flask_dance/consumer/oauth2.py#L173\r\n\r\nto be:\r\n```\r\ndef session_created(self, session):\r\n        try:\r\n            session.headers.update({'Authorization': 'Zoho-oauthtoken {}'.format(session.token)})\r\n        except ValueError:\r\n            # Needed to avoid error on startup\r\n            log.info(\"Unable to fetch token\")\r\n        return session\r\n```\r\n\r\nI put up a PR with test_context_local failing because of this issue here https://github.com/singingwolfboy/flask-dance/pull/170", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/169", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/169/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/169/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/169", "id": 355206426, "node_id": "MDU6SXNzdWUzNTUyMDY0MjY=", "number": 169, "title": "Stale gh-pages branch", "user": {"login": "daenney", "id": 569574, "node_id": "MDQ6VXNlcjU2OTU3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/569574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daenney", "html_url": "https://github.com/daenney", "followers_url": "https://api.github.com/users/daenney/followers", "following_url": "https://api.github.com/users/daenney/following{/other_user}", "gists_url": "https://api.github.com/users/daenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/daenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daenney/subscriptions", "organizations_url": "https://api.github.com/users/daenney/orgs", "repos_url": "https://api.github.com/users/daenney/repos", "events_url": "https://api.github.com/users/daenney/events{/privacy}", "received_events_url": "https://api.github.com/users/daenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-29T15:08:37Z", "updated_at": "2018-09-12T13:06:56Z", "closed_at": "2018-09-12T13:06:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Looking around the repo during my regular cleanup time I noticed there's a very old gh-pages branch that's still up on https://singingwolfboy.github.io/flask-dance/. There's some broken links in there and other stuff that's not quite up to date.\r\n\r\nShould we update that, or perhaps axe it instead in favour of a redirect to https://flask-dance.readthedocs.io/ ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/165", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/165/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/165/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/165", "id": 353371793, "node_id": "MDU6SXNzdWUzNTMzNzE3OTM=", "number": 165, "title": "How to override authorization_url parameter?", "user": {"login": "mamude", "id": 80853, "node_id": "MDQ6VXNlcjgwODUz", "avatar_url": "https://avatars2.githubusercontent.com/u/80853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mamude", "html_url": "https://github.com/mamude", "followers_url": "https://api.github.com/users/mamude/followers", "following_url": "https://api.github.com/users/mamude/following{/other_user}", "gists_url": "https://api.github.com/users/mamude/gists{/gist_id}", "starred_url": "https://api.github.com/users/mamude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mamude/subscriptions", "organizations_url": "https://api.github.com/users/mamude/orgs", "repos_url": "https://api.github.com/users/mamude/repos", "events_url": "https://api.github.com/users/mamude/events{/privacy}", "received_events_url": "https://api.github.com/users/mamude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-23T13:06:00Z", "updated_at": "2018-08-23T13:50:49Z", "closed_at": "2018-08-23T13:50:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my application, we need to limit the auth by domain.\r\n\r\nHow can I change the default:\r\nauthorization_url=\"https://accounts.google.com/o/oauth2/auth\"\r\n\r\nTo:\r\nauthorization_url=\"https://accounts.google.com/o/oauth2/auth?hd=mydomain.com\"\r\n\r\nCheers!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/163", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/163/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/163/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/163", "id": 352093704, "node_id": "MDU6SXNzdWUzNTIwOTM3MDQ=", "number": 163, "title": "Wrong session usage or possible security issue", "user": {"login": "yuvadm", "id": 315080, "node_id": "MDQ6VXNlcjMxNTA4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/315080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvadm", "html_url": "https://github.com/yuvadm", "followers_url": "https://api.github.com/users/yuvadm/followers", "following_url": "https://api.github.com/users/yuvadm/following{/other_user}", "gists_url": "https://api.github.com/users/yuvadm/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvadm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvadm/subscriptions", "organizations_url": "https://api.github.com/users/yuvadm/orgs", "repos_url": "https://api.github.com/users/yuvadm/repos", "events_url": "https://api.github.com/users/yuvadm/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvadm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-08-20T11:24:32Z", "updated_at": "2018-10-16T15:59:40Z", "closed_at": "2018-10-16T15:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Working according to the basic documentation, I'm hitting a serious problem where one user login session in one browser is propogated to another browser with no login credentials.\r\n\r\nHere's my relevant server code:\r\n\r\n```python\r\nfrom os import environ\r\n\r\nfrom flask import Flask, redirect, url_for, render_template\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_migrate import Migrate\r\nfrom flask_dance.contrib.twitter import make_twitter_blueprint, twitter\r\nfrom flask_dance.consumer.backend.sqla import SQLAlchemyBackend, OAuthConsumerMixin\r\nfrom werkzeug.contrib.fixers import ProxyFix\r\n\r\n\r\napp = Flask(__name__)\r\napp.secret_key = environ.get('FLASK_SECRET_KEY')\r\napp.wsgi_app = ProxyFix(app.wsgi_app)\r\napp.config.from_object('config.Config')\r\n\r\ndb = SQLAlchemy(app)\r\nmigrate = Migrate(app, db)\r\n\r\nclass OAuth(OAuthConsumerMixin, db.Model):\r\n    pass\r\n\r\ntwitter_blueprint = make_twitter_blueprint(\r\n    api_key=app.config['TWITTER_CONSUMER_KEY'],\r\n    api_secret=app.config['TWITTER_CONSUMER_SECRET'],\r\n)\r\ntwitter_blueprint.backend = SQLAlchemyBackend(OAuth, db.session)\r\napp.register_blueprint(twitter_blueprint, url_prefix='/login')\r\n\r\n\r\n@app.route('/')\r\ndef index():\r\n    username = None\r\n    if twitter.authorized:\r\n        resp = twitter.get('account/settings.json')\r\n        username = resp.json()['screen_name']\r\n    return render_template('index.html', username=username)\r\n```\r\n\r\nSteps:\r\n\r\n1. Open two separate browser sessions\r\n2. In both sessions, navigate to `server:5000`, homepage shows a login link `{{ url_for('twitter.login') }}`\r\n3. On browser `A`, perform Twitter authentication dance\r\n4. Redirect back to homepage, `username` is rendered correctly, inspecting the SQL database, the oauth tokens are indeed saved correctly for the user\r\n5. On browser `B` refresh homepage, `username` is now populated with the login session from browser `A`\r\n\r\nOther notes:\r\n\r\n- Happens on all environments, both with and without flask debug mode, as well as running through gunicorn\r\n- Backend database is a postgreSQL instance\r\n- Flask 1.0.2, Flask-dance 1.0.0, Python 3.7\r\n- Adding `user_required=False` as a param to `SQLAlchemyBackend` doesn't change this behavior\r\n\r\nThis is no doubt a serious potential security bug. Either the library is behaving in an unexpected way, or I'm doing something wrong, and hitting a pitfall, in which case the documentation probably should be updated to warn about this behavior.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/160", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/160/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/160/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/160", "id": 351057619, "node_id": "MDU6SXNzdWUzNTEwNTc2MTk=", "number": 160, "title": "Modifying columns set during retrieval of new token", "user": {"login": "hammerface", "id": 8420389, "node_id": "MDQ6VXNlcjg0MjAzODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8420389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hammerface", "html_url": "https://github.com/hammerface", "followers_url": "https://api.github.com/users/hammerface/followers", "following_url": "https://api.github.com/users/hammerface/following{/other_user}", "gists_url": "https://api.github.com/users/hammerface/gists{/gist_id}", "starred_url": "https://api.github.com/users/hammerface/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hammerface/subscriptions", "organizations_url": "https://api.github.com/users/hammerface/orgs", "repos_url": "https://api.github.com/users/hammerface/repos", "events_url": "https://api.github.com/users/hammerface/events{/privacy}", "received_events_url": "https://api.github.com/users/hammerface/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-16T05:11:30Z", "updated_at": "2018-08-16T07:26:58Z", "closed_at": "2018-08-16T07:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. I'm using this page as a resource for using google login on my web app:\r\nhttps://flask-dance.readthedocs.io/en/latest/multi-user.html#overriding-the-default-behavior\r\n\r\nWorks great until flask dance goes to refresh my token. My problem is related to this passage:\r\n\r\n> This example code does not include implementations for the User and OAuth models: you can see that these models are imported from another file. However, notice that the OAuth model has a field called provider_user_id, which is used to store the user ID of the GitHub user. The example code uses that ID to check if we\u2019ve already saved an OAuth token in the database for this GitHub user.\r\n\r\nSince provider_user_id is not a default column, when flask dance automatically updates the table after retrieving the new token, it puts nothing into that column and things get ugly. How can I modify that behavior so that this column is also filled when flask dance does its token update?\r\n\r\nNot sure if this is the right place to ask this sort of question, but I appreciate any help you can provide.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/159", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/159/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/159/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/159", "id": 350393043, "node_id": "MDU6SXNzdWUzNTAzOTMwNDM=", "number": 159, "title": "Google, sometimes, requires `redirect_uri` to be `'postmessage'`", "user": {"login": "ticosax", "id": 1174343, "node_id": "MDQ6VXNlcjExNzQzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1174343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ticosax", "html_url": "https://github.com/ticosax", "followers_url": "https://api.github.com/users/ticosax/followers", "following_url": "https://api.github.com/users/ticosax/following{/other_user}", "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}", "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions", "organizations_url": "https://api.github.com/users/ticosax/orgs", "repos_url": "https://api.github.com/users/ticosax/repos", "events_url": "https://api.github.com/users/ticosax/events{/privacy}", "received_events_url": "https://api.github.com/users/ticosax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-14T11:45:10Z", "updated_at": "2018-08-14T15:02:35Z", "closed_at": "2018-08-14T15:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://stackoverflow.com/questions/51106569/what-is-the-purpose-of-postmessage-in-a-redirect-uri\r\nhttps://developers.google.com/+/sign-in-faq\r\n\r\nThis is indeed very corner case and a bit shady, but it is actually a thing when the code is obtained by a frontend application which is not managed by flask.\r\n\r\nI'm attaching a diff to explain better what I mean.\r\n```diff\r\ndiff --git a/flask_dance/consumer/oauth2.py b/flask_dance/consumer/oauth2.py\r\nindex 91dd7a4..06d4832 100644\r\n--- a/flask_dance/consumer/oauth2.py\r\n+++ b/flask_dance/consumer/oauth2.py\r\n@@ -232,9 +232,7 @@ class OAuth2ConsumerBlueprint(BaseOAuthConsumerBlueprint):\r\n         self.session._state = state\r\n         del flask.session[state_key]\r\n \r\n-        self.session.redirect_uri = url_for(\r\n-            \".authorized\", next=request.args.get('next'), _external=True,\r\n-        )\r\n+        self.session.redirect_uri = 'postmessage'\r\n \r\n         log.debug(\"client_id = %s\", self.client_id)\r\n         log.debug(\"client_secret = %s\", self.client_secret)\r\n```\r\n\r\nI'd like to know if you were willing to accept a contribution to make this patch a reality. \r\nIt could be triggered by a new parameter given to `make_google_blueprint` called something like like `disable_redirect_uri`\r\n\r\n```python\r\noauth_blueprint = make_google_blueprint(\r\n    client_id=app.config['OAUTH_CLIENT_ID'],\r\n    client_secret=app.config['OAUTH_CLIENT_SECRET'],\r\n    scope=[\r\n        'https://www.googleapis.com/auth/userinfo.email',\r\n        'https://www.googleapis.com/auth/userinfo.profile',\r\n    ],\r\n    offline=True,\r\n    redirect_to='index',\r\n    backend=oauth_backend,\r\n    disable_redirect_uri=True,  # here: new parameter\r\n)\r\n```\r\nLet me know what do you think and I'd be more than happy to make a proper PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/158", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/158/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/158/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/158", "id": 348638120, "node_id": "MDU6SXNzdWUzNDg2MzgxMjA=", "number": 158, "title": "Returning a Response object while overriding default behaviour", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-08T09:06:05Z", "updated_at": "2018-08-20T13:05:36Z", "closed_at": "2018-08-20T13:05:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use `flask-dance` with the `flask-sqlalchemy` backend.\r\nI'd like to return a response object after the `@oauth_authorized.connect` event is fired but also override the default behaviour that will save the token.\r\n\r\nThe docs say:\r\n\r\n>  If you don\u2019t want the token to be stored,\r\n> simply return False from one of your signal receiver functions \r\n\r\n...\r\n\r\n> You can also return a Response instance from an event subscriber. If you do, that response will be returned to the user instead of the normal redirect.\r\n\r\nIs there a way to do both?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/156", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/156/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/156/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/156", "id": 348079934, "node_id": "MDU6SXNzdWUzNDgwNzk5MzQ=", "number": 156, "title": "Can't run Azure auth at local machine", "user": {"login": "yn-coder", "id": 8451944, "node_id": "MDQ6VXNlcjg0NTE5NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8451944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yn-coder", "html_url": "https://github.com/yn-coder", "followers_url": "https://api.github.com/users/yn-coder/followers", "following_url": "https://api.github.com/users/yn-coder/following{/other_user}", "gists_url": "https://api.github.com/users/yn-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/yn-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yn-coder/subscriptions", "organizations_url": "https://api.github.com/users/yn-coder/orgs", "repos_url": "https://api.github.com/users/yn-coder/repos", "events_url": "https://api.github.com/users/yn-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/yn-coder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-06T20:59:02Z", "updated_at": "2018-08-26T12:30:31Z", "closed_at": "2018-08-26T12:30:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to test the Azure auth on local machine following http://flask-dance.readthedocs.io/en/latest/quickstarts/azure.html\r\n\r\nWindows.Live raise the `login.live.com/err.srf?lc=1049#error=invalid_request&error_description=The+provided+value+for+the+input+parameter+'redirect_uri'+is+not+valid.+`, after login dialog - for any case\r\n\r\n1. 127.0.0.1:5000 in app settings \r\n2. localhost:5000 in app settings \r\n3. mysite.com:5000 in app settings (set it up in `hosts` file)\r\n\r\nIn all of cases dns loop is resolved and I can open the url in local browser, and see the login window - when `error redirect url`\r\n\r\nFor remote heroku it's working well", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/154", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/154/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/154/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/154", "id": 347353182, "node_id": "MDU6SXNzdWUzNDczNTMxODI=", "number": 154, "title": "login with facebook issue", "user": {"login": "leejoonsung007", "id": 30983433, "node_id": "MDQ6VXNlcjMwOTgzNDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/30983433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejoonsung007", "html_url": "https://github.com/leejoonsung007", "followers_url": "https://api.github.com/users/leejoonsung007/followers", "following_url": "https://api.github.com/users/leejoonsung007/following{/other_user}", "gists_url": "https://api.github.com/users/leejoonsung007/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejoonsung007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejoonsung007/subscriptions", "organizations_url": "https://api.github.com/users/leejoonsung007/orgs", "repos_url": "https://api.github.com/users/leejoonsung007/repos", "events_url": "https://api.github.com/users/leejoonsung007/events{/privacy}", "received_events_url": "https://api.github.com/users/leejoonsung007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-03T11:00:32Z", "updated_at": "2018-08-22T09:36:17Z", "closed_at": "2018-08-22T09:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am quite confused about the redirect_url in login with facebook, facebook only allows the website with SSL certification to access it.  My website has been deployed with https, but I still get the error \r\n\r\n> Insecure Login Blocked: You can't get an access token or log in to this app from an insecure page. Try re-loading the page as https:// \r\n\r\nThen I checked the URL, it is\r\n\r\n>  https://www.facebook.com/dialog/oauth?response_type=code&client_id=171456803533554&**redirect_uri=http%3A%2F%2Fmy_website_link%2Fauth%2Ffacebook%2Fauthorized**&scope=email&state=Zi8KYzwVxM7gEjkPLY40qE1QcMayxG\r\n\r\nThe redirct_url is http not https, I tried to change the parameters redirect_url and redirect_to, but it doesn't work... redirect_url\r\n\r\n> facebook_bp = make_facebook_blueprint(scope=['email'])\r\n> \r\n> @auth.route(\"/login_with_facebook\")\r\n> def login_with_facebook():\r\n>     if not facebook.authorized:\r\n>         return redirect(url_for(\"facebook.login\"))\r\n>     facebook_user = facebook.get('me?fields=id, name, picture.width(512).height(512)').json()\r\n\r\nCould you help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/152", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/152/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/152/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/152", "id": 346727810, "node_id": "MDU6SXNzdWUzNDY3Mjc4MTA=", "number": 152, "title": "Flask-Dance sends expired token to Azure", "user": {"login": "leonbrag", "id": 5290089, "node_id": "MDQ6VXNlcjUyOTAwODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5290089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonbrag", "html_url": "https://github.com/leonbrag", "followers_url": "https://api.github.com/users/leonbrag/followers", "following_url": "https://api.github.com/users/leonbrag/following{/other_user}", "gists_url": "https://api.github.com/users/leonbrag/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonbrag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonbrag/subscriptions", "organizations_url": "https://api.github.com/users/leonbrag/orgs", "repos_url": "https://api.github.com/users/leonbrag/repos", "events_url": "https://api.github.com/users/leonbrag/events{/privacy}", "received_events_url": "https://api.github.com/users/leonbrag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T19:02:50Z", "updated_at": "2018-08-02T19:14:57Z", "closed_at": "2018-08-02T19:14:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Repro:\r\n1. authenticate w/Azure\r\n2. go to the web site again after token expired\r\n3. observe no prompt and internal server error\r\n\r\nLogs:\r\n```\r\n2018-08-01T18:56:43.143297497Z [2018-08-01 18:56:43,142] ERROR in app: Exception on / [GET]\r\n2018-08-01T18:56:43.143302298Z Traceback (most recent call last):\r\n2018-08-01T18:56:43.143305898Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n2018-08-01T18:56:43.143309798Z     response = self.full_dispatch_request()\r\n2018-08-01T18:56:43.143313498Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n2018-08-01T18:56:43.143317198Z     rv = self.handle_user_exception(e)\r\n2018-08-01T18:56:43.143320798Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n2018-08-01T18:56:43.143324398Z     reraise(exc_type, exc_value, tb)\r\n2018-08-01T18:56:43.143327798Z   File \"/usr/local/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n2018-08-01T18:56:43.143331399Z     raise value\r\n2018-08-01T18:56:43.143334799Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n2018-08-01T18:56:43.143338399Z     rv = self.dispatch_request()\r\n2018-08-01T18:56:43.143341799Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n2018-08-01T18:56:43.143345399Z     return self.view_functions[rule.endpoint](**req.view_args)\r\n2018-08-01T18:56:43.143348799Z   File \"./main.py\", line 27, in hello_world\r\n2018-08-01T18:56:43.143361300Z     resp = azure.get(\"/v1.0/me\")\r\n2018-08-01T18:56:43.143365400Z   File \"/usr/local/lib/python3.6/site-packages/requests/sessions.py\", line 525, in get\r\n2018-08-01T18:56:43.143369000Z     return self.request('GET', url, **kwargs)\r\n2018-08-01T18:56:43.143372600Z   File \"/usr/local/lib/python3.6/site-packages/flask_dance/consumer/requests.py\", line 141, in request\r\n2018-08-01T18:56:43.143376100Z     **kwargs\r\n2018-08-01T18:56:43.143379500Z   File \"/usr/local/lib/python3.6/site-packages/requests_oauthlib/oauth2_session.py\", line 330, in request\r\n2018-08-01T18:56:43.143383100Z     http_method=method, body=data, headers=headers)\r\n2018-08-01T18:56:43.143386600Z   File \"/usr/local/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 196, in add_token\r\n2018-08-01T18:56:43.143390201Z     raise TokenExpiredError()\r\n2018-08-01T18:56:43.143393701Z oauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) \r\n```\r\n\r\nShould not Flask-Dance handle it and prompt for authentication again (instead of internal error)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/150", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/150/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/150/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/150", "id": 346641211, "node_id": "MDU6SXNzdWUzNDY2NDEyMTE=", "number": 150, "title": "struggling to test flask-dance / flask-security / flask-sqlalchemy / pytest", "user": {"login": "louking", "id": 875138, "node_id": "MDQ6VXNlcjg3NTEzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/875138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louking", "html_url": "https://github.com/louking", "followers_url": "https://api.github.com/users/louking/followers", "following_url": "https://api.github.com/users/louking/following{/other_user}", "gists_url": "https://api.github.com/users/louking/gists{/gist_id}", "starred_url": "https://api.github.com/users/louking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louking/subscriptions", "organizations_url": "https://api.github.com/users/louking/orgs", "repos_url": "https://api.github.com/users/louking/repos", "events_url": "https://api.github.com/users/louking/events{/privacy}", "received_events_url": "https://api.github.com/users/louking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-08-01T15:05:41Z", "updated_at": "2018-10-09T12:53:13Z", "closed_at": "2018-10-09T12:53:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "cross posted to https://stackoverflow.com/questions/51563223/struggling-to-test-flask-dance-flask-security-flask-sqlalchemy-pytest\r\n\r\nMy application requires login to google for later use of google apis. I have flask-dance, flask-security, flask-sqlalchemy working to the point where I can do the log in and log out in my development system.\r\n\r\nWhat I've been struggling with is testing of the login using pytest. I am trying force the login with the call to flask_security.login_user, but test_login fails as if nobody is logged in. I suspect this is a problem because of context setting, but I have tried a lot of different things and haven't found the magic elixir.\r\n\r\nUnfortunately, while I have a lot of experience in software development in general and python in particular, I don't have the pytest / flask-dance / flask-security background needed to solve this.\r\n\r\nin settings.py\r\n\r\n```python\r\nclass Testing():\r\n    # default database\r\n    SQLALCHEMY_DATABASE_URI = 'sqlite:///:memory:'\r\n\r\n    TESTING = True\r\n    WTF_CSRF_ENABLED = False\r\n\r\n    # need to set SERVER_NAME to something, else get a RuntimeError about not able to create URL adapter\r\n    SERVER_NAME = 'dev.localhost'\r\n\r\n    # need a default secret key - in production replace by config file\r\n    SECRET_KEY = \"<test secret key>\"\r\n\r\n    # fake  credentials\r\n    GOOGLE_OAUTH_CLIENT_ID = 'fake-client-id'\r\n    GOOGLE_OAUTH_CLIENT_SECRET = 'fake-client-secret'\r\n\r\n    # need to allow logins in flask-security. see https://github.com/mattupstate/flask-security/issues/259\r\n    LOGIN_DISABLED = False\r\n```\r\nin conftest.py\r\n\r\n```python\r\nimport pytest\r\n\r\nfrom racesupportcontracts import create_app\r\nfrom racesupportcontracts.dbmodel import db\r\nfrom racesupportcontracts.settings import Testing\r\n\r\n@pytest.fixture\r\ndef app():\r\n    app = create_app(Testing)\r\n    yield app\r\n\r\n@pytest.fixture\r\ndef dbapp(app):\r\n    db.drop_all()\r\n    db.create_all()\r\n    yield app\r\n```\r\nin test_basic.py\r\n```python\r\ndef login_test_user(email):\r\n    from racesupportcontracts.dbmodel import db, User\r\n    from flask_security import login_user\r\n    user = User.query.filter_by(email=email).one()\r\n    login_user(user)\r\n    db.session.commit()\r\n\r\ndef test_login(dbapp):\r\n    app = dbapp\r\n    from racesupportcontracts.dbmodel import db, init_db\r\n    from racesupportcontracts import user_datastore\r\n    from flask import url_for\r\n    # init_db should create at least superadmin, admin roles\r\n    init_db(defineowner=False)\r\n    useremail = 'testuser@example.com'\r\n    with app.test_client() as client:\r\n        create_user(useremail, 'superadmin')\r\n        login_test_user(useremail)\r\n        resp = client.get('/', follow_redirects=True)\r\n        assert resp.status_code == 200\r\n        assert url_for('admin.logout') in resp.data\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/149", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/149/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/149/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/149", "id": 346462151, "node_id": "MDU6SXNzdWUzNDY0NjIxNTE=", "number": 149, "title": "Azure authorization exception using Flask Dance", "user": {"login": "leonbrag", "id": 5290089, "node_id": "MDQ6VXNlcjUyOTAwODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5290089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonbrag", "html_url": "https://github.com/leonbrag", "followers_url": "https://api.github.com/users/leonbrag/followers", "following_url": "https://api.github.com/users/leonbrag/following{/other_user}", "gists_url": "https://api.github.com/users/leonbrag/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonbrag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonbrag/subscriptions", "organizations_url": "https://api.github.com/users/leonbrag/orgs", "repos_url": "https://api.github.com/users/leonbrag/repos", "events_url": "https://api.github.com/users/leonbrag/events{/privacy}", "received_events_url": "https://api.github.com/users/leonbrag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-01T06:16:48Z", "updated_at": "2018-08-14T17:57:25Z", "closed_at": "2018-08-14T17:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following code running in Docker container in Azure:\r\n\r\n```\r\nfrom flask import Flask, redirect, url_for\r\nfrom flask_dance.contrib.azure import make_azure_blueprint, azure\r\n\r\nimport time\r\napp = Flask(__name__)\r\n\r\n\r\n\r\napp.secret_key = \"supersekrit\"\r\nblueprint = make_azure_blueprint(\r\n    client_id=\"foo\",\r\n    client_secret=\"bar\",\r\n)\r\napp.register_blueprint(blueprint, url_prefix=\"/login\")\r\n\r\n@app.route('/')\r\ndef hello_world():\r\n\tif not azure.authorized:\r\n\t\treturn redirect(url_for(\"azure.login\"))\r\n\tresp = azure.get(\"/v1.0/me\")\r\n\tassert resp.ok\r\n\treturn resp.json()[\"mail\"] + \"<br>Hello World! v1 <br> Server's time:<b>\" + time.strftime (\"%m-%d-%y %I:%M:%S %p\")+\"</b>\"\r\n\r\nif __name__ == '__main__':\r\n  app.run()\r\n```\r\n\r\nWhen I navigate to site, I get credential prompt. When credentials are provided, internal server error is reported. From the docker logs:\r\n\r\n```\r\n2018-08-01T06:07:42.731887152Z Traceback (most recent call last):\r\n2018-08-01T06:07:42.731891152Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n2018-08-01T06:07:42.731934053Z     response = self.full_dispatch_request()\r\n2018-08-01T06:07:42.731937753Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n2018-08-01T06:07:42.731941353Z     rv = self.handle_user_exception(e)\r\n2018-08-01T06:07:42.731944653Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n2018-08-01T06:07:42.731948153Z     reraise(exc_type, exc_value, tb)\r\n2018-08-01T06:07:42.731951653Z   File \"/usr/local/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\n2018-08-01T06:07:42.731955053Z     raise value\r\n2018-08-01T06:07:42.731958353Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n2018-08-01T06:07:42.731961653Z     rv = self.dispatch_request()\r\n2018-08-01T06:07:42.731964853Z   File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n2018-08-01T06:07:42.731968153Z     return self.view_functions[rule.endpoint](**req.view_args)\r\n2018-08-01T06:07:42.731971453Z   File \"/usr/local/lib/python3.6/site-packages/flask_dance/consumer/oauth2.py\", line 246, in authorized\r\n2018-08-01T06:07:42.731974853Z     **self.token_url_params\r\n2018-08-01T06:07:42.731978553Z   File \"/usr/local/lib/python3.6/site-packages/requests_oauthlib/oauth2_session.py\", line 244, in fetch_token\r\n2018-08-01T06:07:42.731981953Z     self._client.parse_request_body_response(r.text, scope=self.scope)\r\n2018-08-01T06:07:42.731985153Z   File \"/usr/local/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 411, in parse_request_body_response\r\n2018-08-01T06:07:42.731988653Z     self.token = parse_token_response(body, scope=scope)\r\n2018-08-01T06:07:42.731991753Z   File \"/usr/local/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 379, in parse_token_response\r\n2018-08-01T06:07:42.731995153Z     validate_token_parameters(params)\r\n2018-08-01T06:07:42.732004253Z   File \"/usr/local/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 409, in validate_token_parameters\r\n2018-08-01T06:07:42.732007953Z     raise w\r\n2018-08-01T06:07:42.732011153Z Warning: Scope has changed from \"user.read\" to \"User.Read\".\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/148", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/148/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/148/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/148", "id": 343989061, "node_id": "MDU6SXNzdWUzNDM5ODkwNjE=", "number": 148, "title": "Google scope rename", "user": {"login": "daenney", "id": 569574, "node_id": "MDQ6VXNlcjU2OTU3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/569574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daenney", "html_url": "https://github.com/daenney", "followers_url": "https://api.github.com/users/daenney/followers", "following_url": "https://api.github.com/users/daenney/following{/other_user}", "gists_url": "https://api.github.com/users/daenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/daenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daenney/subscriptions", "organizations_url": "https://api.github.com/users/daenney/orgs", "repos_url": "https://api.github.com/users/daenney/repos", "events_url": "https://api.github.com/users/daenney/events{/privacy}", "received_events_url": "https://api.github.com/users/daenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-24T11:05:42Z", "updated_at": "2019-12-01T11:29:47Z", "closed_at": "2018-08-02T08:27:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "All of a sudden I'm getting bugs in production with the following warning:\r\n```\r\nWarning: Scope has changed from \"profile email\" to \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\".\r\n```\r\n\r\nIt looks like we need to update https://github.com/singingwolfboy/flask-dance/blob/master/flask_dance/contrib/google.py#L56 and https://github.com/singingwolfboy/flask-dance/blob/master/docs/quickstarts/google.rst accordingly.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/145", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/145/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/145/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/145", "id": 341141571, "node_id": "MDU6SXNzdWUzNDExNDE1NzE=", "number": 145, "title": "How to logout - unauthorize?", "user": {"login": "Darthholi", "id": 6073624, "node_id": "MDQ6VXNlcjYwNzM2MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6073624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Darthholi", "html_url": "https://github.com/Darthholi", "followers_url": "https://api.github.com/users/Darthholi/followers", "following_url": "https://api.github.com/users/Darthholi/following{/other_user}", "gists_url": "https://api.github.com/users/Darthholi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Darthholi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Darthholi/subscriptions", "organizations_url": "https://api.github.com/users/Darthholi/orgs", "repos_url": "https://api.github.com/users/Darthholi/repos", "events_url": "https://api.github.com/users/Darthholi/events{/privacy}", "received_events_url": "https://api.github.com/users/Darthholi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-13T19:57:17Z", "updated_at": "2020-06-10T22:13:41Z", "closed_at": "2018-08-14T17:56:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "All the examples mention how to add blueprint, check for authorization and authorize if needed. Is there any way to programatically (in my own logout function) clear the session to let user login(authorize) again?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/142", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/142/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/142/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/142", "id": 339124369, "node_id": "MDU6SXNzdWUzMzkxMjQzNjk=", "number": 142, "title": "Having the access token in the url", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-07T07:15:52Z", "updated_at": "2018-10-10T12:40:22Z", "closed_at": "2018-08-14T17:54:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From what I've gathered, in a request to a providers api the access token is passed in the header.  \r\n\r\nSome providers, such as instagram don't look for a token there and I keep getting the error that \r\n``{\"code\": 400, \"error_type\": \"OAuthParameterException\", \"error_message\": \"Missing client_id or access_token URL parameter.'}``. \r\n\r\nI request the option to define a `OAuth2ConsumerBlueprint` that attaches the token in the url params instead of the header, so that the access to providers like instagram is the same as access to other providers with simply `bp.session.get(endpoint)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/140", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/140/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/140/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/140", "id": 336425621, "node_id": "MDU6SXNzdWUzMzY0MjU2MjE=", "number": 140, "title": "Add OAuth provider support", "user": {"login": "CodeRhymesLife", "id": 2764891, "node_id": "MDQ6VXNlcjI3NjQ4OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2764891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeRhymesLife", "html_url": "https://github.com/CodeRhymesLife", "followers_url": "https://api.github.com/users/CodeRhymesLife/followers", "following_url": "https://api.github.com/users/CodeRhymesLife/following{/other_user}", "gists_url": "https://api.github.com/users/CodeRhymesLife/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeRhymesLife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeRhymesLife/subscriptions", "organizations_url": "https://api.github.com/users/CodeRhymesLife/orgs", "repos_url": "https://api.github.com/users/CodeRhymesLife/repos", "events_url": "https://api.github.com/users/CodeRhymesLife/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeRhymesLife/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-27T23:46:49Z", "updated_at": "2019-02-12T13:25:31Z", "closed_at": "2018-08-04T00:14:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey @singingwolfboy,\r\n\r\nAwesome library. My team and I would like to use it but need provider support. We're currently using the outdated [Authomatic](https://github.com/authomatic/authomatic) to authenticate users through the consumer OAuth flow, and [Flask-OAuthlib](https://github.com/lepture/flask-oauthlib) to auth our apps  through the provider OAuth flow. We're considering replacing both of these libraries with [Authlib](https://github.com/lepture/authlib) because it supports both consumer and provider flows and seems to be well maintained. We would rather use flask-dance because it's also well maintained and is built on top of [oauthlib](https://github.com/oauthlib/oauthlib), but your docs say flask-dance doesn't currently support the provider flow, only the consumer flow, and we need both.\r\n\r\nExcept from the docs:\r\n```Currently, only OAuth consumers are supported, but this project could easily support OAuth providers in the future, as well.```\r\n\r\nDo you have plans to support the provider flow any time soon?\r\n\r\nIf you can describe the work that needs to be done we will consider contributing. We're still working on our final budget for our auth work and, if we can swing it, we'd like to help.\r\n\r\nThanks for creating flask-dance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/138", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/138/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/138/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/138", "id": 334276374, "node_id": "MDU6SXNzdWUzMzQyNzYzNzQ=", "number": 138, "title": "Advice on how to deal with testing", "user": {"login": "daenney", "id": 569574, "node_id": "MDQ6VXNlcjU2OTU3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/569574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daenney", "html_url": "https://github.com/daenney", "followers_url": "https://api.github.com/users/daenney/followers", "following_url": "https://api.github.com/users/daenney/following{/other_user}", "gists_url": "https://api.github.com/users/daenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/daenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daenney/subscriptions", "organizations_url": "https://api.github.com/users/daenney/orgs", "repos_url": "https://api.github.com/users/daenney/repos", "events_url": "https://api.github.com/users/daenney/events{/privacy}", "received_events_url": "https://api.github.com/users/daenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-20T22:48:09Z", "updated_at": "2018-06-24T10:51:40Z", "closed_at": "2018-06-24T10:51:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "So I was looking at integrating flask-dance but I'm struggling to understand what to do when the app is being tested. In those cases I don't really want a \"real\" oauth provider, just enough for the app to think a user is logged in (and some necessary information).\r\n\r\nWhat's the advice on how to do that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/137", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/137/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/137/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/137", "id": 332978026, "node_id": "MDU6SXNzdWUzMzI5NzgwMjY=", "number": 137, "title": "InvalidClientIdError: (invalid_request) Missing required parameter: refresh_token", "user": {"login": "kevinhughes27", "id": 1965489, "node_id": "MDQ6VXNlcjE5NjU0ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1965489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhughes27", "html_url": "https://github.com/kevinhughes27", "followers_url": "https://api.github.com/users/kevinhughes27/followers", "following_url": "https://api.github.com/users/kevinhughes27/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhughes27/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhughes27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhughes27/subscriptions", "organizations_url": "https://api.github.com/users/kevinhughes27/orgs", "repos_url": "https://api.github.com/users/kevinhughes27/repos", "events_url": "https://api.github.com/users/kevinhughes27/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhughes27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-16T10:30:26Z", "updated_at": "2018-06-26T12:19:40Z", "closed_at": "2018-06-26T12:19:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error after a while with my Google Provider. I'm not sure if its the Flask session or the Google Access token expiring. I'll dig deeper but wanted to open the issue now in case anyone else has seen this before.\r\n\r\n```\r\n* Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\r\n[2018-06-16 12:27:45,324] ERROR in app: Exception on / [GET]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"app.py\", line 48, in decorated_function\r\n    resp = google.get(\"/oauth2/v2/userinfo\")\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 525, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask_dance/consumer/requests.py\", line 141, in request\r\n    **kwargs\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests_oauthlib/oauth2_session.py\", line 343, in request\r\n    self.auto_refresh_url, auth=auth, **kwargs\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests_oauthlib/oauth2_session.py\", line 309, in refresh_token\r\n    self.token = self._client.parse_request_body_response(r.text, scope=self.scope)\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 411, in parse_request_body_response\r\n    self.token = parse_token_response(body, scope=scope)\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 379, in parse_token_response\r\n    validate_token_parameters(params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 386, in validate_token_parameters\r\n    raise_from_error(params.get('error'), params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauthlib/oauth2/rfc6749/errors.py\", line 415, in raise_from_error\r\n    raise cls(**kwargs)\r\nInvalidClientIdError: (invalid_request) Missing required parameter: refresh_token\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/136", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/136/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/136/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/136", "id": 329923974, "node_id": "MDU6SXNzdWUzMjk5MjM5NzQ=", "number": 136, "title": "Spotify blueprint remains unauthorized after successful oauth_authorized.connect_via signal", "user": {"login": "kvsingh", "id": 822537, "node_id": "MDQ6VXNlcjgyMjUzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/822537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvsingh", "html_url": "https://github.com/kvsingh", "followers_url": "https://api.github.com/users/kvsingh/followers", "following_url": "https://api.github.com/users/kvsingh/following{/other_user}", "gists_url": "https://api.github.com/users/kvsingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvsingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvsingh/subscriptions", "organizations_url": "https://api.github.com/users/kvsingh/orgs", "repos_url": "https://api.github.com/users/kvsingh/repos", "events_url": "https://api.github.com/users/kvsingh/events{/privacy}", "received_events_url": "https://api.github.com/users/kvsingh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-06T15:39:24Z", "updated_at": "2018-07-04T14:02:08Z", "closed_at": "2018-07-04T08:00:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have created an implementation for oauth_authorize.connect_via signal, as mentioned [here](https://flask-dance.readthedocs.io/en/latest/quickstarts/sqla-multiuser.html)\r\n\r\n```\r\n@oauth_authorized.connect_via(spotify_blueprint)\r\ndef spotify_logged_in(blueprint, token):\r\n    if not token:\r\n        print \"Failed to log in with Spotify.\"\r\n        return False\r\n    resp = blueprint.session.get(\"v1/me\")\r\n    if not resp.ok:\r\n        msg = \"Failed to fetch user info from spotify.\"\r\n        print msg\r\n        return False\r\n    spotify_info = resp.json()\r\n    spotify_user_id = str(spotify_info[\"id\"])\r\n    print spotify.authorized \r\n    query = OAuth.query.filter_by(\r\n        spotify_id=spotify_user_id,\r\n    )\r\n    try:\r\n        oauth = query.one()\r\n    except NoResultFound:\r\n        oauth = OAuth(\r\n            spotify_id=spotify_user_id,\r\n            token=token,\r\n        )\r\n\r\n    if oauth.user:\r\n        login_user(oauth.user)\r\n        print \"Successfully signed in with Spotify.\"\r\n    else:\r\n        user = User()\r\n        oauth.user = user\r\n        db.session.add_all([user, oauth])\r\n        db.session.commit()\r\n        login_user(user)\r\n        print \"Successfully signed in with Spotify.\"\r\n    return False\r\n```\r\nThe logs contain \"Successfully signed in with Spotify.\", and my db contains an oauth object with the access token.\r\n\r\nHowever, after login, spotify redirects the app to a particular url on my application. In the view of this page, doing the following:\r\n`print spotify_blueprint.authorized()`\r\ngives me \r\n`{u'error': {u'status': 401, u'message': u'No token provided'}}`\r\n\r\nSo, it seems that the login is successful, but the handler for the page which spotify redirects to tells me that the user is not authorized.\r\n\r\nAny idea what could be going wrong?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/135", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/135/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/135/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/135", "id": 329273305, "node_id": "MDU6SXNzdWUzMjkyNzMzMDU=", "number": 135, "title": "SQLAlchemy Multi-User Quickstart - provider_user_id getting changed to null after a few days (Google)", "user": {"login": "McSpidey", "id": 1709573, "node_id": "MDQ6VXNlcjE3MDk1NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1709573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McSpidey", "html_url": "https://github.com/McSpidey", "followers_url": "https://api.github.com/users/McSpidey/followers", "following_url": "https://api.github.com/users/McSpidey/following{/other_user}", "gists_url": "https://api.github.com/users/McSpidey/gists{/gist_id}", "starred_url": "https://api.github.com/users/McSpidey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McSpidey/subscriptions", "organizations_url": "https://api.github.com/users/McSpidey/orgs", "repos_url": "https://api.github.com/users/McSpidey/repos", "events_url": "https://api.github.com/users/McSpidey/events{/privacy}", "received_events_url": "https://api.github.com/users/McSpidey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-05T01:48:29Z", "updated_at": "2018-08-20T14:19:43Z", "closed_at": "2018-06-26T12:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI've been following this guide (https://flask-dance.readthedocs.io/en/latest/quickstarts/sqla-multiuser.html) exactly, but with the Google blueprint swapped in, and noticed it all works fine to start with - except after a few days after logging in/out sucesfully a few times, then letting it be idle, the provider_user_id suddenly gets changed to Null on a subsequent login. This means the Oauth query fails to find the record, and it attempts to make a new contact, which fails due to the Unique flag.\r\n\r\nI've come up with a workaround for checking the User lookup based on the username/email, and to also check if the provider_user_id is blank, then update it from the new login session data, but I'd really like to try and understand why it's going to null intermitently at all in the first place. My suspicion is maybe it's part of an invisible token refresh? I'm using offline=True and reprompt_consent=True in the blueprint as per other suggestions found here in the issues list.\r\n\r\nI'd like a working example for multi user \"Login with Google\" authentication, with token refresh, if anyone has written one?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/133", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/133/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/133/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/133", "id": 327675499, "node_id": "MDU6SXNzdWUzMjc2NzU0OTk=", "number": 133, "title": "Discord: InvalidClientError when checking authorization", "user": {"login": "JellyWX", "id": 5578434, "node_id": "MDQ6VXNlcjU1Nzg0MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5578434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JellyWX", "html_url": "https://github.com/JellyWX", "followers_url": "https://api.github.com/users/JellyWX/followers", "following_url": "https://api.github.com/users/JellyWX/following{/other_user}", "gists_url": "https://api.github.com/users/JellyWX/gists{/gist_id}", "starred_url": "https://api.github.com/users/JellyWX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JellyWX/subscriptions", "organizations_url": "https://api.github.com/users/JellyWX/orgs", "repos_url": "https://api.github.com/users/JellyWX/repos", "events_url": "https://api.github.com/users/JellyWX/events{/privacy}", "received_events_url": "https://api.github.com/users/JellyWX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-30T10:46:36Z", "updated_at": "2018-05-30T15:08:02Z", "closed_at": "2018-05-30T14:59:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using the GitHub quickstart code with the Discord components (and valid client ID/secret) redirects to the discord login but upon being redirected back to the localhost, OAuthLib raises an `InvalidClientError (invalid_client)`\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/132", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/132/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/132/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/132", "id": 327070600, "node_id": "MDU6SXNzdWUzMjcwNzA2MDA=", "number": 132, "title": "MismatchingStateError", "user": {"login": "samanyougarg", "id": 32533774, "node_id": "MDQ6VXNlcjMyNTMzNzc0", "avatar_url": "https://avatars1.githubusercontent.com/u/32533774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samanyougarg", "html_url": "https://github.com/samanyougarg", "followers_url": "https://api.github.com/users/samanyougarg/followers", "following_url": "https://api.github.com/users/samanyougarg/following{/other_user}", "gists_url": "https://api.github.com/users/samanyougarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/samanyougarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samanyougarg/subscriptions", "organizations_url": "https://api.github.com/users/samanyougarg/orgs", "repos_url": "https://api.github.com/users/samanyougarg/repos", "events_url": "https://api.github.com/users/samanyougarg/events{/privacy}", "received_events_url": "https://api.github.com/users/samanyougarg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-28T16:08:32Z", "updated_at": "2018-05-30T05:04:27Z", "closed_at": "2018-05-30T05:04:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there\r\n\r\nThanks for creating flask-dance. It's a fantastic library.\r\nI am using flask-dance in my production app. It was working perfectly before but suddenly started giving this error - \r\n`oauthlib.oauth2.rfc6749.errors.MismatchingStateError: (mismatching_state) CSRF Warning! State not equal in request and response.`\r\n\r\nHere's the complete log - \r\n`[2018-05-28 16:02:29,857] ERROR in app: Exception on /google_login/google/authorized [GET]\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]: Traceback (most recent call last):\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask/app.py\", line 2284, in wsgi_app\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     response = self.full_dispatch_request()\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask/app.py\", line 1807, in full_dispatch_request\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     rv = self.handle_user_exception(e)\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask_restful/__init__.py\", line 273, in error_router\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     return original_handler(e)\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask/app.py\", line 1710, in handle_user_exception\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     reraise(exc_type, exc_value, tb)\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask/_compat.py\", line 35, in reraise\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     raise value\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask/app.py\", line 1805, in full_dispatch_request\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     rv = self.dispatch_request()\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask/app.py\", line 1791, in dispatch_request\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     return self.view_functions[rule.endpoint](**req.view_args)\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/flask_dance/consumer/oauth2.py\", line 246, in authorized\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     **self.token_url_params\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/requests_oauthlib/oauth2_session.py\", line 187, in fetch_t\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     state=self._state)\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/oauthlib/oauth2/rfc6749/clients/web_application.py\", line\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     response = parse_authorization_code_response(uri, state=state)\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:   File \"/home/radhakrishna/radhakrishna/venv/lib/python3.5/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 230, in parse\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]:     raise MismatchingStateError()\r\nMay 28 16:02:29 radhakrishna gunicorn[19709]: oauthlib.oauth2.rfc6749.errors.MismatchingStateError: (mismatching_state) CSRF Warning! State not equal in request and response.`\r\n\r\nPlease let me know how I can fix this error.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/131", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/131/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/131/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/131", "id": 325902907, "node_id": "MDU6SXNzdWUzMjU5MDI5MDc=", "number": 131, "title": "Validating membership in GitHub organization", "user": {"login": "charlesreid1", "id": 368075, "node_id": "MDQ6VXNlcjM2ODA3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/368075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlesreid1", "html_url": "https://github.com/charlesreid1", "followers_url": "https://api.github.com/users/charlesreid1/followers", "following_url": "https://api.github.com/users/charlesreid1/following{/other_user}", "gists_url": "https://api.github.com/users/charlesreid1/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlesreid1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlesreid1/subscriptions", "organizations_url": "https://api.github.com/users/charlesreid1/orgs", "repos_url": "https://api.github.com/users/charlesreid1/repos", "events_url": "https://api.github.com/users/charlesreid1/events{/privacy}", "received_events_url": "https://api.github.com/users/charlesreid1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-23T22:54:40Z", "updated_at": "2018-05-24T03:47:29Z", "closed_at": "2018-05-24T03:38:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Another question re the Github example - the app as written just authenticates with the user via OAuth, so the Github demo just displays a user's login name. If I wanted to authenticate a user's membership in an organization, I can do an API call to get a boolean yes/no, but do I then add that as an attribute of the [github LocalProxy object](https://github.com/singingwolfboy/flask-dance/blob/master/flask_dance/contrib/github.py#L72), and then change the `github.authorized` check in the [flask-dance-github](https://github.com/singingwolfboy/flask-dance-github/blob/master/github.py#L16) example to `github.authorized and github.in_some_team`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/129", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/129/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/129/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/129", "id": 324617248, "node_id": "MDU6SXNzdWUzMjQ2MTcyNDg=", "number": 129, "title": "Possible to run without OAUTHLIB_INSECURE_TRANSPORT?", "user": {"login": "charlesreid1", "id": 368075, "node_id": "MDQ6VXNlcjM2ODA3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/368075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlesreid1", "html_url": "https://github.com/charlesreid1", "followers_url": "https://api.github.com/users/charlesreid1/followers", "following_url": "https://api.github.com/users/charlesreid1/following{/other_user}", "gists_url": "https://api.github.com/users/charlesreid1/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlesreid1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlesreid1/subscriptions", "organizations_url": "https://api.github.com/users/charlesreid1/orgs", "repos_url": "https://api.github.com/users/charlesreid1/repos", "events_url": "https://api.github.com/users/charlesreid1/events{/privacy}", "received_events_url": "https://api.github.com/users/charlesreid1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-19T09:48:13Z", "updated_at": "2018-06-18T15:25:42Z", "closed_at": "2018-06-18T15:25:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the [Github example](http://flask-dance.readthedocs.io/en/latest/quickstarts/github.html) the page states:\r\n\r\n> When you run this code, you must set the OAUTHLIB_INSECURE_TRANSPORT environment variable for it to work.\r\n\r\nWhy?\r\n\r\nIt then states\r\n\r\n> Do NOT set OAUTHLIB_INSECURE_TRANSPORT in production.\r\n\r\nDoes this mean the Github example cannot be used at all in production, ever (excepting Heroku if you run the proxy middleware)? Or is it designed/intended to be run with the proxy middleware as the default setup to keep it secure?\r\n\r\nAny clarification is appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/128", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/128/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/128/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/128", "id": 324608583, "node_id": "MDU6SXNzdWUzMjQ2MDg1ODM=", "number": 128, "title": "OAuth flow using Facebook", "user": {"login": "erwinyusrizal", "id": 3752374, "node_id": "MDQ6VXNlcjM3NTIzNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3752374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erwinyusrizal", "html_url": "https://github.com/erwinyusrizal", "followers_url": "https://api.github.com/users/erwinyusrizal/followers", "following_url": "https://api.github.com/users/erwinyusrizal/following{/other_user}", "gists_url": "https://api.github.com/users/erwinyusrizal/gists{/gist_id}", "starred_url": "https://api.github.com/users/erwinyusrizal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erwinyusrizal/subscriptions", "organizations_url": "https://api.github.com/users/erwinyusrizal/orgs", "repos_url": "https://api.github.com/users/erwinyusrizal/repos", "events_url": "https://api.github.com/users/erwinyusrizal/events{/privacy}", "received_events_url": "https://api.github.com/users/erwinyusrizal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-19T07:17:40Z", "updated_at": "2018-05-22T07:17:15Z", "closed_at": "2018-05-22T07:17:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm having problem to login using Facebook, it stucks here `https://ccef119x8.ngrok.io/login/facebook/authorized?code=AQDpFCaE1V1OkhzeBROdhjI0QhmggIrtVuI7diOxs9`\r\n\r\n```\r\nfacebook_auth = make_facebook_blueprint(\r\n    client_id='<client_id>',\r\n    client_secret='<secret_id>',\r\n    scope=['email'],\r\n    authorized_url='https://ccef119x8.ngrok.io/login/facebook/authorized'\r\n)\r\n```\r\n\r\nI use `oauth_authorized` decorator but the process it's not there yet, it stucks as I said above\r\n\r\nAny idea? \r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/126", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/126/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/126/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/126", "id": 322184426, "node_id": "MDU6SXNzdWUzMjIxODQ0MjY=", "number": 126, "title": "sqlalchemy.exc.InterfaceError: (sqlite3.InterfaceError) Error binding parameter 2 - probably unsupported type", "user": {"login": "Hammit", "id": 6065109, "node_id": "MDQ6VXNlcjYwNjUxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6065109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hammit", "html_url": "https://github.com/Hammit", "followers_url": "https://api.github.com/users/Hammit/followers", "following_url": "https://api.github.com/users/Hammit/following{/other_user}", "gists_url": "https://api.github.com/users/Hammit/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hammit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hammit/subscriptions", "organizations_url": "https://api.github.com/users/Hammit/orgs", "repos_url": "https://api.github.com/users/Hammit/repos", "events_url": "https://api.github.com/users/Hammit/events{/privacy}", "received_events_url": "https://api.github.com/users/Hammit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-11T06:38:13Z", "updated_at": "2018-05-18T07:35:03Z", "closed_at": "2018-05-18T07:35:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a problem using Flask-Dance. I have adapted the [Multi-User GitHub Setup](https://flask-dance.readthedocs.io/en/latest/multi-user.html) to use Google. I get this error after doing the OAuth login with Google...\r\n\r\nsqlalchemy.exc.InterfaceError: (sqlite3.InterfaceError) Error binding parameter 2 - probably unsupported type. [SQL: 'INSERT INTO flask_dance_oauth (provider, created_at, token, provider_user_id, user_id) VALUES (?, ?, ?, ?, ?)'] [parameters: ('google', None, {'access_token': '<A_LONG_ACCESS_TOKEN>' ... (833 characters truncated) ... -jN4yWZu6r1H8wZmspwZRxhbbyia20NX9XfQ4IWDRA7wgAX8-61C_dsBUI8DH49cTFfKCHSyUCb93ItUqiis8DEocQ', 'token_type': 'Bearer', 'expires_at': 1526023334.0467675}, '<THE_USER_ID>', 1)] (Background on this error at: http://sqlalche.me/e/rvf5)\r\n\r\nIt looks like Flask-Dance or a dependency is trying to save the token to the Db and is producing the InterfaceError seen. I believe the token is a dict or some object, but the DB column type is TEXT in my case as I'm just using SQLite atm. Is this the problem? As a hack/workaround/test, I tried to stringify the token manually when creating the OAuth object as in the guide provided, and that bypasses this problem, but I run into other issues as a result of the token not inflating properly from the Db I believe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/125", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/125/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/125/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/125", "id": 321392229, "node_id": "MDU6SXNzdWUzMjEzOTIyMjk=", "number": 125, "title": "Twitter Oauth cancel crash", "user": {"login": "chuyachia", "id": 25123789, "node_id": "MDQ6VXNlcjI1MTIzNzg5", "avatar_url": "https://avatars0.githubusercontent.com/u/25123789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuyachia", "html_url": "https://github.com/chuyachia", "followers_url": "https://api.github.com/users/chuyachia/followers", "following_url": "https://api.github.com/users/chuyachia/following{/other_user}", "gists_url": "https://api.github.com/users/chuyachia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuyachia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuyachia/subscriptions", "organizations_url": "https://api.github.com/users/chuyachia/orgs", "repos_url": "https://api.github.com/users/chuyachia/repos", "events_url": "https://api.github.com/users/chuyachia/events{/privacy}", "received_events_url": "https://api.github.com/users/chuyachia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T00:37:59Z", "updated_at": "2018-05-31T12:19:18Z", "closed_at": "2018-05-31T12:19:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When entered Twitter Oauth page and clicked\"Cancel\" instead of \"Authorize app\", Twitter propose a button to return to the original app which actually redirects to \"/twitter/authorized?denied=xxxx\". \r\n![image](https://user-images.githubusercontent.com/25123789/39789771-f744c788-52ff-11e8-87f3-1cbce73c2225.png)\r\n \r\nThis calls the _authorized_ method defined in _oauth1.py_. However, the fact that the redirect url only contains a _denied_ key and does not have an _oauth_token_ key causes `self.session.parse_authorization_response(request.url)` to crash.\r\nWhat do you think if we add\r\n`if 'denied' in request.args: \r\nreturn redirect(\"/\")`\r\njust before calling self.session.parse_authorization_response?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/123", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/123/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/123/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/123", "id": 318947195, "node_id": "MDU6SXNzdWUzMTg5NDcxOTU=", "number": 123, "title": "Flask dance with twitch API", "user": {"login": "chanux", "id": 94249, "node_id": "MDQ6VXNlcjk0MjQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/94249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanux", "html_url": "https://github.com/chanux", "followers_url": "https://api.github.com/users/chanux/followers", "following_url": "https://api.github.com/users/chanux/following{/other_user}", "gists_url": "https://api.github.com/users/chanux/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanux/subscriptions", "organizations_url": "https://api.github.com/users/chanux/orgs", "repos_url": "https://api.github.com/users/chanux/repos", "events_url": "https://api.github.com/users/chanux/events{/privacy}", "received_events_url": "https://api.github.com/users/chanux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-04-30T16:12:57Z", "updated_at": "2020-01-25T19:00:00Z", "closed_at": "2018-06-26T12:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been trying to use flask-dance for Twitch API via OAuth2ConsumerBlueprint. The requests seem to fail since Twitch API expects client ID in request headers.\r\n\r\n```DEBUG:requests_oauthlib.oauth2_session:Requesting url https://api.twitch.tv/user using method GET.\r\nDEBUG:requests_oauthlib.oauth2_session:Supplying headers {u'Authorization': u'Bearer XXXXXX'} and data None\r\nDEBUG:requests_oauthlib.oauth2_session:Passing through key word arguments {'allow_redirects': True}.\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): api.twitch.tv\r\nDEBUG:urllib3.connectionpool:https://api.twitch.tv:443 \"GET /user HTTP/1.1\" 302 154\r\nDEBUG:urllib3.connectionpool:https://api.twitch.tv:443 \"GET /kraken/base HTTP/1.1\" 400 96\r\n{u'status': 400, u'message': u'No client id specified', u'error': u'Bad Request'}\r\n```\r\n\r\nI have tried manually setting the headers and it seems to succeed  (even though it leaves new questions for me). I can not see how I can set custom headers. Is it possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/122", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/122/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/122/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/122", "id": 316536990, "node_id": "MDU6SXNzdWUzMTY1MzY5OTA=", "number": 122, "title": "GitHub: oauthlib.oauth2.rfc6749.errors.MissingTokenError", "user": {"login": "jononomo", "id": 5942683, "node_id": "MDQ6VXNlcjU5NDI2ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jononomo", "html_url": "https://github.com/jononomo", "followers_url": "https://api.github.com/users/jononomo/followers", "following_url": "https://api.github.com/users/jononomo/following{/other_user}", "gists_url": "https://api.github.com/users/jononomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jononomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jononomo/subscriptions", "organizations_url": "https://api.github.com/users/jononomo/orgs", "repos_url": "https://api.github.com/users/jononomo/repos", "events_url": "https://api.github.com/users/jononomo/events{/privacy}", "received_events_url": "https://api.github.com/users/jononomo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-22T00:25:33Z", "updated_at": "2018-11-19T03:09:54Z", "closed_at": "2018-05-15T09:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting this error and I can't figure out why.\r\n\r\nI am using this approach:\r\n\r\n```\r\nblueprint = make_github_blueprint(\r\n\tclient_id=environ['FLASK_GITHUB_CLIENT_ID'],\r\n\tclient_secret=environ['GITHUB_CLIENT_SECRET']\r\n)\r\napp.register_blueprint(blueprint, url_prefix=\"/login\")\r\n\r\n@app.route(\"/\")\r\ndef index():\r\n    if not github.authorized:\r\n        return redirect(url_for(\"github.login\"))\r\n    resp = github.get(\"/user\")\r\n    assert resp.ok\r\n    return \"You are @{login} on GitHub\".format(login=resp.json()[\"login\"])\r\n```\r\n\r\nI have `/etc/hosts` set up so that `local.my-app.io` goes to `127.0.0.1`\r\n\r\nIf I go to a new incognito window and then visit `local.my-app.io:5000` in my browser after launching things with `flask run`, then I get redirected to the github login page as expected, where I have registered an app with callback of: `http://local.my-app.io:5000/login/github/authorized`\r\n\r\nAfter logging in successfully I get redirected to a page where I see a crash and a stacktrace telling me: \r\n\r\n`oauthlib.oauth2.rfc6749.errors.MissingTokenError: (missing_token) Missing access token parameter.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/120", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/120/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/120/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/120", "id": 310411952, "node_id": "MDU6SXNzdWUzMTA0MTE5NTI=", "number": 120, "title": "Twitter: \"ValueError: Cannot get OAuth token without an associated user\"", "user": {"login": "chrisroat", "id": 1053153, "node_id": "MDQ6VXNlcjEwNTMxNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1053153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisroat", "html_url": "https://github.com/chrisroat", "followers_url": "https://api.github.com/users/chrisroat/followers", "following_url": "https://api.github.com/users/chrisroat/following{/other_user}", "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions", "organizations_url": "https://api.github.com/users/chrisroat/orgs", "repos_url": "https://api.github.com/users/chrisroat/repos", "events_url": "https://api.github.com/users/chrisroat/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisroat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2018-04-02T06:58:08Z", "updated_at": "2019-04-15T15:17:54Z", "closed_at": "2018-06-04T09:50:02Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "I was able to run the github-oauth based [example](http://flask-dance.readthedocs.io/en/latest/quickstarts/sqla-multiuser.html) correctly.\r\n\r\nI then created this [gist](https://gist.github.com/chrisroat/d2aa08b0b60ec83c64a47332357fd292) which is the same except switching to twitter.   It gives **\"ValueError: Cannot get OAuth token without an associated user\"**.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/118", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/118/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/118/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/118", "id": 310112012, "node_id": "MDU6SXNzdWUzMTAxMTIwMTI=", "number": 118, "title": "Mistake in Multi-User Github Quickstart", "user": {"login": "davidhariri", "id": 5245670, "node_id": "MDQ6VXNlcjUyNDU2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5245670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidhariri", "html_url": "https://github.com/davidhariri", "followers_url": "https://api.github.com/users/davidhariri/followers", "following_url": "https://api.github.com/users/davidhariri/following{/other_user}", "gists_url": "https://api.github.com/users/davidhariri/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidhariri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidhariri/subscriptions", "organizations_url": "https://api.github.com/users/davidhariri/orgs", "repos_url": "https://api.github.com/users/davidhariri/repos", "events_url": "https://api.github.com/users/davidhariri/events{/privacy}", "received_events_url": "https://api.github.com/users/davidhariri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-30T16:43:39Z", "updated_at": "2018-03-30T21:51:38Z", "closed_at": "2018-03-30T21:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the documentation [here](https://github.com/singingwolfboy/flask-dance/blob/master/docs/quickstarts/sqla-multiuser.rst) it references `github_bp` which does not exist. I will open a PR to fix this example code.\r\n\r\nThank you for flask-dance. It's tremendous.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/117", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/117/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/117/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/117", "id": 304209272, "node_id": "MDU6SXNzdWUzMDQyMDkyNzI=", "number": 117, "title": "Is it possible to use an application factory", "user": {"login": "scbunn", "id": 4461, "node_id": "MDQ6VXNlcjQ0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scbunn", "html_url": "https://github.com/scbunn", "followers_url": "https://api.github.com/users/scbunn/followers", "following_url": "https://api.github.com/users/scbunn/following{/other_user}", "gists_url": "https://api.github.com/users/scbunn/gists{/gist_id}", "starred_url": "https://api.github.com/users/scbunn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scbunn/subscriptions", "organizations_url": "https://api.github.com/users/scbunn/orgs", "repos_url": "https://api.github.com/users/scbunn/repos", "events_url": "https://api.github.com/users/scbunn/events{/privacy}", "received_events_url": "https://api.github.com/users/scbunn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-12T00:22:06Z", "updated_at": "2018-03-21T21:53:30Z", "closed_at": "2018-03-13T01:10:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use an application factory without `@oauth_authorized.connect_via` being part of `create_app`?  I'm probably missing something, but I'm not seeing a way and I really don't want to have auth login as part of create_app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/115", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/115/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/115/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/115", "id": 302367734, "node_id": "MDU6SXNzdWUzMDIzNjc3MzQ=", "number": 115, "title": "GitLab OAuth providor, client MissingTokenError before requesting token ", "user": {"login": "jgeorgeson", "id": 10238523, "node_id": "MDQ6VXNlcjEwMjM4NTIz", "avatar_url": "https://avatars2.githubusercontent.com/u/10238523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgeorgeson", "html_url": "https://github.com/jgeorgeson", "followers_url": "https://api.github.com/users/jgeorgeson/followers", "following_url": "https://api.github.com/users/jgeorgeson/following{/other_user}", "gists_url": "https://api.github.com/users/jgeorgeson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgeorgeson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgeorgeson/subscriptions", "organizations_url": "https://api.github.com/users/jgeorgeson/orgs", "repos_url": "https://api.github.com/users/jgeorgeson/repos", "events_url": "https://api.github.com/users/jgeorgeson/events{/privacy}", "received_events_url": "https://api.github.com/users/jgeorgeson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-05T16:27:52Z", "updated_at": "2018-03-13T07:43:56Z", "closed_at": "2018-03-13T07:43:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm writing Flask app to drive some GitLab workflows that aren't supported by their API. I don't really need to have a user database/profile in my app. My app just needs to fetch the list of GitLab groups that the user has access to, they select a group, and then my app will make API calls and splinter/selenium calls to perform the workflow. I've configured my application in GitLab per this doc\r\n\r\nhttps://docs.gitlab.com/ee/integration/oauth_provider.html#oauth-applications-in-the-admin-area\r\n\r\nI've setup a OAuth2ConsumerBlueprint object with the client ID/secret and URLs for authorization and tokens, according to this doc\r\n\r\nhttps://docs.gitlab.com/ee/api/oauth2.html\r\n\r\nWhen I click on the `<a href={{url_for(\"oauth-gitlab.login\")}}>Login with GitLab</a>` link in my app, it takes me to my GitLab instance to login and asks me to approve, then it redirects me back to my app and that throws `oauthlib.oauth2.rfc6749.errors.MissingTokenError`. \r\n\r\n```\r\nFile \"/home/jgeorgeson/Code/Dev-Engineering/gitlab-import-wrapper/import-wrapper/lib/python3.6/site-packages/flask_dance/consumer/oauth2.py\", line 234, in authorized\r\n**self.token_url_params\r\nFile \"/home/jgeorgeson/Code/Dev-Engineering/gitlab-import-wrapper/import-wrapper/lib/python3.6/site-packages/requests_oauthlib/oauth2_session.py\", line 244, in fetch_token\r\nself._client.parse_request_body_response(r.text, scope=self.scope)\r\nFile \"/home/jgeorgeson/Code/Dev-Engineering/gitlab-import-wrapper/import-wrapper/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 408, in parse_request_body_response\r\nself.token = parse_token_response(body, scope=scope)\r\nFile \"/home/jgeorgeson/Code/Dev-Engineering/gitlab-import-wrapper/import-wrapper/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 379, in parse_token_response\r\nvalidate_token_parameters(params)\r\nFile \"/home/jgeorgeson/Code/Dev-Engineering/gitlab-import-wrapper/import-wrapper/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 389, in validate_token_parameters\r\nraise MissingTokenError(description=\"Missing access token parameter.\")\r\n```\r\n\r\nBased on the 2nd gitlab.com link it seems like flask should be making a call to the token URL using the code returned by the authorization URL, but is instead expecting the token to be in the response already. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/113", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/113/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/113/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/113", "id": 300196104, "node_id": "MDU6SXNzdWUzMDAxOTYxMDQ=", "number": 113, "title": "Any way to use this with JWT", "user": {"login": "runar-rkmedia", "id": 5629981, "node_id": "MDQ6VXNlcjU2Mjk5ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5629981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/runar-rkmedia", "html_url": "https://github.com/runar-rkmedia", "followers_url": "https://api.github.com/users/runar-rkmedia/followers", "following_url": "https://api.github.com/users/runar-rkmedia/following{/other_user}", "gists_url": "https://api.github.com/users/runar-rkmedia/gists{/gist_id}", "starred_url": "https://api.github.com/users/runar-rkmedia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/runar-rkmedia/subscriptions", "organizations_url": "https://api.github.com/users/runar-rkmedia/orgs", "repos_url": "https://api.github.com/users/runar-rkmedia/repos", "events_url": "https://api.github.com/users/runar-rkmedia/events{/privacy}", "received_events_url": "https://api.github.com/users/runar-rkmedia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-26T11:08:04Z", "updated_at": "2018-02-27T07:02:31Z", "closed_at": "2018-02-27T07:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, it seems this only works with sessions stored as cookies. Any way to make it work with JWT?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/111", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/111/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/111/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/111", "id": 299972802, "node_id": "MDU6SXNzdWUyOTk5NzI4MDI=", "number": 111, "title": "InvalidClientIdError: (invalid_request) Missing required parameter: refresh_token", "user": {"login": "GabrielPereyra", "id": 5705822, "node_id": "MDQ6VXNlcjU3MDU4MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5705822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabrielPereyra", "html_url": "https://github.com/GabrielPereyra", "followers_url": "https://api.github.com/users/GabrielPereyra/followers", "following_url": "https://api.github.com/users/GabrielPereyra/following{/other_user}", "gists_url": "https://api.github.com/users/GabrielPereyra/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabrielPereyra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabrielPereyra/subscriptions", "organizations_url": "https://api.github.com/users/GabrielPereyra/orgs", "repos_url": "https://api.github.com/users/GabrielPereyra/repos", "events_url": "https://api.github.com/users/GabrielPereyra/events{/privacy}", "received_events_url": "https://api.github.com/users/GabrielPereyra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-24T21:06:41Z", "updated_at": "2018-03-13T07:44:13Z", "closed_at": "2018-03-13T07:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error:\r\n> InvalidClientIdError: (invalid_request) Missing required parameter: refresh_token\r\n\r\nwhen I call `google.get(\"/plus/v1/people/me\")`. I was able to fetch the credentials initially, but when I revisit the page and try to fetch the credentials again, I run into this problem. I tried setting `reprompt_consent=True` and `offline=True`. I'm getting this error both locally and on Heroku.\r\n\r\nThe user is authorized (`google.authorized` is True). Is there another way to retrieve the user id and email? \r\n\r\n**versions**\r\n```\r\nFlask==0.12.2\r\ngunicorn==19.7.1\r\nFlask-SQLAlchemy==2.3.2\r\npsycopg2==2.7.4\r\nflask_dance==0.13.0\r\n```\r\n**error**\r\n```\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1997, in __call__\r\nreturn self.wsgi_app(environ, start_response)\r\nFile \"/Library/Python/2.7/site-packages/werkzeug/contrib/fixers.py\", line 152, in __call__\r\nreturn self.app(environ, start_response)\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1985, in wsgi_app\r\nresponse = self.handle_exception(e)\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1540, in handle_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\r\nresponse = self.full_dispatch_request()\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\nrv = self.handle_user_exception(e)\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\nrv = self.dispatch_request()\r\nFile \"/Library/Python/2.7/site-packages/flask/app.py\", line 1598, in dispatch_request\r\nreturn self.view_functions[rule.endpoint](**req.view_args)\r\nFile \"/Users/gabriel/Desktop/chess/main.py\", line 163, in main\r\nuser_id, email = get_google_id_and_email()\r\nFile \"/Users/gabriel/Desktop/chess/main.py\", line 145, in get_google_id_and_email\r\nresponse = google.get(\"/plus/v1/people/me\")\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/requests/sessions.py\", line 521, in get\r\nreturn self.request('GET', url, **kwargs)\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/flask_dance/consumer/requests.py\", line 135, in request\r\n**kwargs\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/requests_oauthlib/oauth2_session.py\", line 343, in request\r\nself.auto_refresh_url, auth=auth, **kwargs\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/requests_oauthlib/oauth2_session.py\", line 309, in refresh_token\r\nself.token = self._client.parse_request_body_response(r.text, scope=self.scope)\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 408, in parse_request_body_response\r\nself.token = parse_token_response(body, scope=scope)\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 379, in parse_token_response\r\nvalidate_token_parameters(params)\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 386, in validate_token_parameters\r\nraise_from_error(params.get('error'), params)\r\nFile \"/Users/gabriel/Library/Python/2.7/lib/python/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 415, in raise_from_error\r\nraise cls(**kwargs)\r\nInvalidClientIdError: (invalid_request) Missing required parameter: refresh_token\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/106", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/106/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/106/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/106", "id": 296054215, "node_id": "MDU6SXNzdWUyOTYwNTQyMTU=", "number": 106, "title": "\"ValueError: Cannot get OAuth token without an associated user\"", "user": {"login": "CT83", "id": 17134097, "node_id": "MDQ6VXNlcjE3MTM0MDk3", "avatar_url": "https://avatars1.githubusercontent.com/u/17134097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CT83", "html_url": "https://github.com/CT83", "followers_url": "https://api.github.com/users/CT83/followers", "following_url": "https://api.github.com/users/CT83/following{/other_user}", "gists_url": "https://api.github.com/users/CT83/gists{/gist_id}", "starred_url": "https://api.github.com/users/CT83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CT83/subscriptions", "organizations_url": "https://api.github.com/users/CT83/orgs", "repos_url": "https://api.github.com/users/CT83/repos", "events_url": "https://api.github.com/users/CT83/events{/privacy}", "received_events_url": "https://api.github.com/users/CT83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-10T00:29:59Z", "updated_at": "2019-06-06T15:34:12Z", "closed_at": "2018-02-26T15:49:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using ( https://gist.github.com/CT83/7881e27487fbcc31cc6c319d39212de3 ), I get **\"ValueError: Cannot get OAuth token without an associated user\"** on the webpage when I visit http://127.0.0.1:5000/twitter my error is similar to this (https://stackoverflow.com/questions/47643448/flask-dance-cannot-get-oauth-token-without-an-associated-user)\ufeff\r\n\r\nCould someone respond to this please? I am sorry to be creating an Issue on this Repo but I couldn't find any help elsewhere.\r\n\r\nPS I followed [this](https://www.youtube.com/watch?v=G44Tpi58dcc) YouTube Video\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/105", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/105/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/105/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/105", "id": 293639469, "node_id": "MDU6SXNzdWUyOTM2Mzk0Njk=", "number": 105, "title": "How i can refresh my access_token manualy?", "user": {"login": "blohinn", "id": 20373019, "node_id": "MDQ6VXNlcjIwMzczMDE5", "avatar_url": "https://avatars2.githubusercontent.com/u/20373019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blohinn", "html_url": "https://github.com/blohinn", "followers_url": "https://api.github.com/users/blohinn/followers", "following_url": "https://api.github.com/users/blohinn/following{/other_user}", "gists_url": "https://api.github.com/users/blohinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/blohinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blohinn/subscriptions", "organizations_url": "https://api.github.com/users/blohinn/orgs", "repos_url": "https://api.github.com/users/blohinn/repos", "events_url": "https://api.github.com/users/blohinn/events{/privacy}", "received_events_url": "https://api.github.com/users/blohinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-01T18:39:32Z", "updated_at": "2018-02-02T09:15:24Z", "closed_at": "2018-02-02T09:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Man, your lib work fine, but i have a trouble :(\r\nHow do you refresh the token? I try search answer in doc, but didnt find..\r\nFor example: my user successfull logined with flask dance. In my DB a have a dict:\r\n```\r\n{\r\n    \"access_token\" : \"ya29.Gl...O8\",\r\n    \"expires_in\" : 3599,\r\n    \"id_token\" : \"eyJhb...Sf8zr5kAE-0HKf67UlgA\",\r\n    \"token_type\" : \"Bearer\",\r\n    \"expires_at\" : 1510427464.66068,\r\n    \"refresh_token\" : \"1/ybsh5gTXrcdz...zdZT8AUD\"\r\n}\r\n```\r\nAnd autorefreshing works fine. But how it work? It's a magic?! Where you are updating token?\r\n\r\nNow, i want to use [gspread]( https://github.com/burnash/gspread) to work with Google Sheets. I made a custom credentials class and it's not a big problem. But it works only if my access_token not expired. \r\n\r\nAnd how i can refresh my token with your lib or manualy? Thanks for answer and sorry for my bad English!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/104", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/104/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/104/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/104", "id": 292996720, "node_id": "MDU6SXNzdWUyOTI5OTY3MjA=", "number": 104, "title": "The github.access_token return None even if the access token is available", "user": {"login": "giocalitri", "id": 1005204, "node_id": "MDQ6VXNlcjEwMDUyMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1005204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giocalitri", "html_url": "https://github.com/giocalitri", "followers_url": "https://api.github.com/users/giocalitri/followers", "following_url": "https://api.github.com/users/giocalitri/following{/other_user}", "gists_url": "https://api.github.com/users/giocalitri/gists{/gist_id}", "starred_url": "https://api.github.com/users/giocalitri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giocalitri/subscriptions", "organizations_url": "https://api.github.com/users/giocalitri/orgs", "repos_url": "https://api.github.com/users/giocalitri/repos", "events_url": "https://api.github.com/users/giocalitri/events{/privacy}", "received_events_url": "https://api.github.com/users/giocalitri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-31T01:11:40Z", "updated_at": "2018-02-11T13:20:36Z", "closed_at": "2018-02-11T13:20:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A demonstration is in this app:\r\nhttps://github.com/giocalitri/flask-dance-github/blob/gdm_test/github.py\r\n\r\nAfter getting the token with the first endpoint, try to GET the second and you will have something like:\r\n\r\n```\r\n{\r\n  \"access_token\": null, \r\n  \"token\": {\r\n    \"access_token\": \"XXXXXXXXXXXXXXXXXXXXXXXXXX\", \r\n    \"scope\": [\r\n      \"\"\r\n    ], \r\n    \"token_type\": \"bearer\"\r\n  }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/102", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/102/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/102/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/102", "id": 284224215, "node_id": "MDU6SXNzdWUyODQyMjQyMTU=", "number": 102, "title": "Missing required parameter: refresh_token", "user": {"login": "blohinn", "id": 20373019, "node_id": "MDQ6VXNlcjIwMzczMDE5", "avatar_url": "https://avatars2.githubusercontent.com/u/20373019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blohinn", "html_url": "https://github.com/blohinn", "followers_url": "https://api.github.com/users/blohinn/followers", "following_url": "https://api.github.com/users/blohinn/following{/other_user}", "gists_url": "https://api.github.com/users/blohinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/blohinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blohinn/subscriptions", "organizations_url": "https://api.github.com/users/blohinn/orgs", "repos_url": "https://api.github.com/users/blohinn/repos", "events_url": "https://api.github.com/users/blohinn/events{/privacy}", "received_events_url": "https://api.github.com/users/blohinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-22T18:24:21Z", "updated_at": "2017-12-22T21:58:50Z", "closed_at": "2017-12-22T21:02:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a custom backend. All works fine, but i have problem when token was expired...\r\nWhat about refresh token? I didnt find anything about this problem...\r\n\r\nCustom backend:\r\n```\r\nclass MongoBackend(BaseBackend):\r\n    def get(self, blueprint):\r\n        from ..collections import users_collection\r\n        try:\r\n            user = users_collection.find_one({'_id': ObjectId(current_user.id), 'oauth.provider': 'google'})\r\n            return user['oauth']['token']\r\n        except:\r\n            return None\r\n\r\n    def set(self, blueprint, token):\r\n        from ..collections import users_collection\r\n        users_collection.update_one({'_id': ObjectId(current_user.id)}, {'$set': {'oauth.token': token}})\r\n\r\n    def delete(self, blueprint):\r\n        from ..collections import users_collection\r\n        users_collection.update_one({'_id': ObjectId(current_user.id), 'oauth': {'$set': {'token': ''}}})  # i know that didnt work\r\n        return None\r\n```\r\nUser scheme:\r\n```\r\n{\r\n    \"_id\" : ObjectId(\"5a3d489ecefa5b3ad0b77b46\"),\r\n    \"email\" : \"blablabla@gmail.com\",\r\n    \"oauth\" : {\r\n        \"provider\" : \"google\",\r\n        \"token\" : {\r\n            \"access_token\" : \"bla bla bla\",\r\n            \"expires_in\" : 3420,\r\n            \"id_token\" : \"bla bla bla\",\r\n            \"token_type\" : \"Bearer\",\r\n            \"expires_at\" : 1510969326.18578\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWhen token was expired i see:\r\n**oauthlib.oauth2.rfc6749.errors.InvalidClientIdError**\r\noauthlib.oauth2.rfc6749.errors.InvalidClientIdError: (invalid_request) Missing required parameter: refresh_token", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/100", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/100/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/100/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/100", "id": 282654609, "node_id": "MDU6SXNzdWUyODI2NTQ2MDk=", "number": 100, "title": "Twitter Oauth Dance using SQLa Backend failing in current version (0.13), was working in version 0.11.1", "user": {"login": "avagut", "id": 10583214, "node_id": "MDQ6VXNlcjEwNTgzMjE0", "avatar_url": "https://avatars0.githubusercontent.com/u/10583214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avagut", "html_url": "https://github.com/avagut", "followers_url": "https://api.github.com/users/avagut/followers", "following_url": "https://api.github.com/users/avagut/following{/other_user}", "gists_url": "https://api.github.com/users/avagut/gists{/gist_id}", "starred_url": "https://api.github.com/users/avagut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avagut/subscriptions", "organizations_url": "https://api.github.com/users/avagut/orgs", "repos_url": "https://api.github.com/users/avagut/repos", "events_url": "https://api.github.com/users/avagut/events{/privacy}", "received_events_url": "https://api.github.com/users/avagut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-16T22:19:37Z", "updated_at": "2017-12-21T11:05:31Z", "closed_at": "2017-12-21T11:05:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The attached code file sets up a Twitter app with a SQLAlchemy backend.\r\nOn installing Flask Dance from pip install today currently (version 0.13), the code doesn't works.\r\nIf I manually download the package files code as it was in the commit 2ac2536473d4059c120e061de4d5ff7d8ac9e04a on 01 Aug 2017 and replace the pip installed files, the code works as expected and the auth dance is completed successfuly.\r\n\r\nThe code raises an error ValueError (\"Cannot delete OAuth token without an associated user\") and is not affecting GitHub and Google setups but affects Twitter.\r\n[app txt](https://github.com/singingwolfboy/flask-dance/files/1565133/app.txt)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/99", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/99/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/99/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/99", "id": 280718493, "node_id": "MDU6SXNzdWUyODA3MTg0OTM=", "number": 99, "title": "Cannot pip install sqla version of Flask Dance", "user": {"login": "avagut", "id": 10583214, "node_id": "MDQ6VXNlcjEwNTgzMjE0", "avatar_url": "https://avatars0.githubusercontent.com/u/10583214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avagut", "html_url": "https://github.com/avagut", "followers_url": "https://api.github.com/users/avagut/followers", "following_url": "https://api.github.com/users/avagut/following{/other_user}", "gists_url": "https://api.github.com/users/avagut/gists{/gist_id}", "starred_url": "https://api.github.com/users/avagut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avagut/subscriptions", "organizations_url": "https://api.github.com/users/avagut/orgs", "repos_url": "https://api.github.com/users/avagut/repos", "events_url": "https://api.github.com/users/avagut/events{/privacy}", "received_events_url": "https://api.github.com/users/avagut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-09T13:11:43Z", "updated_at": "2017-12-16T11:51:47Z", "closed_at": "2017-12-16T11:51:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unable to pip install Flask-Dance[sqla]. \r\nI get the response that \"no matches found: Flask-Dance[sqla]\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/98", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/98/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/98/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/98", "id": 277591184, "node_id": "MDU6SXNzdWUyNzc1OTExODQ=", "number": 98, "title": "Question regrading Custom Backends", "user": {"login": "seekheart", "id": 9321678, "node_id": "MDQ6VXNlcjkzMjE2Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9321678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seekheart", "html_url": "https://github.com/seekheart", "followers_url": "https://api.github.com/users/seekheart/followers", "following_url": "https://api.github.com/users/seekheart/following{/other_user}", "gists_url": "https://api.github.com/users/seekheart/gists{/gist_id}", "starred_url": "https://api.github.com/users/seekheart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seekheart/subscriptions", "organizations_url": "https://api.github.com/users/seekheart/orgs", "repos_url": "https://api.github.com/users/seekheart/repos", "events_url": "https://api.github.com/users/seekheart/events{/privacy}", "received_events_url": "https://api.github.com/users/seekheart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-29T00:49:43Z", "updated_at": "2017-12-23T09:45:07Z", "closed_at": "2017-12-23T09:45:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm writing a custom backend that uses pymongo to find the current user.\r\nQuestion is from the documentation I'm not sure how the custom backend would know what the username I'm passing in is? Is that where the blueprint argument comes in to play or?\r\n\r\nfor reference this snippet from docs:\r\n\r\n```python\r\nimport os\r\nimport os.path\r\nimport json\r\nfrom flask_dance.consumer.backend import BaseBackend\r\n\r\nclass FileBackend(BaseBackend):\r\n    def __init__(self, filepath):\r\n        super(FileBackend, self).__init__()\r\n        self.filepath = filepath\r\n\r\n    def get(self, blueprint):\r\n        if not os.path.exists(self.filepath):\r\n            return None\r\n        with open(self.filepath) as f:\r\n            return json.load(f)\r\n\r\n    def set(self, blueprint, token):\r\n        with open(self.filepath, \"w\") as f:\r\n            json.dump(token, f)\r\n\r\n    def delete(self, blueprint):\r\n        os.remove(self.filepath)\r\n```\r\n\r\nWhere does the user info live?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/96", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/96/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/96/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/96", "id": 277011091, "node_id": "MDU6SXNzdWUyNzcwMTEwOTE=", "number": 96, "title": "Typo in docs?", "user": {"login": "seekheart", "id": 9321678, "node_id": "MDQ6VXNlcjkzMjE2Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9321678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seekheart", "html_url": "https://github.com/seekheart", "followers_url": "https://api.github.com/users/seekheart/followers", "following_url": "https://api.github.com/users/seekheart/following{/other_user}", "gists_url": "https://api.github.com/users/seekheart/gists{/gist_id}", "starred_url": "https://api.github.com/users/seekheart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seekheart/subscriptions", "organizations_url": "https://api.github.com/users/seekheart/orgs", "repos_url": "https://api.github.com/users/seekheart/repos", "events_url": "https://api.github.com/users/seekheart/events{/privacy}", "received_events_url": "https://api.github.com/users/seekheart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-27T13:03:12Z", "updated_at": "2017-11-28T08:13:15Z", "closed_at": "2017-11-28T08:13:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://flask-dance.readthedocs.io/en/latest/backends.html#custom\r\n\r\nIn the custom you are calling super on FileStorage and not FileBackend is this a typo? Also for the args what does the blueprint parameter do, it seems to be unused?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/95", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/95/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/95/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/95", "id": 276701093, "node_id": "MDU6SXNzdWUyNzY3MDEwOTM=", "number": 95, "title": "Does this work with rest-plus?", "user": {"login": "seekheart", "id": 9321678, "node_id": "MDQ6VXNlcjkzMjE2Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9321678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seekheart", "html_url": "https://github.com/seekheart", "followers_url": "https://api.github.com/users/seekheart/followers", "following_url": "https://api.github.com/users/seekheart/following{/other_user}", "gists_url": "https://api.github.com/users/seekheart/gists{/gist_id}", "starred_url": "https://api.github.com/users/seekheart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seekheart/subscriptions", "organizations_url": "https://api.github.com/users/seekheart/orgs", "repos_url": "https://api.github.com/users/seekheart/repos", "events_url": "https://api.github.com/users/seekheart/events{/privacy}", "received_events_url": "https://api.github.com/users/seekheart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-24T21:31:51Z", "updated_at": "2017-11-24T21:35:02Z", "closed_at": "2017-11-24T21:35:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Wanted to ask if there are any examples or if flask-dance can work with flask-rest-plus?\r\nI'm currently looking for an Oauth lib that can with google for a restful backend I have in the works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/90", "repository_url": "https://api.github.com/repos/singingwolfboy/flask-dance", "labels_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/90/comments", "events_url": "https://api.github.com/repos/singingwolfboy/flask-dance/issues/90/events", "html_url": "https://github.com/singingwolfboy/flask-dance/issues/90", "id": 269562828, "node_id": "MDU6SXNzdWUyNjk1NjI4Mjg=", "number": 90, "title": "Breakpoints not working within @oauth_authorized.connect_via() function?", "user": {"login": "NathanWailes", "id": 1755791, "node_id": "MDQ6VXNlcjE3NTU3OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1755791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NathanWailes", "html_url": "https://github.com/NathanWailes", "followers_url": "https://api.github.com/users/NathanWailes/followers", "following_url": "https://api.github.com/users/NathanWailes/following{/other_user}", "gists_url": "https://api.github.com/users/NathanWailes/gists{/gist_id}", "starred_url": "https://api.github.com/users/NathanWailes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NathanWailes/subscriptions", "organizations_url": "https://api.github.com/users/NathanWailes/orgs", "repos_url": "https://api.github.com/users/NathanWailes/repos", "events_url": "https://api.github.com/users/NathanWailes/events{/privacy}", "received_events_url": "https://api.github.com/users/NathanWailes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-30T11:16:23Z", "updated_at": "2017-10-31T14:39:28Z", "closed_at": "2017-10-31T14:38:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Have you ever had this issue? I'm using PyCharm and I've set a breakpoint within the `@oauth_authorized.connect_via()` function that I'm trying to get working, but when I log in with Twitter it doesn't seem to stop on the breakpoint.", "performed_via_github_app": null, "score": 1.0}]}