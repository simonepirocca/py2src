{"total_count": 42, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/textX/Arpeggio/issues/79", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/79/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/79/events", "html_url": "https://github.com/textX/Arpeggio/issues/79", "id": 640795098, "node_id": "MDU6SXNzdWU2NDA3OTUwOTg=", "number": 79, "title": "The DSL used for arpeggio grammars looks very similar to parsimonious. Is it intentional?", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 17885756, "node_id": "MDU6TGFiZWwxNzg4NTc1Ng==", "url": "https://api.github.com/repos/textX/Arpeggio/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T23:06:17Z", "updated_at": "2020-06-18T12:06:04Z", "closed_at": "2020-06-18T12:06:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "And is there any compatibility/incompatibility?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/74", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/74/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/74/events", "html_url": "https://github.com/textX/Arpeggio/issues/74", "id": 609476571, "node_id": "MDU6SXNzdWU2MDk0NzY1NzE=", "number": 74, "title": "Indentation based languages", "user": {"login": "mathrb", "id": 4428209, "node_id": "MDQ6VXNlcjQ0MjgyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4428209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathrb", "html_url": "https://github.com/mathrb", "followers_url": "https://api.github.com/users/mathrb/followers", "following_url": "https://api.github.com/users/mathrb/following{/other_user}", "gists_url": "https://api.github.com/users/mathrb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathrb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathrb/subscriptions", "organizations_url": "https://api.github.com/users/mathrb/orgs", "repos_url": "https://api.github.com/users/mathrb/repos", "events_url": "https://api.github.com/users/mathrb/events{/privacy}", "received_events_url": "https://api.github.com/users/mathrb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1483492174, "node_id": "MDU6TGFiZWwxNDgzNDkyMTc0", "url": "https://api.github.com/repos/textX/Arpeggio/labels/feature%20request", "name": "feature request", "color": "006b75", "default": false, "description": ""}, {"id": 17885756, "node_id": "MDU6TGFiZWwxNzg4NTc1Ng==", "url": "https://api.github.com/repos/textX/Arpeggio/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T00:58:31Z", "updated_at": "2020-04-30T16:48:04Z", "closed_at": "2020-04-30T16:48:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI know pure PEG cannot parse an indentation based language.\r\nBut like pegjs, Arpeggio might have a way to do it.\r\n\r\nDo you thinks it's feasible? If yes, could you give me some hints?\r\n\r\nKind regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/73", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/73/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/73/events", "html_url": "https://github.com/textX/Arpeggio/issues/73", "id": 606383893, "node_id": "MDU6SXNzdWU2MDYzODM4OTM=", "number": 73, "title": "Unordered group matching is non-deterministic", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 17885752, "node_id": "MDU6TGFiZWwxNzg4NTc1Mg==", "url": "https://api.github.com/repos/textX/Arpeggio/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-24T15:07:50Z", "updated_at": "2020-04-24T15:41:50Z", "closed_at": "2020-04-24T15:41:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reported in [the textX issue](https://github.com/textX/textX/issues/241) by @wangluochao902", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/65", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/65/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/65/events", "html_url": "https://github.com/textX/Arpeggio/issues/65", "id": 502326008, "node_id": "MDU6SXNzdWU1MDIzMjYwMDg=", "number": 65, "title": "setup.py doesn't promise Python 3 compatibility", "user": {"login": "1fish2", "id": 1043120, "node_id": "MDQ6VXNlcjEwNDMxMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1043120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1fish2", "html_url": "https://github.com/1fish2", "followers_url": "https://api.github.com/users/1fish2/followers", "following_url": "https://api.github.com/users/1fish2/following{/other_user}", "gists_url": "https://api.github.com/users/1fish2/gists{/gist_id}", "starred_url": "https://api.github.com/users/1fish2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1fish2/subscriptions", "organizations_url": "https://api.github.com/users/1fish2/orgs", "repos_url": "https://api.github.com/users/1fish2/repos", "events_url": "https://api.github.com/users/1fish2/events{/privacy}", "received_events_url": "https://api.github.com/users/1fish2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T22:16:19Z", "updated_at": "2019-10-05T10:46:02Z", "closed_at": "2019-10-05T10:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `CHANGELOG.md` is clear that Arpeggio supports Python 3 but the [caniusepython3](https://github.com/brettcannon/caniusepython3) tool lists Arpeggio among projects that \"need to transition to Python 3.\"\r\n\r\nAIUI, to fix this, add these classifiers to `setup.py`:\r\n\r\n    Programming Language :: Python :: 3.5\r\n    Programming Language :: Python :: 3.6\r\n    Programming Language :: Python :: 3.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/64", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/64/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/64/events", "html_url": "https://github.com/textX/Arpeggio/issues/64", "id": 499874239, "node_id": "MDU6SXNzdWU0OTk4NzQyMzk=", "number": 64, "title": "ZeroOrMore unexpected behaviour", "user": {"login": "vinaymahore", "id": 55941403, "node_id": "MDQ6VXNlcjU1OTQxNDAz", "avatar_url": "https://avatars1.githubusercontent.com/u/55941403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinaymahore", "html_url": "https://github.com/vinaymahore", "followers_url": "https://api.github.com/users/vinaymahore/followers", "following_url": "https://api.github.com/users/vinaymahore/following{/other_user}", "gists_url": "https://api.github.com/users/vinaymahore/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinaymahore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinaymahore/subscriptions", "organizations_url": "https://api.github.com/users/vinaymahore/orgs", "repos_url": "https://api.github.com/users/vinaymahore/repos", "events_url": "https://api.github.com/users/vinaymahore/events{/privacy}", "received_events_url": "https://api.github.com/users/vinaymahore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-29T07:44:36Z", "updated_at": "2019-09-29T08:11:48Z", "closed_at": "2019-09-29T08:11:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "none", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/61", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/61/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/61/events", "html_url": "https://github.com/textX/Arpeggio/issues/61", "id": 496510495, "node_id": "MDU6SXNzdWU0OTY1MTA0OTU=", "number": 61, "title": "skipws/ws is not set/restored in OrderedChoice", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 17885752, "node_id": "MDU6TGFiZWwxNzg4NTc1Mg==", "url": "https://api.github.com/repos/textX/Arpeggio/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-09-20T19:24:58Z", "updated_at": "2019-09-20T19:49:09Z", "closed_at": "2019-09-20T19:49:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related discussion can be found at https://github.com/textX/textX/issues/205", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/60", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/60/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/60/events", "html_url": "https://github.com/textX/Arpeggio/issues/60", "id": 475754604, "node_id": "MDU6SXNzdWU0NzU3NTQ2MDQ=", "number": 60, "title": "Triple quoted strings in PEG", "user": {"login": "rysson", "id": 5898312, "node_id": "MDQ6VXNlcjU4OTgzMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5898312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rysson", "html_url": "https://github.com/rysson", "followers_url": "https://api.github.com/users/rysson/followers", "following_url": "https://api.github.com/users/rysson/following{/other_user}", "gists_url": "https://api.github.com/users/rysson/gists{/gist_id}", "starred_url": "https://api.github.com/users/rysson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rysson/subscriptions", "organizations_url": "https://api.github.com/users/rysson/orgs", "repos_url": "https://api.github.com/users/rysson/repos", "events_url": "https://api.github.com/users/rysson/events{/privacy}", "received_events_url": "https://api.github.com/users/rysson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-01T15:40:04Z", "updated_at": "2019-08-07T09:16:51Z", "closed_at": "2019-08-07T09:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt's possible to use triple quoted strings in PEG like in Python (https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str)?\r\n\r\nIt's useful in regex, example\r\n```peg\r\nquoted <- r'''([\"'])(?P<value>\\w*)\\1''';\r\n```\r\n\r\nNow it looks like empty string (`''`) in PEG.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/57", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/57/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/57/events", "html_url": "https://github.com/textX/Arpeggio/issues/57", "id": 470257720, "node_id": "MDU6SXNzdWU0NzAyNTc3MjA=", "number": 57, "title": "Few tests fail with pytest5.0+", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1483496214, "node_id": "MDU6TGFiZWwxNDgzNDk2MjE0", "url": "https://api.github.com/repos/textX/Arpeggio/labels/testing", "name": "testing", "color": "1755aa", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-19T10:35:11Z", "updated_at": "2019-09-30T16:28:16Z", "closed_at": "2019-09-28T13:11:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Raises changed a bit the behaviour with 5.x series and now the exceptions need to be accessed slighly differently.\r\n\r\nSee the errors bellow:\r\n```\r\n[    5s] =================================== FAILURES ===================================\r\n[    5s] _________________________ test_non_optional_precedence _________________________\r\n[    5s] \r\n[    5s]     def test_non_optional_precedence():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that all tried match at position are reported.\r\n[    5s]         \"\"\"\r\n[    5s]         def grammar():\r\n[    5s]             return Optional('a'), 'b'\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('c')\r\n[    5s] >       assert \"Expected 'a' or 'b'\" in str(e)\r\n[    5s] E       assert \"Expected 'a' or 'b'\" in '<ExceptionInfo NoMatch tblen=12>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=12>' = str(<ExceptionInfo NoMatch tblen=12>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:27: AssertionError\r\n[    5s] _______________________ test_optional_with_better_match ________________________\r\n[    5s] \r\n[    5s]     def test_optional_with_better_match():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that optional match that has gone further in the input stream\r\n[    5s]         has precedence over non-optional.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():  return [first, Optional(second)]\r\n[    5s]         def first():    return 'one', 'two', 'three', '4'\r\n[    5s]         def second():   return 'one', 'two', 'three', 'four', 'five'\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('one two three four 5')\r\n[    5s]     \r\n[    5s] >       assert \"Expected 'five'\" in str(e)\r\n[    5s] E       assert \"Expected 'five'\" in '<ExceptionInfo NoMatch tblen=12>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=12>' = str(<ExceptionInfo NoMatch tblen=12>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:57: AssertionError\r\n[    5s] ____________________________ test_alternative_added ____________________________\r\n[    5s] \r\n[    5s]     def test_alternative_added():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that matches from alternative branches at the same positiona are\r\n[    5s]         reported.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():\r\n[    5s]             return ['one', 'two'], _(r'\\w+')\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('   three ident')\r\n[    5s] >       assert \"Expected 'one' or 'two'\" in str(e)\r\n[    5s] E       assert \"Expected 'one' or 'two'\" in '<ExceptionInfo NoMatch tblen=16>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=16>' = str(<ExceptionInfo NoMatch tblen=16>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:74: AssertionError\r\n[    5s] ___________________________ test_file_name_reporting ___________________________\r\n[    5s] \r\n[    5s]     def test_file_name_reporting():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that if parser has file name set it will be reported.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():      return Optional('a'), 'b', EOF\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse(\"\\n\\n   a c\", file_name=\"test_file.peg\")\r\n[    5s] >       assert \"Expected 'b' at position test_file.peg:(3, 6)\" in str(e)\r\n[    5s] E       assert \"Expected 'b' at position test_file.peg:(3, 6)\" in '<ExceptionInfo NoMatch tblen=8>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=8>' = str(<ExceptionInfo NoMatch tblen=8>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:89: AssertionError\r\n[    5s] ______________________ test_comment_matching_not_reported ______________________\r\n[    5s] \r\n[    5s]     def test_comment_matching_not_reported():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that matching of comments is not reported.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():      return Optional('a'), 'b', EOF\r\n[    5s]         def comments():     return _('\\/\\/.*$')\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar, comments)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('\\n\\n a // This is a comment \\n c')\r\n[    5s] >       assert \"Expected 'b' at position (4, 2)\" in str(e)\r\n[    5s] E       assert \"Expected 'b' at position (4, 2)\" in '<ExceptionInfo NoMatch tblen=8>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=8>' = str(<ExceptionInfo NoMatch tblen=8>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:105: AssertionError\r\n[    5s] _________________________ test_not_match_at_beginning __________________________\r\n[    5s] \r\n[    5s]     def test_not_match_at_beginning():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that matching of Not ParsingExpression is not reported in the\r\n[    5s]         error message.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():\r\n[    5s]             return Not('one'), _(r'\\w+')\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('   one ident')\r\n[    5s] >       assert \"Not expected input\" in str(e)\r\n[    5s] E       AssertionError: assert 'Not expected input' in '<ExceptionInfo NoMatch tblen=8>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=8>' = str(<ExceptionInfo NoMatch tblen=8>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:122: AssertionError\r\n[    5s] ________________________ test_not_match_as_alternative _________________________\r\n[    5s] \r\n[    5s]     def test_not_match_as_alternative():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that Not is not reported if a part of OrderedChoice.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():\r\n[    5s]             return ['one', Not('two')], _(r'\\w+')\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('   three ident')\r\n[    5s] >       assert \"Expected 'one' at \" in str(e)\r\n[    5s] E       assert \"Expected 'one' at \" in '<ExceptionInfo NoMatch tblen=16>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=16>' = str(<ExceptionInfo NoMatch tblen=16>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:137: AssertionError\r\n[    5s] ____________________________ test_sequence_of_nots _____________________________\r\n[    5s] \r\n[    5s]     def test_sequence_of_nots():\r\n[    5s]         \"\"\"\r\n[    5s]         Test that sequence of Not rules is handled properly.\r\n[    5s]         \"\"\"\r\n[    5s]     \r\n[    5s]         def grammar():\r\n[    5s]             return Not('one'), Not('two'), _(r'\\w+')\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('   two ident')\r\n[    5s] >       assert \"Not expected input\" in str(e)\r\n[    5s] E       AssertionError: assert 'Not expected input' in '<ExceptionInfo NoMatch tblen=12>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=12>' = str(<ExceptionInfo NoMatch tblen=12>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:152: AssertionError\r\n[    5s] ___________________________ test_compound_not_match ____________________________\r\n[    5s] \r\n[    5s]     def test_compound_not_match():\r\n[    5s]         \"\"\"\r\n[    5s]         Test a more complex Not match error reporting.\r\n[    5s]         \"\"\"\r\n[    5s]         def grammar():\r\n[    5s]             return [Not(['two', 'three']), 'one', 'two'], _(r'\\w+')\r\n[    5s]     \r\n[    5s]         parser = ParserPython(grammar)\r\n[    5s]     \r\n[    5s]         with pytest.raises(NoMatch) as e:\r\n[    5s]             parser.parse('   three ident')\r\n[    5s] >       assert \"Expected 'one' or 'two' at\" in str(e)\r\n[    5s] E       assert \"Expected 'one' or 'two' at\" in '<ExceptionInfo NoMatch tblen=24>'\r\n[    5s] E        +  where '<ExceptionInfo NoMatch tblen=24>' = str(<ExceptionInfo NoMatch tblen=24>)\r\n[    5s] \r\n[    5s] tests/unit/test_error_reporting.py:166: AssertionError\r\n[    5s] =============================== warnings summary ===============================\r\n[    5s] tests/unit/test_error_reporting.py:99\r\n[    5s]   /home/abuild/rpmbuild/BUILD/Arpeggio-1.9.0/tests/unit/test_error_reporting.py:99: DeprecationWarning: invalid escape sequence \\/\r\n[    5s]     def comments():     return _('\\/\\/.*$')\r\n[    5s] \r\n[    5s] tests/unit/test_peg_parser.py:20\r\n[    5s]   /home/abuild/rpmbuild/BUILD/Arpeggio-1.9.0/tests/unit/test_peg_parser.py:20: DeprecationWarning: invalid escape sequence \\d\r\n[    5s]     '''\r\n[    5s] \r\n[    5s] tests/unit/regressions/issue_16/test_issue_16.py:65\r\n[    5s]   /home/abuild/rpmbuild/BUILD/Arpeggio-1.9.0/tests/unit/regressions/issue_16/test_issue_16.py:65: DeprecationWarning: invalid escape sequence \\*\r\n[    5s]     \"\"\"\r\n[    5s] \r\n[    5s] tests/unit/test_examples.py::test_examples\r\n[    5s]   /home/abuild/rpmbuild/BUILD/Arpeggio-1.9.0/tests/unit/../../examples/simple/simple.py:19: DeprecationWarning: invalid escape sequence \\*\r\n[    5s]     def comment():          return [_(\"//.*\"), _(\"/\\*.*\\*/\")]\r\n[    5s] \r\n[    5s] tests/unit/test_examples.py::test_examples\r\n[    5s]   /home/abuild/rpmbuild/BUILD/Arpeggio-1.9.0/tests/unit/../../examples/json/json.py:22: DeprecationWarning: invalid escape sequence \\d\r\n[    5s]     def jsonNumber():       return _('-?\\d+((\\.\\d*)?((e|E)(\\+|-)?\\d+)?)?')\r\n[    5s] \r\n[    5s] -- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n[    5s] =============== 9 failed, 81 passed, 5 warnings in 0.71 seconds ================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/54", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/54/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/54/events", "html_url": "https://github.com/textX/Arpeggio/issues/54", "id": 454851799, "node_id": "MDU6SXNzdWU0NTQ4NTE3OTk=", "number": 54, "title": "Replace use of imp library with importlib", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-11T18:57:57Z", "updated_at": "2019-06-12T17:14:34Z", "closed_at": "2019-06-12T15:59:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``imp`` has been deprecated a long time ago, and it is going to be removed soon.\r\n\r\n[imp-to-importlib.patch](https://github.com/textX/Arpeggio/files/3278066/imp-to-importlib.patch.txt) replaces use of ``imp`` library with ``importlib`` for Python 3 (Python 2 support is still maintained via ``imp``).\r\n\r\nI am sorry for not providing a proper pull request, but I am a Python maintainer in SUSE and this is just one of many packages I maintain.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/53", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/53/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/53/events", "html_url": "https://github.com/textX/Arpeggio/issues/53", "id": 444983808, "node_id": "MDU6SXNzdWU0NDQ5ODM4MDg=", "number": 53, "title": "ZeroOrMore gobbles syntax errors", "user": {"login": "soos-peter-levente", "id": 26578186, "node_id": "MDQ6VXNlcjI2NTc4MTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/26578186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soos-peter-levente", "html_url": "https://github.com/soos-peter-levente", "followers_url": "https://api.github.com/users/soos-peter-levente/followers", "following_url": "https://api.github.com/users/soos-peter-levente/following{/other_user}", "gists_url": "https://api.github.com/users/soos-peter-levente/gists{/gist_id}", "starred_url": "https://api.github.com/users/soos-peter-levente/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soos-peter-levente/subscriptions", "organizations_url": "https://api.github.com/users/soos-peter-levente/orgs", "repos_url": "https://api.github.com/users/soos-peter-levente/repos", "events_url": "https://api.github.com/users/soos-peter-levente/events{/privacy}", "received_events_url": "https://api.github.com/users/soos-peter-levente/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 878779009, "node_id": "MDU6TGFiZWw4Nzg3NzkwMDk=", "url": "https://api.github.com/repos/textX/Arpeggio/labels/docs", "name": "docs", "color": "b8ffb2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-16T14:19:18Z", "updated_at": "2019-09-28T11:51:13Z", "closed_at": "2019-09-28T11:51:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nFirst off, compliments on the wonderful tool. It makes life so much easier! \r\n\r\nBut here's the but. Take this grammar...\r\n```\r\ndef obj():         return \"{\", Optional(pair_list), \"}\"\r\ndef number():      return _(\"\\d+\")\r\ndef value():       return [ obj, number ]\r\ndef key():         return _(\"[a-zA-Z]+\")\r\ndef pair():        return key, \":\", value\r\ndef pair_list():   return pair, ZeroOrMore(\",\", pair)\r\ndef head():        return \"[\", key, \"]\"\r\ndef sect():        return head, ZeroOrMore(pair)\r\n```\r\n...and apply it to a string formatted in this way (note the comma syntax error after `d:1,`):\r\n```\r\n[SECTION]\r\na: 1\r\nb: {c: 1,d:1,}\r\n```\r\n```\r\n>>> ParserPython(sect).parse(\"[SECTION]\\na:1\\nb:{c:2,d:3,}\")\r\n[ [  '[' [0], key 'SECTION' [1],  ']' [2] ], [ key 'a' [4],  ':' [5], [ number '1' [6] ] ] ]\r\n>>> _\r\n```\r\n\r\nIn this parse tree, the entire contents of `b` got thrown out because of `ZeroOrMore`, sensibly I must add, since its docstring explicitly states that it will never fail. The problem is that whatever goes on in there is invisible and silent. \r\n\r\n_Verily_, the parent process (`visit_parse_tree` for one) ends up receiving a perfectly well-formed parse tree, and it has no way of knowing that there was some kind of mistake.  `pair` could resolve in an arbitrarily complex manner, and the input could be of arbitrary size (which is important because the developer has no hints about the precise point of failure).\r\n \r\nSo, would you consider an option to have `ZeroOrMore` print NoMatch exceptions and failure locations (if debugging mode is enabled, for example)? \r\n\r\nOn the user level, it would be a great help to have a validating pass similar to `parseAll` in `pyparsing`. If set to `True`, the parser must match the entire string or fail (and print the deepest point from which  it could not proceed further). \r\n\r\nMaybe there is an analogous feature in Arpeggio already? If there isn't, I'd appreciate it if you considered adding one.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/51", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/51/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/51/events", "html_url": "https://github.com/textX/Arpeggio/issues/51", "id": 417261529, "node_id": "MDU6SXNzdWU0MTcyNjE1Mjk=", "number": 51, "title": "Please distribute tests and license in sdist pypi tarball", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-05T11:54:43Z", "updated_at": "2019-09-28T13:30:57Z", "closed_at": "2019-09-28T13:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "On pypi there is no license, which is needed for obvious reasons, and tests present in the tarball.\r\n\r\nThe tests would allow distributiion vendors to run some basic selftest to validate if the package is still working with the stack they present in their distribution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/50", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/50/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/50/events", "html_url": "https://github.com/textX/Arpeggio/issues/50", "id": 412986145, "node_id": "MDU6SXNzdWU0MTI5ODYxNDU=", "number": 50, "title": "indexing children", "user": {"login": "ImpatientHippo", "id": 47861211, "node_id": "MDQ6VXNlcjQ3ODYxMjEx", "avatar_url": "https://avatars0.githubusercontent.com/u/47861211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ImpatientHippo", "html_url": "https://github.com/ImpatientHippo", "followers_url": "https://api.github.com/users/ImpatientHippo/followers", "following_url": "https://api.github.com/users/ImpatientHippo/following{/other_user}", "gists_url": "https://api.github.com/users/ImpatientHippo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ImpatientHippo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ImpatientHippo/subscriptions", "organizations_url": "https://api.github.com/users/ImpatientHippo/orgs", "repos_url": "https://api.github.com/users/ImpatientHippo/repos", "events_url": "https://api.github.com/users/ImpatientHippo/events{/privacy}", "received_events_url": "https://api.github.com/users/ImpatientHippo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-21T15:35:47Z", "updated_at": "2019-09-28T13:32:45Z", "closed_at": "2019-02-24T13:15:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation (http://textx.github.io/Arpeggio/stable/semantics/) says that you can index children by rule name.\r\n`baz_created = children['baz']`\r\nThis does not seem to be true as I get the following error:\r\n`TypeError: list indices must be integers or slices, not str`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/48", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/48/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/48/events", "html_url": "https://github.com/textX/Arpeggio/issues/48", "id": 406011244, "node_id": "MDU6SXNzdWU0MDYwMTEyNDQ=", "number": 48, "title": "Parsing Error (arpeggio.NoMatch) For a Clean PEG Grammar Using Backslashes", "user": {"login": "AurelienAtAvelia", "id": 44178875, "node_id": "MDQ6VXNlcjQ0MTc4ODc1", "avatar_url": "https://avatars0.githubusercontent.com/u/44178875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AurelienAtAvelia", "html_url": "https://github.com/AurelienAtAvelia", "followers_url": "https://api.github.com/users/AurelienAtAvelia/followers", "following_url": "https://api.github.com/users/AurelienAtAvelia/following{/other_user}", "gists_url": "https://api.github.com/users/AurelienAtAvelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/AurelienAtAvelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AurelienAtAvelia/subscriptions", "organizations_url": "https://api.github.com/users/AurelienAtAvelia/orgs", "repos_url": "https://api.github.com/users/AurelienAtAvelia/repos", "events_url": "https://api.github.com/users/AurelienAtAvelia/events{/privacy}", "received_events_url": "https://api.github.com/users/AurelienAtAvelia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-02T18:58:35Z", "updated_at": "2019-02-04T14:55:23Z", "closed_at": "2019-02-04T14:55:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "A parsing error occurs (arpeggio.NoMatch) by using backslashes in the clean PEG grammar : \r\n\r\n```\r\nfrom arpeggio.cleanpeg import ParserPEG\r\nParserPEG(\r\n     \"\"\"\r\n         hash = \"{\" double_quote \"=>\" double_quote \"}\"\r\n         double_quote = r'\"(?:[^\\\\\"]|\\\\\")+\"'\r\n     \"\"\", \"hash\").parse('{ \"hello\" => \"world\" }')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/46", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/46/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/46/events", "html_url": "https://github.com/textX/Arpeggio/issues/46", "id": 341743226, "node_id": "MDU6SXNzdWUzNDE3NDMyMjY=", "number": 46, "title": "Adding Logical Operators to Grammar", "user": {"login": "LeeKevin", "id": 2312145, "node_id": "MDQ6VXNlcjIzMTIxNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2312145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeeKevin", "html_url": "https://github.com/LeeKevin", "followers_url": "https://api.github.com/users/LeeKevin/followers", "following_url": "https://api.github.com/users/LeeKevin/following{/other_user}", "gists_url": "https://api.github.com/users/LeeKevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeeKevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeeKevin/subscriptions", "organizations_url": "https://api.github.com/users/LeeKevin/orgs", "repos_url": "https://api.github.com/users/LeeKevin/repos", "events_url": "https://api.github.com/users/LeeKevin/events{/privacy}", "received_events_url": "https://api.github.com/users/LeeKevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-17T02:31:11Z", "updated_at": "2018-07-17T18:47:34Z", "closed_at": "2018-07-17T18:47:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to add AND and OR operators to my grammar. I have the following:\r\n\r\n        def number():\r\n            return _(r'\\d*\\.\\d*|\\d+')\r\n\r\n        def function_name():\r\n            return _(r'[a-zA-Z_0-9]+')\r\n\r\n        def func():\r\n            return function_name, \"(\", \\\r\n                   [expression, number], \\\r\n                   ZeroOrMore((',', [expression, number])), \\\r\n                   \")\"\r\n\r\n        def factor():\r\n            return Optional([\"+\", \"-\"]), [number, (\"(\", expression, \")\"), func]\r\n\r\n        def term():\r\n            return factor, ZeroOrMore([\"*\", \"/\"], factor)\r\n\r\n        def expression():\r\n            return term, ZeroOrMore([\"+\", \"-\"], term)\r\n\r\n        def check_term():\r\n            return [func, (\"(\", check_expression, \")\")]\r\n        \r\n        def check_expression():\r\n            return check_term, ZeroOrMore([\"AND\", \"OR\"], check_term)\r\n\r\n        def check():\r\n            return check_expression, EOF\r\n\r\n\r\nWhere a function can return a number or a bool. However, when applying the grammar to something like `GreaterThan(Avg(5, 6, 7), 0.25) AND LessThan(Avg(5, 6, 7), 0.3)`, I get the following error:\r\n\r\n`arpeggio.NoMatch: Expected '*' or '/' or '+' or '-' or EOF at position (1, 33) => ')), 0.25) *AND LessTh'. `\r\n\r\n`GreaterThan` and `LessThan` compare their numeric arguments to return a bool. `Avg` takes the average of its numeric arguments to return a number.\r\n\r\nSeems like it's hitting expression instead of check_expression. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/43", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/43/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/43/events", "html_url": "https://github.com/textX/Arpeggio/issues/43", "id": 321567223, "node_id": "MDU6SXNzdWUzMjE1NjcyMjM=", "number": 43, "title": "incorrect behavior when parsing unordered group in clean PEG", "user": {"login": "kdahlhaus", "id": 445556, "node_id": "MDQ6VXNlcjQ0NTU1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/445556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdahlhaus", "html_url": "https://github.com/kdahlhaus", "followers_url": "https://api.github.com/users/kdahlhaus/followers", "following_url": "https://api.github.com/users/kdahlhaus/following{/other_user}", "gists_url": "https://api.github.com/users/kdahlhaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdahlhaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdahlhaus/subscriptions", "organizations_url": "https://api.github.com/users/kdahlhaus/orgs", "repos_url": "https://api.github.com/users/kdahlhaus/repos", "events_url": "https://api.github.com/users/kdahlhaus/events{/privacy}", "received_events_url": "https://api.github.com/users/kdahlhaus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 17885752, "node_id": "MDU6TGFiZWwxNzg4NTc1Mg==", "url": "https://api.github.com/repos/textX/Arpeggio/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-09T13:19:33Z", "updated_at": "2018-05-11T17:27:19Z", "closed_at": "2018-05-11T17:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The unordered group will not be parsed correctly in a multi-line grammar unless a backslash is the last character on the  line in the grammar.\r\n\r\n\r\nThis is how you would expect to write the grammar (no backslash):\r\n\r\n```python\r\nprint  ParserPEG(\"\"\"\r\n  letters = \"{\" (\"a\" \"b\")#  \"}\"\r\n\"\"\", \"letters\").parse(\"\"\" { b a } \"\"\")\r\n```\r\nThis incorrectly throws an exception:  arpeggio.NoMatch: Expected 'a' at position (1, 4) => ' { *b a } '.\r\n\r\n\r\nThis example adds a backslash as the last char in the line fixes the parsing:\r\n\r\n```python\r\nprint ParserPEG(\"\"\"\r\n  letters = \"{\" (\"a\" \"b\")#  \"}\" \\\r\n\"\"\", \"letters\").parse(\"\"\" { b a } \"\"\") \r\n```\r\nThis correctly prints:   { | b | a | }\r\n\r\nI'm using Arpeggio 1.7.1 installed from pip under Python 2.7 in Windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/41", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/41/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/41/events", "html_url": "https://github.com/textX/Arpeggio/issues/41", "id": 288826350, "node_id": "MDU6SXNzdWUyODg4MjYzNTA=", "number": 41, "title": "fix the docs link", "user": {"login": "aolko", "id": 581458, "node_id": "MDQ6VXNlcjU4MTQ1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/581458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aolko", "html_url": "https://github.com/aolko", "followers_url": "https://api.github.com/users/aolko/followers", "following_url": "https://api.github.com/users/aolko/following{/other_user}", "gists_url": "https://api.github.com/users/aolko/gists{/gist_id}", "starred_url": "https://api.github.com/users/aolko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aolko/subscriptions", "organizations_url": "https://api.github.com/users/aolko/orgs", "repos_url": "https://api.github.com/users/aolko/repos", "events_url": "https://api.github.com/users/aolko/events{/privacy}", "received_events_url": "https://api.github.com/users/aolko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-16T08:48:35Z", "updated_at": "2018-01-17T06:59:56Z", "closed_at": "2018-01-17T06:59:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "currently links to _http://www.igordejanovic.net/iYRTb/LbkRP/Arpeggio/_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/37", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/37/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/37/events", "html_url": "https://github.com/textX/Arpeggio/issues/37", "id": 253158861, "node_id": "MDU6SXNzdWUyNTMxNTg4NjE=", "number": 37, "title": "Can't get unordered sequence to work", "user": {"login": "hohe", "id": 525498, "node_id": "MDQ6VXNlcjUyNTQ5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/525498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hohe", "html_url": "https://github.com/hohe", "followers_url": "https://api.github.com/users/hohe/followers", "following_url": "https://api.github.com/users/hohe/following{/other_user}", "gists_url": "https://api.github.com/users/hohe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hohe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hohe/subscriptions", "organizations_url": "https://api.github.com/users/hohe/orgs", "repos_url": "https://api.github.com/users/hohe/repos", "events_url": "https://api.github.com/users/hohe/events{/privacy}", "received_events_url": "https://api.github.com/users/hohe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-27T11:49:16Z", "updated_at": "2017-08-27T14:29:19Z", "closed_at": "2017-08-27T14:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "For me the following sample does not work:\r\n```\r\nfrom textx.metamodel import metamodel_from_str\r\n\r\ntestmm = metamodel_from_str(\"\"\"               \r\nColors:\r\n   (\"red\" \"green\" \"blue\")#\r\n;\r\n\"\"\")\r\n\r\n```\r\n\r\nThe following error is raised:\r\n```\r\nTextXSyntaxError: Expected '*' or '?' or '+' or '-' or '|' or attribute or '!' or '&' or ''' or '\"' or '/' or rule_ref or '(' or ';' at position (3, 25) => 'n\" \"blue\")*# ; '.\r\n```\r\n\r\nAs I copied the example from the explanation of the unordered sequence from the help, it should run, I think. Where is my mistake?\r\n\r\nThanks in advance,\r\n\r\nHorst", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/32", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/32/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/32/events", "html_url": "https://github.com/textX/Arpeggio/issues/32", "id": 194670853, "node_id": "MDU6SXNzdWUxOTQ2NzA4NTM=", "number": 32, "title": "Un-Pythonic escapes and escape sequences in PEG regexs and string literals", "user": {"login": "smbolton", "id": 1743133, "node_id": "MDQ6VXNlcjE3NDMxMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1743133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smbolton", "html_url": "https://github.com/smbolton", "followers_url": "https://api.github.com/users/smbolton/followers", "following_url": "https://api.github.com/users/smbolton/following{/other_user}", "gists_url": "https://api.github.com/users/smbolton/gists{/gist_id}", "starred_url": "https://api.github.com/users/smbolton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smbolton/subscriptions", "organizations_url": "https://api.github.com/users/smbolton/orgs", "repos_url": "https://api.github.com/users/smbolton/repos", "events_url": "https://api.github.com/users/smbolton/events{/privacy}", "received_events_url": "https://api.github.com/users/smbolton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-09T18:58:34Z", "updated_at": "2016-12-10T22:41:40Z", "closed_at": "2016-12-10T22:41:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Igor! Thanks for arpeggio, I'm really enjoying using it.\r\n\r\nThis could either be a bug report, or a feature/documentation request, since \"fixing\" the issue may break some existing PEG grammars.\r\n\r\nWhen I started writing PEG grammars for arpeggio, I assumed they would use regular Python syntax regarding escapes and escape sequences in regexs and string literals. Then I discovered several things that don't work that way (they can be done using Python grammars, of course):\r\n\r\nThis fails by matching too much, if any single quotes occur after it in the grammar:\r\n~~~\r\n  rule = '\\\\'  # literal backslash before final single quote\r\n~~~\r\nAs a work-around, one can use \"\\\\\", since backslash escape isn't implemented for double-quoted strings. But that also means this doesn't work:\r\n~~~\r\n  rule = \"a\\\"b\"  # escaped double quote inside double-quoted string\r\n~~~\r\nRegular expression recognition is similarly limited:\r\n~~~\r\n  rule = r'\\\\[abc]\\\\'  # backslash before final single quote can fail\r\n  \r\n  rule = r\".\"   # double quotes not supported at all\r\n~~~\r\nOnce string literals are parsed, escape sequences within them are incorrectly converted:\r\n~~~\r\n  rule = '\\\\n\\n'  # matches 'backslash-newline-newline', not 'backslash-n-newline'.\r\n\r\n  rule = '\\a\\b\\f\\r\\v\\101\\x41\\u266f\\U0001036a'   # none are converted as one might expect\r\n~~~\r\nI can send you pull requests that will change quote-escaping to match the usual Python rules, and implement Python-standard escape sequence recognition. But first, I wanted to get your thoughts on the issue. While the changes I'd like to see follow the principle of least surprise, and would enhance the capability of PEG grammars, they probably will break at least a few grammars existing in the wild.\r\n\r\nThanks again,\r\n\r\n-Sean", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/31", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/31/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/31/events", "html_url": "https://github.com/textX/Arpeggio/issues/31", "id": 189086638, "node_id": "MDU6SXNzdWUxODkwODY2Mzg=", "number": 31, "title": "URI Parse: IndexError: list index out of range", "user": {"login": "ixemad", "id": 18598402, "node_id": "MDQ6VXNlcjE4NTk4NDAy", "avatar_url": "https://avatars3.githubusercontent.com/u/18598402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ixemad", "html_url": "https://github.com/ixemad", "followers_url": "https://api.github.com/users/ixemad/followers", "following_url": "https://api.github.com/users/ixemad/following{/other_user}", "gists_url": "https://api.github.com/users/ixemad/gists{/gist_id}", "starred_url": "https://api.github.com/users/ixemad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ixemad/subscriptions", "organizations_url": "https://api.github.com/users/ixemad/orgs", "repos_url": "https://api.github.com/users/ixemad/repos", "events_url": "https://api.github.com/users/ixemad/events{/privacy}", "received_events_url": "https://api.github.com/users/ixemad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-14T11:13:59Z", "updated_at": "2017-08-28T14:45:01Z", "closed_at": "2017-08-28T14:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement (pastebin [LhSuFXhL](http://pastebin.com/LhSuFXhL)) the URI grammar ([RFC 3986](https://tools.ietf.org/html/rfc3986)) but I get an **IndexError** exception whether I code the [host](https://tools.ietf.org/html/rfc3986#section-3.2.2) rule as indicated in the RFC.\r\n\r\nAs far as I know it could be solved whether I introduce the following changes in the grammar but I would like to be as accurate as possible.\r\n\r\n```python\r\n\r\ndef host():\r\n    return Optional([ ip_literal, ipv4address, reg_name ])\r\n\r\ndef reg_name():\r\n    return OneOrMore([ unreserved, pct_encoded, sub_delims])\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/30", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/30/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/30/events", "html_url": "https://github.com/textX/Arpeggio/issues/30", "id": 184624857, "node_id": "MDU6SXNzdWUxODQ2MjQ4NTc=", "number": 30, "title": "Parsing comments in language?", "user": {"login": "TomCrypto", "id": 1861870, "node_id": "MDQ6VXNlcjE4NjE4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1861870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomCrypto", "html_url": "https://github.com/TomCrypto", "followers_url": "https://api.github.com/users/TomCrypto/followers", "following_url": "https://api.github.com/users/TomCrypto/following{/other_user}", "gists_url": "https://api.github.com/users/TomCrypto/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomCrypto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomCrypto/subscriptions", "organizations_url": "https://api.github.com/users/TomCrypto/orgs", "repos_url": "https://api.github.com/users/TomCrypto/repos", "events_url": "https://api.github.com/users/TomCrypto/events{/privacy}", "received_events_url": "https://api.github.com/users/TomCrypto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-22T11:20:51Z", "updated_at": "2016-10-22T14:14:42Z", "closed_at": "2016-10-22T13:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "What's a good way to handle general syntactic elements such as comments which can often appear virtually anywhere in the grammar? It seems very tedious to add it to the grammar, and since Arpeggio seems to ignore whitespace (which is generally what you want) it seems that handling comments that run until the end of a line is difficult.\n\nSo far I'm just running a preprocessing pass on the source code to strip out comments intelligently, but just wondering if there's a convenient way to add them to the grammar without too much work so I don't have to reimplement basic nesting logic for stripping out comments?\n\nAwesome library otherwise! I was using Parsimonious before but it got in my way often, Arpeggio usually does exactly what you want by default.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/27", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/27/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/27/events", "html_url": "https://github.com/textX/Arpeggio/issues/27", "id": 156302451, "node_id": "MDU6SXNzdWUxNTYzMDI0NTE=", "number": 27, "title": "\"Not\" does not work", "user": {"login": "Amper", "id": 495795, "node_id": "MDQ6VXNlcjQ5NTc5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/495795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amper", "html_url": "https://github.com/Amper", "followers_url": "https://api.github.com/users/Amper/followers", "following_url": "https://api.github.com/users/Amper/following{/other_user}", "gists_url": "https://api.github.com/users/Amper/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amper/subscriptions", "organizations_url": "https://api.github.com/users/Amper/orgs", "repos_url": "https://api.github.com/users/Amper/repos", "events_url": "https://api.github.com/users/Amper/events{/privacy}", "received_events_url": "https://api.github.com/users/Amper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-23T15:22:06Z", "updated_at": "2016-05-31T14:00:19Z", "closed_at": "2016-05-31T14:00:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nIn [1]: from arpeggio import *\nIn [2]: def expr(): return OneOrMore(\"-\"), Not(\"-\"), OneOrMore(\"-\")\nIn [3]: p = ParserPython(expr)\nIn [4]: p.debug = True\nIn [5]: p.parse(\"----o----\")\n>> Matching rule expr=Sequence at position 0 => *----o----\n   >> Matching rule OneOrMore in expr at position 0 => *----o----\n      ?? Try match rule StrMatch(-) in expr at position 0 => *----o----\n      ++ Match '-' at 0 => '*-*---o----'\n      ?? Try match rule StrMatch(-) in expr at position 1 => -*---o----\n      ++ Match '-' at 1 => '-*-*--o----'\n      ?? Try match rule StrMatch(-) in expr at position 2 => --*--o----\n      ++ Match '-' at 2 => '--*-*-o----'\n      ?? Try match rule StrMatch(-) in expr at position 3 => ---*-o----\n      ++ Match '-' at 3 => '---*-*o----'\n      ?? Try match rule StrMatch(-) in expr at position 4 => ----*o----\n      -- No match '-' at 4 => '----*o*----'\n   <<+ Matched rule OneOrMore in expr at position 4 => ----*o----\n   >> Matching rule Not in expr at position 4 => ----*o----\n      ?? Try match rule StrMatch(-) in expr at position 4 => ----*o----\n      -- No match '-' at 4 => '----*o*----'\n   <<- Not matched rule Not in expr at position 4 => ----*o----\n   >> Matching rule OneOrMore in expr at position 4 => ----*o----\n      ?? Try match rule StrMatch(-) in expr at position 4 => ----*o----\n      -- No match '-' at 4 => '----*o*----'\n   <<- Not matched rule OneOrMore in expr at position 4 => ----*o----\n<<- Not matched rule expr=Sequence in expr at position 0 => *----o----\n---------------------------------------------------------------------------\nNoMatch                                   Traceback (most recent call last)\n<ipython-input-5-6b2f56b7e019> in <module>()\n----> 1 p.parse(\"----o----\")\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/arpeggio/__init__.py in parse(self, _input, file_name)\n   1314             self.comments_model.clear_cache()\n   1315         self.comment_positions = {}\n-> 1316         self.parse_tree = self._parse()\n   1317 \n   1318         # In debug mode export parse tree to dot file for\n\n...\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/arpeggio/__init__.py in _nm_raise(self, *args)\n   1513                     self.nm.rules.append(rule)\n   1514 \n-> 1515         raise self.nm\n   1516 \n   1517 \n\nNoMatch: Expected '-' or '-' or '-' at position (1, 5) => '----*o----'.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/26", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/26/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/26/events", "html_url": "https://github.com/textX/Arpeggio/issues/26", "id": 117812939, "node_id": "MDU6SXNzdWUxMTc4MTI5Mzk=", "number": 26, "title": "Matching everything in a subexpression loops infinitely", "user": {"login": "rihardsk", "id": 1666746, "node_id": "MDQ6VXNlcjE2NjY3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1666746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rihardsk", "html_url": "https://github.com/rihardsk", "followers_url": "https://api.github.com/users/rihardsk/followers", "following_url": "https://api.github.com/users/rihardsk/following{/other_user}", "gists_url": "https://api.github.com/users/rihardsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rihardsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rihardsk/subscriptions", "organizations_url": "https://api.github.com/users/rihardsk/orgs", "repos_url": "https://api.github.com/users/rihardsk/repos", "events_url": "https://api.github.com/users/rihardsk/events{/privacy}", "received_events_url": "https://api.github.com/users/rihardsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-19T13:24:07Z", "updated_at": "2015-11-19T13:50:02Z", "closed_at": "2015-11-19T13:49:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made a simple grammar\n\n``` python\ngrammar = \\\n        \"\"\"\n        rule <- (subexpression)+;\n        subexpression <- r'^.*$';\n        \"\"\"\n```\n\nand tried to parse a simple text like so\n\n``` python\nfrom arpeggio.peg import ParserPEG\nparser = ParserPEG(grammar, \"rule\")\nparsed = parser.parse(\"something simple\")\n```\n\nAnd the process never finishes. It just goes on parsing, steadily filling up the free memory.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/25", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/25/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/25/events", "html_url": "https://github.com/textX/Arpeggio/issues/25", "id": 116306657, "node_id": "MDU6SXNzdWUxMTYzMDY2NTc=", "number": 25, "title": "Report all possible matches at the point of failure", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-11T10:37:28Z", "updated_at": "2015-11-11T14:11:00Z", "closed_at": "2015-11-11T14:11:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, Arpeggio will report the first match it tried at the point of failure.\nIt should be fairly easy to implement reporting of all of the matches that could be found at that point for the parser to continue. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/22", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/22/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/22/events", "html_url": "https://github.com/textX/Arpeggio/issues/22", "id": 113642761, "node_id": "MDU6SXNzdWUxMTM2NDI3NjE=", "number": 22, "title": "RecursionError: maximum recursion depth exceeded while calling a Python object", "user": {"login": "adontz", "id": 829414, "node_id": "MDQ6VXNlcjgyOTQxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/829414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adontz", "html_url": "https://github.com/adontz", "followers_url": "https://api.github.com/users/adontz/followers", "following_url": "https://api.github.com/users/adontz/following{/other_user}", "gists_url": "https://api.github.com/users/adontz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adontz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adontz/subscriptions", "organizations_url": "https://api.github.com/users/adontz/orgs", "repos_url": "https://api.github.com/users/adontz/repos", "events_url": "https://api.github.com/users/adontz/events{/privacy}", "received_events_url": "https://api.github.com/users/adontz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-27T17:51:20Z", "updated_at": "2015-10-29T17:41:38Z", "closed_at": "2015-10-29T17:41:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\n\nI'm trying to use Arpeggio to build PEG grammar for new language. I'm new to grammar design, so maybe that's, my fault.\n\nYour tool, seems great, but I faced problem. I receive \"RecursionError: maximum recursion depth exceeded while calling a Python object\" error, when my grammar becomes complex enough.\n\nCall stack is repetition of\n\n```\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 380, in _parse\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 272, in parse\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 350, in _parse\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 272, in parse\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 380, in _parse\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 230, in parse\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 141, in dprint\n```\n\nor\n\n```\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 108, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/peg.py\", line 109, in _resolve\nFile \"/usr/lib/python3.5/site-packages/Arpeggio-1.1-py3.5.egg/arpeggio/__init__.py\", line 753, in __eq__\n```\n\nBelow is the example of such problematic grammar:\n\n```\nnumber_token     = r'(\\d+|\\d+\\.\\d*|\\d*\\.\\d+)'\nidentifier_token = r'[a-zA-Z_][a-zA-Z0-9_]*'\n\nunqualified_identifier_expression = identifier_token\nqualified_identifier_expression   = identifier_token ( \".\" identifier_token )*\n\nunary_expression              = number_token / qualified_identifier_expression\n\nmethod_call_expression        = ( collection_index_expression / method_call_expression / qualified_identifier_expression ) \"(\" ( rvalue_expression ( \",\" rvalue_expression )* )? \")\"\ncollection_index_expression   = ( method_call_expression / collection_index_expression / qualified_identifier_expression ) \"[\"   rvalue_expression ( \",\" rvalue_expression )*    \"]\"\n\nlvalue_expression             = qualified_identifier_expression\nrvalue_expression             = collection_index_expression / method_call_expression / unary_expression\n\nexpression                    = collection_index_expression / method_call_expression / unary_expression\n\nbelang = expression* EOF\n```\n\nWhen I simplify method_call_expression and collection_index_expression productions to\n\n```\nmethod_call_expression        = qualified_identifier_expression \"(\" ( rvalue_expression ( \",\" rvalue_expression )* )? \")\"\ncollection_index_expression   = qualified_identifier_expression \"[\"   rvalue_expression ( \",\" rvalue_expression )*    \"]\"\n```\n\nEverything works, but grammar is not as powerful as I want.\n\nSo be more specific, I want\n\n```\na [ 0 ] ( 1 ) [ 2 ]\n```\n\nto be parsed as\nassume \"a\" to be collection, and get element #0\nassume returned value to be callable, and call with argument of 1\nassume returned value to be collection, and get element #2 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/20", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/20/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/20/events", "html_url": "https://github.com/textX/Arpeggio/issues/20", "id": 95490381, "node_id": "MDU6SXNzdWU5NTQ5MDM4MQ==", "number": 20, "title": "Optional inside ordered choice stops probing other alternatives", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-16T17:59:26Z", "updated_at": "2015-07-16T18:11:26Z", "closed_at": "2015-07-16T18:11:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Optional matches (optional, zero or more...) always succeeds thus preventing ordered choice to try other alternatives.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/19", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/19/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/19/events", "html_url": "https://github.com/textX/Arpeggio/issues/19", "id": 51330380, "node_id": "MDU6SXNzdWU1MTMzMDM4MA==", "number": 19, "title": "Preverse line number", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-08T17:45:45Z", "updated_at": "2015-04-14T20:52:48Z", "closed_at": "2015-04-14T20:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Igor, \n\nIf I found a match in a file I would to store reference of that. like line number\n\nExample: Dom view of any editor show all functions of current doc and when you click on function you go to where it is defined in same doc.\n\nAny idea how can I achieve this?\n\nThanks\nYash\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/18", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/18/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/18/events", "html_url": "https://github.com/textX/Arpeggio/issues/18", "id": 51295589, "node_id": "MDU6SXNzdWU1MTI5NTU4OQ==", "number": 18, "title": "Double slash issue", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-08T12:11:08Z", "updated_at": "2015-11-07T19:17:41Z", "closed_at": "2015-11-07T19:17:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pastebin.com/XzXCfXfZ\n\nIn somewhere middle of log\nstr:\n namespace | Fuel\\Tasks | ;\n\nIn End of log\nASG: Second pass\n\n{'': '', 'Fuel\\\\Tasks': {'Robots': [['run'], ['protect']]}}\n\nWhy double slash between Fuel and Tasks. I guess it is bug.\n\nPython and Grammer is located in public repo\nhttps://bitbucket.org/codeyash/resources/src/7cfb9ba5a0d1de12d2d10734de8e8b6dcb9c6ff3/enrichers/PhpParser/py/php/?at=master\nPhp.py and grammer.peg\n\nWith latest released Arpeggio\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/16", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/16/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/16/events", "html_url": "https://github.com/textX/Arpeggio/issues/16", "id": 45557327, "node_id": "MDU6SXNzdWU0NTU1NzMyNw==", "number": 16, "title": "Php Parser : bug triggered by direct rule reference", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-11T17:32:31Z", "updated_at": "2014-10-12T07:36:37Z", "closed_at": "2014-10-11T23:43:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to create a php parser (selected portions of PHP only)\n\nMy code\nhttp://pastebin.com/2RHWYTWf\n\nError I faced\nhttp://pastebin.com/NRR6hzDW\n\nIt looks error somewhere in library or I may need to tweak grammar.\n\nSame grammar works with other library.\n\nAlso I want to remove ws\\* between each tokens. I mean whitespace should not be consided and removed automatically by lib or using any rule.\nws= whitespace\n\nThanks\nYash\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/15", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/15/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/15/events", "html_url": "https://github.com/textX/Arpeggio/issues/15", "id": 45522222, "node_id": "MDU6SXNzdWU0NTUyMjIyMg==", "number": 15, "title": "Node Visitor", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-10-10T20:45:53Z", "updated_at": "2014-10-12T18:45:16Z", "closed_at": "2014-10-12T18:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Its like same as semantic actions but make things looks very clean.\n\nIt's your competitor library which I found equally good as per my knowledge.\n\nIf possible rather separate semantic functions it good to have a class. \nlike this\nhttps://github.com/erikrose/parsimonious/blob/master/parsimonious/nodes.py#L151 \n\nAs per my knowledge both serve same purpose semantic functions and node visitor .\n\nNode visitor makes code look clean and tight.\n\nWhat's your opinion. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/14", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/14/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/14/events", "html_url": "https://github.com/textX/Arpeggio/issues/14", "id": 45489636, "node_id": "MDU6SXNzdWU0NTQ4OTYzNg==", "number": 14, "title": "Regex bug", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-10-10T15:00:02Z", "updated_at": "2014-10-15T14:49:43Z", "closed_at": "2014-10-15T14:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "r'[0-9a-zA-Z\\s\\\"-']+'\nr'[0-9a-zA-Z\\s\\\"-\\']+'\n\nPlease note single quote inside this expression. Tried with slash. Same error.\n\nIs this bug or I'm doing anything wrong here.\n\nThanks,\nYash\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/13", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/13/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/13/events", "html_url": "https://github.com/textX/Arpeggio/issues/13", "id": 45488716, "node_id": "MDU6SXNzdWU0NTQ4ODcxNg==", "number": 13, "title": "Sharing examples", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-10-10T14:51:52Z", "updated_at": "2014-10-11T23:46:29Z", "closed_at": "2014-10-11T23:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Igor,\n\nI would to share few grammars based on cleanpeg. I would also tweak comment style in cleanpeg.\nI'm working on python+bash so it is easier to comment in that style.\n\nWould you accept pull request? or I just put them in forked version.\n\nI can help in documentation also but please note My English is not very good and so documentation may contain errors.\n\nYour PEG module is excellent. I tried other PEG python library also and found your PEG module picks from grammar effectively with very less effort. Congratulations for good work. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/12", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/12/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/12/events", "html_url": "https://github.com/textX/Arpeggio/issues/12", "id": 45453393, "node_id": "MDU6SXNzdWU0NTQ1MzM5Mw==", "number": 12, "title": "Comment in grammer", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-10-10T07:31:05Z", "updated_at": "2014-10-11T23:45:47Z", "closed_at": "2014-10-11T23:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bash or python style comment should be allowed in grammar.\n\nFor long grammars it's a must requirement.\n\nThanks,\nYash\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/11", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/11/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/11/events", "html_url": "https://github.com/textX/Arpeggio/issues/11", "id": 45355366, "node_id": "MDU6SXNzdWU0NTM1NTM2Ng==", "number": 11, "title": "Why semicolon", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-10-09T11:32:04Z", "updated_at": "2014-10-11T23:46:01Z", "closed_at": "2014-10-11T23:46:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python users see things clean and never use ; to end statements. This is obvious for many langs but it looks extra in python.\n\nWhile using grammar I found it mandatory to put semicolon (;) at end of each line which is looks unnecessary to me.\n\nI hope you got my point :) What is your opinion?\n\nThanks,\nYash , KineticWing IDE\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/10", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/10/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/10/events", "html_url": "https://github.com/textX/Arpeggio/issues/10", "id": 45344151, "node_id": "MDU6SXNzdWU0NTM0NDE1MQ==", "number": 10, "title": " Documentation  missing", "user": {"login": "codeyash", "id": 654242, "node_id": "MDQ6VXNlcjY1NDI0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/654242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeyash", "html_url": "https://github.com/codeyash", "followers_url": "https://api.github.com/users/codeyash/followers", "following_url": "https://api.github.com/users/codeyash/following{/other_user}", "gists_url": "https://api.github.com/users/codeyash/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeyash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeyash/subscriptions", "organizations_url": "https://api.github.com/users/codeyash/orgs", "repos_url": "https://api.github.com/users/codeyash/repos", "events_url": "https://api.github.com/users/codeyash/events{/privacy}", "received_events_url": "https://api.github.com/users/codeyash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-10-09T09:18:55Z", "updated_at": "2014-10-22T21:26:05Z", "closed_at": "2014-10-22T21:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why not so popular?\n\nLibrary looks good to me and having good collection of examples.\n\nYou're surely missing online documentation. Write some article and tutorials on lib.\n\nThanks,\nYash\nKineticWing IDE\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/9", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/9/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/9/events", "html_url": "https://github.com/textX/Arpeggio/issues/9", "id": 41406082, "node_id": "MDU6SXNzdWU0MTQwNjA4Mg==", "number": 9, "title": "Gracefully handle some pathological expression combination", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-28T15:52:37Z", "updated_at": "2014-08-28T20:05:22Z", "closed_at": "2014-08-28T20:05:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some PEG expression combinations leads to infinite loops.\n\nFor example:\n\n```\nZeroOrMore(Optional(...\n```\n\nOptional succeeds always making ZeroOrMore match to iterate infinitely. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/8", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/8/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/8/events", "html_url": "https://github.com/textX/Arpeggio/issues/8", "id": 26773456, "node_id": "MDU6SXNzdWUyNjc3MzQ1Ng==", "number": 8, "title": "Version 0.6", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-02T22:32:37Z", "updated_at": "2014-02-02T22:33:39Z", "closed_at": "2014-02-02T22:33:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/7", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/7/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/7/events", "html_url": "https://github.com/textX/Arpeggio/issues/7", "id": 26773319, "node_id": "MDU6SXNzdWUyNjc3MzMxOQ==", "number": 7, "title": "Support for Python 3", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/textX/Arpeggio/milestones/1", "html_url": "https://github.com/textX/Arpeggio/milestone/1", "labels_url": "https://api.github.com/repos/textX/Arpeggio/milestones/1/labels", "id": 556511, "node_id": "MDk6TWlsZXN0b25lNTU2NTEx", "number": 1, "title": "Version 0.6", "description": "", "creator": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2014-02-02T22:33:27Z", "updated_at": "2015-04-14T20:54:05Z", "due_on": "2014-05-31T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-02-02T22:27:43Z", "updated_at": "2014-04-01T20:34:10Z", "closed_at": "2014-04-01T20:34:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/6", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/6/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/6/events", "html_url": "https://github.com/textX/Arpeggio/issues/6", "id": 26290441, "node_id": "MDU6SXNzdWUyNjI5MDQ0MQ==", "number": 6, "title": "Support for lexical rules", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/textX/Arpeggio/milestones/1", "html_url": "https://github.com/textX/Arpeggio/milestone/1", "labels_url": "https://api.github.com/repos/textX/Arpeggio/milestones/1/labels", "id": 556511, "node_id": "MDk6TWlsZXN0b25lNTU2NTEx", "number": 1, "title": "Version 0.6", "description": "", "creator": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2014-02-02T22:33:27Z", "updated_at": "2015-04-14T20:54:05Z", "due_on": "2014-05-31T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-01-25T10:19:36Z", "updated_at": "2014-02-12T20:58:38Z", "closed_at": "2014-02-12T20:58:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While matching lexical rules whitespaces should be preserved (no ws skipping). Matching for comments should be disabled also.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/4", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/4/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/4/events", "html_url": "https://github.com/textX/Arpeggio/issues/4", "id": 26290421, "node_id": "MDU6SXNzdWUyNjI5MDQyMQ==", "number": 4, "title": "NonTerminal to string", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/textX/Arpeggio/milestones/1", "html_url": "https://github.com/textX/Arpeggio/milestone/1", "labels_url": "https://api.github.com/repos/textX/Arpeggio/milestones/1/labels", "id": 556511, "node_id": "MDk6TWlsZXN0b25lNTU2NTEx", "number": 1, "title": "Version 0.6", "description": "", "creator": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2014-02-02T22:33:27Z", "updated_at": "2015-04-14T20:54:05Z", "due_on": "2014-05-31T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-01-25T10:18:25Z", "updated_at": "2014-02-12T20:58:53Z", "closed_at": "2014-02-12T20:58:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Support rendering NonTerminal to a matched string. This operation should be efficient (caching).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/3", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/3/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/3/events", "html_url": "https://github.com/textX/Arpeggio/issues/3", "id": 26290397, "node_id": "MDU6SXNzdWUyNjI5MDM5Nw==", "number": 3, "title": "Suppressing of matched strings", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/textX/Arpeggio/milestones/1", "html_url": "https://github.com/textX/Arpeggio/milestone/1", "labels_url": "https://api.github.com/repos/textX/Arpeggio/milestones/1/labels", "id": 556511, "node_id": "MDk6TWlsZXN0b25lNTU2NTEx", "number": 1, "title": "Version 0.6", "description": "", "creator": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2014-02-02T22:33:27Z", "updated_at": "2015-04-14T20:54:05Z", "due_on": "2014-05-31T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2014-01-25T10:17:08Z", "updated_at": "2015-04-14T20:54:05Z", "closed_at": "2015-04-14T20:54:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There should be a way to suppress matched string from showing up in parse tree.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/2", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/2/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/2/events", "html_url": "https://github.com/textX/Arpeggio/issues/2", "id": 26290384, "node_id": "MDU6SXNzdWUyNjI5MDM4NA==", "number": 2, "title": "Make matched rules available as attributes on NonTerminal instances", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/textX/Arpeggio/milestones/1", "html_url": "https://github.com/textX/Arpeggio/milestone/1", "labels_url": "https://api.github.com/repos/textX/Arpeggio/milestones/1/labels", "id": 556511, "node_id": "MDk6TWlsZXN0b25lNTU2NTEx", "number": 1, "title": "Version 0.6", "description": "", "creator": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2014-02-02T22:33:27Z", "updated_at": "2015-04-14T20:54:05Z", "due_on": "2014-05-31T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-01-25T10:15:57Z", "updated_at": "2014-02-18T23:48:31Z", "closed_at": "2014-02-18T23:48:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Default attribute name should be the rule name but the user could override that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/textX/Arpeggio/issues/1", "repository_url": "https://api.github.com/repos/textX/Arpeggio", "labels_url": "https://api.github.com/repos/textX/Arpeggio/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/textX/Arpeggio/issues/1/comments", "events_url": "https://api.github.com/repos/textX/Arpeggio/issues/1/events", "html_url": "https://github.com/textX/Arpeggio/issues/1", "id": 14256593, "node_id": "MDU6SXNzdWUxNDI1NjU5Mw==", "number": 1, "title": "Memoization cache not cleared on input change", "user": {"login": "igordejanovic", "id": 1673425, "node_id": "MDQ6VXNlcjE2NzM0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1673425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igordejanovic", "html_url": "https://github.com/igordejanovic", "followers_url": "https://api.github.com/users/igordejanovic/followers", "following_url": "https://api.github.com/users/igordejanovic/following{/other_user}", "gists_url": "https://api.github.com/users/igordejanovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/igordejanovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igordejanovic/subscriptions", "organizations_url": "https://api.github.com/users/igordejanovic/orgs", "repos_url": "https://api.github.com/users/igordejanovic/repos", "events_url": "https://api.github.com/users/igordejanovic/events{/privacy}", "received_events_url": "https://api.github.com/users/igordejanovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-05-13T11:45:49Z", "updated_at": "2013-05-14T17:08:54Z", "closed_at": "2013-05-14T17:08:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When input is changed memoization cache should be cleared on each ParserExpression.\n", "performed_via_github_app": null, "score": 1.0}]}