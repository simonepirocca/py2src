{"total_count": 9, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/justiniso/polling/issues/24", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/24/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/24/events", "html_url": "https://github.com/justiniso/polling/issues/24", "id": 619170502, "node_id": "MDU6SXNzdWU2MTkxNzA1MDI=", "number": 24, "title": "Feature request: check_success to also accept a list of callbacks", "user": {"login": "joaonc", "id": 11450769, "node_id": "MDQ6VXNlcjExNDUwNzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/11450769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaonc", "html_url": "https://github.com/joaonc", "followers_url": "https://api.github.com/users/joaonc/followers", "following_url": "https://api.github.com/users/joaonc/following{/other_user}", "gists_url": "https://api.github.com/users/joaonc/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaonc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaonc/subscriptions", "organizations_url": "https://api.github.com/users/joaonc/orgs", "repos_url": "https://api.github.com/users/joaonc/repos", "events_url": "https://api.github.com/users/joaonc/events{/privacy}", "received_events_url": "https://api.github.com/users/joaonc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T18:48:37Z", "updated_at": "2020-05-15T21:09:52Z", "closed_at": "2020-05-15T21:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be great if `check_success` would have the ability to not just receive a callback, but also a list of callbacks.\r\n\r\n```\r\ncheck_success: Union[Callback, List[Callback]]\r\n```\r\n\r\nThe (very real) use case I have here is that when making a REST call, there are different verifications that need to be made before continuing the code.  These verifications are mix-and-match, depending on the scenario and I would love to do something like:\r\n\r\n```\r\nresult = polling.poll(\r\n    client.get_data,\r\n    check_success=[\r\n        lambda response: error_check(response, 200),\r\n        validate_data,\r\n        lambda response: check_something_else(response, some_other_args),\r\n    ]\r\n)\r\n```\r\n\r\nSo `check_success` would only pass if _all_ callables return `True` (if list, otherwise call the one callable passed in `check_success`, as-is now).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/20", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/20/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/20/events", "html_url": "https://github.com/justiniso/polling/issues/20", "id": 453205762, "node_id": "MDU6SXNzdWU0NTMyMDU3NjI=", "number": 20, "title": "Add license information to setup.py", "user": {"login": "larsrinn", "id": 22575361, "node_id": "MDQ6VXNlcjIyNTc1MzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/22575361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsrinn", "html_url": "https://github.com/larsrinn", "followers_url": "https://api.github.com/users/larsrinn/followers", "following_url": "https://api.github.com/users/larsrinn/following{/other_user}", "gists_url": "https://api.github.com/users/larsrinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsrinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsrinn/subscriptions", "organizations_url": "https://api.github.com/users/larsrinn/orgs", "repos_url": "https://api.github.com/users/larsrinn/repos", "events_url": "https://api.github.com/users/larsrinn/events{/privacy}", "received_events_url": "https://api.github.com/users/larsrinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/justiniso/polling/milestones/1", "html_url": "https://github.com/justiniso/polling/milestone/1", "labels_url": "https://api.github.com/repos/justiniso/polling/milestones/1/labels", "id": 4611444, "node_id": "MDk6TWlsZXN0b25lNDYxMTQ0NA==", "number": 1, "title": "v0.3.1", "description": null, "creator": {"login": "justiniso", "id": 717862, "node_id": "MDQ6VXNlcjcxNzg2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/717862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justiniso", "html_url": "https://github.com/justiniso", "followers_url": "https://api.github.com/users/justiniso/followers", "following_url": "https://api.github.com/users/justiniso/following{/other_user}", "gists_url": "https://api.github.com/users/justiniso/gists{/gist_id}", "starred_url": "https://api.github.com/users/justiniso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justiniso/subscriptions", "organizations_url": "https://api.github.com/users/justiniso/orgs", "repos_url": "https://api.github.com/users/justiniso/repos", "events_url": "https://api.github.com/users/justiniso/events{/privacy}", "received_events_url": "https://api.github.com/users/justiniso/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-08-28T18:56:06Z", "updated_at": "2019-08-28T19:00:07Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-06-06T19:42:43Z", "updated_at": "2019-08-28T18:58:14Z", "closed_at": "2019-08-28T18:58:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI'm working on setting up a step in our CI pipeline that checks automatically for valid licenses of used third party packages. Therefore I need to whitelist polling per version explicitly at the moment, because the license is not set in the `setup.py`. \r\n\r\nI think it's as easy as adding:\r\n```\r\nlicense=\"MIT\"\r\n```\r\n\r\nas argument to `setup`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/17", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/17/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/17/events", "html_url": "https://github.com/justiniso/polling/issues/17", "id": 445884399, "node_id": "MDU6SXNzdWU0NDU4ODQzOTk=", "number": 17, "title": "Getting the request response object when polling?", "user": {"login": "C-Kenny", "id": 5967521, "node_id": "MDQ6VXNlcjU5Njc1MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5967521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/C-Kenny", "html_url": "https://github.com/C-Kenny", "followers_url": "https://api.github.com/users/C-Kenny/followers", "following_url": "https://api.github.com/users/C-Kenny/following{/other_user}", "gists_url": "https://api.github.com/users/C-Kenny/gists{/gist_id}", "starred_url": "https://api.github.com/users/C-Kenny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/C-Kenny/subscriptions", "organizations_url": "https://api.github.com/users/C-Kenny/orgs", "repos_url": "https://api.github.com/users/C-Kenny/repos", "events_url": "https://api.github.com/users/C-Kenny/events{/privacy}", "received_events_url": "https://api.github.com/users/C-Kenny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-20T00:45:27Z", "updated_at": "2019-08-28T19:34:56Z", "closed_at": "2019-08-28T19:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying the sample code:\r\n\r\n```\r\n# Wait until Google homepage returns 200 status code\r\nresponse = polling.poll(\r\n    lambda: requests.get('http://google.com').status_code == 200,\r\n    step=60,\r\n    poll_forever=True\r\n)\r\n```\r\nHere response is a boolean, I want to capture the request response object as the returned result. Is this possible using polling?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/15", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/15/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/15/events", "html_url": "https://github.com/justiniso/polling/issues/15", "id": 413452462, "node_id": "MDU6SXNzdWU0MTM0NTI0NjI=", "number": 15, "title": "*a and **k are pointless", "user": {"login": "ddmee", "id": 11785230, "node_id": "MDQ6VXNlcjExNzg1MjMw", "avatar_url": "https://avatars1.githubusercontent.com/u/11785230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddmee", "html_url": "https://github.com/ddmee", "followers_url": "https://api.github.com/users/ddmee/followers", "following_url": "https://api.github.com/users/ddmee/following{/other_user}", "gists_url": "https://api.github.com/users/ddmee/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddmee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddmee/subscriptions", "organizations_url": "https://api.github.com/users/ddmee/orgs", "repos_url": "https://api.github.com/users/ddmee/repos", "events_url": "https://api.github.com/users/ddmee/events{/privacy}", "received_events_url": "https://api.github.com/users/ddmee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T15:25:35Z", "updated_at": "2019-06-04T14:27:37Z", "closed_at": "2019-06-04T14:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "As seen in this issue, https://github.com/justiniso/polling/issues/14, because there is the function poll ends with the parameters `*a, **k`, users who provided incorrectly named parameters are not going to get a type error raised. These arguments are not used in the function are should be removed. \r\n\r\nFor instance, if I slightly misspell the parameters, no error is raised which makes it difficult to debug what's going on. For example:\r\n\r\n```python\r\npolling.poll(target=lambda: None, step=2, timeout=10, check_sucess=lambda rv: rv is None)\r\n```\r\n\r\nBecause `check_sucess` is misspelt, `check_success` is going to be set to the function `is_truthy` and this will result in a timeout error because None is not True. This won't be an issue is *a and **k were removed from the signature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/14", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/14/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/14/events", "html_url": "https://github.com/justiniso/polling/issues/14", "id": 388527863, "node_id": "MDU6SXNzdWUzODg1Mjc4NjM=", "number": 14, "title": "pass customized checkSuccess", "user": {"login": "bhagyashreegujar", "id": 1328456, "node_id": "MDQ6VXNlcjEzMjg0NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1328456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhagyashreegujar", "html_url": "https://github.com/bhagyashreegujar", "followers_url": "https://api.github.com/users/bhagyashreegujar/followers", "following_url": "https://api.github.com/users/bhagyashreegujar/following{/other_user}", "gists_url": "https://api.github.com/users/bhagyashreegujar/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhagyashreegujar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhagyashreegujar/subscriptions", "organizations_url": "https://api.github.com/users/bhagyashreegujar/orgs", "repos_url": "https://api.github.com/users/bhagyashreegujar/repos", "events_url": "https://api.github.com/users/bhagyashreegujar/events{/privacy}", "received_events_url": "https://api.github.com/users/bhagyashreegujar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-07T06:51:39Z", "updated_at": "2019-08-28T19:26:32Z", "closed_at": "2019-08-28T19:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\ni read in the doc:\r\n:param check_success: A callback function that accepts the return value of the target function. It should return true if you want the polling function to stop and return this value.\r\n\r\nthe target i am sending is  a lamda function which is expected to return a list.\r\nAnd I want the check success to ccheck the len of this list = a value that i pass.\r\nHow can I do that?\r\n\r\npolling.poll(target = (lambda:  foo(a)) , timeout=120, step=5, checkSuccess = (len(value returns from target) == expected_count)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/13", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/13/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/13/events", "html_url": "https://github.com/justiniso/polling/issues/13", "id": 373776490, "node_id": "MDU6SXNzdWUzNzM3NzY0OTA=", "number": 13, "title": "How to check the status?", "user": {"login": "rmohamedfazil", "id": 43635967, "node_id": "MDQ6VXNlcjQzNjM1OTY3", "avatar_url": "https://avatars2.githubusercontent.com/u/43635967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmohamedfazil", "html_url": "https://github.com/rmohamedfazil", "followers_url": "https://api.github.com/users/rmohamedfazil/followers", "following_url": "https://api.github.com/users/rmohamedfazil/following{/other_user}", "gists_url": "https://api.github.com/users/rmohamedfazil/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmohamedfazil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmohamedfazil/subscriptions", "organizations_url": "https://api.github.com/users/rmohamedfazil/orgs", "repos_url": "https://api.github.com/users/rmohamedfazil/repos", "events_url": "https://api.github.com/users/rmohamedfazil/events{/privacy}", "received_events_url": "https://api.github.com/users/rmohamedfazil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-25T05:15:14Z", "updated_at": "2019-08-28T19:30:53Z", "closed_at": "2019-08-28T19:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "import requests\r\npolling.poll(\r\n    lambda: requests.get('http://google.com').status_code == 200,\r\n    step=60,\r\n    poll_forever=True)\r\n still running more than 1 hour but not responding anything , how to check the status every 60secs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/9", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/9/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/9/events", "html_url": "https://github.com/justiniso/polling/issues/9", "id": 247833187, "node_id": "MDU6SXNzdWUyNDc4MzMxODc=", "number": 9, "title": "Why import requests?", "user": {"login": "hekaldama", "id": 17173, "node_id": "MDQ6VXNlcjE3MTcz", "avatar_url": "https://avatars0.githubusercontent.com/u/17173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hekaldama", "html_url": "https://github.com/hekaldama", "followers_url": "https://api.github.com/users/hekaldama/followers", "following_url": "https://api.github.com/users/hekaldama/following{/other_user}", "gists_url": "https://api.github.com/users/hekaldama/gists{/gist_id}", "starred_url": "https://api.github.com/users/hekaldama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hekaldama/subscriptions", "organizations_url": "https://api.github.com/users/hekaldama/orgs", "repos_url": "https://api.github.com/users/hekaldama/repos", "events_url": "https://api.github.com/users/hekaldama/events{/privacy}", "received_events_url": "https://api.github.com/users/hekaldama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-03T20:57:09Z", "updated_at": "2019-06-04T18:13:53Z", "closed_at": "2019-06-04T18:13:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new here, but it seems weird to install something called `polling` and then all your docs say to import `requests`. Why does this work and is there anything wrong with this implementation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/7", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/7/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/7/events", "html_url": "https://github.com/justiniso/polling/issues/7", "id": 161985151, "node_id": "MDU6SXNzdWUxNjE5ODUxNTE=", "number": 7, "title": "Test dependencies are included in package", "user": {"login": "benzhou1", "id": 3458909, "node_id": "MDQ6VXNlcjM0NTg5MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3458909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benzhou1", "html_url": "https://github.com/benzhou1", "followers_url": "https://api.github.com/users/benzhou1/followers", "following_url": "https://api.github.com/users/benzhou1/following{/other_user}", "gists_url": "https://api.github.com/users/benzhou1/gists{/gist_id}", "starred_url": "https://api.github.com/users/benzhou1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benzhou1/subscriptions", "organizations_url": "https://api.github.com/users/benzhou1/orgs", "repos_url": "https://api.github.com/users/benzhou1/repos", "events_url": "https://api.github.com/users/benzhou1/events{/privacy}", "received_events_url": "https://api.github.com/users/benzhou1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "justiniso", "id": 717862, "node_id": "MDQ6VXNlcjcxNzg2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/717862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justiniso", "html_url": "https://github.com/justiniso", "followers_url": "https://api.github.com/users/justiniso/followers", "following_url": "https://api.github.com/users/justiniso/following{/other_user}", "gists_url": "https://api.github.com/users/justiniso/gists{/gist_id}", "starred_url": "https://api.github.com/users/justiniso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justiniso/subscriptions", "organizations_url": "https://api.github.com/users/justiniso/orgs", "repos_url": "https://api.github.com/users/justiniso/repos", "events_url": "https://api.github.com/users/justiniso/events{/privacy}", "received_events_url": "https://api.github.com/users/justiniso/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "justiniso", "id": 717862, "node_id": "MDQ6VXNlcjcxNzg2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/717862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justiniso", "html_url": "https://github.com/justiniso", "followers_url": "https://api.github.com/users/justiniso/followers", "following_url": "https://api.github.com/users/justiniso/following{/other_user}", "gists_url": "https://api.github.com/users/justiniso/gists{/gist_id}", "starred_url": "https://api.github.com/users/justiniso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justiniso/subscriptions", "organizations_url": "https://api.github.com/users/justiniso/orgs", "repos_url": "https://api.github.com/users/justiniso/repos", "events_url": "https://api.github.com/users/justiniso/events{/privacy}", "received_events_url": "https://api.github.com/users/justiniso/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/justiniso/polling/milestones/1", "html_url": "https://github.com/justiniso/polling/milestone/1", "labels_url": "https://api.github.com/repos/justiniso/polling/milestones/1/labels", "id": 4611444, "node_id": "MDk6TWlsZXN0b25lNDYxMTQ0NA==", "number": 1, "title": "v0.3.1", "description": null, "creator": {"login": "justiniso", "id": 717862, "node_id": "MDQ6VXNlcjcxNzg2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/717862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justiniso", "html_url": "https://github.com/justiniso", "followers_url": "https://api.github.com/users/justiniso/followers", "following_url": "https://api.github.com/users/justiniso/following{/other_user}", "gists_url": "https://api.github.com/users/justiniso/gists{/gist_id}", "starred_url": "https://api.github.com/users/justiniso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justiniso/subscriptions", "organizations_url": "https://api.github.com/users/justiniso/orgs", "repos_url": "https://api.github.com/users/justiniso/repos", "events_url": "https://api.github.com/users/justiniso/events{/privacy}", "received_events_url": "https://api.github.com/users/justiniso/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-08-28T18:56:06Z", "updated_at": "2019-08-28T19:00:07Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2016-06-23T18:00:58Z", "updated_at": "2019-08-28T18:58:48Z", "closed_at": "2019-08-28T18:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test dependencies mock and pytest are included with polling package. Consider using tests_requires in setup.py.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justiniso/polling/issues/3", "repository_url": "https://api.github.com/repos/justiniso/polling", "labels_url": "https://api.github.com/repos/justiniso/polling/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/justiniso/polling/issues/3/comments", "events_url": "https://api.github.com/repos/justiniso/polling/issues/3/events", "html_url": "https://github.com/justiniso/polling/issues/3", "id": 132948875, "node_id": "MDU6SXNzdWUxMzI5NDg4NzU=", "number": 3, "title": "Doesn't account for 'no route to host' errors", "user": {"login": "BarryNorton", "id": 724550, "node_id": "MDQ6VXNlcjcyNDU1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/724550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BarryNorton", "html_url": "https://github.com/BarryNorton", "followers_url": "https://api.github.com/users/BarryNorton/followers", "following_url": "https://api.github.com/users/BarryNorton/following{/other_user}", "gists_url": "https://api.github.com/users/BarryNorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/BarryNorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BarryNorton/subscriptions", "organizations_url": "https://api.github.com/users/BarryNorton/orgs", "repos_url": "https://api.github.com/users/BarryNorton/repos", "events_url": "https://api.github.com/users/BarryNorton/events{/privacy}", "received_events_url": "https://api.github.com/users/BarryNorton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-11T11:34:25Z", "updated_at": "2016-02-18T14:30:33Z", "closed_at": "2016-02-18T14:23:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is essential for polling on, e.g., new EC2 instances.\n\n```\nTraceback (most recent call last):\n  File \"./test.py\", line [...]\n    poll_forever=True\n  File \"/usr/local/lib/python2.7/dist-packages/polling.py\", line 103, in poll\n    val = target(*args, **kwargs)\n  File \"./launch.py\", line 39, in <lambda>\n    lambda: requests.get([...]).status_code == 200,\n  File \"/usr/lib/python2.7/dist-packages/requests/api.py\", line 55, in get\n    return request('get', url, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/requests/api.py\", line 44, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 455, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 558, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/requests/adapters.py\", line 378, in send\n    raise ConnectionError(e)\nrequests.exceptions.ConnectionError: HTTPConnectionPool([...]): Max retries exceeded with url: / (Caused by <class 'socket.error'>: [Errno 113] No route to host)\n```\n", "performed_via_github_app": null, "score": 1.0}]}