{"total_count": 38, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/146", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/146/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/146/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/146", "id": 641173029, "node_id": "MDU6SXNzdWU2NDExNzMwMjk=", "number": 146, "title": "\"TypeError: 'ellipsis' object is not iterable\" on python 3.5.2", "user": {"login": "ctz", "id": 579363, "node_id": "MDQ6VXNlcjU3OTM2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/579363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctz", "html_url": "https://github.com/ctz", "followers_url": "https://api.github.com/users/ctz/followers", "following_url": "https://api.github.com/users/ctz/following{/other_user}", "gists_url": "https://api.github.com/users/ctz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctz/subscriptions", "organizations_url": "https://api.github.com/users/ctz/orgs", "repos_url": "https://api.github.com/users/ctz/repos", "events_url": "https://api.github.com/users/ctz/events{/privacy}", "received_events_url": "https://api.github.com/users/ctz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T12:37:23Z", "updated_at": "2020-06-19T09:32:14Z", "closed_at": "2020-06-19T09:32:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Repro steps -- first `pip3 install pyhamcrest` -- i got pyhamcrest-2.0.2. Second:\r\n\r\n```\r\n$ python3\r\nPython 3.5.2 (default, Apr 16 2020, 17:47:17) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import hamcrest\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jbp/.local/lib/python3.5/site-packages/hamcrest/__init__.py\", line 1, in <module>\r\n    from hamcrest.core import *\r\n  File \"/home/jbp/.local/lib/python3.5/site-packages/hamcrest/core/__init__.py\", line 2, in <module>\r\n    from hamcrest.core.core import *\r\n  File \"/home/jbp/.local/lib/python3.5/site-packages/hamcrest/core/core/__init__.py\", line 13, in <module>\r\n    from hamcrest.core.core.raises import calling, raises\r\n  File \"/home/jbp/.local/lib/python3.5/site-packages/hamcrest/core/core/raises.py\", line 15, in <module>\r\n    class Raises(BaseMatcher[Callable[..., Any]]):\r\n  File \"/usr/lib/python3.5/typing.py\", line 1025, in __getitem__\r\n    tvars = _type_vars(params)\r\n  File \"/usr/lib/python3.5/typing.py\", line 284, in _type_vars\r\n    _get_type_vars(types, tvars)\r\n  File \"/usr/lib/python3.5/typing.py\", line 279, in _get_type_vars\r\n    t._get_type_vars(tvars)\r\n  File \"/usr/lib/python3.5/typing.py\", line 786, in _get_type_vars\r\n    _get_type_vars(self.__args__, tvars)\r\n  File \"/usr/lib/python3.5/typing.py\", line 277, in _get_type_vars\r\n    for t in types:\r\nTypeError: 'ellipsis' object is not iterable\r\n>>> \r\n```\r\n\r\nThis is ubuntu 16.04.6 LTS, where the very latest version of python available is this one -- 3.5.2 -- and no later versions are available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/137", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/137/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/137/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/137", "id": 571473748, "node_id": "MDU6SXNzdWU1NzE0NzM3NDg=", "number": 137, "title": "bad type annotation on raises", "user": {"login": "keis", "id": 125062, "node_id": "MDQ6VXNlcjEyNTA2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/125062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keis", "html_url": "https://github.com/keis", "followers_url": "https://api.github.com/users/keis/followers", "following_url": "https://api.github.com/users/keis/following{/other_user}", "gists_url": "https://api.github.com/users/keis/gists{/gist_id}", "starred_url": "https://api.github.com/users/keis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keis/subscriptions", "organizations_url": "https://api.github.com/users/keis/orgs", "repos_url": "https://api.github.com/users/keis/repos", "events_url": "https://api.github.com/users/keis/events{/privacy}", "received_events_url": "https://api.github.com/users/keis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-26T15:38:01Z", "updated_at": "2020-03-02T14:08:24Z", "closed_at": "2020-03-02T14:08:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "awesome to see hamcrest be 561 compatible, however I ran into this issue testing it out. type checking this sample shows an error even though it's calling raises as documented\r\n\r\n```\r\nfrom hamcrest import raises\r\n\r\ndef typed() -> None:\r\n    raises(TypeError)\r\n```\r\n\r\n```\r\nsample.py:4: error: Argument 1 to \"raises\" has incompatible type \"Type[TypeError]\"; expected \"Exception\"\r\n```\r\n\r\nI think it's supposed to have `Type[Exception]` and not `Exception`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/131", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/131/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/131/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/131", "id": 546401396, "node_id": "MDU6SXNzdWU1NDY0MDEzOTY=", "number": 131, "title": "PyHamcrest 1.10.0 is not py2-compatible. It should set python_requires>=3 to avoid breaking users who are still on Py2.", "user": {"login": "tvalentyn", "id": 9408864, "node_id": "MDQ6VXNlcjk0MDg4NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9408864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvalentyn", "html_url": "https://github.com/tvalentyn", "followers_url": "https://api.github.com/users/tvalentyn/followers", "following_url": "https://api.github.com/users/tvalentyn/following{/other_user}", "gists_url": "https://api.github.com/users/tvalentyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvalentyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvalentyn/subscriptions", "organizations_url": "https://api.github.com/users/tvalentyn/orgs", "repos_url": "https://api.github.com/users/tvalentyn/repos", "events_url": "https://api.github.com/users/tvalentyn/events{/privacy}", "received_events_url": "https://api.github.com/users/tvalentyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-01-07T17:08:10Z", "updated_at": "2020-01-16T14:41:11Z", "closed_at": "2020-01-16T14:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`import hamcrest` no longer works on Python 2 with pyhamcrest==1.10.0. \r\n\r\nTo avoid installation of pyhamcrest==1.10.0 and newer versions on Python 2, it would be better to  add `python_requires>=3.0` stanza in setup.py starting from 1.10.0. To  fix this for 1.10.0, we would need to update already released 1.10.0 pypi artifacts.\r\n\r\nAs of now, all python 2 users who install pyhamcrest without restricting the version to 1.9.0, will be broken. \r\n\r\nA better user experience would be if Python 2 users get the last version of pyhamcrest  that is supported on Python 2. This is convention is often followed by major python libraries, for example numpy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/130", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/130/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/130/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/130", "id": 546382213, "node_id": "MDU6SXNzdWU1NDYzODIyMTM=", "number": 130, "title": "synchronize pypi version with the tag 1.10.0", "user": {"login": "fblackburn1", "id": 11160579, "node_id": "MDQ6VXNlcjExMTYwNTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/11160579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fblackburn1", "html_url": "https://github.com/fblackburn1", "followers_url": "https://api.github.com/users/fblackburn1/followers", "following_url": "https://api.github.com/users/fblackburn1/following{/other_user}", "gists_url": "https://api.github.com/users/fblackburn1/gists{/gist_id}", "starred_url": "https://api.github.com/users/fblackburn1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fblackburn1/subscriptions", "organizations_url": "https://api.github.com/users/fblackburn1/orgs", "repos_url": "https://api.github.com/users/fblackburn1/repos", "events_url": "https://api.github.com/users/fblackburn1/events{/privacy}", "received_events_url": "https://api.github.com/users/fblackburn1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-07T16:31:43Z", "updated_at": "2020-01-16T10:36:56Z", "closed_at": "2020-01-16T10:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you plan to synchronize the pypi version with the `1.10.0` tag?\r\nCurrently, the pypi version is synced to the `release-1.10 `branch but do not contains some quick fix that is in the `1.10.0` tag\r\n\r\nQuick fix: https://github.com/hamcrest/PyHamcrest/commit/b68b70d7729529d477c052f208a2fae9222e0d21#diff-d8329dda1453e5b8c0430eb4d945610eR34\r\n\r\nNow, with the pypi version, I get a lot of\r\n```\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/assert_that.py\", line 45, in assert_that\r\n    _assert_match(actual=arg1, matcher=arg2, reason=arg3)\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/assert_that.py\", line 53, in _assert_match\r\n    if not matcher.matches(actual):\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/core/described_as.py\", line 20, in matches\r\n    return self.matcher.matches(item, mismatch_description)\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/core/allof.py\", line 20, in matches\r\n    if not matcher.matches(item):\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/base_matcher.py\", line 27, in matches\r\n    match_result = self._matches(item)\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/library/object/hasproperty.py\", line 26, in _matches\r\n    return self.value_matcher.matches(value)\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/library/collection/issequence_containinginanyorder.py\", line 54, in matches\r\n    if not matchsequence.matches(item):\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/library/collection/issequence_containinginanyorder.py\", line 16, in matches\r\n    return self.isnotsurplus(item) and self.ismatched(item)\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/library/collection/issequence_containinginanyorder.py\", line 36, in ismatched\r\n    if matcher.matches(item):\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/core/described_as.py\", line 20, in matches\r\n    return self.matcher.matches(item, mismatch_description)\r\n  File \"/home/francois/.virtualenvs/dao/lib/python3.7/site-packages/hamcrest/core/core/allof.py\", line 29, in matches\r\n    mismatch_description.append_text(\" and \")\r\nAttributeError: 'NoneType' object has no attribute 'append_text'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/128", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/128/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/128/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/128", "id": 544736933, "node_id": "MDU6SXNzdWU1NDQ3MzY5MzM=", "number": 128, "title": "How to match exception properties?", "user": {"login": "bittrance", "id": 1666535, "node_id": "MDQ6VXNlcjE2NjY1MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1666535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bittrance", "html_url": "https://github.com/bittrance", "followers_url": "https://api.github.com/users/bittrance/followers", "following_url": "https://api.github.com/users/bittrance/following{/other_user}", "gists_url": "https://api.github.com/users/bittrance/gists{/gist_id}", "starred_url": "https://api.github.com/users/bittrance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bittrance/subscriptions", "organizations_url": "https://api.github.com/users/bittrance/orgs", "repos_url": "https://api.github.com/users/bittrance/repos", "events_url": "https://api.github.com/users/bittrance/events{/privacy}", "received_events_url": "https://api.github.com/users/bittrance/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1766334207, "node_id": "MDU6TGFiZWwxNzY2MzM0MjA3", "url": "https://api.github.com/repos/hamcrest/PyHamcrest/labels/feature%20request", "name": "feature request", "color": "ccfeff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-02T20:37:30Z", "updated_at": "2020-01-07T01:13:14Z", "closed_at": "2020-01-07T01:13:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a webapp with helper methods that raises `bottle.HTTPError` and I want to ensure that a raised exception has a `status_code` property, but it seems the calling/raises pair cannot directly assert this? E.g. something like\r\n```\r\nassert_that(\r\n    calling(helper).with_args(broken_input),\r\n    raises(HTTPError, has_properties(status_code=500))\r\n)\r\n```\r\nAm I missing something obvious or is there no way to match structured details of an exception short of manually catching the exception first? \r\n\r\nIf this is indeed the case, would you be amenable to a PR implementing `raises(HTTPError, matching=has_properties(status_code=500))` or perhaps `raises(HTTPError).matching(has_properties(status_code=500))`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/127", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/127/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/127/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/127", "id": 541502872, "node_id": "MDU6SXNzdWU1NDE1MDI4NzI=", "number": 127, "title": "Extra parentheses is breaking assert_that/is_ ", "user": {"login": "mvhb", "id": 19848903, "node_id": "MDQ6VXNlcjE5ODQ4OTAz", "avatar_url": "https://avatars0.githubusercontent.com/u/19848903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvhb", "html_url": "https://github.com/mvhb", "followers_url": "https://api.github.com/users/mvhb/followers", "following_url": "https://api.github.com/users/mvhb/following{/other_user}", "gists_url": "https://api.github.com/users/mvhb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvhb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvhb/subscriptions", "organizations_url": "https://api.github.com/users/mvhb/orgs", "repos_url": "https://api.github.com/users/mvhb/repos", "events_url": "https://api.github.com/users/mvhb/events{/privacy}", "received_events_url": "https://api.github.com/users/mvhb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-22T21:25:21Z", "updated_at": "2019-12-22T22:41:20Z", "closed_at": "2019-12-22T22:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "e.g: `assert_that((\"a\",is_(\"b\")))` is returning True, but if it use `assert_that(\"a\",is_(\"b\"))`, works as expected. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/123", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/123/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/123/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/123", "id": 517234350, "node_id": "MDU6SXNzdWU1MTcyMzQzNTA=", "number": 123, "title": "The test suite fails with pytest 4", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2019-11-04T15:40:52Z", "updated_at": "2019-11-21T12:45:06Z", "closed_at": "2019-11-21T12:45:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "While packaging PyHamcrest for openSUSE/Tumbledweed, I have discovered that the test suite fails with Pytest 4.\r\n\r\n```\r\n[   34s] + PYTHONPATH=:/home/abuild/rpmbuild/BUILDROOT/python-PyHamcrest-1.9.0-0.x86_64/usr/lib/python2.7/site-packages\r\n[   34s] + py.test-2.7 --ignore=_build.python2 --ignore=_build.python3 --ignore=_build.pypy3 -v\r\n[   34s] ============================= test session starts ==============================\r\n[   34s] platform linux2 -- Python 2.7.16, pytest-4.6.5, py-1.8.0, pluggy-0.13.0 -- /usr/bin/python2\r\n[   34s] cachedir: .pytest_cache\r\n[   34s] hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/abuild/rpmbuild/BUILD/PyHamcrest-1.9.0/.hypothesis/examples')\r\n[   34s] rootdir: /home/abuild/rpmbuild/BUILD/PyHamcrest-1.9.0\r\n[   34s] plugins: hypothesis-4.40.2\r\n[   36s] collecting ... collected 453 items / 2 errors / 451 selected\r\n[   36s] \r\n[   36s] ==================================== ERRORS ====================================\r\n[   36s] __________ ERROR collecting tests/hamcrest_unit_test/core/is_test.py ___________\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/hooks.py:286: in __call__\r\n[   36s]     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:92: in _hookexec\r\n[   36s]     return self._inner_hookexec(hook, methods, kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:86: in <lambda>\r\n[   36s]     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:234: in pytest_pycollect_makeitem\r\n[   36s]     res = list(collector._genfunctions(name, obj))\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:410: in _genfunctions\r\n[   36s]     self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/hooks.py:286: in __call__\r\n[   36s]     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:92: in _hookexec\r\n[   36s]     return self._inner_hookexec(hook, methods, kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:86: in <lambda>\r\n[   36s]     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:137: in pytest_generate_tests\r\n[   36s]     metafunc.parametrize(*marker.args, **marker.kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:1004: in parametrize\r\n[   36s]     function_definition=self.definition,\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/mark/structures.py:130: in _for_parametrize\r\n[   36s]     if len(param.values) != len(argnames):\r\n[   36s] E   TypeError: object of type 'MarkDecorator' has no len()\r\n[   36s] _____ ERROR collecting tests/hamcrest_unit_test/core/isinstanceof_test.py ______\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/hooks.py:286: in __call__\r\n[   36s]     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:92: in _hookexec\r\n[   36s]     return self._inner_hookexec(hook, methods, kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:86: in <lambda>\r\n[   36s]     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:234: in pytest_pycollect_makeitem\r\n[   36s]     res = list(collector._genfunctions(name, obj))\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:410: in _genfunctions\r\n[   36s]     self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/hooks.py:286: in __call__\r\n[   36s]     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:92: in _hookexec\r\n[   36s]     return self._inner_hookexec(hook, methods, kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/pluggy/manager.py:86: in <lambda>\r\n[   36s]     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:137: in pytest_generate_tests\r\n[   36s]     metafunc.parametrize(*marker.args, **marker.kwargs)\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/python.py:1004: in parametrize\r\n[   36s]     function_definition=self.definition,\r\n[   36s] /usr/lib/python2.7/site-packages/_pytest/mark/structures.py:130: in _for_parametrize\r\n[   36s]     if len(param.values) != len(argnames):\r\n[   36s] E   TypeError: object of type 'MarkDecorator' has no len()\r\n[   36s] !!!!!!!!!!!!!!!!!!! Interrupted: 2 errors during collection !!!!!!!!!!!!!!!!!!!!\r\n[   36s] =========================== 2 error in 1.48 seconds ============================\r\n```\r\n\r\nThe [full build log](https://github.com/hamcrest/PyHamcrest/files/3804728/_log.txt) is also available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/114", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/114/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/114/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/114", "id": 478971620, "node_id": "MDU6SXNzdWU0Nzg5NzE2MjA=", "number": 114, "title": "Black formatting", "user": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-09T12:52:30Z", "updated_at": "2019-10-21T13:05:05Z", "closed_at": "2019-10-21T13:04:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Use [black](https://black.readthedocs.io) to enforce consistent, merge-friendly formatting.\r\n\r\nThoughts? Preferred line length?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/111", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/111/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/111/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/111", "id": 477587379, "node_id": "MDU6SXNzdWU0Nzc1ODczNzk=", "number": 111, "title": "is_not/not_ will not invert raises() matcher", "user": {"login": "hersheleh", "id": 817591, "node_id": "MDQ6VXNlcjgxNzU5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/817591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hersheleh", "html_url": "https://github.com/hersheleh", "followers_url": "https://api.github.com/users/hersheleh/followers", "following_url": "https://api.github.com/users/hersheleh/following{/other_user}", "gists_url": "https://api.github.com/users/hersheleh/gists{/gist_id}", "starred_url": "https://api.github.com/users/hersheleh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hersheleh/subscriptions", "organizations_url": "https://api.github.com/users/hersheleh/orgs", "repos_url": "https://api.github.com/users/hersheleh/repos", "events_url": "https://api.github.com/users/hersheleh/events{/privacy}", "received_events_url": "https://api.github.com/users/hersheleh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-08-06T20:49:00Z", "updated_at": "2019-12-29T18:51:37Z", "closed_at": "2019-12-29T18:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far as I can tell is_not should invert any matcher. Recently had a situation where I need an to invert a raises and it did not work as expected. In some ways inverting raises is an antipattern but in my case alternatives are uglier. Below is a simplified example of the issue.\r\n\r\nPlease advise if this is a bug? or is there an alternative way to address this.\r\n\r\nContent `example.py`\r\n\r\n```\r\nfrom hamcrest import assert_that, calling, raises, not_                            \r\nassert_that(calling(int).with_args('q'), not_(raises(ValueError)))\r\n```\r\n\r\nOutput:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/test/example1.py\", line 2, in <module>\r\n    assert_that(calling(int).with_args('q'), not_(raises(ValueError)))\r\n  File \"/home/test/_venv/lib/python3.6/site-packages/hamcrest/core/assert_that.py\", line 43, in assert_that\r\n    _assert_match(actual=arg1, matcher=arg2, reason=arg3)\r\n  File \"/home/test/_venv/lib/python3.6/site-packages/hamcrest/core/assert_that.py\", line 57, in _assert_match\r\n    raise AssertionError(description)\r\nAssertionError: \r\nExpected: not Expected a callable raising <class 'ValueError'>\r\n     but: was <hamcrest.core.core.raises.DeferredCallable object at 0x7ffbaaba97f0>\r\n```\r\n\r\nExpected: test passing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/110", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/110/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/110/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/110", "id": 476436423, "node_id": "MDU6SXNzdWU0NzY0MzY0MjM=", "number": 110, "title": "`not` doesn't negate matcher result", "user": {"login": "FredrikWendt", "id": 89504, "node_id": "MDQ6VXNlcjg5NTA0", "avatar_url": "https://avatars2.githubusercontent.com/u/89504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FredrikWendt", "html_url": "https://github.com/FredrikWendt", "followers_url": "https://api.github.com/users/FredrikWendt/followers", "following_url": "https://api.github.com/users/FredrikWendt/following{/other_user}", "gists_url": "https://api.github.com/users/FredrikWendt/gists{/gist_id}", "starred_url": "https://api.github.com/users/FredrikWendt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FredrikWendt/subscriptions", "organizations_url": "https://api.github.com/users/FredrikWendt/orgs", "repos_url": "https://api.github.com/users/FredrikWendt/repos", "events_url": "https://api.github.com/users/FredrikWendt/events{/privacy}", "received_events_url": "https://api.github.com/users/FredrikWendt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-08-03T09:58:28Z", "updated_at": "2019-08-12T10:41:47Z", "closed_at": "2019-08-12T10:41:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This works fine:\r\n\r\n    assert_that({\"test\": True}, is_not(has_key(\"test\")))\r\n\r\nHowever, using built-in `not` doesn't:\r\n\r\n    assert_that({\"test\": True}, not(has_key(\"test\")))\r\n\r\nNote that both these pass:\r\n\r\n    assert_that(None, is_(None))\r\n    assert_that(\"thing\", not(is_(None)))\r\n\r\nso I find it very asymmetrical that only the third test here fails:\r\n\r\n    assert_that({\"test\": True}, not has_key(\"test\"))\r\n    assert_that({\"test\": True}, not(has_key(\"test\")))\r\n    assert_that({\"test\": True}, is_not(has_key(\"test\")))\r\n\r\nI'm using Ubuntu shipped python3-hamcrest (xenial, v 1.8.0-1).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/107", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/107/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/107/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/107", "id": 474423559, "node_id": "MDU6SXNzdWU0NzQ0MjM1NTk=", "number": 107, "title": "Travis build fails under Xenial", "user": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-30T07:36:11Z", "updated_at": "2019-08-03T10:08:15Z", "closed_at": "2019-08-03T10:08:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As per [Xenial as the default build environment](https://changelog.travis-ci.com/xenial-as-the-default-build-environment-99476), in future builds will run on Xenial by default. Right now, PyHamcrest's build [fails on Xenial](https://travis-ci.org/brunns/PyHamcrest/builds/565346024), though it [passes happily enough on Trusty](https://travis-ci.org/brunns/PyHamcrest/builds/565336327). It's the Python 3.4 version which fails.\r\n\r\nI see two options - we could drop support for Python 3.4, or we could pin our build to Trusty. Python 3.4 is out of support, so I lean towards dropping that, and earlier versions, but I'd be interested to hear other thoughts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/99", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/99/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/99/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/99", "id": 424020132, "node_id": "MDU6SXNzdWU0MjQwMjAxMzI=", "number": 99, "title": "Add classifiers for newer versions of python", "user": {"login": "Ultima1252", "id": 15898096, "node_id": "MDQ6VXNlcjE1ODk4MDk2", "avatar_url": "https://avatars3.githubusercontent.com/u/15898096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ultima1252", "html_url": "https://github.com/Ultima1252", "followers_url": "https://api.github.com/users/Ultima1252/followers", "following_url": "https://api.github.com/users/Ultima1252/following{/other_user}", "gists_url": "https://api.github.com/users/Ultima1252/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ultima1252/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ultima1252/subscriptions", "organizations_url": "https://api.github.com/users/Ultima1252/orgs", "repos_url": "https://api.github.com/users/Ultima1252/repos", "events_url": "https://api.github.com/users/Ultima1252/events{/privacy}", "received_events_url": "https://api.github.com/users/Ultima1252/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-03-22T02:29:27Z", "updated_at": "2020-01-03T11:04:32Z", "closed_at": "2020-01-03T11:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyHamcrest only supports up to python 3.4, but passes tests up to 3.7. Classifiers should be added to support these versions of python.\r\n\r\nThese tests were tested on FreeBSD. More details at [1].\r\n\r\n[1] https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=235585", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/86", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/86/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/86/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/86", "id": 362312234, "node_id": "MDU6SXNzdWUzNjIzMTIyMzQ=", "number": 86, "title": "Travis builds all fail because of the usage of pip --use-mirrors", "user": {"login": "offbyone", "id": 181693, "node_id": "MDQ6VXNlcjE4MTY5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/181693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offbyone", "html_url": "https://github.com/offbyone", "followers_url": "https://api.github.com/users/offbyone/followers", "following_url": "https://api.github.com/users/offbyone/following{/other_user}", "gists_url": "https://api.github.com/users/offbyone/gists{/gist_id}", "starred_url": "https://api.github.com/users/offbyone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offbyone/subscriptions", "organizations_url": "https://api.github.com/users/offbyone/orgs", "repos_url": "https://api.github.com/users/offbyone/repos", "events_url": "https://api.github.com/users/offbyone/events{/privacy}", "received_events_url": "https://api.github.com/users/offbyone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1063846067, "node_id": "MDU6TGFiZWwxMDYzODQ2MDY3", "url": "https://api.github.com/repos/hamcrest/PyHamcrest/labels/help%20wanted", "name": "help wanted", "color": "d4c5f9", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-20T18:39:15Z", "updated_at": "2018-09-21T14:50:16Z", "closed_at": "2018-09-21T14:50:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See, for example, https://travis-ci.org/hamcrest/PyHamcrest/builds/349481150\r\n\r\nThis should be fixed before we can merge any other PRs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/85", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/85/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/85/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/85", "id": 360282338, "node_id": "MDU6SXNzdWUzNjAyODIzMzg=", "number": 85, "title": "PyHamcrest uses its own deprecated methods", "user": {"login": "pjnagel", "id": 1124793, "node_id": "MDQ6VXNlcjExMjQ3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1124793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjnagel", "html_url": "https://github.com/pjnagel", "followers_url": "https://api.github.com/users/pjnagel/followers", "following_url": "https://api.github.com/users/pjnagel/following{/other_user}", "gists_url": "https://api.github.com/users/pjnagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjnagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjnagel/subscriptions", "organizations_url": "https://api.github.com/users/pjnagel/orgs", "repos_url": "https://api.github.com/users/pjnagel/repos", "events_url": "https://api.github.com/users/pjnagel/events{/privacy}", "received_events_url": "https://api.github.com/users/pjnagel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-14T12:21:33Z", "updated_at": "2019-02-16T14:58:57Z", "closed_at": "2019-02-16T14:58:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "IsObjectWithProperty.describe_mismatch() and SelfDescribingValue.describe_to() callsBaseDescription.append_value()\r\n\r\nBaseDescription.append_value() contains the code:\r\n```\r\n warnings.warn('Call append_description_of instead of append_value',\r\n                      DeprecationWarning)\r\n```\r\n\r\nThis is an issue because I am unit-testing my own matchers, so failing matchers are part of a normal test run, and this means I have to filter out 3rd party warnings to make sure my own code does not trip over deprecation warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/82", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/82/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/82/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/82", "id": 333362713, "node_id": "MDU6SXNzdWUzMzMzNjI3MTM=", "number": 82, "title": "When getting a type mismatch in exception, exception details are not provided", "user": {"login": "moshez", "id": 422703, "node_id": "MDQ6VXNlcjQyMjcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/422703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshez", "html_url": "https://github.com/moshez", "followers_url": "https://api.github.com/users/moshez/followers", "following_url": "https://api.github.com/users/moshez/following{/other_user}", "gists_url": "https://api.github.com/users/moshez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshez/subscriptions", "organizations_url": "https://api.github.com/users/moshez/orgs", "repos_url": "https://api.github.com/users/moshez/repos", "events_url": "https://api.github.com/users/moshez/events{/privacy}", "received_events_url": "https://api.github.com/users/moshez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-18T17:21:01Z", "updated_at": "2019-01-21T22:39:58Z", "closed_at": "2019-01-21T22:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n\r\n```\r\nAssertionError: \r\nExpected: Expected a callable raising <class 'microcosm_pubsub.errors.SkipMessage'>\r\n     but: <class 'TypeError'> was raised instead\r\n```\r\n\r\nThis means that I cannot see what the type error actually was, and fix it.\r\nI've traced the problem to https://github.com/hamcrest/PyHamcrest/blob/29d4f9d23dea293a99d9c32ef893cd4a31b5d3f7/src/hamcrest/core/core/raises.py#L60 -- it seems it would be straight forward to add a description there. Would this make sense as a PR?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/76", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/76/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/76/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/76", "id": 260686483, "node_id": "MDU6SXNzdWUyNjA2ODY0ODM=", "number": 76, "title": "nested dict match with hasentry and hasentries cannot handle partial match use case", "user": {"login": "JPvRiel", "id": 9722317, "node_id": "MDQ6VXNlcjk3MjIzMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9722317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JPvRiel", "html_url": "https://github.com/JPvRiel", "followers_url": "https://api.github.com/users/JPvRiel/followers", "following_url": "https://api.github.com/users/JPvRiel/following{/other_user}", "gists_url": "https://api.github.com/users/JPvRiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JPvRiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JPvRiel/subscriptions", "organizations_url": "https://api.github.com/users/JPvRiel/orgs", "repos_url": "https://api.github.com/users/JPvRiel/repos", "events_url": "https://api.github.com/users/JPvRiel/events{/privacy}", "received_events_url": "https://api.github.com/users/JPvRiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-26T16:21:52Z", "updated_at": "2019-08-04T07:37:37Z", "closed_at": "2019-08-04T07:37:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was more or less raised before, but closed due to the way the issue was interpreted: https://github.com/hamcrest/PyHamcrest/issues/37\r\n\r\nThe question remains, how should one find matches within dictionaries with nested structures? Especially only partial matches? This is a common case when dealing with JSON and using python's standards json lib to map json into dict objects.\r\n\r\nE.g. run this\r\n\r\n```python\r\nimport json\r\nfrom hamcrest import *\r\n\r\njson_obj = \"\"\"\r\n  {\r\n    \"flat\": \"easy to match\",\r\n    \"nested\": {\r\n      \"n1\": \"find me\",\r\n      \"n2\": \"ignore me\"\r\n    }\r\n  }\r\n  \"\"\"\r\njson_find_all = \"\"\"\r\n  {\r\n    \"nested\": {\r\n      \"n1\": \"find me\",\r\n      \"n2\": \"ignore me\"\r\n    }\r\n  }\r\n  \"\"\"\r\njson_find_some = \"\"\"\r\n  {\r\n    \"nested\": {\r\n      \"n1\": \"find me\"\r\n    }\r\n  }\r\n  \"\"\"\r\ndict_obj = json.loads(json_obj)\r\ndict_find_all = json.loads(json_find_all)\r\ndict_find_some = json.loads(json_find_some)\r\nassert_that(dict_obj, has_entries(dict_find_all))\r\nprint(\"can find full nested match\")\r\nassert_that(dict_obj, has_entries(dict_find_some))\r\nprint(\"can't find partial nested match\")\r\n```\r\n\r\nAnd note the output\r\n\r\n```\r\ncan find full nested match\r\nTraceback (most recent call last):\r\n  File \"hamcrest_nested_dict.py\", line 33, in <module>\r\n    assert_that(dict_obj, has_entries(dict_find_some))\r\n  File \"/home/a211278l/.local/lib/python3.5/site-packages/hamcrest/core/assert_that.py\", line 43, in assert_that\r\n    _assert_match(actual=arg1, matcher=arg2, reason=arg3)\r\n  File \"/home/a211278l/.local/lib/python3.5/site-packages/hamcrest/core/assert_that.py\", line 57, in _assert_match\r\n    raise AssertionError(description)\r\nAssertionError: \r\nExpected: a dictionary containing {'nested': <{'n1': 'find me'}>}\r\n     but: value for 'nested' was <{'n2': 'ignore me', 'n1': 'find me'}>\r\n``` \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/74", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/74/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/74/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/74", "id": 221881499, "node_id": "MDU6SXNzdWUyMjE4ODE0OTk=", "number": 74, "title": "documentation link is not working", "user": {"login": "ponty", "id": 584643, "node_id": "MDQ6VXNlcjU4NDY0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/584643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ponty", "html_url": "https://github.com/ponty", "followers_url": "https://api.github.com/users/ponty/followers", "following_url": "https://api.github.com/users/ponty/following{/other_user}", "gists_url": "https://api.github.com/users/ponty/gists{/gist_id}", "starred_url": "https://api.github.com/users/ponty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ponty/subscriptions", "organizations_url": "https://api.github.com/users/ponty/orgs", "repos_url": "https://api.github.com/users/ponty/repos", "events_url": "https://api.github.com/users/ponty/events{/privacy}", "received_events_url": "https://api.github.com/users/ponty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-14T20:08:22Z", "updated_at": "2018-12-20T07:33:24Z", "closed_at": "2018-12-20T07:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "documentation link is not working in README:\r\n\r\n```\r\n.. _Documentation: http://readthedocs.org/docs/pyhamcrest/en/V1.8.2/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/73", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/73/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/73/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/73", "id": 212104388, "node_id": "MDU6SXNzdWUyMTIxMDQzODg=", "number": 73, "title": "Not catching the SystemExit exception", "user": {"login": "danodonovan", "id": 156329, "node_id": "MDQ6VXNlcjE1NjMyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/156329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danodonovan", "html_url": "https://github.com/danodonovan", "followers_url": "https://api.github.com/users/danodonovan/followers", "following_url": "https://api.github.com/users/danodonovan/following{/other_user}", "gists_url": "https://api.github.com/users/danodonovan/gists{/gist_id}", "starred_url": "https://api.github.com/users/danodonovan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danodonovan/subscriptions", "organizations_url": "https://api.github.com/users/danodonovan/orgs", "repos_url": "https://api.github.com/users/danodonovan/repos", "events_url": "https://api.github.com/users/danodonovan/events{/privacy}", "received_events_url": "https://api.github.com/users/danodonovan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-06T12:11:02Z", "updated_at": "2019-02-16T14:59:00Z", "closed_at": "2019-02-16T14:59:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`PyHamcrest==1.9.0`\r\n\r\nI'm having trouble catching the `SystemExit` exception with `calling, raises`. Example gist\r\n\r\nhttps://gist.github.com/danodonovan/042e1c74ea76cbea39b42f5c8733ede0\r\n\r\nBriefly;\r\n\r\n    def call_exit():\r\n        raise SystemExit\r\n\r\n    assert_that(calling(call_exit), raises(SystemExit))\r\n\r\nfails as `SystemExit` is called, rather than caught.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/72", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/72/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/72/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/72", "id": 198722848, "node_id": "MDU6SXNzdWUxOTg3MjI4NDg=", "number": 72, "title": "Output of has_properties over verbose", "user": {"login": "keis", "id": 125062, "node_id": "MDQ6VXNlcjEyNTA2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/125062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keis", "html_url": "https://github.com/keis", "followers_url": "https://api.github.com/users/keis/followers", "following_url": "https://api.github.com/users/keis/following{/other_user}", "gists_url": "https://api.github.com/users/keis/gists{/gist_id}", "starred_url": "https://api.github.com/users/keis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keis/subscriptions", "organizations_url": "https://api.github.com/users/keis/orgs", "repos_url": "https://api.github.com/users/keis/repos", "events_url": "https://api.github.com/users/keis/events{/privacy}", "received_events_url": "https://api.github.com/users/keis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brunns", "id": 227768, "node_id": "MDQ6VXNlcjIyNzc2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/227768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunns", "html_url": "https://github.com/brunns", "followers_url": "https://api.github.com/users/brunns/followers", "following_url": "https://api.github.com/users/brunns/following{/other_user}", "gists_url": "https://api.github.com/users/brunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunns/subscriptions", "organizations_url": "https://api.github.com/users/brunns/orgs", "repos_url": "https://api.github.com/users/brunns/repos", "events_url": "https://api.github.com/users/brunns/events{/privacy}", "received_events_url": "https://api.github.com/users/brunns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-01-04T14:42:12Z", "updated_at": "2020-01-07T15:38:01Z", "closed_at": "2020-01-07T15:38:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think the mismatch description of has_porperties is very verbose and actually making readability worse.\r\n\r\n```\r\nassert_that(b, has_properties(x=6))\r\nExpected: (an object with a property 'x' matching <6>)\r\n     but: an object with a property 'x' matching <6> property 'x' was <7>\r\n```\r\n\r\nthis is from all_of repeating the offending matcher, which does make sense when the user composes various matchers. But has_properties to the user is a single matcher and the output is only confusing if you don't know it's made up of multiple matchers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/68", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/68/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/68/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/68", "id": 154956785, "node_id": "MDU6SXNzdWUxNTQ5NTY3ODU=", "number": 68, "title": "Missing git tag for 1.9.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-16T04:04:14Z", "updated_at": "2016-10-01T21:56:01Z", "closed_at": "2016-10-01T21:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep the git tags and pypi releases in sync :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/66", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/66/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/66/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/66", "id": 146969541, "node_id": "MDU6SXNzdWUxNDY5Njk1NDE=", "number": 66, "title": "Bad naming of `contains` matcher", "user": {"login": "tsouvarev", "id": 692040, "node_id": "MDQ6VXNlcjY5MjA0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/692040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsouvarev", "html_url": "https://github.com/tsouvarev", "followers_url": "https://api.github.com/users/tsouvarev/followers", "following_url": "https://api.github.com/users/tsouvarev/following{/other_user}", "gists_url": "https://api.github.com/users/tsouvarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsouvarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsouvarev/subscriptions", "organizations_url": "https://api.github.com/users/tsouvarev/orgs", "repos_url": "https://api.github.com/users/tsouvarev/repos", "events_url": "https://api.github.com/users/tsouvarev/events{/privacy}", "received_events_url": "https://api.github.com/users/tsouvarev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-08T16:02:46Z", "updated_at": "2019-02-16T14:56:53Z", "closed_at": "2019-02-16T14:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a lot of confusion about `contains` matcher, because it seems like `contains` should check if matched sequence contains provided one. But it matches entire sequence. \n\nMaybe you can add alias, like `matches` or something like that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/65", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/65/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/65/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/65", "id": 145625055, "node_id": "MDU6SXNzdWUxNDU2MjUwNTU=", "number": 65, "title": "Clarification/Question Exception Handling", "user": {"login": "Govinda-Fichtner", "id": 598566, "node_id": "MDQ6VXNlcjU5ODU2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/598566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Govinda-Fichtner", "html_url": "https://github.com/Govinda-Fichtner", "followers_url": "https://api.github.com/users/Govinda-Fichtner/followers", "following_url": "https://api.github.com/users/Govinda-Fichtner/following{/other_user}", "gists_url": "https://api.github.com/users/Govinda-Fichtner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Govinda-Fichtner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Govinda-Fichtner/subscriptions", "organizations_url": "https://api.github.com/users/Govinda-Fichtner/orgs", "repos_url": "https://api.github.com/users/Govinda-Fichtner/repos", "events_url": "https://api.github.com/users/Govinda-Fichtner/events{/privacy}", "received_events_url": "https://api.github.com/users/Govinda-Fichtner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-04T09:03:53Z", "updated_at": "2019-08-04T07:38:20Z", "closed_at": "2019-08-04T07:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following test and I wonder how I am supposed to test it properly with PyHamcrest:\n\n```\n    def test_function_with_one_required_param_missing(self):\n\n        @ParamsValidator(required=['foo'])\n        def function_with_params(event, context):\n            return [event, context]\n\n        event = {}\n        context = LambdaContext()\n\n        assert_that(calling(function_with_params).with_args(event, context), raises(KeyError, \"400:Parameter missing.\"))\n```\n\nIt seems that this test is always passing no matter what I do in the decorator. If I raise an KeyError exception or not the test is still passing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/61", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/61/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/61/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/61", "id": 111715437, "node_id": "MDU6SXNzdWUxMTE3MTU0Mzc=", "number": 61, "title": "fails on unicode comparison", "user": {"login": "letsautom8", "id": 11028870, "node_id": "MDQ6VXNlcjExMDI4ODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/11028870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letsautom8", "html_url": "https://github.com/letsautom8", "followers_url": "https://api.github.com/users/letsautom8/followers", "following_url": "https://api.github.com/users/letsautom8/following{/other_user}", "gists_url": "https://api.github.com/users/letsautom8/gists{/gist_id}", "starred_url": "https://api.github.com/users/letsautom8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letsautom8/subscriptions", "organizations_url": "https://api.github.com/users/letsautom8/orgs", "repos_url": "https://api.github.com/users/letsautom8/repos", "events_url": "https://api.github.com/users/letsautom8/events{/privacy}", "received_events_url": "https://api.github.com/users/letsautom8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-10-15T21:52:19Z", "updated_at": "2019-02-16T14:56:36Z", "closed_at": "2019-02-16T14:56:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nassert_that(u'a\u0304',equal_to(u'Ma\u0304'))\n```\n\nProduces no output\n\nWhile\n\n```\nassert_that('a\u0304',equal_to('Ma\u0304'))\n```\n\nTriggers an error:\n\n```\n File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/assert_that.py\", line 43, in assert_that\n    _assert_match(actual=arg1, matcher=arg2, reason=arg3)\n  File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/assert_that.py\", line 53, in _assert_match\n    .append_description_of(matcher)  \\\n  File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/base_description.py\", line 25, in append_description_of\n    value.describe_to(self)\n  File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/core/isequal.py\", line 21, in describe_to\n    description.append_description_of(self.object)\n  File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/base_description.py\", line 29, in append_description_of\n    self.append_string_in_python_syntax(value)\n  File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/base_description.py\", line 78, in append_string_in_python_syntax\n    self.append(character_in_python_syntax(ch))\n  File \"/Users/testmachine/.virtualenvs/proj/lib/python2.7/site-packages/hamcrest/core/string_description.py\", line 38, in append\n    self.out += six.text_type(string)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xcc in position 0: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/58", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/58/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/58/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/58", "id": 97959059, "node_id": "MDU6SXNzdWU5Nzk1OTA1OQ==", "number": 58, "title": "Move chrisr/pybuilder to a separate repo?", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-07-29T15:11:13Z", "updated_at": "2015-07-31T19:13:24Z", "closed_at": "2015-07-31T14:35:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I wonder if it makes sense to move `chrisr/pybuilder` out of PyHamcrest to its own GitHub repo? Though you probably developed it for PyHamcrest, I think it is a generally useful tool and it deserves its own repo.\n\nBecause the Docker image name is `chrisr/pybuilder` and it took me a bit of time to find the GitHub repo and verify that I had found the right thing (not _that_ long, but still).\n\nMy thought was that maybe you could make it easier for contributors by:\n1. Make a separate `chrisr/pybuilder` (or another name if you prefer) GitHub repo so it matches the name of the Docker container.\n2. Link to said GitHub repo from [your blog post](http://ideas.offby1.net/posts/docker-runner-for-tox.html), which was what I stumbled on when Googling for \"docker tox\".\n\nThoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/56", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/56/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/56/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/56", "id": 95939177, "node_id": "MDU6SXNzdWU5NTkzOTE3Nw==", "number": 56, "title": "Change in behavior between 1.8.3 and 1.8.4 Python 2.7.10", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-19T18:37:05Z", "updated_at": "2015-07-19T23:53:35Z", "closed_at": "2015-07-19T22:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following statements work fine in 1.8.3\nfrom hamcrest import is_\nfrom hamcrest import assert_that\nresult = ()\nassert_that(result, is_(()))\n\nHowever in 1.8.4. I get\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"build/bdist.macosx-10.10-x86_64/egg/hamcrest/core/assert_that.py\", line 43, in assert_that\n  File \"build/bdist.macosx-10.10-x86_64/egg/hamcrest/core/assert_that.py\", line 57, in _assert_match\nAssertionError: \nExpected: an instance of one of \n     but: was <()>\n\nThanks a lot\n\nCarlos\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/52", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/52/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/52/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/52", "id": 67196015, "node_id": "MDU6SXNzdWU2NzE5NjAxNQ==", "number": 52, "title": "equal_to behaves badly with bytes", "user": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-08T18:59:57Z", "updated_at": "2015-04-10T18:22:00Z", "closed_at": "2015-04-10T18:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`assert_that(b'foo', equal_to(b'bar'))` should fail cleanly, but instead it hits a TypeError inside hamcrest.\n\n``` python\nPython 3.4.3 (default, Mar 25 2015, 17:13:50) \n[GCC 4.9.2 20150304 (prerelease)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from hamcrest import *\n>>> assert_that(b'foo', equal_to(b'bar'))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/assert_that.py\", line 43, in assert_that\n    _assert_match(actual=arg1, matcher=arg2, reason=arg3)\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/assert_that.py\", line 53, in _assert_match\n    .append_description_of(matcher)  \\\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/base_description.py\", line 25, in append_description_of\n    value.describe_to(self)\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/core/isequal.py\", line 21, in describe_to\n    description.append_description_of(self.object)\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/base_description.py\", line 29, in append_description_of\n    self.append_string_in_python_syntax(value)\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/base_description.py\", line 78, in append_string_in_python_syntax\n    self.append(character_in_python_syntax(ch))\n  File \"/home/jacko/.local/lib/python3.4/site-packages/hamcrest/core/string_description.py\", line 34, in append\n    self.out += string\nTypeError: Can't convert 'int' object to str implicitly\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/51", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/51/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/51/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/51", "id": 58475681, "node_id": "MDU6SXNzdWU1ODQ3NTY4MQ==", "number": 51, "title": "pyhamcrest-1.8.2 missing sdist on pypi", "user": {"login": "alunduil", "id": 169249, "node_id": "MDQ6VXNlcjE2OTI0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/169249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alunduil", "html_url": "https://github.com/alunduil", "followers_url": "https://api.github.com/users/alunduil/followers", "following_url": "https://api.github.com/users/alunduil/following{/other_user}", "gists_url": "https://api.github.com/users/alunduil/gists{/gist_id}", "starred_url": "https://api.github.com/users/alunduil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alunduil/subscriptions", "organizations_url": "https://api.github.com/users/alunduil/orgs", "repos_url": "https://api.github.com/users/alunduil/repos", "events_url": "https://api.github.com/users/alunduil/events{/privacy}", "received_events_url": "https://api.github.com/users/alunduil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-21T21:26:03Z", "updated_at": "2015-02-21T22:19:27Z", "closed_at": "2015-02-21T22:19:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed while packaging pyhamcrest that the sdist is not on pypi.  Is this an oversight or by design?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/50", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/50/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/50/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/50", "id": 58214873, "node_id": "MDU6SXNzdWU1ODIxNDg3Mw==", "number": 50, "title": "PyPI documentation links", "user": {"login": "sduthil", "id": 5632013, "node_id": "MDQ6VXNlcjU2MzIwMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5632013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sduthil", "html_url": "https://github.com/sduthil", "followers_url": "https://api.github.com/users/sduthil/followers", "following_url": "https://api.github.com/users/sduthil/following{/other_user}", "gists_url": "https://api.github.com/users/sduthil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sduthil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sduthil/subscriptions", "organizations_url": "https://api.github.com/users/sduthil/orgs", "repos_url": "https://api.github.com/users/sduthil/repos", "events_url": "https://api.github.com/users/sduthil/events{/privacy}", "received_events_url": "https://api.github.com/users/sduthil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-19T14:29:59Z", "updated_at": "2015-02-21T18:17:14Z", "closed_at": "2015-02-21T18:17:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not a code issue, but on the [PyPI page of PyHamcrest](https://pypi.python.org/pypi/PyHamcrest), there are three links to the documentation: \n1. one at the very beginning\n2. one in the \"More resources\" section\n3. one in the package metadata, between Author and Homepage\n\nNumber 1 and 3 link to an [old version of PyHamcrest (1.6) hosted on pyhosted.org](http://pythonhosted.org//PyHamcrest/), where no newer documentation is available\nNumber 2 links to a [non-existing version of PyHamcrest (1.7.1) hosted on readthedocs.org](https://pyhamcrest.readthedocs.org/en/V1.7.1/), where the latest documentation is available.\n\nNumber 1 is particularly misleading, because it is very visible, being at the beginning of the page, and links to an old version of the documentation, where, for example, the `matches_regexp` matcher does not exist.\n\nCould you please fix these three links, so that they link to the latest documentation on readthedocs.org ?\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/46", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/46/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/46/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/46", "id": 40548875, "node_id": "MDU6SXNzdWU0MDU0ODg3NQ==", "number": 46, "title": "openSuSE packages available for pyhamcrest! ", "user": {"login": "lowks", "id": 517395, "node_id": "MDQ6VXNlcjUxNzM5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/517395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowks", "html_url": "https://github.com/lowks", "followers_url": "https://api.github.com/users/lowks/followers", "following_url": "https://api.github.com/users/lowks/following{/other_user}", "gists_url": "https://api.github.com/users/lowks/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowks/subscriptions", "organizations_url": "https://api.github.com/users/lowks/orgs", "repos_url": "https://api.github.com/users/lowks/repos", "events_url": "https://api.github.com/users/lowks/events{/privacy}", "received_events_url": "https://api.github.com/users/lowks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-19T01:06:35Z", "updated_at": "2014-08-19T05:09:42Z", "closed_at": "2014-08-19T05:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have created and submitted pyhamcrest to the official openSuSE python devel language repository and they have been accepted. So good news for all those pyhamcrest openSuSE users. Packages available here:\n\nhttp://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_13.1/noarch/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/39", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/39/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/39/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/39", "id": 18983459, "node_id": "MDU6SXNzdWUxODk4MzQ1OQ==", "number": 39, "title": "Import is_empty into the global namespace.", "user": {"login": "offbyone", "id": 181693, "node_id": "MDQ6VXNlcjE4MTY5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/181693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offbyone", "html_url": "https://github.com/offbyone", "followers_url": "https://api.github.com/users/offbyone/followers", "following_url": "https://api.github.com/users/offbyone/following{/other_user}", "gists_url": "https://api.github.com/users/offbyone/gists{/gist_id}", "starred_url": "https://api.github.com/users/offbyone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offbyone/subscriptions", "organizations_url": "https://api.github.com/users/offbyone/orgs", "repos_url": "https://api.github.com/users/offbyone/repos", "events_url": "https://api.github.com/users/offbyone/events{/privacy}", "received_events_url": "https://api.github.com/users/offbyone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-04T16:55:36Z", "updated_at": "2013-10-18T05:28:37Z", "closed_at": "2013-10-18T05:28:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/38", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/38/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/38/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/38", "id": 18932216, "node_id": "MDU6SXNzdWUxODkzMjIxNg==", "number": 38, "title": "Suppress tracebacks in py.test", "user": {"login": "offbyone", "id": 181693, "node_id": "MDQ6VXNlcjE4MTY5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/181693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offbyone", "html_url": "https://github.com/offbyone", "followers_url": "https://api.github.com/users/offbyone/followers", "following_url": "https://api.github.com/users/offbyone/following{/other_user}", "gists_url": "https://api.github.com/users/offbyone/gists{/gist_id}", "starred_url": "https://api.github.com/users/offbyone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offbyone/subscriptions", "organizations_url": "https://api.github.com/users/offbyone/orgs", "repos_url": "https://api.github.com/users/offbyone/repos", "events_url": "https://api.github.com/users/offbyone/events{/privacy}", "received_events_url": "https://api.github.com/users/offbyone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-03T19:07:39Z", "updated_at": "2013-09-04T13:41:50Z", "closed_at": "2013-09-04T13:41:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/37", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/37/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/37/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/37", "id": 17952853, "node_id": "MDU6SXNzdWUxNzk1Mjg1Mw==", "number": 37, "title": "Extracting matches?", "user": {"login": "louisdang", "id": 2512750, "node_id": "MDQ6VXNlcjI1MTI3NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2512750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louisdang", "html_url": "https://github.com/louisdang", "followers_url": "https://api.github.com/users/louisdang/followers", "following_url": "https://api.github.com/users/louisdang/following{/other_user}", "gists_url": "https://api.github.com/users/louisdang/gists{/gist_id}", "starred_url": "https://api.github.com/users/louisdang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louisdang/subscriptions", "organizations_url": "https://api.github.com/users/louisdang/orgs", "repos_url": "https://api.github.com/users/louisdang/repos", "events_url": "https://api.github.com/users/louisdang/events{/privacy}", "received_events_url": "https://api.github.com/users/louisdang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-12T17:16:04Z", "updated_at": "2013-08-15T11:12:44Z", "closed_at": "2013-08-14T06:11:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a reoccuring problem in my work, say you have a nested dict/json that looks like this:\n\n``` python\n{\n    \"louis\": {\n        \"address\": {\n            \"city\": seattle\n            \"zip\": 54321\n        }\n        \"phone\": [\n            \"555-555-5555\"\n            \"555-555-5556\"\n        ]\n    }\n    \"chris\": {\n        \"address\": {\n            \"city\": seattle\n            \"zip\": 12345\n        }\n        \"phone\": [\n            \"555-555-5557\"\n            \"555-555-5558\"\n        ]\n    }\n    \"jeremy\": {\n        \"address\": {\n            \"zip\": 34567,\n            \"city\": \"seattle\" \n        }\n        \"phone\": [\n            \"555-555-5559\"\n            \"555-555-5510\"\n        ]\n    }\n}\n```\n\nSay we want to extract every phone number of everyone in Seattle. Can we add a kwarg to extract nested matches like a named group in regex? \n\nDoes it make sense and is it possible to be able to do it in hamcrest like this:\n\n``` python\nmatcher = has_entries(has_entries(city=has_entry(address=\"seattle\"), phone=anything(name=\"phone\")))\nm = matcher.matches(directory)\nphone_numbers = m.group(\"phone\")\n```\n\nInstead of:\n\n``` python\nphone_numbers = [phone_number \n                 for attributes in directory.values() \n                 for phone_list in attributes['phone'] \n                 for phone_number in phone_list \n                 if attributes['address']['city'] == \"seattle\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/36", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/36/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/36/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/36", "id": 17401675, "node_id": "MDU6SXNzdWUxNzQwMTY3NQ==", "number": 36, "title": "has_items clarification", "user": {"login": "adamc55", "id": 456429, "node_id": "MDQ6VXNlcjQ1NjQyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/456429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamc55", "html_url": "https://github.com/adamc55", "followers_url": "https://api.github.com/users/adamc55/followers", "following_url": "https://api.github.com/users/adamc55/following{/other_user}", "gists_url": "https://api.github.com/users/adamc55/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamc55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamc55/subscriptions", "organizations_url": "https://api.github.com/users/adamc55/orgs", "repos_url": "https://api.github.com/users/adamc55/repos", "events_url": "https://api.github.com/users/adamc55/events{/privacy}", "received_events_url": "https://api.github.com/users/adamc55/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-30T15:19:18Z", "updated_at": "2013-07-30T17:20:50Z", "closed_at": "2013-07-30T17:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for has_items says \"match if all given items appear in the list, in any order\"\n\nBut \n\n```\nfrom hamcrest import *\nlst1 = ['a', 'b', 'c', 'd']\nlst2 = ['a', 'c']\nassert_that(lst1, has_items(lst2), 'test has_items')\n```\n\nraises an assertion error. I'm not totally sure what the intent of has_items is (the documentation is pretty terse), but I think either the docs need improving or there is a failure in the implementation. Certainly, lst1 does have the items in lst2...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/32", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/32/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/32/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/32", "id": 13943678, "node_id": "MDU6SXNzdWUxMzk0MzY3OA==", "number": 32, "title": "matches_regexp is not exported", "user": {"login": "shidesthewise", "id": 4333316, "node_id": "MDQ6VXNlcjQzMzMzMTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4333316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shidesthewise", "html_url": "https://github.com/shidesthewise", "followers_url": "https://api.github.com/users/shidesthewise/followers", "following_url": "https://api.github.com/users/shidesthewise/following{/other_user}", "gists_url": "https://api.github.com/users/shidesthewise/gists{/gist_id}", "starred_url": "https://api.github.com/users/shidesthewise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shidesthewise/subscriptions", "organizations_url": "https://api.github.com/users/shidesthewise/orgs", "repos_url": "https://api.github.com/users/shidesthewise/repos", "events_url": "https://api.github.com/users/shidesthewise/events{/privacy}", "received_events_url": "https://api.github.com/users/shidesthewise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-03T17:17:26Z", "updated_at": "2013-08-14T06:11:26Z", "closed_at": "2013-08-14T06:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "the __init__.py for hamcrest.library.text is missing from stringmatches import matches_regexp\nthe __init__.py for hamcrest.library is missing  'matches_regexp', in the **all** list\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/23", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/23/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/23/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/23", "id": 3110673, "node_id": "MDU6SXNzdWUzMTEwNjcz", "number": 23, "title": "Define two collection matchers for collection metadata", "user": {"login": "offbyone", "id": 181693, "node_id": "MDQ6VXNlcjE4MTY5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/181693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offbyone", "html_url": "https://github.com/offbyone", "followers_url": "https://api.github.com/users/offbyone/followers", "following_url": "https://api.github.com/users/offbyone/following{/other_user}", "gists_url": "https://api.github.com/users/offbyone/gists{/gist_id}", "starred_url": "https://api.github.com/users/offbyone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offbyone/subscriptions", "organizations_url": "https://api.github.com/users/offbyone/orgs", "repos_url": "https://api.github.com/users/offbyone/repos", "events_url": "https://api.github.com/users/offbyone/events{/privacy}", "received_events_url": "https://api.github.com/users/offbyone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-02-06T16:46:26Z", "updated_at": "2012-02-26T08:31:40Z", "closed_at": "2012-02-26T08:31:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "1. has_length() -- responds to the **len** protocol method with a matching value\n2. empty() -- equivalent to has_length(0); primarily semantic sugar.\n   - alternately this could be anything falselike, but I'd rather specifically deal with types that are collections.\n\nThis issue is submitted because I don't want to forget about this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/20", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/20/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/20/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/20", "id": 2673155, "node_id": "MDU6SXNzdWUyNjczMTU1", "number": 20, "title": "Sequence matchers in library.collections should match generators as well.", "user": {"login": "offbyone", "id": 181693, "node_id": "MDQ6VXNlcjE4MTY5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/181693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offbyone", "html_url": "https://github.com/offbyone", "followers_url": "https://api.github.com/users/offbyone/followers", "following_url": "https://api.github.com/users/offbyone/following{/other_user}", "gists_url": "https://api.github.com/users/offbyone/gists{/gist_id}", "starred_url": "https://api.github.com/users/offbyone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offbyone/subscriptions", "organizations_url": "https://api.github.com/users/offbyone/orgs", "repos_url": "https://api.github.com/users/offbyone/repos", "events_url": "https://api.github.com/users/offbyone/events{/privacy}", "received_events_url": "https://api.github.com/users/offbyone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-12-28T17:41:30Z", "updated_at": "2012-02-05T17:36:21Z", "closed_at": "2012-02-05T17:36:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(This is more by way of a tracking bug; found this at work, but can't fix on company time.)\n\nIt should be possible to do something like this:\n\n```\ndef my_generator():\n    for some_sequence:\n        yield a_value()\n\nassert_that(my_generator(), only_contains(something_matched))\n```\n\nRight now, it's necessary to wrap the generator:\n\n```\nassert_that(list(my_generator()), only_contains(something_matched))\n```\n\nThat's not very nice to work with.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/15", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/15/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/15/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/15", "id": 1331402, "node_id": "MDU6SXNzdWUxMzMxNDAy", "number": 15, "title": "confused by github", "user": {"login": "sarming", "id": 33971, "node_id": "MDQ6VXNlcjMzOTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/33971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarming", "html_url": "https://github.com/sarming", "followers_url": "https://api.github.com/users/sarming/followers", "following_url": "https://api.github.com/users/sarming/following{/other_user}", "gists_url": "https://api.github.com/users/sarming/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarming/subscriptions", "organizations_url": "https://api.github.com/users/sarming/orgs", "repos_url": "https://api.github.com/users/sarming/repos", "events_url": "https://api.github.com/users/sarming/events{/privacy}", "received_events_url": "https://api.github.com/users/sarming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-08-02T17:03:11Z", "updated_at": "2011-08-02T17:19:09Z", "closed_at": "2011-08-02T17:19:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/14", "repository_url": "https://api.github.com/repos/hamcrest/PyHamcrest", "labels_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/14/comments", "events_url": "https://api.github.com/repos/hamcrest/PyHamcrest/issues/14/events", "html_url": "https://github.com/hamcrest/PyHamcrest/issues/14", "id": 880894, "node_id": "MDU6SXNzdWU4ODA4OTQ=", "number": 14, "title": "is_ and instance_of matchers not working properly?", "user": {"login": "bjh", "id": 299837, "node_id": "MDQ6VXNlcjI5OTgzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/299837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjh", "html_url": "https://github.com/bjh", "followers_url": "https://api.github.com/users/bjh/followers", "following_url": "https://api.github.com/users/bjh/following{/other_user}", "gists_url": "https://api.github.com/users/bjh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjh/subscriptions", "organizations_url": "https://api.github.com/users/bjh/orgs", "repos_url": "https://api.github.com/users/bjh/repos", "events_url": "https://api.github.com/users/bjh/events{/privacy}", "received_events_url": "https://api.github.com/users/bjh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2011-05-11T02:49:19Z", "updated_at": "2011-12-08T05:36:05Z", "closed_at": "2011-12-08T05:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I feel like the wrong thing is happening with these two matchers.\nI am new to Python (coming from Ruby) so I might be using the matchers wrong but I did come across this by going through your PyHamcrest tutorial.\n\nIt was all working just fine until I got to the _is__ and _instance_of_ part of the tutorial\n\n``` python\nassert_that(theBiscuit, instance_of(Biscuit))\nassert_that(theBiscuit, is_(instance_of(Biscuit)))\nassert_that(theBiscuit, is_(Biscuit))\n```\n\nThese did not work at all so I started to play around.\nOnce I made a change to the two places that _type_ is used in the code things started working. \nBut (the big butt), I am very new to Python so I could be making wrong assumptions about what the code is doing.\n\nThe following code all works after the two edits but the PyHamcrest unit tests start blowing up.\n\n``` python\n# tested using python 2.7.1 on mac osx 10.6.7 [snow leopard]\n# python was installed from Homebrew - http://mxcl.github.com/homebrew/\n\n# changed core/core/isinstanceof.py\n# on line: 12\n# from: if not isinstance(expected_type, type):\n# to: if not isinstance(expected_type, type(expected_type)):\n# and the same to core/core/is_.py \n# on line: 38 \n# changed type to type(x)\n\nfrom hamcrest import assert_that, instance_of, is_, is_not\n\nclass Biscuit():\n    pass\n\nclass Cookie(Biscuit):\n    pass\n\nclass Bench():\n    pass\n\nbiscuit = Biscuit()\n\nassert_that(biscuit, is_(Biscuit), 'you are a Biscuit')\nassert_that(biscuit, instance_of(Biscuit), 'you are still a Biscuit')\nassert_that(biscuit, is_not(instance_of(Cookie)), 'you are NOT Cookie')\nassert_that(biscuit, is_not(Cookie), 'you are NOT a Cookie')\n\n# inheritance\ncookie = Cookie()\nassert_that(cookie, instance_of(Cookie), 'you are a Cookie')\nassert_that(cookie, instance_of(Biscuit), 'you are also a Biscuit')\n\nassert_that(cookie, is_(Cookie), 'you are a Cookie')\nassert_that(cookie, is_(Biscuit), 'you are also a Biscuit')\n\n\n# assuming the semantics of is_not are the same as is_\n# i.e. understands when to use instanceof vs. a value test\nassert_that(biscuit, is_not(is_(Bench)), 'you are not a Bench')\n\n# passes but it should fail\nassert_that(biscuit, is_not(Biscuit), 'you are a biscuit that should fail')\n\n# this blows up properly\ntry:\n    assert_that(biscuit, is_not(instance_of(Biscuit)), 'all good in the hood')\nexcept:\n    \"this throws the expected exception because it is a Biscuit\"\n\n```\n", "performed_via_github_app": null, "score": 1.0}]}