{"total_count": 117, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/186", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/186/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/186/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/186", "id": 668979177, "node_id": "MDU6SXNzdWU2Njg5NzkxNzc=", "number": 186, "title": "default_timeout not passed properly from `SASLMemcachedCache.__init__()` to `MemcachedCache.__init__()`", "user": {"login": "sonologic", "id": 694584, "node_id": "MDQ6VXNlcjY5NDU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/694584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonologic", "html_url": "https://github.com/sonologic", "followers_url": "https://api.github.com/users/sonologic/followers", "following_url": "https://api.github.com/users/sonologic/following{/other_user}", "gists_url": "https://api.github.com/users/sonologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonologic/subscriptions", "organizations_url": "https://api.github.com/users/sonologic/orgs", "repos_url": "https://api.github.com/users/sonologic/repos", "events_url": "https://api.github.com/users/sonologic/events{/privacy}", "received_events_url": "https://api.github.com/users/sonologic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-30T17:05:31Z", "updated_at": "2020-08-09T11:38:55Z", "closed_at": "2020-08-09T11:38:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The offending line:\r\n\r\nhttps://github.com/sh4nks/flask-caching/blob/5eef6738430a6887fce03552cb2438501e3dc741/flask_caching/backends/memcache.py#L236\r\n\r\nI believe this should be:\r\n\r\n```\r\nsuper(SASLMemcachedCache, self).__init__(default_timeout=default_timeout)\r\n```\r\n\r\nDue to this the setting for `CACHE_DEFAULT_TIMEOUT` is ignored when `CACHE_TYPE` is `saslmemcached`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/185", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/185/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/185/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/185", "id": 663619445, "node_id": "MDU6SXNzdWU2NjM2MTk0NDU=", "number": 185, "title": "Bugs: Not passing the parameter kwargs", "user": {"login": "mrliaocn", "id": 11461707, "node_id": "MDQ6VXNlcjExNDYxNzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/11461707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrliaocn", "html_url": "https://github.com/mrliaocn", "followers_url": "https://api.github.com/users/mrliaocn/followers", "following_url": "https://api.github.com/users/mrliaocn/following{/other_user}", "gists_url": "https://api.github.com/users/mrliaocn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrliaocn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrliaocn/subscriptions", "organizations_url": "https://api.github.com/users/mrliaocn/orgs", "repos_url": "https://api.github.com/users/mrliaocn/repos", "events_url": "https://api.github.com/users/mrliaocn/events{/privacy}", "received_events_url": "https://api.github.com/users/mrliaocn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T09:36:18Z", "updated_at": "2020-07-26T17:56:17Z", "closed_at": "2020-07-26T17:56:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not passing the parameter kwargs in function _memoize_make_cache_key.make_cache_key when set forced_update.See: #184 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/183", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/183/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/183/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/183", "id": 662859392, "node_id": "MDU6SXNzdWU2NjI4NTkzOTI=", "number": 183, "title": "Set CACHE_DEFAULT_TIMEOUT to never expire", "user": {"login": "ShipraShalini", "id": 9088430, "node_id": "MDQ6VXNlcjkwODg0MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9088430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShipraShalini", "html_url": "https://github.com/ShipraShalini", "followers_url": "https://api.github.com/users/ShipraShalini/followers", "following_url": "https://api.github.com/users/ShipraShalini/following{/other_user}", "gists_url": "https://api.github.com/users/ShipraShalini/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShipraShalini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShipraShalini/subscriptions", "organizations_url": "https://api.github.com/users/ShipraShalini/orgs", "repos_url": "https://api.github.com/users/ShipraShalini/repos", "events_url": "https://api.github.com/users/ShipraShalini/events{/privacy}", "received_events_url": "https://api.github.com/users/ShipraShalini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T10:34:02Z", "updated_at": "2020-07-26T17:50:22Z", "closed_at": "2020-07-26T17:50:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like a cache key to be deleted based on an event, I would like to set `CACHE_DEFAULT_TIMEOUT` in such a way that the key doesn't expire. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/182", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/182/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/182/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/182", "id": 660173774, "node_id": "MDU6SXNzdWU2NjAxNzM3NzQ=", "number": 182, "title": "improve observability", "user": {"login": "twosigmajab", "id": 40300730, "node_id": "MDQ6VXNlcjQwMzAwNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/40300730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twosigmajab", "html_url": "https://github.com/twosigmajab", "followers_url": "https://api.github.com/users/twosigmajab/followers", "following_url": "https://api.github.com/users/twosigmajab/following{/other_user}", "gists_url": "https://api.github.com/users/twosigmajab/gists{/gist_id}", "starred_url": "https://api.github.com/users/twosigmajab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twosigmajab/subscriptions", "organizations_url": "https://api.github.com/users/twosigmajab/orgs", "repos_url": "https://api.github.com/users/twosigmajab/repos", "events_url": "https://api.github.com/users/twosigmajab/events{/privacy}", "received_events_url": "https://api.github.com/users/twosigmajab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-18T14:13:29Z", "updated_at": "2020-07-28T11:18:36Z", "closed_at": "2020-07-26T17:49:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful to record basic events and metrics (cache size, hits, misses, evictions, etc.). I took a look through the docs and the code and didn't see anything about this. Even just logging these events when they occur at debug level would be a big improvement, to give users the option of having some more visibility into what the cache is actually doing. What do you think?\r\n\r\nP.S. Thanks for maintaining Flask-Caching!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/180", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/180/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/180/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/180", "id": 645926901, "node_id": "MDU6SXNzdWU2NDU5MjY5MDE=", "number": 180, "title": "Is there any way to cache only 200 responses?", "user": {"login": "mightymercado", "id": 11026445, "node_id": "MDQ6VXNlcjExMDI2NDQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/11026445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mightymercado", "html_url": "https://github.com/mightymercado", "followers_url": "https://api.github.com/users/mightymercado/followers", "following_url": "https://api.github.com/users/mightymercado/following{/other_user}", "gists_url": "https://api.github.com/users/mightymercado/gists{/gist_id}", "starred_url": "https://api.github.com/users/mightymercado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mightymercado/subscriptions", "organizations_url": "https://api.github.com/users/mightymercado/orgs", "repos_url": "https://api.github.com/users/mightymercado/repos", "events_url": "https://api.github.com/users/mightymercado/events{/privacy}", "received_events_url": "https://api.github.com/users/mightymercado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-26T00:24:40Z", "updated_at": "2020-06-26T01:20:02Z", "closed_at": "2020-06-26T01:20:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to cache only 200 OK responses from the server. if the response isn't 200, I don't want to cache the response.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/178", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/178/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/178/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/178", "id": 639310864, "node_id": "MDU6SXNzdWU2MzkzMTA4NjQ=", "number": 178, "title": "has no attribute 'has'", "user": {"login": "teamlyzer", "id": 30689205, "node_id": "MDQ6VXNlcjMwNjg5MjA1", "avatar_url": "https://avatars1.githubusercontent.com/u/30689205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamlyzer", "html_url": "https://github.com/teamlyzer", "followers_url": "https://api.github.com/users/teamlyzer/followers", "following_url": "https://api.github.com/users/teamlyzer/following{/other_user}", "gists_url": "https://api.github.com/users/teamlyzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamlyzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamlyzer/subscriptions", "organizations_url": "https://api.github.com/users/teamlyzer/orgs", "repos_url": "https://api.github.com/users/teamlyzer/repos", "events_url": "https://api.github.com/users/teamlyzer/events{/privacy}", "received_events_url": "https://api.github.com/users/teamlyzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-16T01:56:48Z", "updated_at": "2020-06-17T22:56:22Z", "closed_at": "2020-06-17T22:56:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI would like to understand the has()\r\n\r\n```\r\nself._read_clients.get(self._get_prefix() + key)\r\nself._read_clients.exists(self._get_prefix() + key)\r\n```\r\nThe get runs fine but the second I get 'Cache' object has no attribute 'has'. From docs \"This method is optional and may not be implemented on all caches.\"\r\n\r\nWhat this means exactly? Since the EXISTS cmd runs fine:\r\n\r\n127.0.0.1:6379[10]> EXISTS fcache_template_fragment_cache_all_overall\r\n(integer) 1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/177", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/177/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/177/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/177", "id": 637622740, "node_id": "MDU6SXNzdWU2Mzc2MjI3NDA=", "number": 177, "title": "ImportError: cannot import name 'import_string'", "user": {"login": "sonologic", "id": 694584, "node_id": "MDQ6VXNlcjY5NDU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/694584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonologic", "html_url": "https://github.com/sonologic", "followers_url": "https://api.github.com/users/sonologic/followers", "following_url": "https://api.github.com/users/sonologic/following{/other_user}", "gists_url": "https://api.github.com/users/sonologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonologic/subscriptions", "organizations_url": "https://api.github.com/users/sonologic/orgs", "repos_url": "https://api.github.com/users/sonologic/repos", "events_url": "https://api.github.com/users/sonologic/events{/privacy}", "received_events_url": "https://api.github.com/users/sonologic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T09:37:07Z", "updated_at": "2020-06-12T14:07:02Z", "closed_at": "2020-06-12T14:07:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following the documentation at https://pythonhosted.org/Flask-Caching/ i tried adding a cache to my app:\r\n\r\n```\r\nimport os\r\n\r\nfrom flask import Flask, render_template, request\r\nfrom flask_cache import Cache\r\n\r\nconfig = {\r\n    \"DEBUG\": True,          # some Flask specific configs\r\n    \"CACHE_TYPE\": \"filesystem\", # Flask-Caching related configs\r\n    \"CACHE_DEFAULT_TIMEOUT\": 300,\r\n    \"CACHE_IGNORE_ERRORS\": False,\r\n    \"CACHE_DIR\": os.path.join(os.path.dirname(__file__), 'cache'),\r\n    \"CACHE_THRESHOLD\": 100000000,\r\n    \"CACHE_OPTIONS\": \"600\",\r\n}\r\n\r\napp = Flask(__name__)\r\n\r\napp.config.from_mapping(config)\r\n\r\ncache = Cache(app)\r\n```\r\n\r\nWhich results in an error starting the application:\r\n\r\n```\r\nFLASK_APP = app.py\r\nFLASK_ENV = development\r\nFLASK_DEBUG = 0\r\nIn folder /home/gmc/src/nfv/sso\r\n/home/gmc/src/nfv/sso/venv/bin/python -m flask run\r\n * Serving Flask app \"app.py\"\r\n * Environment: development\r\n * Debug mode: off\r\nUsage: python -m flask run [OPTIONS]\r\n\r\nError: While importing \"app\", an ImportError was raised:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/gmc/src/nfv/sso/venv/lib/python3.6/site-packages/flask/cli.py\", line 240, in locate_app\r\n    __import__(module_name)\r\n  File \"/home/gmc/src/nfv/sso/app.py\", line 4, in <module>\r\n    from flask_cache import Cache\r\n  File \"/home/gmc/src/nfv/sso/venv/lib/python3.6/site-packages/flask_cache/__init__.py\", line 24, in <module>\r\n    from werkzeug import import_string\r\nImportError: cannot import name 'import_string'\r\n\r\n\r\nProcess finished with exit code 2\r\n```\r\n\r\nThese packages are installed:\r\n\r\nFlask\t1.1.2\t1.1.2\r\nFlask-Cache\t0.13.1\t0.13.1\r\nJinja2\t2.11.2\t2.11.2\r\nMarkupSafe\t1.1.1\t1.1.1\r\nWerkzeug\t1.0.1\t1.0.1\r\ncertifi\t2020.4.5.2\t2020.4.5.2\r\nchardet\t3.0.4\t3.0.4\r\nclick\t7.1.2\t7.1.2\r\nidna\t2.9\t2.9\r\nitsdangerous\t1.1.0\t1.1.0\r\nlxml\t4.5.1\t4.5.1\r\npip\t20.1.1\t20.1.1\r\nrequests\t2.23.0\t2.23.0\r\nsetuptools\t47.1.1\t47.1.1\r\nurllib3\t1.25.9\t1.25.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/175", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/175/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/175/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/175", "id": 630603806, "node_id": "MDU6SXNzdWU2MzA2MDM4MDY=", "number": 175, "title": "KeyError: 'cache'", "user": {"login": "VedAustin", "id": 3083310, "node_id": "MDQ6VXNlcjMwODMzMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3083310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VedAustin", "html_url": "https://github.com/VedAustin", "followers_url": "https://api.github.com/users/VedAustin/followers", "following_url": "https://api.github.com/users/VedAustin/following{/other_user}", "gists_url": "https://api.github.com/users/VedAustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/VedAustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VedAustin/subscriptions", "organizations_url": "https://api.github.com/users/VedAustin/orgs", "repos_url": "https://api.github.com/users/VedAustin/repos", "events_url": "https://api.github.com/users/VedAustin/events{/privacy}", "received_events_url": "https://api.github.com/users/VedAustin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T08:06:34Z", "updated_at": "2020-06-05T15:00:16Z", "closed_at": "2020-06-05T15:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have 2 files:\r\n1st file: knn_test.py\r\n```\r\nimport logging\r\nfrom flask_caching import Cache\r\nimport testing_cache\r\n\r\napp = testing_cache.app\r\ncache = Cache(config={\r\n                     'CACHE_TYPE': 'redis',\r\n                     'CACHE_REDIS_URL': 'redis://127.0.0.1:6379'\r\n                    })\r\ncache.init_app(app)\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n@cache.cached(timeout=60*15, key_prefix='knn_model_test')\r\ndef knn_model():\r\n    logging.debug(\"Inside knn_model\")\r\n    model_arr = [1, 3]\r\n    return model_arr\r\n\r\n```\r\n\r\n2nd file:\r\ntesting_cache.py\r\n```\r\nimport knn_test\r\nfrom flask import Flask\r\nfrom flask_caching import Cache\r\nimport logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route('/')\r\ndef test():\r\n    knn_test.knn_model()\r\n    return \"Successful\"\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True, host='localhost', port=8051)\r\n```\r\n\r\nWhen I call the api (for example from postman for example), I get the following error message:\r\n```\r\nERROR:flask_caching:Exception possibly due to cache backend.\r\nTraceback (most recent call last):\r\n  File \"/ENVs/dash-test/lib/python3.7/site-packages/flask_caching/__init__.py\", line 412, in decorated_function\r\n    rv = self.cache.get(cache_key)\r\n  File \"/ENVs/dash-test/lib/python3.7/site-packages/flask_caching/__init__.py\", line 239, in cache\r\n    return app.extensions[\"cache\"][self]\r\nKeyError: 'cache'\r\n```\r\n\r\nHowever when I have everything in a single file, it works fine:\r\n```\r\nfrom flask import Flask\r\nfrom flask_caching import Cache\r\nimport logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\napp = Flask(__name__)\r\n\r\ncache = Cache(config={\r\n                     'CACHE_TYPE': 'redis',\r\n                     'CACHE_REDIS_URL': 'redis://127.0.0.1:6379'\r\n                    })\r\n\r\ncache.init_app(app)\r\n\r\n@cache.cached(timeout=60*15, key_prefix='knn_model_test')\r\ndef knn_model():\r\n    logging.debug(\"Inside knn_model\")\r\n    model_arr = [1, 3]\r\n    return model_arr\r\n\r\n\r\n@app.route('/')\r\ndef test():\r\n    knn_model()\r\n    return \"Successful\"\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True, host='localhost', port=8051)\r\n\r\n```\r\n\r\nAny idea what is going on?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/174", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/174/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/174/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/174", "id": 630067560, "node_id": "MDU6SXNzdWU2MzAwNjc1NjA=", "number": 174, "title": "Support for multiple Redis Host?", "user": {"login": "rohitjain-rj", "id": 2137159, "node_id": "MDQ6VXNlcjIxMzcxNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2137159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohitjain-rj", "html_url": "https://github.com/rohitjain-rj", "followers_url": "https://api.github.com/users/rohitjain-rj/followers", "following_url": "https://api.github.com/users/rohitjain-rj/following{/other_user}", "gists_url": "https://api.github.com/users/rohitjain-rj/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohitjain-rj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohitjain-rj/subscriptions", "organizations_url": "https://api.github.com/users/rohitjain-rj/orgs", "repos_url": "https://api.github.com/users/rohitjain-rj/repos", "events_url": "https://api.github.com/users/rohitjain-rj/events{/privacy}", "received_events_url": "https://api.github.com/users/rohitjain-rj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T14:55:52Z", "updated_at": "2020-06-03T17:03:37Z", "closed_at": "2020-06-03T14:58:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "While migrating my application to multi-tenant setup, I found that there is no way to configure multiple `redis` hosts (1 host per tenant) to work with Flask-Caching. \r\n\r\nHas this been ever discussed about usage in a multi-tenant application? Or is there any already known way of using `Flask-Caching` library in multi-tenant application?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/172", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/172/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/172/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/172", "id": 627027048, "node_id": "MDU6SXNzdWU2MjcwMjcwNDg=", "number": 172, "title": "Param default_timeout cannot be configured when using redis sentinel cache", "user": {"login": "AIweimd", "id": 42801710, "node_id": "MDQ6VXNlcjQyODAxNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/42801710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AIweimd", "html_url": "https://github.com/AIweimd", "followers_url": "https://api.github.com/users/AIweimd/followers", "following_url": "https://api.github.com/users/AIweimd/following{/other_user}", "gists_url": "https://api.github.com/users/AIweimd/gists{/gist_id}", "starred_url": "https://api.github.com/users/AIweimd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AIweimd/subscriptions", "organizations_url": "https://api.github.com/users/AIweimd/orgs", "repos_url": "https://api.github.com/users/AIweimd/repos", "events_url": "https://api.github.com/users/AIweimd/events{/privacy}", "received_events_url": "https://api.github.com/users/AIweimd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-29T06:18:00Z", "updated_at": "2020-05-31T10:31:06Z", "closed_at": "2020-05-31T10:31:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As RedisSentinelCache inherit RedisCache, and RedisCache's param default_timeout is not the first kwargs , so RedisSentinelCache super init with one arg default_timeout cannot be configured well. \r\n\r\n`super(RedisSentinelCache, self).__init__(default_timeout)`\r\n\r\nI suggest modified to kwargs for parent class RedisCache instance.\r\n\r\n`super(RedisSentinelCache, self).__init__(default_timeout=default_timeout)`\r\n\r\nWould appreciate help, thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/169", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/169/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/169/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/169", "id": 609418742, "node_id": "MDU6SXNzdWU2MDk0MTg3NDI=", "number": 169, "title": "Getting `redis.exceptions.ResponseError: value is not an integer or out of range`", "user": {"login": "docyx", "id": 37000451, "node_id": "MDQ6VXNlcjM3MDAwNDUx", "avatar_url": "https://avatars3.githubusercontent.com/u/37000451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/docyx", "html_url": "https://github.com/docyx", "followers_url": "https://api.github.com/users/docyx/followers", "following_url": "https://api.github.com/users/docyx/following{/other_user}", "gists_url": "https://api.github.com/users/docyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/docyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/docyx/subscriptions", "organizations_url": "https://api.github.com/users/docyx/orgs", "repos_url": "https://api.github.com/users/docyx/repos", "events_url": "https://api.github.com/users/docyx/events{/privacy}", "received_events_url": "https://api.github.com/users/docyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T23:00:39Z", "updated_at": "2020-04-30T18:17:47Z", "closed_at": "2020-04-30T18:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed both Redis (latest stable version) and `redis` from PIP, and have a Redis server running with the `redis-server` command.\r\n\r\nThe Flask server itself starts up fine, but when I GET a route that is cached (almost all of the REST API routes), I get the error:\r\n\r\n`redis.exceptions.ResponseError: value is not an integer or out of range`\r\n\r\nI've tried running `cache.clear()` and I can't find anything on Google with the same error relating to Python/Flask.\r\n\r\nMore info:\r\n- Running on Python 3.8 (most likely the culprit?)\r\n- Frontend is Vue.js\r\n- Using MongoDB and Pymongo for API data", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/168", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/168/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/168/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/168", "id": 609038178, "node_id": "MDU6SXNzdWU2MDkwMzgxNzg=", "number": 168, "title": "[Documentation] Response filter in the decorator", "user": {"login": "diegopaladini", "id": 8590687, "node_id": "MDQ6VXNlcjg1OTA2ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8590687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegopaladini", "html_url": "https://github.com/diegopaladini", "followers_url": "https://api.github.com/users/diegopaladini/followers", "following_url": "https://api.github.com/users/diegopaladini/following{/other_user}", "gists_url": "https://api.github.com/users/diegopaladini/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegopaladini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegopaladini/subscriptions", "organizations_url": "https://api.github.com/users/diegopaladini/orgs", "repos_url": "https://api.github.com/users/diegopaladini/repos", "events_url": "https://api.github.com/users/diegopaladini/events{/privacy}", "received_events_url": "https://api.github.com/users/diegopaladini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T13:00:32Z", "updated_at": "2020-05-31T10:09:44Z", "closed_at": "2020-05-31T10:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add response_filter params on documentation", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/165", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/165/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/165/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/165", "id": 588776625, "node_id": "MDU6SXNzdWU1ODg3NzY2MjU=", "number": 165, "title": "`key_prefix` parameter disregarded when `query_string` is set to `True`", "user": {"login": "avishavit", "id": 49146907, "node_id": "MDQ6VXNlcjQ5MTQ2OTA3", "avatar_url": "https://avatars0.githubusercontent.com/u/49146907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avishavit", "html_url": "https://github.com/avishavit", "followers_url": "https://api.github.com/users/avishavit/followers", "following_url": "https://api.github.com/users/avishavit/following{/other_user}", "gists_url": "https://api.github.com/users/avishavit/gists{/gist_id}", "starred_url": "https://api.github.com/users/avishavit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avishavit/subscriptions", "organizations_url": "https://api.github.com/users/avishavit/orgs", "repos_url": "https://api.github.com/users/avishavit/repos", "events_url": "https://api.github.com/users/avishavit/events{/privacy}", "received_events_url": "https://api.github.com/users/avishavit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T22:54:50Z", "updated_at": "2020-05-31T10:32:39Z", "closed_at": "2020-05-31T10:32:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I see in the code for the `cached` method that if `query_string` is `True` then the method that is called is `make_cache_key_query_string` that's in https://github.com/sh4nks/flask-caching/blob/b8e2fa6d3251dc60548751855d1d329eecef132a/flask_caching/__init__.py#L464\r\nthen params are hashed, request path is added and the cache key does not reflect the `key_prefix` parameter.\r\nApart from other issues like post body not included, this makes the library a bit of an effort to integrate.\r\n\r\nWould appreciate help, thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/164", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/164/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/164/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/164", "id": 583808216, "node_id": "MDU6SXNzdWU1ODM4MDgyMTY=", "number": 164, "title": "Add the classmethod as example in documentation", "user": {"login": "sh4nks", "id": 1510708, "node_id": "MDQ6VXNlcjE1MTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1510708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh4nks", "html_url": "https://github.com/sh4nks", "followers_url": "https://api.github.com/users/sh4nks/followers", "following_url": "https://api.github.com/users/sh4nks/following{/other_user}", "gists_url": "https://api.github.com/users/sh4nks/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh4nks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh4nks/subscriptions", "organizations_url": "https://api.github.com/users/sh4nks/orgs", "repos_url": "https://api.github.com/users/sh4nks/repos", "events_url": "https://api.github.com/users/sh4nks/events{/privacy}", "received_events_url": "https://api.github.com/users/sh4nks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}, {"id": 1161398274, "node_id": "MDU6TGFiZWwxMTYxMzk4Mjc0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/good%20first%20issue", "name": "good first issue", "color": "21c65b", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-18T15:24:15Z", "updated_at": "2020-05-31T10:50:27Z", "closed_at": "2020-05-31T10:50:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Please add the classmethod as example in documentation.\r\nThis post is the only information that i found about the deleting of a memoized class method.\r\n\r\n_Originally posted by @johaven in https://github.com/sh4nks/flask-caching/pull/47#issuecomment-600676689_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/163", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/163/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/163/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/163", "id": 565615980, "node_id": "MDU6SXNzdWU1NjU2MTU5ODA=", "number": 163, "title": " ModuleNotFoundError: No module named 'werkzeug.contrib'", "user": {"login": "scottwilson312", "id": 16478974, "node_id": "MDQ6VXNlcjE2NDc4OTc0", "avatar_url": "https://avatars1.githubusercontent.com/u/16478974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottwilson312", "html_url": "https://github.com/scottwilson312", "followers_url": "https://api.github.com/users/scottwilson312/followers", "following_url": "https://api.github.com/users/scottwilson312/following{/other_user}", "gists_url": "https://api.github.com/users/scottwilson312/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottwilson312/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottwilson312/subscriptions", "organizations_url": "https://api.github.com/users/scottwilson312/orgs", "repos_url": "https://api.github.com/users/scottwilson312/repos", "events_url": "https://api.github.com/users/scottwilson312/events{/privacy}", "received_events_url": "https://api.github.com/users/scottwilson312/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1161398274, "node_id": "MDU6TGFiZWwxMTYxMzk4Mjc0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/good%20first%20issue", "name": "good first issue", "color": "21c65b", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-15T00:00:05Z", "updated_at": "2020-05-31T10:54:46Z", "closed_at": "2020-05-31T10:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wekzeug released a new version and it's causing a crash.\r\n\r\n``` ModuleNotFoundError: No module named 'werkzeug.contrib'```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/162", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/162/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/162/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/162", "id": 564287593, "node_id": "MDU6SXNzdWU1NjQyODc1OTM=", "number": 162, "title": "Resolve name collision (simple() shadows simple.py)", "user": {"login": "rs2", "id": 4407787, "node_id": "MDQ6VXNlcjQ0MDc3ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4407787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rs2", "html_url": "https://github.com/rs2", "followers_url": "https://api.github.com/users/rs2/followers", "following_url": "https://api.github.com/users/rs2/following{/other_user}", "gists_url": "https://api.github.com/users/rs2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rs2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rs2/subscriptions", "organizations_url": "https://api.github.com/users/rs2/orgs", "repos_url": "https://api.github.com/users/rs2/repos", "events_url": "https://api.github.com/users/rs2/events{/privacy}", "received_events_url": "https://api.github.com/users/rs2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-12T21:34:34Z", "updated_at": "2020-05-31T11:00:48Z", "closed_at": "2020-05-31T11:00:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment, there is no way of importing [flask_caching/backends/simple.py](https://github.com/sh4nks/flask-caching/blob/master/flask_caching/backends/simple.py) as it is being shadowed by a [function with an identical name](https://github.com/sh4nks/flask-caching/blob/master/flask_caching/backends/__init__.py#L50).\r\n\r\nSolution: rename [flask_caching/backends/simple.py](https://github.com/sh4nks/flask-caching/blob/master/flask_caching/backends/simple.py) into simplecache.py, in line with most other backends in the [directory](https://github.com/sh4nks/flask-caching/tree/master/flask_caching/backends).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/161", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/161/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/161/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/161", "id": 560908834, "node_id": "MDU6SXNzdWU1NjA5MDg4MzQ=", "number": 161, "title": "Cache after gzip", "user": {"login": "notpushkin", "id": 1298948, "node_id": "MDQ6VXNlcjEyOTg5NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1298948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notpushkin", "html_url": "https://github.com/notpushkin", "followers_url": "https://api.github.com/users/notpushkin/followers", "following_url": "https://api.github.com/users/notpushkin/following{/other_user}", "gists_url": "https://api.github.com/users/notpushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/notpushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notpushkin/subscriptions", "organizations_url": "https://api.github.com/users/notpushkin/orgs", "repos_url": "https://api.github.com/users/notpushkin/repos", "events_url": "https://api.github.com/users/notpushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/notpushkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T10:12:50Z", "updated_at": "2020-02-07T09:36:26Z", "closed_at": "2020-02-07T09:24:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there and first of all, thanks for your hard work on this extension!\r\n\r\nOur app's responses are several MB in size, so we use caching (this extension) and compression (via [Flask-gzip]), naturally. However, the cache applies to responses before gzip, so it still takes a few seconds to re-compress them on each request. Is there a way to reverse the order in which extensions are working, i. e. compress the responses first and only then cache?\r\n\r\n[Flask-gzip]: https://github.com/closeio/Flask-gzip", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/160", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/160/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/160/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/160", "id": 557843689, "node_id": "MDU6SXNzdWU1NTc4NDM2ODk=", "number": 160, "title": "Constructing cache keys for selective invalidation", "user": {"login": "hiphamster", "id": 1666965, "node_id": "MDQ6VXNlcjE2NjY5NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1666965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiphamster", "html_url": "https://github.com/hiphamster", "followers_url": "https://api.github.com/users/hiphamster/followers", "following_url": "https://api.github.com/users/hiphamster/following{/other_user}", "gists_url": "https://api.github.com/users/hiphamster/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiphamster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiphamster/subscriptions", "organizations_url": "https://api.github.com/users/hiphamster/orgs", "repos_url": "https://api.github.com/users/hiphamster/repos", "events_url": "https://api.github.com/users/hiphamster/events{/privacy}", "received_events_url": "https://api.github.com/users/hiphamster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-31T00:44:13Z", "updated_at": "2020-05-31T09:49:34Z", "closed_at": "2020-05-31T09:49:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my REST API i have a few long running calls, which i'd like to cache. The underlying data does not change frequently, and I'd like to be able to invalidate the cached result only when the data does change. It would be an easy task, if i could easily construct a cache key (perhaps even save and reuse it). Unfortunately, the function that constructs the key is defined inside the cached() decorator, and is not accessible outside. What's the rational behind that? The logic in key construction is not complicated, and i can write my own method to compute the key, but it would be better and less error-prone to use the same function. If there's a better way to selectively invalidate cache, i'm open to suggestions.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/158", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/158/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/158/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/158", "id": 555109754, "node_id": "MDU6SXNzdWU1NTUxMDk3NTQ=", "number": 158, "title": "DeprecationWarning due to invalid escape sequences", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T17:10:42Z", "updated_at": "2020-05-31T11:39:33Z", "closed_at": "2020-05-31T11:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n./flask_caching/__init__.py:866: DeprecationWarning: invalid escape sequence \\*\r\n  \"\"\"Deletes the specified functions caches, based by given parameters.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/155", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/155/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/155/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/155", "id": 544415054, "node_id": "MDU6SXNzdWU1NDQ0MTUwNTQ=", "number": 155, "title": "Magic number in SimpleCache and FileSystemCache", "user": {"login": "dAnjou", "id": 117147, "node_id": "MDQ6VXNlcjExNzE0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/117147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dAnjou", "html_url": "https://github.com/dAnjou", "followers_url": "https://api.github.com/users/dAnjou/followers", "following_url": "https://api.github.com/users/dAnjou/following{/other_user}", "gists_url": "https://api.github.com/users/dAnjou/gists{/gist_id}", "starred_url": "https://api.github.com/users/dAnjou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dAnjou/subscriptions", "organizations_url": "https://api.github.com/users/dAnjou/orgs", "repos_url": "https://api.github.com/users/dAnjou/repos", "events_url": "https://api.github.com/users/dAnjou/events{/privacy}", "received_events_url": "https://api.github.com/users/dAnjou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-02T00:22:12Z", "updated_at": "2020-05-31T09:48:16Z", "closed_at": "2020-05-31T09:48:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [pruning](https://github.com/sh4nks/flask-caching/blob/b8e2fa6d3251dc60548751855d1d329eecef132a/flask_caching/backends/simple.py#L52) contains a magic number, it seems it deletes only every third entry: `idx % 3`.\r\n\r\nI traced it back to the very beginning, there is no info there: https://github.com/mitsuhiko/zine/commit/3502607828b0f6ed136ed9ae74a09fa10f78a3ed#diff-b0794f264f02b7241cc1088d07e16659\r\n\r\nI think this behavior should be reconsidered, tested, documented, and maybe even made configurable.\r\n\r\nI'm also cross-linking the issue I created in pallets/cachelib (this is where the original code for the mentioned cache backends went after they got removed from werkzeug): pallets/cachelib#9.\r\n\r\nSide note: since you're basically using the exact same code as in cachelib, maybe consider contributing back there (i.e. the tests), then pull in that library in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/154", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/154/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/154/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/154", "id": 542215162, "node_id": "MDU6SXNzdWU1NDIyMTUxNjI=", "number": 154, "title": "Using the function's code which is memoized as part of the cache key hashing", "user": {"login": "komailrk", "id": 1796298, "node_id": "MDQ6VXNlcjE3OTYyOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1796298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/komailrk", "html_url": "https://github.com/komailrk", "followers_url": "https://api.github.com/users/komailrk/followers", "following_url": "https://api.github.com/users/komailrk/following{/other_user}", "gists_url": "https://api.github.com/users/komailrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/komailrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/komailrk/subscriptions", "organizations_url": "https://api.github.com/users/komailrk/orgs", "repos_url": "https://api.github.com/users/komailrk/repos", "events_url": "https://api.github.com/users/komailrk/events{/privacy}", "received_events_url": "https://api.github.com/users/komailrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-24T22:12:42Z", "updated_at": "2020-05-31T12:45:20Z", "closed_at": "2020-05-31T12:45:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using memoize the function in question could have the source changed but the cache key generated will remain the same. The idea is to include the function's source code in cache key hash to avoid returning the data when the deriving mechanism has been modified.\r\n\r\nTo avoid any issues, this option should be introduced as an optional feature which can be enabled on demand when needed.\r\n\r\nFor example:\r\n```\r\n@app_cache.memoize(timeout=600, source_check=True)\r\ndef my_function(arg1):\r\n...\r\n```\r\n\r\nTo reproduce the issue:\r\n\r\n1. Create a function with memoize decorator\r\n2. Run the function either by calling the URL or however way possible\r\n3. Change the source code such that the return value will be different provided the same input parameters\r\n4. Run the function again and the return value will be from the stale function\r\n\r\nI can start a PR and introduce this feature. Would like to get some feedback on this idea.\r\n\r\nUsing Python `inspect` the source code can be retrieved and added to the cache key.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/152", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/152/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/152/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/152", "id": 542174579, "node_id": "MDU6SXNzdWU1NDIxNzQ1Nzk=", "number": 152, "title": "Memcache timeout setting bug with pylibmc", "user": {"login": "zoltan-fedor", "id": 3887295, "node_id": "MDQ6VXNlcjM4ODcyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3887295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoltan-fedor", "html_url": "https://github.com/zoltan-fedor", "followers_url": "https://api.github.com/users/zoltan-fedor/followers", "following_url": "https://api.github.com/users/zoltan-fedor/following{/other_user}", "gists_url": "https://api.github.com/users/zoltan-fedor/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoltan-fedor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoltan-fedor/subscriptions", "organizations_url": "https://api.github.com/users/zoltan-fedor/orgs", "repos_url": "https://api.github.com/users/zoltan-fedor/repos", "events_url": "https://api.github.com/users/zoltan-fedor/events{/privacy}", "received_events_url": "https://api.github.com/users/zoltan-fedor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-24T16:46:27Z", "updated_at": "2020-05-31T09:46:45Z", "closed_at": "2020-05-31T09:46:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working on the [Falcon-Caching library](https://github.com/zoltan-fedor/falcon-caching) which is a port of your great module to Falcon, where - with the permission of @gergelypolonkai and keeping all credits - I am reusing your backend codes.\r\n\r\nI am in the process of writing functional tests for Falcon-Caching with all the different backends - and I believe I found a bug in your memcache backend implementation when it uses `pylibmc` at line https://github.com/sh4nks/flask-caching/blob/master/flask_caching/backends/memcache.py#L126\r\n\r\nThe `timeout` parameter is calculated just like in other backends as an absolute time, while based on the documentation (and also based on my test results) in pylibmc the timeout is NOT the absolute expiration time, but the relative time (in seconds) until expiration.\r\n\r\nQuoting from the documentation of the pylibmc library:\r\n\r\n> If time is given, it specifies the number of seconds until key will expire. Default behavior is to never expire (equivalent of specifying 0).\r\n\r\nSee: http://sendapatch.se/projects/pylibmc/reference.html#pylibmc.Client.set\r\n \r\nThe fix is easy - for the `pylibmc` library the [_normalize_timeout()](https://github.com/sh4nks/flask-caching/blob/master/flask_caching/backends/memcache.py#L84) method should be modified to return relative time instead of an absolute.\r\n \r\nBoth the `python-memcached` and the `google.appengine.api.memcached` libraries accept both relative and absolute time, so it seems the issue is only with `pylibmc`:\r\nhttps://github.com/linsomniac/python-memcached/blob/master/memcache.py#L708 and https://cloud.google.com/appengine/docs/standard/python/refdocs/google.appengine.api.memcache\r\n\r\nSubmitted a PR for it, see https://github.com/sh4nks/flask-caching/pull/153", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/151", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/151/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/151/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/151", "id": 537913675, "node_id": "MDU6SXNzdWU1Mzc5MTM2NzU=", "number": 151, "title": "[Suggestion] How to check that caching is working", "user": {"login": "simanacci", "id": 12496163, "node_id": "MDQ6VXNlcjEyNDk2MTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/12496163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simanacci", "html_url": "https://github.com/simanacci", "followers_url": "https://api.github.com/users/simanacci/followers", "following_url": "https://api.github.com/users/simanacci/following{/other_user}", "gists_url": "https://api.github.com/users/simanacci/gists{/gist_id}", "starred_url": "https://api.github.com/users/simanacci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simanacci/subscriptions", "organizations_url": "https://api.github.com/users/simanacci/orgs", "repos_url": "https://api.github.com/users/simanacci/repos", "events_url": "https://api.github.com/users/simanacci/events{/privacy}", "received_events_url": "https://api.github.com/users/simanacci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-14T13:24:48Z", "updated_at": "2020-05-31T09:46:10Z", "closed_at": "2020-05-31T09:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the documentation, add a code snippet showing how one can check that the caching is working for various cache backends. For example redis.\r\n`>>> import redis`\r\n`>>> r = redis.Redis(host='localhost', port=6379, db=0)`\r\n`# before running memoized function`\r\n`>>> r.keys()`\r\n`[]`\r\n`>>> len(r.keys()`\r\n`0`\r\n`# after running the memoized function or cached view`\r\n`>>> r.keys()`\r\n`[b'flask_cache_JovMba3x3w8UnP76G4Mj05', b'flask_cache_t+0kJKm1Rfy8EtwHTX3Lo3']`\r\n`>>> len(r.keys())`\r\n`2`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/150", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/150/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/150/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/150", "id": 537211496, "node_id": "MDU6SXNzdWU1MzcyMTE0OTY=", "number": 150, "title": "support for adding POST params into a cache key", "user": {"login": "havok2063", "id": 1836302, "node_id": "MDQ6VXNlcjE4MzYzMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1836302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/havok2063", "html_url": "https://github.com/havok2063", "followers_url": "https://api.github.com/users/havok2063/followers", "following_url": "https://api.github.com/users/havok2063/following{/other_user}", "gists_url": "https://api.github.com/users/havok2063/gists{/gist_id}", "starred_url": "https://api.github.com/users/havok2063/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/havok2063/subscriptions", "organizations_url": "https://api.github.com/users/havok2063/orgs", "repos_url": "https://api.github.com/users/havok2063/repos", "events_url": "https://api.github.com/users/havok2063/events{/privacy}", "received_events_url": "https://api.github.com/users/havok2063/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-12T21:02:16Z", "updated_at": "2020-05-31T09:44:46Z", "closed_at": "2020-05-31T09:44:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some routes in my application are POST routes called via AJAX or an API.  The route itself has no arguments but I process the request form for input parameters.  Is there a way to add these parameters to the cache_key?  Toy example..\r\n\r\n```\r\nclass DoStuff(FlaskView):\r\n    @route('/dostuff/')\r\n    @cache.memoize(timeout=300)\r\n    def dostuff(self):\r\n          args = process_request(request)\r\n          objectid = args.get('objectid')\r\n          ...\r\n          ... do some stuff\r\n          return jsonify(....)\r\n```\r\nI'd like to be able to have this route cached based on the input form parameters, like `objectid`.  Is there a way to do this?  It's not clear in the documentation.  \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/149", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/149/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/149/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/149", "id": 537208743, "node_id": "MDU6SXNzdWU1MzcyMDg3NDM=", "number": 149, "title": "support for versioned caches", "user": {"login": "havok2063", "id": 1836302, "node_id": "MDQ6VXNlcjE4MzYzMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1836302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/havok2063", "html_url": "https://github.com/havok2063", "followers_url": "https://api.github.com/users/havok2063/followers", "following_url": "https://api.github.com/users/havok2063/following{/other_user}", "gists_url": "https://api.github.com/users/havok2063/gists{/gist_id}", "starred_url": "https://api.github.com/users/havok2063/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/havok2063/subscriptions", "organizations_url": "https://api.github.com/users/havok2063/orgs", "repos_url": "https://api.github.com/users/havok2063/repos", "events_url": "https://api.github.com/users/havok2063/events{/privacy}", "received_events_url": "https://api.github.com/users/havok2063/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-12T20:56:16Z", "updated_at": "2020-05-31T09:40:10Z", "closed_at": "2020-05-31T09:40:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does Flask-Caching support creating different caches (same or different cache backend) based on some chosen parameter.  My application is designed to work with versioned data sets, so all my of routes perform the same actions but return different data based on the current version set in the web interface.  Currently if I try to use `@cached`, it caches the route regardless of what dataset version is being used.  As a toy example...\r\n\r\n```\r\n@route('/dostuff/')\r\ndef dostuff():\r\n    release = get_currently_set_release()\r\n    data_specific = get_data_based_on_release(release)\r\n    return render_template('index.html', **{'data': data_specific}) \r\n```\r\nAll of my routes do this, so this is something I need to at the global level, essentially have a `cache_releaseA`, `cache_releaseB`, etc.  Is there a way to do this without customizing the `cache_key` for every single route?   \r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/148", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/148/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/148/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/148", "id": 537154940, "node_id": "MDU6SXNzdWU1MzcxNTQ5NDA=", "number": 148, "title": "Exception possibly due to cache backend.", "user": {"login": "mathewknoop", "id": 37307460, "node_id": "MDQ6VXNlcjM3MzA3NDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/37307460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathewknoop", "html_url": "https://github.com/mathewknoop", "followers_url": "https://api.github.com/users/mathewknoop/followers", "following_url": "https://api.github.com/users/mathewknoop/following{/other_user}", "gists_url": "https://api.github.com/users/mathewknoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathewknoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathewknoop/subscriptions", "organizations_url": "https://api.github.com/users/mathewknoop/orgs", "repos_url": "https://api.github.com/users/mathewknoop/repos", "events_url": "https://api.github.com/users/mathewknoop/events{/privacy}", "received_events_url": "https://api.github.com/users/mathewknoop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-12T18:56:09Z", "updated_at": "2020-05-31T10:06:32Z", "closed_at": "2020-05-31T10:06:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error. Despite this the cache seems to be performing as expected.\r\n\r\ncache = Cache(config={'CACHE_TYPE': 'filesystem','CACHE_DIR':'/tmp/'})\r\ncache.init_app(application)\r\n\r\nusing the following decorator to wrap my functions.\r\n\r\n@cache.cached(timeout=920)\r\n\r\nHere is the error from gunicorn's stdout.\r\n\r\nException possibly due to cache backend.\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/site-packages/flask_caching/__init__.py\", line 443, in decorated_function\r\n    timeout=decorated_function.cache_timeout,\r\n  File \"/opt/conda/lib/python3.7/site-packages/flask_caching/backends/filesystem.py\", line 187, in set\r\n    pickle.dump(value, f, pickle.HIGHEST_PROTOCOL)\r\nTypeError: cannot serialize '_io.BufferedReader' object", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/144", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/144/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/144/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/144", "id": 530074828, "node_id": "MDU6SXNzdWU1MzAwNzQ4Mjg=", "number": 144, "title": "Any support for multi-level caching?", "user": {"login": "fluffy-critter", "id": 347162, "node_id": "MDQ6VXNlcjM0NzE2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/347162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fluffy-critter", "html_url": "https://github.com/fluffy-critter", "followers_url": "https://api.github.com/users/fluffy-critter/followers", "following_url": "https://api.github.com/users/fluffy-critter/following{/other_user}", "gists_url": "https://api.github.com/users/fluffy-critter/gists{/gist_id}", "starred_url": "https://api.github.com/users/fluffy-critter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fluffy-critter/subscriptions", "organizations_url": "https://api.github.com/users/fluffy-critter/orgs", "repos_url": "https://api.github.com/users/fluffy-critter/repos", "events_url": "https://api.github.com/users/fluffy-critter/events{/privacy}", "received_events_url": "https://api.github.com/users/fluffy-critter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T21:02:14Z", "updated_at": "2020-05-31T09:36:25Z", "closed_at": "2020-05-31T09:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a built-in cache backend (or intention to add one) which supports multi-level caching? For example, using SimpleCache for L1 and MemcachedCache for L2. In particular, it could potentially improve performance to not have to retrieve/unpickle particularly hot items.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/143", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/143/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/143/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/143", "id": 528013867, "node_id": "MDU6SXNzdWU1MjgwMTM4Njc=", "number": 143, "title": "'module' object has no attribute 'signature'", "user": {"login": "dmalis", "id": 274254, "node_id": "MDQ6VXNlcjI3NDI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/274254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmalis", "html_url": "https://github.com/dmalis", "followers_url": "https://api.github.com/users/dmalis/followers", "following_url": "https://api.github.com/users/dmalis/following{/other_user}", "gists_url": "https://api.github.com/users/dmalis/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmalis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmalis/subscriptions", "organizations_url": "https://api.github.com/users/dmalis/orgs", "repos_url": "https://api.github.com/users/dmalis/repos", "events_url": "https://api.github.com/users/dmalis/events{/privacy}", "received_events_url": "https://api.github.com/users/dmalis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-25T11:08:31Z", "updated_at": "2019-11-25T11:17:32Z", "closed_at": "2019-11-25T11:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "py2.7 with latest 1.8.0 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/142", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/142/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/142/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/142", "id": 527872349, "node_id": "MDU6SXNzdWU1Mjc4NzIzNDk=", "number": 142, "title": "Missing git tag for 1.8.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T06:15:19Z", "updated_at": "2019-11-25T08:49:06Z", "closed_at": "2019-11-25T08:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/139", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/139/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/139/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/139", "id": 511440396, "node_id": "MDU6SXNzdWU1MTE0NDAzOTY=", "number": 139, "title": "Pass args and kwargs to key_prefix callable in _make_cache_key", "user": {"login": "zuck", "id": 1370938, "node_id": "MDQ6VXNlcjEzNzA5Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1370938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuck", "html_url": "https://github.com/zuck", "followers_url": "https://api.github.com/users/zuck/followers", "following_url": "https://api.github.com/users/zuck/following{/other_user}", "gists_url": "https://api.github.com/users/zuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuck/subscriptions", "organizations_url": "https://api.github.com/users/zuck/orgs", "repos_url": "https://api.github.com/users/zuck/repos", "events_url": "https://api.github.com/users/zuck/events{/privacy}", "received_events_url": "https://api.github.com/users/zuck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-23T16:31:00Z", "updated_at": "2020-05-31T13:28:33Z", "closed_at": "2020-05-31T13:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "This will simplify the use of the cache with normal functions, avoiding to specify a custom `make_cache_key`:\r\n\r\n```python\r\ndef _make_cache_key(args, kwargs, use_request):\r\n    if callable(key_prefix):\r\n        cache_key = key_prefix(args, kwargs)\r\n    # ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/137", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/137/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/137/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/137", "id": 498162148, "node_id": "MDU6SXNzdWU0OTgxNjIxNDg=", "number": 137, "title": "Explicit fallback for cache.get()", "user": {"login": "fkromer", "id": 10199742, "node_id": "MDQ6VXNlcjEwMTk5NzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/10199742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fkromer", "html_url": "https://github.com/fkromer", "followers_url": "https://api.github.com/users/fkromer/followers", "following_url": "https://api.github.com/users/fkromer/following{/other_user}", "gists_url": "https://api.github.com/users/fkromer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fkromer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fkromer/subscriptions", "organizations_url": "https://api.github.com/users/fkromer/orgs", "repos_url": "https://api.github.com/users/fkromer/repos", "events_url": "https://api.github.com/users/fkromer/events{/privacy}", "received_events_url": "https://api.github.com/users/fkromer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-25T09:26:59Z", "updated_at": "2019-11-24T14:50:06Z", "closed_at": "2019-11-24T14:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using an [explicitly caching data with flask_caching](https://flask-caching.readthedocs.io/en/latest/#explicitly-caching-data) with [a simple cache type](https://flask-caching.readthedocs.io/en/latest/#simplecache). In case the cache is not initialized and I call `cache.get()` it returns `None`. It would be great if one could define the fallback explicitly like possible and consistent with [`dict.get()`](https://docs.python.org/3.6/library/stdtypes.html?highlight=dict%20get#dict.get).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/136", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/136/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/136/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/136", "id": 490794618, "node_id": "MDU6SXNzdWU0OTA3OTQ2MTg=", "number": 136, "title": "CACHE_TYPE = simple isn't thread safe so what type of cache should i use?", "user": {"login": "dzpt", "id": 5781080, "node_id": "MDQ6VXNlcjU3ODEwODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5781080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzpt", "html_url": "https://github.com/dzpt", "followers_url": "https://api.github.com/users/dzpt/followers", "following_url": "https://api.github.com/users/dzpt/following{/other_user}", "gists_url": "https://api.github.com/users/dzpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzpt/subscriptions", "organizations_url": "https://api.github.com/users/dzpt/orgs", "repos_url": "https://api.github.com/users/dzpt/repos", "events_url": "https://api.github.com/users/dzpt/events{/privacy}", "received_events_url": "https://api.github.com/users/dzpt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-08T19:24:14Z", "updated_at": "2019-11-24T16:06:19Z", "closed_at": "2019-11-24T16:06:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see in the document:\r\n\r\n> Set CACHE_TYPE to simple to use this type.\r\n> \r\n> Uses a local python dictionary for caching. This is not really thread safe.\r\n\r\nWhy if itsn't thread safe why it set to be default cache type?\r\nWhat type of cache is really thread safe?\r\n\r\nThe document is poor and doesn't explain anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/135", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/135/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/135/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/135", "id": 484453897, "node_id": "MDU6SXNzdWU0ODQ0NTM4OTc=", "number": 135, "title": "Concurrency problem", "user": {"login": "mt3925", "id": 7368397, "node_id": "MDQ6VXNlcjczNjgzOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7368397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mt3925", "html_url": "https://github.com/mt3925", "followers_url": "https://api.github.com/users/mt3925/followers", "following_url": "https://api.github.com/users/mt3925/following{/other_user}", "gists_url": "https://api.github.com/users/mt3925/gists{/gist_id}", "starred_url": "https://api.github.com/users/mt3925/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mt3925/subscriptions", "organizations_url": "https://api.github.com/users/mt3925/orgs", "repos_url": "https://api.github.com/users/mt3925/repos", "events_url": "https://api.github.com/users/mt3925/events{/privacy}", "received_events_url": "https://api.github.com/users/mt3925/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-08-23T10:21:23Z", "updated_at": "2019-11-20T19:55:19Z", "closed_at": "2019-11-14T09:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/sh4nks/flask-caching/blob/50bc8af30ae9f85714a119c323e8f09100d7a937/flask_caching/__init__.py#L385-L392\r\n\r\nIf the cache has expired, after the execution of the code \"rv = self.cache.get(cache_key)\", there may be other processes that have already written values, but here will return a None instead of calling the function to get the new return value. Sorry for the bad English, all of the above are google translation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/133", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/133/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/133/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/133", "id": 482397318, "node_id": "MDU6SXNzdWU0ODIzOTczMTg=", "number": 133, "title": "CACHE_TYPE=\"filesystem\" ", "user": {"login": "sottom", "id": 18564176, "node_id": "MDQ6VXNlcjE4NTY0MTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/18564176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sottom", "html_url": "https://github.com/sottom", "followers_url": "https://api.github.com/users/sottom/followers", "following_url": "https://api.github.com/users/sottom/following{/other_user}", "gists_url": "https://api.github.com/users/sottom/gists{/gist_id}", "starred_url": "https://api.github.com/users/sottom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sottom/subscriptions", "organizations_url": "https://api.github.com/users/sottom/orgs", "repos_url": "https://api.github.com/users/sottom/repos", "events_url": "https://api.github.com/users/sottom/events{/privacy}", "received_events_url": "https://api.github.com/users/sottom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-19T16:03:43Z", "updated_at": "2019-10-25T20:31:38Z", "closed_at": "2019-10-25T20:31:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "__init__.py sets a default of `None` for `CACHE_DIR`, but it won't accept that default if `CACHE_TYPE=\"filesystem\"`. It works when `CACHE_TYPE=\"simple\"` though.\r\n\r\nMaybe a default should be added so the code doesn't break when CACHE_DIR=None and CACHE_TYPE=\"filesystem\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/132", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/132/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/132/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/132", "id": 473681592, "node_id": "MDU6SXNzdWU0NzM2ODE1OTI=", "number": 132, "title": "Decode_Responses = True", "user": {"login": "wbhst83", "id": 22066539, "node_id": "MDQ6VXNlcjIyMDY2NTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/22066539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbhst83", "html_url": "https://github.com/wbhst83", "followers_url": "https://api.github.com/users/wbhst83/followers", "following_url": "https://api.github.com/users/wbhst83/following{/other_user}", "gists_url": "https://api.github.com/users/wbhst83/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbhst83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbhst83/subscriptions", "organizations_url": "https://api.github.com/users/wbhst83/orgs", "repos_url": "https://api.github.com/users/wbhst83/repos", "events_url": "https://api.github.com/users/wbhst83/events{/privacy}", "received_events_url": "https://api.github.com/users/wbhst83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865432, "node_id": "MDU6TGFiZWw0MDI4NjU0MzI=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-27T21:58:57Z", "updated_at": "2020-06-01T07:48:18Z", "closed_at": "2020-06-01T07:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using cache type of Redis, there are cases where I'm getting back bytes instead of strings for cache_key and thus throwing exceptions in third-party logging packages. I correct the issue by going to another type and therefore limited to Redis. I can also correct by monkey patching the third-parties package to check if the key is in bytes and then decode. I found that in Redis, you can ask Redis always to decode responses. I attempted to pass into flask-caching with an error. \r\n\r\nCode:\r\n`cache = Cache(config={'CACHE_TYPE': 'redis',\r\n                      'CACHE_OPTIONS': {'decode_responses': True}\r\n                      })`\r\n\r\nError:\r\n`File \"/Users/XXXX/.virtualenvs/XXXX/lib/python3.7/site-packages/flask_caching/backends/rediscache.py\", line 52, in __init__\r\n\"decode_responses is not supported by \" \"RedisCache.\"`\r\n\r\n\r\n\r\nThis is my first issue post, so forgive me if I left something out that should have been included.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/130", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/130/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/130/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/130", "id": 470620249, "node_id": "MDU6SXNzdWU0NzA2MjAyNDk=", "number": 130, "title": "Setting TESTING=True doesn't disable cache", "user": {"login": "ajnisbet1c", "id": 49884549, "node_id": "MDQ6VXNlcjQ5ODg0NTQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/49884549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajnisbet1c", "html_url": "https://github.com/ajnisbet1c", "followers_url": "https://api.github.com/users/ajnisbet1c/followers", "following_url": "https://api.github.com/users/ajnisbet1c/following{/other_user}", "gists_url": "https://api.github.com/users/ajnisbet1c/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajnisbet1c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajnisbet1c/subscriptions", "organizations_url": "https://api.github.com/users/ajnisbet1c/orgs", "repos_url": "https://api.github.com/users/ajnisbet1c/repos", "events_url": "https://api.github.com/users/ajnisbet1c/events{/privacy}", "received_events_url": "https://api.github.com/users/ajnisbet1c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1", "html_url": "https://github.com/sh4nks/flask-caching/milestone/1", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1/labels", "id": 4866767, "node_id": "MDk6TWlsZXN0b25lNDg2Njc2Nw==", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "sh4nks", "id": 1510708, "node_id": "MDQ6VXNlcjE1MTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1510708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh4nks", "html_url": "https://github.com/sh4nks", "followers_url": "https://api.github.com/users/sh4nks/followers", "following_url": "https://api.github.com/users/sh4nks/following{/other_user}", "gists_url": "https://api.github.com/users/sh4nks/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh4nks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh4nks/subscriptions", "organizations_url": "https://api.github.com/users/sh4nks/orgs", "repos_url": "https://api.github.com/users/sh4nks/repos", "events_url": "https://api.github.com/users/sh4nks/events{/privacy}", "received_events_url": "https://api.github.com/users/sh4nks/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-11-21T13:44:49Z", "updated_at": "2019-11-24T17:59:58Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-07-20T01:28:39Z", "updated_at": "2019-11-24T15:39:59Z", "closed_at": "2019-11-24T15:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs say \r\n\r\n> In addition the standard Flask TESTING configuration option is used. If this is True then Flask-Caching will use NullCache only.\r\n\r\nbut this isn't the case, the functionality was removed in flask-cache in https://github.com/thadeusb/flask-cache/commit/9988abf55204e6c08459c9e9dde785743ceef7ee as noted in https://github.com/thadeusb/flask-cache/issues/100\r\n\r\nEither this reference should be removed, or the functionality should be added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/129", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/129/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/129/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/129", "id": 468963126, "node_id": "MDU6SXNzdWU0Njg5NjMxMjY=", "number": 129, "title": "flask with MethodView ", "user": {"login": "Mr-liu-yang", "id": 31237992, "node_id": "MDQ6VXNlcjMxMjM3OTky", "avatar_url": "https://avatars2.githubusercontent.com/u/31237992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mr-liu-yang", "html_url": "https://github.com/Mr-liu-yang", "followers_url": "https://api.github.com/users/Mr-liu-yang/followers", "following_url": "https://api.github.com/users/Mr-liu-yang/following{/other_user}", "gists_url": "https://api.github.com/users/Mr-liu-yang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mr-liu-yang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mr-liu-yang/subscriptions", "organizations_url": "https://api.github.com/users/Mr-liu-yang/orgs", "repos_url": "https://api.github.com/users/Mr-liu-yang/repos", "events_url": "https://api.github.com/users/Mr-liu-yang/events{/privacy}", "received_events_url": "https://api.github.com/users/Mr-liu-yang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-17T03:11:10Z", "updated_at": "2019-07-17T06:56:25Z", "closed_at": "2019-07-17T06:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to do cache using the pluggable view of flask \uff1f\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/128", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/128/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/128/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/128", "id": 468962196, "node_id": "MDU6SXNzdWU0Njg5NjIxOTY=", "number": 128, "title": "flask MethodView", "user": {"login": "Mr-liu-yang", "id": 31237992, "node_id": "MDQ6VXNlcjMxMjM3OTky", "avatar_url": "https://avatars2.githubusercontent.com/u/31237992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mr-liu-yang", "html_url": "https://github.com/Mr-liu-yang", "followers_url": "https://api.github.com/users/Mr-liu-yang/followers", "following_url": "https://api.github.com/users/Mr-liu-yang/following{/other_user}", "gists_url": "https://api.github.com/users/Mr-liu-yang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mr-liu-yang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mr-liu-yang/subscriptions", "organizations_url": "https://api.github.com/users/Mr-liu-yang/orgs", "repos_url": "https://api.github.com/users/Mr-liu-yang/repos", "events_url": "https://api.github.com/users/Mr-liu-yang/events{/privacy}", "received_events_url": "https://api.github.com/users/Mr-liu-yang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-17T03:07:37Z", "updated_at": "2019-07-17T03:09:21Z", "closed_at": "2019-07-17T03:09:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/125", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/125/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/125/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/125", "id": 461320332, "node_id": "MDU6SXNzdWU0NjEzMjAzMzI=", "number": 125, "title": "clear support passing in pattern", "user": {"login": "meeech", "id": 4623, "node_id": "MDQ6VXNlcjQ2MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meeech", "html_url": "https://github.com/meeech", "followers_url": "https://api.github.com/users/meeech/followers", "following_url": "https://api.github.com/users/meeech/following{/other_user}", "gists_url": "https://api.github.com/users/meeech/gists{/gist_id}", "starred_url": "https://api.github.com/users/meeech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meeech/subscriptions", "organizations_url": "https://api.github.com/users/meeech/orgs", "repos_url": "https://api.github.com/users/meeech/repos", "events_url": "https://api.github.com/users/meeech/events{/privacy}", "received_events_url": "https://api.github.com/users/meeech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-27T05:23:47Z", "updated_at": "2020-08-18T21:05:13Z", "closed_at": "2020-05-31T11:09:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any interest in a PR to allow for redis/memcache backend clear to support passing in optional prefix param?\r\nRight now, its hard coded to KEY_PREFIX* but there's a scenario where it would be handy to have KEY_PREFIX_UUID_* (for example) where UUID is passed in\r\nAny interest in a PR to support that use case, or a new method which supports that?\r\n\r\nsomething like so should be backwards compat: \r\n\r\n```python\r\ndef clear(self, prefix=''):\r\n        status = False\r\n        if self.key_prefix:\r\n            keys = self._read_clients.keys(self.key_prefix + prefix + \"*\")\r\n            if keys:\r\n                status = self._write_client.delete(*keys)\r\n        else:\r\n            status = self._write_client.flushdb()\r\n        return status\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/122", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/122/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/122/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/122", "id": 452761001, "node_id": "MDU6SXNzdWU0NTI3NjEwMDE=", "number": 122, "title": "Template fragment caching issues", "user": {"login": "GAEfan", "id": 2022696, "node_id": "MDQ6VXNlcjIwMjI2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2022696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GAEfan", "html_url": "https://github.com/GAEfan", "followers_url": "https://api.github.com/users/GAEfan/followers", "following_url": "https://api.github.com/users/GAEfan/following{/other_user}", "gists_url": "https://api.github.com/users/GAEfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/GAEfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GAEfan/subscriptions", "organizations_url": "https://api.github.com/users/GAEfan/orgs", "repos_url": "https://api.github.com/users/GAEfan/repos", "events_url": "https://api.github.com/users/GAEfan/events{/privacy}", "received_events_url": "https://api.github.com/users/GAEfan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1", "html_url": "https://github.com/sh4nks/flask-caching/milestone/1", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1/labels", "id": 4866767, "node_id": "MDk6TWlsZXN0b25lNDg2Njc2Nw==", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "sh4nks", "id": 1510708, "node_id": "MDQ6VXNlcjE1MTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1510708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh4nks", "html_url": "https://github.com/sh4nks", "followers_url": "https://api.github.com/users/sh4nks/followers", "following_url": "https://api.github.com/users/sh4nks/following{/other_user}", "gists_url": "https://api.github.com/users/sh4nks/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh4nks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh4nks/subscriptions", "organizations_url": "https://api.github.com/users/sh4nks/orgs", "repos_url": "https://api.github.com/users/sh4nks/repos", "events_url": "https://api.github.com/users/sh4nks/events{/privacy}", "received_events_url": "https://api.github.com/users/sh4nks/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-11-21T13:44:49Z", "updated_at": "2019-11-24T17:59:58Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-06-05T23:26:50Z", "updated_at": "2019-11-24T16:05:28Z", "closed_at": "2019-11-24T16:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Your examples for template fragment caching show, for example:\r\n\r\n```\r\n{% cache 60 \"keyname\" %}\r\n...\r\n{% endcache %}\r\n```\r\n\r\nYet, this creates an error: \"jinja2.exceptions.TemplateSyntaxError: expected token 'end of statement block', got 'string'\".  Seems to require a comma:\r\n\r\n```\r\n{% cache 60, \"keyname\" %}\r\n...\r\n{% endcache %}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/120", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/120/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/120/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/120", "id": 450352960, "node_id": "MDU6SXNzdWU0NTAzNTI5NjA=", "number": 120, "title": "AttributeError: 'Client' object has no attribute 'append'", "user": {"login": "patelnav", "id": 1034157, "node_id": "MDQ6VXNlcjEwMzQxNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patelnav", "html_url": "https://github.com/patelnav", "followers_url": "https://api.github.com/users/patelnav/followers", "following_url": "https://api.github.com/users/patelnav/following{/other_user}", "gists_url": "https://api.github.com/users/patelnav/gists{/gist_id}", "starred_url": "https://api.github.com/users/patelnav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patelnav/subscriptions", "organizations_url": "https://api.github.com/users/patelnav/orgs", "repos_url": "https://api.github.com/users/patelnav/repos", "events_url": "https://api.github.com/users/patelnav/events{/privacy}", "received_events_url": "https://api.github.com/users/patelnav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1", "html_url": "https://github.com/sh4nks/flask-caching/milestone/1", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1/labels", "id": 4866767, "node_id": "MDk6TWlsZXN0b25lNDg2Njc2Nw==", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "sh4nks", "id": 1510708, "node_id": "MDQ6VXNlcjE1MTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1510708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh4nks", "html_url": "https://github.com/sh4nks", "followers_url": "https://api.github.com/users/sh4nks/followers", "following_url": "https://api.github.com/users/sh4nks/following{/other_user}", "gists_url": "https://api.github.com/users/sh4nks/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh4nks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh4nks/subscriptions", "organizations_url": "https://api.github.com/users/sh4nks/orgs", "repos_url": "https://api.github.com/users/sh4nks/repos", "events_url": "https://api.github.com/users/sh4nks/events{/privacy}", "received_events_url": "https://api.github.com/users/sh4nks/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-11-21T13:44:49Z", "updated_at": "2019-11-24T17:59:58Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2019-05-30T15:03:22Z", "updated_at": "2019-11-24T17:06:33Z", "closed_at": "2019-11-24T17:06:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using Flask-Caching on an Google AppEngine standard app as of v1.7.2. On python 2\r\nI initialize Cache() without any params. (Defaults to memcached)\r\n\r\nI see the following error on my local machine when using dev_appserver.py\r\nHaven't tried to see what happens on live server.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"default/lib/flask_caching/__init__.py\", line 785, in decorated_function\r\n    found = self.cache.has(cache_key)\r\n  File \"default/lib/flask_caching/backends/memcache.py\", line 148, in has\r\n    return self._client.append(key, \"\")\r\nAttributeError: 'Client' object has no attribute 'append'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/119", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/119/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/119/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/119", "id": 450170152, "node_id": "MDU6SXNzdWU0NTAxNzAxNTI=", "number": 119, "title": "Missing git tag for 1.7.2 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-30T07:27:58Z", "updated_at": "2019-05-30T13:50:20Z", "closed_at": "2019-05-30T13:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/114", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/114/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/114/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/114", "id": 447526071, "node_id": "MDU6SXNzdWU0NDc1MjYwNzE=", "number": 114, "title": "how ignore some jinjia Snippets?", "user": {"login": "Double1996", "id": 22317647, "node_id": "MDQ6VXNlcjIyMzE3NjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/22317647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Double1996", "html_url": "https://github.com/Double1996", "followers_url": "https://api.github.com/users/Double1996/followers", "following_url": "https://api.github.com/users/Double1996/following{/other_user}", "gists_url": "https://api.github.com/users/Double1996/gists{/gist_id}", "starred_url": "https://api.github.com/users/Double1996/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Double1996/subscriptions", "organizations_url": "https://api.github.com/users/Double1996/orgs", "repos_url": "https://api.github.com/users/Double1996/repos", "events_url": "https://api.github.com/users/Double1996/events{/privacy}", "received_events_url": "https://api.github.com/users/Double1996/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-23T08:50:31Z", "updated_at": "2019-05-28T01:45:42Z", "closed_at": "2019-05-28T01:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.  I  cache my dashboard html by \r\n`@cache.cached(query_string=True, timeout=60 * 60, forced_update=True)\r\ndef dashboard()`\r\n\r\n2. I want ignore  some html Snippets such like sidebar or nav \r\n\r\n3. what can I do ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/113", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/113/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/113/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/113", "id": 442574236, "node_id": "MDU6SXNzdWU0NDI1NzQyMzY=", "number": 113, "title": "pylibmc is not thread-safe", "user": {"login": "cedk", "id": 836961, "node_id": "MDQ6VXNlcjgzNjk2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/836961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cedk", "html_url": "https://github.com/cedk", "followers_url": "https://api.github.com/users/cedk/followers", "following_url": "https://api.github.com/users/cedk/following{/other_user}", "gists_url": "https://api.github.com/users/cedk/gists{/gist_id}", "starred_url": "https://api.github.com/users/cedk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cedk/subscriptions", "organizations_url": "https://api.github.com/users/cedk/orgs", "repos_url": "https://api.github.com/users/cedk/repos", "events_url": "https://api.github.com/users/cedk/events{/privacy}", "received_events_url": "https://api.github.com/users/cedk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-10T07:19:48Z", "updated_at": "2020-05-31T11:09:16Z", "closed_at": "2020-05-31T11:09:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The way pylibmc client is used is not thread-safe.\r\nI think flask-caching should use the [ThreadMappedPool](http://sendapatch.se/projects/pylibmc/pooling.html#thread-mapped-pooling).\r\nOtherwise on threaded Flask application, we must use python-memcached but there is no way to force to use this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/112", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/112/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/112/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/112", "id": 441567966, "node_id": "MDU6SXNzdWU0NDE1Njc5NjY=", "number": 112, "title": "forced_update parameter of cached and memoized might receive the some parameters as the function", "user": {"login": "gergelypolonkai", "id": 264485, "node_id": "MDQ6VXNlcjI2NDQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/264485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergelypolonkai", "html_url": "https://github.com/gergelypolonkai", "followers_url": "https://api.github.com/users/gergelypolonkai/followers", "following_url": "https://api.github.com/users/gergelypolonkai/following{/other_user}", "gists_url": "https://api.github.com/users/gergelypolonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergelypolonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergelypolonkai/subscriptions", "organizations_url": "https://api.github.com/users/gergelypolonkai/orgs", "repos_url": "https://api.github.com/users/gergelypolonkai/repos", "events_url": "https://api.github.com/users/gergelypolonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/gergelypolonkai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-08T06:13:48Z", "updated_at": "2019-06-02T05:36:19Z", "closed_at": "2019-06-02T05:36:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Maybe i just can\u02bct see some obvious way, but how the `forced_update` callable is supposed to decide if the value should be refreshed in the cache?\r\n\r\nMy idea was to pass a `refresh_cache=True` parameter to my function and use that in this callable. However, neither `@memoize` nor `@cached` pass any arguments to `forced_update`.\r\n\r\nIs this intentional? I know it would be a breaking change to change this behaviour, though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/111", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/111/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/111/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/111", "id": 441381190, "node_id": "MDU6SXNzdWU0NDEzODExOTA=", "number": 111, "title": "[Request] Adding Documentation on handing Authenticated Caching", "user": {"login": "3lpsy", "id": 8757851, "node_id": "MDQ6VXNlcjg3NTc4NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8757851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3lpsy", "html_url": "https://github.com/3lpsy", "followers_url": "https://api.github.com/users/3lpsy/followers", "following_url": "https://api.github.com/users/3lpsy/following{/other_user}", "gists_url": "https://api.github.com/users/3lpsy/gists{/gist_id}", "starred_url": "https://api.github.com/users/3lpsy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3lpsy/subscriptions", "organizations_url": "https://api.github.com/users/3lpsy/orgs", "repos_url": "https://api.github.com/users/3lpsy/repos", "events_url": "https://api.github.com/users/3lpsy/events{/privacy}", "received_events_url": "https://api.github.com/users/3lpsy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}, {"id": 1161398274, "node_id": "MDU6TGFiZWwxMTYxMzk4Mjc0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/good%20first%20issue", "name": "good first issue", "color": "21c65b", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-07T18:18:52Z", "updated_at": "2020-05-31T11:11:21Z", "closed_at": "2020-05-31T11:11:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe the documentation should contain additional information that addresses the following two issues: \r\n\r\n1) Explaining that Authenticated Routes should not be cached unless the only access control is login_required.\r\n\r\n2) A simple example for using custom keys for caching for users.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/110", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/110/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/110/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/110", "id": 441175916, "node_id": "MDU6SXNzdWU0NDExNzU5MTY=", "number": 110, "title": "run fsck on the repo", "user": {"login": "ageis", "id": 1161532, "node_id": "MDQ6VXNlcjExNjE1MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1161532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ageis", "html_url": "https://github.com/ageis", "followers_url": "https://api.github.com/users/ageis/followers", "following_url": "https://api.github.com/users/ageis/following{/other_user}", "gists_url": "https://api.github.com/users/ageis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ageis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ageis/subscriptions", "organizations_url": "https://api.github.com/users/ageis/orgs", "repos_url": "https://api.github.com/users/ageis/repos", "events_url": "https://api.github.com/users/ageis/events{/privacy}", "received_events_url": "https://api.github.com/users/ageis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-07T11:17:38Z", "updated_at": "2019-05-19T10:37:21Z", "closed_at": "2019-05-19T10:37:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "While pulling your repository, I got this result:\r\n\r\n```error: object 2898a46f3502ed61aa4a154b63f21d6c1a19d15d: zeroPaddedFilemode: contains zero-padded file modes\r\nfatal: fsck error in packed object\r\nfatal: index-pack failed\r\n```\r\n\r\nThis is because I have the following set in my gitconfig:\r\n```\r\n[receive]\r\n        fsckObjects = true\r\n[transfer]\r\n        fsckObjects = true\r\n[fetch]\r\n        fsckObjects = true\r\n```\r\n\r\nbuilt-in git fsck should fix it, but [git-repair](https://git-repair.branchable.com/) is a more heavy duty tool if that doesn't take care of the issue. also you'll likely be rewriting the history and having to force push so depending on how far back this object is in time, you may want to think about the consequences and possibly could be stuck with it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/107", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/107/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/107/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/107", "id": 439066197, "node_id": "MDU6SXNzdWU0MzkwNjYxOTc=", "number": 107, "title": "memoize doesn\u2019t have a facility similar to cached\u2019s response_filter", "user": {"login": "gergelypolonkai", "id": 264485, "node_id": "MDQ6VXNlcjI2NDQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/264485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergelypolonkai", "html_url": "https://github.com/gergelypolonkai", "followers_url": "https://api.github.com/users/gergelypolonkai/followers", "following_url": "https://api.github.com/users/gergelypolonkai/following{/other_user}", "gists_url": "https://api.github.com/users/gergelypolonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergelypolonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergelypolonkai/subscriptions", "organizations_url": "https://api.github.com/users/gergelypolonkai/orgs", "repos_url": "https://api.github.com/users/gergelypolonkai/repos", "events_url": "https://api.github.com/users/gergelypolonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/gergelypolonkai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1", "html_url": "https://github.com/sh4nks/flask-caching/milestone/1", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/milestones/1/labels", "id": 4866767, "node_id": "MDk6TWlsZXN0b25lNDg2Njc2Nw==", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "sh4nks", "id": 1510708, "node_id": "MDQ6VXNlcjE1MTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1510708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh4nks", "html_url": "https://github.com/sh4nks", "followers_url": "https://api.github.com/users/sh4nks/followers", "following_url": "https://api.github.com/users/sh4nks/following{/other_user}", "gists_url": "https://api.github.com/users/sh4nks/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh4nks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh4nks/subscriptions", "organizations_url": "https://api.github.com/users/sh4nks/orgs", "repos_url": "https://api.github.com/users/sh4nks/repos", "events_url": "https://api.github.com/users/sh4nks/events{/privacy}", "received_events_url": "https://api.github.com/users/sh4nks/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-11-21T13:44:49Z", "updated_at": "2019-11-24T17:59:58Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2019-05-01T04:36:14Z", "updated_at": "2019-11-24T16:44:16Z", "closed_at": "2019-11-24T16:44:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`cached` has a facility to ignore (ie. not cache) a return value based on the outcome of its `response_filter` parameter. `memoize` seems to lack such a functionality (see the discussion in #105). Right now it is easy to ignore `None` values (see #106) but it can\u2019t be told to ignore other values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/106", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/106/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/106/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/106", "id": 439065894, "node_id": "MDU6SXNzdWU0MzkwNjU4OTQ=", "number": 106, "title": "cached and memoize run the cached function if the cached value is None", "user": {"login": "gergelypolonkai", "id": 264485, "node_id": "MDQ6VXNlcjI2NDQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/264485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergelypolonkai", "html_url": "https://github.com/gergelypolonkai", "followers_url": "https://api.github.com/users/gergelypolonkai/followers", "following_url": "https://api.github.com/users/gergelypolonkai/following{/other_user}", "gists_url": "https://api.github.com/users/gergelypolonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergelypolonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergelypolonkai/subscriptions", "organizations_url": "https://api.github.com/users/gergelypolonkai/orgs", "repos_url": "https://api.github.com/users/gergelypolonkai/repos", "events_url": "https://api.github.com/users/gergelypolonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/gergelypolonkai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-01T04:33:31Z", "updated_at": "2019-05-25T04:11:10Z", "closed_at": "2019-05-25T04:11:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Consider the following (silly) scenario:\r\n\r\n```\r\n@cache.memoize()\r\ndef very_lengthy_operation(param):\r\n    return do_length_stuff(param)\r\n```\r\n\r\nHere, `None` might be a completely valid return value, but it takes a long time to derive it from `param`, hence the caching. The second time i call this function, `memoize` will look up this value in the cache and will get `None` from `cache.get()`. Then it [checks](https://github.com/sh4nks/flask-caching/blob/master/flask_caching/__init__.py#L405) if the value is `None` and if it is, it runs `very_length_operation()` again.\r\n\r\nThis is because most (all?) cache backends return `None` for any key that is not found in the cache.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/105", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/105/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/105/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/105", "id": 438912685, "node_id": "MDU6SXNzdWU0Mzg5MTI2ODU=", "number": 105, "title": "Is there a way to NOT cache when retuning None or another arbitrary value?", "user": {"login": "aardvark82", "id": 32086262, "node_id": "MDQ6VXNlcjMyMDg2MjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/32086262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aardvark82", "html_url": "https://github.com/aardvark82", "followers_url": "https://api.github.com/users/aardvark82/followers", "following_url": "https://api.github.com/users/aardvark82/following{/other_user}", "gists_url": "https://api.github.com/users/aardvark82/gists{/gist_id}", "starred_url": "https://api.github.com/users/aardvark82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aardvark82/subscriptions", "organizations_url": "https://api.github.com/users/aardvark82/orgs", "repos_url": "https://api.github.com/users/aardvark82/repos", "events_url": "https://api.github.com/users/aardvark82/events{/privacy}", "received_events_url": "https://api.github.com/users/aardvark82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-30T18:22:46Z", "updated_at": "2019-05-01T04:46:13Z", "closed_at": "2019-05-01T04:46:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nis there a way to specify that Flask-Caching does not cache None results? This would help for e.g. when lazy loading objects, etc... \r\n\r\nI find it difficult to invalidate the cache (struggling w params, etc...) and figured there might be a way to define that methods returning None are not cached (until they return a valid response)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/104", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/104/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/104/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/104", "id": 438180047, "node_id": "MDU6SXNzdWU0MzgxODAwNDc=", "number": 104, "title": "Does the library checks for headers?", "user": {"login": "Cosbgn", "id": 17546283, "node_id": "MDQ6VXNlcjE3NTQ2Mjgz", "avatar_url": "https://avatars3.githubusercontent.com/u/17546283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cosbgn", "html_url": "https://github.com/Cosbgn", "followers_url": "https://api.github.com/users/Cosbgn/followers", "following_url": "https://api.github.com/users/Cosbgn/following{/other_user}", "gists_url": "https://api.github.com/users/Cosbgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cosbgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cosbgn/subscriptions", "organizations_url": "https://api.github.com/users/Cosbgn/orgs", "repos_url": "https://api.github.com/users/Cosbgn/repos", "events_url": "https://api.github.com/users/Cosbgn/events{/privacy}", "received_events_url": "https://api.github.com/users/Cosbgn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-29T07:21:12Z", "updated_at": "2019-05-19T10:42:44Z", "closed_at": "2019-05-19T10:42:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a stateless backend API. So the same function could return completely different values depending on which `Bearer token` is in the header.\r\n\r\nDoes this library checks for the bearer token automatically and if not the same as the one cached it re-runs the function?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/102", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/102/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/102/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/102", "id": 428815102, "node_id": "MDU6SXNzdWU0Mjg4MTUxMDI=", "number": 102, "title": "Leftover files in pypi package (1.7.0) cause import name conflict in UWSGICache (Python 2.7)", "user": {"login": "pogliamarci", "id": 1477884, "node_id": "MDQ6VXNlcjE0Nzc4ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1477884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pogliamarci", "html_url": "https://github.com/pogliamarci", "followers_url": "https://api.github.com/users/pogliamarci/followers", "following_url": "https://api.github.com/users/pogliamarci/following{/other_user}", "gists_url": "https://api.github.com/users/pogliamarci/gists{/gist_id}", "starred_url": "https://api.github.com/users/pogliamarci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pogliamarci/subscriptions", "organizations_url": "https://api.github.com/users/pogliamarci/orgs", "repos_url": "https://api.github.com/users/pogliamarci/repos", "events_url": "https://api.github.com/users/pogliamarci/events{/privacy}", "received_events_url": "https://api.github.com/users/pogliamarci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T14:54:31Z", "updated_at": "2019-04-16T09:32:38Z", "closed_at": "2019-04-16T09:32:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI installed the latest release from PyPi, and I got the same issue with UWSGICache and Python2.7 that was solved by #100 .\r\n\r\nDigging a little bit in the `.whl` file, I noticed that it contains both `uwsgi.py` and `uwsgicache.py`, basically rendering #100 useless (as the file with the old name gets installed, and it gets imported). Instead, in the `.tar.gz` file instead there is only the updated `uwsgicache.py` file.\r\n\r\nThe solution would be to regenerating the distribution file `Flask_Caching-1.7.0-py2.py3-none-any.whl` in PyPi without the old `uwsgi.py`.\r\n\r\nThanks a lot,\r\n--Marcello", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/98", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/98/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/98/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/98", "id": 421514037, "node_id": "MDU6SXNzdWU0MjE1MTQwMzc=", "number": 98, "title": "control caching control based on the function return value", "user": {"login": "volodymyrss", "id": 3909535, "node_id": "MDQ6VXNlcjM5MDk1MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3909535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volodymyrss", "html_url": "https://github.com/volodymyrss", "followers_url": "https://api.github.com/users/volodymyrss/followers", "following_url": "https://api.github.com/users/volodymyrss/following{/other_user}", "gists_url": "https://api.github.com/users/volodymyrss/gists{/gist_id}", "starred_url": "https://api.github.com/users/volodymyrss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volodymyrss/subscriptions", "organizations_url": "https://api.github.com/users/volodymyrss/orgs", "repos_url": "https://api.github.com/users/volodymyrss/repos", "events_url": "https://api.github.com/users/volodymyrss/events{/privacy}", "received_events_url": "https://api.github.com/users/volodymyrss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-15T13:17:08Z", "updated_at": "2019-03-29T06:43:49Z", "closed_at": "2019-03-29T06:43:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "is it possible to avoid caching for some return values?\r\nSpecifically, I would want to avoid caching for 500 responses.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/97", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/97/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/97/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/97", "id": 419483500, "node_id": "MDU6SXNzdWU0MTk0ODM1MDA=", "number": 97, "title": "make_cache_key in @cached is not working", "user": {"login": "mdtrooper", "id": 1285451, "node_id": "MDQ6VXNlcjEyODU0NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1285451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdtrooper", "html_url": "https://github.com/mdtrooper", "followers_url": "https://api.github.com/users/mdtrooper/followers", "following_url": "https://api.github.com/users/mdtrooper/following{/other_user}", "gists_url": "https://api.github.com/users/mdtrooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdtrooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdtrooper/subscriptions", "organizations_url": "https://api.github.com/users/mdtrooper/orgs", "repos_url": "https://api.github.com/users/mdtrooper/repos", "events_url": "https://api.github.com/users/mdtrooper/events{/privacy}", "received_events_url": "https://api.github.com/users/mdtrooper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579452958, "node_id": "MDU6TGFiZWw1Nzk0NTI5NTg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/needs%20info", "name": "needs info", "color": "e99695", "default": false, "description": null}, {"id": 1153680766, "node_id": "MDU6TGFiZWwxMTUzNjgwNzY2", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/no%20response", "name": "no response", "color": "b50143", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-11T13:58:16Z", "updated_at": "2019-03-29T06:47:15Z", "closed_at": "2019-03-29T06:47:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The flask-caching module is:\r\n\r\n```\r\n$ pip list | grep Cach\r\nFlask-Caching    1.6.0\r\n```\r\n\r\nAnd the test code is:\r\n\r\n```\r\nfrom api import cache\r\n\r\ndef zzz(*args, **kwargs):\r\n    return 'aaa'\r\n\r\n@cache.cached(timeout=3600)\r\ndef aaa():\r\n    a = 1\r\n    if a:\r\n        return 222\r\n    else:\r\n        return 333\r\n\r\naaa.make_cache_key = zzz\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/95", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/95/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/95/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/95", "id": 417668111, "node_id": "MDU6SXNzdWU0MTc2NjgxMTE=", "number": 95, "title": "GAEMemcachedCache removed", "user": {"login": "patelnav", "id": 1034157, "node_id": "MDQ6VXNlcjEwMzQxNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patelnav", "html_url": "https://github.com/patelnav", "followers_url": "https://api.github.com/users/patelnav/followers", "following_url": "https://api.github.com/users/patelnav/following{/other_user}", "gists_url": "https://api.github.com/users/patelnav/gists{/gist_id}", "starred_url": "https://api.github.com/users/patelnav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patelnav/subscriptions", "organizations_url": "https://api.github.com/users/patelnav/orgs", "repos_url": "https://api.github.com/users/patelnav/repos", "events_url": "https://api.github.com/users/patelnav/events{/privacy}", "received_events_url": "https://api.github.com/users/patelnav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-06T07:53:37Z", "updated_at": "2019-03-07T08:24:34Z", "closed_at": "2019-03-06T20:50:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like GAEMemcachedCache was removed and merged into memcached. This breaks folks who were using CACHE_TYPE = 'gaememcached'\r\n\r\nCan this get documented explicitly, or maintain the mapping as previously done. This does break backwards compat for Google AppEngine Standard users\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/93", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/93/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/93/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/93", "id": 414033421, "node_id": "MDU6SXNzdWU0MTQwMzM0MjE=", "number": 93, "title": "_pickle.UnpicklingError: invalid load key, '9'", "user": {"login": "fili", "id": 115263, "node_id": "MDQ6VXNlcjExNTI2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/115263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fili", "html_url": "https://github.com/fili", "followers_url": "https://api.github.com/users/fili/followers", "following_url": "https://api.github.com/users/fili/following{/other_user}", "gists_url": "https://api.github.com/users/fili/gists{/gist_id}", "starred_url": "https://api.github.com/users/fili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fili/subscriptions", "organizations_url": "https://api.github.com/users/fili/orgs", "repos_url": "https://api.github.com/users/fili/repos", "events_url": "https://api.github.com/users/fili/events{/privacy}", "received_events_url": "https://api.github.com/users/fili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-25T10:25:04Z", "updated_at": "2020-03-03T16:12:52Z", "closed_at": "2019-03-05T18:57:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "using blueprints, FileSystemCache on Google App Engine Standard Python3.7 and having the cache separate:\r\n\r\ncache.py:\r\n```\r\nfrom flask_caching import Cache\r\ncache = Cache()\r\n```\r\n\r\nconfig:\r\n```\r\nCACHE_CONFIG = {\r\n    'CACHE_TYPE': 'filesystem',\r\n    'CACHE_DIR': '/tmp',\r\n    'CACHE_THRESHOLD': 1000,\r\n    'CACHE_DEFAULT_TIMEOUT': 3600,\r\n}\r\n```\r\n\r\napp.py:\r\n```\r\napp = Flask(__name__)\r\ncache.init_app(app, config.CACHE_CONFIG)\r\napp.config.from_object(flask_config)\r\n```\r\n\r\nblueprint:\r\n```\r\nfrom cache import cache \r\n\r\n@public.route('/<lang>/', methods=['GET'])\r\n@cache.cached()\r\ndef page(lang):\r\n    ...\r\n```\r\n\r\nThen getting this error:\r\n```\r\nERROR:root:Traceback (most recent call last):\r\n  File \"/tmp/tmphwgdsy/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/tmp/tmphwgdsy/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/tmp/tmphwgdsy/lib/python3.6/site-packages/flask_caching/__init__.py\", line 400, in decorated_function\r\n    timeout=decorated_function.cache_timeout,\r\n  File \"/tmp/tmphwgdsy/lib/python3.6/site-packages/flask_caching/backends/filesystem.py\", line 160, in set\r\n    self._prune()\r\n  File \"/tmp/tmphwgdsy/lib/python3.6/site-packages/flask_caching/backends/filesystem.py\", line 109, in _prune\r\n    expires = pickle.load(f)\r\n_pickle.UnpicklingError: invalid load key, '9'.\r\n ```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/92", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/92/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/92/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/92", "id": 412334820, "node_id": "MDU6SXNzdWU0MTIzMzQ4MjA=", "number": 92, "title": "How to invalid cache based on instance?", "user": {"login": "StoneMoe", "id": 5786577, "node_id": "MDQ6VXNlcjU3ODY1Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5786577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StoneMoe", "html_url": "https://github.com/StoneMoe", "followers_url": "https://api.github.com/users/StoneMoe/followers", "following_url": "https://api.github.com/users/StoneMoe/following{/other_user}", "gists_url": "https://api.github.com/users/StoneMoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/StoneMoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StoneMoe/subscriptions", "organizations_url": "https://api.github.com/users/StoneMoe/orgs", "repos_url": "https://api.github.com/users/StoneMoe/repos", "events_url": "https://api.github.com/users/StoneMoe/events{/privacy}", "received_events_url": "https://api.github.com/users/StoneMoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-20T09:48:46Z", "updated_at": "2019-02-28T02:43:07Z", "closed_at": "2019-02-24T19:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Supporting this can be very useful for ORM models and its methods", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/91", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/91/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/91/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/91", "id": 411446020, "node_id": "MDU6SXNzdWU0MTE0NDYwMjA=", "number": 91, "title": "Disable caching based on the response http status code", "user": {"login": "ronlut", "id": 3050627, "node_id": "MDQ6VXNlcjMwNTA2Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3050627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronlut", "html_url": "https://github.com/ronlut", "followers_url": "https://api.github.com/users/ronlut/followers", "following_url": "https://api.github.com/users/ronlut/following{/other_user}", "gists_url": "https://api.github.com/users/ronlut/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronlut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronlut/subscriptions", "organizations_url": "https://api.github.com/users/ronlut/orgs", "repos_url": "https://api.github.com/users/ronlut/repos", "events_url": "https://api.github.com/users/ronlut/events{/privacy}", "received_events_url": "https://api.github.com/users/ronlut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-18T12:10:31Z", "updated_at": "2019-03-05T19:01:59Z", "closed_at": "2019-03-05T19:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nI'm looking for an option to disable caching for certain response status codes.\r\nMy flask endpoint queries another endpoint, and I return different status codes (in the 4XX-5XX range) depending on the problem I encountered with the second endpoint.\r\nI want to disable caching for responses that are not within the \"valid\" range (2XX-3XX).\r\nIs that somehow possible with flask-caching? The `unless` function is evaluated before my view function is invoked so I can't use the response.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/89", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/89/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/89/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/89", "id": 403180043, "node_id": "MDU6SXNzdWU0MDMxODAwNDM=", "number": 89, "title": "Documentation of delete_memoized needs update", "user": {"login": "zmwangx", "id": 4149852, "node_id": "MDQ6VXNlcjQxNDk4NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4149852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmwangx", "html_url": "https://github.com/zmwangx", "followers_url": "https://api.github.com/users/zmwangx/followers", "following_url": "https://api.github.com/users/zmwangx/following{/other_user}", "gists_url": "https://api.github.com/users/zmwangx/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmwangx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmwangx/subscriptions", "organizations_url": "https://api.github.com/users/zmwangx/orgs", "repos_url": "https://api.github.com/users/zmwangx/repos", "events_url": "https://api.github.com/users/zmwangx/events{/privacy}", "received_events_url": "https://api.github.com/users/zmwangx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}, {"id": 1161398274, "node_id": "MDU6TGFiZWwxMTYxMzk4Mjc0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/good%20first%20issue", "name": "good first issue", "color": "21c65b", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-25T14:30:37Z", "updated_at": "2019-02-24T19:59:42Z", "closed_at": "2019-02-24T19:59:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the documentation of `delete_memoized` uses function name as argument:\r\n\r\nhttps://github.com/sh4nks/flask-caching/blob/34a84f705d5b7dd793257b6790be388b7bfcc994/flask_caching/__init__.py#L719-L753\r\n\r\nHowever, this has been deprecated in code:\r\n\r\nhttps://github.com/sh4nks/flask-caching/blob/34a84f705d5b7dd793257b6790be388b7bfcc994/flask_caching/__init__.py#L825-L828", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/88", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/88/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/88/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/88", "id": 391043057, "node_id": "MDU6SXNzdWUzOTEwNDMwNTc=", "number": 88, "title": "Testing requires pytest-cov", "user": {"login": "moubctez", "id": 12608048, "node_id": "MDQ6VXNlcjEyNjA4MDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12608048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moubctez", "html_url": "https://github.com/moubctez", "followers_url": "https://api.github.com/users/moubctez/followers", "following_url": "https://api.github.com/users/moubctez/following{/other_user}", "gists_url": "https://api.github.com/users/moubctez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moubctez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moubctez/subscriptions", "organizations_url": "https://api.github.com/users/moubctez/orgs", "repos_url": "https://api.github.com/users/moubctez/repos", "events_url": "https://api.github.com/users/moubctez/events{/privacy}", "received_events_url": "https://api.github.com/users/moubctez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1161398274, "node_id": "MDU6TGFiZWwxMTYxMzk4Mjc0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/good%20first%20issue", "name": "good first issue", "color": "21c65b", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-14T10:01:45Z", "updated_at": "2019-02-24T19:37:09Z", "closed_at": "2019-02-24T19:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "In setup.py, tests_require should also include 'pytest-cov' (or --cov options should be removed from setup.cfg). Also, PyPI archive does not include tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/87", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/87/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/87/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/87", "id": 375254101, "node_id": "MDU6SXNzdWUzNzUyNTQxMDE=", "number": 87, "title": "When will a new pypiversion be released?", "user": {"login": "timifasubaa", "id": 30888507, "node_id": "MDQ6VXNlcjMwODg4NTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/30888507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timifasubaa", "html_url": "https://github.com/timifasubaa", "followers_url": "https://api.github.com/users/timifasubaa/followers", "following_url": "https://api.github.com/users/timifasubaa/following{/other_user}", "gists_url": "https://api.github.com/users/timifasubaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/timifasubaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timifasubaa/subscriptions", "organizations_url": "https://api.github.com/users/timifasubaa/orgs", "repos_url": "https://api.github.com/users/timifasubaa/repos", "events_url": "https://api.github.com/users/timifasubaa/events{/privacy}", "received_events_url": "https://api.github.com/users/timifasubaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-29T23:10:50Z", "updated_at": "2019-02-24T19:39:35Z", "closed_at": "2019-02-24T19:39:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nSince the current codebase deprecates usage of werkzeug.contrib.cache in favor of flask_caching.backends.cache, I was wondering when you plan to release the current code to pypi.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/86", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/86/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/86/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/86", "id": 371586600, "node_id": "MDU6SXNzdWUzNzE1ODY2MDA=", "number": 86, "title": "[quetion] Is this correct for working with multiple caches?", "user": {"login": "rudicba", "id": 4934615, "node_id": "MDQ6VXNlcjQ5MzQ2MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4934615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rudicba", "html_url": "https://github.com/rudicba", "followers_url": "https://api.github.com/users/rudicba/followers", "following_url": "https://api.github.com/users/rudicba/following{/other_user}", "gists_url": "https://api.github.com/users/rudicba/gists{/gist_id}", "starred_url": "https://api.github.com/users/rudicba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rudicba/subscriptions", "organizations_url": "https://api.github.com/users/rudicba/orgs", "repos_url": "https://api.github.com/users/rudicba/repos", "events_url": "https://api.github.com/users/rudicba/events{/privacy}", "received_events_url": "https://api.github.com/users/rudicba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 988718605, "node_id": "MDU6TGFiZWw5ODg3MTg2MDU=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/awaiting%20response", "name": "awaiting response", "color": "fcc9ab", "default": false, "description": ""}, {"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T15:27:10Z", "updated_at": "2018-12-07T11:05:39Z", "closed_at": "2018-12-07T11:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can i configure multiples caches in Flask app? \r\n\r\nI'm using this approach: \r\n\r\ncache.py\r\n``` python\r\ncache1 = Cache(config={\r\n    'CACHE_TYPE': 'filesystem',\r\n    'CACHE_DIR': os.path.join(tempfile.gettempdir(), 'bar')\r\n    })\r\n\r\ncache2 = Cache(config={\r\n    'CACHE_TYPE': 'memcached',\r\n    'CACHE_MEMCACHED_SERVERS': get_cache_servers('foo')\r\n    })\r\n``` \r\n\r\napp.py\r\n``` python\r\nfrom bar.cache import cache1, cache2\r\n\r\ndef create_app(config_filename=None):\r\n    \"\"\"Create new Flask application.\"\"\"\r\n    app = Flask(__name__)\r\n    cache1.init_app(app)\r\n    cache2.init_app(app)\r\n```\r\n\r\ni can't find in documentation how multiple caches should be configured, this approach should work fine?\r\n\r\nThank\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/85", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/85/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/85/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/85", "id": 367898396, "node_id": "MDU6SXNzdWUzNjc4OTgzOTY=", "number": 85, "title": "Pass callable to `cache.cached` so an endpoint can be cached with variable keys", "user": {"login": "heartsucker", "id": 3998464, "node_id": "MDQ6VXNlcjM5OTg0NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3998464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heartsucker", "html_url": "https://github.com/heartsucker", "followers_url": "https://api.github.com/users/heartsucker/followers", "following_url": "https://api.github.com/users/heartsucker/following{/other_user}", "gists_url": "https://api.github.com/users/heartsucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/heartsucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heartsucker/subscriptions", "organizations_url": "https://api.github.com/users/heartsucker/orgs", "repos_url": "https://api.github.com/users/heartsucker/repos", "events_url": "https://api.github.com/users/heartsucker/events{/privacy}", "received_events_url": "https://api.github.com/users/heartsucker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-08T18:10:44Z", "updated_at": "2018-10-13T07:25:13Z", "closed_at": "2018-10-13T07:25:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Image this scenario\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask_caching import Cache\r\nfrom flask_login import current_user\r\n\r\napp = Flask(__name__)\r\ncache = Cache(app)\r\n\r\ndef user_permissions():\r\n    if current_user.is_authenticated:\r\n        if currenet_user.is_admin:\r\n            return 'admin'\r\n        else:\r\n            return 'normal'\r\n    else:\r\n        return 'unauth'\r\n\r\n@app.route('/')\r\n@cache.cached(timeout=300, key_func=user_permissions)\r\ndef index():\r\n    return render_template('index.html')\r\n```\r\n\r\nThis could be achieved with caching blocks within the template, but that often leads to repetition where many blocks are cached with (mostly) the same key.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/84", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/84/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/84/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/84", "id": 361380395, "node_id": "MDU6SXNzdWUzNjEzODAzOTU=", "number": 84, "title": "Missing source distribution for v1.3.3?", "user": {"login": "mstone", "id": 412508, "node_id": "MDQ6VXNlcjQxMjUwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/412508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mstone", "html_url": "https://github.com/mstone", "followers_url": "https://api.github.com/users/mstone/followers", "following_url": "https://api.github.com/users/mstone/following{/other_user}", "gists_url": "https://api.github.com/users/mstone/gists{/gist_id}", "starred_url": "https://api.github.com/users/mstone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mstone/subscriptions", "organizations_url": "https://api.github.com/users/mstone/orgs", "repos_url": "https://api.github.com/users/mstone/repos", "events_url": "https://api.github.com/users/mstone/events{/privacy}", "received_events_url": "https://api.github.com/users/mstone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-18T16:13:18Z", "updated_at": "2018-09-19T20:58:43Z", "closed_at": "2018-09-19T20:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear maintainer,\r\n\r\nAs discussed in https://github.com/garbas/pypi2nix/issues/220 and elsewhere, v1.3.3 of flask-caching was [released on PyPI](https://pypi.org/project/Flask-Caching/1.3.3/) without a corresponding source distribution and this is breaking attempts to install downstream projects like apache-airflow on systems that need to rebuild from source and that expect to be able to do so based on what's in PyPI.\r\n\r\nAs a result, will you please either\r\n\r\na) publish a corresponding source distribution for v1.3.3\r\n\r\nor, if that is infeasible\r\n\r\nb) republish the v1.3.3 code with both source and binary distributions as v1.3.4 so that downstream projects with version bounds like >=1.3.3,<1.4 pick up the new version?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/83", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/83/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/83/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/83", "id": 360940129, "node_id": "MDU6SXNzdWUzNjA5NDAxMjk=", "number": 83, "title": "Publish API documentation", "user": {"login": "remeika", "id": 4956098, "node_id": "MDQ6VXNlcjQ5NTYwOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4956098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remeika", "html_url": "https://github.com/remeika", "followers_url": "https://api.github.com/users/remeika/followers", "following_url": "https://api.github.com/users/remeika/following{/other_user}", "gists_url": "https://api.github.com/users/remeika/gists{/gist_id}", "starred_url": "https://api.github.com/users/remeika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remeika/subscriptions", "organizations_url": "https://api.github.com/users/remeika/orgs", "repos_url": "https://api.github.com/users/remeika/repos", "events_url": "https://api.github.com/users/remeika/events{/privacy}", "received_events_url": "https://api.github.com/users/remeika/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-17T16:08:45Z", "updated_at": "2019-02-24T19:38:48Z", "closed_at": "2019-02-24T19:38:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Flask-Caching has great prose-based documentation, but [does not publish API documentation](https://flask-caching.readthedocs.io/en/latest/#api). Adding this level of detail to the docs would help prevent issues like #58 and #82 from opened.\r\n\r\nAPI docs should be auto generated and published as part of the release process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/82", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/82/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/82/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/82", "id": 355137169, "node_id": "MDU6SXNzdWUzNTUxMzcxNjk=", "number": 82, "title": "[question] choose memoize() key", "user": {"login": "irux", "id": 10131986, "node_id": "MDQ6VXNlcjEwMTMxOTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/10131986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irux", "html_url": "https://github.com/irux", "followers_url": "https://api.github.com/users/irux/followers", "following_url": "https://api.github.com/users/irux/following{/other_user}", "gists_url": "https://api.github.com/users/irux/gists{/gist_id}", "starred_url": "https://api.github.com/users/irux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irux/subscriptions", "organizations_url": "https://api.github.com/users/irux/orgs", "repos_url": "https://api.github.com/users/irux/repos", "events_url": "https://api.github.com/users/irux/events{/privacy}", "received_events_url": "https://api.github.com/users/irux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}, {"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T12:28:54Z", "updated_at": "2019-02-24T19:43:47Z", "closed_at": "2019-02-24T19:43:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I would like to know if I can decide which parameters do I want to use from a function to do the memoize(). I would like only to use some of the arguments of the function.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/81", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/81/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/81/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/81", "id": 344339480, "node_id": "MDU6SXNzdWUzNDQzMzk0ODA=", "number": 81, "title": "[question] about RedisCache.dump_object", "user": {"login": "wandh", "id": 10876721, "node_id": "MDQ6VXNlcjEwODc2NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/10876721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wandh", "html_url": "https://github.com/wandh", "followers_url": "https://api.github.com/users/wandh/followers", "following_url": "https://api.github.com/users/wandh/following{/other_user}", "gists_url": "https://api.github.com/users/wandh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wandh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wandh/subscriptions", "organizations_url": "https://api.github.com/users/wandh/orgs", "repos_url": "https://api.github.com/users/wandh/repos", "events_url": "https://api.github.com/users/wandh/events{/privacy}", "received_events_url": "https://api.github.com/users/wandh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-25T08:17:18Z", "updated_at": "2018-12-07T11:04:19Z", "closed_at": "2018-12-07T11:04:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/sh4nks/flask-caching/blob/5d1856b7bf3936638382e98132149525c2411316/flask_caching/backends/cache.py#L594\r\n\r\n```\r\ndef dump_object(self, value):\r\n        t = type(value)\r\n        if t in integer_types:\r\n            return str(value).encode('ascii')\r\n        return b'!' + pickle.dumps(value)\r\n\r\n```\r\nWhy not :\r\n```\r\n\r\ndef dump_object(self, value):\r\n       return  pickle.dumps(value)\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/80", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/80/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/80/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/80", "id": 344265461, "node_id": "MDU6SXNzdWUzNDQyNjU0NjE=", "number": 80, "title": "[question] Multi-level caching", "user": {"login": "diogobaeder", "id": 207168, "node_id": "MDQ6VXNlcjIwNzE2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/207168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diogobaeder", "html_url": "https://github.com/diogobaeder", "followers_url": "https://api.github.com/users/diogobaeder/followers", "following_url": "https://api.github.com/users/diogobaeder/following{/other_user}", "gists_url": "https://api.github.com/users/diogobaeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/diogobaeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diogobaeder/subscriptions", "organizations_url": "https://api.github.com/users/diogobaeder/orgs", "repos_url": "https://api.github.com/users/diogobaeder/repos", "events_url": "https://api.github.com/users/diogobaeder/events{/privacy}", "received_events_url": "https://api.github.com/users/diogobaeder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 988718605, "node_id": "MDU6TGFiZWw5ODg3MTg2MDU=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/awaiting%20response", "name": "awaiting response", "color": "fcc9ab", "default": false, "description": ""}, {"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T02:09:12Z", "updated_at": "2018-12-07T11:05:20Z", "closed_at": "2018-12-07T11:05:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nSorry for opening a question issue here, but I couldn't find any user group for the library (I hope it's OK).\r\n\r\nI'm starting to experiment with Flask-Caching for an application I'm building, and I'd like to know if the library supports multi-level caching. For example, can I have something like this?:\r\n\r\n```\r\nmemory_cache = Cache(config=config_for_memory)\r\npersistent_cache = Cache(config=config_for_persistent)\r\nmemory_cache.init_app(app)\r\npersistent_cache.init_app(app)\r\n```\r\n\r\nIs the above expected to work? I need this because this application will have to deal with very fast access to in-memory cache but also a (not so very) fast persisted cache in certain cases.\r\n\r\nThanks!\r\n\r\nDiogo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/79", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/79/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/79/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/79", "id": 343515542, "node_id": "MDU6SXNzdWUzNDM1MTU1NDI=", "number": 79, "title": "Wrong example in docs", "user": {"login": "JungWinter", "id": 13811604, "node_id": "MDQ6VXNlcjEzODExNjA0", "avatar_url": "https://avatars1.githubusercontent.com/u/13811604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JungWinter", "html_url": "https://github.com/JungWinter", "followers_url": "https://api.github.com/users/JungWinter/followers", "following_url": "https://api.github.com/users/JungWinter/following{/other_user}", "gists_url": "https://api.github.com/users/JungWinter/gists{/gist_id}", "starred_url": "https://api.github.com/users/JungWinter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JungWinter/subscriptions", "organizations_url": "https://api.github.com/users/JungWinter/orgs", "repos_url": "https://api.github.com/users/JungWinter/repos", "events_url": "https://api.github.com/users/JungWinter/events{/privacy}", "received_events_url": "https://api.github.com/users/JungWinter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-23T07:20:13Z", "updated_at": "2018-07-25T18:25:26Z", "closed_at": "2018-07-24T17:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/13811604/43062522-12508146-8e94-11e8-8323-8422882e7a0f.png)\r\n\r\nI think It should be a below code.\r\n\r\n```py\r\n@cache.cached(timeout=50)\r\n@app.route('/')\r\ndef index():\r\n    return 'Cached for 50s'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/78", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/78/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/78/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/78", "id": 342946107, "node_id": "MDU6SXNzdWUzNDI5NDYxMDc=", "number": 78, "title": "travis-ci skips tests", "user": {"login": "buckley-w-david", "id": 1952571, "node_id": "MDQ6VXNlcjE5NTI1NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1952571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buckley-w-david", "html_url": "https://github.com/buckley-w-david", "followers_url": "https://api.github.com/users/buckley-w-david/followers", "following_url": "https://api.github.com/users/buckley-w-david/following{/other_user}", "gists_url": "https://api.github.com/users/buckley-w-david/gists{/gist_id}", "starred_url": "https://api.github.com/users/buckley-w-david/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buckley-w-david/subscriptions", "organizations_url": "https://api.github.com/users/buckley-w-david/orgs", "repos_url": "https://api.github.com/users/buckley-w-david/repos", "events_url": "https://api.github.com/users/buckley-w-david/events{/privacy}", "received_events_url": "https://api.github.com/users/buckley-w-david/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-20T01:56:19Z", "updated_at": "2019-02-24T19:37:30Z", "closed_at": "2019-02-24T19:37:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looking through the logs in CI, I noticed that the Redis, Memcached, and UWSGICache tests are skipped.\r\n\r\nThis is dangerous, as it means purposed breaking changes can find their way into master unless manual verification is done prior, which is easy to miss.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/73", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/73/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/73/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/73", "id": 335699341, "node_id": "MDU6SXNzdWUzMzU2OTkzNDE=", "number": 73, "title": "Share cache between applications", "user": {"login": "jinyus", "id": 30532952, "node_id": "MDQ6VXNlcjMwNTMyOTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/30532952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinyus", "html_url": "https://github.com/jinyus", "followers_url": "https://api.github.com/users/jinyus/followers", "following_url": "https://api.github.com/users/jinyus/following{/other_user}", "gists_url": "https://api.github.com/users/jinyus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinyus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinyus/subscriptions", "organizations_url": "https://api.github.com/users/jinyus/orgs", "repos_url": "https://api.github.com/users/jinyus/repos", "events_url": "https://api.github.com/users/jinyus/events{/privacy}", "received_events_url": "https://api.github.com/users/jinyus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865431, "node_id": "MDU6TGFiZWw0MDI4NjU0MzE=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T07:52:00Z", "updated_at": "2018-07-10T17:52:57Z", "closed_at": "2018-07-10T17:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just realized that when trying to get an item set by another app would always return None, How can I share cache between apps using the same cache server? does the extension add a unique identifier to the key when setting an item in cache? If you, how would I get that get that identifier?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/72", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/72/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/72/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/72", "id": 317845558, "node_id": "MDU6SXNzdWUzMTc4NDU1NTg=", "number": 72, "title": "Deprecate werkzeug.contrib.cache", "user": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-26T01:24:38Z", "updated_at": "2018-07-10T17:35:16Z", "closed_at": "2018-07-10T17:35:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are going to remove `werkzeug.contrib.cache` from werkzeug. Flask-Caching is depending on it, can you copy that part into your repo and maintain it in Flask-Caching.\r\n\r\nhttps://github.com/pallets/werkzeug/issues/1249", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/71", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/71/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/71/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/71", "id": 314750109, "node_id": "MDU6SXNzdWUzMTQ3NTAxMDk=", "number": 71, "title": "Caching based on POST body", "user": {"login": "rangerscience", "id": 381637, "node_id": "MDQ6VXNlcjM4MTYzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/381637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rangerscience", "html_url": "https://github.com/rangerscience", "followers_url": "https://api.github.com/users/rangerscience/followers", "following_url": "https://api.github.com/users/rangerscience/following{/other_user}", "gists_url": "https://api.github.com/users/rangerscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/rangerscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rangerscience/subscriptions", "organizations_url": "https://api.github.com/users/rangerscience/orgs", "repos_url": "https://api.github.com/users/rangerscience/repos", "events_url": "https://api.github.com/users/rangerscience/events{/privacy}", "received_events_url": "https://api.github.com/users/rangerscience/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-16T17:33:52Z", "updated_at": "2018-12-07T11:08:10Z", "closed_at": "2018-12-07T11:08:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have requests that I want to cache that have array parameters (so they don't fit well in GET queries; have to stick stuff in the POST body). However, EITHER there's no way to get flask-caching to include the POST body as part of the cache key, OR, it's really not clear from the docs how to do this.\r\n\r\nIt seems like an \"easy solution\" would be for the decorator to accept a function argument for the `make_cache_key`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/68", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/68/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/68/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/68", "id": 312589604, "node_id": "MDU6SXNzdWUzMTI1ODk2MDQ=", "number": 68, "title": "Memoize doesn't take into account all args if using args unpacking", "user": {"login": "sliwinski-milosz", "id": 13810205, "node_id": "MDQ6VXNlcjEzODEwMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/13810205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sliwinski-milosz", "html_url": "https://github.com/sliwinski-milosz", "followers_url": "https://api.github.com/users/sliwinski-milosz/followers", "following_url": "https://api.github.com/users/sliwinski-milosz/following{/other_user}", "gists_url": "https://api.github.com/users/sliwinski-milosz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sliwinski-milosz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sliwinski-milosz/subscriptions", "organizations_url": "https://api.github.com/users/sliwinski-milosz/orgs", "repos_url": "https://api.github.com/users/sliwinski-milosz/repos", "events_url": "https://api.github.com/users/sliwinski-milosz/events{/privacy}", "received_events_url": "https://api.github.com/users/sliwinski-milosz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-09T16:00:07Z", "updated_at": "2018-04-16T19:44:41Z", "closed_at": "2018-04-16T19:44:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tested that on:\r\n`Python 2.7`\r\n`Flask-Caching==1.3.3`\r\n\r\nBelow you can find new test that fails for me:\r\n```\r\ndef test_memoize_when_using_args_unpacking(app, cache):\r\n    with app.test_request_context():\r\n\r\n        class Mock(object):\r\n\r\n            @classmethod\r\n            @cache.memoize(5)\r\n            def big_foo(cls, *args):\r\n                return sum(args) + random.randrange(0, 100000)\r\n\r\n        result = Mock.big_foo(5, 2)\r\n        result2 = Mock.big_foo(5, 3)\r\n\r\n        time.sleep(1)\r\n\r\n        assert Mock.big_foo(5, 2) == result\r\n        assert Mock.big_foo(5, 2) == result\r\n        assert Mock.big_foo(5, 3) != result\r\n        assert Mock.big_foo(5, 3) == result2\r\n\r\n        cache.delete_memoized(Mock.big_foo)\r\n\r\n        assert Mock.big_foo(5, 2) != result\r\n        assert Mock.big_foo(5, 3) != result2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/66", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/66/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/66/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/66", "id": 312375584, "node_id": "MDU6SXNzdWUzMTIzNzU1ODQ=", "number": 66, "title": "Document support for Redis over https via CACHE_REDIS_URL", "user": {"login": "remeika", "id": 4956098, "node_id": "MDQ6VXNlcjQ5NTYwOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4956098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remeika", "html_url": "https://github.com/remeika", "followers_url": "https://api.github.com/users/remeika/followers", "following_url": "https://api.github.com/users/remeika/following{/other_user}", "gists_url": "https://api.github.com/users/remeika/gists{/gist_id}", "starred_url": "https://api.github.com/users/remeika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remeika/subscriptions", "organizations_url": "https://api.github.com/users/remeika/orgs", "repos_url": "https://api.github.com/users/remeika/repos", "events_url": "https://api.github.com/users/remeika/events{/privacy}", "received_events_url": "https://api.github.com/users/remeika/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-09T02:56:44Z", "updated_at": "2018-04-16T19:45:48Z", "closed_at": "2018-04-16T19:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Flask-Caching==1.3.3` currently supports connecting to Redis over TLS when you create a connection using the `CACHE_REDIS_URL` configuration option:\r\n\r\n```\r\nIn [1]: from flask_caching import Cache\r\nIn [2]: from flask import Flask\r\nIn [3]: config = {'CACHE_TYPE': 'redis', 'CACHE_REDIS_URL': 'rediss://:mypassword@redis.host:6380/0'}\r\nIn [4]: cache = Cache(config=config)\r\nIn [5]: app = Flask(__name__)\r\nIn [6]: cache.init_app(app)\r\nIn [7]: cache.get(\"my-key\")\r\nIn [8]: cache.set('hi', 'hello')\r\nOut[8]: True\r\nIn [9]: cache.get(\"hi\")\r\nOut[9]: 'hello'\r\n```\r\n\r\nbut this support is not mentioned in the documentation. We should add a note that `CACHE_REDIS_URL` accepts `rediss://` URLs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/65", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/65/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/65/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/65", "id": 310148704, "node_id": "MDU6SXNzdWUzMTAxNDg3MDQ=", "number": 65, "title": "Support for sha256 in memoize key for FIPS compliance", "user": {"login": "eliasdawson", "id": 145914, "node_id": "MDQ6VXNlcjE0NTkxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/145914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliasdawson", "html_url": "https://github.com/eliasdawson", "followers_url": "https://api.github.com/users/eliasdawson/followers", "following_url": "https://api.github.com/users/eliasdawson/following{/other_user}", "gists_url": "https://api.github.com/users/eliasdawson/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliasdawson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliasdawson/subscriptions", "organizations_url": "https://api.github.com/users/eliasdawson/orgs", "repos_url": "https://api.github.com/users/eliasdawson/repos", "events_url": "https://api.github.com/users/eliasdawson/events{/privacy}", "received_events_url": "https://api.github.com/users/eliasdawson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-30T19:28:06Z", "updated_at": "2018-08-09T05:46:17Z", "closed_at": "2018-08-09T05:46:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am in the process of migrating my server to a FIPS-compliant OS which doesn't have md5 available which results in a segmentation fault when using the memoize decorator.\r\n\r\nI'm wondering if it's possible to override the make_cache_key method or some other way to use sha256 instead of md5 to create the cache key with memoize.\r\n\r\nhttps://github.com/sh4nks/flask-caching/blob/master/flask_caching/__init__.py#L513\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/64", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/64/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/64/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/64", "id": 308341737, "node_id": "MDU6SXNzdWUzMDgzNDE3Mzc=", "number": 64, "title": "delete_many stop at first error", "user": {"login": "johaven", "id": 5459596, "node_id": "MDQ6VXNlcjU0NTk1OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5459596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johaven", "html_url": "https://github.com/johaven", "followers_url": "https://api.github.com/users/johaven/followers", "following_url": "https://api.github.com/users/johaven/following{/other_user}", "gists_url": "https://api.github.com/users/johaven/gists{/gist_id}", "starred_url": "https://api.github.com/users/johaven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johaven/subscriptions", "organizations_url": "https://api.github.com/users/johaven/orgs", "repos_url": "https://api.github.com/users/johaven/repos", "events_url": "https://api.github.com/users/johaven/events{/privacy}", "received_events_url": "https://api.github.com/users/johaven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-25T11:26:40Z", "updated_at": "2019-05-03T09:41:25Z", "closed_at": "2019-03-05T21:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n    def delete_many(self, *keys):\r\n        \"\"\"Deletes multiple keys at once.\r\n\r\n        :param keys: The function accepts multiple keys as positional\r\n                     arguments.\r\n        :returns: Whether all given keys have been deleted.\r\n        :rtype: boolean\r\n        \"\"\"\r\n        return all(self.delete(key) for key in keys)\r\n```\r\nCurrently the delete loop stops at the first item that is False (it's the behavior of the **all** function if evaluation is done inside)\r\nThis is annoying because you have to check the presence in the cache of all the keys you want to delete.\r\nThe default behaviour should be to continue the deletion despite the errors.\r\nIn this way the trick is to bypass the evaluation during the loop:\r\n```python\r\n return all([self.delete(key) for key in keys])\r\n```\r\nOr add this as option ?\r\n```python\r\ndef delete_many(self, *keys, ignore_errors=False)\r\n```\r\nNote: I found this problem with the file system cache", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/63", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/63/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/63/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/63", "id": 308017993, "node_id": "MDU6SXNzdWUzMDgwMTc5OTM=", "number": 63, "title": "Can you add the CACHE_ configs into Flask config?", "user": {"login": "Torniojaws", "id": 5442750, "node_id": "MDQ6VXNlcjU0NDI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5442750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Torniojaws", "html_url": "https://github.com/Torniojaws", "followers_url": "https://api.github.com/users/Torniojaws/followers", "following_url": "https://api.github.com/users/Torniojaws/following{/other_user}", "gists_url": "https://api.github.com/users/Torniojaws/gists{/gist_id}", "starred_url": "https://api.github.com/users/Torniojaws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Torniojaws/subscriptions", "organizations_url": "https://api.github.com/users/Torniojaws/orgs", "repos_url": "https://api.github.com/users/Torniojaws/repos", "events_url": "https://api.github.com/users/Torniojaws/events{/privacy}", "received_events_url": "https://api.github.com/users/Torniojaws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}, {"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-23T12:53:09Z", "updated_at": "2019-03-06T21:21:45Z", "closed_at": "2019-03-06T21:21:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's a bit unclear to me if the CACHE_ configs can be put into the regular Flask config, or they are separate from it?\r\n\r\nIs this valid?\r\n```\r\nclass Config(Object):\r\n    # Unrelated examples\r\n    SECRET_KEY = configfile.get(\"env\", \"secret\")\r\n    CORS_HEADERS = [\"Content-Type\", \"Authorization\", \"User\"\r\n    # Related to flask-caching\r\n    CACHE_TYPE = \"redis\"\r\n    CACHE_REDIS_HOST = \"127.0.0.1\r\n    # etc\r\n\r\n\r\nCONFIG = Config()\r\n\r\napp = Flask(__name__)\r\napp.config.from_object(CONFIG)\r\ncache = Cache(app)\r\n```\r\n\r\nOr should it be separate?\r\n```\r\nclass Config(Object):\r\n    # Unrelated examples\r\n    SECRET_KEY = configfile.get(\"env\", \"secret\")\r\n    CORS_HEADERS = [\"Content-Type\", \"Authorization\", \"User\"\r\n\r\n\r\nclass CacheConfig(Object):\r\n    # Related to flask-caching\r\n    CACHE_TYPE = \"redis\"\r\n    CACHE_REDIS_HOST = \"127.0.0.1\r\n\r\n\r\nCONFIG = Config()\r\nCACHE_CONFIG = CacheConfig()\r\n\r\napp = Flask(__name__)\r\ncache = Cache(app, CACHE_CONFIG)\r\napp.config.from_object(CONFIG)\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/62", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/62/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/62/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/62", "id": 305333354, "node_id": "MDU6SXNzdWUzMDUzMzMzNTQ=", "number": 62, "title": "filesystem CACHE_TYPE not clear file with delete_memoized", "user": {"login": "JohnPortella", "id": 4221947, "node_id": "MDQ6VXNlcjQyMjE5NDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4221947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnPortella", "html_url": "https://github.com/JohnPortella", "followers_url": "https://api.github.com/users/JohnPortella/followers", "following_url": "https://api.github.com/users/JohnPortella/following{/other_user}", "gists_url": "https://api.github.com/users/JohnPortella/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnPortella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnPortella/subscriptions", "organizations_url": "https://api.github.com/users/JohnPortella/orgs", "repos_url": "https://api.github.com/users/JohnPortella/repos", "events_url": "https://api.github.com/users/JohnPortella/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnPortella/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-14T21:21:30Z", "updated_at": "2019-03-06T21:23:24Z", "closed_at": "2019-03-06T21:23:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm using flask app with uwgsi and ngnix. So, I configured `'CACHE_TYPE': 'filesystem', 'CACHE_DIR': tempfile.gettempdir()`. \r\n\r\nI have a job that update the cache somtimes. \r\n\r\n`cache.delete_memoized(f)`\r\n\r\nIt's working fine but the problem is when i check the temp directory, the past files still exist. \r\n\r\n```\r\n\r\n14/03/2018  03:57 PM         5,452,969 1c90fe01368dd1f4a1e99707ac31e684\r\n14/03/2018  03:57 PM        12,242,036 ba6d5eebaeb05afe29e3bde20f396fea\r\n14/03/2018  03:57 PM        10,772,996 f611d864d2a4206fa6ac2d49e33cc2bd\r\n14/03/2018  04:02 PM         5,493,106 c05247ee8087ffc1f43239a1afc3d0d9\r\n14/03/2018  04:02 PM        12,286,872 35b28b3cd29a3afaf90ea86e66cd40e8\r\n14/03/2018  04:03 PM        10,829,939 a4c14575c6412333e59cf0f700354943\r\n14/03/2018  04:04 PM                22 00881cc24cbc428e8dfd137afb40ba2c\r\n14/03/2018  04:05 PM         5,534,646 fd45b7456ce7cd62f7828d023b302083\r\n14/03/2018  04:05 PM        12,339,879 8809360ecbe1ead558691cb13ccabfd8\r\n14/03/2018  04:05 PM        10,858,896 f43b0ecfbb733c4c0af02e6f036b15af\r\n14/03/2018  04:05 PM                 8 2029240f6d1128be89ddc32729463129\r\n```\r\nIs there any way to eliminate them with the library?. If not, is there a way to put a prefix to identify which files to delete?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/61", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/61/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/61/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/61", "id": 301920751, "node_id": "MDU6SXNzdWUzMDE5MjA3NTE=", "number": 61, "title": "Put lock inside cached() and memoize() funcitonality", "user": {"login": "rayrapetyan", "id": 4700523, "node_id": "MDQ6VXNlcjQ3MDA1MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4700523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayrapetyan", "html_url": "https://github.com/rayrapetyan", "followers_url": "https://api.github.com/users/rayrapetyan/followers", "following_url": "https://api.github.com/users/rayrapetyan/following{/other_user}", "gists_url": "https://api.github.com/users/rayrapetyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayrapetyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayrapetyan/subscriptions", "organizations_url": "https://api.github.com/users/rayrapetyan/orgs", "repos_url": "https://api.github.com/users/rayrapetyan/repos", "events_url": "https://api.github.com/users/rayrapetyan/events{/privacy}", "received_events_url": "https://api.github.com/users/rayrapetyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-02T22:08:17Z", "updated_at": "2019-03-05T19:02:31Z", "closed_at": "2019-03-05T19:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it can be a good idea to put a lock inside a cached\\memoize. \r\n\r\nUsually caching is used for some heavy\\expensive functionality, means when app has just started, and multiple clients are trying to call a \"cached\" function, there is no cached value ready yet and they all will start to query simultaneously the same heavy function. \r\n\r\nPutting a basic lock can prevent this - after lock releases all pending threads will get a cached value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/59", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/59/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/59/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/59", "id": 300784498, "node_id": "MDU6SXNzdWUzMDA3ODQ0OTg=", "number": 59, "title": "Cache Connection Timeouts", "user": {"login": "mlcamilli", "id": 926794, "node_id": "MDQ6VXNlcjkyNjc5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/926794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlcamilli", "html_url": "https://github.com/mlcamilli", "followers_url": "https://api.github.com/users/mlcamilli/followers", "following_url": "https://api.github.com/users/mlcamilli/following{/other_user}", "gists_url": "https://api.github.com/users/mlcamilli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlcamilli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlcamilli/subscriptions", "organizations_url": "https://api.github.com/users/mlcamilli/orgs", "repos_url": "https://api.github.com/users/mlcamilli/repos", "events_url": "https://api.github.com/users/mlcamilli/events{/privacy}", "received_events_url": "https://api.github.com/users/mlcamilli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-27T20:39:53Z", "updated_at": "2018-02-27T21:19:41Z", "closed_at": "2018-02-27T21:19:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Curious if this exists, happy to look into implementation if it doesn't. \r\n\r\nNot all cache's are reliable, and sometimes services go down, looking for something that can set a connection timeout.\r\n\r\nFor instance, if Redis doesn't respond in 5 seconds, ignore the cache, proceed with business as usual.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/58", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/58/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/58/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/58", "id": 299821809, "node_id": "MDU6SXNzdWUyOTk4MjE4MDk=", "number": 58, "title": "How to cache some data explicitly ?", "user": {"login": "kavink", "id": 1228810, "node_id": "MDQ6VXNlcjEyMjg4MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1228810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kavink", "html_url": "https://github.com/kavink", "followers_url": "https://api.github.com/users/kavink/followers", "following_url": "https://api.github.com/users/kavink/following{/other_user}", "gists_url": "https://api.github.com/users/kavink/gists{/gist_id}", "starred_url": "https://api.github.com/users/kavink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kavink/subscriptions", "organizations_url": "https://api.github.com/users/kavink/orgs", "repos_url": "https://api.github.com/users/kavink/repos", "events_url": "https://api.github.com/users/kavink/events{/privacy}", "received_events_url": "https://api.github.com/users/kavink/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1153679094, "node_id": "MDU6TGFiZWwxMTUzNjc5MDk0", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/documentation", "name": "documentation", "color": "1cb2bc", "default": true, "description": ""}, {"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-23T19:21:24Z", "updated_at": "2019-03-06T21:21:45Z", "closed_at": "2019-03-06T21:21:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I read some big json file from somewhere, I want to make that internally available by my app to work on it, Or when user queries it to return from cache, I can use ```@cache.memoize()``` on get function for user to use and for my app to use, But there is a one time hit of getting the json from my DB. \r\n\r\nAs I am populating that data myself, is it possible to populate that in cache explicitly so my app just uses that ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/57", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/57/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/57/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/57", "id": 291621114, "node_id": "MDU6SXNzdWUyOTE2MjExMTQ=", "number": 57, "title": "Use with flask.views.View", "user": {"login": "nicoulaj", "id": 3162, "node_id": "MDQ6VXNlcjMxNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoulaj", "html_url": "https://github.com/nicoulaj", "followers_url": "https://api.github.com/users/nicoulaj/followers", "following_url": "https://api.github.com/users/nicoulaj/following{/other_user}", "gists_url": "https://api.github.com/users/nicoulaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoulaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoulaj/subscriptions", "organizations_url": "https://api.github.com/users/nicoulaj/orgs", "repos_url": "https://api.github.com/users/nicoulaj/repos", "events_url": "https://api.github.com/users/nicoulaj/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoulaj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T15:59:46Z", "updated_at": "2018-12-07T11:08:00Z", "closed_at": "2018-12-07T11:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my application views are implemented by subclassing View, eg:\r\n```\r\nclass SomeView(View):\r\n    def dispatch_request(self, *args, **kwargs):\r\n        # impl\r\n```\r\n\r\nAdding the annotation on `dispatch_request` does not work, it would be nice if it could be supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/53", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/53/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/53/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/53", "id": 278378897, "node_id": "MDU6SXNzdWUyNzgzNzg4OTc=", "number": 53, "title": "Win10, Py3.6 can't clear cache", "user": {"login": "joshpeng", "id": 22549127, "node_id": "MDQ6VXNlcjIyNTQ5MTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/22549127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshpeng", "html_url": "https://github.com/joshpeng", "followers_url": "https://api.github.com/users/joshpeng/followers", "following_url": "https://api.github.com/users/joshpeng/following{/other_user}", "gists_url": "https://api.github.com/users/joshpeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshpeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshpeng/subscriptions", "organizations_url": "https://api.github.com/users/joshpeng/orgs", "repos_url": "https://api.github.com/users/joshpeng/repos", "events_url": "https://api.github.com/users/joshpeng/events{/privacy}", "received_events_url": "https://api.github.com/users/joshpeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865426, "node_id": "MDU6TGFiZWw0MDI4NjU0MjY=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-01T07:19:20Z", "updated_at": "2018-12-07T11:10:50Z", "closed_at": "2018-12-07T11:10:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the FileSystem cache, but on Windows, when I try to do `cache.clear()` it doesn't actually delete anything.\r\n\r\nThe caching also results in this quite often when reading from the cache. Any ideas? Thanks.\r\n```\r\nFile \"C:\\Anaconda3\\lib\\site-packages\\flask_caching\\__init__.py\", line 665, in decorated_function\r\n    f, *args, **kwargs\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\flask_caching\\__init__.py\", line 492, in make_cache_key\r\n    f, args=args, timeout=_timeout, forced_update=forced_update\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\flask_caching\\__init__.py\", line 481, in _memoize_version\r\n    timeout=timeout)\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\werkzeug\\contrib\\cache.py\", line 195, in set_many\r\n    if not self.set(key, value, timeout):\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\werkzeug\\contrib\\cache.py\", line 776, in set\r\n    rename(tmp, filename)\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\werkzeug\\posixemulation.py\", line 97, in rename\r\n    old = \"%s-%08x\" % (dst, random.randint(0, sys.maxint))\r\nAttributeError: module 'sys' has no attribute 'maxint'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/52", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/52/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/52/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/52", "id": 278004412, "node_id": "MDU6SXNzdWUyNzgwMDQ0MTI=", "number": 52, "title": "why decorated_function is used for timeout?", "user": {"login": "alexandnpu", "id": 1999503, "node_id": "MDQ6VXNlcjE5OTk1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1999503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandnpu", "html_url": "https://github.com/alexandnpu", "followers_url": "https://api.github.com/users/alexandnpu/followers", "following_url": "https://api.github.com/users/alexandnpu/following{/other_user}", "gists_url": "https://api.github.com/users/alexandnpu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandnpu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandnpu/subscriptions", "organizations_url": "https://api.github.com/users/alexandnpu/orgs", "repos_url": "https://api.github.com/users/alexandnpu/repos", "events_url": "https://api.github.com/users/alexandnpu/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandnpu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-30T05:39:09Z", "updated_at": "2017-12-05T02:43:54Z", "closed_at": "2017-12-01T09:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/sh4nks/flask-caching/blob/c929c4542d5d44bc0a6655f1195d90366a79b99a/flask_caching/__init__.py#L691\r\n\r\n\r\nwhy decorated_function is used here?\r\nCan you explain, please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/46", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/46/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/46/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/46", "id": 263106045, "node_id": "MDU6SXNzdWUyNjMxMDYwNDU=", "number": 46, "title": "[Question] Why do the file backend create so many cache files?", "user": {"login": "EpocDotFr", "id": 2053431, "node_id": "MDQ6VXNlcjIwNTM0MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2053431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EpocDotFr", "html_url": "https://github.com/EpocDotFr", "followers_url": "https://api.github.com/users/EpocDotFr/followers", "following_url": "https://api.github.com/users/EpocDotFr/following{/other_user}", "gists_url": "https://api.github.com/users/EpocDotFr/gists{/gist_id}", "starred_url": "https://api.github.com/users/EpocDotFr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EpocDotFr/subscriptions", "organizations_url": "https://api.github.com/users/EpocDotFr/orgs", "repos_url": "https://api.github.com/users/EpocDotFr/repos", "events_url": "https://api.github.com/users/EpocDotFr/events{/privacy}", "received_events_url": "https://api.github.com/users/EpocDotFr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-05T12:26:23Z", "updated_at": "2017-10-06T06:38:16Z", "closed_at": "2017-10-06T05:54:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for continuing the development of Flask-Cache. It's a great piece of software.\r\n\r\nSo, I'm using the `memoize` decorator with a 60 seconds timeout on a method in a class. Data returned by this method may differ between each timeouts (calls). This class has a fixed `__repr__` (i.e always the same string). \r\n\r\nI noticed that a cache file is created each time the timeout was reached. I.e the first call creates a file with cached data, then on the second call when the timeout is reached, data is fetched again and another file is created with this data (the olds ones never gets deleted). This could lead to a folder with thousands of useless files.\r\n\r\nWhy this behavior? Aren't cache files supposed to be reused?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/45", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/45/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/45/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/45", "id": 261443534, "node_id": "MDU6SXNzdWUyNjE0NDM1MzQ=", "number": 45, "title": "passing CACHE_OPTIONS when using memcached backends fails", "user": {"login": "dwlocks", "id": 68471, "node_id": "MDQ6VXNlcjY4NDcx", "avatar_url": "https://avatars2.githubusercontent.com/u/68471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwlocks", "html_url": "https://github.com/dwlocks", "followers_url": "https://api.github.com/users/dwlocks/followers", "following_url": "https://api.github.com/users/dwlocks/following{/other_user}", "gists_url": "https://api.github.com/users/dwlocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwlocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwlocks/subscriptions", "organizations_url": "https://api.github.com/users/dwlocks/orgs", "repos_url": "https://api.github.com/users/dwlocks/repos", "events_url": "https://api.github.com/users/dwlocks/events{/privacy}", "received_events_url": "https://api.github.com/users/dwlocks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-28T20:03:18Z", "updated_at": "2017-11-01T16:13:14Z", "closed_at": "2017-11-01T16:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "If one uses CACHE_ARGS or CACHE_OPTIONS to try to configure a memcached backend client, you get a traceback like this:\r\n```\r\n  File \"/usr/lib64/python2.7/site-packages/flask_caching/__init__.py\", line 193, in init_app\r\n    self._set_cache(app, config)\r\n  File \"/usr/lib64/python2.7/site-packages/flask_caching/__init__.py\", line 219, in _set_cache\r\n    cache_options)\r\n  File \"/usr/lib64/python2.7/site-packages/flask_caching/backends/backends.py\", line 81, in memcached\r\n    return MemcachedCache(*args, **kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'behaviors'\r\n```\r\nI was trying to pass the \"behaviors\" argument mentioned in the pylibmc docs (http://sendapatch.se/projects/pylibmc/).\r\n\r\nIt seems that flask-caching faithfully adds the options I've specified. So that's good.  The library is doing what it should. The problem is that the underlying werkzeug cache library does not accept any extra arguments or keyword arguments.  see around line 488 in https://github.com/pallets/werkzeug/blob/master/werkzeug/contrib/cache.py\r\n\r\nFrom my quick perusal, the backends from cache.py are not consistent in the signature of __init__.  That's probably reasonable given how different the backends are.  Only redis accepts **kwargs, and then passes it on to the underlying client.  None accept **args.\r\n\r\nAt the very minimum, CACHE_OPTIONS shouldn't be processed and passed for memcached backends.  It would be much better if werkzeug upstream actually accepted **kwargs and passed them on for memcached, though.\r\n\r\n**workaround**\r\nFor pylibmc, I think I can:\r\n```\r\ncache = flask_caching.Cache(\"localhost\")\r\ncache.cache._client.behaviors = {\"tcp_nodelay\" : True}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/44", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/44/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/44/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/44", "id": 259212922, "node_id": "MDU6SXNzdWUyNTkyMTI5MjI=", "number": 44, "title": "Configurable key function", "user": {"login": "jkomusin", "id": 488939, "node_id": "MDQ6VXNlcjQ4ODkzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/488939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkomusin", "html_url": "https://github.com/jkomusin", "followers_url": "https://api.github.com/users/jkomusin/followers", "following_url": "https://api.github.com/users/jkomusin/following{/other_user}", "gists_url": "https://api.github.com/users/jkomusin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkomusin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkomusin/subscriptions", "organizations_url": "https://api.github.com/users/jkomusin/orgs", "repos_url": "https://api.github.com/users/jkomusin/repos", "events_url": "https://api.github.com/users/jkomusin/events{/privacy}", "received_events_url": "https://api.github.com/users/jkomusin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-20T15:48:21Z", "updated_at": "2018-12-07T11:07:10Z", "closed_at": "2018-12-07T11:07:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a need to configure a function at the app level which would transform keys passed in to get/set calls on the cache prior to them being sent to the backend. Specifically, this would allow us to md5 hash keys prior to them getting to memcached to avoid hitting the 250-character limit on keys there while keeping our application-facing keys readable and sufficiently verbose.\r\n\r\nDjango has a hook similar to this called 'KEY_FUNCTION': https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-CACHES-KEY_FUNCTION so this would also aid in cache sharing between Django and Flask apps (something we would also like to do).\r\n\r\nDo others think this would be useful? The key prefix could also be provided to the function similarly to Django's implementation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/42", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/42/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/42/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/42", "id": 250303426, "node_id": "MDU6SXNzdWUyNTAzMDM0MjY=", "number": 42, "title": "Add support for other memcache backends", "user": {"login": "reubano", "id": 157864, "node_id": "MDQ6VXNlcjE1Nzg2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/157864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reubano", "html_url": "https://github.com/reubano", "followers_url": "https://api.github.com/users/reubano/followers", "following_url": "https://api.github.com/users/reubano/following{/other_user}", "gists_url": "https://api.github.com/users/reubano/gists{/gist_id}", "starred_url": "https://api.github.com/users/reubano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reubano/subscriptions", "organizations_url": "https://api.github.com/users/reubano/orgs", "repos_url": "https://api.github.com/users/reubano/repos", "events_url": "https://api.github.com/users/reubano/events{/privacy}", "received_events_url": "https://api.github.com/users/reubano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-15T12:41:50Z", "updated_at": "2017-11-01T16:14:53Z", "closed_at": "2017-11-01T16:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that this library only supports `pylibmc`. This is a request to support other libs, e.g., `pymemcache` and `bmemcached`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/40", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/40/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/40/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/40", "id": 241130502, "node_id": "MDU6SXNzdWUyNDExMzA1MDI=", "number": 40, "title": "Flask Caching With Sentinel ", "user": {"login": "JLiu1272", "id": 9962527, "node_id": "MDQ6VXNlcjk5NjI1Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9962527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JLiu1272", "html_url": "https://github.com/JLiu1272", "followers_url": "https://api.github.com/users/JLiu1272/followers", "following_url": "https://api.github.com/users/JLiu1272/following{/other_user}", "gists_url": "https://api.github.com/users/JLiu1272/gists{/gist_id}", "starred_url": "https://api.github.com/users/JLiu1272/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JLiu1272/subscriptions", "organizations_url": "https://api.github.com/users/JLiu1272/orgs", "repos_url": "https://api.github.com/users/JLiu1272/repos", "events_url": "https://api.github.com/users/JLiu1272/events{/privacy}", "received_events_url": "https://api.github.com/users/JLiu1272/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 402865429, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjk=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-07T01:19:43Z", "updated_at": "2019-02-23T07:13:16Z", "closed_at": "2019-02-23T07:13:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to enable Flask Cache. We are currently using redis-sentinel to handle failover issues, and to increase concurrency performance. However, it seems this way of caching is more difficult to resolve than imagine. Perhaps, you guys can help me. \r\n\r\n```\r\nfrom flask_caching import Cache\r\nfrom redis import StrictRedis\r\nfrom werkzeug.contrib.cache import BaseCache\r\nfrom redis.sentinel import Sentinel\r\nfrom app import Config\r\n\r\nclass SentinelCache(BaseCache):\r\n   def __init__(self, key_prefix=None, **kwargs):\r\n        BaseCache.__init__(self, default_timeout=300)\r\n        host = str(kwargs['host'])\r\n        port = str(kwargs['port'])\r\n        #print(host + \":\" + port)\r\n        print(Sentinel([{host:host, port:port}]))\r\n        #Setting self client to be a sentinel \r\n        self._client = Sentinel([{host:host, port:port}])\r\n\r\ndef sentinel(app, config, args, kwargs):\r\n  #Get master \r\n   sentinel = Sentinel(list(map(lambda x: (x.split(':')[0], int(x.split(':')[1])), Config.get('REDIS_SENTINEL_SERVERS').split(','))))\r\n   master = sentinel.discover_master('rdwhizz')\r\n   config['SENTINEL_SERVERS'] = master\r\n   kwargs.update(dict(\r\n      host=master[0],\r\n      port=master[1]\r\n   ))\r\n   print(kwargs)\r\n   return SentinelCache(*args, **kwargs)\r\n\r\ncache = Cache(config={'CACHE_TYPE':'app.cache.sentinel'})\r\n```\r\n\r\n\r\nHere is what I have currently. We were able to retrieve the master host and port. But what we are  are unable to do is sub class Base Cache to enable Sentinel Caching.  \r\n\r\nThank you! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/39", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/39/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/39/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/39", "id": 241123642, "node_id": "MDU6SXNzdWUyNDExMjM2NDI=", "number": 39, "title": "Question/consideration: Python 3.6 and consistent ordering, insertion preservations", "user": {"login": "kawa-kokosowa", "id": 7135753, "node_id": "MDQ6VXNlcjcxMzU3NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7135753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawa-kokosowa", "html_url": "https://github.com/kawa-kokosowa", "followers_url": "https://api.github.com/users/kawa-kokosowa/followers", "following_url": "https://api.github.com/users/kawa-kokosowa/following{/other_user}", "gists_url": "https://api.github.com/users/kawa-kokosowa/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawa-kokosowa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawa-kokosowa/subscriptions", "organizations_url": "https://api.github.com/users/kawa-kokosowa/orgs", "repos_url": "https://api.github.com/users/kawa-kokosowa/repos", "events_url": "https://api.github.com/users/kawa-kokosowa/events{/privacy}", "received_events_url": "https://api.github.com/users/kawa-kokosowa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-07T00:26:38Z", "updated_at": "2017-11-01T16:16:07Z", "closed_at": "2017-11-01T16:16:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the things that has changed in Python 3.6 is consistent ordering and insertion preservation for datatypes which are hashed (dict, set, etc.). It may be possible to leverage this to your advantage to skip having to sort query string parameters with `sorted()` in Python 3.6.\r\n\r\nI think this may be completely solved by the fact that using `sorted` is initiated by `query_string=True`, but then it should be called `legacy_cache_key_fix` or something?\r\n\r\nJust brainstorming, something I thought of... I'll try to come back and elaborate/update the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/37", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/37/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/37/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/37", "id": 237223499, "node_id": "MDU6SXNzdWUyMzcyMjM0OTk=", "number": 37, "title": "Set werkzeug 0.12 as minimum requirement", "user": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-20T14:10:46Z", "updated_at": "2017-06-20T15:49:14Z", "closed_at": "2017-06-20T15:49:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The uwsgi backend introduced a dependency on Werkzeug 0.12+.\r\nWithout specifying this requirement, the deployment break in existing environment because it does not force the `Werkzeug` dependency upgrade.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/36", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/36/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/36/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/36", "id": 236741291, "node_id": "MDU6SXNzdWUyMzY3NDEyOTE=", "number": 36, "title": "Please create git tags for each version", "user": {"login": "Croydon", "id": 1593194, "node_id": "MDQ6VXNlcjE1OTMxOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Croydon", "html_url": "https://github.com/Croydon", "followers_url": "https://api.github.com/users/Croydon/followers", "following_url": "https://api.github.com/users/Croydon/following{/other_user}", "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions", "organizations_url": "https://api.github.com/users/Croydon/orgs", "repos_url": "https://api.github.com/users/Croydon/repos", "events_url": "https://api.github.com/users/Croydon/events{/privacy}", "received_events_url": "https://api.github.com/users/Croydon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-18T19:45:59Z", "updated_at": "2018-09-16T16:25:54Z", "closed_at": "2017-06-18T21:08:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "This makes it easier to work with a specific version of the extension :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/34", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/34/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/34/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/34", "id": 234430948, "node_id": "MDU6SXNzdWUyMzQ0MzA5NDg=", "number": 34, "title": "Set cache depending on result", "user": {"login": "chrisdebug", "id": 938605, "node_id": "MDQ6VXNlcjkzODYwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/938605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdebug", "html_url": "https://github.com/chrisdebug", "followers_url": "https://api.github.com/users/chrisdebug/followers", "following_url": "https://api.github.com/users/chrisdebug/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdebug/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdebug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdebug/subscriptions", "organizations_url": "https://api.github.com/users/chrisdebug/orgs", "repos_url": "https://api.github.com/users/chrisdebug/repos", "events_url": "https://api.github.com/users/chrisdebug/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdebug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-08T07:08:36Z", "updated_at": "2017-06-18T21:12:05Z", "closed_at": "2017-06-18T21:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using flask-caching to cache the results of an api endpoint. I'd like to set the cache depending on the result. Ex: Don't set the cache if the response is something like {\"error\": \"message\"}\r\nWhat's the best way to do this? Should I override a method? If so, which method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/32", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/32/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/32/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/32", "id": 231134267, "node_id": "MDU6SXNzdWUyMzExMzQyNjc=", "number": 32, "title": "[Request] add uwsgi backend as werkzeug", "user": {"login": "johaven", "id": 5459596, "node_id": "MDQ6VXNlcjU0NTk1OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5459596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johaven", "html_url": "https://github.com/johaven", "followers_url": "https://api.github.com/users/johaven/followers", "following_url": "https://api.github.com/users/johaven/following{/other_user}", "gists_url": "https://api.github.com/users/johaven/gists{/gist_id}", "starred_url": "https://api.github.com/users/johaven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johaven/subscriptions", "organizations_url": "https://api.github.com/users/johaven/orgs", "repos_url": "https://api.github.com/users/johaven/repos", "events_url": "https://api.github.com/users/johaven/events{/privacy}", "received_events_url": "https://api.github.com/users/johaven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-24T18:41:34Z", "updated_at": "2017-07-20T20:37:57Z", "closed_at": "2017-06-17T11:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "It should not be difficult to make a wrapper to load UWSGICache class ;)\r\nhttps://github.com/pallets/werkzeug/commit/b08292299cd94fa747a8d515decea4601704b562", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/31", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/31/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/31/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/31", "id": 225896716, "node_id": "MDU6SXNzdWUyMjU4OTY3MTY=", "number": 31, "title": "A small question about delete cache", "user": {"login": "tim-hub", "id": 2884320, "node_id": "MDQ6VXNlcjI4ODQzMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2884320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-hub", "html_url": "https://github.com/tim-hub", "followers_url": "https://api.github.com/users/tim-hub/followers", "following_url": "https://api.github.com/users/tim-hub/following{/other_user}", "gists_url": "https://api.github.com/users/tim-hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-hub/subscriptions", "organizations_url": "https://api.github.com/users/tim-hub/orgs", "repos_url": "https://api.github.com/users/tim-hub/repos", "events_url": "https://api.github.com/users/tim-hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T06:48:46Z", "updated_at": "2017-05-24T19:49:57Z", "closed_at": "2017-05-24T19:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to delete a spercific cache.\r\n\r\nI mean if `cache.clear()`, it will remove all cache. what about if I want to delete only one cached route.\r\n\r\nref: https://stackoverflow.com/questions/36180066/flask-cache-equivalent-of-delete-memoized-for-clear", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/30", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/30/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/30/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/30", "id": 225896514, "node_id": "MDU6SXNzdWUyMjU4OTY1MTQ=", "number": 30, "title": "A weired problem, after deleting, then cache does not work", "user": {"login": "tim-hub", "id": 2884320, "node_id": "MDQ6VXNlcjI4ODQzMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2884320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-hub", "html_url": "https://github.com/tim-hub", "followers_url": "https://api.github.com/users/tim-hub/followers", "following_url": "https://api.github.com/users/tim-hub/following{/other_user}", "gists_url": "https://api.github.com/users/tim-hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-hub/subscriptions", "organizations_url": "https://api.github.com/users/tim-hub/orgs", "repos_url": "https://api.github.com/users/tim-hub/repos", "events_url": "https://api.github.com/users/tim-hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T06:47:18Z", "updated_at": "2017-05-24T19:54:12Z", "closed_at": "2017-05-24T19:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<pre>\r\n@app.route('/cache/')\r\n@cache.memoize(timeout=0)\r\ndef test_cache():\r\n    print 'cache'\r\n    import random\r\n\r\n    return \"%s\" %random.randint(0,9)\r\n\r\n@app.route('/delete-mem/')\r\ndef clear_one():\r\n    cache.delete_memoized(test_cache)\r\n    return 'clear one'\r\n</pre>\r\n\r\nThe cache mode is simple.\r\n\r\n**the problem is after I delete the cache `clear_one()`, when I run `test_cache()`, everytime(every reloading the page), it give a new number.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/28", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/28/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/28/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/28", "id": 221034985, "node_id": "MDU6SXNzdWUyMjEwMzQ5ODU=", "number": 28, "title": "Support for redis sentinel / multi-instance redis installation", "user": {"login": "eleweek", "id": 1133550, "node_id": "MDQ6VXNlcjExMzM1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1133550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eleweek", "html_url": "https://github.com/eleweek", "followers_url": "https://api.github.com/users/eleweek/followers", "following_url": "https://api.github.com/users/eleweek/following{/other_user}", "gists_url": "https://api.github.com/users/eleweek/gists{/gist_id}", "starred_url": "https://api.github.com/users/eleweek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eleweek/subscriptions", "organizations_url": "https://api.github.com/users/eleweek/orgs", "repos_url": "https://api.github.com/users/eleweek/repos", "events_url": "https://api.github.com/users/eleweek/events{/privacy}", "received_events_url": "https://api.github.com/users/eleweek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865428, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-11T18:09:21Z", "updated_at": "2017-06-25T12:09:58Z", "closed_at": "2017-06-25T12:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! What would be the best way to approach using Flask-Caching with Redis Sentinel? It doesn't look like that werkzeug's `RedisCache` supports Sentinel.\r\n\r\nI'm willing to work on a PR for the support. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/27", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/27/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/27/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/27", "id": 217787757, "node_id": "MDU6SXNzdWUyMTc3ODc3NTc=", "number": 27, "title": "Arrangement of Arguments in Functions", "user": {"login": "sh4nks", "id": 1510708, "node_id": "MDQ6VXNlcjE1MTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1510708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh4nks", "html_url": "https://github.com/sh4nks", "followers_url": "https://api.github.com/users/sh4nks/followers", "following_url": "https://api.github.com/users/sh4nks/following{/other_user}", "gists_url": "https://api.github.com/users/sh4nks/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh4nks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh4nks/subscriptions", "organizations_url": "https://api.github.com/users/sh4nks/orgs", "repos_url": "https://api.github.com/users/sh4nks/repos", "events_url": "https://api.github.com/users/sh4nks/events{/privacy}", "received_events_url": "https://api.github.com/users/sh4nks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402865429, "node_id": "MDU6TGFiZWw0MDI4NjU0Mjk=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-29T07:29:25Z", "updated_at": "2017-06-23T14:50:39Z", "closed_at": "2017-06-23T14:50:39Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Any ideas why the arrangement of the arguments in functions matters in Python > 3.3 (I tested it with Python 3.6 but the tests for Python 3.5 are also failing, so it probably can also appear in Python 3.4)?\r\n\r\nFor example, to fix the kwargs tests I had to re-arrange the arguments (in unittest method ``test_10a_arg_kwarg_memoize_var_keyword`` [L354-L368](https://github.com/sh4nks/flask-caching/blob/master/test_cache.py#L354-L368))\r\n**from**\r\n```python\r\nassert f(1, 2, d=5, e=8) == f(1, 2, e=8, d=5)\r\nassert f(1, b=2, c=3, d=5, e=8) == f(1, 2, e=8, d=5, b=2, c=3)\r\n```\r\n\r\n**to**\r\n```python\r\nassert f(1, 2, d=5, e=8) == f(1, 2, d=5, e=8)\r\nassert f(1, b=2, c=3, d=5, e=8) == f(1, b=2, c=3, d=5, e=8)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sh4nks/flask-caching/issues/25", "repository_url": "https://api.github.com/repos/sh4nks/flask-caching", "labels_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/25/comments", "events_url": "https://api.github.com/repos/sh4nks/flask-caching/issues/25/events", "html_url": "https://github.com/sh4nks/flask-caching/issues/25", "id": 216968288, "node_id": "MDU6SXNzdWUyMTY5NjgyODg=", "number": 25, "title": "TypeError: sequence item 0: expected str instance bytes found", "user": {"login": "reubano", "id": 157864, "node_id": "MDQ6VXNlcjE1Nzg2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/157864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reubano", "html_url": "https://github.com/reubano", "followers_url": "https://api.github.com/users/reubano/followers", "following_url": "https://api.github.com/users/reubano/following{/other_user}", "gists_url": "https://api.github.com/users/reubano/gists{/gist_id}", "starred_url": "https://api.github.com/users/reubano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reubano/subscriptions", "organizations_url": "https://api.github.com/users/reubano/orgs", "repos_url": "https://api.github.com/users/reubano/repos", "events_url": "https://api.github.com/users/reubano/events{/privacy}", "received_events_url": "https://api.github.com/users/reubano/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579452958, "node_id": "MDU6TGFiZWw1Nzk0NTI5NTg=", "url": "https://api.github.com/repos/sh4nks/flask-caching/labels/needs%20info", "name": "needs info", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-25T11:32:02Z", "updated_at": "2017-06-23T15:43:46Z", "closed_at": "2017-06-23T15:43:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```bash\r\nException possibly due to cache backend.\r\nTraceback (most recent call last):\r\n  File \"https://github.com/sh4nks/flask-caching/blob/master/flask_caching/__init__.py\"\r\n    rv = self.cache.get(cache_key)\r\n  File \"https://github.com/sh4nks/flask-caching/blob/master/flask_caching/backends/clients.py\"\r\n    return self._get(key)\r\n    serialized = ''.join([v for v in result if v is not None]\r\nTypeError: sequence item 0: expected str instance, bytes found\r\n```\r\n\r\nPython 3.6.0\r\nFlask-Cache==0.13.1", "performed_via_github_app": null, "score": 1.0}]}