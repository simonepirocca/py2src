{"total_count": 695, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jedisct1/libsodium/issues/991", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/991/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/991/events", "html_url": "https://github.com/jedisct1/libsodium/issues/991", "id": 682671403, "node_id": "MDU6SXNzdWU2ODI2NzE0MDM=", "number": 991, "title": "Libhydrogen-style N-Variant Key Exchange", "user": {"login": "jfkimmes", "id": 19751637, "node_id": "MDQ6VXNlcjE5NzUxNjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/19751637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfkimmes", "html_url": "https://github.com/jfkimmes", "followers_url": "https://api.github.com/users/jfkimmes/followers", "following_url": "https://api.github.com/users/jfkimmes/following{/other_user}", "gists_url": "https://api.github.com/users/jfkimmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfkimmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfkimmes/subscriptions", "organizations_url": "https://api.github.com/users/jfkimmes/orgs", "repos_url": "https://api.github.com/users/jfkimmes/repos", "events_url": "https://api.github.com/users/jfkimmes/events{/privacy}", "received_events_url": "https://api.github.com/users/jfkimmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-20T12:23:36Z", "updated_at": "2020-08-20T14:04:20Z", "closed_at": "2020-08-20T14:04:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does libsodium offer an [N-Variant Key Exchange](https://github.com/jedisct1/libhydrogen/wiki/N-variant) like libhydrogen?\r\n\r\nI am aware of the [sealed box](https://doc.libsodium.org/public-key_cryptography/sealed_boxes) encryption scheme but to my knowledge that doesn't give the server a way to respond. Is there an easy way to emulate the libhydrogen functionality?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/990", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/990/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/990/events", "html_url": "https://github.com/jedisct1/libsodium/issues/990", "id": 682155118, "node_id": "MDU6SXNzdWU2ODIxNTUxMTg=", "number": 990, "title": "Building fails on DragonFly BSD", "user": {"login": "MilkyPL", "id": 20266576, "node_id": "MDQ6VXNlcjIwMjY2NTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/20266576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MilkyPL", "html_url": "https://github.com/MilkyPL", "followers_url": "https://api.github.com/users/MilkyPL/followers", "following_url": "https://api.github.com/users/MilkyPL/following{/other_user}", "gists_url": "https://api.github.com/users/MilkyPL/gists{/gist_id}", "starred_url": "https://api.github.com/users/MilkyPL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MilkyPL/subscriptions", "organizations_url": "https://api.github.com/users/MilkyPL/orgs", "repos_url": "https://api.github.com/users/MilkyPL/repos", "events_url": "https://api.github.com/users/MilkyPL/events{/privacy}", "received_events_url": "https://api.github.com/users/MilkyPL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-19T20:23:30Z", "updated_at": "2020-08-19T20:43:36Z", "closed_at": "2020-08-19T20:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pwhash_argon2i` and `pwhash_argon2id` throw an error on make check.\r\n```===================================================\r\n   libsodium 1.0.18: test/default/test-suite.log\r\n===================================================\r\n\r\n# TOTAL: 77\r\n# PASS:  75\r\n# SKIP:  0\r\n# XFAIL: 0\r\n# FAIL:  0\r\n# XPASS: 0\r\n# ERROR: 2\r\n\r\n.. contents:: :depth: 2\r\n\r\nERROR: pwhash_argon2i\r\n=====================\r\n\r\nERROR pwhash_argon2i (exit status: 99)\r\n\r\nERROR: pwhash_argon2id\r\n======================\r\n\r\nERROR pwhash_argon2id (exit status: 99)```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/989", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/989/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/989/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/989/events", "html_url": "https://github.com/jedisct1/libsodium/issues/989", "id": 678914278, "node_id": "MDU6SXNzdWU2Nzg5MTQyNzg=", "number": 989, "title": "The response  A development environment was not created.", "user": {"login": "MaoPann", "id": 44804599, "node_id": "MDQ6VXNlcjQ0ODA0NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/44804599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaoPann", "html_url": "https://github.com/MaoPann", "followers_url": "https://api.github.com/users/MaoPann/followers", "following_url": "https://api.github.com/users/MaoPann/following{/other_user}", "gists_url": "https://api.github.com/users/MaoPann/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaoPann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaoPann/subscriptions", "organizations_url": "https://api.github.com/users/MaoPann/orgs", "repos_url": "https://api.github.com/users/MaoPann/repos", "events_url": "https://api.github.com/users/MaoPann/events{/privacy}", "received_events_url": "https://api.github.com/users/MaoPann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1794204812, "node_id": "MDU6TGFiZWwxNzk0MjA0ODEy", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/didn't%20read%20the%20doc", "name": "didn't read the doc", "color": "ddab66", "default": false, "description": ""}, {"id": 25457320, "node_id": "MDU6TGFiZWwyNTQ1NzMyMA==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 25457322, "node_id": "MDU6TGFiZWwyNTQ1NzMyMg==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T05:42:52Z", "updated_at": "2020-08-14T06:08:01Z", "closed_at": "2020-08-14T06:07:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "sudo ./autogen.sh\r\nresponse\r\n A development environment was not created.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/988", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/988/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/988/events", "html_url": "https://github.com/jedisct1/libsodium/issues/988", "id": 672113555, "node_id": "MDU6SXNzdWU2NzIxMTM1NTU=", "number": 988, "title": "fail to \"./autogen.sh \" ", "user": {"login": "KermitLee", "id": 17827496, "node_id": "MDQ6VXNlcjE3ODI3NDk2", "avatar_url": "https://avatars0.githubusercontent.com/u/17827496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KermitLee", "html_url": "https://github.com/KermitLee", "followers_url": "https://api.github.com/users/KermitLee/followers", "following_url": "https://api.github.com/users/KermitLee/following{/other_user}", "gists_url": "https://api.github.com/users/KermitLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/KermitLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KermitLee/subscriptions", "organizations_url": "https://api.github.com/users/KermitLee/orgs", "repos_url": "https://api.github.com/users/KermitLee/repos", "events_url": "https://api.github.com/users/KermitLee/events{/privacy}", "received_events_url": "https://api.github.com/users/KermitLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T14:23:00Z", "updated_at": "2020-08-03T15:07:34Z", "closed_at": "2020-08-03T15:06:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "`./autogen.sh`\r\nI ran the above command,.It's always the output below, and I can't continue running ./configure && make check...\r\n`A development environment was not created.`\r\nI tried many ways, but nothing worked...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/986", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/986/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/986/events", "html_url": "https://github.com/jedisct1/libsodium/issues/986", "id": 667483331, "node_id": "MDU6SXNzdWU2Njc0ODMzMzE=", "number": 986, "title": "Is there any way to control parallelism degree in crypto_pwhash?", "user": {"login": "guojize", "id": 27039162, "node_id": "MDQ6VXNlcjI3MDM5MTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/27039162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guojize", "html_url": "https://github.com/guojize", "followers_url": "https://api.github.com/users/guojize/followers", "following_url": "https://api.github.com/users/guojize/following{/other_user}", "gists_url": "https://api.github.com/users/guojize/gists{/gist_id}", "starred_url": "https://api.github.com/users/guojize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guojize/subscriptions", "organizations_url": "https://api.github.com/users/guojize/orgs", "repos_url": "https://api.github.com/users/guojize/repos", "events_url": "https://api.github.com/users/guojize/events{/privacy}", "received_events_url": "https://api.github.com/users/guojize/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T01:35:29Z", "updated_at": "2020-07-29T08:57:24Z", "closed_at": "2020-07-29T08:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Argon2 specification says that there is a parallelism degree which defines the number of parallel threads.\r\n\r\n[The documentation of libsodium](https://doc.libsodium.org/password_hashing/default_phf#guidelines-for-choosing-the-parameters) also says: \r\n\r\n> What will be the highest number of threads/processes evaluating the function simultaneously (ideally, no more than 1 per CPU core)? \r\n\r\nBut, I couldn't find an API for that. Is there any way to control the parallelism degree?\r\n\r\nI'm interested in libsodium and my application needs to use that feature.\r\n\r\nAll in all, thanks you `libsodium`developers who make such good crypto library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/984", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/984/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/984/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/984/events", "html_url": "https://github.com/jedisct1/libsodium/issues/984", "id": 661305856, "node_id": "MDU6SXNzdWU2NjEzMDU4NTY=", "number": 984, "title": "configure flag to only build memory related routines", "user": {"login": "ericlagergren", "id": 5894247, "node_id": "MDQ6VXNlcjU4OTQyNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5894247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericlagergren", "html_url": "https://github.com/ericlagergren", "followers_url": "https://api.github.com/users/ericlagergren/followers", "following_url": "https://api.github.com/users/ericlagergren/following{/other_user}", "gists_url": "https://api.github.com/users/ericlagergren/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericlagergren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericlagergren/subscriptions", "organizations_url": "https://api.github.com/users/ericlagergren/orgs", "repos_url": "https://api.github.com/users/ericlagergren/repos", "events_url": "https://api.github.com/users/ericlagergren/events{/privacy}", "received_events_url": "https://api.github.com/users/ericlagergren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-20T03:11:55Z", "updated_at": "2020-07-21T16:38:14Z", "closed_at": "2020-07-20T04:03:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've a use case where I really only want to use libsodium's memory functions. Basically, everything here: https://doc.libsodium.org/memory_management but nothing else that's not transitively required.\r\n\r\nEven the minimal build generates a ~2 MB library, which is overkill. What's the possibility of adding a \"memory only\" mode? I concede it's probably quite niche.\r\n\r\nIf it's unlikely to happen, do you have any suggestions wrt things I should watch out for while modifying the Makefiles?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/983", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/983/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/983/events", "html_url": "https://github.com/jedisct1/libsodium/issues/983", "id": 656020034, "node_id": "MDU6SXNzdWU2NTYwMjAwMzQ=", "number": 983, "title": "Compatibility with other na.cl libraries", "user": {"login": "bitlogik", "id": 32455462, "node_id": "MDQ6VXNlcjMyNDU1NDYy", "avatar_url": "https://avatars2.githubusercontent.com/u/32455462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitlogik", "html_url": "https://github.com/bitlogik", "followers_url": "https://api.github.com/users/bitlogik/followers", "following_url": "https://api.github.com/users/bitlogik/following{/other_user}", "gists_url": "https://api.github.com/users/bitlogik/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitlogik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitlogik/subscriptions", "organizations_url": "https://api.github.com/users/bitlogik/orgs", "repos_url": "https://api.github.com/users/bitlogik/repos", "events_url": "https://api.github.com/users/bitlogik/events{/privacy}", "received_events_url": "https://api.github.com/users/bitlogik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-13T17:30:59Z", "updated_at": "2020-07-13T21:33:26Z", "closed_at": "2020-07-13T20:02:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I initially opened [this issue in pynacl](https://github.com/pyca/pynacl/issues/603), but this is directly linked to the behavior of libsodium.\r\n\r\nThe XSalsa20Engine of Java BouncyCastle library, and the XSalsa20 Crypto++ library, use tests vectors from the original na.cl and libsodium doesn't output the same encrypted text for crypto_secretbox_xsalsa20poly1305.\r\n\r\nPeople on this repo can help to solve this mystery on why libsodium SecretBox (through pynacl) is providing different result from na.cl, crypto++ and BouncyCastle?\r\n\r\nHere's a Python script pointing out the matter : https://gist.github.com/bitlogik/b9368c82aa71aa10299263d65d9486be\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/982", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/982/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/982/events", "html_url": "https://github.com/jedisct1/libsodium/issues/982", "id": 653158684, "node_id": "MDU6SXNzdWU2NTMxNTg2ODQ=", "number": 982, "title": "Can I use Authenticated encryption with chacha20?", "user": {"login": "fangchaooo", "id": 19619745, "node_id": "MDQ6VXNlcjE5NjE5NzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/19619745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fangchaooo", "html_url": "https://github.com/fangchaooo", "followers_url": "https://api.github.com/users/fangchaooo/followers", "following_url": "https://api.github.com/users/fangchaooo/following{/other_user}", "gists_url": "https://api.github.com/users/fangchaooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fangchaooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fangchaooo/subscriptions", "organizations_url": "https://api.github.com/users/fangchaooo/orgs", "repos_url": "https://api.github.com/users/fangchaooo/repos", "events_url": "https://api.github.com/users/fangchaooo/events{/privacy}", "received_events_url": "https://api.github.com/users/fangchaooo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T09:55:43Z", "updated_at": "2020-07-08T10:18:11Z", "closed_at": "2020-07-08T10:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this [document page](https://doc.libsodium.org/public-key_cryptography/authenticated_encryption), It introduces the Authenticated encryption that is encrypted using XSalsa20 stream cipher. But now I want to use ChaCha20 replace it. \r\nPlease tell me what should I do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/981", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/981/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/981/events", "html_url": "https://github.com/jedisct1/libsodium/issues/981", "id": 652291690, "node_id": "MDU6SXNzdWU2NTIyOTE2OTA=", "number": 981, "title": "Secretstream API with state serialization", "user": {"login": "stnmtz", "id": 40369439, "node_id": "MDQ6VXNlcjQwMzY5NDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/40369439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stnmtz", "html_url": "https://github.com/stnmtz", "followers_url": "https://api.github.com/users/stnmtz/followers", "following_url": "https://api.github.com/users/stnmtz/following{/other_user}", "gists_url": "https://api.github.com/users/stnmtz/gists{/gist_id}", "starred_url": "https://api.github.com/users/stnmtz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stnmtz/subscriptions", "organizations_url": "https://api.github.com/users/stnmtz/orgs", "repos_url": "https://api.github.com/users/stnmtz/repos", "events_url": "https://api.github.com/users/stnmtz/events{/privacy}", "received_events_url": "https://api.github.com/users/stnmtz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T12:43:21Z", "updated_at": "2020-07-07T13:43:16Z", "closed_at": "2020-07-07T13:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI would like to use the secretstream API with libsodium.JS and would like to serialize the respective state of the stream - as the stream should be re-used over multiple restarts of the application. However, I don't see a possibility to save/load a stream's state with libsodium.js (neither with the libsodium API), as the stream's state is always an address which I guess is a pointer to the actual state within the Webassembly memory.\r\n\r\nAs such, I guess that the secretstream API is only intended for session-based (online) streams rather than a long-running stream with offline messages? \r\n\r\nWould it be possible to have a state serialization API, something like secretstream_state(stream) returning the current state of the stream? Or is there another possibility to access the stream's state over libsodium.js which I haven't seen yet?\r\n\r\nBest Regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/978", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/978/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/978/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/978/events", "html_url": "https://github.com/jedisct1/libsodium/issues/978", "id": 650532824, "node_id": "MDU6SXNzdWU2NTA1MzI4MjQ=", "number": 978, "title": "Support building XCFramework for Apple platforms.", "user": {"login": "projectvim", "id": 55550211, "node_id": "MDQ6VXNlcjU1NTUwMjEx", "avatar_url": "https://avatars1.githubusercontent.com/u/55550211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/projectvim", "html_url": "https://github.com/projectvim", "followers_url": "https://api.github.com/users/projectvim/followers", "following_url": "https://api.github.com/users/projectvim/following{/other_user}", "gists_url": "https://api.github.com/users/projectvim/gists{/gist_id}", "starred_url": "https://api.github.com/users/projectvim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/projectvim/subscriptions", "organizations_url": "https://api.github.com/users/projectvim/orgs", "repos_url": "https://api.github.com/users/projectvim/repos", "events_url": "https://api.github.com/users/projectvim/events{/privacy}", "received_events_url": "https://api.github.com/users/projectvim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-03T11:21:10Z", "updated_at": "2020-07-04T09:19:40Z", "closed_at": "2020-07-03T11:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "More about `XCFramework ` here: https://developer.apple.com/videos/play/wwdc2019/416/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/976", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/976/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/976/events", "html_url": "https://github.com/jedisct1/libsodium/issues/976", "id": 649183878, "node_id": "MDU6SXNzdWU2NDkxODM4Nzg=", "number": 976, "title": "Ciphertext padding length in crypto_secretstream_xchacha20poly1305_push", "user": {"login": "ionspin", "id": 144139, "node_id": "MDQ6VXNlcjE0NDEzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/144139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionspin", "html_url": "https://github.com/ionspin", "followers_url": "https://api.github.com/users/ionspin/followers", "following_url": "https://api.github.com/users/ionspin/following{/other_user}", "gists_url": "https://api.github.com/users/ionspin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionspin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionspin/subscriptions", "organizations_url": "https://api.github.com/users/ionspin/orgs", "repos_url": "https://api.github.com/users/ionspin/repos", "events_url": "https://api.github.com/users/ionspin/events{/privacy}", "received_events_url": "https://api.github.com/users/ionspin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T18:17:48Z", "updated_at": "2020-07-01T21:25:31Z", "closed_at": "2020-07-01T21:25:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am implementing a kotlin version of some of the primitives found in libsodium for fun and learning purposes. I am a bit confused about the ciphertext padding length in crypto_secretstream_xchacha20poly1305_push and _pull. \r\n\r\nI presumed that like additionalData pad, the length should make the resulting array be divisible with 16, but for ciphertext data, it seems that the calculated pad length is not divisible by 16. \r\n\r\nCode that calculates the padding length that is sent to poly1305 is [here](https://github.com/jedisct1/libsodium/blob/927dfe8e2eaa86160d3ba12a7e3258fbc322909c/src/libsodium/crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c#L149)\r\n```\r\ncrypto_onetimeauth_poly1305_update(&poly1305_state, _pad0, (0x10 - (sizeof block) + mlen) & 0xf);\r\n```\r\nAs an example when trying to apply this to a message of length 100, the resulting pad length is **4**, which doesn't produce an array of bytes divisible by 16. \r\n\r\nIs this expected behavior?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/975", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/975/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/975/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/975/events", "html_url": "https://github.com/jedisct1/libsodium/issues/975", "id": 647617892, "node_id": "MDU6SXNzdWU2NDc2MTc4OTI=", "number": 975, "title": "[FR] Work with Algorand to merge in VRF support", "user": {"login": "mark-stopka", "id": 18139116, "node_id": "MDQ6VXNlcjE4MTM5MTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/18139116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-stopka", "html_url": "https://github.com/mark-stopka", "followers_url": "https://api.github.com/users/mark-stopka/followers", "following_url": "https://api.github.com/users/mark-stopka/following{/other_user}", "gists_url": "https://api.github.com/users/mark-stopka/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-stopka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-stopka/subscriptions", "organizations_url": "https://api.github.com/users/mark-stopka/orgs", "repos_url": "https://api.github.com/users/mark-stopka/repos", "events_url": "https://api.github.com/users/mark-stopka/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-stopka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T19:41:24Z", "updated_at": "2020-06-29T21:40:44Z", "closed_at": "2020-06-29T21:40:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Algorand [forked libsodium some time ago](https://github.com/algorand/libsodium/tree/draft-irtf-cfrg-vrf-03/src/libsodium/crypto_vrf/ietfdraft03) and implemented [draft-irtf-cfrg-vrf-03](https://tools.ietf.org/html/draft-irtf-cfrg-vrf-03), ( ECVRF-ED25519-SHA512-Elligator2 specifically) VRFs are becoming more commonplace and used nowadays...\r\n\r\nI was wondering if they (Algorand) have been in touch with **libsodium** upstream to actually have it merged into mainline or not?\r\n\r\nWould this be something you would be willing to merge into your upstream, and if so, what modifications would be required to be made for it to be mergeable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/974", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/974/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/974/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/974/events", "html_url": "https://github.com/jedisct1/libsodium/issues/974", "id": 643120464, "node_id": "MDU6SXNzdWU2NDMxMjA0NjQ=", "number": 974, "title": "box_seal: box_seal.c:138: tv4: Assertion `memcmp(cm, m2, m_len) != 0' failed. FAIL box_seal (exit status: 134)", "user": {"login": "Loogodamner", "id": 24647347, "node_id": "MDQ6VXNlcjI0NjQ3MzQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/24647347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Loogodamner", "html_url": "https://github.com/Loogodamner", "followers_url": "https://api.github.com/users/Loogodamner/followers", "following_url": "https://api.github.com/users/Loogodamner/following{/other_user}", "gists_url": "https://api.github.com/users/Loogodamner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Loogodamner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Loogodamner/subscriptions", "organizations_url": "https://api.github.com/users/Loogodamner/orgs", "repos_url": "https://api.github.com/users/Loogodamner/repos", "events_url": "https://api.github.com/users/Loogodamner/events{/privacy}", "received_events_url": "https://api.github.com/users/Loogodamner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-22T14:31:20Z", "updated_at": "2020-06-22T16:32:59Z", "closed_at": "2020-06-22T16:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "===================================================\r\n   libsodium 1.0.18: test/default/test-suite.log\r\n===================================================\r\n\r\n# TOTAL: 77\r\n# PASS:  76\r\n# SKIP:  0\r\n# XFAIL: 0\r\n# FAIL:  1\r\n# XPASS: 0\r\n# ERROR: 0\r\n\r\n.. contents:: :depth: 2\r\n\r\nFAIL: box_seal\r\n==============\r\n\r\nbox_seal: box_seal.c:138: tv4: Assertion `memcmp(cm, m2, m_len) != 0' failed.\r\nFAIL box_seal (exit status: 134)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/973", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/973/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/973/events", "html_url": "https://github.com/jedisct1/libsodium/issues/973", "id": 642233879, "node_id": "MDU6SXNzdWU2NDIyMzM4Nzk=", "number": 973, "title": "thinking about alternatives to sodium_init", "user": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-19T21:50:05Z", "updated_at": "2020-06-21T12:09:47Z", "closed_at": "2020-06-19T22:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I get more experience working with libsodium, I find myself wishing that `sodium_init` was implicit and automatic rather than explicit. The biggest issue it causes for me is that it leaks through any abstraction created on top. For example, if I want to build a hash table library using `crypto_shorthash`, my library now needs to expose and document a global init function that wraps `sodium_init`. Another issue I've run into is that, counterintuitively, most of libsodium seems to work just fine if you _don't_ call `sodium_init`. That makes me worry that lots of callers simply ignore the requirement, which I think exposes them to obscure race conditions on non-Posix platforms that they're very unlikely to uncover in testing.\r\n\r\nHave you considered checking for initialization implicitly in every API function? (Or at least, at every point where we reach for a global data structure.) I assume the best way to do this would be with some global atomic flag, possible wrapped up in a \"once\" sync primitive, with the cost of checking it being a single read-acquire in the common case. I think that's cheap enough that it would disappear into the noise compared to e.g. computing a single block of ChaCha20. Is that right in your experience? Thinking about other problems: Does libsodium need to support platforms that haven't implemented C11 standard atomics? Would it be an interrupt-safety issue to take a lock implicitly? What else might I be missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/970", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/970/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/970/events", "html_url": "https://github.com/jedisct1/libsodium/issues/970", "id": 638224426, "node_id": "MDU6SXNzdWU2MzgyMjQ0MjY=", "number": 970, "title": "[Invalid] sodium_bin2base64() can cause a buffer overflow", "user": {"login": "davidebeatrici", "id": 5897523, "node_id": "MDQ6VXNlcjU4OTc1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5897523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidebeatrici", "html_url": "https://github.com/davidebeatrici", "followers_url": "https://api.github.com/users/davidebeatrici/followers", "following_url": "https://api.github.com/users/davidebeatrici/following{/other_user}", "gists_url": "https://api.github.com/users/davidebeatrici/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidebeatrici/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidebeatrici/subscriptions", "organizations_url": "https://api.github.com/users/davidebeatrici/orgs", "repos_url": "https://api.github.com/users/davidebeatrici/repos", "events_url": "https://api.github.com/users/davidebeatrici/events{/privacy}", "received_events_url": "https://api.github.com/users/davidebeatrici/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-13T20:13:30Z", "updated_at": "2020-06-14T00:00:24Z", "closed_at": "2020-06-13T20:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When `b64_maxlen`'s value is less than the required output buffer, `sodium_bin2base64()` is supposed to fail:\r\n\r\nhttps://github.com/jedisct1/libsodium/blob/927dfe8e2eaa86160d3ba12a7e3258fbc322909c/src/libsodium/sodium/codecs.c#L202-L204\r\n\r\n```c\r\nconst char str[32] = \"Hi there, I'm a string!\";\r\nchar buf[44];\r\nsodium_bin2base64(buf, sizeof(buf), str, sizeof(str), sodium_base64_VARIANT_ORIGINAL);\r\nprintf(\"%s\\n\", buf);\r\n```\r\n\r\nCauses a segmentation fault.\r\n\r\n```c\r\nconst char str[32] = \"Hi there, I'm a string!\";\r\nchar buf[sodium_base64_ENCODED_LEN(sizeof(str), sodium_base64_VARIANT_ORIGINAL)];\r\nsodium_bin2base64(buf, sizeof(buf), str, sizeof(str), sodium_base64_VARIANT_ORIGINAL);\r\nprintf(\"%s\\n\", buf);\r\n```\r\n\r\nPrints `SGkgdGhlcmUsIEknbSBhIHN0cmluZyEAAAAAAAAAAAA=`.\r\n\r\nThe size of `buf` is 45.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/969", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/969/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/969/events", "html_url": "https://github.com/jedisct1/libsodium/issues/969", "id": 635182363, "node_id": "MDU6SXNzdWU2MzUxODIzNjM=", "number": 969, "title": "Rejection of non-prime order points in Ed25519.", "user": {"login": "armfazh", "id": 10335519, "node_id": "MDQ6VXNlcjEwMzM1NTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/10335519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armfazh", "html_url": "https://github.com/armfazh", "followers_url": "https://api.github.com/users/armfazh/followers", "following_url": "https://api.github.com/users/armfazh/following{/other_user}", "gists_url": "https://api.github.com/users/armfazh/gists{/gist_id}", "starred_url": "https://api.github.com/users/armfazh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armfazh/subscriptions", "organizations_url": "https://api.github.com/users/armfazh/orgs", "repos_url": "https://api.github.com/users/armfazh/repos", "events_url": "https://api.github.com/users/armfazh/events{/privacy}", "received_events_url": "https://api.github.com/users/armfazh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-09T07:29:59Z", "updated_at": "2020-06-09T08:50:32Z", "closed_at": "2020-06-09T08:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The function `ge25519_has_small_order` verifies whether the encoded point is in the low-order group. However, how to prevent the input point has a non-prime order, say 2*r, 4*r, 8*r?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/966", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/966/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/966/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/966/events", "html_url": "https://github.com/jedisct1/libsodium/issues/966", "id": 630089382, "node_id": "MDU6SXNzdWU2MzAwODkzODI=", "number": 966, "title": "Different types for opslimit", "user": {"login": "jakob", "id": 198305, "node_id": "MDQ6VXNlcjE5ODMwNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/198305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakob", "html_url": "https://github.com/jakob", "followers_url": "https://api.github.com/users/jakob/followers", "following_url": "https://api.github.com/users/jakob/following{/other_user}", "gists_url": "https://api.github.com/users/jakob/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakob/subscriptions", "organizations_url": "https://api.github.com/users/jakob/orgs", "repos_url": "https://api.github.com/users/jakob/repos", "events_url": "https://api.github.com/users/jakob/events{/privacy}", "received_events_url": "https://api.github.com/users/jakob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T15:23:38Z", "updated_at": "2020-06-03T15:48:38Z", "closed_at": "2020-06-03T15:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The opslimit parameter has type `unsigned long long` here:\r\n```C\r\nint\r\ncrypto_pwhash(unsigned char * const out, unsigned long long outlen,\r\n              const char * const passwd, unsigned long long passwdlen,\r\n              const unsigned char * const salt,\r\n              unsigned long long opslimit, size_t memlimit, int alg);\r\n```\r\n\r\nBut the functions that return min/max/interactive values have type `size_t`\r\n```C\r\nsize_t\r\ncrypto_pwhash_opslimit_min(void);\r\n\r\nsize_t\r\ncrypto_pwhash_opslimit_max(void);\r\n\r\nsize_t\r\ncrypto_pwhash_opslimit_interactive(void);\r\n```\r\n\r\nThis causes issues when importing the library in Swift.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/965", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/965/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/965/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/965/events", "html_url": "https://github.com/jedisct1/libsodium/issues/965", "id": 627596058, "node_id": "MDU6SXNzdWU2Mjc1OTYwNTg=", "number": 965, "title": "Make check fails on AMD64 with GCC 7.4.0", "user": {"login": "Avatat", "id": 11491256, "node_id": "MDQ6VXNlcjExNDkxMjU2", "avatar_url": "https://avatars2.githubusercontent.com/u/11491256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avatat", "html_url": "https://github.com/Avatat", "followers_url": "https://api.github.com/users/Avatat/followers", "following_url": "https://api.github.com/users/Avatat/following{/other_user}", "gists_url": "https://api.github.com/users/Avatat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avatat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avatat/subscriptions", "organizations_url": "https://api.github.com/users/Avatat/orgs", "repos_url": "https://api.github.com/users/Avatat/repos", "events_url": "https://api.github.com/users/Avatat/events{/privacy}", "received_events_url": "https://api.github.com/users/Avatat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-29T23:29:48Z", "updated_at": "2020-05-30T21:21:53Z", "closed_at": "2020-05-30T21:21:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to report, that some tests are failing after building libsodium master branch on AMD64 using GCC 7.4.0 on Ubuntu 18.04: https://travis-ci.com/github/mumble-voip/crypto-benchmark/jobs/341615315\r\n```\r\n../../build-aux/test-driver: line 107: 29571 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: core_ed25519\r\n../../build-aux/test-driver: line 107: 29591 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: core_ed25519_h2c\r\n../../build-aux/test-driver: line 107: 29611 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: core_ristretto255\r\nPASS: kdf_hkdf\r\nPASS: pwhash_scrypt\r\nPASS: pwhash_scrypt_ll\r\nPASS: scalarmult_ed25519\r\n../../build-aux/test-driver: line 107: 29707 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: scalarmult_ristretto255\r\n```\r\n\r\nTests pass when the build is done on Arm64 platform or AMD64 and Clang. It even works on AMD64 but using Ubuntu 20.04 and GCC 9.3.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/964", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/964/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/964/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/964/events", "html_url": "https://github.com/jedisct1/libsodium/issues/964", "id": 626715550, "node_id": "MDU6SXNzdWU2MjY3MTU1NTA=", "number": 964, "title": "Detached Signature Test Vector Issue", "user": {"login": "skaht", "id": 6238506, "node_id": "MDQ6VXNlcjYyMzg1MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6238506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaht", "html_url": "https://github.com/skaht", "followers_url": "https://api.github.com/users/skaht/followers", "following_url": "https://api.github.com/users/skaht/following{/other_user}", "gists_url": "https://api.github.com/users/skaht/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaht/subscriptions", "organizations_url": "https://api.github.com/users/skaht/orgs", "repos_url": "https://api.github.com/users/skaht/repos", "events_url": "https://api.github.com/users/skaht/events{/privacy}", "received_events_url": "https://api.github.com/users/skaht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-28T18:19:34Z", "updated_at": "2020-05-28T21:12:57Z", "closed_at": "2020-05-28T19:39:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code was whittled down from code that was unreliable at generating results to a test vector documented in an IETF draft.  The reliability of generating matching results was a function of the source code and was independent upon the compiler (e.g., using clang++ or g++) and the distribution of the code (e.g., using Homebrew or compiling straight from https://github.com/jedisct1/libsodium/tree/stable). An independent 3rd party replicated the same issue within their development environment.\r\n\r\nAny assistance for trouble shooting the following standalone code will be greatly appreciated.\r\n\r\ncat **sign_isolate_D.cpp**\r\n```\r\n// TRL 3  - exploration code\r\n\r\n#include <iostream>  // for C++ version of strlen(), strcmp()\r\n#include <stdio.h>\r\n\r\n#include <sodium.h>\r\n\r\n// Signatures - https://doc.libsodium.org/public-key_cryptography/public-key_signatures#detached-mode\r\n// \r\n// SOURCES FOR TEST VECTOR:\r\n//          SECRET_KEY  from Section A.2 of https://tools.ietf.org/pdf/draft-koch-eddsa-for-openpgp-04.pdf\r\n//          MESSAGE     from Section A.2 of https://tools.ietf.org/pdf/draft-koch-eddsa-for-openpgp-04.pdf\r\n//          ASCII_ENCODED_MESSAGE_SIGNATURE obtained by plugging SECRET_KEY and MESSAGE into https://quirks.ed25519.info/basics/\r\n//          HEX_ENCODED_MESSAGE_SIGNATURE   obtained from R & S components of Section A.2 of https://tools.ietf.org/pdf/draft-koch-eddsa-for-openpgp-04.pdf\r\n\r\nconst char *SECRET_KEY = \"1a8b1ff05ded48e18bf50166c664ab023ea70003d78d9e41f5758a91d850f8d2\",\r\n           *MESSAGE    = \"f6220a3f757814f4c2176ffbb68b00249cd4ccdc059c4b34ad871f30b1740280\";\r\n\r\nconst char *ASCII_ENCODED_MESSAGE_SIGNATURE = \"551d9557ccab19d2699dcddd408c13484d941ca99b98c816f4fdb72779dc72d6aab726e8a37a2f831349012dcfee4e1358ae2c00d1ad1c2078171eb924d7f604\",\r\n           *HEX_ENCODED_MESSAGE_SIGNATURE   = \"56f90cca98e2102637bd983fdb16c131dfd27ed82bf4dde5606e0d756aed3366d09c4fa11527f038e0f57f2201d82f2ea2c9033265fa6ceb489e854bae61b404\";\r\n\r\n\r\nint main()\r\n{\r\n  if( sodium_init() < 0 )\r\n  {\r\n    fprintf( stderr, \"Error: the Sodium Library couldn't be initialized, not safe to use!\\n\" );\r\n    return( 1 );\r\n  }\r\n\r\n  const char          *hex_secret_key = (const char*)SECRET_KEY;\r\n  const unsigned char *message        = (const unsigned char*)MESSAGE;\r\n  int                  message_length = (int)strlen( (const char*)message );\r\n  unsigned char        sk[crypto_sign_ed25519_SECRETKEYBYTES] = { 0 };        \r\n  char                 hex_ed_signature[129];\r\n\r\n  fprintf( stdout, \" Seed                                  : %s\\n\", hex_secret_key );\r\n  sodium_hex2bin( sk, sizeof(sk), (const char*)hex_secret_key, message_length, NULL, NULL, NULL ); // converts hex secret key to binary sk\r\n\r\n\r\n// MESSAGE TO BE SIGNED IS ASCII ENCODED\r\n  {\r\n    unsigned char     signature[crypto_sign_BYTES];\r\n\r\n    if( crypto_sign_detached( signature, NULL, message, message_length, sk ) < 0 )\r\n      fprintf( stderr, \"Failed to create an ED25519 Signature for round 1! \\n\" );\r\n    sodium_bin2hex( hex_ed_signature, 129, signature, 64 );\r\n\r\n    if( strcmp( ASCII_ENCODED_MESSAGE_SIGNATURE, hex_ed_signature ) )\r\n      fprintf( stderr, \"\\nFailed ASCII Message Signature Calculation Test!\" );\r\n\r\n    fprintf( stdout, \"\\n\" );\r\n    fprintf( stdout, \" Message is ASCII                      : %s\\n\", (char*)message );\r\n    fprintf( stdout, \"         ED25519 R Signature Component : %.64s\\n\", &hex_ed_signature[0]  );\r\n    fprintf( stdout, \"         ED25519 S Signature Component : %.64s\\n\", &hex_ed_signature[64] );\r\n  }\r\n\r\n\r\n// MESSAGE TO BE SIGNED IS HEX ENCODED  (For the test vector above, assumes the message is HEX-encoded binary. Hence, the message length is divided by 2 below.)\r\n  {\r\n    unsigned char  MESSAGE_SHORT[1024];\r\n    unsigned char  signature[crypto_sign_BYTES];\r\n\r\n    sodium_hex2bin( MESSAGE_SHORT, sizeof(MESSAGE_SHORT), (const char*)message, message_length, NULL, NULL, NULL );\r\n\r\n    if( crypto_sign_detached( signature, NULL, MESSAGE_SHORT, message_length/2, sk ) < 0 )\r\n      fprintf( stderr, \"Failed to create an ED25519 Signature for round 2! \\n\" );\r\n    sodium_bin2hex( hex_ed_signature, 129, signature, 64 );\r\n\r\n    if( strcmp( HEX_ENCODED_MESSAGE_SIGNATURE, hex_ed_signature ) )\r\n      fprintf( stderr, \"\\nFailed Hex ASCII Signature Calculation Test!\" );\r\n\r\n    fprintf( stdout, \"\\n\" );\r\n    fprintf( stdout, \" Message is binary encoded as HEX      : %s\\n\", (char*)message );\r\n    fprintf( stdout, \"         ED25519 R Signature Component : %.64s\\n\", &hex_ed_signature[0]  );\r\n    fprintf( stdout, \"         ED25519 S Signature Component : %.64s\\n\", &hex_ed_signature[64] );\r\n  }\r\n\r\n  fprintf( stdout, \"\\n\" );\r\n\r\n  return( 0 );\r\n}\r\n```\r\n\r\n**If executes properly, the results will be:**\r\n\r\n% ./sign\r\n```\r\n Seed                                  : 1a8b1ff05ded48e18bf50166c664ab023ea70003d78d9e41f5758a91d850f8d2\r\n\r\n Message is ASCII                      : f6220a3f757814f4c2176ffbb68b00249cd4ccdc059c4b34ad871f30b1740280\r\n         ED25519 R Signature Component : 551d9557ccab19d2699dcddd408c13484d941ca99b98c816f4fdb72779dc72d6\r\n         ED25519 S Signature Component : aab726e8a37a2f831349012dcfee4e1358ae2c00d1ad1c2078171eb924d7f604\r\n\r\n Message is binary encoded as HEX      : f6220a3f757814f4c2176ffbb68b00249cd4ccdc059c4b34ad871f30b1740280\r\n         ED25519 R Signature Component : 56f90cca98e2102637bd983fdb16c131dfd27ed82bf4dde5606e0d756aed3366\r\n         ED25519 S Signature Component : d09c4fa11527f038e0f57f2201d82f2ea2c9033265fa6ceb489e854bae61b404\r\n```\r\n\r\n**Actual results for executing the code above:**\r\n\r\n% ./sign1\r\n ```\r\nSeed                                  : 1a8b1ff05ded48e18bf50166c664ab023ea70003d78d9e41f5758a91d850f8d2\r\n\r\nFailed ASCII Message Signature Calculation Test!\r\n Message is ASCII                      : f6220a3f757814f4c2176ffbb68b00249cd4ccdc059c4b34ad871f30b1740280\r\n         ED25519 R Signature Component : 551d9557ccab19d2699dcddd408c13484d941ca99b98c816f4fdb72779dc72d6\r\n         ED25519 S Signature Component : 184d677dcfa8065d9a8280f45fb0c09707d7c77c33f7197e326f28ac18366f07\r\n\r\nFailed Hex ASCII Signature Calculation Test!\r\n Message is binary encoded as HEX      : f6220a3f757814f4c2176ffbb68b00249cd4ccdc059c4b34ad871f30b1740280\r\n         ED25519 R Signature Component : 56f90cca98e2102637bd983fdb16c131dfd27ed82bf4dde5606e0d756aed3366\r\n         ED25519 S Signature Component : 6cc7e5de6c3da0ba7f9f1f236faa2adfc11e762d6b25245fbc8cf3eb13844301\r\n```\r\nNote that the **R components** of the signatures match, but the **S components** differ.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/963", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/963/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/963/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/963/events", "html_url": "https://github.com/jedisct1/libsodium/issues/963", "id": 625804228, "node_id": "MDU6SXNzdWU2MjU4MDQyMjg=", "number": 963, "title": "Feature Request: Export Public Key in DER Format", "user": {"login": "macjohnny", "id": 5589029, "node_id": "MDQ6VXNlcjU1ODkwMjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5589029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macjohnny", "html_url": "https://github.com/macjohnny", "followers_url": "https://api.github.com/users/macjohnny/followers", "following_url": "https://api.github.com/users/macjohnny/following{/other_user}", "gists_url": "https://api.github.com/users/macjohnny/gists{/gist_id}", "starred_url": "https://api.github.com/users/macjohnny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macjohnny/subscriptions", "organizations_url": "https://api.github.com/users/macjohnny/orgs", "repos_url": "https://api.github.com/users/macjohnny/repos", "events_url": "https://api.github.com/users/macjohnny/events{/privacy}", "received_events_url": "https://api.github.com/users/macjohnny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-27T15:38:55Z", "updated_at": "2020-05-28T08:44:06Z", "closed_at": "2020-05-27T16:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Context\r\nCurrently, a pair of public/private keys using the `Ed25519` can be created using the \r\n```c++\r\nint crypto_sign_keypair(unsigned char *pk, unsigned char *sk);\r\n```\r\nfunction described in https://libsodium.gitbook.io/doc/public-key_cryptography/public-key_signatures\r\nand used to sign a message with e.g. the following code snippet:\r\n```c++\r\n#include <sodium/crypto_sign.h>\r\n\r\nstd::vector<uint8_t> public_key(crypto_sign_PUBLICKEYBYTES);\r\nstd::vector<uint8_t> private_key(crypto_sign_SECRETKEYBYTES);\r\ncrypto_sign_keypair(public_key.data(), private_key.data());\r\n\r\nstd::vector<uint8_t> message {0x11, 0x23, 0xaa};\r\n\r\nstd::vector<uint8_t> signature(crypto_sign_BYTES);\r\ncrypto_sign_detached(signature.data(), NULL, message.data(), message.size(), private_key.data());\r\n\r\nbool signature_valid = crypto_sign_verify_detached(signature.data(), message.data(), message.size(), public_key.data()) == 0;\r\n```\r\n\r\n# Feature Request\r\nIt would be useful to have a function e.g. `convert_key_to_der(unsigned char *public_key, unsigned char *public_key_der)` to convert the generated `public_key` into the [`DER` format](https://tools.ietf.org/html/draft-ietf-curdle-pkix-10#section-4)\r\n\r\nThis would allow to validate the `signature` (e.g. stored to a file `signature.bin`) of `message` (e.g. stored to a file `message.bin`) to be validated against the `public_key` (converted to `DER` and e.g. stored to a file `public_key.der`) with a command line tool such as `openssl`\r\n```bash\r\nopenssl pkeyutl -in message.bin -rawin -sigfile signature.bin -inkey public_key.der -keyform der -pubin  -verify\r\n# Signature Verified Successfully\r\n```\r\nNote: `Ed25519` is only supported in `openssl>=3.0.0-alpha1` (https://github.com/openssl/openssl/issues/6988#issuecomment-618297128), which can be used e.g. like this:\r\n```bash\r\nwget https://www.openssl.org/source/openssl-3.0.0-alpha2.tar.gz\r\ntar -xzf openssl-3.0.0-alpha2.tar.gz\r\ncd openssl-3.0.0-alpha2\r\n./config\r\nmake\r\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)\r\ncd ../\r\n```\r\n\r\n# Proof of concept\r\nA simple implementation to store the `public_key` to a valid `DER` format is as follows\r\n```c++\r\n/// header bytes of a Distinguished Encoding Rules (DER) encoded Ed25519 public key with size 32 bytes\r\n/// The sequence can be found with the following commands:\r\n/// # generate a new private key with the Ed25519 algorithm\r\n/// openssl genpkey -algorithm Ed25519 -out private-key.pem\r\n/// # extract the public key into a DER file\r\n/// openssl pkey -in private-key.pem -outform der -out public-key.der -pubout\r\n/// # check the actual binary content of the public key in the last BIT\u00a0STRING field. Note: the first byte (number of unused bits)\r\n/// # should be 0x00, since the key is 32 bytes long, i.e. a multiple of 8, and hence no padding bits (number of unused bits) are needed\r\n/// openssl asn1parse -in public-key.der -inform der -dump\r\n/// # get all bytes of the DER file except the last 32 bytes (the last 32 bytes should be the actual binary content checked above)\r\n/// hexdump -C public-key.der\r\nconst std::vector<uint8_t> kDerHeaderSequence {0x30, 0x2a, 0x30, 0x05, 0x06, 0x03, 0x2b, 0x65, 0x70, 0x03, 0x21, 0x00};\r\n\r\nstd::ofstream public_key_file(\"public_key.der\");\r\npublic_key_file.write((char *)kDerHeaderSequence.data(), kDerHeaderSequence.size());\r\npublic_key_file.write((char *)public_key.data(), public_key.size());\r\n\r\nstd::ofstream signature_file(\"signature.bin\");\r\nsignature_file.write((char *)signature.data(), signature.size());\r\n\r\nstd::ofstream message_file(\"message.bin\");\r\nmessage_file.write((char *)message.data(), message.size());\r\n```\r\n\r\n# Implementation\r\nThe simple implementation consisting of prepending `kDerHeaderSequence` to the `public_key` allows conversion without adding a dependence on a [ASN.1](https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One) serializer.\r\nAnalogously, this could also be done for `private_key`.\r\nIf you agree, I am willing to file a PR with such an implementation.\r\n\r\n# Literature\r\n* https://tools.ietf.org/html/draft-ietf-curdle-pkix-10#section-4\r\n* https://wiki.openssl.org/index.php/DER\r\n* https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem\r\n* https://www.w3.org/Protocols/HTTP-NG/asn1.html\r\n* http://luca.ntop.org/Teaching/Appunti/asn1.html\r\n* https://gitlab.com/gitlab-org/build/omnibus-mirror/openssl/-/blob/6d382c74b375f1f8c44f04ec3de95ff781598a3b/doc/man1/openssl-pkeyutl.pod.in#L311-321\r\n\r\nUseful concerning private key:\r\n* https://github.com/openssl/openssl/issues/6357#issuecomment-392123065", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/962", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/962/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/962/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/962/events", "html_url": "https://github.com/jedisct1/libsodium/issues/962", "id": 625773079, "node_id": "MDU6SXNzdWU2MjU3NzMwNzk=", "number": 962, "title": "failed build on Windows", "user": {"login": "caobug", "id": 7737673, "node_id": "MDQ6VXNlcjc3Mzc2NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7737673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caobug", "html_url": "https://github.com/caobug", "followers_url": "https://api.github.com/users/caobug/followers", "following_url": "https://api.github.com/users/caobug/following{/other_user}", "gists_url": "https://api.github.com/users/caobug/gists{/gist_id}", "starred_url": "https://api.github.com/users/caobug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caobug/subscriptions", "organizations_url": "https://api.github.com/users/caobug/orgs", "repos_url": "https://api.github.com/users/caobug/repos", "events_url": "https://api.github.com/users/caobug/events{/privacy}", "received_events_url": "https://api.github.com/users/caobug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T14:59:51Z", "updated_at": "2020-05-27T16:20:36Z", "closed_at": "2020-05-27T16:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nC:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/10.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: crypto_generichash/blake2b/ref/.libs/libsodium_la-blake2b-ref.o:blake2b-ref.c:(.text+0x4f8): undefined reference to `__memcpy_chk'\r\nC:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/10.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: crypto_generichash/blake2b/ref/.libs/libsodium_la-blake2b-ref.o:blake2b-ref.c:(.text+0x652): undefined reference to `__memcpy_chk'\r\nC:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/10.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: crypto_generichash/blake2b/ref/.libs/libsodium_la-blake2b-ref.o:blake2b-ref.c:(.text+0xa3e): undefined reference to `__memcpy_chk'\r\nC:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/10.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: crypto_generichash/blake2b/ref/.libs/libsodium_la-blake2b-ref.o:blake2b-ref.c:(.text+0xd36): undefined reference to `__memcpy_chk'\r\nC:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/10.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: crypto_pwhash/argon2/.libs/libsodium_la-argon2-encoding.o:argon2-encoding.c:(.text+0x6b0): undefined reference to `__memcpy_chk'\r\nC:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/10.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: crypto_pwhash/argon2/.libs/libsodium_la-argon2-encoding.o:argon2-encoding.c:(.text+0x8a8): more undefined references to `__memcpy_chk' follow\r\ncollect2.exe: error: ld returned 1 exit status\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/961", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/961/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/961/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/961/events", "html_url": "https://github.com/jedisct1/libsodium/issues/961", "id": 622606252, "node_id": "MDU6SXNzdWU2MjI2MDYyNTI=", "number": 961, "title": "Clarify/document in-place crypto_box_seal", "user": {"login": "roshanr95", "id": 4298494, "node_id": "MDQ6VXNlcjQyOTg0OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4298494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roshanr95", "html_url": "https://github.com/roshanr95", "followers_url": "https://api.github.com/users/roshanr95/followers", "following_url": "https://api.github.com/users/roshanr95/following{/other_user}", "gists_url": "https://api.github.com/users/roshanr95/gists{/gist_id}", "starred_url": "https://api.github.com/users/roshanr95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roshanr95/subscriptions", "organizations_url": "https://api.github.com/users/roshanr95/orgs", "repos_url": "https://api.github.com/users/roshanr95/repos", "events_url": "https://api.github.com/users/roshanr95/events{/privacy}", "received_events_url": "https://api.github.com/users/roshanr95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-21T16:02:09Z", "updated_at": "2020-08-19T23:39:43Z", "closed_at": "2020-05-21T16:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to figure out if I could do a `crypto_box_seal` in-place with a big enough buffer to contain the ciphertext and managed to do it with some constraints.\r\n\r\nEssentially, it doesn't work if the plaintext buffer and the ciphertext buffer have the same start point as is usually the case. It requires that `plaintext_start >= ciphertext_start + 32`. I presume this is because the ephemeral key is first written out to the ciphertext buffer (possibly overwriting the plaintext) and then the encryption happens.\r\n\r\nI mainly wanted to check if libsodium could make any guarantees on this (subject to the above constraint) similar to other in-place encryption guarantees in the docs regarding overlapping buffers. Also, a minor thing, but it would be nice if the ephemeral key could be written in the end after encryption so that the above constraint disappears and buffers can overlap without restriction.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/960", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/960/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/960/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/960/events", "html_url": "https://github.com/jedisct1/libsodium/issues/960", "id": 620372623, "node_id": "MDU6SXNzdWU2MjAzNzI2MjM=", "number": 960, "title": "autogen.sh and configure fail when git.savannah.gnu.org is down", "user": {"login": "bluca", "id": 782193, "node_id": "MDQ6VXNlcjc4MjE5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/782193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluca", "html_url": "https://github.com/bluca", "followers_url": "https://api.github.com/users/bluca/followers", "following_url": "https://api.github.com/users/bluca/following{/other_user}", "gists_url": "https://api.github.com/users/bluca/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluca/subscriptions", "organizations_url": "https://api.github.com/users/bluca/orgs", "repos_url": "https://api.github.com/users/bluca/repos", "events_url": "https://api.github.com/users/bluca/events{/privacy}", "received_events_url": "https://api.github.com/users/bluca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-18T17:14:06Z", "updated_at": "2020-08-16T23:39:42Z", "closed_at": "2020-05-18T18:45:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ ./configure\r\nconfigure: error: cannot run /bin/bash build-aux/config.sub\r\n$ cat build-aux/config.sub \r\n<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.4.6 (Trisquel GNU/Linux)</center>\r\n</body>\r\n</html>\r\n```\r\n\r\nI know there is a env variable to avoid downloading new files, but having a simple sanity check before overwriting existing files in build-aux would be very helpful for automated build systems. Without inspecting the build root, the error from ./configure is not helpful when reading the log.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/958", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/958/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/958/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/958/events", "html_url": "https://github.com/jedisct1/libsodium/issues/958", "id": 617730400, "node_id": "MDU6SXNzdWU2MTc3MzA0MDA=", "number": 958, "title": "Diverging branches", "user": {"login": "eiderdaus", "id": 18657779, "node_id": "MDQ6VXNlcjE4NjU3Nzc5", "avatar_url": "https://avatars0.githubusercontent.com/u/18657779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eiderdaus", "html_url": "https://github.com/eiderdaus", "followers_url": "https://api.github.com/users/eiderdaus/followers", "following_url": "https://api.github.com/users/eiderdaus/following{/other_user}", "gists_url": "https://api.github.com/users/eiderdaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/eiderdaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eiderdaus/subscriptions", "organizations_url": "https://api.github.com/users/eiderdaus/orgs", "repos_url": "https://api.github.com/users/eiderdaus/repos", "events_url": "https://api.github.com/users/eiderdaus/events{/privacy}", "received_events_url": "https://api.github.com/users/eiderdaus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-13T20:23:22Z", "updated_at": "2020-08-11T23:39:55Z", "closed_at": "2020-05-13T20:30:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It makes me rather anxious that there are two active branches with wildly different histories in this project. The master and stable branches can not be merged automatically one way or another. Some commits could be applied in both branches but the difference is still very big. Could someone please explain the reasoning behind this project's branches in general and of this divergence in particular because I honestly do not see any legitimate reason. I would be very happy if those two branches could somehow be converged or if any one of them could simply be abandoned in favor of the other.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/957", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/957/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/957/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/957/events", "html_url": "https://github.com/jedisct1/libsodium/issues/957", "id": 615373797, "node_id": "MDU6SXNzdWU2MTUzNzM3OTc=", "number": 957, "title": "Unable to install PHP 7: error undefined symbol: crypto_pwhash_scryptsalsa208sha256_memlimit_interactive", "user": {"login": "mrsof", "id": 1655700, "node_id": "MDQ6VXNlcjE2NTU3MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1655700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrsof", "html_url": "https://github.com/mrsof", "followers_url": "https://api.github.com/users/mrsof/followers", "following_url": "https://api.github.com/users/mrsof/following{/other_user}", "gists_url": "https://api.github.com/users/mrsof/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrsof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrsof/subscriptions", "organizations_url": "https://api.github.com/users/mrsof/orgs", "repos_url": "https://api.github.com/users/mrsof/repos", "events_url": "https://api.github.com/users/mrsof/events{/privacy}", "received_events_url": "https://api.github.com/users/mrsof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T11:42:18Z", "updated_at": "2020-08-08T23:39:31Z", "closed_at": "2020-05-10T16:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nI've opened an [issue](https://serverfault.com/questions/1016495/unable-to-install-php-7-error-undefined-symbol-crypto-pwhash-scryptsalsa208sha) in StackOverfolw.\r\nCan you help me to solve my problem as it seems to be linked to Libsodium ?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/956", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/956/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/956/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/956/events", "html_url": "https://github.com/jedisct1/libsodium/issues/956", "id": 615069393, "node_id": "MDU6SXNzdWU2MTUwNjkzOTM=", "number": 956, "title": "Sign by 32-byte nacl.box secretKey and verify by 32-byte publicKey", "user": {"login": "username1565", "id": 39200328, "node_id": "MDQ6VXNlcjM5MjAwMzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/39200328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/username1565", "html_url": "https://github.com/username1565", "followers_url": "https://api.github.com/users/username1565/followers", "following_url": "https://api.github.com/users/username1565/following{/other_user}", "gists_url": "https://api.github.com/users/username1565/gists{/gist_id}", "starred_url": "https://api.github.com/users/username1565/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/username1565/subscriptions", "organizations_url": "https://api.github.com/users/username1565/orgs", "repos_url": "https://api.github.com/users/username1565/repos", "events_url": "https://api.github.com/users/username1565/events{/privacy}", "received_events_url": "https://api.github.com/users/username1565/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-09T02:14:56Z", "updated_at": "2020-08-07T23:39:41Z", "closed_at": "2020-05-09T06:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "You can rewrite this from JavaScript and add yourself.\r\nSee this commit: https://github.com/username1565/nanoboard-javascript-captcha/commit/1bcefd221d430e630e8f4b999ce0eadfaa6e7e85\r\n\r\nIn this case no need to generate another public key to sign messages and verify this.\r\nAnd one keyPair can be used to encrypt/decrypt and sign/verify.\r\nThis is Tox private key and public key in ToxID: https://tox.chat/download.html\r\n\r\n_Best regards._", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/955", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/955/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/955/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/955/events", "html_url": "https://github.com/jedisct1/libsodium/issues/955", "id": 612983704, "node_id": "MDU6SXNzdWU2MTI5ODM3MDQ=", "number": 955, "title": "Building windows static library", "user": {"login": "carlo-quinonez", "id": 53790047, "node_id": "MDQ6VXNlcjUzNzkwMDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/53790047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlo-quinonez", "html_url": "https://github.com/carlo-quinonez", "followers_url": "https://api.github.com/users/carlo-quinonez/followers", "following_url": "https://api.github.com/users/carlo-quinonez/following{/other_user}", "gists_url": "https://api.github.com/users/carlo-quinonez/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlo-quinonez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlo-quinonez/subscriptions", "organizations_url": "https://api.github.com/users/carlo-quinonez/orgs", "repos_url": "https://api.github.com/users/carlo-quinonez/repos", "events_url": "https://api.github.com/users/carlo-quinonez/events{/privacy}", "received_events_url": "https://api.github.com/users/carlo-quinonez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T00:58:24Z", "updated_at": "2020-08-07T23:39:40Z", "closed_at": "2020-05-09T06:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use libsodium when building a native module for NodeJS and would like to statically link the library.\r\n\r\nOn Ubuntu, we can build libsodium with `./configure --with-pic --disable-pie --enable-static` and can link against the `libsodium.a` file without having to include any additional files when we distribute our native Node module.\r\n\r\nHow can we accomplish the same thing on Windows?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/954", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/954/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/954/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/954/events", "html_url": "https://github.com/jedisct1/libsodium/issues/954", "id": 612201953, "node_id": "MDU6SXNzdWU2MTIyMDE5NTM=", "number": 954, "title": "Failing tests at master branch and gcc 7.4.0", "user": {"login": "Avatat", "id": 11491256, "node_id": "MDQ6VXNlcjExNDkxMjU2", "avatar_url": "https://avatars2.githubusercontent.com/u/11491256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avatat", "html_url": "https://github.com/Avatat", "followers_url": "https://api.github.com/users/Avatat/followers", "following_url": "https://api.github.com/users/Avatat/following{/other_user}", "gists_url": "https://api.github.com/users/Avatat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avatat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avatat/subscriptions", "organizations_url": "https://api.github.com/users/Avatat/orgs", "repos_url": "https://api.github.com/users/Avatat/repos", "events_url": "https://api.github.com/users/Avatat/events{/privacy}", "received_events_url": "https://api.github.com/users/Avatat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-04T22:11:37Z", "updated_at": "2020-08-02T23:39:36Z", "closed_at": "2020-05-04T23:26:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to report failing tests:\r\n```\r\n./../build-aux/test-driver: line 107: 28547 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: core_ed25519\r\n../../build-aux/test-driver: line 107: 28567 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: core_ed25519_h2c\r\n../../build-aux/test-driver: line 107: 28587 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: core_ristretto255\r\nPASS: kdf_hkdf\r\nPASS: pwhash_scrypt\r\nPASS: pwhash_scrypt_ll\r\nPASS: scalarmult_ed25519\r\n../../build-aux/test-driver: line 107: 28683 Aborted                 (core dumped) \"$@\" > $log_file 2>&1\r\nFAIL: scalarmult_ristretto255\r\nPASS: siphashx24\r\nPASS: xchacha20\r\n============================================================================\r\nTestsuite summary for libsodium 1.0.18\r\n============================================================================\r\n# TOTAL: 80\r\n# PASS:  76\r\n# SKIP:  0\r\n# XFAIL: 0\r\n# FAIL:  4\r\n# XPASS: 0\r\n# ERROR: 0\r\n```\r\nTests fail after building from master branch, using gcc 7.4.0 on Ubuntu 18.04 (TravisCI env).\r\nThere are no failing tests when using clang 7.0.0 (Ubuntu 18.04, TravisCI) and gcc 9.3.0 (Ubuntu 20.04).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/953", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/953/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/953/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/953/events", "html_url": "https://github.com/jedisct1/libsodium/issues/953", "id": 610659787, "node_id": "MDU6SXNzdWU2MTA2NTk3ODc=", "number": 953, "title": "Module.getRandromValue function not exist", "user": {"login": "DiachenkoIgor", "id": 19807843, "node_id": "MDQ6VXNlcjE5ODA3ODQz", "avatar_url": "https://avatars2.githubusercontent.com/u/19807843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiachenkoIgor", "html_url": "https://github.com/DiachenkoIgor", "followers_url": "https://api.github.com/users/DiachenkoIgor/followers", "following_url": "https://api.github.com/users/DiachenkoIgor/following{/other_user}", "gists_url": "https://api.github.com/users/DiachenkoIgor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiachenkoIgor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiachenkoIgor/subscriptions", "organizations_url": "https://api.github.com/users/DiachenkoIgor/orgs", "repos_url": "https://api.github.com/users/DiachenkoIgor/repos", "events_url": "https://api.github.com/users/DiachenkoIgor/events{/privacy}", "received_events_url": "https://api.github.com/users/DiachenkoIgor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T09:20:47Z", "updated_at": "2020-08-07T23:39:40Z", "closed_at": "2020-05-09T06:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "After building library for webassembly using script emscripten.sh, i have received error \"Module.getRandromValue function not exist\". I checked file  libsodium/src/libsodium/randombytes/randombytes.c and added logging. I understood, that function \"randombytes_stir\" never calls , so function isn't configured. However, i checked \"master\" branch and i noticed changes. With \"master\" changes my project started to work. Why doesn't \"stable\" brunch have this changes? In your wiki you said that if i want to use library, you have to download \"stable\" brunch. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/952", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/952/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/952/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/952/events", "html_url": "https://github.com/jedisct1/libsodium/issues/952", "id": 610248995, "node_id": "MDU6SXNzdWU2MTAyNDg5OTU=", "number": 952, "title": "Emscripten libsodium as a library", "user": {"login": "DiachenkoIgor", "id": 19807843, "node_id": "MDQ6VXNlcjE5ODA3ODQz", "avatar_url": "https://avatars2.githubusercontent.com/u/19807843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiachenkoIgor", "html_url": "https://github.com/DiachenkoIgor", "followers_url": "https://api.github.com/users/DiachenkoIgor/followers", "following_url": "https://api.github.com/users/DiachenkoIgor/following{/other_user}", "gists_url": "https://api.github.com/users/DiachenkoIgor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiachenkoIgor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiachenkoIgor/subscriptions", "organizations_url": "https://api.github.com/users/DiachenkoIgor/orgs", "repos_url": "https://api.github.com/users/DiachenkoIgor/repos", "events_url": "https://api.github.com/users/DiachenkoIgor/events{/privacy}", "received_events_url": "https://api.github.com/users/DiachenkoIgor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T17:14:45Z", "updated_at": "2020-07-30T23:39:37Z", "closed_at": "2020-05-01T08:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you, for your library, but i have issue with emscripten compiler. I have simple application, that used your library. I have compiled libsodium to libsodium.bc file based on libsodium/dist-build/emscripten.sh script and add this file as library for my own application. But when my application starts it throws error \"Module.getRandomValue() is not a function\". I noticed, that you create custom libsodium.js file by merging asm and wasm file. Can you please provide decision for this or algorithm, how use your library in such situation? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/951", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/951/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/951/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/951/events", "html_url": "https://github.com/jedisct1/libsodium/issues/951", "id": 608232563, "node_id": "MDU6SXNzdWU2MDgyMzI1NjM=", "number": 951, "title": "AEGIS availability", "user": {"login": "Avatat", "id": 11491256, "node_id": "MDQ6VXNlcjExNDkxMjU2", "avatar_url": "https://avatars2.githubusercontent.com/u/11491256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avatat", "html_url": "https://github.com/Avatat", "followers_url": "https://api.github.com/users/Avatat/followers", "following_url": "https://api.github.com/users/Avatat/following{/other_user}", "gists_url": "https://api.github.com/users/Avatat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avatat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avatat/subscriptions", "organizations_url": "https://api.github.com/users/Avatat/orgs", "repos_url": "https://api.github.com/users/Avatat/repos", "events_url": "https://api.github.com/users/Avatat/events{/privacy}", "received_events_url": "https://api.github.com/users/Avatat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-28T11:11:34Z", "updated_at": "2020-07-27T23:39:32Z", "closed_at": "2020-04-28T12:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\n[Mumble](https://github.com/mumble-voip/mumble/) is looking for modern encryption mechanisms. Now we use AES-OCB, but we consider a switch to AES-GCM-256, ChaCha20-Poly1305, or AEGIS. You are the only project I know, which has at least partially implemented AEGIS algorithm :)\r\n\r\n@jedisct1, @angt, what's the progress of AEGIS-256 implementation? Are you plan to implement AEGIS-128L too? I'm not a developer, but I will ask - do you need any help with AEGIS things?\r\n\r\nI asked the second question because we need encryption with the lowest latency possible, and AEGIS-128L is almost [two times faster](http://competitions.cr.yp.to/round3/aegisv11.pdf) than AEGIS-256.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/950", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/950/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/950/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/950/events", "html_url": "https://github.com/jedisct1/libsodium/issues/950", "id": 608003512, "node_id": "MDU6SXNzdWU2MDgwMDM1MTI=", "number": 950, "title": "\"unsigned long long\" is not working with old software", "user": {"login": "fergussoftware", "id": 8047142, "node_id": "MDQ6VXNlcjgwNDcxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8047142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fergussoftware", "html_url": "https://github.com/fergussoftware", "followers_url": "https://api.github.com/users/fergussoftware/followers", "following_url": "https://api.github.com/users/fergussoftware/following{/other_user}", "gists_url": "https://api.github.com/users/fergussoftware/gists{/gist_id}", "starred_url": "https://api.github.com/users/fergussoftware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fergussoftware/subscriptions", "organizations_url": "https://api.github.com/users/fergussoftware/orgs", "repos_url": "https://api.github.com/users/fergussoftware/repos", "events_url": "https://api.github.com/users/fergussoftware/events{/privacy}", "received_events_url": "https://api.github.com/users/fergussoftware/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-28T03:49:20Z", "updated_at": "2020-07-27T23:39:31Z", "closed_at": "2020-04-28T06:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear teammates,\r\nI am from old school and trying to integrate \"libsodium\" with old 32bit software.\r\nUnfortunately, **\"unsigned long long\"** is failing because old pure 32bit software has not recognization about int64 or \"long long\".\r\nWhen I am replacing **\"long long\"** with **\"long\"** at mass scale in the complete source directory and considering 32bit limitation, all starts as expected.\r\nIs there any best way to achieve this without a tempering source code?\r\nShould we consider support to 32bit based integers in this project?\r\nPlease share your thoughts.\r\nthanks\r\nDevang\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/949", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/949/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/949/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/949/events", "html_url": "https://github.com/jedisct1/libsodium/issues/949", "id": 604895765, "node_id": "MDU6SXNzdWU2MDQ4OTU3NjU=", "number": 949, "title": "Use Neon for chacha20 (and others)?", "user": {"login": "Mygod", "id": 3511321, "node_id": "MDQ6VXNlcjM1MTEzMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3511321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mygod", "html_url": "https://github.com/Mygod", "followers_url": "https://api.github.com/users/Mygod/followers", "following_url": "https://api.github.com/users/Mygod/following{/other_user}", "gists_url": "https://api.github.com/users/Mygod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mygod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mygod/subscriptions", "organizations_url": "https://api.github.com/users/Mygod/orgs", "repos_url": "https://api.github.com/users/Mygod/repos", "events_url": "https://api.github.com/users/Mygod/events{/privacy}", "received_events_url": "https://api.github.com/users/Mygod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T16:32:09Z", "updated_at": "2020-07-21T23:40:13Z", "closed_at": "2020-04-22T17:49:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "This repo mentioned at https://github.com/jedisct1/libsodium/issues/257#issuecomment-98544987 has chacha implementations for neon: https://github.com/floodyberry/chacha-opt/blob/d69e5acbc632ded477fa7056564c8a830c457de0/app/extensions/chacha/chacha_neon-32.inc\r\n\r\nSee also: https://github.com/torvalds/linux/blob/18bf34080c4c3beb6699181986cc97dd712498fe/arch/arm/crypto/chacha-neon-core.S", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/948", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/948/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/948/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/948/events", "html_url": "https://github.com/jedisct1/libsodium/issues/948", "id": 603906027, "node_id": "MDU6SXNzdWU2MDM5MDYwMjc=", "number": 948, "title": "Interop with djb's poly1305aes ?..", "user": {"login": "ulidtko", "id": 365338, "node_id": "MDQ6VXNlcjM2NTMzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/365338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulidtko", "html_url": "https://github.com/ulidtko", "followers_url": "https://api.github.com/users/ulidtko/followers", "following_url": "https://api.github.com/users/ulidtko/following{/other_user}", "gists_url": "https://api.github.com/users/ulidtko/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulidtko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulidtko/subscriptions", "organizations_url": "https://api.github.com/users/ulidtko/orgs", "repos_url": "https://api.github.com/users/ulidtko/repos", "events_url": "https://api.github.com/users/ulidtko/events{/privacy}", "received_events_url": "https://api.github.com/users/ulidtko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-21T10:58:35Z", "updated_at": "2020-07-20T23:39:51Z", "closed_at": "2020-04-21T11:26:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @jedisct1!\r\n\r\nI guess you're well familiar with [this MAC construction][poly1305aes] by djb \u2014 and I don't find any mention of it in libsodium docs, neither in the source.\r\n\r\nThere's #443 which mentions the algo; and it's locked down. You wrote there [years ago]:\r\n\r\n> `crypto_aead_aes256gcm*()` (AES256+GCM. AES+Poly1305 would work, but nobody uses it)\r\n\r\nWell... All generalizations are wrong \u2014 including this one :smile:\r\n\r\nWould you rethink and possibly reconsider if libsodium should support poly1305aes?\r\n\r\n---------------------------------\r\n\r\nI'll tell you my background here: I'm part of a team, and we're building a \"Server Platform\" product (read:\u00a0special-purpose linux distro), and we currently ship our product with:\r\n * openssl (of course);\r\n * libgcrypt;\r\n * gnutls;\r\n * cryptography.io;\r\n * libsodium too;\r\n * a bunch of password hashing libs, libxcrypt, libscrypt, bcrypt via python FFI, libmcrypt.\r\n\r\nAll are used one way or another, mostly as indirect dependencies. `libsodium` (which has damn good name BTW, gulp of fresh air!) is used directly by some of our code; I brought it in for `crypto_auth()`, `crypto_sign()`, `crypto_generichash()` and also for `minisign`. Great stuff.\r\n\r\nBut you see where I'm going: that's a bit of a crypto zoo going on. It'd be nice to try to keep it tame, by not adding yet another one crypto library. So, just as it often happens, we get a requirement to support another new thing \u2014 and it uses poly1305aes in its protocol.\r\n\r\nI'd really hoped we could get this job done easily with libsodium. It implements the primitives already, right? But alas, the combined construction isn't there.\r\n\r\nWhat would you say? Am I making sense, or horribly mistaken/uninformed and saying rubbish?\r\n\r\n[poly1305aes]: https://cr.yp.to/mac.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/947", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/947/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/947/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/947/events", "html_url": "https://github.com/jedisct1/libsodium/issues/947", "id": 603109644, "node_id": "MDU6SXNzdWU2MDMxMDk2NDQ=", "number": 947, "title": "using libsoduim in dart ffi", "user": {"login": "phanirithvij", "id": 29627898, "node_id": "MDQ6VXNlcjI5NjI3ODk4", "avatar_url": "https://avatars0.githubusercontent.com/u/29627898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phanirithvij", "html_url": "https://github.com/phanirithvij", "followers_url": "https://api.github.com/users/phanirithvij/followers", "following_url": "https://api.github.com/users/phanirithvij/following{/other_user}", "gists_url": "https://api.github.com/users/phanirithvij/gists{/gist_id}", "starred_url": "https://api.github.com/users/phanirithvij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phanirithvij/subscriptions", "organizations_url": "https://api.github.com/users/phanirithvij/orgs", "repos_url": "https://api.github.com/users/phanirithvij/repos", "events_url": "https://api.github.com/users/phanirithvij/events{/privacy}", "received_events_url": "https://api.github.com/users/phanirithvij/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-20T10:02:36Z", "updated_at": "2020-08-07T23:39:41Z", "closed_at": "2020-05-09T06:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'd like to use this library in a flutter app that runs on both android and ios.\r\nI need to encrypt and decrypt files using libsodium for that I'm planning to use `dart ffi`.\r\n\r\nI see that there are build scripts under `dist-builds/` how can I build for android and ios? What should I have installed on my windows system? (ios is not possible as I don't have a Mac)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/945", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/945/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/945/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/945/events", "html_url": "https://github.com/jedisct1/libsodium/issues/945", "id": 599967468, "node_id": "MDU6SXNzdWU1OTk5Njc0Njg=", "number": 945, "title": "Is there a corresponding implementation of the blake2b algorithm in golang?", "user": {"login": "wshhz", "id": 26473129, "node_id": "MDQ6VXNlcjI2NDczMTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/26473129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wshhz", "html_url": "https://github.com/wshhz", "followers_url": "https://api.github.com/users/wshhz/followers", "following_url": "https://api.github.com/users/wshhz/following{/other_user}", "gists_url": "https://api.github.com/users/wshhz/gists{/gist_id}", "starred_url": "https://api.github.com/users/wshhz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wshhz/subscriptions", "organizations_url": "https://api.github.com/users/wshhz/orgs", "repos_url": "https://api.github.com/users/wshhz/repos", "events_url": "https://api.github.com/users/wshhz/events{/privacy}", "received_events_url": "https://api.github.com/users/wshhz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T02:07:28Z", "updated_at": "2020-07-14T23:39:19Z", "closed_at": "2020-04-15T08:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a corresponding implementation of the blake2b algorithm in golang? The result I calculated using golang's package `golang.org/x/crypto/blake2b` is not the same as the result calculated using `crypto_generichash_blake2b_final`.I don't want to use cgo to call, because it will be very troublesome.Can someone help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/944", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/944/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/944/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/944/events", "html_url": "https://github.com/jedisct1/libsodium/issues/944", "id": 599160270, "node_id": "MDU6SXNzdWU1OTkxNjAyNzA=", "number": 944, "title": "crypto_kdf_derive_from_key ctx argument is very easy to get wrong", "user": {"login": "goblin", "id": 2834, "node_id": "MDQ6VXNlcjI4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goblin", "html_url": "https://github.com/goblin", "followers_url": "https://api.github.com/users/goblin/followers", "following_url": "https://api.github.com/users/goblin/following{/other_user}", "gists_url": "https://api.github.com/users/goblin/gists{/gist_id}", "starred_url": "https://api.github.com/users/goblin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goblin/subscriptions", "organizations_url": "https://api.github.com/users/goblin/orgs", "repos_url": "https://api.github.com/users/goblin/repos", "events_url": "https://api.github.com/users/goblin/events{/privacy}", "received_events_url": "https://api.github.com/users/goblin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-13T21:57:18Z", "updated_at": "2020-07-12T23:39:13Z", "closed_at": "2020-04-13T22:29:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The fact that the `ctx` argument to `crypto_kdf_derive_from_key` has to be *exactly* 8 bytes long is very tricky, prone to getting wrong, and under-documented. It would be much better to use something like a `\\0`-delimited string, and limit its maximum length in documentation, especially given that the personal data that actually goes to blake2b is padded with 0s to 16 bytes anyway.\r\n\r\nThis is not very clearly explained in the documentation, and all the examples are \"magically\" exactly 8-bytes long (i.e. `\"__auth__\"`, `\"username\"` and the like). Someone might not notice that all the strings are of this length and that the requirement is that they *must* be exactly that. A quick search on github shows at least one such occurrence where someone uses too short a string `\"rxtx\"` as `ctx`: https://github.com/matteomonti/leaf/blob/57aba45036ef58ba7a008308cd9638d65ddaf66c/src/drop/crypto/keyexchanger.cpp#L31\r\n\r\nUsing a shorter string results in code that unexpectedly produces different results depending on how it was compiled, and may lead to all sorts of incompatibilities, undecryptable messages and other nastiness. Here's what I mean, the same program compiled with GCC produces a different key than when compiled with clang:\r\n\r\n```\r\ngoblin@host:/tmp/gh$ cat > ctxpad.c\r\n#include <sodium.h>\r\n\r\nint main()\r\n{\r\n\tuint8_t key1[crypto_kdf_KEYBYTES];\r\n\tuint8_t subkey[32];\r\n\r\n\tif(sodium_init())\r\n\t\treturn 1;\r\n\t\r\n\tsodium_memzero(key1, crypto_kdf_KEYBYTES);\r\n\tcrypto_kdf_derive_from_key(subkey, 32, 0, \"ctx\", key1);\r\n\r\n\tchar buf[256];\r\n\tsodium_bin2hex(buf, 256, subkey, 32);\r\n\tprintf(\"%s\\n\", buf);\r\n\r\n\treturn 0;\r\n}\r\ngoblin@host:/tmp/gh$ gcc --version\r\ngcc (Debian 8.3.0-6) 8.3.0\r\nCopyright (C) 2018 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\ngoblin@host:/tmp/gh$ gcc -o ctxpad-gcc -lsodium ctxpad.c \r\ngoblin@host:/tmp/gh$ clang-8 --version\r\nclang version 8.0.1-3~bpo10+1 (tags/RELEASE_801/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\ngoblin@host:/tmp/gh$ clang-8 -o ctxpad-clang -lsodium ctxpad.c \r\ngoblin@host:/tmp/gh$ ./ctxpad-gcc \r\n6addb8a03e09835b27d08013f2623159c8b1a38b8c7e58cfbac53db7324de07e\r\ngoblin@host:/tmp/gh$ ./ctxpad-clang \r\nb9be066ad4d5000172340dbaaa9927c6c631b09ceb4d25c91592531b989e0266\r\ngoblin@host:/tmp/gh$ \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/943", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/943/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/943/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/943/events", "html_url": "https://github.com/jedisct1/libsodium/issues/943", "id": 598111355, "node_id": "MDU6SXNzdWU1OTgxMTEzNTU=", "number": 943, "title": "Unable to build on 18.04.4 LTS (Bionic Beaver)", "user": {"login": "MarkLTZ", "id": 43173987, "node_id": "MDQ6VXNlcjQzMTczOTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/43173987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkLTZ", "html_url": "https://github.com/MarkLTZ", "followers_url": "https://api.github.com/users/MarkLTZ/followers", "following_url": "https://api.github.com/users/MarkLTZ/following{/other_user}", "gists_url": "https://api.github.com/users/MarkLTZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkLTZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkLTZ/subscriptions", "organizations_url": "https://api.github.com/users/MarkLTZ/orgs", "repos_url": "https://api.github.com/users/MarkLTZ/repos", "events_url": "https://api.github.com/users/MarkLTZ/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkLTZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-10T21:54:04Z", "updated_at": "2020-07-09T23:39:19Z", "closed_at": "2020-04-10T22:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\ncompiling libsodium from source I have this error:\r\n\r\nmake[3]: Entering directory '/home/ubuntu/build/litecoinz/depends/work/build/x86_64-linux-gnu/libsodium/1.0.18-c091a4f9aa3/src/libsodium'\r\n  CC       crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo\r\ngcc-8: error: 1.0.18\": No such file or directory\r\nMakefile:2200: recipe for target 'crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo' failed\r\nmake[3]: *** [crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo] Error 1\r\n\r\nCould you please help me to solve this issue?\r\n\r\nThanks\r\nMark", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/941", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/941/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/941/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/941/events", "html_url": "https://github.com/jedisct1/libsodium/issues/941", "id": 585496627, "node_id": "MDU6SXNzdWU1ODU0OTY2Mjc=", "number": 941, "title": "crypto_core_ed25519_from_uniform exposes the *direct* map", "user": {"login": "LoupVaillant", "id": 27145845, "node_id": "MDQ6VXNlcjI3MTQ1ODQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/27145845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoupVaillant", "html_url": "https://github.com/LoupVaillant", "followers_url": "https://api.github.com/users/LoupVaillant/followers", "following_url": "https://api.github.com/users/LoupVaillant/following{/other_user}", "gists_url": "https://api.github.com/users/LoupVaillant/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoupVaillant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoupVaillant/subscriptions", "organizations_url": "https://api.github.com/users/LoupVaillant/orgs", "repos_url": "https://api.github.com/users/LoupVaillant/repos", "events_url": "https://api.github.com/users/LoupVaillant/events{/privacy}", "received_events_url": "https://api.github.com/users/LoupVaillant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-21T13:10:35Z", "updated_at": "2020-06-19T23:39:07Z", "closed_at": "2020-03-21T17:28:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From the [manual](https://download.libsodium.org/doc/advanced/point-arithmetic)\r\n\r\n> This function directly exposes the inverse Elligator 2 map\r\n\r\nThe [original paper](https://elligator.cr.yp.to/elligator-20130828.pdf) however says otherwise:\r\n\r\n* representative to curve is the map.\r\n* curve to representative is the inverse map.\r\n\r\nIs this a typo, or is there a consensus about the paper being \"wrong\"?\r\n\r\n_(Edit: it wouldn't be the first time usage diverges from the original paper. Montgomery curve points for instance now tend to be called (u, v), while the original papers used (x, y).)_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/940", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/940/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/940/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/940/events", "html_url": "https://github.com/jedisct1/libsodium/issues/940", "id": 585181832, "node_id": "MDU6SXNzdWU1ODUxODE4MzI=", "number": 940, "title": "crypto_sign_ed25519_seed_keypair expect public key to be right after private key in memory", "user": {"login": "p-col-ledger", "id": 60649469, "node_id": "MDQ6VXNlcjYwNjQ5NDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/60649469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p-col-ledger", "html_url": "https://github.com/p-col-ledger", "followers_url": "https://api.github.com/users/p-col-ledger/followers", "following_url": "https://api.github.com/users/p-col-ledger/following{/other_user}", "gists_url": "https://api.github.com/users/p-col-ledger/gists{/gist_id}", "starred_url": "https://api.github.com/users/p-col-ledger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p-col-ledger/subscriptions", "organizations_url": "https://api.github.com/users/p-col-ledger/orgs", "repos_url": "https://api.github.com/users/p-col-ledger/repos", "events_url": "https://api.github.com/users/p-col-ledger/events{/privacy}", "received_events_url": "https://api.github.com/users/p-col-ledger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-20T16:20:18Z", "updated_at": "2020-06-19T23:39:06Z", "closed_at": "2020-03-21T12:22:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using the function `crypto_sign_ed25519_seed_keypair()` found here: https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_sign/ed25519/ref10/keypair.c\r\n\r\nThe end of the function ends with:\r\n`    \r\n     memmove(sk, seed, 32);\r\n     memmove(sk + 32, pk, 32);\r\n`\r\n\r\nThis  looks like an error as it expect `pk` to be right after `sk` in memory (which can produce an overflow when this is not the case).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/939", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/939/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/939/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/939/events", "html_url": "https://github.com/jedisct1/libsodium/issues/939", "id": 585081684, "node_id": "MDU6SXNzdWU1ODUwODE2ODQ=", "number": 939, "title": "Bigger keys, please.", "user": {"login": "AlastairGrowcott", "id": 24544337, "node_id": "MDQ6VXNlcjI0NTQ0MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/24544337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlastairGrowcott", "html_url": "https://github.com/AlastairGrowcott", "followers_url": "https://api.github.com/users/AlastairGrowcott/followers", "following_url": "https://api.github.com/users/AlastairGrowcott/following{/other_user}", "gists_url": "https://api.github.com/users/AlastairGrowcott/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlastairGrowcott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlastairGrowcott/subscriptions", "organizations_url": "https://api.github.com/users/AlastairGrowcott/orgs", "repos_url": "https://api.github.com/users/AlastairGrowcott/repos", "events_url": "https://api.github.com/users/AlastairGrowcott/events{/privacy}", "received_events_url": "https://api.github.com/users/AlastairGrowcott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-20T13:48:23Z", "updated_at": "2020-06-18T23:39:23Z", "closed_at": "2020-03-20T14:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far as I can tell the sodium_crypto_secretbox() APIs use a 256 bit key. The sodium_crypto_sign() API uses a 512 bit key. 2048 bit keys have been around for ages.\r\n\r\nIs there a reason that libsodium uses such small keys?\r\n\r\nOther crypto libraries allow you to choose your encryption algorithm and key size. Is there an API in libsodium that allows the same?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/938", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/938/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/938/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/938/events", "html_url": "https://github.com/jedisct1/libsodium/issues/938", "id": 585072189, "node_id": "MDU6SXNzdWU1ODUwNzIxODk=", "number": 938, "title": "Signed symmetric encryption.", "user": {"login": "AlastairGrowcott", "id": 24544337, "node_id": "MDQ6VXNlcjI0NTQ0MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/24544337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlastairGrowcott", "html_url": "https://github.com/AlastairGrowcott", "followers_url": "https://api.github.com/users/AlastairGrowcott/followers", "following_url": "https://api.github.com/users/AlastairGrowcott/following{/other_user}", "gists_url": "https://api.github.com/users/AlastairGrowcott/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlastairGrowcott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlastairGrowcott/subscriptions", "organizations_url": "https://api.github.com/users/AlastairGrowcott/orgs", "repos_url": "https://api.github.com/users/AlastairGrowcott/repos", "events_url": "https://api.github.com/users/AlastairGrowcott/events{/privacy}", "received_events_url": "https://api.github.com/users/AlastairGrowcott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-20T13:31:54Z", "updated_at": "2020-06-19T23:39:07Z", "closed_at": "2020-03-21T17:42:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, there.\r\n\r\nFirstly, apologies if this is the wrong place for this. I couldn't find anywhere else.\r\n\r\nI am not an expert on encryption, but I have an encryption use case that keeps cropping up and is never supported by any high level APIs in libraries. Maybe it has an intrinsic weakness I am unaware of.\r\n\r\nAlbert wants to send an encrypted message to a group. Because it is a group encrypting with a public key is not appropriate as the private key would need to be shared amongst all members of the group. It is also not appropriate to have multiple key pairs and encrypt the message multiple times. I am currently doing this with both libsodium and libgcrypt by having a keypair for signing and using symmetric encryption with a second secret key. I would prefer to do this by encrypting with the private of the keypair and having the group members keep the public key secret as it reduces the number of keys to manage.\r\n\r\nAs a real world example, I am currently working on a licensing mechanism. I want to generate information in XML format as to what the user has paid for (which plugins, which version(s), end date, etc.). I want to encrypt the XML. While I am not that worried about anyone finding out what the contents of the licence are I would prefer to keep it private. Lastly I want to sign it to ensure that no-one can generate their own licences. The licensing server will keep the private key and store it securely and safely (hopefully). The application, distributed to customers, will contain the public key. It will be embedded in a way that makes it difficult to find (hopefully), but obviously cannot be guaranteed secret. If anyone wants to find it badly enough, they will. That's fine. I'm just trying to protect against casual interest. If I use a separate symmetric key, that too will end up being stored in the application and so will be vulnerable in the same way.\r\n\r\n1) Is it even possible to encrypt with a private key so that only the public key can decrypt it and, by getting valid data, verify the source?\r\n2) Is it likely that this library might implement a simplified API to either encrypt with a symmetric key and sign with a private key, or to just encrypt with the private key? Plus the corresponding decrypt API of course?\r\n3) Is there an alternative I am unaware of that works better.\r\n\r\n\r\nAlso, it would be nice to have a version of crypto_secretbox_easy() that automatically stored the nonce in the output to save having to manually concatenate the encrypted data and the nonce. Even better, have the nonce automatically randomly generated and remove an input parameter. You could use the same API and detect a null pointer for the nonce to determine to automatically generate and include the nonce in the output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/937", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/937/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/937/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/937/events", "html_url": "https://github.com/jedisct1/libsodium/issues/937", "id": 580805516, "node_id": "MDU6SXNzdWU1ODA4MDU1MTY=", "number": 937, "title": "Scrypt: array index out of bounds", "user": {"login": "LoupVaillant", "id": 27145845, "node_id": "MDQ6VXNlcjI3MTQ1ODQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/27145845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoupVaillant", "html_url": "https://github.com/LoupVaillant", "followers_url": "https://api.github.com/users/LoupVaillant/followers", "following_url": "https://api.github.com/users/LoupVaillant/following{/other_user}", "gists_url": "https://api.github.com/users/LoupVaillant/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoupVaillant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoupVaillant/subscriptions", "organizations_url": "https://api.github.com/users/LoupVaillant/orgs", "repos_url": "https://api.github.com/users/LoupVaillant/repos", "events_url": "https://api.github.com/users/LoupVaillant/events{/privacy}", "received_events_url": "https://api.github.com/users/LoupVaillant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-13T19:48:04Z", "updated_at": "2020-06-11T23:39:38Z", "closed_at": "2020-03-13T22:21:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### How to reproduce\r\n\r\n    $ git clean -fx\r\n    $ ./autogen.sh\r\n    $ ./configure --disable-asm CC=clang CFLAGS=\"-fsanitize=undefined\"\r\n    $ make && make check\r\n    $ cat test/default/pwhash_scrypt.log\r\n\r\n### Result\r\n\r\n    ==11894==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    [More details about the problem]\r\n\r\n### Cause\r\n\r\nThis line [here](https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c#L86). And [that one](https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c#L104).\r\n\r\nThe problem here (that we can expose by running a sanitiser or the TIS\u00a0interpreter with the relevant code), is an index out of bound: we are looking past the 8 elements of the array.\r\n\r\nThis overflow appears to be by design. We are looking from a structure, that only contains an array of 8 64-bit integers (or 16 32-bit integers on 32-bit platforms). As far as I\u00a0can tell, we have a whole array of those structures. So in practice, reading & writing past this small array just means we are reading & writing to nearby structures instead, and it all works as intended.\r\n\r\nIt is nevertheless undefined, in a way that Clang and GCC can actually notice. In some simplified cases it even summons the Nasal Demons:\r\n\r\n    // overflow.c\r\n    #include <stdio.h>\r\n    #include <inttypes.h>\r\n\r\n    typedef struct {\r\n        uint64_t a[8];\r\n    } blk;\r\n\r\n    int main()\r\n    {\r\n        blk b[2];\r\n        for (size_t i = 0; i < 16; i++) {\r\n            b[0].a[i] = i;\r\n        }\r\n        printf(\"normal  : %\" PRIu64 \"\\n\", b[1].a[ 2]);\r\n        printf(\"overflow: %\" PRIu64 \"\\n\", b[0].a[10]);\r\n\r\n        return 0;\r\n    }\r\n\r\nDifferent compilers behave differently. Here I'm using GCC 7.5.0 on Ubuntu.\r\n\r\n    $ gcc -Wall -Wextra -O0 overflow.c \r\n    overflow.c: In function \u2018main\u2019:\r\n    overflow.c:14:5: warning: \u2018b[1].a[2]\u2019 is used uninitialized in this function [-Wuninitialized]\r\n         printf(\"normal  : %\" PRIu64 \"\\n\", b[1].a[ 2]);\r\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nNote that the compiler failed to notice that I *have* initialised `b[1].a[2]`, through the overflow above. Indeed, when I\u00a0execute the program:\r\n\r\n    $ ./a.out \r\n    normal  : 10\r\n    overflow: 10\r\n\r\nNow with optimisations on:\r\n\r\n    $ gcc -Wall -Wextra -O3 overflow.c \r\n    overflow.c: In function \u2018main\u2019:\r\n    overflow.c:14:5: warning: \u2018b[1].a[2]\u2019 is used uninitialized in this function [-Wuninitialized]\r\n         printf(\"normal  : %\" PRIu64 \"\\n\", b[1].a[ 2]);\r\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    overflow.c:12:19: warning: iteration 8 invokes undefined behavior [-Waggressive-loop-optimizations]\r\n             b[0].a[i] = i;\r\n             ~~~~~~~~~~^~~\r\n    overflow.c:11:5: note: within this loop\r\n         for (size_t i = 0; i < 16; i++) {\r\n         ^~~\r\n    $ ./a.out \r\n    normal  : 0\r\n    overflow: 0\r\n\r\nNow GCC clearly notices the undefined behaviour in the loop, and optimisation causes it to output the wrong result.\r\n\r\nNote that we can get GCC to behave by writing a more complex program, with more complex memory access patterns.\r\n\r\n### Suggested fixes\r\n\r\n- Have `blkcpy()` and `blkxor()` call  `blkcpy_64()` and `blkxor_64()` instead of trying to be clever. As far as I could tell, we only read and write whole blocks (groups of two blocks even), so we don't need to handle leftover bytes. Alternatively, remove `blkcpy()` and `blkxor()` altogether, and replace their call sites by loops that call `blkcpy_64()` and `blkxor_64()` instead.\r\n\r\n- Reinstate the \"skipped\" test. With the fix, there's a good chance it works, and it could serve as a good sentinel.\r\n\r\n- Investigate the 28 other skipped tests. The one with Argon2 in particular may have the same problem (since Argon2 works with blocks similar to Scrypt's).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/934", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/934/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/934/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/934/events", "html_url": "https://github.com/jedisct1/libsodium/issues/934", "id": 578649440, "node_id": "MDU6SXNzdWU1Nzg2NDk0NDA=", "number": 934, "title": "Pointer comparison(s)", "user": {"login": "tankf33der", "id": 45243121, "node_id": "MDQ6VXNlcjQ1MjQzMTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45243121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tankf33der", "html_url": "https://github.com/tankf33der", "followers_url": "https://api.github.com/users/tankf33der/followers", "following_url": "https://api.github.com/users/tankf33der/following{/other_user}", "gists_url": "https://api.github.com/users/tankf33der/gists{/gist_id}", "starred_url": "https://api.github.com/users/tankf33der/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tankf33der/subscriptions", "organizations_url": "https://api.github.com/users/tankf33der/orgs", "repos_url": "https://api.github.com/users/tankf33der/repos", "events_url": "https://api.github.com/users/tankf33der/events{/privacy}", "received_events_url": "https://api.github.com/users/tankf33der/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-10T15:06:48Z", "updated_at": "2020-06-08T23:38:07Z", "closed_at": "2020-03-10T15:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I did research and learned how to split sources of library to be able run single test(s) under full control. This is not last issue about this \"audit\". TIS-interpreter and compcert found issue [here](https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c#L34) when running [this](https://github.com/jedisct1/libsodium/blob/master/test/default/xchacha20.c#L424) function from xchacha20.c file.\r\n\r\nTIS:\r\n```\r\nxchacha20/secretbox_xchacha20poly1305.c:34:[kernel] warning: pointer comparison: assert \\pointer_comparable((void *)c, (void *)m);\r\n                  stack: crypto_secretbox_xchacha20poly1305_detached :: xchacha20/secretbox_xchacha20poly1305.c:85 <-\r\n                         crypto_secretbox_xchacha20poly1305_easy :: xchacha20/test_xchacha20.c:256 <-\r\n                         tv_secretbox_xchacha20poly1305 :: xchacha20/test_xchacha20.c:441 <-\r\n                         main\r\n[value] Stopping at nth alarm\r\n[value] user error: Degeneration occurred:\r\n                    results are not correct for lines of code that can be reached from the degeneration point.\r\n```\r\n\r\ncompcert:\r\n```\r\nStuck state: in function crypto_secretbox_xchacha20poly1305_detached, expression\r\n  <ptr> > <ptr> && (unsigned long long) c - (unsigned long long) m < mlen\r\n    || (unsigned long long) m > (unsigned long long) c\r\n         && (unsigned long long) m - (unsigned long long) c < mlen\r\nStuck subexpression:\r\n  <ptr> > <ptr> && (unsigned long long) c - (unsigned long long) m < mlen\r\n    || (unsigned long long) m > (unsigned long long) c\r\n         && (unsigned long long) m - (unsigned long long) c < mlen\r\nERROR: Undefined behavior\r\n```\r\n\r\ncodebase where this trick used:\r\n```\r\n./src/libsodium/crypto_secretbox/crypto_secretbox_easy.c\r\n\tcrypto_secretbox_detached()\r\n\tcrypto_secretbox_open_detached()\r\n\r\n./src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c\r\n\tcrypto_secretbox_xchacha20poly1305_detached()\r\n\tcrypto_secretbox_xchacha20poly1305_open_detached()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/933", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/933/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/933/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/933/events", "html_url": "https://github.com/jedisct1/libsodium/issues/933", "id": 578074416, "node_id": "MDU6SXNzdWU1NzgwNzQ0MTY=", "number": 933, "title": "Libsodium blocks indefinitely in environments with low entropy (f.e. newly spinned up VMs/containers)", "user": {"login": "Ocramius", "id": 154256, "node_id": "MDQ6VXNlcjE1NDI1Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/154256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ocramius", "html_url": "https://github.com/Ocramius", "followers_url": "https://api.github.com/users/Ocramius/followers", "following_url": "https://api.github.com/users/Ocramius/following{/other_user}", "gists_url": "https://api.github.com/users/Ocramius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ocramius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ocramius/subscriptions", "organizations_url": "https://api.github.com/users/Ocramius/orgs", "repos_url": "https://api.github.com/users/Ocramius/repos", "events_url": "https://api.github.com/users/Ocramius/events{/privacy}", "received_events_url": "https://api.github.com/users/Ocramius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-09T17:34:06Z", "updated_at": "2020-06-07T23:38:00Z", "closed_at": "2020-03-09T17:38:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to https://github.com/jedisct1/libsodium/issues/49, `/dev/random` is a problematic source of random bytes for downstream consumers, because the system in which libsodium operates may not have accumulated enough entropy, or may be consuming it faster than it becomes available.\r\n\r\nAs it currently is implemented (if I read it correctly, I couldn't pinpoint my userland issue precisely, sorry) `randombytes_internal_random_random_dev_open` uses a blocking poll, and can lead to processes hanging while waiting for libsodium:\r\n\r\nhttps://github.com/jedisct1/libsodium/blob/4f5e89fa84ce1d178a6765b8b46f2b6f91216677/src/libsodium/randombytes/internal/randombytes_internal_random.c#L249-L274\r\n\r\nIf I misread this, or if this is controlled by a build-time flag, then I'll see if I can fix it downstream instead.\r\n\r\nGiven that #49 is now almost 7 years old, I suggest re-evaluating it, since the crypto community pretty much goes into the [\"just use `/dev/urandom`\" camp](http://research.jvroig.com/linuxrand/DevsJustUSeUrandPlease_Templated_2018-05-19.pdf) these days (seems like library authors also agree in https://github.com/jedisct1/libsodium/issues/280#issuecomment-120950496)\r\n\r\nPossibly related, btw: Linux 5.3 may fix this too (https://lwn.net/Articles/802360/)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/932", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/932/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/932/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/932/events", "html_url": "https://github.com/jedisct1/libsodium/issues/932", "id": 576363171, "node_id": "MDU6SXNzdWU1NzYzNjMxNzE=", "number": 932, "title": "How to benchmark WebAssembly runtime?", "user": {"login": "ifyouseewendy", "id": 1019171, "node_id": "MDQ6VXNlcjEwMTkxNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1019171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifyouseewendy", "html_url": "https://github.com/ifyouseewendy", "followers_url": "https://api.github.com/users/ifyouseewendy/followers", "following_url": "https://api.github.com/users/ifyouseewendy/following{/other_user}", "gists_url": "https://api.github.com/users/ifyouseewendy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifyouseewendy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifyouseewendy/subscriptions", "organizations_url": "https://api.github.com/users/ifyouseewendy/orgs", "repos_url": "https://api.github.com/users/ifyouseewendy/repos", "events_url": "https://api.github.com/users/ifyouseewendy/events{/privacy}", "received_events_url": "https://api.github.com/users/ifyouseewendy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-05T16:06:10Z", "updated_at": "2020-06-11T23:39:39Z", "closed_at": "2020-03-13T23:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc4b Hello, I'm in the research of benchmarking the various WebAssembly runtimes. The most useful information I can get is the blog post on [Updated WebAssembly benchmark using libsodium](https://00f.net/2019/10/22/updated-webassembly-benchmark/). That's super helpful and awesome. Thanks a lot for making it!\r\n\r\nIt's been a while since the last update. I'm thinking about running it again with the up to date runtimes. By poking around in the code base, I get to the point that I can get test results for individual runtime. I'm wondering \r\n\r\n* if there is a flag I can turn on to quickly generate the native benchmark\r\n* if there is a way to gather test results from each `*.log` and generate a holistic report\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/931", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/931/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/931/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/931/events", "html_url": "https://github.com/jedisct1/libsodium/issues/931", "id": 570764509, "node_id": "MDU6SXNzdWU1NzA3NjQ1MDk=", "number": 931, "title": "All function pointers misaligned by 1byte when compiled for ARM Cortex M0+", "user": {"login": "dyntaos", "id": 33854763, "node_id": "MDQ6VXNlcjMzODU0NzYz", "avatar_url": "https://avatars3.githubusercontent.com/u/33854763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyntaos", "html_url": "https://github.com/dyntaos", "followers_url": "https://api.github.com/users/dyntaos/followers", "following_url": "https://api.github.com/users/dyntaos/following{/other_user}", "gists_url": "https://api.github.com/users/dyntaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyntaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyntaos/subscriptions", "organizations_url": "https://api.github.com/users/dyntaos/orgs", "repos_url": "https://api.github.com/users/dyntaos/repos", "events_url": "https://api.github.com/users/dyntaos/events{/privacy}", "received_events_url": "https://api.github.com/users/dyntaos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-25T18:56:14Z", "updated_at": "2020-05-25T23:37:56Z", "closed_at": "2020-02-25T19:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to get the library working for an ARM Cortex M0+ (ATSAMD21G18).\r\nI have compiled using this shell script:\r\n\r\n```#!/bin/sh -x\r\ncd ../libsodium\r\nSODIUMDIR=`pwd`\r\nexport PATH=$HOME/.arduino15/packages/arduino/tools/arm-none-eabi-gcc/7-2017q4/bin:$PATH\r\nexport LDFLAGS='--specs=nosys.specs'\r\nexport CFLAGS='-Os -mcpu=cortex-m0plus'\r\n./configure --host=arm-none-eabi --prefix=\"${SODIUMDIR}/build-cortex-m0\" && make install\r\n\r\nif [ $? -eq 0 ]\r\nthen\r\n\techo libsodium was successfully compiled for ARM Cortex M0 in: ../libsodium/build-cortex-m0/lib/libsodium.a\r\nelse\r\n\techo Error compiling libsodium for ARM Cortex M0!\r\nfi\r\n```\r\nI have defined/provided a custom RNG struct and confirmed it works.\r\nThis compilation succeeds, but resulted in the device hanging. When I examined the resulting ELF file in Ghidra, all function pointers (such as the \"implementation->function_pointer\" constructs).\r\nEvery function pointer within the library is misaligned by 1 byte.\r\nAn example of this:\r\nhttps://github.com/jedisct1/libsodium/blob/afae623190f025e7cf2fb0222bfe796b69a36941/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c#L28\r\n`blake2b_compress` ends up with the value 0x00016D65, when `blake2b_compress_ref()` begins at 0x00016d64.\r\n\r\nWhen I remove the function pointers and just hardcode the functions, everything works as expected.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/930", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/930/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/930/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/930/events", "html_url": "https://github.com/jedisct1/libsodium/issues/930", "id": 563510914, "node_id": "MDU6SXNzdWU1NjM1MTA5MTQ=", "number": 930, "title": "basic scalar operations", "user": {"login": "diamondduck", "id": 29684591, "node_id": "MDQ6VXNlcjI5Njg0NTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/29684591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diamondduck", "html_url": "https://github.com/diamondduck", "followers_url": "https://api.github.com/users/diamondduck/followers", "following_url": "https://api.github.com/users/diamondduck/following{/other_user}", "gists_url": "https://api.github.com/users/diamondduck/gists{/gist_id}", "starred_url": "https://api.github.com/users/diamondduck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diamondduck/subscriptions", "organizations_url": "https://api.github.com/users/diamondduck/orgs", "repos_url": "https://api.github.com/users/diamondduck/repos", "events_url": "https://api.github.com/users/diamondduck/events{/privacy}", "received_events_url": "https://api.github.com/users/diamondduck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-11T22:05:02Z", "updated_at": "2020-05-13T23:38:12Z", "closed_at": "2020-02-13T21:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to implement a simple cryptographic primitive in C++.\r\n\r\nUnder the following code: given sa, sk, hn, I want to compute sb: such that sg*G = (sb + sk . hn)*G.\r\n\r\nHowever, after finding sb, the following equality does not hold: sb*G + (sk.hn)G = saG.\r\n\r\nMy understanding is that in the exponent is arithmetic modulo 2^255-19 instead of L.\r\n\r\nHowever, I have a few questions relating to the implementation:\r\n\r\n1. why the scalar has to be chosen from [0,L] where L is the order of the subgroup?\r\n\r\n2. is there a \"helper\" function that multiplies two large scalars without performing modulo L?\r\n\r\nI posted my question in StackOverflow along with a simple code. \r\n\r\nhttps://stackoverflow.com/questions/60156577/basic-group-arithmetic-in-libsodium\r\n\r\ncan someone help me with this simple calculation?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/929", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/929/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/929/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/929/events", "html_url": "https://github.com/jedisct1/libsodium/issues/929", "id": 562003325, "node_id": "MDU6SXNzdWU1NjIwMDMzMjU=", "number": 929, "title": "[linux-ppc64le] CMake failed to find libsodium", "user": {"login": "runlevel5", "id": 135605, "node_id": "MDQ6VXNlcjEzNTYwNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/135605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/runlevel5", "html_url": "https://github.com/runlevel5", "followers_url": "https://api.github.com/users/runlevel5/followers", "following_url": "https://api.github.com/users/runlevel5/following{/other_user}", "gists_url": "https://api.github.com/users/runlevel5/gists{/gist_id}", "starred_url": "https://api.github.com/users/runlevel5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/runlevel5/subscriptions", "organizations_url": "https://api.github.com/users/runlevel5/orgs", "repos_url": "https://api.github.com/users/runlevel5/repos", "events_url": "https://api.github.com/users/runlevel5/events{/privacy}", "received_events_url": "https://api.github.com/users/runlevel5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-08T10:53:31Z", "updated_at": "2020-05-08T23:38:04Z", "closed_at": "2020-02-08T11:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe**\r\n\r\nThe [devilutionX](https://github.com/diasurgical/devilutionX) project uses the [Findsodium.cmake](https://github.com/jedisct1/libsodium/blob/master/contrib/Findsodium.cmake ).\r\n\r\nThe CMake failed to detect libsodium on my Linux PPC64le box:\r\n\r\n```\r\n$ uname -a\r\nLinux orion.dev 5.5.0+ #1 SMP Mon Feb 3 08:17:51 EST 2020 ppc64le ppc64le ppc64le GNU/Linux\r\n\r\n$ cat /etc/redhat-release\r\nFedora release 31 (Thirty One)\r\n\r\n$ dnf info libsodium-devel\r\nName         : libsodium-devel\r\nVersion      : 1.0.18\r\nRelease      : 2.fc31\r\nArchitecture : ppc64le\r\nSize         : 3.6 M\r\nSource       : libsodium-1.0.18-2.fc31.src.rpm\r\nRepository   : @System\r\nFrom repo    : fedora\r\nSummary      : Development files for libsodium\r\nURL          : http://libsodium.org/\r\nLicense      : ISC\r\nDescription  : This package contains libraries and header files for\r\n             : developing applications that use libsodium libraries.\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behaviour:\r\n\r\n```\r\n$ git clone https://github.com/diasurgical/devilutionX.git\r\n$ cd devilutionX/build\r\n$ cmake ..\r\n-- The C compiler identification is GNU 9.2.1\r\n-- The CXX compiler identification is GNU 9.2.1\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE\r\nCMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:146 (message):\r\n  Could NOT find sodium (missing: sodium_LIBRARY_RELEASE\r\n  sodium_LIBRARY_DEBUG) (found version \"1.0.18\")\r\nCall Stack (most recent call first):\r\n  /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE)\r\n  CMake/Findsodium.cmake:224 (find_package_handle_standard_args)\r\n  CMakeLists.txt:126 (find_package)\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/home/tle/src/devilutionX/build/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/home/tle/src/devilutionX/build/CMakeFiles/CMakeError.log\".\r\n```\r\n\r\nFor your investigation, the full [CMakeError|Output.log](https://gist.github.com/runlevel5/1a0d7b415adad6429478608d2245be97)\r\n\r\n\r\n**Expected behaviour**\r\n\r\nthe libsoidum is picked up correctly and the build files would be written successfully\r\n\r\n```\r\n$ cmake ..\r\n-- Found Sodium: /usr/lib64/libsodium.so\r\n-- Found SDL2_ttf: /usr/lib64/libSDL2_ttf.so\r\n-- Found SDL2: /usr/lib64/libSDL2.so\r\n-- Found SDL2_mixer: /usr/lib64/libSDL2_mixer.so\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/tle/src/devilutionX/build\r\n```\r\n\r\n**Additional context**\r\n\r\nThe [facebookincubator/fizz's FindSodium.cmake](https://github.com/facebookincubator/fizz/blob/master/fizz/cmake/FindSodium.cmake) works for me. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/928", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/928/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/928/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/928/events", "html_url": "https://github.com/jedisct1/libsodium/issues/928", "id": 561197859, "node_id": "MDU6SXNzdWU1NjExOTc4NTk=", "number": 928, "title": "Needing crypto_core_ristretto255_{from,to}bytes()", "user": {"login": "fhajji", "id": 24593883, "node_id": "MDQ6VXNlcjI0NTkzODgz", "avatar_url": "https://avatars3.githubusercontent.com/u/24593883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhajji", "html_url": "https://github.com/fhajji", "followers_url": "https://api.github.com/users/fhajji/followers", "following_url": "https://api.github.com/users/fhajji/following{/other_user}", "gists_url": "https://api.github.com/users/fhajji/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhajji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhajji/subscriptions", "organizations_url": "https://api.github.com/users/fhajji/orgs", "repos_url": "https://api.github.com/users/fhajji/repos", "events_url": "https://api.github.com/users/fhajji/events{/privacy}", "received_events_url": "https://api.github.com/users/fhajji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T18:41:33Z", "updated_at": "2020-05-06T23:38:08Z", "closed_at": "2020-02-06T20:02:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an application that requires mapping short (32 bytes, I don't care about the sign bit) messages onto Points of the Ristretto group, perform a lot of calculations on that group, and then map the resulting Points back to messages.\r\n\r\nThe code would basically go like this:\r\n```c\r\nvoid message_to_point(unsigned char *point, const unsigned char *message) {\r\n  ge25519_p3 h;\r\n  int rc = ristretto255_frombytes(&h, message);\r\n  ge25519_p3_tobytes(point, &h);\r\n}\r\n```\r\nand\r\n```c\r\nvoid point_to_message(unsigned char *message, const unsigned char *point) {\r\n  ge25519_p3 h;\r\n  int rc = ge25519_frombytes(&h, point);\r\n  ristretto255_p3_tobytes(message, &h);\r\n}\r\n```\r\nUnfortunately, nothing of this is user-accessible. Currently, I need to manually add src/sodium/crypto_core/ed25519/ref10/ed25519_ref10.c and associated files to my project, which is very inconvenient.\r\n\r\nOh, and before someone asks why I don't use ristretto255_elligator() or ristretto255_from_hash(): the latter is not invertible, and the former is not applicable, because I do perform calculations on the resulting Points, which may result in Ristretto Points that have no pre-images under Elligator. Furthermore, since the messages are not uniformly distributed, Elligator would be pointless anyway. Furthermore, the messages are never send in plain text over the wire.\r\n\r\nSo, to sum up: it would be really great to have something like crypto_core_ristretto255_frombytes() and crypto_core_ristretto255_tobytes(). Of course, with the corresponding caveats in the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/927", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/927/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/927/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/927/events", "html_url": "https://github.com/jedisct1/libsodium/issues/927", "id": 560661961, "node_id": "MDU6SXNzdWU1NjA2NjE5NjE=", "number": 927, "title": "Performance of crypto_scalarmult_curve25519 and crypto_scalarmult_curve25519_base", "user": {"login": "xipki", "id": 7100848, "node_id": "MDQ6VXNlcjcxMDA4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7100848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xipki", "html_url": "https://github.com/xipki", "followers_url": "https://api.github.com/users/xipki/followers", "following_url": "https://api.github.com/users/xipki/following{/other_user}", "gists_url": "https://api.github.com/users/xipki/gists{/gist_id}", "starred_url": "https://api.github.com/users/xipki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xipki/subscriptions", "organizations_url": "https://api.github.com/users/xipki/orgs", "repos_url": "https://api.github.com/users/xipki/repos", "events_url": "https://api.github.com/users/xipki/events{/privacy}", "received_events_url": "https://api.github.com/users/xipki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-05T22:16:46Z", "updated_at": "2020-05-05T23:38:03Z", "closed_at": "2020-02-05T22:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tested both functions in three different PCs with Ubuntu as OS (one laptop, one desktop PC, and one server). In all cases, the behavour is similar. Here is data of the desktop PC.\r\n\r\n- If the `sodium_init()` is called first, **40,000** `crypto_scalarmult_curve25519_base`, but only **14,000** `crypto_scalarmult_curve25519` will be executed in 1 second.\r\n- Otherwise, only **23,000** `crypto_scalarmult_curve25519_base`, but **22,000** `crypto_scalarmult_curve25519` will be executed in 1 second. The computation result is correct even without calling `sodium_init()` before.\r\n\r\nCould you please optimize the code to achieve best performance for both functions after calling sodium_init()?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/926", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/926/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/926/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/926/events", "html_url": "https://github.com/jedisct1/libsodium/issues/926", "id": 560497686, "node_id": "MDU6SXNzdWU1NjA0OTc2ODY=", "number": 926, "title": "on your realse page,the download url is changed,differ then before", "user": {"login": "youxiaojie", "id": 13609561, "node_id": "MDQ6VXNlcjEzNjA5NTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/13609561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youxiaojie", "html_url": "https://github.com/youxiaojie", "followers_url": "https://api.github.com/users/youxiaojie/followers", "following_url": "https://api.github.com/users/youxiaojie/following{/other_user}", "gists_url": "https://api.github.com/users/youxiaojie/gists{/gist_id}", "starred_url": "https://api.github.com/users/youxiaojie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youxiaojie/subscriptions", "organizations_url": "https://api.github.com/users/youxiaojie/orgs", "repos_url": "https://api.github.com/users/youxiaojie/repos", "events_url": "https://api.github.com/users/youxiaojie/events{/privacy}", "received_events_url": "https://api.github.com/users/youxiaojie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-05T16:47:35Z", "updated_at": "2020-05-05T23:38:03Z", "closed_at": "2020-02-05T17:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "dear sir,\r\nas a openwrt developer,I found your download url is changed from\r\nhttps://github.com/jedisct1/libsodium/releases/download/1.0.17/libsodium-1.0.17.tar.gz\r\nto\r\nhttps://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz\r\nafter the version number you add \"-RELEASE\", so, if it is temporary, could you mind changing to original naming format? or if later you will naming by this method, I would make a pull request to openwrt.thanks!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/925", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/925/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/925/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/925/events", "html_url": "https://github.com/jedisct1/libsodium/issues/925", "id": 558493196, "node_id": "MDU6SXNzdWU1NTg0OTMxOTY=", "number": 925, "title": "[FEATURE] Incorporate Ulam's Spiral for faster generation of primes", "user": {"login": "prabhatsoni99", "id": 43891076, "node_id": "MDQ6VXNlcjQzODkxMDc2", "avatar_url": "https://avatars3.githubusercontent.com/u/43891076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhatsoni99", "html_url": "https://github.com/prabhatsoni99", "followers_url": "https://api.github.com/users/prabhatsoni99/followers", "following_url": "https://api.github.com/users/prabhatsoni99/following{/other_user}", "gists_url": "https://api.github.com/users/prabhatsoni99/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhatsoni99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhatsoni99/subscriptions", "organizations_url": "https://api.github.com/users/prabhatsoni99/orgs", "repos_url": "https://api.github.com/users/prabhatsoni99/repos", "events_url": "https://api.github.com/users/prabhatsoni99/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhatsoni99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-01T06:12:57Z", "updated_at": "2020-05-01T23:38:14Z", "closed_at": "2020-02-01T08:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ulam's spiral is a pattern in mathematics. We know of a particular equation whose `y` value has approx 20X more chance of being a prime number (a high density distribution of numbers):  \r\n`y = x^2 + x + 3399714628553118047`  \r\n  \r\nWhat are the thoughts on incorporating this to generate primes faster?\r\n  \r\nResources for Ulam's Spiral:  \r\nhttps://en.wikipedia.org/wiki/Ulam_spiral  \r\nhttps://www.youtube.com/watch?v=iFuR97YcSLM  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/924", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/924/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/924/events", "html_url": "https://github.com/jedisct1/libsodium/issues/924", "id": 558475865, "node_id": "MDU6SXNzdWU1NTg0NzU4NjU=", "number": 924, "title": "Elligator inverse map", "user": {"login": "nitrieu", "id": 16380791, "node_id": "MDQ6VXNlcjE2MzgwNzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/16380791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrieu", "html_url": "https://github.com/nitrieu", "followers_url": "https://api.github.com/users/nitrieu/followers", "following_url": "https://api.github.com/users/nitrieu/following{/other_user}", "gists_url": "https://api.github.com/users/nitrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrieu/subscriptions", "organizations_url": "https://api.github.com/users/nitrieu/orgs", "repos_url": "https://api.github.com/users/nitrieu/repos", "events_url": "https://api.github.com/users/nitrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-01T04:13:02Z", "updated_at": "2020-05-01T23:38:14Z", "closed_at": "2020-02-01T12:36:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nFrom what I understand, your code supports [the map in the forward direction](https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_core/ed25519/ref10/ed25519_ref10.c#L2799) (e.g. takes a random field element  and produces a group element). Do you have a code for backward direction, which represents the group element as a field element like [this](https://github.com/Yawning/libelligator/blob/master/src/elligator/elligator.h#L26)?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/921", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/921/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/921/events", "html_url": "https://github.com/jedisct1/libsodium/issues/921", "id": 555970610, "node_id": "MDU6SXNzdWU1NTU5NzA2MTA=", "number": 921, "title": "How to use a data structure that defined in sodium/private?", "user": {"login": "nitrieu", "id": 16380791, "node_id": "MDQ6VXNlcjE2MzgwNzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/16380791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrieu", "html_url": "https://github.com/nitrieu", "followers_url": "https://api.github.com/users/nitrieu/followers", "following_url": "https://api.github.com/users/nitrieu/following{/other_user}", "gists_url": "https://api.github.com/users/nitrieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrieu/subscriptions", "organizations_url": "https://api.github.com/users/nitrieu/orgs", "repos_url": "https://api.github.com/users/nitrieu/repos", "events_url": "https://api.github.com/users/nitrieu/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T04:10:11Z", "updated_at": "2020-04-27T23:38:09Z", "closed_at": "2020-01-28T08:09:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI want to write a function which uses `fe25519` and its related functions. I see that  `fe25519` is defined in `[private/ed25519_ref10.h](https://github.com/jedisct1/libsodium/blob/master/src/libsodium/include/sodium/private/ed25519_ref10.h#L15)`\r\n\r\n- I tried to add `ed25519_ref10.h` to [sodium.h](https://github.com/jedisct1/libsodium/blob/master/src/libsodium/include/sodium.h), and then  include this header in my visual studio project, but it doesn't work. The error is \r\n\r\n> Cannot open include file: 'private/common.h': No such file or directory\r\n\r\nTrying adding all headers of private folder to sodium.h doesn't help. I guess that I can't call anything from private folder.\r\n\r\n- I tried another way to do it by writing my function inside libsodium. By doing so, I can call `fe25519`, however, I get a problem with statically link:\r\n\r\n> LNK2019\tunresolved external symbol **link_test_test** referenced in function \r\n\r\nNote that I can statically link libsodium to my project if I don't change anything inside libsodium \r\n\r\n![image](https://user-images.githubusercontent.com/16380791/73234890-eee63c80-4140-11ea-9afd-b37412eec4a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16380791/73234904-002f4900-4141-11ea-9580-c366c155dd49.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/920", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/920/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/920/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/920/events", "html_url": "https://github.com/jedisct1/libsodium/issues/920", "id": 555048882, "node_id": "MDU6SXNzdWU1NTUwNDg4ODI=", "number": 920, "title": "Secret Seed Normalization", "user": {"login": "skaht", "id": 6238506, "node_id": "MDQ6VXNlcjYyMzg1MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6238506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaht", "html_url": "https://github.com/skaht", "followers_url": "https://api.github.com/users/skaht/followers", "following_url": "https://api.github.com/users/skaht/following{/other_user}", "gists_url": "https://api.github.com/users/skaht/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaht/subscriptions", "organizations_url": "https://api.github.com/users/skaht/orgs", "repos_url": "https://api.github.com/users/skaht/repos", "events_url": "https://api.github.com/users/skaht/events{/privacy}", "received_events_url": "https://api.github.com/users/skaht/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25457322, "node_id": "MDU6TGFiZWwyNTQ1NzMyMg==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T06:13:29Z", "updated_at": "2020-04-24T23:37:26Z", "closed_at": "2020-01-25T10:35:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Concerns crypto_core_ed25519_scalar_reduce() functionality when contrasted to results from Monero's sc_reduce32() and manually using the multiprecision basic calculator (bc) that yields matching results that differ from crypto_core_ed25519_scalar_reduce().\r\n\r\nTest vector:\r\n\r\nseed = 26c76712d89d906e6672dafa614c42e5cb1caac8c6568e4d2493087db51f0d36.\r\n\r\n**Using Monero**:\r\n% echo 26c76712d89d906e6672dafa614c42e5cb1caac8c6568e4d2493087db51f0d36 | sc_reduce32\r\n`5f4b86fb88745966e39bf311c65ea5a6cb1caac8c6568e4d2493087db51f0d06`\r\n\r\nor try using https://xmr.llcoins.net/addresstests.html and insert the seed above into \"field 2\" and click \"Gen 3. & 4.\" \r\n\r\n**Using bc**:\r\n\r\n1% echo -n 26c76712d89d906e6672dafa614c42e5cb1caac8c6568e4d2493087db51f0d36 | tr \"[a-f]\" \"[A-F]\" | rev | dd conv=swab\r\n360D1FB57D0893244D8E56C6C8AA1CCBE5424C61FADA72666E909DD81267C726\r\n\r\n2% echo \"obase=16; ibase=16; 360D1FB57D0893244D8E56C6C8AA1CCBE5424C61FADA72666E909DD81267C726 % 1000000000000000000000000000000014DEF9DEA2F79CD65812631A5CF5D3ED\" | bc\r\n`60D1FB57D0893244D8E56C6C8AA1CCBA6A55EC611F39BE366597488FB864B5F`\r\n\r\n3% echo -n 60D1FB57D0893244D8E56C6C8AA1CCBA6A55EC611F39BE366597488FB864B5F | wc -c\r\n      `63`     Need to add a leading 0 below\r\n\r\n4% echo -n 060D1FB57D0893244D8E56C6C8AA1CCBA6A55EC611F39BE366597488FB864B5F | rev | dd conv=swab\r\n`5F4B86FB88745966E39BF311C65EA5A6CB1CAAC8C6568E4D2493087DB51F0D06`  matches Monero's result    \r\n\r\n**Results from libsodium crypto_core_ed25519_scalar_reduce()**\r\n\r\nb479ccb1e980ae9c940f09afef6153e117b2fe1a70a6acf690b789fea7f3d60f != 5F4B86FB88745966E39BF311C65EA5A6CB1CAAC8C6568E4D2493087DB51F0D06\r\n\r\nresults from libsodium crypto_core_ed25519_scalar_reduce() are a form of a normalization (checked 31 other test vectors), but does not appear to be from a modulo base10( 1000000000000000000000000000000014DEF9DEA2F79CD65812631A5CF5D3ED) == 2^252 + 27742317777372353535851937790883648493, the order of either ed25519 or curve25519.\r\n\r\nIs interesting to note that code from https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_core/ed25519/ref10/ed25519_ref10.c#L2451 and https://github.com/monero-project/monero/blob/master/src/crypto/crypto-ops.c#L1666 appear to share remarkable lineage but there are differences.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/919", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/919/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/919/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/919/events", "html_url": "https://github.com/jedisct1/libsodium/issues/919", "id": 554306005, "node_id": "MDU6SXNzdWU1NTQzMDYwMDU=", "number": 919, "title": "crypto_core_ristretto255_scalar_reduce WEIRD BEHAVIOR", "user": {"login": "ToraNova", "id": 26948113, "node_id": "MDQ6VXNlcjI2OTQ4MTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/26948113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ToraNova", "html_url": "https://github.com/ToraNova", "followers_url": "https://api.github.com/users/ToraNova/followers", "following_url": "https://api.github.com/users/ToraNova/following{/other_user}", "gists_url": "https://api.github.com/users/ToraNova/gists{/gist_id}", "starred_url": "https://api.github.com/users/ToraNova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ToraNova/subscriptions", "organizations_url": "https://api.github.com/users/ToraNova/orgs", "repos_url": "https://api.github.com/users/ToraNova/repos", "events_url": "https://api.github.com/users/ToraNova/events{/privacy}", "received_events_url": "https://api.github.com/users/ToraNova/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-23T17:41:28Z", "updated_at": "2020-04-22T23:38:17Z", "closed_at": "2020-01-23T18:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using the function crypto_core_ristretto255_scalar_reduce I stumbled on a peculiar pattern.\r\nHere's the issue :\r\n\r\nSuppose I have a 64 byte array \"tmp\"\r\ntmp = 4ED43CCB2023FE63F7F22953CFDF29385079E6F5F36D39A1BDABC8185051DE5C\r\n\r\nI hash 'tmp' in program A and got the output \"out\"\r\nout = 04ABD7468553BFD870CD4FDFAC8416C62F6CF19E17172E0239E439DC6F171402\r\n\r\nNow if I run the another program B which has the same \"tmp\" value, I get a different output \"dif\"\r\ndif = DBE13CD3E11215E34ACE0E4FF5A26EC80C5825551A5229281A8CBFC343DFF90C\r\n\r\nWhen I run program B again, I got the output \"dif\" again.\r\n\r\nSnippet from Program A\r\n```\t\t\t\r\ncrypto_core_ristretto255_from_hash( tmp1 , (const unsigned char *)hshe );\r\n//tmp1 is an element, we perform reduction into a scalar, x (2nd 32byte on obuffer)\r\n\r\nsize_t j;\r\ndebug(\"Post_HASH:Pre_REDUCTION\");\r\nfor(j=0;j<ELE;j++){\r\n\tprintf(\"%02X\",(tmp1)[j]);\r\n}\r\nprintf(\"\\n\");\r\n\r\ncrypto_core_ristretto255_scalar_reduce( (*obuffer+SCA), tmp1); //x = H(m, U, V)\r\n\r\ndebug(\"x\");\r\nfor(j=0;j<SCA;j++){\r\n\tprintf(\"%02X\",(*obuffer+SCA)[j]);\r\n}\r\nprintf(\"\\n\");\r\n```\r\nOutput : \r\n```\r\nDEBUG src/i25519.cpp:sign:L168: Post_HASH:Pre_REDUCTION\r\n4ED43CCB2023FE63F7F22953CFDF29385079E6F5F36D39A1BDABC8185051DE5C\r\nDEBUG src/i25519.cpp:sign:L176: x\r\n04ABD7468553BFD870CD4FDFAC8416C62F6CF19E17172E0239E439DC6F171402\r\n```\r\nSnippet from Program B\r\n```                       \r\ncrypto_core_ristretto255_from_hash( tmp1 , (const unsigned char *)hshe );\r\n//tmp1 is an element, we perform reduction into a scalar, x\r\n\r\nsize_t j;\r\ndebug(\"Post_HASH:Pre_REDUCTION\");\r\nfor(j=0;j<ELE;j++){\r\n\tprintf(\"%02X\",(tmp1)[j]);\r\n}\r\nprintf(\"\\n\");\r\n\r\ncrypto_core_ristretto255_scalar_reduce( tmp, tmp1); //x = H(m, U', V')\r\n\r\ndebug(\"EQUALITY TEST (x' vs x)\");\r\nfor(j=0;j<SCA;j++){\r\n\tprintf(\"%02X\",tmp[j]);\r\n}\r\nprintf(\"\\n\");\r\nfor(j=0;j<SCA;j++){\r\n\tprintf(\"%02X\",(obuffer+SCA)[j]);\r\n}\r\nprintf(\"\\n\");\r\n```\r\nOutput : \r\n```\r\nDEBUG src/i25519.cpp:verify:L282: Post_HASH:Pre_REDUCTION\r\n4ED43CCB2023FE63F7F22953CFDF29385079E6F5F36D39A1BDABC8185051DE5C\r\nDEBUG src/i25519.cpp:verify:L290: EQUALITY TEST (x' vs x)\r\nDBE13CD3E11215E34ACE0E4FF5A26EC80C5825551A5229281A8CBFC343DFF90C\r\n04ABD7468553BFD870CD4FDFAC8416C62F6CF19E17172E0239E439DC6F171402\r\n```\r\n\r\nWhat is wrong with my code ? I'm expecting tmp and (obuffer+SCA) to be the same... as (obuffer+SCA) is read in from program A. If I rerun program B again, the same output appears. Why is it non-deterministic across different programs ? Or perhaps I have mistaken somethings ?\r\n\r\nOS and library details :\r\n```\r\nuname -a\r\nLinux cj-basepc 5.4.7-arch1-1 #1 SMP PREEMPT Tue, 31 Dec 2019 17:20:16 +0000 x86_64 GNU/Linux\r\nldconfig -p\r\nlibsodium.so.23 (libc6,x86-64) => /usr/lib/libsodium.so.23\r\nlibsodium.so (libc6,x86-64) => /usr/lib/libsodium.so\r\npacman -Ss sodium\r\ncommunity/libsodium 1.0.18-1 [installed]\r\n    P(ortable|ackageable) NaCl-based crypto library\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/918", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/918/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/918/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/918/events", "html_url": "https://github.com/jedisct1/libsodium/issues/918", "id": 554182090, "node_id": "MDU6SXNzdWU1NTQxODIwOTA=", "number": 918, "title": "to autogen or not to autogen", "user": {"login": "AxelNennker", "id": 1721863, "node_id": "MDQ6VXNlcjE3MjE4NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1721863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AxelNennker", "html_url": "https://github.com/AxelNennker", "followers_url": "https://api.github.com/users/AxelNennker/followers", "following_url": "https://api.github.com/users/AxelNennker/following{/other_user}", "gists_url": "https://api.github.com/users/AxelNennker/gists{/gist_id}", "starred_url": "https://api.github.com/users/AxelNennker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AxelNennker/subscriptions", "organizations_url": "https://api.github.com/users/AxelNennker/orgs", "repos_url": "https://api.github.com/users/AxelNennker/repos", "events_url": "https://api.github.com/users/AxelNennker/events{/privacy}", "received_events_url": "https://api.github.com/users/AxelNennker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-23T14:12:07Z", "updated_at": "2020-04-22T23:38:18Z", "closed_at": "2020-01-23T14:37:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "libsodium-1.0.18 comes with a configure script\r\nthe stable branch here comes with a configure script\r\nthe master branch does not come with a configure script\r\n\r\nAll have the version number 1.0.18\r\n\r\nWill the next release come without a pre-generated configure script?\r\n\r\nI would prefer it that way because creating configure on macos results in a successful build for me while using the current configure script does not work.\r\n\r\nI am using [sodiumoxide-0.2.5 while building libindy](https://github.com/AxelNennker/indy-sdk/tree/sodiumoxide_0.2.5) and that fails because [sodiumoxide](https://github.com/sodiumoxide/sodiumoxide) uses the [libsodium-sys](https://github.com/sodiumoxide/sodiumoxide/tree/master/libsodium-sys) crate which uses the pre-generated configure script.\r\n\r\nSo, if you release 1.0.19 without the configure script I will create a PR to sodiumoxide to generate it using autogen.sh which would make the building of libindy succeed on macos (libtool issues, I think).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/917", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/917/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/917/events", "html_url": "https://github.com/jedisct1/libsodium/issues/917", "id": 551594790, "node_id": "MDU6SXNzdWU1NTE1OTQ3OTA=", "number": 917, "title": "parameter documetation for \"crypto_aead_aes256gcm_encrypt_detached\".. and other public functions", "user": {"login": "jadamcrain", "id": 305813, "node_id": "MDQ6VXNlcjMwNTgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/305813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jadamcrain", "html_url": "https://github.com/jadamcrain", "followers_url": "https://api.github.com/users/jadamcrain/followers", "following_url": "https://api.github.com/users/jadamcrain/following{/other_user}", "gists_url": "https://api.github.com/users/jadamcrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/jadamcrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jadamcrain/subscriptions", "organizations_url": "https://api.github.com/users/jadamcrain/orgs", "repos_url": "https://api.github.com/users/jadamcrain/repos", "events_url": "https://api.github.com/users/jadamcrain/events{/privacy}", "received_events_url": "https://api.github.com/users/jadamcrain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1794204812, "node_id": "MDU6TGFiZWwxNzk0MjA0ODEy", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/didn't%20read%20the%20doc", "name": "didn't read the doc", "color": "ddab66", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-17T19:33:45Z", "updated_at": "2020-04-16T23:37:09Z", "closed_at": "2020-01-17T19:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm implementing a standard that requires particular AEADs so I need to use the particular functions. I'm starting w/ AES-GCM in detached mode.\r\n\r\nI think I've been able to infer what most of the parameters are, but I don't know how to interpret the two nonce paramters. I guess I was expecting a single pointer to a single buffer 12 bytes in length.\r\n\r\nI take it from the variable names `nsec` and `npub` that the nonce can somehow be secret or public?\r\n\r\n```\r\n// ciphertext output - length must be at least plaintext length since this is CTR\r\nunsigned char *c,\r\n                                           \r\n// MAC output - returns the mac length in specified pointer?\r\nunsigned char *mac,\r\nunsigned long long *maclen_p,\r\n\r\n// plaintext input\r\nconst unsigned char *m,\r\nunsigned long long mlen,\r\n\r\n// additional data\r\nconst unsigned char *ad,\r\nunsigned long long adlen,\r\n\r\n// two parameters for the nonce?!\r\nconst unsigned char *nsec,\r\nconst unsigned char *npub,\r\n\r\n// key - 32 bytes\r\nconst unsigned char *k)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/916", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/916/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/916/events", "html_url": "https://github.com/jedisct1/libsodium/issues/916", "id": 548336414, "node_id": "MDU6SXNzdWU1NDgzMzY0MTQ=", "number": 916, "title": "secretstream & zero byte frames", "user": {"login": "insasho", "id": 4899995, "node_id": "MDQ6VXNlcjQ4OTk5OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4899995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insasho", "html_url": "https://github.com/insasho", "followers_url": "https://api.github.com/users/insasho/followers", "following_url": "https://api.github.com/users/insasho/following{/other_user}", "gists_url": "https://api.github.com/users/insasho/gists{/gist_id}", "starred_url": "https://api.github.com/users/insasho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insasho/subscriptions", "organizations_url": "https://api.github.com/users/insasho/orgs", "repos_url": "https://api.github.com/users/insasho/repos", "events_url": "https://api.github.com/users/insasho/events{/privacy}", "received_events_url": "https://api.github.com/users/insasho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T23:20:24Z", "updated_at": "2020-04-10T23:37:30Z", "closed_at": "2020-01-11T02:14:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the expected behavior of secretstream when handling messages that are 0 bytes long?\r\n\r\nIn Python, the behavior is that _pull() refuses to decode output that is generated by _push():\r\n\r\n```\r\nc = bindings.crypto_secretstream_xchacha20poly1305_push(state, \r\n  bytes(),                                                                \r\n  tag=bindings.crypto_secretstream_xchacha20poly1305_TAG_FINAL)\r\n# len(c) == 17 == crypto_secretstream_xchacha20poly1305_ABYTES\r\n...\r\n# this throws an exception: Ciphertext is too short\r\nbindings.crypto_secretstream_xchacha20poly1305_pull(\r\n            state,\r\n            c,\r\n            None)\r\n```\r\n\r\nThe exception is thrown in crypto_secretstream.py crypto_secretstream_xchacha20poly1305_pull:\r\n\r\n```\r\n    ensure(\r\n        len(c) > crypto_secretstream_xchacha20poly1305_ABYTES,\r\n        'Ciphertext is too short',\r\n        raising=exc.ValueError,\r\n    )\r\n```\r\n\r\nShould padding be applied when using secretstream, or is this a bug?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/915", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/915/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/915/events", "html_url": "https://github.com/jedisct1/libsodium/issues/915", "id": 547827807, "node_id": "MDU6SXNzdWU1NDc4Mjc4MDc=", "number": 915, "title": "any plan for BLAKE3?", "user": {"login": "burmecia", "id": 19306324, "node_id": "MDQ6VXNlcjE5MzA2MzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/19306324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burmecia", "html_url": "https://github.com/burmecia", "followers_url": "https://api.github.com/users/burmecia/followers", "following_url": "https://api.github.com/users/burmecia/following{/other_user}", "gists_url": "https://api.github.com/users/burmecia/gists{/gist_id}", "starred_url": "https://api.github.com/users/burmecia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burmecia/subscriptions", "organizations_url": "https://api.github.com/users/burmecia/orgs", "repos_url": "https://api.github.com/users/burmecia/repos", "events_url": "https://api.github.com/users/burmecia/events{/privacy}", "received_events_url": "https://api.github.com/users/burmecia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-10T02:23:14Z", "updated_at": "2020-04-09T23:37:30Z", "closed_at": "2020-01-10T02:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the BLAKE3 came out (https://github.com/BLAKE3-team/BLAKE3) and looks like it has great performance against BLAKE2b, is there any plan to include it in libsodium in the near future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/914", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/914/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/914/events", "html_url": "https://github.com/jedisct1/libsodium/issues/914", "id": 547635456, "node_id": "MDU6SXNzdWU1NDc2MzU0NTY=", "number": 914, "title": "Error building libsodium-sys", "user": {"login": "hubbabubbagump", "id": 7909892, "node_id": "MDQ6VXNlcjc5MDk4OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7909892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubbabubbagump", "html_url": "https://github.com/hubbabubbagump", "followers_url": "https://api.github.com/users/hubbabubbagump/followers", "following_url": "https://api.github.com/users/hubbabubbagump/following{/other_user}", "gists_url": "https://api.github.com/users/hubbabubbagump/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubbabubbagump/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubbabubbagump/subscriptions", "organizations_url": "https://api.github.com/users/hubbabubbagump/orgs", "repos_url": "https://api.github.com/users/hubbabubbagump/repos", "events_url": "https://api.github.com/users/hubbabubbagump/events{/privacy}", "received_events_url": "https://api.github.com/users/hubbabubbagump/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-09T18:05:15Z", "updated_at": "2020-04-08T23:37:42Z", "closed_at": "2020-01-09T18:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try importing sodiumoxide, which in turns imports libsodium-sys, the build crashes during `make check -j8`.\r\n\r\nAccording to the test suite, the failing tests are:\r\n```\r\nFAIL: pwhash_argon2i\r\nFAIL: pwhash_argon2id\r\n```\r\n\r\nNot too sure what's going on here, but I believe the command is seg faulting due to the errors:\r\n```\r\n../../build-aux/test-driver: line 107: 45211 Segmentation fault: 11  \"$@\" > $log_file 2>&1\r\n../../build-aux/test-driver: line 107: 45222 Segmentation fault: 11  \"$@\" > $log_file 2>&1\r\n```\r\n\r\nAny help would be appreciated!\r\n\r\nOutput file for reference:\r\n[output.txt](https://github.com/sodiumoxide/sodiumoxide/files/4039185/output.2.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/913", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/913/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/913/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/913/events", "html_url": "https://github.com/jedisct1/libsodium/issues/913", "id": 545604004, "node_id": "MDU6SXNzdWU1NDU2MDQwMDQ=", "number": 913, "title": "The warning info in src\\libsodium\\include\\sodium\\private\\common.h ", "user": {"login": "jhc80", "id": 10934271, "node_id": "MDQ6VXNlcjEwOTM0Mjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/10934271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhc80", "html_url": "https://github.com/jhc80", "followers_url": "https://api.github.com/users/jhc80/followers", "following_url": "https://api.github.com/users/jhc80/following{/other_user}", "gists_url": "https://api.github.com/users/jhc80/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhc80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhc80/subscriptions", "organizations_url": "https://api.github.com/users/jhc80/orgs", "repos_url": "https://api.github.com/users/jhc80/repos", "events_url": "https://api.github.com/users/jhc80/events{/privacy}", "received_events_url": "https://api.github.com/users/jhc80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-06T08:25:53Z", "updated_at": "2020-04-05T23:38:04Z", "closed_at": "2020-01-06T11:43:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the latest release version 1.0.18, there are still some warning comments in `src\\libsodium\\include\\sodium\\private\\common.h`.\r\n\r\ncan you double check if these warning info can be removed in release version?\r\n\r\n```c\r\n#if !defined(_MSC_VER) && !defined(DEV_MODE) && 0\r\n# warning *** This is unstable, untested, development code.\r\n# warning It might not compile. It might not work as expected.\r\n# warning It might be totally insecure.\r\n# warning Do not use this except if you are planning to contribute code.\r\n# warning Use releases available at https://download.libsodium.org/libsodium/releases/ instead.\r\n# warning Alternatively, use the \"stable\" branch in the git repository.\r\n#endif\r\n\r\n#if !defined(_MSC_VER) && (!defined(CONFIGURED) || CONFIGURED != 1)\r\n# warning *** The library is being compiled using an undocumented method.\r\n# warning This is not supported. It has not been tested, it might not\r\n# warning work as expected, and performance is likely to be suboptimal.\r\n#endif\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/912", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/912/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/912/events", "html_url": "https://github.com/jedisct1/libsodium/issues/912", "id": 545486509, "node_id": "MDU6SXNzdWU1NDU0ODY1MDk=", "number": 912, "title": "[Invalid] ld: warning: building for macOS, but linking in object file built for iOS Simulator", "user": {"login": "caobug", "id": 7737673, "node_id": "MDQ6VXNlcjc3Mzc2NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7737673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caobug", "html_url": "https://github.com/caobug", "followers_url": "https://api.github.com/users/caobug/followers", "following_url": "https://api.github.com/users/caobug/following{/other_user}", "gists_url": "https://api.github.com/users/caobug/gists{/gist_id}", "starred_url": "https://api.github.com/users/caobug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caobug/subscriptions", "organizations_url": "https://api.github.com/users/caobug/orgs", "repos_url": "https://api.github.com/users/caobug/repos", "events_url": "https://api.github.com/users/caobug/events{/privacy}", "received_events_url": "https://api.github.com/users/caobug/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25457322, "node_id": "MDU6TGFiZWwyNTQ1NzMyMg==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-06T00:09:31Z", "updated_at": "2020-04-05T23:38:04Z", "closed_at": "2020-01-06T03:13:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I used libsodium-1.0.18/dist-build/ios.sh script to build static lib. but crash when I call sodium_init()\r\n\r\n```\r\n#include <sodium.h>\r\n\r\nint main(void)\r\n{\r\n    if (sodium_init() == -1) {\r\n        return 1;\r\n    }\r\n    ...\r\n}\r\n```\r\nOSX Version: 10.15.2 (19C57)\r\n\r\n<img width=\"831\" alt=\"pic\" src=\"https://user-images.githubusercontent.com/7737673/71788260-a369d280-305b-11ea-9159-9ea7df1fb8fa.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/911", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/911/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/911/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/911/events", "html_url": "https://github.com/jedisct1/libsodium/issues/911", "id": 544183968, "node_id": "MDU6SXNzdWU1NDQxODM5Njg=", "number": 911, "title": "Wrong math for crypto_core_ristretto255_scalar_complement?", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-31T12:59:55Z", "updated_at": "2020-03-30T23:37:42Z", "closed_at": "2019-12-31T13:28:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n`crypto_core_ristretto255_scalar_complement` returns `-s + 1 (mod L)`.\r\nIs that by intention? For a 2's complement I would have expected `-s - 1 (mod L)` instead.\r\nFor example the complement of 0 would be -1 and not +1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/908", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/908/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/908/events", "html_url": "https://github.com/jedisct1/libsodium/issues/908", "id": 542531829, "node_id": "MDU6SXNzdWU1NDI1MzE4Mjk=", "number": 908, "title": "Security impact of not calling `sodium_init`", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-26T11:41:51Z", "updated_at": "2020-03-26T00:37:51Z", "closed_at": "2019-12-26T13:07:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Can you please clarify the security impact of using any libsodium function without calling `sodium_init` in advance?\r\n\r\nE.g. according to the documentation in https://download.libsodium.org/doc/usage#sodium_init-stalling-on-linux - would the function in https://download.libsodium.org/doc/generating_random_data simply stall in absence of enough entropy or generate predictable data?\r\n\r\nIf there are security risks, should the affected functions check for initialization and refuse to run otherwise (or initialize libsodium on the fly)?\r\nThanks\r\n\r\n(edit: related to #625)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/907", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/907/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/907/events", "html_url": "https://github.com/jedisct1/libsodium/issues/907", "id": 537826521, "node_id": "MDU6SXNzdWU1Mzc4MjY1MjE=", "number": 907, "title": "PAKE and server-side PAKE (SRP)", "user": {"login": "SoniEx2", "id": 1779619, "node_id": "MDQ6VXNlcjE3Nzk2MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1779619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SoniEx2", "html_url": "https://github.com/SoniEx2", "followers_url": "https://api.github.com/users/SoniEx2/followers", "following_url": "https://api.github.com/users/SoniEx2/following{/other_user}", "gists_url": "https://api.github.com/users/SoniEx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/SoniEx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SoniEx2/subscriptions", "organizations_url": "https://api.github.com/users/SoniEx2/orgs", "repos_url": "https://api.github.com/users/SoniEx2/repos", "events_url": "https://api.github.com/users/SoniEx2/events{/privacy}", "received_events_url": "https://api.github.com/users/SoniEx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T23:44:47Z", "updated_at": "2020-03-14T00:38:50Z", "closed_at": "2019-12-14T08:58:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "it would be highly appreciated to have a PAKE/SRP-based alternative to argon2/bcrypt/scrypt/whatever. Bonus points is that this gives an upgrade path towards client-server PAKE if so desired.\r\n\r\nHaving PAKE where you have access to the password is no more secure than argon2/bcrypt/scrypt, but the upgrade path is key. With argon2/bcrypt/scrypt you can't switch to PAKE later, but if you already have PAKE, even if it's just on the server, you can always switch to client-server PAKE.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/906", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/906/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/906/events", "html_url": "https://github.com/jedisct1/libsodium/issues/906", "id": 537584483, "node_id": "MDU6SXNzdWU1Mzc1ODQ0ODM=", "number": 906, "title": "Problems in configuring project in CMake", "user": {"login": "Mposki", "id": 32541892, "node_id": "MDQ6VXNlcjMyNTQxODky", "avatar_url": "https://avatars0.githubusercontent.com/u/32541892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mposki", "html_url": "https://github.com/Mposki", "followers_url": "https://api.github.com/users/Mposki/followers", "following_url": "https://api.github.com/users/Mposki/following{/other_user}", "gists_url": "https://api.github.com/users/Mposki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mposki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mposki/subscriptions", "organizations_url": "https://api.github.com/users/Mposki/orgs", "repos_url": "https://api.github.com/users/Mposki/repos", "events_url": "https://api.github.com/users/Mposki/events{/privacy}", "received_events_url": "https://api.github.com/users/Mposki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T14:38:19Z", "updated_at": "2020-03-13T00:39:20Z", "closed_at": "2019-12-13T14:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I managed problem while configuring project in CMake with use of libsodium.\r\n\r\nFirst, I added all necessary sodium variables to CMake, but it couldn't configure, which was ended with CMake Error.  After adding only sodium_DIR path, CMake still cannot configure program properly.\r\n\r\nMy program, CMake output log, CMake messages and CMake lists are there: https://github.com/Mposki/SodiumTest.\r\n\r\nThanks for help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/905", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/905/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/905/events", "html_url": "https://github.com/jedisct1/libsodium/issues/905", "id": 537236171, "node_id": "MDU6SXNzdWU1MzcyMzYxNzE=", "number": 905, "title": "Argon2 Associated Data and Secrets", "user": {"login": "CrossBound", "id": 11417093, "node_id": "MDQ6VXNlcjExNDE3MDkz", "avatar_url": "https://avatars3.githubusercontent.com/u/11417093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrossBound", "html_url": "https://github.com/CrossBound", "followers_url": "https://api.github.com/users/CrossBound/followers", "following_url": "https://api.github.com/users/CrossBound/following{/other_user}", "gists_url": "https://api.github.com/users/CrossBound/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrossBound/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrossBound/subscriptions", "organizations_url": "https://api.github.com/users/CrossBound/orgs", "repos_url": "https://api.github.com/users/CrossBound/repos", "events_url": "https://api.github.com/users/CrossBound/events{/privacy}", "received_events_url": "https://api.github.com/users/CrossBound/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-12T21:59:05Z", "updated_at": "2020-03-12T00:38:57Z", "closed_at": "2019-12-12T22:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. Argon2 supports features such as associated data and server side secrets which can be folded into the hash during the computation. I don't see support for these features in libsodium. Do you have any plans to support this in the near future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/904", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/904/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/904/events", "html_url": "https://github.com/jedisct1/libsodium/issues/904", "id": 536883790, "node_id": "MDU6SXNzdWU1MzY4ODM3OTA=", "number": 904, "title": "crypto_box_*(): derivating order of public + secret keypair in >= PHP 7.2", "user": {"login": "etkaar", "id": 40885610, "node_id": "MDQ6VXNlcjQwODg1NjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/40885610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etkaar", "html_url": "https://github.com/etkaar", "followers_url": "https://api.github.com/users/etkaar/followers", "following_url": "https://api.github.com/users/etkaar/following{/other_user}", "gists_url": "https://api.github.com/users/etkaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/etkaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etkaar/subscriptions", "organizations_url": "https://api.github.com/users/etkaar/orgs", "repos_url": "https://api.github.com/users/etkaar/repos", "events_url": "https://api.github.com/users/etkaar/events{/privacy}", "received_events_url": "https://api.github.com/users/etkaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 841347927, "node_id": "MDU6TGFiZWw4NDEzNDc5Mjc=", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/off-topic", "name": "off-topic", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-12T10:19:33Z", "updated_at": "2019-12-12T12:09:03Z", "closed_at": "2019-12-12T10:47:50Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "I may miss something here, but I noticed something which could be dangerous under some unusual circumstances.\r\n\r\nWhen you have a look into the documentation and the examples, you will notice that the order for the crypto box keypair in libsodium will be always 1) public and then 2) secret:\r\n\r\n```\r\ncrypto_box_keypair(recipient_pk, recipient_sk);\r\ncrypto_box_seal_open(decrypted, ciphertext, CIPHERTEXT_LEN, recipient_pk, recipient_sk);\r\n```\r\nhttps://libsodium.gitbook.io/doc/public-key_cryptography/sealed_boxes\r\n\r\nHowever, I can confirm that PHP [\\sodium_crypto_box_keypair()](https://www.php.net/manual/en/function.sodium-crypto-box-keypair.php) returns not a public+secret pair, but a secret+public pair. This corresponds to the doc:\r\n\r\n> sodium_crypto_box_keypair \u2014 Randomly generate a secret key and a corresponding public key\r\n\r\nhttps://www.php.net/manual/en/function.sodium-crypto-box-keypair.php\r\n\r\nSame applies to the [\\sodium_crypto_box_seal_open()](https://www.php.net/manual/en/function.sodium-crypto-box-seal-open.php):\r\n\r\n`$decrypted = \\sodium_crypto_box_seal_open($ciphertext, $secretKey . $publicKey);`\r\n\r\nAs long helpers like [\\sodium_crypto_box_secretkey()](https://www.php.net/manual/de/function.sodium-crypto-box-secretkey.php) and [\\sodium_crypto_box_publickey()](https://www.php.net/manual/de/function.sodium-crypto-box-publickey.php) are used, that should not be a huge problem.\r\n\r\nHowever, developers may interchange the keys due to the differing order in libsodium and the PHP implementation. I don't understand for what reason the order was changed in PHP.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/903", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/903/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/903/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/903/events", "html_url": "https://github.com/jedisct1/libsodium/issues/903", "id": 532544975, "node_id": "MDU6SXNzdWU1MzI1NDQ5NzU=", "number": 903, "title": "Does libsodium support Saving of key pairs(crypto_box_keypair) to local file?", "user": {"login": "KotaHemanthIITD", "id": 12745620, "node_id": "MDQ6VXNlcjEyNzQ1NjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/12745620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KotaHemanthIITD", "html_url": "https://github.com/KotaHemanthIITD", "followers_url": "https://api.github.com/users/KotaHemanthIITD/followers", "following_url": "https://api.github.com/users/KotaHemanthIITD/following{/other_user}", "gists_url": "https://api.github.com/users/KotaHemanthIITD/gists{/gist_id}", "starred_url": "https://api.github.com/users/KotaHemanthIITD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KotaHemanthIITD/subscriptions", "organizations_url": "https://api.github.com/users/KotaHemanthIITD/orgs", "repos_url": "https://api.github.com/users/KotaHemanthIITD/repos", "events_url": "https://api.github.com/users/KotaHemanthIITD/events{/privacy}", "received_events_url": "https://api.github.com/users/KotaHemanthIITD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T09:10:11Z", "updated_at": "2020-03-04T00:37:39Z", "closed_at": "2019-12-04T10:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n I was looking for libsodium API support(if exists) to save public key, private key to a filepath, retrieve it when needed. I couldn't find any info about saving or loading keys(searched source code and previous issues). I guess, it's most likely that they are supported. Can someone confirm this? If not supported, is there any security reason for deciding not to?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/902", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/902/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/902/events", "html_url": "https://github.com/jedisct1/libsodium/issues/902", "id": 531852066, "node_id": "MDU6SXNzdWU1MzE4NTIwNjY=", "number": 902, "title": "Use prlimit set RLIMIT_MEMLOCK to 1G or bigger size but it  did not work", "user": {"login": "AlexiaChen", "id": 8574915, "node_id": "MDQ6VXNlcjg1NzQ5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8574915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexiaChen", "html_url": "https://github.com/AlexiaChen", "followers_url": "https://api.github.com/users/AlexiaChen/followers", "following_url": "https://api.github.com/users/AlexiaChen/following{/other_user}", "gists_url": "https://api.github.com/users/AlexiaChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexiaChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexiaChen/subscriptions", "organizations_url": "https://api.github.com/users/AlexiaChen/orgs", "repos_url": "https://api.github.com/users/AlexiaChen/repos", "events_url": "https://api.github.com/users/AlexiaChen/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexiaChen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-03T09:42:11Z", "updated_at": "2020-03-05T00:37:49Z", "closed_at": "2019-12-05T08:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "my test code with privileged process:\r\n\r\n```cpp\r\n struct rlimit old, newlimit;\r\n    struct rlimit *newp;\r\n    pid_t pid = getpid();\r\n\r\n    newp = NULL;\r\n\r\n    newlimit.rlim_cur = 16 * 1024 * 1024;\r\n    newlimit.rlim_max = 1024 * 1024 * 1024;\r\n    newp = &newlimit;\r\n\r\n    if (prlimit(pid, RLIMIT_MEMLOCK, newp, &old) == -1)\r\n    {\r\n        printf(\"prlimit set memlock size failed\\n\");\r\n        return -1;\r\n    }\r\n\r\n    printf(\"Previous limits: soft=%lld; hard=%lld\\n\",\r\n           (long long)old.rlim_cur, (long long)old.rlim_max);\r\n\r\n    /* Retrieve and display new MEMLOCK time limit */\r\n\r\n    if (prlimit(pid, RLIMIT_MEMLOCK, NULL, &old) == -1)\r\n    {\r\n        printf(\"prlimit get new memlock size failed\\n\");\r\n        return -1;\r\n    }\r\n\r\n    printf(\"New limits: soft=%lld; hard=%lld\\n\",\r\n           (long long)old.rlim_cur, (long long)old.rlim_max);\r\n\r\n  \r\n```\r\n\r\nThen I use ulimit command line ulimit -l unlimited  also not working.\r\n\r\nThe test result is all the same(sodium_malloc run 16000 ~ 18000 times stop with return nullptr) on ubuntu 18.04 with issue #901 \uff0c Looks like the sodium_malloc success times is not increase.\r\n\r\nIs it must restart OS could be working? \r\n\r\nso I can write the following bash to .bashrc and restart system?\r\n\r\n```bash\r\nulimit -l unlimited \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/901", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/901/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/901/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/901/events", "html_url": "https://github.com/jedisct1/libsodium/issues/901", "id": 531797245, "node_id": "MDU6SXNzdWU1MzE3OTcyNDU=", "number": 901, "title": "How can I increase more secure memory size for sodium_malloc", "user": {"login": "AlexiaChen", "id": 8574915, "node_id": "MDQ6VXNlcjg1NzQ5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8574915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexiaChen", "html_url": "https://github.com/AlexiaChen", "followers_url": "https://api.github.com/users/AlexiaChen/followers", "following_url": "https://api.github.com/users/AlexiaChen/following{/other_user}", "gists_url": "https://api.github.com/users/AlexiaChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexiaChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexiaChen/subscriptions", "organizations_url": "https://api.github.com/users/AlexiaChen/orgs", "repos_url": "https://api.github.com/users/AlexiaChen/repos", "events_url": "https://api.github.com/users/AlexiaChen/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexiaChen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-03T08:00:58Z", "updated_at": "2020-03-03T00:37:42Z", "closed_at": "2019-12-03T09:07:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "on my laptop:\r\n\r\nsystem : 8G ubuntu 18.04\r\n\r\nsodium_malloc maybe run 16000 to 18000 times stop with returned nullptr\r\n\r\nmy test code as follows:\r\n\r\n```cpp\r\n    sodium_init();\r\n    for (int i = 0; i < 100000; ++i)\r\n    {\r\n        unsigned char *p = (unsigned char *)sodium_malloc(64);\r\n   std::cout\r\n           << \"current  \" << i  << \" times\"<< std::endl;\r\n        \r\n        if (p == NULL)\r\n        {\r\n            std::cout << \"stop with \" << i << \" times\" << std::endl;\r\n            printf(\"errno %d\\n\", errno);\r\n            return 1-;\r\n        } \r\n    }\r\n\r\n``` \r\n\r\n16 G MacOSX:\r\n\r\nsodium_malloc run around 70000 times stop with returned nullptr.\r\n\r\n\r\nBut, on my 8G ubuntu enviroment, the total size of sodium_malloc malloced is: 18000 * 64 = 1152000 bytes = 1125 K bytes = 1M bytes\u30021M bytes  is far from the 8G physical memory limit.\r\n\r\non 16G MaxOSX    the total size of sodium_malloc malloced is 70000 * 64 = 4480000 bytes = 4375 K bytes = 4M bytes. 4M bytes is also  far from the 16G physical memory limit.\r\n\r\nFrankly, 1 ~ 4M bytes is very very small for my requirement.\r\n\r\nI kwon the concept \"secure memory\" for libsodium is different with normal heap memory , but Is there a way to change some OS system configuration to fix the problem to meet my needs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/900", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/900/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/900/events", "html_url": "https://github.com/jedisct1/libsodium/issues/900", "id": 531650913, "node_id": "MDU6SXNzdWU1MzE2NTA5MTM=", "number": 900, "title": "Computing Curve25519 Basepoint - possible untested interface edge use case?", "user": {"login": "skaht", "id": 6238506, "node_id": "MDQ6VXNlcjYyMzg1MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6238506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaht", "html_url": "https://github.com/skaht", "followers_url": "https://api.github.com/users/skaht/followers", "following_url": "https://api.github.com/users/skaht/following{/other_user}", "gists_url": "https://api.github.com/users/skaht/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaht/subscriptions", "organizations_url": "https://api.github.com/users/skaht/orgs", "repos_url": "https://api.github.com/users/skaht/repos", "events_url": "https://api.github.com/users/skaht/events{/privacy}", "received_events_url": "https://api.github.com/users/skaht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T01:34:24Z", "updated_at": "2020-03-03T00:37:43Z", "closed_at": "2019-12-03T10:21:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to correlate various **IETF Curve25519/X25519 RFC test vectors** with **libsodium**, I learned someone else ran into a similar interface issues years ago.\r\n\r\nThe following code is essentially an updated **NaCl**   [Stack Overflow Question](https://stackoverflow.com/questions/19622202/libnacl-crypto-library-how-to-recover-public-key) that remained unanswered that was adapted for **libsodium** that appears to break a somewhat intuitive interface. \r\n\r\n***Was expecting the bottom two lines of Output to be the same.***\r\n\r\nThe following is the contents of a file called **naive.c**:\r\n```\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\n#include \"sodium/utils.h\"\r\n#include \"sodium/crypto_sign.h\"\r\n#include \"sodium/crypto_scalarmult_curve25519.h\"\r\n\r\n#define STRING_SIZE (2*crypto_sign_ed25519_SECRETKEYBYTES+1)\r\n\r\nint main(int argc, char **argv)\r\n{\r\n   static unsigned char  sk[        crypto_sign_ed25519_SECRETKEYBYTES];\r\n   static unsigned char  ed25519_pk[crypto_sign_ed25519_PUBLICKEYBYTES],\r\n                         x25519_pk[ crypto_sign_ed25519_PUBLICKEYBYTES];\r\n   unsigned char         seed[      crypto_sign_SEEDBYTES];\r\n   static char           skhexbuf[STRING_SIZE],\r\n                         pkhexbuf[STRING_SIZE];\r\n\r\n   sk[31] = (unsigned char)0x01;\r\n\r\n   if( crypto_sign_ed25519_sk_to_seed( seed, sk ) != 0 ) { \r\n       printf( \"Failed to initialize seed.\" );\r\n       return 1;\r\n   }   \r\n\r\n// Computes ed25519_pk\r\n   if( crypto_sign_seed_keypair( ed25519_pk, sk, seed )   != 0 ) { \r\n       printf( \"Failed to generate ed25519_pk key.\" );\r\n       return 1;\r\n   }   \r\n\r\n// Computes x25519_pk\r\n   if( crypto_sign_ed25519_pk_to_curve25519( x25519_pk, ed25519_pk ) != 0 ) { \r\n       printf( \"Failed to generate x25519_pk key.\" );\r\n       return 1;\r\n   }\r\n\r\n   sodium_bin2hex( skhexbuf, sizeof( skhexbuf ), sk,        sizeof( sk )        );\r\n   sodium_bin2hex( pkhexbuf, sizeof( pkhexbuf ), x25519_pk, sizeof( x25519_pk ) );\r\n   printf( \"secret & ed25519 public keys: %s\\n\", skhexbuf );\r\n   printf( \"public X25519 key           : %s\\n\", pkhexbuf );\r\n\r\n   //reset the public key\r\n   memset( x25519_pk, '\\0', sizeof(x25519_pk) );\r\n\r\n   //recover public key - Neither approach below seems to work\r\n   if( crypto_scalarmult_curve25519_base(    x25519_pk, sk ) != 0 ) {\r\n// if( crypto_sign_ed25519_sk_to_curve25519( x25519_pk, sk ) != 0 ) {\r\n       printf( \"Failed to derive public key from secret key.\" );\r\n       return 1;\r\n   }\r\n\r\n   sodium_bin2hex( pkhexbuf, sizeof( pkhexbuf ), x25519_pk, sizeof( x25519_pk ) );\r\n   printf( \"public X25519 key recomputed: %s\\n\", pkhexbuf );\r\n\r\n   return 0;\r\n}\r\n```\r\n\r\n\r\n**Output:**\r\n\r\n```% ./naive \r\nsecret & ed25519 public keys: 00000000000000000000000000000000000000000000000000000000000000014cb5abf6ad79fbf5abbccafcc269d85cd2651ed4b885b5869f241aedf0a5ba29\r\npublic X25519 key           : d92f5eeaa24fd4e66221c770f704a5e2639a476bab82cfec40bd2874abeb481f\r\npublic X25519 key recomputed: fd3384e132ad02a56c78f45547ee40038dc79002b90d29ed90e08eee762ae715\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/899", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/899/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/899/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/899/events", "html_url": "https://github.com/jedisct1/libsodium/issues/899", "id": 530361246, "node_id": "MDU6SXNzdWU1MzAzNjEyNDY=", "number": 899, "title": "Why did you call it 'crypto_generichash()'?", "user": {"login": "etkaar", "id": 40885610, "node_id": "MDQ6VXNlcjQwODg1NjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/40885610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etkaar", "html_url": "https://github.com/etkaar", "followers_url": "https://api.github.com/users/etkaar/followers", "following_url": "https://api.github.com/users/etkaar/following{/other_user}", "gists_url": "https://api.github.com/users/etkaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/etkaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etkaar/subscriptions", "organizations_url": "https://api.github.com/users/etkaar/orgs", "repos_url": "https://api.github.com/users/etkaar/repos", "events_url": "https://api.github.com/users/etkaar/events{/privacy}", "received_events_url": "https://api.github.com/users/etkaar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-29T14:00:31Z", "updated_at": "2020-02-28T00:37:33Z", "closed_at": "2019-11-29T14:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a question regarding [crypto_generichash()](https://libsodium.gitbook.io/doc/hashing/generic_hashing) which (only) uses BLAKE2b. Why exactly is it called _generichash_, why didn't you call it _generichash_blake2b_ or _hash_blake2b_?\r\n\r\n**TLDR**: What is your plan if you think you need to replace BLAKE2b in future?\r\n\r\nAlthough that case is very unlikely, but if any practical attacks would be found in BLAKE2b which would lead to a change from BLAKE2b to another algorithm, the _crypto_generichash()_ couldn't be safely used any more for existing hashes if the algorithm for _crypto_generichash()_ would be changed. So, you would need to create a _crypto_generichash2()_. Same applies if we should see a BLAKE3 or any other much better algorithm you want to use as default hashing algorithm in future.\r\n\r\nFor me, it would made more sense to provide functions where the developer could choose from, e.g.\r\n\r\n```\r\ncrypto_generichash_blake2b()\r\ncrypto_generichash_sha3_256()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/898", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/898/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/898/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/898/events", "html_url": "https://github.com/jedisct1/libsodium/issues/898", "id": 529801052, "node_id": "MDU6SXNzdWU1Mjk4MDEwNTI=", "number": 898, "title": "FAIL: pwhash_scrypt on aarch64", "user": {"login": "BedivereZero", "id": 23690596, "node_id": "MDQ6VXNlcjIzNjkwNTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/23690596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BedivereZero", "html_url": "https://github.com/BedivereZero", "followers_url": "https://api.github.com/users/BedivereZero/followers", "following_url": "https://api.github.com/users/BedivereZero/following{/other_user}", "gists_url": "https://api.github.com/users/BedivereZero/gists{/gist_id}", "starred_url": "https://api.github.com/users/BedivereZero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BedivereZero/subscriptions", "organizations_url": "https://api.github.com/users/BedivereZero/orgs", "repos_url": "https://api.github.com/users/BedivereZero/repos", "events_url": "https://api.github.com/users/BedivereZero/events{/privacy}", "received_events_url": "https://api.github.com/users/BedivereZero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25457320, "node_id": "MDU6TGFiZWwyNTQ1NzMyMA==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 1071256641, "node_id": "MDU6TGFiZWwxMDcxMjU2NjQx", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/old%20version", "name": "old version", "color": "f2ca74", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T09:45:01Z", "updated_at": "2020-02-27T00:37:35Z", "closed_at": "2019-11-28T10:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to install PyNaCl\r\n\r\n```console\r\n$ python setup.py install\r\n...\r\n/root/paramiko/PyNaCl-1.3.0/src/libsodium/build-aux/test-driver: line\r\n107: 57072 Killed                  \"$@\" > $log_file 2>&1\r\nFAIL: pwhash_scrypt\r\nPASS: pwhash_scrypt_ll\r\nPASS: scalarmult_ed25519\r\nPASS: siphashx24\r\nPASS: xchacha20\r\n============================================================================\r\nTestsuite summary for libsodium 1.0.16\r\n============================================================================\r\n# TOTAL: 72\r\n# PASS:  71\r\n# SKIP:  0\r\n# XFAIL: 0\r\n# FAIL:  1\r\n# XPASS: 0\r\n# ERROR: 0\r\n============================================================================\r\nSee test/default/test-suite.log\r\nPlease report to https://github.com/jedisct1/libsodium/issues\r\n============================================================================\r\n...\r\n```\r\n\r\npwhash_scrypt.log:\r\n\r\n```log\r\nFAIL pwhash_scrypt (exit status: 137)\r\n```\r\n\r\npwhash_scrypt.res is empty\r\n\r\npwhash_scrypt.trs:\r\n\r\n```log\r\n:test-result: FAIL\r\n:global-test-result: FAIL\r\n:recheck: YES\r\n:copy-in-global-log: YES\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/897", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/897/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/897/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/897/events", "html_url": "https://github.com/jedisct1/libsodium/issues/897", "id": 527823464, "node_id": "MDU6SXNzdWU1Mjc4MjM0NjQ=", "number": 897, "title": "run php -i get error at my ubuntu 18.04", "user": {"login": "jiawei666", "id": 24775116, "node_id": "MDQ6VXNlcjI0Nzc1MTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/24775116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiawei666", "html_url": "https://github.com/jiawei666", "followers_url": "https://api.github.com/users/jiawei666/followers", "following_url": "https://api.github.com/users/jiawei666/following{/other_user}", "gists_url": "https://api.github.com/users/jiawei666/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiawei666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiawei666/subscriptions", "organizations_url": "https://api.github.com/users/jiawei666/orgs", "repos_url": "https://api.github.com/users/jiawei666/repos", "events_url": "https://api.github.com/users/jiawei666/events{/privacy}", "received_events_url": "https://api.github.com/users/jiawei666/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 841347927, "node_id": "MDU6TGFiZWw4NDEzNDc5Mjc=", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/off-topic", "name": "off-topic", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T03:40:54Z", "updated_at": "2020-02-24T00:37:44Z", "closed_at": "2019-11-25T12:32:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "$ php -i\r\n\r\nphp: symbol lookup error: php: undefined symbol: crypto_pwhash_scryptsalsa208sha256_memlimit_interactive", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/896", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/896/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/896/events", "html_url": "https://github.com/jedisct1/libsodium/issues/896", "id": 524839831, "node_id": "MDU6SXNzdWU1MjQ4Mzk4MzE=", "number": 896, "title": "crypto_sign_final_create() produces the wrong result?", "user": {"login": "jcayzac", "id": 106682, "node_id": "MDQ6VXNlcjEwNjY4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/106682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcayzac", "html_url": "https://github.com/jcayzac", "followers_url": "https://api.github.com/users/jcayzac/followers", "following_url": "https://api.github.com/users/jcayzac/following{/other_user}", "gists_url": "https://api.github.com/users/jcayzac/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcayzac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcayzac/subscriptions", "organizations_url": "https://api.github.com/users/jcayzac/orgs", "repos_url": "https://api.github.com/users/jcayzac/repos", "events_url": "https://api.github.com/users/jcayzac/events{/privacy}", "received_events_url": "https://api.github.com/users/jcayzac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25457322, "node_id": "MDU6TGFiZWwyNTQ1NzMyMg==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-19T08:04:00Z", "updated_at": "2020-02-18T00:37:38Z", "closed_at": "2019-11-19T08:28:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to reproduce the result from [the official Ed25519ph test vectors]( https://tools.ietf.org/html/rfc8032#section-7.3):\r\n\r\n```c\r\n// SK and message taken from Ed25519ph test vectors at\r\n// https://tools.ietf.org/html/rfc8032#section-7.3\r\n\r\ncrypto_sign_state state;\r\ncrypto_sign_init(&state);\r\ncrypto_sign_update(&state, (const unsigned char *) \"\\x61\\x62\\x63\", 3);\r\n\r\nunsigned char signature[64];\r\ncrypto_sign_final_create(&state, sig, 0, (const unsigned char *) \"833fe62409237b9d62ec77587520911e9a759cec1d19755b7da901b96dca3d42\");\r\nfor (int i=0; i<64; ++i) printf(\"%02x\", sig[i]);\r\nprintf(\"\\n\");\r\n\r\n//   Output: d3c601adc2e867d0a8b19d0f2cd2a6d00b346cb00659ac15d6df92387e32390ec9fe1a8f466a9e468100afc47bf6af090a883ff5edecd1b9b26ac5428b694003\r\n// Expected: 98a70222f0b8121aa9d30f813d683f809e462b469c7ff87639499bb94e6dae4131f85042463c2a355a2003d062adf5aaa10b8c61e636062aaad11c2a26083406\r\n```\r\n\r\nI used libsodium 1.0.18. System is macOS 10.15.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/895", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/895/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/895/events", "html_url": "https://github.com/jedisct1/libsodium/issues/895", "id": 521878058, "node_id": "MDU6SXNzdWU1MjE4NzgwNTg=", "number": 895, "title": "version.h include file name is too general.", "user": {"login": "junyoun-kim", "id": 55476732, "node_id": "MDQ6VXNlcjU1NDc2NzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/55476732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junyoun-kim", "html_url": "https://github.com/junyoun-kim", "followers_url": "https://api.github.com/users/junyoun-kim/followers", "following_url": "https://api.github.com/users/junyoun-kim/following{/other_user}", "gists_url": "https://api.github.com/users/junyoun-kim/gists{/gist_id}", "starred_url": "https://api.github.com/users/junyoun-kim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junyoun-kim/subscriptions", "organizations_url": "https://api.github.com/users/junyoun-kim/orgs", "repos_url": "https://api.github.com/users/junyoun-kim/repos", "events_url": "https://api.github.com/users/junyoun-kim/events{/privacy}", "received_events_url": "https://api.github.com/users/junyoun-kim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 397491852, "node_id": "MDU6TGFiZWwzOTc0OTE4NTI=", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/custom%20builds", "name": "custom builds", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-13T00:16:35Z", "updated_at": "2020-02-12T00:37:42Z", "closed_at": "2019-11-13T01:26:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "include \"version.h\" in version.c is too general to crash with other library \"version.h\" header file.\r\n\r\nCould you guard it with namespace like \"sodium/version.h\" or \"sodium_version.h\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/892", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/892/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/892/events", "html_url": "https://github.com/jedisct1/libsodium/issues/892", "id": 517485126, "node_id": "MDU6SXNzdWU1MTc0ODUxMjY=", "number": 892, "title": "** Unable to use libsodium in macOS **", "user": {"login": "gilgameshskytrooper", "id": 7355573, "node_id": "MDQ6VXNlcjczNTU1NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7355573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilgameshskytrooper", "html_url": "https://github.com/gilgameshskytrooper", "followers_url": "https://api.github.com/users/gilgameshskytrooper/followers", "following_url": "https://api.github.com/users/gilgameshskytrooper/following{/other_user}", "gists_url": "https://api.github.com/users/gilgameshskytrooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilgameshskytrooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilgameshskytrooper/subscriptions", "organizations_url": "https://api.github.com/users/gilgameshskytrooper/orgs", "repos_url": "https://api.github.com/users/gilgameshskytrooper/repos", "events_url": "https://api.github.com/users/gilgameshskytrooper/events{/privacy}", "received_events_url": "https://api.github.com/users/gilgameshskytrooper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-05T00:44:38Z", "updated_at": "2020-02-04T00:37:35Z", "closed_at": "2019-11-05T00:57:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "** Update: this seems to have been fixed in Xcode 11.2 **\r\n\r\n^ I'm not sure if this is correct. I recently upgraded to Catalina, and installed XCode 11.2. I am building a forked version of [this repo](https://github.com/jpiechowka/libsodium-file-crypter) ([my fork which attempts to add macOS support](https://github.com/gilgameshskytrooper/libsodium-file-crypter)). This seems to work fine in Ubuntu 18.04 as long as I install `libsodium-dev` from apt. But on mac, I get a `SIGENV` when running `crypto_pwhash()` (line 22 of `crypto/encrypt_file.c` my fork).\r\n\r\nBecause I started this project after I installed Catalina, I am unable to verify if this is a coding error on my part, or a problem with XCode.\r\n\r\n_Originally posted by @jedisct1 in https://github.com/jedisct1/libsodium/issues/881#issuecomment-549049136_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/891", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/891/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/891/events", "html_url": "https://github.com/jedisct1/libsodium/issues/891", "id": 514775258, "node_id": "MDU6SXNzdWU1MTQ3NzUyNTg=", "number": 891, "title": "question about aegis256", "user": {"login": "patrickkh7788", "id": 30371002, "node_id": "MDQ6VXNlcjMwMzcxMDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/30371002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickkh7788", "html_url": "https://github.com/patrickkh7788", "followers_url": "https://api.github.com/users/patrickkh7788/followers", "following_url": "https://api.github.com/users/patrickkh7788/following{/other_user}", "gists_url": "https://api.github.com/users/patrickkh7788/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickkh7788/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickkh7788/subscriptions", "organizations_url": "https://api.github.com/users/patrickkh7788/orgs", "repos_url": "https://api.github.com/users/patrickkh7788/repos", "events_url": "https://api.github.com/users/patrickkh7788/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickkh7788/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-30T15:42:27Z", "updated_at": "2020-01-30T00:37:39Z", "closed_at": "2019-10-31T18:27:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u00b7aegis256\u00b7 vs \u00b7chacha20` or `aes-gcm-256`,  are they has same security level ? or more strong\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/890", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/890/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/890/events", "html_url": "https://github.com/jedisct1/libsodium/issues/890", "id": 513983716, "node_id": "MDU6SXNzdWU1MTM5ODM3MTY=", "number": 890, "title": "pwhash_scrypt test fails (escrypt_kdf_nosse) in mmap with invalid mem size", "user": {"login": "ciprian-barbu", "id": 3483416, "node_id": "MDQ6VXNlcjM0ODM0MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3483416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciprian-barbu", "html_url": "https://github.com/ciprian-barbu", "followers_url": "https://api.github.com/users/ciprian-barbu/followers", "following_url": "https://api.github.com/users/ciprian-barbu/following{/other_user}", "gists_url": "https://api.github.com/users/ciprian-barbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciprian-barbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciprian-barbu/subscriptions", "organizations_url": "https://api.github.com/users/ciprian-barbu/orgs", "repos_url": "https://api.github.com/users/ciprian-barbu/repos", "events_url": "https://api.github.com/users/ciprian-barbu/events{/privacy}", "received_events_url": "https://api.github.com/users/ciprian-barbu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1071256641, "node_id": "MDU6TGFiZWwxMDcxMjU2NjQx", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/old%20version", "name": "old version", "color": "f2ca74", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-29T14:58:16Z", "updated_at": "2020-01-28T00:37:38Z", "closed_at": "2019-10-29T16:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is related to two other closed issues:\r\nhttps://github.com/jedisct1/libsodium/issues/721\r\nhttps://github.com/jedisct1/libsodium/issues/749\r\n\r\nI encountered this problem on an aarch64 server, running  Ubuntu 16.04, both in a Docker container and baremetal. First I fixed the ulimit max_memlock problem, increasing from 64k to 16384k. This made the test pass on one server, but when I switched to a different server I started getting memory depletion, as described on the second bug report mentioned above.\r\n\r\nI started debugging the actual test case and found the following:\r\n- the failing test case is always the same, tv3, test number 30 (starting from 0): \"$7$8zzzzz/.....lgPchkGHqbeONR\r\n- on these server there is no SSE support (at least not as libsodium can use), which causes escrypt_r to call escrypt_kdf_nosse\r\n- escrypt_kdf_nosse receives some very nasty parameters, r=1073741823, p=1, N_log2=10\r\n- the total amount of memory computed as needed is 141149805084352 (about 128 TB!!!!)\r\n- the alloc_region function calls mmap, passing this huge param as size, but also specifying MAP_POPULATE flag\r\n- under \"normal\" circumstances, this mmap would fail, but in some special conditions this causes mmap to try and not only create memory pages, but also to reserve them into memory. There is no sane configuration that can ofer 128 TB of memory\r\n\r\nSo here is the tricky part. On my second aarch64 server we used to run some virtualized work (Fuel/Openstack) which for some reason made necessary to specify a special vm.memory_overcommit value of 1. This means that the kernel will no longer perform sanity checks for mmap like syscalls. This is why in this case mmap will try to allocate and map the pages into memory.\r\n\r\nI'm not sure whether the purpose of the test case is to verify situations like this, where an invalid encrypted text would require allocating an insane and incorrect amount of memory, but when it's also coupled with this kind of sysctl config for memory_overcommit, I consider it to be a vulnerability.\r\n\r\nI'm also attaching a file with my debug session.\r\n[libsodium_pwhash_scrypt_dbg.txt](https://github.com/jedisct1/libsodium/files/3784186/libsodium_pwhash_scrypt_dbg.txt)\r\n\r\nThanks and regards,\r\n/Ciprian\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/889", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/889/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/889/events", "html_url": "https://github.com/jedisct1/libsodium/issues/889", "id": 511464201, "node_id": "MDU6SXNzdWU1MTE0NjQyMDE=", "number": 889, "title": "Segmentation fault when running cross-compiled version on 32bit", "user": {"login": "hstock", "id": 84173, "node_id": "MDQ6VXNlcjg0MTcz", "avatar_url": "https://avatars0.githubusercontent.com/u/84173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hstock", "html_url": "https://github.com/hstock", "followers_url": "https://api.github.com/users/hstock/followers", "following_url": "https://api.github.com/users/hstock/following{/other_user}", "gists_url": "https://api.github.com/users/hstock/gists{/gist_id}", "starred_url": "https://api.github.com/users/hstock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hstock/subscriptions", "organizations_url": "https://api.github.com/users/hstock/orgs", "repos_url": "https://api.github.com/users/hstock/repos", "events_url": "https://api.github.com/users/hstock/events{/privacy}", "received_events_url": "https://api.github.com/users/hstock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-23T17:20:27Z", "updated_at": "2020-02-04T00:37:36Z", "closed_at": "2019-11-05T01:13:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cross-compiled for i686 and did run the resulting library in a docker container containing 32bit userland.\r\n\r\n`crypto_box_seal` crashes with a segmentation fault:\r\n\r\n```\r\n#0  0xf72dfd78 in _mm_loadu_si128 (ctx=0xffedadf8, m=<value optimized out>, c=<value optimized out>, bytes=<value optimized out>)\r\n    at /opt/sdks/ibernd/slots/i686generic/6.7/bin/../lib/gcc/i686-oe-linux/4.5.3/include/emmintrin.h:685\r\n#1  salsa20_encrypt_bytes (ctx=0xffedadf8, m=<value optimized out>, c=<value optimized out>, bytes=<value optimized out>) at crypto_stream/salsa20/xmm6int/u1.h:3\r\n#2  0xf72e0680 in stream_sse2_xor_ic (c=0xffedaff0 \"\", m=0xffedaff0 \"\", mlen=64, n=0xffedb1f8 \"\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\", ic=0, \r\n    k=0xffedb030 \"\\262\\032n\\032\\215\\026\\f\\263\\067Y\\345\\265u\\264\\002\\202<q\\265\\246\\326=\\232\\n\\330\\314\\323\\021\\272SL\u06b7\\034\\364@J?\\244\\216\u03ee\\200\\207Oc\\027\\177\\270\\f/\\367\\360\\260\\355\\377\\377\\377\\377\\377\\234\\260\\355\\377\\327\\373)\", <incomplete sequence \\367>) at crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c:110\r\n#3  0xf72d1334 in crypto_stream_salsa20_xor (c=0xffedaff0 \"\", m=0xffedaff0 \"\", mlen=64, n=0xffedb1f8 \"\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\", \r\n    k=0xffedb030 \"\\262\\032n\\032\\215\\026\\f\\263\\067Y\\345\\265u\\264\\002\\202<q\\265\\246\\326=\\232\\n\\330\\314\\323\\021\\272SL\u06b7\\034\\364@J?\\244\\216\u03ee\\200\\207Oc\\027\\177\\270\\f/\\367\\360\\260\\355\\377\\377\\377\\377\\377\\234\\260\\355\\377\\327\\373)\", <incomplete sequence \\367>) at crypto_stream/salsa20/stream_salsa20.c:68\r\n#4  0xf72cc66d in crypto_secretbox_detached (c=0x98e5a00 \"\", mac=0x98e59f0 \"\", m=0xf740ce74 \"Quiet, quiet.  Quiet!  There are ways of telling whether she is a witch.\", mlen=72, \r\n    n=0xffedb1e8 \"\\340\\377\\037\\006\\267\\260\\304\\315\\302n\\210\\222\\367\\376\\245\\325\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\", \r\n    k=0xffedb0f0 \"!\\272?\\246\\225e\\216Qp\\336\\277\\266\\263\\235O\\227S\\226\\070T\\301\\210\\276\\n\\031\\210\\300C\\371\\233J\\213\\267\\034\\364@\\270\\f/\\367\\270\\f/\\367<\\261\\355\\377\\270\\f/\\367\\350\\261\\355\\377\\250\\261\\355\\377\\\\\\261\\355\\377\\200\\375)\", <incomplete sequence \\367>) at crypto_secretbox/crypto_secretbox_easy.c:46\r\n#5  0xf729fbd7 in crypto_box_detached_afternm (c=0x98e5a00 \"\", mac=0x98e59f0 \"\", m=0xf740ce74 \"Quiet, quiet.  Quiet!  There are ways of telling whether she is a witch.\", mlen=72, \r\n    n=0xffedb1e8 \"\\340\\377\\037\\006\\267\\260\\304\\315\\302n\\210\\222\\367\\376\\245\\325\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\", \r\n    k=0xffedb0f0 \"!\\272?\\246\\225e\\216Qp\\336\\277\\266\\263\\235O\\227S\\226\\070T\\301\\210\\276\\n\\031\\210\\300C\\371\\233J\\213\\267\\034\\364@\\270\\f/\\367\\270\\f/\\367<\\261\\355\\377\\270\\f/\\367\\350\\261\\355\\377\\250\\261\\355\\377\\\\\\261\\355\\377\\200\\375)\", <incomplete sequence \\367>) at crypto_box/crypto_box_easy.c:17\r\n#6  0xf729fc80 in crypto_box_detached (c=0x98e5a00 \"\", mac=0x98e59f0 \"\", m=0xf740ce74 \"Quiet, quiet.  Quiet!  There are ways of telling whether she is a witch.\", mlen=72, \r\n    n=0xffedb1e8 \"\\340\\377\\037\\006\\267\\260\\304\\315\\302n\\210\\222\\367\\376\\245\\325\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\", \r\n    pk=0xf7263edc \"\\037{:\\256\\264\\213\\203\\\"|\\325\\301u-n\\300\\005.\\321\\071@\\204u2\\367\\371\\327\\063\\277\\326\\345`\\n\", \r\n    sk=0xffedb1a8 \"\\376^\\206a\\355_{\\355\\070i\\033\\246\\062\\235\\217\\a1M\\234\\213\\t\\226I\\260T\u01f1g}kO\\260w\\235\\266E\\203\\314\\350A2)\\234X\u6eb2u\\311\\037\\216\\t]\\202\\241G\\324\u0232\\n\\n\\346<\\032\\340\\377\\037\\006\\267\\260\\304\\315\\302n\\210\\222\\367\\376\\245\\325\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\") at crypto_box/crypto_box_easy.c:33\r\n#7  0xf729fd80 in crypto_box_easy (c=0x98e59f0 \"\", m=0xf740ce74 \"Quiet, quiet.  Quiet!  There are ways of telling whether she is a witch.\", mlen=72, \r\n    n=0xffedb1e8 \"\\340\\377\\037\\006\\267\\260\\304\\315\\302n\\210\\222\\367\\376\\245\\325\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\", \r\n    pk=0xf7263edc \"\\037{:\\256\\264\\213\\203\\\"|\\325\\301u-n\\300\\005.\\321\\071@\\204u2\\367\\371\\327\\063\\277\\326\\345`\\n\", \r\n    sk=0xffedb1a8 \"\\376^\\206a\\355_{\\355\\070i\\033\\246\\062\\235\\217\\a1M\\234\\213\\t\\226I\\260T\u01f1g}kO\\260w\\235\\266E\\203\\314\\350A2)\\234X\u6eb2u\\311\\037\\216\\t]\\202\\241G\\324\u0232\\n\\n\\346<\\032\\340\\377\\037\\006\\267\\260\\304\\315\\302n\\210\\222\\367\\376\\245\\325\\317\\367\\276\\360\\016\\005\\031\\f\\267\\034\\364@\\004\") at crypto_box/crypto_box_easy.c:59\r\n#8  0xf72a01a2 in crypto_box_seal (c=0x98e59d0 \"w\\235\\266E\\203\\314\\350A2)\\234X\u6eb2u\\311\\037\\216\\t]\\202\\241G\\324\u0232\\n\\n\\346<\\032\", \r\n    m=0xf740ce74 \"Quiet, quiet.  Quiet!  There are ways of telling whether she is a witch.\", mlen=72, \r\n    pk=0xf7263edc \"\\037{:\\256\\264\\213\\203\\\"|\\325\\301u-n\\300\\005.\\321\\071@\\204u2\\367\\371\\327\\063\\277\\326\\345`\\n\") at crypto_box/crypto_box_seal.c:37\r\n\r\n```\r\nThis is not a problem when compiling without assembler support.\r\n\r\nAny ideas how to debug further?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/888", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/888/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/888/events", "html_url": "https://github.com/jedisct1/libsodium/issues/888", "id": 511198984, "node_id": "MDU6SXNzdWU1MTExOTg5ODQ=", "number": 888, "title": "Add bcrypt to libsodium", "user": {"login": "timoh6", "id": 851306, "node_id": "MDQ6VXNlcjg1MTMwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/851306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timoh6", "html_url": "https://github.com/timoh6", "followers_url": "https://api.github.com/users/timoh6/followers", "following_url": "https://api.github.com/users/timoh6/following{/other_user}", "gists_url": "https://api.github.com/users/timoh6/gists{/gist_id}", "starred_url": "https://api.github.com/users/timoh6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timoh6/subscriptions", "organizations_url": "https://api.github.com/users/timoh6/orgs", "repos_url": "https://api.github.com/users/timoh6/repos", "events_url": "https://api.github.com/users/timoh6/events{/privacy}", "received_events_url": "https://api.github.com/users/timoh6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-23T09:35:35Z", "updated_at": "2020-01-22T00:37:38Z", "closed_at": "2019-10-23T10:08:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the earlier tweets by @jmgosney and @Sc00bzT, it seems bcrypt is still the recommended password hashing function for interactive requirements (web applications).\r\n\r\nhttps://twitter.com/TerahashCorp/status/1155129705034653698\r\nhttps://twitter.com/Sc00bzT/status/1164213102071734272\r\n\r\nIn addition, yescrypt has the needed tunable cache hardness, but maybe adding bcrypt for now is more conservative movement. But on the other hand, yescrypt is backwards compatible with scrypt, updating libsodium's scrypt to yescrypt could make sense.\r\n\r\nThoughts?\r\n\r\n(found https://github.com/jedisct1/libsodium/issues/267 but couldn't comment on it anymore)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/885", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/885/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/885/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/885/events", "html_url": "https://github.com/jedisct1/libsodium/issues/885", "id": 506112537, "node_id": "MDU6SXNzdWU1MDYxMTI1Mzc=", "number": 885, "title": "why does not use cmake?", "user": {"login": "cyberwave", "id": 7488935, "node_id": "MDQ6VXNlcjc0ODg5MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7488935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberwave", "html_url": "https://github.com/cyberwave", "followers_url": "https://api.github.com/users/cyberwave/followers", "following_url": "https://api.github.com/users/cyberwave/following{/other_user}", "gists_url": "https://api.github.com/users/cyberwave/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberwave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberwave/subscriptions", "organizations_url": "https://api.github.com/users/cyberwave/orgs", "repos_url": "https://api.github.com/users/cyberwave/repos", "events_url": "https://api.github.com/users/cyberwave/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberwave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-12T01:31:54Z", "updated_at": "2020-01-11T00:37:38Z", "closed_at": "2019-10-12T07:01:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "why this project have no cmake to produce Makefile?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/883", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/883/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/883/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/883/events", "html_url": "https://github.com/jedisct1/libsodium/issues/883", "id": 505495886, "node_id": "MDU6SXNzdWU1MDU0OTU4ODY=", "number": 883, "title": "Disabling Features/Packages", "user": {"login": "Bumblebeena", "id": 40010156, "node_id": "MDQ6VXNlcjQwMDEwMTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/40010156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bumblebeena", "html_url": "https://github.com/Bumblebeena", "followers_url": "https://api.github.com/users/Bumblebeena/followers", "following_url": "https://api.github.com/users/Bumblebeena/following{/other_user}", "gists_url": "https://api.github.com/users/Bumblebeena/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bumblebeena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bumblebeena/subscriptions", "organizations_url": "https://api.github.com/users/Bumblebeena/orgs", "repos_url": "https://api.github.com/users/Bumblebeena/repos", "events_url": "https://api.github.com/users/Bumblebeena/events{/privacy}", "received_events_url": "https://api.github.com/users/Bumblebeena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-10T20:33:38Z", "updated_at": "2020-01-09T00:37:34Z", "closed_at": "2019-10-10T20:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "My goal is to compile libsodium for arm with as small of a footprint as possible. In my case that means I only want it to contain the crypto algorithms and features I know I'm going to use. I have successfully built the library for arm using the the build scripts included in the dist-build folder (very helpful btw!) which include the `./configure` flag `--enable-minimal`. I noticed that there is also a `./configure` flag for enabling/disabling specific packages and features. I tried `./configure --enable-<algo_I_want_to_use>` but based on the size of the built library this did not appear to implicitly exclude the algos I _didn't_ want to use. This appears to be similar to the build process of openssl in that one must use these flags to disable every feature and algorithm they don't intend to use.\r\n\r\nSo then my question is this: do you have a current list of every optional feature/package? (or is this in the documentation and I'm being a noob right now?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/882", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/882/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/882/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/882/events", "html_url": "https://github.com/jedisct1/libsodium/issues/882", "id": 504665096, "node_id": "MDU6SXNzdWU1MDQ2NjUwOTY=", "number": 882, "title": "Libsodium under memsan", "user": {"login": "Erop147", "id": 1052319, "node_id": "MDQ6VXNlcjEwNTIzMTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1052319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erop147", "html_url": "https://github.com/Erop147", "followers_url": "https://api.github.com/users/Erop147/followers", "following_url": "https://api.github.com/users/Erop147/following{/other_user}", "gists_url": "https://api.github.com/users/Erop147/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erop147/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erop147/subscriptions", "organizations_url": "https://api.github.com/users/Erop147/orgs", "repos_url": "https://api.github.com/users/Erop147/repos", "events_url": "https://api.github.com/users/Erop147/events{/privacy}", "received_events_url": "https://api.github.com/users/Erop147/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T13:48:38Z", "updated_at": "2020-01-08T00:37:36Z", "closed_at": "2019-10-09T14:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using libsodium crypto_secretbox_easy/crypto_secretbox_open_easy in my project and I have an issue while testing my app with memsan enabled when crypto_stream_salsa20_xmm6_implementation is chosen (https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_stream/salsa20/stream_salsa20.c#L81).\r\nIt seems that initializing (or unpoisoning with __msan_unpoison) block0 from https://github.com/jedisct1/libsodium/blob/master/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c#L89 fixes the problem.\r\n\r\nAlso tried to run builtin tests with memsan, using following command: `env CC=clang-8 CFLAGS=\"-fsanitize=memory -g\" ./configure && make check`\r\n11 tests broke, the results in the attachment\r\n[test-suite.log](https://github.com/jedisct1/libsodium/files/3707632/test-suite.log)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/881", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/881/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/881/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/881/events", "html_url": "https://github.com/jedisct1/libsodium/issues/881", "id": 504605326, "node_id": "MDU6SXNzdWU1MDQ2MDUzMjY=", "number": 881, "title": "[Xcode 11] [Catalina] [macOS] [Segmentation fault]", "user": {"login": "jedisct1", "id": 124872, "node_id": "MDQ6VXNlcjEyNDg3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/124872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedisct1", "html_url": "https://github.com/jedisct1", "followers_url": "https://api.github.com/users/jedisct1/followers", "following_url": "https://api.github.com/users/jedisct1/following{/other_user}", "gists_url": "https://api.github.com/users/jedisct1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedisct1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedisct1/subscriptions", "organizations_url": "https://api.github.com/users/jedisct1/orgs", "repos_url": "https://api.github.com/users/jedisct1/repos", "events_url": "https://api.github.com/users/jedisct1/events{/privacy}", "received_events_url": "https://api.github.com/users/jedisct1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T12:02:11Z", "updated_at": "2020-02-06T00:08:01Z", "closed_at": "2019-11-07T16:52:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Just a pinned issue in order to limit the number of duplicate reports we may get now that Catalina is out.\r\n\r\n__TL;DR: Xcode 11 generates invalid code. Don't use it.__\r\n\r\nOn old libsodium versions, the libsodium test suite fails when compiled with Xcode 11 (from beta 5 to Xcode 11 final). \r\n\r\nXcode 11 is buggy and generates invalid code. This affects more than libsodium - other examples include [OpenZFS](https://github.com/openzfsonosx/zfs/issues/721), oniguruma, ffmpeg, libbluray, x265 and gcc. This may affect your application, and you may not know unless an extensive test suite hits it by accident.\r\n\r\nThat issue was reported to Apple back in August, when Xcode was still in beta. I independently reported it later on the developer forums:\r\n\r\nhttps://forums.developer.apple.com/thread/121887\r\n\r\nIf you are using `libsodium-1.0.18-stable` as is has always been [recommended](https://download.libsodium.org/doc/installation), the test suite passes.\r\n\r\nHowever, given that the first releases of Xcode 11 don't seem to have received much testing before being tagged, it is not something we can recommend for any security critical code.\r\n\r\nWhat can you do?\r\n\r\n1) Report it to Apple.\r\n\r\n2) If you really want/need to use Xcode 11 to compile libsodium, use the `stable` branch or `stable` releases of libsodium. The Xcode bug appeared after the base `1.0.18` version was released, so workarounds for compiler bugs like these go to maintenance releases. In Rust, use the [`libsodium-sys-stable`](https://crates.io/crates/libsodium-sys-stable) crate instead of `libsodium-sys`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/880", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/880/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/880/events", "html_url": "https://github.com/jedisct1/libsodium/issues/880", "id": 504520511, "node_id": "MDU6SXNzdWU1MDQ1MjA1MTE=", "number": 880, "title": "Segmentation fault", "user": {"login": "mattproch", "id": 20935135, "node_id": "MDQ6VXNlcjIwOTM1MTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/20935135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattproch", "html_url": "https://github.com/mattproch", "followers_url": "https://api.github.com/users/mattproch/followers", "following_url": "https://api.github.com/users/mattproch/following{/other_user}", "gists_url": "https://api.github.com/users/mattproch/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattproch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattproch/subscriptions", "organizations_url": "https://api.github.com/users/mattproch/orgs", "repos_url": "https://api.github.com/users/mattproch/repos", "events_url": "https://api.github.com/users/mattproch/events{/privacy}", "received_events_url": "https://api.github.com/users/mattproch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25457320, "node_id": "MDU6TGFiZWwyNTQ1NzMyMA==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 1071256641, "node_id": "MDU6TGFiZWwxMDcxMjU2NjQx", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/old%20version", "name": "old version", "color": "f2ca74", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T09:17:29Z", "updated_at": "2020-01-08T00:37:34Z", "closed_at": "2019-10-09T10:06:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "MacOS 10.15 Catalina\r\nAll versions of libsodium, but Mamp comes with v1.0.16 and it works there.\r\n\r\n\r\n../../build-aux/test-driver: line 107: 58195 Segmentation fault: 11  \"$@\" > $log_file 2>&1\r\nFAIL: pwhash_argon2i\r\n../../build-aux/test-driver: line 107: 58219 Segmentation fault: 11  \"$@\" > $log_file 2>&1\r\nFAIL: pwhash_argon2id", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/879", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/879/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/879/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/879/events", "html_url": "https://github.com/jedisct1/libsodium/issues/879", "id": 504365534, "node_id": "MDU6SXNzdWU1MDQzNjU1MzQ=", "number": 879, "title": "Ed25519 strange behavior on wasm32-wasi", "user": {"login": "kpp", "id": 467709, "node_id": "MDQ6VXNlcjQ2NzcwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/467709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpp", "html_url": "https://github.com/kpp", "followers_url": "https://api.github.com/users/kpp/followers", "following_url": "https://api.github.com/users/kpp/following{/other_user}", "gists_url": "https://api.github.com/users/kpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpp/subscriptions", "organizations_url": "https://api.github.com/users/kpp/orgs", "repos_url": "https://api.github.com/users/kpp/repos", "events_url": "https://api.github.com/users/kpp/events{/privacy}", "received_events_url": "https://api.github.com/users/kpp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-09T01:57:30Z", "updated_at": "2020-01-08T00:37:35Z", "closed_at": "2019-10-09T10:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Potential bugs in `crypto_sign_ed25519` and `crypto_sign_ed25519_detached`:\r\n\r\nSee https://github.com/sodiumoxide/sodiumoxide/pull/376#issuecomment-539775557\r\n\r\nWith `WASMER_DIR=${HOME}/.wasmer PATH=${HOME}/.wasmer/bin:/opt/wasi-sdk/bin:${HOME}/.cargo/bin:$PATH dist-build/wasm32-wasi.sh` ed25519 fail, with https://github.com/sodiumoxide/sodiumoxide/pull/379 they pass.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/878", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/878/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/878/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/878/events", "html_url": "https://github.com/jedisct1/libsodium/issues/878", "id": 503971629, "node_id": "MDU6SXNzdWU1MDM5NzE2Mjk=", "number": 878, "title": "pwhash_argon2i/d Segmentation fault", "user": {"login": "ghazel", "id": 31402, "node_id": "MDQ6VXNlcjMxNDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/31402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghazel", "html_url": "https://github.com/ghazel", "followers_url": "https://api.github.com/users/ghazel/followers", "following_url": "https://api.github.com/users/ghazel/following{/other_user}", "gists_url": "https://api.github.com/users/ghazel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghazel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghazel/subscriptions", "organizations_url": "https://api.github.com/users/ghazel/orgs", "repos_url": "https://api.github.com/users/ghazel/repos", "events_url": "https://api.github.com/users/ghazel/events{/privacy}", "received_events_url": "https://api.github.com/users/ghazel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-08T10:52:23Z", "updated_at": "2020-01-07T00:38:29Z", "closed_at": "2019-10-08T14:10:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "started after installing macOS Catalina (previous macOS with same Xcode worked fine). Happens on `1.0.18` and `master`. \r\n\r\n```\r\n../../build-aux/test-driver: line 107: 52089 Segmentation fault: 11  \"$@\" > $log_file 2>&1\r\nFAIL: pwhash_argon2i\r\n../../build-aux/test-driver: line 107: 52095 Segmentation fault: 11  \"$@\" > $log_file 2>&1\r\nFAIL: pwhash_argon2id\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/877", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/877/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/877/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/877/events", "html_url": "https://github.com/jedisct1/libsodium/issues/877", "id": 503717167, "node_id": "MDU6SXNzdWU1MDM3MTcxNjc=", "number": 877, "title": "Migrate LGTM.com installation from OAuth to GitHub App", "user": {"login": "LGTM-badger", "id": 42374550, "node_id": "MDQ6VXNlcjQyMzc0NTUw", "avatar_url": "https://avatars2.githubusercontent.com/u/42374550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LGTM-badger", "html_url": "https://github.com/LGTM-badger", "followers_url": "https://api.github.com/users/LGTM-badger/followers", "following_url": "https://api.github.com/users/LGTM-badger/following{/other_user}", "gists_url": "https://api.github.com/users/LGTM-badger/gists{/gist_id}", "starred_url": "https://api.github.com/users/LGTM-badger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LGTM-badger/subscriptions", "organizations_url": "https://api.github.com/users/LGTM-badger/orgs", "repos_url": "https://api.github.com/users/LGTM-badger/repos", "events_url": "https://api.github.com/users/LGTM-badger/events{/privacy}", "received_events_url": "https://api.github.com/users/LGTM-badger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T22:08:52Z", "updated_at": "2020-01-06T00:37:32Z", "closed_at": "2019-10-07T23:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi There,\r\n\r\nThis project is still using an old implementation of LGTM's automated code review, which has now been disabled. To continue using automated code review, and receive checks on your Pull Requests, please [install the GitHub App](https://github.com/apps/lgtm-com/installations/new) on this repository.\r\n\r\nThanks,\r\nThe LGTM Team", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/873", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/873/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/873/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/873/events", "html_url": "https://github.com/jedisct1/libsodium/issues/873", "id": 496742816, "node_id": "MDU6SXNzdWU0OTY3NDI4MTY=", "number": 873, "title": "Any suggest for building dlls for .Net P/Invoke without msvc dll dependencies ?", "user": {"login": "GF-Huang", "id": 4510984, "node_id": "MDQ6VXNlcjQ1MTA5ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GF-Huang", "html_url": "https://github.com/GF-Huang", "followers_url": "https://api.github.com/users/GF-Huang/followers", "following_url": "https://api.github.com/users/GF-Huang/following{/other_user}", "gists_url": "https://api.github.com/users/GF-Huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/GF-Huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GF-Huang/subscriptions", "organizations_url": "https://api.github.com/users/GF-Huang/orgs", "repos_url": "https://api.github.com/users/GF-Huang/repos", "events_url": "https://api.github.com/users/GF-Huang/events{/privacy}", "received_events_url": "https://api.github.com/users/GF-Huang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-22T07:15:24Z", "updated_at": "2020-01-08T00:37:35Z", "closed_at": "2019-10-09T12:38:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have read #614, but I only use `libsodium.dll` for my .net app, will this cause the issues whick talks in #614 ?\r\n\r\nAnd I had try to build Dll with /MT, but get the similar result like #246 : \r\n`error LNK2019: unresolved external symbol __imp___ftime64`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/872", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/872/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/872/events", "html_url": "https://github.com/jedisct1/libsodium/issues/872", "id": 494762740, "node_id": "MDU6SXNzdWU0OTQ3NjI3NDA=", "number": 872, "title": "How to build for wasm-wasi?", "user": {"login": "kpp", "id": 467709, "node_id": "MDQ6VXNlcjQ2NzcwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/467709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpp", "html_url": "https://github.com/kpp", "followers_url": "https://api.github.com/users/kpp/followers", "following_url": "https://api.github.com/users/kpp/following{/other_user}", "gists_url": "https://api.github.com/users/kpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpp/subscriptions", "organizations_url": "https://api.github.com/users/kpp/orgs", "repos_url": "https://api.github.com/users/kpp/repos", "events_url": "https://api.github.com/users/kpp/events{/privacy}", "received_events_url": "https://api.github.com/users/kpp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-17T17:46:02Z", "updated_at": "2019-12-28T00:37:42Z", "closed_at": "2019-09-28T19:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "In https://github.com/sodiumoxide/sodiumoxide/issues/347 we want to embed libsodium.wasm into sodiumoxide. Where can I find prebuilt binaries for wasm?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/870", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/870/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/870/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/870/events", "html_url": "https://github.com/jedisct1/libsodium/issues/870", "id": 493785119, "node_id": "MDU6SXNzdWU0OTM3ODUxMTk=", "number": 870, "title": "Why crypto_secretstream_chacha20poly1305 is not available?", "user": {"login": "skerkour", "id": 6172808, "node_id": "MDQ6VXNlcjYxNzI4MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6172808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skerkour", "html_url": "https://github.com/skerkour", "followers_url": "https://api.github.com/users/skerkour/followers", "following_url": "https://api.github.com/users/skerkour/following{/other_user}", "gists_url": "https://api.github.com/users/skerkour/gists{/gist_id}", "starred_url": "https://api.github.com/users/skerkour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skerkour/subscriptions", "organizations_url": "https://api.github.com/users/skerkour/orgs", "repos_url": "https://api.github.com/users/skerkour/repos", "events_url": "https://api.github.com/users/skerkour/events{/privacy}", "received_events_url": "https://api.github.com/users/skerkour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-09-15T20:54:33Z", "updated_at": "2019-12-15T00:37:26Z", "closed_at": "2019-09-15T23:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all thank you for this great library!\r\n\r\nWhy `crypto_secretstream_chacha20poly1305` or `crypto_secretstream_chacha20poly1305_ietf` are not available?\r\n\r\nIt could be useful if someone want to use an IETF standard for stream authenticated encryption ? Or am I missing something?\r\n\r\nAlso, the purpose of XChaCha20 is to encrypt very large chunks of data. And the purpose of `secretstream` is to split a large piece of data into smaller chunks. So I may be missing something but I find it weird to use XChaCha20 instead of ChaCha20.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/864", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/864/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/864/events", "html_url": "https://github.com/jedisct1/libsodium/issues/864", "id": 492024878, "node_id": "MDU6SXNzdWU0OTIwMjQ4Nzg=", "number": 864, "title": "use in iOS", "user": {"login": "hamidire", "id": 8036945, "node_id": "MDQ6VXNlcjgwMzY5NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8036945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamidire", "html_url": "https://github.com/hamidire", "followers_url": "https://api.github.com/users/hamidire/followers", "following_url": "https://api.github.com/users/hamidire/following{/other_user}", "gists_url": "https://api.github.com/users/hamidire/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamidire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamidire/subscriptions", "organizations_url": "https://api.github.com/users/hamidire/orgs", "repos_url": "https://api.github.com/users/hamidire/repos", "events_url": "https://api.github.com/users/hamidire/events{/privacy}", "received_events_url": "https://api.github.com/users/hamidire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-11T05:29:37Z", "updated_at": "2019-12-15T00:37:25Z", "closed_at": "2019-09-15T23:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use this lib in an iOS application. I have never used a c lib in iOS. is there any help on how we can use this lib in iOS?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/861", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/861/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/861/events", "html_url": "https://github.com/jedisct1/libsodium/issues/861", "id": 489806549, "node_id": "MDU6SXNzdWU0ODk4MDY1NDk=", "number": 861, "title": "Pairing-based Cryptography", "user": {"login": "riemann89", "id": 12006494, "node_id": "MDQ6VXNlcjEyMDA2NDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/12006494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riemann89", "html_url": "https://github.com/riemann89", "followers_url": "https://api.github.com/users/riemann89/followers", "following_url": "https://api.github.com/users/riemann89/following{/other_user}", "gists_url": "https://api.github.com/users/riemann89/gists{/gist_id}", "starred_url": "https://api.github.com/users/riemann89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riemann89/subscriptions", "organizations_url": "https://api.github.com/users/riemann89/orgs", "repos_url": "https://api.github.com/users/riemann89/repos", "events_url": "https://api.github.com/users/riemann89/events{/privacy}", "received_events_url": "https://api.github.com/users/riemann89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-05T14:34:09Z", "updated_at": "2019-12-05T00:37:26Z", "closed_at": "2019-09-05T16:43:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is part of the project to implement pairing-based cryptography schemes? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/860", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/860/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/860/events", "html_url": "https://github.com/jedisct1/libsodium/issues/860", "id": 487531674, "node_id": "MDU6SXNzdWU0ODc1MzE2NzQ=", "number": 860, "title": "How integrate libsodium on android application?", "user": {"login": "SebastianoLpwave", "id": 35693239, "node_id": "MDQ6VXNlcjM1NjkzMjM5", "avatar_url": "https://avatars3.githubusercontent.com/u/35693239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SebastianoLpwave", "html_url": "https://github.com/SebastianoLpwave", "followers_url": "https://api.github.com/users/SebastianoLpwave/followers", "following_url": "https://api.github.com/users/SebastianoLpwave/following{/other_user}", "gists_url": "https://api.github.com/users/SebastianoLpwave/gists{/gist_id}", "starred_url": "https://api.github.com/users/SebastianoLpwave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SebastianoLpwave/subscriptions", "organizations_url": "https://api.github.com/users/SebastianoLpwave/orgs", "repos_url": "https://api.github.com/users/SebastianoLpwave/repos", "events_url": "https://api.github.com/users/SebastianoLpwave/events{/privacy}", "received_events_url": "https://api.github.com/users/SebastianoLpwave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-30T15:02:31Z", "updated_at": "2019-11-29T00:36:54Z", "closed_at": "2019-08-30T15:27:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\ni need to update an old version of libsodium  \"kalium-jni-1.0.0-SNAPSHOT.jar\". \r\nSomeone can tell me how to create the jar from the library? \r\n\r\nThanks,\r\n\r\nSebastiano", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/859", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/859/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/859/events", "html_url": "https://github.com/jedisct1/libsodium/issues/859", "id": 487010541, "node_id": "MDU6SXNzdWU0ODcwMTA1NDE=", "number": 859, "title": "Libsodium fails on OSS-Fuzz", "user": {"login": "guidovranken", "id": 6846644, "node_id": "MDQ6VXNlcjY4NDY2NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6846644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guidovranken", "html_url": "https://github.com/guidovranken", "followers_url": "https://api.github.com/users/guidovranken/followers", "following_url": "https://api.github.com/users/guidovranken/following{/other_user}", "gists_url": "https://api.github.com/users/guidovranken/gists{/gist_id}", "starred_url": "https://api.github.com/users/guidovranken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guidovranken/subscriptions", "organizations_url": "https://api.github.com/users/guidovranken/orgs", "repos_url": "https://api.github.com/users/guidovranken/repos", "events_url": "https://api.github.com/users/guidovranken/events{/privacy}", "received_events_url": "https://api.github.com/users/guidovranken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-08-29T14:56:32Z", "updated_at": "2019-11-29T00:36:54Z", "closed_at": "2019-08-30T20:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed this because Cryptofuzz is failing as well.\r\n\r\nbacktrace is\r\n\r\n```\r\n(gdb) bt\r\n#0  0x0000000000000000 in ?? ()\r\n#1  0x00000000005240e3 in __interceptor_getrandom () at /src/llvm/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:9557\r\n#2  0x0000000000692c21 in _randombytes_linux_getrandom () at randombytes/sysrandom/randombytes_sysrandom.c:233\r\n#3  0x0000000000692782 in randombytes_linux_getrandom () at randombytes/sysrandom/randombytes_sysrandom.c:250\r\n#4  0x00000000006925c7 in randombytes_sysrandom_init () at randombytes/sysrandom/randombytes_sysrandom.c:270\r\n#5  0x000000000069232a in randombytes_sysrandom_stir () at randombytes/sysrandom/randombytes_sysrandom.c:298\r\n#6  0x0000000000641a53 in randombytes_stir () at randombytes/randombytes.c:82\r\n#7  0x0000000000641640 in sodium_init () at sodium/core.c:40\r\n#8  0x000000000063329c in cryptofuzz::module::libsodium::libsodium() () at module.cpp:11\r\n#9  0x00000000005f07c1 in std::__1::__shared_ptr_emplace<cryptofuzz::module::libsodium, std::__1::allocator<cryptofuzz::module::libsodium> >::__shared_ptr_emplace(std::__1::allocator<cryptofuzz::module::libsodium>) () at /usr/local/bin/../include/c++/v1/memory:3538\r\n#10 0x00000000005f0307 in std::__1::shared_ptr<cryptofuzz::module::libsodium> std::__1::shared_ptr<cryptofuzz::module::libsodium>::make_shared<>() () at /usr/local/bin/../include/c++/v1/memory:4202\r\n#11 0x00000000005e9ab9 in std::__1::make_shared<cryptofuzz::module::libsodium> () at /usr/local/bin/../include/c++/v1/memory:4581\r\n#12 0x00000000005e8fde in LLVMFuzzerInitialize () at entry.cpp:110\r\n#13 0x000000000046b5ad in FuzzerDriver () at /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:615\r\n#14 0x0000000000496c73 in main () at /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19\r\n#15 0x00007ffff6ee5830 in __libc_start_main (main=0x496c50 <main>, argc=1, argv=0x7fffffffe0f8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe0e8)\r\n    at ../csu/libc-start.c:291\r\n#16 0x0000000000440a79 in _start ()\r\n```\r\n\r\nCompilation of libsodium also gives a compile warning:\r\n\r\n```\r\nStep #4: randombytes/sysrandom/randombytes_sysrandom.c:233:18: warning: implicit declaration of function 'getrandom' is invalid in C99 [-Wimplicit-function-declaration]\r\nStep #4:         readnb = getrandom(buf, size, 0);\r\nStep #4:                  ^\r\nStep #4: 1 warning generated.\r\nStep #4: randombytes/internal/randombytes_internal_random.c:219:18: warning: implicit declaration of function 'getrandom' is invalid in C99 [-Wimplicit-function-declaration]\r\nStep #4:         readnb = getrandom(buf, size, 0);\r\n```\r\n\r\nSee: https://oss-fuzz-build-logs.storage.googleapis.com/log-38462662-e510-434e-b51a-29c325266d07.txt\r\n\r\nPossibly something is wrong with your getrandom detection logic?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jedisct1/libsodium/issues/858", "repository_url": "https://api.github.com/repos/jedisct1/libsodium", "labels_url": "https://api.github.com/repos/jedisct1/libsodium/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/jedisct1/libsodium/issues/858/comments", "events_url": "https://api.github.com/repos/jedisct1/libsodium/issues/858/events", "html_url": "https://github.com/jedisct1/libsodium/issues/858", "id": 482014736, "node_id": "MDU6SXNzdWU0ODIwMTQ3MzY=", "number": 858, "title": "ec multiplication is slow", "user": {"login": "narodnik", "id": 19536664, "node_id": "MDQ6VXNlcjE5NTM2NjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/19536664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narodnik", "html_url": "https://github.com/narodnik", "followers_url": "https://api.github.com/users/narodnik/followers", "following_url": "https://api.github.com/users/narodnik/following{/other_user}", "gists_url": "https://api.github.com/users/narodnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/narodnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narodnik/subscriptions", "organizations_url": "https://api.github.com/users/narodnik/orgs", "repos_url": "https://api.github.com/users/narodnik/repos", "events_url": "https://api.github.com/users/narodnik/events{/privacy}", "received_events_url": "https://api.github.com/users/narodnik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 25457322, "node_id": "MDU6TGFiZWwyNTQ1NzMyMg==", "url": "https://api.github.com/repos/jedisct1/libsodium/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-18T16:57:03Z", "updated_at": "2019-11-17T00:37:07Z", "closed_at": "2019-08-18T17:46:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I wrote a benchmark which generates 100,000 scalar secrets then loops through them multiplying them by a point using `crypto_scalarmult_ed25519`.\r\n\r\nI compared the implementation here with the original djb NaCl and bitcoin-core libsecp256k1 library. Note: curve25519 is supposed to be faster than secp256k1. Here's my results:\r\n\r\n```\r\nlibsodium 25519 took: 13432 ms\r\nlibsodium 25519 done.\r\nnacl 25519 took: 6344 ms\r\nnacl 25519 done.\r\nsecp took: 7420 ms\r\nsecp done.\r\n```\r\n\r\nThis operation with libsodium is more than 2x slower than with nacl (benchmark compiled against amd64 build of nacl).", "performed_via_github_app": null, "score": 1.0}]}