{"total_count": 425, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/PyCQA/astroid/issues/828", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/828/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/828/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/828/events", "html_url": "https://github.com/PyCQA/astroid/issues/828", "id": 672301202, "node_id": "MDU6SXNzdWU2NzIzMDEyMDI=", "number": 828, "title": "jsonschema and pyvalid not installing at the same time due to six", "user": {"login": "Vaiibhavkejriwal", "id": 69070696, "node_id": "MDQ6VXNlcjY5MDcwNjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/69070696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaiibhavkejriwal", "html_url": "https://github.com/Vaiibhavkejriwal", "followers_url": "https://api.github.com/users/Vaiibhavkejriwal/followers", "following_url": "https://api.github.com/users/Vaiibhavkejriwal/following{/other_user}", "gists_url": "https://api.github.com/users/Vaiibhavkejriwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaiibhavkejriwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaiibhavkejriwal/subscriptions", "organizations_url": "https://api.github.com/users/Vaiibhavkejriwal/orgs", "repos_url": "https://api.github.com/users/Vaiibhavkejriwal/repos", "events_url": "https://api.github.com/users/Vaiibhavkejriwal/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaiibhavkejriwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-03T19:44:15Z", "updated_at": "2020-08-04T18:32:39Z", "closed_at": "2020-08-04T18:32:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "![Screenshot (11)](https://user-images.githubusercontent.com/69070696/89220766-c6f3fc00-d5ef-11ea-92e5-0fee50b5aa80.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/827", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/827/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/827/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/827/events", "html_url": "https://github.com/PyCQA/astroid/issues/827", "id": 672300156, "node_id": "MDU6SXNzdWU2NzIzMDAxNTY=", "number": 827, "title": "jsonchema and pyvalid not installing at the same time", "user": {"login": "Vaiibhavkejriwal", "id": 69070696, "node_id": "MDQ6VXNlcjY5MDcwNjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/69070696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaiibhavkejriwal", "html_url": "https://github.com/Vaiibhavkejriwal", "followers_url": "https://api.github.com/users/Vaiibhavkejriwal/followers", "following_url": "https://api.github.com/users/Vaiibhavkejriwal/following{/other_user}", "gists_url": "https://api.github.com/users/Vaiibhavkejriwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaiibhavkejriwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaiibhavkejriwal/subscriptions", "organizations_url": "https://api.github.com/users/Vaiibhavkejriwal/orgs", "repos_url": "https://api.github.com/users/Vaiibhavkejriwal/repos", "events_url": "https://api.github.com/users/Vaiibhavkejriwal/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaiibhavkejriwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-03T19:42:20Z", "updated_at": "2020-08-03T19:46:20Z", "closed_at": "2020-08-03T19:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/821", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/821/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/821/events", "html_url": "https://github.com/PyCQA/astroid/issues/821", "id": 665560797, "node_id": "MDU6SXNzdWU2NjU1NjA3OTc=", "number": 821, "title": "pylint doesn't work with isort 5.x.x", "user": {"login": "priv-kweihmann", "id": 46938494, "node_id": "MDQ6VXNlcjQ2OTM4NDk0", "avatar_url": "https://avatars1.githubusercontent.com/u/46938494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priv-kweihmann", "html_url": "https://github.com/priv-kweihmann", "followers_url": "https://api.github.com/users/priv-kweihmann/followers", "following_url": "https://api.github.com/users/priv-kweihmann/following{/other_user}", "gists_url": "https://api.github.com/users/priv-kweihmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/priv-kweihmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priv-kweihmann/subscriptions", "organizations_url": "https://api.github.com/users/priv-kweihmann/orgs", "repos_url": "https://api.github.com/users/priv-kweihmann/repos", "events_url": "https://api.github.com/users/priv-kweihmann/events{/privacy}", "received_events_url": "https://api.github.com/users/priv-kweihmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T10:29:19Z", "updated_at": "2020-07-26T13:45:36Z", "closed_at": "2020-07-26T13:45:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. pip3 install pylint\r\n2. pip3 install isort\r\n\r\n### Current behavior\r\n\r\n`pkg_resources.DistributionNotFound: The 'isort<5,>=4.2.5' distribution was not found and is required by pylint`\r\n\r\n### Expected behavior\r\n\r\npylint works the same as with version 4.x of isort\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/818", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/818/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/818/events", "html_url": "https://github.com/PyCQA/astroid/issues/818", "id": 656812402, "node_id": "MDU6SXNzdWU2NTY4MTI0MDI=", "number": 818, "title": "[brain] Numpy ufunc-s can work with non-ndarray arguments", "user": {"login": "eugene57", "id": 1482551, "node_id": "MDQ6VXNlcjE0ODI1NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1482551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene57", "html_url": "https://github.com/eugene57", "followers_url": "https://api.github.com/users/eugene57/followers", "following_url": "https://api.github.com/users/eugene57/following{/other_user}", "gists_url": "https://api.github.com/users/eugene57/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene57/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene57/subscriptions", "organizations_url": "https://api.github.com/users/eugene57/orgs", "repos_url": "https://api.github.com/users/eugene57/repos", "events_url": "https://api.github.com/users/eugene57/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene57/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T18:29:18Z", "updated_at": "2020-08-19T12:45:45Z", "closed_at": "2020-08-19T12:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nLint following file:\r\n```\r\nimport numpy as np\r\nimport xarray as xr\r\n\r\nx = xr.DataArray([1, -1], dims=('x',), coords={'x': ['a', 'b']})\r\ny = np.maximum(x, 0.)\r\nprint(y.loc['b'])\r\n```\r\n\r\n### Current behavior\r\n```\r\n************* Module test_numpy\r\ntest_numpy.py:6:6: E1101: Instance of 'ndarray' has no 'loc' member (no-member)\r\n```\r\n\r\nCurrent version of astroid brain uses `FakeUfunc` subclasses returning `numpy.ndarray` explicitly. E.g. see https://github.com/PyCQA/astroid/blob/master/astroid/brain/brain_numpy_core_umath.py#L61\r\n\r\nHowever, any object supporting array function protocol can be used together with numpy ufuncs.\r\n\r\n`FakeUfuncOneArg` and `FakeUfuncOneArgBis` could be changed to return `x` instead of `numpy.ndarray([0, 0])`. But I'm not sure what to do with `FakeUfuncTwoArgs`.\r\n\r\n### Expected behavior\r\nNo error.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.4.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/815", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/815/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/815/events", "html_url": "https://github.com/PyCQA/astroid/issues/815", "id": 656713906, "node_id": "MDU6SXNzdWU2NTY3MTM5MDY=", "number": 815, "title": "[brain] numpy.ndarray.__or__ is binary", "user": {"login": "eugene57", "id": 1482551, "node_id": "MDQ6VXNlcjE0ODI1NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1482551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene57", "html_url": "https://github.com/eugene57", "followers_url": "https://api.github.com/users/eugene57/followers", "following_url": "https://api.github.com/users/eugene57/following{/other_user}", "gists_url": "https://api.github.com/users/eugene57/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene57/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene57/subscriptions", "organizations_url": "https://api.github.com/users/eugene57/orgs", "repos_url": "https://api.github.com/users/eugene57/repos", "events_url": "https://api.github.com/users/eugene57/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene57/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-14T15:45:25Z", "updated_at": "2020-08-17T16:01:48Z", "closed_at": "2020-08-17T10:06:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nLint following file:\r\n```\r\nimport numpy\r\n\r\nclass BetterNDArray(numpy.ndarray):\r\n  def __or__(self, other):\r\n    return super().__or__(other)\r\n```\r\n\r\nThis is likely caused by https://github.com/PyCQA/astroid/blob/master/astroid/brain/brain_numpy_ndarray.py#L74\r\n\r\n### Current behavior\r\n```\r\n************* Module numpy_ndarray\r\nnumpy_ndarray.py:4:2: W0235: Useless super delegation in method '__or__' (useless-super-delegation)\r\nnumpy_ndarray.py:5:11: E1121: Too many positional arguments for method call (too-many-function-args)\r\n```\r\n\r\n### Expected behavior\r\nNo E1121 error.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.4.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/814", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/814/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/814/events", "html_url": "https://github.com/PyCQA/astroid/issues/814", "id": 656706010, "node_id": "MDU6SXNzdWU2NTY3MDYwMTA=", "number": 814, "title": "[brain] numpy.ndarray.T infers to None", "user": {"login": "eugene57", "id": 1482551, "node_id": "MDQ6VXNlcjE0ODI1NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1482551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene57", "html_url": "https://github.com/eugene57", "followers_url": "https://api.github.com/users/eugene57/followers", "following_url": "https://api.github.com/users/eugene57/following{/other_user}", "gists_url": "https://api.github.com/users/eugene57/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene57/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene57/subscriptions", "organizations_url": "https://api.github.com/users/eugene57/orgs", "repos_url": "https://api.github.com/users/eugene57/repos", "events_url": "https://api.github.com/users/eugene57/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene57/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-14T15:34:44Z", "updated_at": "2020-08-17T10:17:11Z", "closed_at": "2020-08-17T10:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nLint following file:\r\n```\r\nimport numpy\r\n\r\nx = numpy.ndarray([1, 2])\r\nprint(x.T[0])\r\n```\r\n\r\n### Current behavior\r\n```\r\n************* Module numpy_ndarray\r\nnumpy_ndarray.py:4:6: E1136: Value 'x.T' is unsubscriptable (unsubscriptable-object)\r\n```\r\nThis is likely caused by https://github.com/PyCQA/astroid/blob/master/astroid/brain/brain_numpy_ndarray.py#L20\r\nProbably will be better to have `self.T = np.ndarray([0, 0])`\r\n\r\n### Expected behavior\r\nNo errors\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.4.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/813", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/813/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/813/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/813/events", "html_url": "https://github.com/PyCQA/astroid/issues/813", "id": 656648843, "node_id": "MDU6SXNzdWU2NTY2NDg4NDM=", "number": 813, "title": "[brain] False positive: unexpected-keyword-arg with numpy.load", "user": {"login": "eugene57", "id": 1482551, "node_id": "MDQ6VXNlcjE0ODI1NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1482551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene57", "html_url": "https://github.com/eugene57", "followers_url": "https://api.github.com/users/eugene57/followers", "following_url": "https://api.github.com/users/eugene57/following{/other_user}", "gists_url": "https://api.github.com/users/eugene57/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene57/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene57/subscriptions", "organizations_url": "https://api.github.com/users/eugene57/orgs", "repos_url": "https://api.github.com/users/eugene57/repos", "events_url": "https://api.github.com/users/eugene57/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene57/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-14T14:17:30Z", "updated_at": "2020-08-17T09:32:13Z", "closed_at": "2020-08-17T09:32:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nRun pylint on following file:\r\n```\r\nimport numpy\r\n\r\n_ = numpy.load('', mmap_mode=None, allow_pickle=False, fix_imports=True, encoding='ASCII')\r\n```\r\n\r\n### Current behavior\r\n```\r\n************* Module numpy_load\r\nnumpy_load.py:3:4: E1123: Unexpected keyword argument 'mmap_mode' in function call (unexpected-keyword-arg)\r\nnumpy_load.py:3:4: E1123: Unexpected keyword argument 'allow_pickle' in function call (unexpected-keyword-arg)\r\nnumpy_load.py:3:4: E1123: Unexpected keyword argument 'fix_imports' in function call (unexpected-keyword-arg)\r\nnumpy_load.py:3:4: E1123: Unexpected keyword argument 'encoding' in function call (unexpected-keyword-arg)\r\n```\r\n\r\n### Expected behavior\r\nNo errors\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.4.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/808", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/808/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/808/events", "html_url": "https://github.com/PyCQA/astroid/issues/808", "id": 644372311, "node_id": "MDU6SXNzdWU2NDQzNzIzMTE=", "number": 808, "title": "can not inferred list.append", "user": {"login": "qtcdxxyuc", "id": 18543889, "node_id": "MDQ6VXNlcjE4NTQzODg5", "avatar_url": "https://avatars2.githubusercontent.com/u/18543889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtcdxxyuc", "html_url": "https://github.com/qtcdxxyuc", "followers_url": "https://api.github.com/users/qtcdxxyuc/followers", "following_url": "https://api.github.com/users/qtcdxxyuc/following{/other_user}", "gists_url": "https://api.github.com/users/qtcdxxyuc/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtcdxxyuc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtcdxxyuc/subscriptions", "organizations_url": "https://api.github.com/users/qtcdxxyuc/orgs", "repos_url": "https://api.github.com/users/qtcdxxyuc/repos", "events_url": "https://api.github.com/users/qtcdxxyuc/events{/privacy}", "received_events_url": "https://api.github.com/users/qtcdxxyuc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T07:03:17Z", "updated_at": "2020-07-01T08:54:04Z", "closed_at": "2020-07-01T08:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\n> Builtin.py\r\n\r\n```\r\nclass list(object):\r\n    def append(self, *args, **kwargs):\r\n        pass\r\n```\r\n\r\n> Source\r\n\r\n```python\r\nl = [\"foo\"]\r\nl.append(\"bar\")\r\nl[1].find(\"bar\")\r\n\r\n```\r\n\r\nCan not infer `l[1].find(\"bar\")`\uff0cthrow\uff1a\r\n\r\n`IndexError: list index out of range`\r\n\r\n`astroid.exceptions.InferenceError: Inference failed for <Subscript l.11 at 0x108c09c18>.`\r\n\r\nLooks like there is insufficient support for builtin.\r\n\r\nIt may be caused by append not being implemented in the `builtin.py`.\r\n\r\nBut it can inferrd `l[0].find(\"foo\")`,it  return a number.\r\n\r\nWhat needs to be done to correctly infer the `append` and other functions of the list.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output:\r\n\r\n`2.4.2`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/793", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/793/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/793/events", "html_url": "https://github.com/PyCQA/astroid/issues/793", "id": 623903205, "node_id": "MDU6SXNzdWU2MjM5MDMyMDU=", "number": 793, "title": "brain_mechanize provides an incomplete Browser", "user": {"login": "pkolbus", "id": 16658020, "node_id": "MDQ6VXNlcjE2NjU4MDIw", "avatar_url": "https://avatars2.githubusercontent.com/u/16658020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkolbus", "html_url": "https://github.com/pkolbus", "followers_url": "https://api.github.com/users/pkolbus/followers", "following_url": "https://api.github.com/users/pkolbus/following{/other_user}", "gists_url": "https://api.github.com/users/pkolbus/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkolbus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkolbus/subscriptions", "organizations_url": "https://api.github.com/users/pkolbus/orgs", "repos_url": "https://api.github.com/users/pkolbus/repos", "events_url": "https://api.github.com/users/pkolbus/events{/privacy}", "received_events_url": "https://api.github.com/users/pkolbus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-24T16:59:03Z", "updated_at": "2020-05-28T06:18:35Z", "closed_at": "2020-05-28T06:18:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `mechanize.Browser` provided by `astroid.brain.brain_mechanize.mechanize_transform` is incomplete, causing false positives E1101 / E1137 in `pylint`.\r\n\r\nnote: the transform itself is needed still, otherwise there are E1102 / not-callable false-positives.\r\n\r\n### Steps to reproduce\r\nRun pylint on the following script:\r\n\r\n    import mechanize\r\n\r\n    LOGIN_URL = \"https://example.com/login\"\r\n    USERNAME = \"my_username\"\r\n    PASSWORD = \"hunter2\"\r\n\r\n    br = mechanize.Browser()\r\n    br.open(LOGIN_URL)\r\n    br.select_form(nr=0)\r\n    br[\"u\"] = USERNAME\r\n    br[\"p\"] = PASSWORD\r\n    br.submit() \r\n\r\n### Current behavior\r\nFalse positives:\r\n\r\n    E1101: Instance of 'Browser' has no 'select_form' member (no-member)\r\n    E1137: 'br' does not support item assignment (unsupported-assignment-operation)\r\n    E1101: Instance of 'Browser' has no 'submit' member (no-member)\r\n\r\n### Expected behavior\r\nNo false positives\r\n\r\n### ``python3 -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.5.0 (and reproduced with commit 3f7cea41e75180ede08ac0cced4ff12c4bba3146)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/783", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/783/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/783/events", "html_url": "https://github.com/PyCQA/astroid/issues/783", "id": 610687460, "node_id": "MDU6SXNzdWU2MTA2ODc0NjA=", "number": 783, "title": "astroid/rebuilder.py: KeyError: <class '_ast.Is'> running pylint", "user": {"login": "raymond-grointel", "id": 34545687, "node_id": "MDQ6VXNlcjM0NTQ1Njg3", "avatar_url": "https://avatars1.githubusercontent.com/u/34545687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raymond-grointel", "html_url": "https://github.com/raymond-grointel", "followers_url": "https://api.github.com/users/raymond-grointel/followers", "following_url": "https://api.github.com/users/raymond-grointel/following{/other_user}", "gists_url": "https://api.github.com/users/raymond-grointel/gists{/gist_id}", "starred_url": "https://api.github.com/users/raymond-grointel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raymond-grointel/subscriptions", "organizations_url": "https://api.github.com/users/raymond-grointel/orgs", "repos_url": "https://api.github.com/users/raymond-grointel/repos", "events_url": "https://api.github.com/users/raymond-grointel/events{/privacy}", "received_events_url": "https://api.github.com/users/raymond-grointel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-01T10:38:45Z", "updated_at": "2020-05-01T10:59:21Z", "closed_at": "2020-05-01T10:53:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Source: https://github.com/PyCQA/pylint/issues/3558\r\n\r\n2.4.0 is currently broken. Fix is in master -- lets keep this open until 2.4.1 is released.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/779", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/779/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/779/events", "html_url": "https://github.com/PyCQA/astroid/issues/779", "id": 609629500, "node_id": "MDU6SXNzdWU2MDk2Mjk1MDA=", "number": 779, "title": "Invalid python_requires in setup.py - \">=3.4.*\" not allowed", "user": {"login": "ColinKennedy", "id": 10103049, "node_id": "MDQ6VXNlcjEwMTAzMDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/10103049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinKennedy", "html_url": "https://github.com/ColinKennedy", "followers_url": "https://api.github.com/users/ColinKennedy/followers", "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}", "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions", "organizations_url": "https://api.github.com/users/ColinKennedy/orgs", "repos_url": "https://api.github.com/users/ColinKennedy/repos", "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinKennedy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T06:30:48Z", "updated_at": "2020-05-01T06:03:51Z", "closed_at": "2020-05-01T06:03:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reference issue:\r\nhttps://github.com/nerdvegas/rez/issues/876\r\n\r\n### Steps to reproduce\r\n- Install astroid\r\n```sh\r\npython3.6 -m pip install astroid==2.2.0 --user\r\n```\r\n\r\n- Run this\r\n```python\r\nimport os\r\nfrom distlib import database\r\n\r\n\r\ndef main():\r\n    \"\"\"Run the main execution of the current script.\"\"\"\r\n    path = os.path.join(os.path.expanduser(\"~\"), \".local\", \"lib\", \"python3.6\", \"site-packages\")\r\n    distribution = database.DistributionPath([path])\r\n    distributions = list(distribution.get_distributions())\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n### Current behavior\r\n- Raises this exception - `ValueError: '.*' not allowed for u'>=' constraints`\r\n\r\n### Expected behavior\r\n`distributions` should be a non-empty list, containing at least astroid 2.2.0 as one of its entries\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n```sh\r\n$ python3 -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"\r\n2.3.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/777", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/777/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/777/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/777/events", "html_url": "https://github.com/PyCQA/astroid/issues/777", "id": 608132365, "node_id": "MDU6SXNzdWU2MDgxMzIzNjU=", "number": 777, "title": "Astroid Infinite loop when `__len__(self)` is mistakenly defined as `return len(self)`", "user": {"login": "simonepri", "id": 3505087, "node_id": "MDQ6VXNlcjM1MDUwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3505087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonepri", "html_url": "https://github.com/simonepri", "followers_url": "https://api.github.com/users/simonepri/followers", "following_url": "https://api.github.com/users/simonepri/following{/other_user}", "gists_url": "https://api.github.com/users/simonepri/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonepri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonepri/subscriptions", "organizations_url": "https://api.github.com/users/simonepri/orgs", "repos_url": "https://api.github.com/users/simonepri/repos", "events_url": "https://api.github.com/users/simonepri/events{/privacy}", "received_events_url": "https://api.github.com/users/simonepri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-28T08:39:50Z", "updated_at": "2020-06-24T02:16:23Z", "closed_at": "2020-06-24T02:16:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nLint the following program with pylint\r\n```python\r\nclass Crash:\r\n    def __len__(self) -> int:\r\n        return len(self)\r\n```\r\n\r\n### Current behavior\r\n\r\nThe following error is thrown and pylint crashes\r\n```\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should not crash.\r\n\r\n### Asteroid version\r\n2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/775", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/775/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/775/events", "html_url": "https://github.com/PyCQA/astroid/issues/775", "id": 607938361, "node_id": "MDU6SXNzdWU2MDc5MzgzNjE=", "number": 775, "title": "Regression in astroid-2.4: False positive not-callable error", "user": {"login": "hiranya911", "id": 2375201, "node_id": "MDQ6VXNlcjIzNzUyMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2375201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiranya911", "html_url": "https://github.com/hiranya911", "followers_url": "https://api.github.com/users/hiranya911/followers", "following_url": "https://api.github.com/users/hiranya911/following{/other_user}", "gists_url": "https://api.github.com/users/hiranya911/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiranya911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiranya911/subscriptions", "organizations_url": "https://api.github.com/users/hiranya911/orgs", "repos_url": "https://api.github.com/users/hiranya911/repos", "events_url": "https://api.github.com/users/hiranya911/events{/privacy}", "received_events_url": "https://api.github.com/users/hiranya911/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 717654774, "node_id": "MDU6TGFiZWw3MTc2NTQ3NzQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/needs-reproduction", "name": "needs-reproduction", "color": "1cdba2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T00:27:24Z", "updated_at": "2020-04-30T06:09:53Z", "closed_at": "2020-04-30T06:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using Pylint 2.3.1. Until today following class linted without issues:\r\n\r\n```\r\nclass PageIterator:\r\n    def __init__(self, current_page):\r\n        # Removed for clarity\r\n\r\n    def next(self):\r\n        # Removed for clarity\r\n\r\n    def __next__(self):\r\n        return self.next()\r\n\r\n    def __iter__(self):\r\n        return self\r\n```\r\n\r\nToday since astroid-2.4.0 was released, our CI workflows are failing with the following error:\r\n\r\n```\r\nE1102: self.next is not callable (not-callable)\r\n```\r\n\r\nLine number points to the `return self.next()` in the above class. This seems to be a regression as this used to work fine, and `self.next()` is clearly a callable member method of the class.\r\n\r\nNote that we are still using the same version of Pylint as before (it is hardcoded into our build scripts). But Astroid version is not controlled, and hence the CI workflow seems to pick the latest available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/774", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/774/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/774/events", "html_url": "https://github.com/PyCQA/astroid/issues/774", "id": 607598185, "node_id": "MDU6SXNzdWU2MDc1OTgxODU=", "number": 774, "title": "Astroid 2.4.0 installs a tests package in site-packages", "user": {"login": "fbochu", "id": 2640288, "node_id": "MDQ6VXNlcjI2NDAyODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2640288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbochu", "html_url": "https://github.com/fbochu", "followers_url": "https://api.github.com/users/fbochu/followers", "following_url": "https://api.github.com/users/fbochu/following{/other_user}", "gists_url": "https://api.github.com/users/fbochu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbochu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbochu/subscriptions", "organizations_url": "https://api.github.com/users/fbochu/orgs", "repos_url": "https://api.github.com/users/fbochu/repos", "events_url": "https://api.github.com/users/fbochu/events{/privacy}", "received_events_url": "https://api.github.com/users/fbochu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-27T14:30:32Z", "updated_at": "2020-05-01T06:02:22Z", "closed_at": "2020-05-01T06:02:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Install astroid 2.4.0\r\n\r\n### Current behavior\r\n\r\nA `tests` package is installed in site-packages.\r\n\r\n### Expected behavior\r\n\r\nOnly `astroid` package is installed in site-packages.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/773", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/773/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/773/events", "html_url": "https://github.com/PyCQA/astroid/issues/773", "id": 607497535, "node_id": "MDU6SXNzdWU2MDc0OTc1MzU=", "number": 773, "title": "Astroid 2.4 and pylint 2.5: KeyError: <class '_ast.And'>", "user": {"login": "jlintusaari", "id": 22339859, "node_id": "MDQ6VXNlcjIyMzM5ODU5", "avatar_url": "https://avatars2.githubusercontent.com/u/22339859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlintusaari", "html_url": "https://github.com/jlintusaari", "followers_url": "https://api.github.com/users/jlintusaari/followers", "following_url": "https://api.github.com/users/jlintusaari/following{/other_user}", "gists_url": "https://api.github.com/users/jlintusaari/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlintusaari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlintusaari/subscriptions", "organizations_url": "https://api.github.com/users/jlintusaari/orgs", "repos_url": "https://api.github.com/users/jlintusaari/repos", "events_url": "https://api.github.com/users/jlintusaari/events{/privacy}", "received_events_url": "https://api.github.com/users/jlintusaari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}, {"id": 1252862094, "node_id": "MDU6TGFiZWwxMjUyODYyMDk0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/regression", "name": "regression", "color": "e2686a", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-27T12:12:08Z", "updated_at": "2020-04-29T07:04:30Z", "closed_at": "2020-04-29T07:03:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, the newest `pylint==2.5` + `astroid==2.4` pair cause the error below when running pylint in our project. Everything was working fine with `pylint==2.4.4` and `astroid=2.3.3`.\r\n\r\n`python -m pylint project`\r\n\r\n```\r\nTraceback (most recent call las):\r\n  \u200bFile \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_mai\r\n    \u200b\"__main__\", mod_spc)\r\n  \u200bFile \"/usr/lib/python3.6/runpy.py\", line 85, in _run_cod\r\n    \u200bexec(code, run_globas)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/__main__.py\", line 7, in <module\r\n    \u200bpylint.run_pylin()\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/__init__.py\", line 20, in run_pylin\r\n    \u200bRun(sys.argv[1])\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/lint.py\", line 1731, in __init_\r\n    \u200blinter.check(ars)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/lint.py\", line 1004, in chec\r\n    \u200bself._do_check(files_or_moduls)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/lint.py\", line 1165, in _do_chec\r\n    \u200bself.check_astroid_module(ast_node, walker, rawcheckers, tokencheckes)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/lint.py\", line 1252, in check_astroid_modul\r\n    \u200bwalker.walk(ast_noe)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/utils/ast_walker.py\", line 77, in wal\r\n    \u200bself.walk(chid)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/utils/ast_walker.py\", line 74, in wal\r\n    \u200bcallback(astrod)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/checkers/imports.py\", line 514, in visit_importfro\r\n    \u200bimported_module = self._get_imported_module(node, basenae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/pylint/checkers/imports.py\", line 774, in _get_imported_modul\r\n    \u200breturn importnode.do_import_module(modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/mixins.py\", line 100, in do_import_modul\r\n    \u200bmodname, level=level, relative_only=level and level > 1\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 138, in file_buil\r\n    \u200breturn self._post_build(module, encodig)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 158, in _post_buil\r\n    \u200bself.delayed_assattr(delayd)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 225, in delayed_assatt\r\n    \u200bfor inferred in node.expr.infer):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 93, in wrappe\r\n    \u200bgenerator = _func(node, context, **kwars)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 850, in infer_assig\r\n    \u200bstmts = list(self.assigned_stmts(context=contex))\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/protocols.py\", line 331, in _arguments_infer_argnam\r\n    \u200bis_metaclass = isinstance(cls, nodes.ClassDef) and cls.type == \"metaclas\"\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 1830, in _class_typ\r\n    \u200bif _is_metaclass(klas):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 1799, in _is_metaclas\r\n    \u200bfor baseobj in base.infer):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 293, in infer_attribut\r\n    \u200bfor owner in self.expr.infer(contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 93, in wrappe\r\n    \u200bgenerator = _func(node, context, **kwars)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 280, in infer_import_fro\r\n    \u200bstmts = module.getattr(name, ignore_locals=module is self.root))\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 547, in getatt\r\n    \u200bresult = [self.import_module(name, relative_only=Tru)]\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 138, in file_buil\r\n    \u200breturn self._post_build(module, encodig)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 158, in _post_buil\r\n    \u200bself.delayed_assattr(delayd)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 225, in delayed_assatt\r\n    \u200bfor inferred in node.expr.infer):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 93, in wrappe\r\n    \u200bgenerator = _func(node, context, **kwars)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 850, in infer_assig\r\n    \u200bstmts = list(self.assigned_stmts(context=contex))\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/protocols.py\", line 331, in _arguments_infer_argnam\r\n    \u200bis_metaclass = isinstance(cls, nodes.ClassDef) and cls.type == \"metaclas\"\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 1830, in _class_typ\r\n    \u200bif _is_metaclass(klas):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 1799, in _is_metaclas\r\n    \u200bfor baseobj in base.infer):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 293, in infer_attribut\r\n    \u200bfor owner in self.expr.infer(contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 93, in wrappe\r\n    \u200bgenerator = _func(node, context, **kwars)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 280, in infer_import_fro\r\n    \u200bstmts = module.getattr(name, ignore_locals=module is self.root))\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 547, in getatt\r\n    \u200bresult = [self.import_module(name, relative_only=Tru)]\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 138, in file_buil\r\n    \u200breturn self._post_build(module, encodig)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 158, in _post_buil\r\n    \u200bself.delayed_assattr(delayd)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 225, in delayed_assatt\r\n    \u200bfor inferred in node.expr.infer):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 227, in infer_cal\r\n    \u200bfor callee in self.func.infer(contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 293, in infer_attribut\r\n    \u200bfor owner in self.expr.infer(contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 96, in wrappe\r\n    \u200bres = next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/bases.py\", line 136, in _infer_stmt\r\n    \u200bfor inferred in stmt.infer(context=contex):\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/util.py\", line 160, in limit_inferenc\r\n    \u200byield from islice(iterator, sie)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/context.py\", line 113, in cache_generato\r\n    \u200bfor result in generatr:\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 132, in raise_if_nothing_inferre\r\n    \u200byield next(generatr)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/decorators.py\", line 93, in wrappe\r\n    \u200bgenerator = _func(node, context, **kwars)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/inference.py\", line 273, in infer_import_fro\r\n    \u200bmodule = self.do_import_modul()\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/mixins.py\", line 100, in do_import_modul\r\n    \u200bmodname, level=level, relative_only=level and level > 1\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 138, in file_buil\r\n    \u200breturn self._post_build(module, encodig)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 155, in _post_buil\r\n    \u200bself.add_from_names_to_locals(from_noe)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 208, in add_from_names_to_local\r\n    \u200bimported = node.do_import_modul()\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/mixins.py\", line 100, in do_import_modul\r\n    \u200bmodname, level=level, relative_only=level and level > 1\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 138, in file_buil\r\n    \u200breturn self._post_build(module, encodig)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 155, in _post_buil\r\n    \u200bself.add_from_names_to_locals(from_noe)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 208, in add_from_names_to_local\r\n    \u200bimported = node.do_import_modul()\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/mixins.py\", line 100, in do_import_modul\r\n    \u200bmodname, level=level, relative_only=level and level > 1\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 138, in file_buil\r\n    \u200breturn self._post_build(module, encodig)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 155, in _post_buil\r\n    \u200bself.add_from_names_to_locals(from_noe)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 208, in add_from_names_to_local\r\n    \u200bimported = node.do_import_modul()\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/mixins.py\", line 100, in do_import_modul\r\n    \u200bmodname, level=level, relative_only=level and level > 1\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 642, in import_modul\r\n    \u200breturn MANAGER.ast_from_module_name(absmodnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 189, in ast_from_module_nam\r\n    \u200breturn self.ast_from_file(found_spec.location, modname, fallback=Fale)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/manager.py\", line 98, in ast_from_fil\r\n    \u200breturn AstroidBuilder(self).file_build(filepath, modnae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 137, in file_buil\r\n    \u200bmodule = self._data_build(data, modname, pah)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/builder.py\", line 190, in _data_buil\r\n    \u200bmodule = builder.visit_module(node, modname, node_file, packae)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 165, in visit_modul\r\n    \u200bnewnode.postinit([self.visit(child, newnode) for child in node.bod])\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 165, in <listcomp\r\n    \u200bnewnode.postinit([self.visit(child, newnode) for child in node.bod])\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 177, in visi\r\n    \u200breturn visit_method(node, paret)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 676, in visit_functionde\r\n    \u200breturn self._visit_functiondef(nodes.FunctionDef, node, paret)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 666, in _visit_functionde\r\n    \u200bbody=[self.visit(child, newnode) for child in node.bod],\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 666, in <listcomp\r\n    \u200bbody=[self.visit(child, newnode) for child in node.bod],\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 177, in visi\r\n    \u200breturn visit_method(node, paret)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 721, in visit_i\r\n    \u200bself.visit(node.test, newnod),\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 177, in visi\r\n    \u200breturn visit_method(node, paret)\r\n  \u200bFile \"feautre/py36/lib/python3.6/site-packages/astroid/rebuilder.py\", line 394, in visit_boolo\r\n    \u200bself._bool_op_classes[type(node.op)], node.lineno, node.col_offset, parent\r\nKeyError: <class '_ast.And'>\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/772", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/772/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/772/events", "html_url": "https://github.com/PyCQA/astroid/issues/772", "id": 607483223, "node_id": "MDU6SXNzdWU2MDc0ODMyMjM=", "number": 772, "title": "astroid 2.4 / pylint 2.5: astroid error when using PyQt/Qt's QApplication", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}, {"id": 1252862094, "node_id": "MDU6TGFiZWwxMjUyODYyMDk0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/regression", "name": "regression", "color": "e2686a", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-27T11:49:58Z", "updated_at": "2020-04-28T07:32:06Z", "closed_at": "2020-04-28T07:04:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. `pip install -U pip` (especially with a virtualenv, so that a manylinux2014 wheel is found for PyQt rather than pip trying to build from sources)\r\n2. `pip install pylint PyQt5`\r\n3.  Run `pylint --extension-pkg-whitelist=PyQt5 keytester.py ` over this file:\r\n\r\n```python3\r\nfrom PyQt5.QtWidgets import QApplication\r\napp = QApplication([])\r\n```\r\n\r\n(a pretty standard PyQt set-up)\r\n\r\n### Current behavior\r\n\r\nAstroid fails with:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \".venv/bin/pylint\", line 10, in <module>\r\n    sys.exit(run_pylint())\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/__init__.py\", line 22, in run_pylint\r\n    PylintRun(sys.argv[1:])\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/lint/run.py\", line 338, in __init__\r\n    linter.check(args)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/lint/pylinter.py\", line 870, in check\r\n    self._check_files(\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/lint/pylinter.py\", line 904, in _check_files\r\n    self._check_file(get_ast, check_astroid_module, name, filepath, modname)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/lint/pylinter.py\", line 930, in _check_file\r\n    check_astroid_module(ast_node)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/lint/pylinter.py\", line 1062, in check_astroid_module\r\n    retval = self._check_astroid_module(\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/lint/pylinter.py\", line 1107, in _check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/utils/ast_walker.py\", line 75, in walk\r\n    self.walk(child)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/utils/ast_walker.py\", line 72, in walk\r\n    callback(astroid)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/checkers/variables.py\", line 1197, in visit_importfrom\r\n    module = self._check_module_attrs(node, module, name_parts[1:])\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/pylint/checkers/variables.py\", line 1868, in _check_module_attrs\r\n    module = next(module.getattr(name)[0].infer())\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/scoped_nodes.py\", line 547, in getattr\r\n    result = [self.import_module(name, relative_only=True)]\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/scoped_nodes.py\", line 642, in import_module\r\n    return MANAGER.ast_from_module_name(absmodname)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/manager.py\", line 168, in ast_from_module_name\r\n    return self.ast_from_module(module, modname)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/manager.py\", line 262, in ast_from_module\r\n    return AstroidBuilder(self).module_build(module, modname)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/builder.py\", line 95, in module_build\r\n    node = self.inspect_build(module, modname=modname, path=path)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/raw_building.py\", line 308, in inspect_build\r\n    self.object_build(node, module)\r\n  File \"/home/florian/tmp/pylint/.venv/lib/python3.8/site-packages/astroid/raw_building.py\", line 360, in object_build\r\n    elif hasattr(member, \"__all__\"):\r\nRuntimeError: wrapped C/C++ object of type QApplication has been deleted\r\n```\r\n\r\nThat exception is coming from PyQt and usually happens when Qt already deleted an object in C++, but something still holds a Python reference to it. Not sure how that can even happen with a `QApplication` object, though.\r\n\r\n### Expected behavior\r\n\r\npylint works successfully, other than the `missing-module-docstring` and `invalid-name` errors - this was the case with pylint 2.4.4 and astroid 2.3.3.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.4.0 (and pylint 2.5.0)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/768", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/768/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/768/events", "html_url": "https://github.com/PyCQA/astroid/issues/768", "id": 597971752, "node_id": "MDU6SXNzdWU1OTc5NzE3NTI=", "number": 768, "title": "astroid blocks the wrapt update to >= 1.12", "user": {"login": "brot", "id": 36720, "node_id": "MDQ6VXNlcjM2NzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/36720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brot", "html_url": "https://github.com/brot", "followers_url": "https://api.github.com/users/brot/followers", "following_url": "https://api.github.com/users/brot/following{/other_user}", "gists_url": "https://api.github.com/users/brot/gists{/gist_id}", "starred_url": "https://api.github.com/users/brot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brot/subscriptions", "organizations_url": "https://api.github.com/users/brot/orgs", "repos_url": "https://api.github.com/users/brot/repos", "events_url": "https://api.github.com/users/brot/events{/privacy}", "received_events_url": "https://api.github.com/users/brot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 858740279, "node_id": "MDU6TGFiZWw4NTg3NDAyNzk=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/needs-backport", "name": "needs-backport", "color": "6a49bc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T16:19:19Z", "updated_at": "2020-04-27T10:31:32Z", "closed_at": "2020-04-27T10:31:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n####  create new venv and update pip to the latest version\r\n1. python3 -m venv venv  \r\n2. cd venv/\r\n2. source ./bin/activate\r\n3. pip install -U pip\r\n\r\n#### install pylint, which installs astroid-2.3.3 and also wrapt-1.11.2\r\n5. pip install pylint\r\n\r\n#### try to update wrapt to the latest version 1.12.1\r\n6. pip install wrapt==1.12.1\r\n\r\n-> ERROR: astroid 2.3.3 has requirement wrapt==1.11.*, but you'll have wrapt 1.12.1 which is incompatible.\r\n\r\n### Current behavior\r\n\r\nCurrently pip installs wrapt 1.12.1, but outputs an error. Later this year with a newer pip version this will fail, because the behavior of pip will change to not install incompatible packages\r\n\r\n### Expected behavior\r\n\r\nastroid should be compatible with the lastest wrapt  version\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.3.3\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/762", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/762/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/762/events", "html_url": "https://github.com/PyCQA/astroid/issues/762", "id": 575364446, "node_id": "MDU6SXNzdWU1NzUzNjQ0NDY=", "number": 762, "title": "RuntimeError: generator raised StopIteration ", "user": {"login": "JustKiddingCode", "id": 6041005, "node_id": "MDQ6VXNlcjYwNDEwMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6041005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustKiddingCode", "html_url": "https://github.com/JustKiddingCode", "followers_url": "https://api.github.com/users/JustKiddingCode/followers", "following_url": "https://api.github.com/users/JustKiddingCode/following{/other_user}", "gists_url": "https://api.github.com/users/JustKiddingCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustKiddingCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustKiddingCode/subscriptions", "organizations_url": "https://api.github.com/users/JustKiddingCode/orgs", "repos_url": "https://api.github.com/users/JustKiddingCode/repos", "events_url": "https://api.github.com/users/JustKiddingCode/events{/privacy}", "received_events_url": "https://api.github.com/users/JustKiddingCode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T12:32:21Z", "updated_at": "2020-03-05T08:42:13Z", "closed_at": "2020-03-05T08:42:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the error bellow when using dataclasses with replace and pylint.\r\nI think it has something todo with the key access, when I'm using a normal (emtpy) dict\r\npylint doesn't throw an error.\r\n\r\n### Steps to reproduce\r\nUse this example:\r\n\r\n```\r\nfrom dataclasses import dataclass, field, replace\r\nfrom typing import List\r\n\r\ndef default_redirect():\r\n    return []\r\n\r\n@dataclass\r\nclass ProxyConfig:\r\n    \"\"\" Configuration for the Proxy Setup \"\"\"\r\n    keyfile: str\r\n    certfile: str\r\n    domainname: str\r\n    contacts: List[str]\r\n    address: str = \"0.0.0.0\"\r\n    tls_port: int = 443\r\n    plain_port: int = 80\r\n    https_only: bool = True\r\n    username: str = \"www-data\"\r\n    groupname: str = \"www-data\"\r\n    secrets: str = \"/var/lib/oidc-proxy/secrets.yml\"\r\n    tls_redirect: str = \"/TLSRedirect\"\r\n    auth: str = \"/auth\"\r\n    redirect: List[str] = field(default_factory=default_redirect)\r\n    plugin_dirs: List[str] = field(default_factory=list)\r\n\r\n\r\na = ProxyConfig(\"\", \"\", \"\", [\"\"])\r\ntest_dict = {\"proxy\" : {}}\r\n\r\na = replace(a, **test_dict['proxy'])\r\n\r\n```\r\n\r\nRun with pylint\r\n\r\n### Current behavior\r\n\r\n```\r\n************* Module test\r\n/tmp/tmp.9j0R7c2kjs/test.py:1:0: C0114: Missing module docstring (missing-module-docstring)\r\n/tmp/tmp.9j0R7c2kjs/test.py:4:0: C0116: Missing function or method docstring (missing-function-docstring)\r\n/tmp/tmp.9j0R7c2kjs/test.py:7:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)\r\nTraceback (most recent call last):\r\n  File \"/home/justkidding/git/astroid/astroid/protocols.py\", line 337, in _arguments_infer_argname\r\n    call_site = arguments.CallSite(context.callcontext, context.extra_context)\r\n  File \"/home/justkidding/git/astroid/astroid/arguments.py\", line 43, in __init__\r\n    self._unpacked_kwargs = self._unpack_keywords(keywords, context=context)\r\n  File \"/home/justkidding/git/astroid/astroid/arguments.py\", line 96, in _unpack_keywords\r\n    inferred = next(value.infer(context=context))\r\nStopIteration\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/justkidding/.local/share/virtualenvs/pylint-b0C_0gT4/bin/pylint\", line 7, in <module>\r\n    exec(compile(f.read(), __file__, 'exec'))\r\n  File \"/home/justkidding/git/pylint/bin/pylint\", line 4, in <module>\r\n    run_pylint()\r\n  File \"/home/justkidding/git/pylint/pylint/__init__.py\", line 22, in run_pylint\r\n    PylintRun(sys.argv[1:])\r\n  File \"/home/justkidding/git/pylint/pylint/lint.py\", line 1770, in __init__\r\n    linter.check(args)\r\n  File \"/home/justkidding/git/pylint/pylint/lint.py\", line 980, in check\r\n    self._check_files(self.get_ast, self._iterate_file_descrs(files_or_modules))\r\n  File \"/home/justkidding/git/pylint/pylint/lint.py\", line 1009, in _check_files\r\n    self._check_file(get_ast, check_astroid_module, name, filepath, modname)\r\n  File \"/home/justkidding/git/pylint/pylint/lint.py\", line 1035, in _check_file\r\n    check_astroid_module(ast_node)\r\n  File \"/home/justkidding/git/pylint/pylint/lint.py\", line 1168, in check_astroid_module\r\n    ast_node, walker, rawcheckers, tokencheckers\r\n  File \"/home/justkidding/git/pylint/pylint/lint.py\", line 1212, in _check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/home/justkidding/git/pylint/pylint/utils/ast_walker.py\", line 77, in walk\r\n    self.walk(child)\r\n  File \"/home/justkidding/git/pylint/pylint/utils/ast_walker.py\", line 77, in walk\r\n    self.walk(child)\r\n  File \"/home/justkidding/git/pylint/pylint/utils/ast_walker.py\", line 74, in walk\r\n    callback(astroid)\r\n  File \"/home/justkidding/git/pylint/pylint/checkers/base.py\", line 1938, in visit_assignname\r\n    if isinstance(utils.safe_infer(assign_type.value), astroid.ClassDef):\r\n  File \"/home/justkidding/git/pylint/pylint/checkers/utils.py\", line 1105, in safe_infer\r\n    for inferred in infer_gen:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/inference.py\", line 229, in infer_call\r\n    yield from callee.infer_call_result(caller=self, context=callcontext)\r\n  File \"/home/justkidding/git/astroid/astroid/scoped_nodes.py\", line 1706, in infer_call_result\r\n    yield from returnnode.value.infer(context)\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/inference.py\", line 223, in infer_call\r\n    for callee in self.func.infer(context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/inference.py\", line 289, in infer_attribute\r\n    for owner in self.expr.infer(context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/bases.py\", line 132, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/bases.py\", line 132, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/inference.py\", line 223, in infer_call\r\n    for callee in self.func.infer(context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/inference.py\", line 289, in infer_attribute\r\n    for owner in self.expr.infer(context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/justkidding/git/astroid/astroid/bases.py\", line 132, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/justkidding/git/astroid/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/justkidding/git/astroid/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/justkidding/git/astroid/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\nRuntimeError: generator raised StopIteration\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo stacktrace.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.4.0 (git master), but also 2.3.X", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/755", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/755/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/755/events", "html_url": "https://github.com/PyCQA/astroid/issues/755", "id": 567389289, "node_id": "MDU6SXNzdWU1NjczODkyODk=", "number": 755, "title": "Contextual version conflict with direct dependency `wrapt`", "user": {"login": "sphuber", "id": 6992332, "node_id": "MDQ6VXNlcjY5OTIzMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6992332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sphuber", "html_url": "https://github.com/sphuber", "followers_url": "https://api.github.com/users/sphuber/followers", "following_url": "https://api.github.com/users/sphuber/following{/other_user}", "gists_url": "https://api.github.com/users/sphuber/gists{/gist_id}", "starred_url": "https://api.github.com/users/sphuber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sphuber/subscriptions", "organizations_url": "https://api.github.com/users/sphuber/orgs", "repos_url": "https://api.github.com/users/sphuber/repos", "events_url": "https://api.github.com/users/sphuber/events{/privacy}", "received_events_url": "https://api.github.com/users/sphuber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-19T08:11:06Z", "updated_at": "2020-02-27T08:33:49Z", "closed_at": "2020-02-27T08:33:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Install package with `wrapt==1.12` and `astroid==2.4.0`\r\n\r\n### Current behavior\r\nInstalling this, or running `prospector` with these dependencies will lead to a contextual version conflict because `astroid` specifies a very restrictive requirement `wrapt==1.11.*` which is not compatible:\r\n```\r\nprospector...............................................................Failed\r\nhookid: prospector\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/3.7.6/x64/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 583, in _build_master\r\n    ws.require(__requires__)\r\n  File \"/opt/hostedtoolcache/Python/3.7.6/x64/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 900, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File \"/opt/hostedtoolcache/Python/3.7.6/x64/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 791, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (wrapt 1.12.0 (/opt/hostedtoolcache/Python/3.7.6/x64/lib/python3.7/site-packages), Requirement.parse('wrapt==1.11.*'), {'astroid'})\r\n```\r\n\r\n### Expected behavior\r\nThe ability to install `astroid` with `wrapt>=1.12`\r\n\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/749", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/749/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/749/events", "html_url": "https://github.com/PyCQA/astroid/issues/749", "id": 559212767, "node_id": "MDU6SXNzdWU1NTkyMTI3Njc=", "number": 749, "title": "Infinite recursion when inferring from monkey-patched class", "user": {"login": "eggertm", "id": 6607308, "node_id": "MDQ6VXNlcjY2MDczMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6607308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggertm", "html_url": "https://github.com/eggertm", "followers_url": "https://api.github.com/users/eggertm/followers", "following_url": "https://api.github.com/users/eggertm/following{/other_user}", "gists_url": "https://api.github.com/users/eggertm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggertm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggertm/subscriptions", "organizations_url": "https://api.github.com/users/eggertm/orgs", "repos_url": "https://api.github.com/users/eggertm/repos", "events_url": "https://api.github.com/users/eggertm/events{/privacy}", "received_events_url": "https://api.github.com/users/eggertm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T17:02:42Z", "updated_at": "2020-03-07T16:23:26Z", "closed_at": "2020-03-07T16:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n[monkeypatch.zip](https://github.com/PyCQA/astroid/files/4148961/monkeypatch.zip)\r\n\r\nI encountered this when attempting to lint my own project which is using the simplekml package (pip install simplekml).  \r\nsimplekml has functionality to monkey-patch xml.dom.minidom.Element with a special class, simplekml.KmlElement, which provides a special writexml method, while inheriting the monkey-patched Element class.  \r\nApparently, astroid does not like this monkey patching behavior, and appears to enter an infinite loop when trying to infer the parent class.  This is probably due to KmlElement overwriting what is already declared as it's parent?\r\n\r\nAnyway, I've reduced the test down to the two files in the attached zip file, extracting those should be enough.\r\n1.  extract the files from the monkeypatch.zip file\r\n2. pylint monkeypatch.py\r\n\r\n### Current behavior\r\nmonkeypatch.py:8:52: C0303: Trailing whitespace (trailing-whitespace)\r\nmonkeypatch.py:1:0: C0114: Missing module docstring (missing-module-docstring)\r\nmonkeypatch.py:3:0: C0115: Missing class docstring (missing-class-docstring)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/__main__.py\", line 7, in <module>\r\n    pylint.run_pylint()\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/__init__.py\", line 23, in run_pylint\r\n    PylintRun(sys.argv[1:])\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/lint.py\", line 1731, in __init__\r\n    linter.check(args)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/lint.py\", line 1004, in check\r\n    self._do_check(files_or_modules)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/lint.py\", line 1165, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/lint.py\", line 1252, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/utils/ast_walker.py\", line 77, in walk\r\n    self.walk(child)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/utils/ast_walker.py\", line 74, in walk\r\n    callback(astroid)\r\n  File \"/usr/local/lib/python3.6/dist-packages/pylint/checkers/typecheck.py\", line 845, in visit_classdef\r\n    metaclass = node.declared_metaclass()\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/scoped_nodes.py\", line 2594, in declared_metaclass\r\n    for baseobj in base.infer(context=context):\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/inference.py\", line 311, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/bases.py\", line 133, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n\r\n.....\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/inference.py\", line 287, in infer_attribute\r\n    for owner in self.expr.infer(context):\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/decorators.py\", line 92, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/inference.py\", line 197, in infer_name\r\n    context = contextmod.copy_context(context)\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/context.py\", line 155, in copy_context\r\n    return context.clone()\r\n  File \"/usr/local/lib/python3.6/dist-packages/astroid/context.py\", line 102, in clone\r\n    clone = InferenceContext(self.path, inferred=self.inferred)\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n\r\n### Expected behavior\r\nIdeally this weird monkeypatch behavior should be tolerated (perhaps with a warning from pylint?).\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.3.3, also 1.6.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/745", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/745/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/745/events", "html_url": "https://github.com/PyCQA/astroid/issues/745", "id": 554341180, "node_id": "MDU6SXNzdWU1NTQzNDExODA=", "number": 745, "title": "Exception when invoking `infer_lhs()` on `AssignAttr`", "user": {"login": "ltcmelo", "id": 2905588, "node_id": "MDQ6VXNlcjI5MDU1ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2905588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltcmelo", "html_url": "https://github.com/ltcmelo", "followers_url": "https://api.github.com/users/ltcmelo/followers", "following_url": "https://api.github.com/users/ltcmelo/following{/other_user}", "gists_url": "https://api.github.com/users/ltcmelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltcmelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltcmelo/subscriptions", "organizations_url": "https://api.github.com/users/ltcmelo/orgs", "repos_url": "https://api.github.com/users/ltcmelo/repos", "events_url": "https://api.github.com/users/ltcmelo/events{/privacy}", "received_events_url": "https://api.github.com/users/ltcmelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T18:54:35Z", "updated_at": "2020-02-10T07:55:11Z", "closed_at": "2020-02-10T07:55:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\nI got the exception below in a large project and I don't have a concise snippet to reproduce it. Yet, I'd like to report the basics of the issue; then you can take it under consideration.\r\n\r\n*a.py*\r\n```python\r\nclass Configuration:\r\n    def __init__(self):\r\n        self.input_dir = None\r\n```\r\n\r\n*b.py*\r\n```python\r\nconfig = Configuration()\r\nconfig.input_dir = p  # where p is a for variable\r\n```\r\n\r\nAt some point in my code, I get the [AssignAttr](http://pylint.pycqa.org/projects/astroid/en/latest/api/astroid.nodes.html#astroid.nodes.AssignAttr) node (let's call it `n`) for `config.input_dir` and invoke `n.infer_lhs()`.\r\n\r\n### Current behavior\r\n\r\nI get this exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/astroid/inference.py\", line 310, in infer_attribute\r\n    context.boundnode = owner\r\nAttributeError: 'NoneType' object has no attribute 'boundnode'\r\n```\r\n\r\n<img width=\"1131\" alt=\"Screen Shot 2020-01-23 at 15 54 16\" src=\"https://user-images.githubusercontent.com/2905588/73014262-99d0c080-3df8-11ea-8a1b-2ae4ef09da7c.png\">\r\n\r\n\r\n### Expected behavior\r\n\r\nNo exception, and the usual possible results from the `infer` function(s).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/741", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/741/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/741/events", "html_url": "https://github.com/PyCQA/astroid/issues/741", "id": 545322554, "node_id": "MDU6SXNzdWU1NDUzMjI1NTQ=", "number": 741, "title": "typed_ast on Python 3.8", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-04T19:25:23Z", "updated_at": "2020-01-04T20:55:09Z", "closed_at": "2020-01-04T20:55:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It looks like `typed_ast` 1.4.0 supports Python 3.8. However, astroid doesn't install it in that situation:\r\n\r\nhttps://github.com/PyCQA/astroid/blob/67321ee2f97b5b096acee9d2395a32bb6e68083a/astroid/__pkginfo__.py#L28\r\n\r\nI'd happily open a PR for this - would you prefer this on the `2.3` or `master` branch? If you prefer, feel free to do the change yourself, might be quicker that way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/736", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/736/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/736/events", "html_url": "https://github.com/PyCQA/astroid/issues/736", "id": 541925254, "node_id": "MDU6SXNzdWU1NDE5MjUyNTQ=", "number": 736, "title": "v1.6.6: ImportError: cannot import name extract_node", "user": {"login": "dagwieers", "id": 388198, "node_id": "MDQ6VXNlcjM4ODE5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/388198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dagwieers", "html_url": "https://github.com/dagwieers", "followers_url": "https://api.github.com/users/dagwieers/followers", "following_url": "https://api.github.com/users/dagwieers/following{/other_user}", "gists_url": "https://api.github.com/users/dagwieers/gists{/gist_id}", "starred_url": "https://api.github.com/users/dagwieers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dagwieers/subscriptions", "organizations_url": "https://api.github.com/users/dagwieers/orgs", "repos_url": "https://api.github.com/users/dagwieers/repos", "events_url": "https://api.github.com/users/dagwieers/events{/privacy}", "received_events_url": "https://api.github.com/users/dagwieers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-23T22:42:25Z", "updated_at": "2019-12-23T22:46:42Z", "closed_at": "2019-12-23T22:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a problem introduced in v1.6.6 causing:\r\n```\r\n= Starting sanity pylint test\r\npython -m pylint resources/lib/ test/\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/runpy.py\", line 162, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib64/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/usr/lib/python2.7/site-packages/pylint/__main__.py\", line 7, in <module>\r\n    pylint.run_pylint()\r\n  File \"/usr/lib/python2.7/site-packages/pylint/__init__.py\", line 15, in run_pylint\r\n    from pylint.lint import Run\r\n  File \"/usr/lib/python2.7/site-packages/pylint/lint.py\", line 64, in <module>\r\n    import astroid\r\n  File \"/usr/lib/python2.7/site-packages/astroid/__init__.py\", line 136, in <module>\r\n    __import__(module[:-3])\r\n  File \"/usr/lib/python2.7/site-packages/astroid/brain/brain_functools.py\", line 7, in <module>\r\n    from astroid import extract_node\r\nImportError: cannot import name extract_node\r\n```\r\n\r\nThis is because `extract_node` is imported from `astroid` instead of `astroid.builder`. It seems v1.6.5 was not affected by this.\r\nhttps://github.com/PyCQA/astroid/blob/af8fe7a4657be65e8087e9e4a68e6390d8ea38f3/astroid/brain/brain_functools.py#L7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/728", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/728/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/728/events", "html_url": "https://github.com/PyCQA/astroid/issues/728", "id": 530762853, "node_id": "MDU6SXNzdWU1MzA3NjI4NTM=", "number": 728, "title": "brain_gi: magic methods are not recognized for Gtk objects", "user": {"login": "lovetox", "id": 8661218, "node_id": "MDQ6VXNlcjg2NjEyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8661218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lovetox", "html_url": "https://github.com/lovetox", "followers_url": "https://api.github.com/users/lovetox/followers", "following_url": "https://api.github.com/users/lovetox/following{/other_user}", "gists_url": "https://api.github.com/users/lovetox/gists{/gist_id}", "starred_url": "https://api.github.com/users/lovetox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lovetox/subscriptions", "organizations_url": "https://api.github.com/users/lovetox/orgs", "repos_url": "https://api.github.com/users/lovetox/repos", "events_url": "https://api.github.com/users/lovetox/events{/privacy}", "received_events_url": "https://api.github.com/users/lovetox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-01T17:10:32Z", "updated_at": "2019-12-04T08:33:58Z", "closed_at": "2019-12-04T08:33:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\n```\r\nfrom gi.repository import Gtk\r\n\r\nmodel = Gtk.ListStore(str)\r\nmodel.append([\"asd\"])\r\na = model[0][0]\r\nprint(a)\r\n```\r\n\r\nSee also https://gitlab.gnome.org/GNOME/pygobject/issues/361\r\n\r\n### Current behavior\r\n\r\nThis yields E1136: Value 'model' is unsubscriptable (unsubscriptable-object)\r\n\r\nThis is a false positive, the ListStore Widget implements `__setitem__()`\r\n\r\n### Version\r\npylint 2.4.4\r\nastroid 2.3.3\r\nPython 3.5.4 (v3.5.4:3f56838, Aug  8 2017, 02:17:05) [MSC v.1900 64 bit (AMD64)]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/725", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/725/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/725/events", "html_url": "https://github.com/PyCQA/astroid/issues/725", "id": 526039800, "node_id": "MDU6SXNzdWU1MjYwMzk4MDA=", "number": 725, "title": "Create astroid module from a string using AstroidManager", "user": {"login": "thisch", "id": 206581, "node_id": "MDQ6VXNlcjIwNjU4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisch", "html_url": "https://github.com/thisch", "followers_url": "https://api.github.com/users/thisch/followers", "following_url": "https://api.github.com/users/thisch/following{/other_user}", "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisch/subscriptions", "organizations_url": "https://api.github.com/users/thisch/orgs", "repos_url": "https://api.github.com/users/thisch/repos", "events_url": "https://api.github.com/users/thisch/events{/privacy}", "received_events_url": "https://api.github.com/users/thisch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001885425, "node_id": "MDU6TGFiZWwxMDAxODg1NDI1", "url": "https://api.github.com/repos/PyCQA/astroid/labels/contributor%20friendly", "name": "contributor friendly", "color": "79bfe5", "default": false, "description": ""}, {"id": 297123626, "node_id": "MDU6TGFiZWwyOTcxMjM2MjY=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-20T19:02:38Z", "updated_at": "2020-03-11T13:04:41Z", "closed_at": "2020-03-11T13:04:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For the read-from-stdin feature in pylint an AST is constructed using \r\n\r\n```py\r\nAstroidBuilder(MANAGER).string_build(data, modname, filepath)\r\n```\r\nwhereas for regular modules it is constructed using\r\n\r\n```py\r\nMANAGER.ast_from_file(filepath, modname, source=True)\r\n```\r\nSee the get_ast method in https://github.com/PyCQA/pylint/pull/3257/files/5b24700e7bf84d1f2ae6fcd468acf5a9f6f1c458\r\n\r\nThe module docstring of astroid.manager suggests that the Manager should be used for both cases in pylint. \r\n\r\nTherefore, AstroidManager should provide a way to create an AST from a string.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/722", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/722/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/722/events", "html_url": "https://github.com/PyCQA/astroid/issues/722", "id": 523178093, "node_id": "MDU6SXNzdWU1MjMxNzgwOTM=", "number": 722, "title": "\"unexpected-keyword-arg\" (Unexpected keyword argument 'text') error on subprocess.check_output", "user": {"login": "avancil", "id": 10202123, "node_id": "MDQ6VXNlcjEwMjAyMTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10202123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avancil", "html_url": "https://github.com/avancil", "followers_url": "https://api.github.com/users/avancil/followers", "following_url": "https://api.github.com/users/avancil/following{/other_user}", "gists_url": "https://api.github.com/users/avancil/gists{/gist_id}", "starred_url": "https://api.github.com/users/avancil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avancil/subscriptions", "organizations_url": "https://api.github.com/users/avancil/orgs", "repos_url": "https://api.github.com/users/avancil/repos", "events_url": "https://api.github.com/users/avancil/events{/privacy}", "received_events_url": "https://api.github.com/users/avancil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-15T00:10:39Z", "updated_at": "2020-02-25T15:17:01Z", "closed_at": "2019-11-17T08:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Python 3.6.8\r\n2. check_output(\"ls\", preexec_fn=lambda: None)\r\n3. pylint -E\r\n\r\n### Current behavior\r\ntemp.py:9:0: E1123: Unexpected keyword argument 'preexec_fn' in function call (unexpected-keyword-arg)\r\n\r\n### Expected behavior\r\nNo error\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.3.3\r\n\r\nSee recently closed #715. All Popen arguments need to be supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/720", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/720/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/720/events", "html_url": "https://github.com/PyCQA/astroid/issues/720", "id": 522311042, "node_id": "MDU6SXNzdWU1MjIzMTEwNDI=", "number": 720, "title": "Question about brain tips for third-party libs", "user": {"login": "gyermolenko", "id": 10965580, "node_id": "MDQ6VXNlcjEwOTY1NTgw", "avatar_url": "https://avatars1.githubusercontent.com/u/10965580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyermolenko", "html_url": "https://github.com/gyermolenko", "followers_url": "https://api.github.com/users/gyermolenko/followers", "following_url": "https://api.github.com/users/gyermolenko/following{/other_user}", "gists_url": "https://api.github.com/users/gyermolenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyermolenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyermolenko/subscriptions", "organizations_url": "https://api.github.com/users/gyermolenko/orgs", "repos_url": "https://api.github.com/users/gyermolenko/repos", "events_url": "https://api.github.com/users/gyermolenko/events{/privacy}", "received_events_url": "https://api.github.com/users/gyermolenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T15:53:33Z", "updated_at": "2019-11-13T16:09:22Z", "closed_at": "2019-11-13T16:09:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\n\r\nSeems like `astroid` maintains brain tips for some third-party libraries like `numpy`, `pytest` , `responses` and many others.\r\nThere are some related github/Issues in pylint/astroid in regard to what they could/couldn't infer from some third-party modules.\r\n\r\nIt looks like responsibility for corresponding plugin, to have such tips?\r\nOr maybe I'm missing something. Could you please clarify?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/718", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/718/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/718/events", "html_url": "https://github.com/PyCQA/astroid/issues/718", "id": 517960586, "node_id": "MDU6SXNzdWU1MTc5NjA1ODY=", "number": 718, "title": "Update six version", "user": {"login": "uilianries", "id": 4870173, "node_id": "MDQ6VXNlcjQ4NzAxNzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4870173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uilianries", "html_url": "https://github.com/uilianries", "followers_url": "https://api.github.com/users/uilianries/followers", "following_url": "https://api.github.com/users/uilianries/following{/other_user}", "gists_url": "https://api.github.com/users/uilianries/gists{/gist_id}", "starred_url": "https://api.github.com/users/uilianries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uilianries/subscriptions", "organizations_url": "https://api.github.com/users/uilianries/orgs", "repos_url": "https://api.github.com/users/uilianries/repos", "events_url": "https://api.github.com/users/uilianries/events{/privacy}", "received_events_url": "https://api.github.com/users/uilianries/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-05T18:49:26Z", "updated_at": "2019-11-06T18:33:40Z", "closed_at": "2019-11-06T18:33:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. pip install -U six\r\n2. pip install astroid\r\n\r\n\r\n### Current behavior\r\n    ERROR: astroid 2.3.2 has requirement six==1.12, but you'll have six 1.13.0 which is incompatible.\r\n\r\n### Expected behavior\r\n\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/716", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/716/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/716/events", "html_url": "https://github.com/PyCQA/astroid/issues/716", "id": 513336755, "node_id": "MDU6SXNzdWU1MTMzMzY3NTU=", "number": 716, "title": "Add brain for \"responses\"", "user": {"login": "sscherfke", "id": 511179, "node_id": "MDQ6VXNlcjUxMTE3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/511179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sscherfke", "html_url": "https://github.com/sscherfke", "followers_url": "https://api.github.com/users/sscherfke/followers", "following_url": "https://api.github.com/users/sscherfke/following{/other_user}", "gists_url": "https://api.github.com/users/sscherfke/gists{/gist_id}", "starred_url": "https://api.github.com/users/sscherfke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sscherfke/subscriptions", "organizations_url": "https://api.github.com/users/sscherfke/orgs", "repos_url": "https://api.github.com/users/sscherfke/repos", "events_url": "https://api.github.com/users/sscherfke/events{/privacy}", "received_events_url": "https://api.github.com/users/sscherfke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-28T14:23:19Z", "updated_at": "2019-11-06T19:37:21Z", "closed_at": "2019-11-06T19:37:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The *requests* mock package *responses* [does not work well with pylint](https://github.com/getsentry/responses/issues/74), because they have global mock object whose methods they transform into module level \"functions\".  Astroid currenty cannot pick up these functions, but they could easily be added via a brain:\r\n\r\n```python\r\n# astroid/brain/brain_responses.py\r\n\"\"\"\r\nAstroid hooks for responses.\r\n\r\n\"\"\"\r\nimport astroid\r\n\r\n\r\ndef responses_funcs():\r\n    return astroid.parse(\r\n        \"\"\"\r\n        DELETE = \"DELETE\"\r\n        GET = \"GET\"\r\n        HEAD = \"HEAD\"\r\n        OPTIONS = \"OPTIONS\"\r\n        PATCH = \"PATCH\"\r\n        POST = \"POST\"\r\n        PUT = \"PUT\"\r\n        response_callback = None\r\n\r\n        def reset():\r\n            return\r\n\r\n        def add(\r\n            method=None,  # method or ``Response``\r\n            url=None,\r\n            body=\"\",\r\n            adding_headers=None,\r\n            *args,\r\n            **kwargs\r\n        ):\r\n            return\r\n\r\n        def add_passthru(prefix):\r\n            return\r\n\r\n        def remove(method_or_response=None, url=None):\r\n            return\r\n\r\n        def replace(method_or_response=None, url=None, body=\"\", *args, **kwargs):\r\n            return\r\n\r\n        def add_callback(\r\n            method, url, callback, match_querystring=False, content_type=\"text/plain\"\r\n        ):\r\n            return\r\n\r\n        calls = []\r\n\r\n        def __enter__():\r\n            return\r\n\r\n        def __exit__(type, value, traceback):\r\n            success = type is None\r\n            return success\r\n\r\n        def activate(func):\r\n            return func\r\n\r\n        def start():\r\n            return\r\n\r\n        def stop(allow_assert=True):\r\n            return\r\n        \"\"\"\r\n    )\r\n\r\n\r\nastroid.register_module_extender(astroid.MANAGER, 'responses', responses_funcs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/715", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/715/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/715/events", "html_url": "https://github.com/PyCQA/astroid/issues/715", "id": 511155738, "node_id": "MDU6SXNzdWU1MTExNTU3Mzg=", "number": 715, "title": "\"unexpected-keyword-arg\" (Unexpected keyword argument 'text') error on subprocess.check_output", "user": {"login": "glicht", "id": 1395797, "node_id": "MDQ6VXNlcjEzOTU3OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1395797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glicht", "html_url": "https://github.com/glicht", "followers_url": "https://api.github.com/users/glicht/followers", "following_url": "https://api.github.com/users/glicht/following{/other_user}", "gists_url": "https://api.github.com/users/glicht/gists{/gist_id}", "starred_url": "https://api.github.com/users/glicht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glicht/subscriptions", "organizations_url": "https://api.github.com/users/glicht/orgs", "repos_url": "https://api.github.com/users/glicht/repos", "events_url": "https://api.github.com/users/glicht/events{/privacy}", "received_events_url": "https://api.github.com/users/glicht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-23T08:16:35Z", "updated_at": "2020-03-12T15:39:29Z", "closed_at": "2019-10-30T09:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n 1. Use python 3.7 and up\r\n 2. Use the following code:\r\n```python\r\nimport subprocess\r\n\r\n\r\nres = subprocess.check_output(['echo', 'all is good'], text=True)\r\nprint(res)\r\n```\r\n 3. Run: `pylint -E` \r\n\r\n### Current behavior\r\nReceive following error:\r\n```\r\ntest.py:4:6: E1123: Unexpected keyword argument 'text' in function call (unexpected-keyword-arg)\r\n```\r\n\r\n### Expected behavior\r\nNo error should be received. `text` is a valid keyword  for `subprocess.check_output` starting with python 3.7.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.3.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/714", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/714/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/714/events", "html_url": "https://github.com/PyCQA/astroid/issues/714", "id": 510513363, "node_id": "MDU6SXNzdWU1MTA1MTMzNjM=", "number": 714, "title": "Nested lambdas trigger \"undefined-variable\" warnings when referring to arguments in enclosing lambdas", "user": {"login": "vrikodhara", "id": 152754, "node_id": "MDQ6VXNlcjE1Mjc1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/152754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrikodhara", "html_url": "https://github.com/vrikodhara", "followers_url": "https://api.github.com/users/vrikodhara/followers", "following_url": "https://api.github.com/users/vrikodhara/following{/other_user}", "gists_url": "https://api.github.com/users/vrikodhara/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrikodhara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrikodhara/subscriptions", "organizations_url": "https://api.github.com/users/vrikodhara/orgs", "repos_url": "https://api.github.com/users/vrikodhara/repos", "events_url": "https://api.github.com/users/vrikodhara/events{/privacy}", "received_events_url": "https://api.github.com/users/vrikodhara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-22T08:48:03Z", "updated_at": "2019-10-30T12:38:39Z", "closed_at": "2019-10-30T08:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Create a file with the following code:\r\n``` python\r\na = lambda f: lambda n: lambda x: f(x * n)\r\nprint(a(lambda x: x + \" \"  + x)(3)(\"#\"))\r\n```\r\n2. Run lint\r\n\r\n### Current behaviour\r\nGet the following message:\r\n```\r\nC:  1, 0: Missing module docstring (missing-docstring)\r\nC:  1, 0: Invalid constant name \"a\" (invalid-name)\r\nE:  1,34: Undefined variable 'f' (undefined-variable)\r\nE:  1,40: Undefined variable 'n' (undefined-variable)\r\n```\r\n\r\n### Expected behavior\r\n\"f\" and \"n\" are defined and should not trigger warning.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.3.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/708", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/708/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/708/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/708/events", "html_url": "https://github.com/PyCQA/astroid/issues/708", "id": 509099998, "node_id": "MDU6SXNzdWU1MDkwOTk5OTg=", "number": 708, "title": "Parsing of commented code throws 'misplaced type annotation'", "user": {"login": "Flamefire", "id": 309017, "node_id": "MDQ6VXNlcjMwOTAxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/309017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flamefire", "html_url": "https://github.com/Flamefire", "followers_url": "https://api.github.com/users/Flamefire/followers", "following_url": "https://api.github.com/users/Flamefire/following{/other_user}", "gists_url": "https://api.github.com/users/Flamefire/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flamefire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flamefire/subscriptions", "organizations_url": "https://api.github.com/users/Flamefire/orgs", "repos_url": "https://api.github.com/users/Flamefire/repos", "events_url": "https://api.github.com/users/Flamefire/events{/privacy}", "received_events_url": "https://api.github.com/users/Flamefire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-18T14:00:07Z", "updated_at": "2019-11-26T08:19:13Z", "closed_at": "2019-11-26T08:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Try to parse e.g. `tensorflow_core/python/ops/gen_resource_variable_ops.py`\r\n\r\nAlternatively the code that triggers this:\r\n\r\n```\r\ndef _InitOpDefLibrary(op_list_proto_bytes):\r\n  op_list = _op_def_pb2.OpList()\r\n  op_list.ParseFromString(op_list_proto_bytes)\r\n  _op_def_registry.register_op_list(op_list)\r\n  op_def_lib = _op_def_library.OpDefLibrary()\r\n  op_def_lib.add_op_list(op_list)\r\n  return op_def_lib\r\n# op {\r\n#   name: \"AssignAddVariableOp\"\r\n#   input_arg {\r\n#     name: \"resource\"\r\n#     type: DT_RESOURCE\r\n#   }\r\n#   input_arg {\r\n#     name: \"value\"\r\n#     type_attr: \"dtype\"\r\n#   }\r\n#   attr {\r\n#     name: \"dtype\"\r\n#     type: \"type\"\r\n#   }\r\n#   is_stateful: true\r\n# }\r\n```\r\n\r\n### Current behavior\r\n\r\nException thrown (SyntaxError)\r\n\r\n### Expected behavior\r\n\r\nException/Error ignored (as there is none)\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.3.1\r\n\r\nNote that this happens when parsing tensorflow e.g. for pylint, so this is a real use case, although with presumptly generated code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/705", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/705/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/705/events", "html_url": "https://github.com/PyCQA/astroid/issues/705", "id": 507480326, "node_id": "MDU6SXNzdWU1MDc0ODAzMjY=", "number": 705, "title": "as_string() doesn't include class keyword arguments, particularly metaclass", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T21:00:28Z", "updated_at": "2019-10-16T09:50:18Z", "closed_at": "2019-10-16T09:50:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nimport astroid\r\n\r\nprint(astroid.parse('class A(metaclass=B): pass').as_string())\r\nprint(astroid.__pkginfo__.version)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nclass A:\r\n    pass\r\n\r\n2.3.1\r\n```\r\n\r\nTry it here: https://repl.it/repls/PettyKhakiCompilers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/701", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/701/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/701/events", "html_url": "https://github.com/PyCQA/astroid/issues/701", "id": 501392921, "node_id": "MDU6SXNzdWU1MDEzOTI5MjE=", "number": 701, "title": "numpy function output not detected as ndarray ", "user": {"login": "poldavezac", "id": 1200250, "node_id": "MDQ6VXNlcjEyMDAyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1200250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poldavezac", "html_url": "https://github.com/poldavezac", "followers_url": "https://api.github.com/users/poldavezac/followers", "following_url": "https://api.github.com/users/poldavezac/following{/other_user}", "gists_url": "https://api.github.com/users/poldavezac/gists{/gist_id}", "starred_url": "https://api.github.com/users/poldavezac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poldavezac/subscriptions", "organizations_url": "https://api.github.com/users/poldavezac/orgs", "repos_url": "https://api.github.com/users/poldavezac/repos", "events_url": "https://api.github.com/users/poldavezac/events{/privacy}", "received_events_url": "https://api.github.com/users/poldavezac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T09:59:09Z", "updated_at": "2019-10-02T10:11:34Z", "closed_at": "2019-10-02T10:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\ncreate a file with: \r\n\"\"\"\r\nimport numpy as np\r\ndef mmm():\r\n    \"mmm\"\r\n    outs      = np.zeros((10, 2), dtype = \"i4\")\r\n    outs[:,0] = np.arange(outs.shape[0], dtype = 'i4')\r\n\"\"\"\r\nrun: pylint file.py -d C0326\r\n \r\n### Current behavior\r\nerror output is:\r\nE1136: Value 'outs.shape' is unsubscriptable (unsubscriptable-object)\r\n\r\n### Expected behavior\r\nno errors were detected with astroid  2.2.5 and pylint 2.3.1\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\nastroid = 2.3.1\r\npylint = 2.4.2 \r\n\r\nThere are many  other errors of such type in my code. As I understand it, this is because of astroid not inferring the numpy function's return type but I could be wrong.\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/699", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/699/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/699/events", "html_url": "https://github.com/PyCQA/astroid/issues/699", "id": 498846032, "node_id": "MDU6SXNzdWU0OTg4NDYwMzI=", "number": 699, "title": "Incompatible with mypy on python 3.6", "user": {"login": "NickeZ", "id": 492753, "node_id": "MDQ6VXNlcjQ5Mjc1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/492753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NickeZ", "html_url": "https://github.com/NickeZ", "followers_url": "https://api.github.com/users/NickeZ/followers", "following_url": "https://api.github.com/users/NickeZ/following{/other_user}", "gists_url": "https://api.github.com/users/NickeZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/NickeZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NickeZ/subscriptions", "organizations_url": "https://api.github.com/users/NickeZ/orgs", "repos_url": "https://api.github.com/users/NickeZ/repos", "events_url": "https://api.github.com/users/NickeZ/events{/privacy}", "received_events_url": "https://api.github.com/users/NickeZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-26T12:15:55Z", "updated_at": "2019-09-26T14:14:42Z", "closed_at": "2019-09-26T12:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. python3 -m pip install mypy pylint\r\n\r\n### Current behavior\r\n```\r\nERROR: astroid 2.3.0 has requirement typed-ast<1.3.0; implementation_name == \"cpython\" and python_version < \"3.7\", but you'll have typed-ast 1.4.0 which is incompatible.\r\n```\r\n\r\n### Expected behavior\r\nWork\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n```\r\npython -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"\r\n2.3.0\r\n```\r\n\r\nIf I understand correctly this will be solved with the 2.3.1 release. Do you intend to release it soon (like within a week) or more like in 6 months?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/698", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/698/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/698/events", "html_url": "https://github.com/PyCQA/astroid/issues/698", "id": 498460527, "node_id": "MDU6SXNzdWU0OTg0NjA1Mjc=", "number": 698, "title": "Regression in astroid 2.3.0 for children of dataclasses", "user": {"login": "lbenezriravin", "id": 25595051, "node_id": "MDQ6VXNlcjI1NTk1MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/25595051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbenezriravin", "html_url": "https://github.com/lbenezriravin", "followers_url": "https://api.github.com/users/lbenezriravin/followers", "following_url": "https://api.github.com/users/lbenezriravin/following{/other_user}", "gists_url": "https://api.github.com/users/lbenezriravin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbenezriravin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbenezriravin/subscriptions", "organizations_url": "https://api.github.com/users/lbenezriravin/orgs", "repos_url": "https://api.github.com/users/lbenezriravin/repos", "events_url": "https://api.github.com/users/lbenezriravin/events{/privacy}", "received_events_url": "https://api.github.com/users/lbenezriravin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-25T18:47:47Z", "updated_at": "2019-09-26T13:06:21Z", "closed_at": "2019-09-26T07:26:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nRun pylint on the following code:\r\n```\r\nfrom dataclasses import dataclass\r\n\r\n@dataclass\r\nclass Ant:\r\n    cat: int\r\n\r\nclass Bat(Ant):\r\n    def dog(self):\r\n        return self.cat\r\n\r\nprint(Bat(5).dog())\r\n```\r\n\r\n### Current behavior\r\n```\r\nfoo.py:9:15: E1101: Instance of 'Bat' has no 'cat' member (no-member)\r\n```\r\n\r\n### Expected behavior\r\nNo error. Running the script completes without error. Furthermore, reverting to astroid 2.2.5 solves this problem.\r\n\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n`2.3.0`\r\n\r\nThank you for your work on an amazing tool!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/696", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/696/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/696/events", "html_url": "https://github.com/PyCQA/astroid/issues/696", "id": 497698181, "node_id": "MDU6SXNzdWU0OTc2OTgxODE=", "number": 696, "title": "Dependency on typed-ast breaks with Pylint and mypy", "user": {"login": "Maddosaurus", "id": 8026915, "node_id": "MDQ6VXNlcjgwMjY5MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8026915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maddosaurus", "html_url": "https://github.com/Maddosaurus", "followers_url": "https://api.github.com/users/Maddosaurus/followers", "following_url": "https://api.github.com/users/Maddosaurus/following{/other_user}", "gists_url": "https://api.github.com/users/Maddosaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maddosaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maddosaurus/subscriptions", "organizations_url": "https://api.github.com/users/Maddosaurus/orgs", "repos_url": "https://api.github.com/users/Maddosaurus/repos", "events_url": "https://api.github.com/users/Maddosaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/Maddosaurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-24T13:43:58Z", "updated_at": "2019-09-26T07:38:37Z", "closed_at": "2019-09-26T07:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Starting from a clean Pipfile with no pinned versions with just mypy and pylint as requirements, do a `pipenv install`:\r\n```\r\n[[source]]\r\nname = \"pypi\"\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\n\r\n[dev-packages]\r\npylint = \"*\"\r\nmypy = \"*\"\r\n\r\n[packages]\r\n\r\n[requires]\r\npython_version = \"3.6\"\r\n```\r\n2. Observe pipenv failing the install command with `There are incompatible versions in the resolved dependencies.`\r\n3. By manually pinning astroid to `==2.2.5`, this can be mitigated\r\n\r\n### Current behavior\r\nPipenv fails with `There are incompatible versions in the resolved dependencies.`  \r\n`ERROR: Could not find a version that matches typed-ast<1.3.0,<1.5.0,>=1.4.0`\r\n### Expected behavior\r\nPipenv is able to write a Pipfile.lock\r\n\r\n\r\nThis looks like #639 again, although I'm not sure.  \r\n\r\nAny help would be appreciated!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/695", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/695/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/695/events", "html_url": "https://github.com/PyCQA/astroid/issues/695", "id": 495726376, "node_id": "MDU6SXNzdWU0OTU3MjYzNzY=", "number": 695, "title": "NumPy brain crash", "user": {"login": "joreiff", "id": 3749578, "node_id": "MDQ6VXNlcjM3NDk1Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3749578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joreiff", "html_url": "https://github.com/joreiff", "followers_url": "https://api.github.com/users/joreiff/followers", "following_url": "https://api.github.com/users/joreiff/following{/other_user}", "gists_url": "https://api.github.com/users/joreiff/gists{/gist_id}", "starred_url": "https://api.github.com/users/joreiff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joreiff/subscriptions", "organizations_url": "https://api.github.com/users/joreiff/orgs", "repos_url": "https://api.github.com/users/joreiff/repos", "events_url": "https://api.github.com/users/joreiff/events{/privacy}", "received_events_url": "https://api.github.com/users/joreiff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T10:57:59Z", "updated_at": "2019-09-20T09:55:20Z", "closed_at": "2019-09-20T09:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nCreate an AST for the following code snippet, e.g. using pylint:\r\n```\r\nif False:\r\n    def linspace():\r\n        pass\r\n```\r\n\r\n### Current behavior\r\n```\r\nTraceback (most recent call last):\r\n  File \"...\\site-packages\\pylint\\lint.py\", line 1119, in get_ast\r\n    return MANAGER.ast_from_file(filepath, modname, source=True)\r\n  File \"...\\site-packages\\astroid\\manager.py\", line 91, in ast_from_file\r\n    return AstroidBuilder(self).file_build(filepath, modname)\r\n  File \"...\\site-packages\\astroid\\builder.py\", line 136, in file_build\r\n    return self._post_build(module, encoding)\r\n  File \"...\\site-packages\\astroid\\builder.py\", line 160, in _post_build\r\n    module = self._manager.visit_transforms(module)\r\n  File \"...\\site-packages\\astroid\\manager.py\", line 69, in visit_transforms\r\n    return self._transform.visit(node)\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 89, in visit\r\n    module.body = [self._visit(child) for child in module.body]\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 89, in <listcomp>\r\n    module.body = [self._visit(child) for child in module.body]\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 54, in _visit\r\n    visited = self._visit_generic(value)\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 61, in _visit_generic\r\n    return [self._visit_generic(child) for child in node]\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 61, in <listcomp>\r\n    return [self._visit_generic(child) for child in node]\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 67, in _visit_generic\r\n    return self._visit(node)\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 57, in _visit\r\n    return self._transform(node)\r\n  File \"...\\site-packages\\astroid\\transforms.py\", line 39, in _transform\r\n    if predicate is None or predicate(node):\r\n  File \"...\\site-packages\\astroid\\brain\\brain_numpy.py\", line 499, in _looks_like_numpy_function\r\n    return node.name == func_name and node.parent.name == numpy_module_name\r\nAttributeError: 'If' object has no attribute 'name'\r\n```\r\n\r\n### Expected behavior\r\nNo crash.\r\n\r\n### astroid version\r\n2.2.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/691", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/691/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/691/events", "html_url": "https://github.com/PyCQA/astroid/issues/691", "id": 488289102, "node_id": "MDU6SXNzdWU0ODgyODkxMDI=", "number": 691, "title": "Removing NodeNG.nearest method", "user": {"login": "kavins14", "id": 18351436, "node_id": "MDQ6VXNlcjE4MzUxNDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/18351436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kavins14", "html_url": "https://github.com/kavins14", "followers_url": "https://api.github.com/users/kavins14/followers", "following_url": "https://api.github.com/users/kavins14/following{/other_user}", "gists_url": "https://api.github.com/users/kavins14/gists{/gist_id}", "starred_url": "https://api.github.com/users/kavins14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kavins14/subscriptions", "organizations_url": "https://api.github.com/users/kavins14/orgs", "repos_url": "https://api.github.com/users/kavins14/repos", "events_url": "https://api.github.com/users/kavins14/events{/privacy}", "received_events_url": "https://api.github.com/users/kavins14/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-02T18:31:53Z", "updated_at": "2019-09-10T08:22:53Z", "closed_at": "2019-09-10T08:22:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "EDIT:\r\nBased on discussions below we have decided to remove this method altogether because it's not being used in `astroid` or `pylint` and that it doesn't seem to have any use in the near future.\r\n\r\n### Steps to reproduce\r\nRun this script:\r\n```\r\nsrc = \"\"\"\r\nprint(before)\r\nprint(random)\r\nprint(middle)\r\nprint(after)\r\n\"\"\"\r\nmod = astroid.parse(src)\r\nbefore, _, middle, after = mod.body\r\nprint(middle.nearest([before, after]))\r\n``` \r\n\r\n### Current behavior\r\n`middle.nearest([before, after])` returns `before`.\r\n\r\n### Expected behavior\r\n`middle.nearest([before, after])` should return `after` since it's closer\r\n\r\n### Issue Description\r\nThe issue is that for a NodeNG node `n`, `n.nearest` method only returns the nearest node that occurs on lines before `n` and disregards any nodes on the lines after.\r\n\r\nhttps://github.com/PyCQA/astroid/blob/33488e28677a1e980361757cdb1db0eb13c99435/astroid/node_classes.py#L582-L607\r\n\r\nI see two possible fixes for this:\r\n\r\n1. Fix the method implementation so that the node that is the closest (either before or after) is returned (where precedence is given to the node before).\r\n2. Update the docstring so that it is in tandem with how the method currently works.\r\n\r\nI think that fix (1) is in line with method description so I will be making a PR for this.\r\n\r\nNote: There is no usage of `NodeNG.nearest` in both `pylint`'s  and `astroid`'s source code.\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.3.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/689", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/689/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/689/events", "html_url": "https://github.com/PyCQA/astroid/issues/689", "id": 484941123, "node_id": "MDU6SXNzdWU0ODQ5NDExMjM=", "number": 689, "title": "Incorrect \"unsupported-membership-test\" error on subprocess.check_output", "user": {"login": "ncoghlan", "id": 1026649, "node_id": "MDQ6VXNlcjEwMjY2NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncoghlan", "html_url": "https://github.com/ncoghlan", "followers_url": "https://api.github.com/users/ncoghlan/followers", "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}", "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions", "organizations_url": "https://api.github.com/users/ncoghlan/orgs", "repos_url": "https://api.github.com/users/ncoghlan/repos", "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}", "received_events_url": "https://api.github.com/users/ncoghlan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001885216, "node_id": "MDU6TGFiZWwxMDAxODg1MjE2", "url": "https://api.github.com/repos/PyCQA/astroid/labels/brain", "name": "brain", "color": "bf1e05", "default": false, "description": ""}, {"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1001885425, "node_id": "MDU6TGFiZWwxMDAxODg1NDI1", "url": "https://api.github.com/repos/PyCQA/astroid/labels/contributor%20friendly", "name": "contributor friendly", "color": "79bfe5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-25T15:02:21Z", "updated_at": "2019-09-20T10:50:34Z", "closed_at": "2019-09-11T12:33:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Migrating from https://github.com/PyCQA/pylint/issues/3045#issuecomment-523343294)\r\n### Steps to reproduce\r\n1. Perform a substring check on the result of subprocess.check_output\r\n\r\n### Current behavior\r\n\r\npylint reports E1135 (unsupported-membership-test)\r\n\r\n### Expected behavior\r\n\r\npylint allows the operation (since both bytes and strings support containment checks, and those are the two possible return types from `check_output`)\r\n\r\n### Software version\r\n\r\nThe error was found on Debian 9 with pylint 2.3.1, astroid 2.2.5, and Python 3.5.3.\r\n\r\n### Additional info\r\n\r\n```$ cat check_pylint_e1135.py\r\nimport subprocess\r\n\r\nbytes_data = subprocess.check_output(['echo', 'hello']);\r\ntext_data = subprocess.check_output(['echo', 'hello'], universal_newlines=True);\r\n\r\nprint(b'bytes' in bytes_data) # Prints False\r\nprint('text' in text_data)    # Prints False\r\n'text' in bytes_data   # Runtime TypeError\r\nb'bytes' in text_data  # Runtime TypeError\r\n```\r\n\r\n```\r\n$ pylint -E check_pylint_e1135.py\r\n************* Module check_pylint_e1135\r\ncheck_pylint_e1135.py:6:18: E1135: Value 'bytes_data' doesn't support membership test (unsupported-membership-test)\r\ncheck_pylint_e1135.py:7:16: E1135: Value 'text_data' doesn't support membership test (unsupported-membership-test)\r\ncheck_pylint_e1135.py:8:10: E1135: Value 'bytes_data' doesn't support membership test (unsupported-membership-test)\r\ncheck_pylint_e1135.py:9:12: E1135: Value 'text_data' doesn't support membership test (unsupported-membership-test)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/688", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/688/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/688/events", "html_url": "https://github.com/PyCQA/astroid/issues/688", "id": 481281756, "node_id": "MDU6SXNzdWU0ODEyODE3NTY=", "number": 688, "title": "Function type annotation with default value", "user": {"login": "nikhilkalige", "id": 1267404, "node_id": "MDQ6VXNlcjEyNjc0MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1267404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilkalige", "html_url": "https://github.com/nikhilkalige", "followers_url": "https://api.github.com/users/nikhilkalige/followers", "following_url": "https://api.github.com/users/nikhilkalige/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilkalige/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilkalige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilkalige/subscriptions", "organizations_url": "https://api.github.com/users/nikhilkalige/orgs", "repos_url": "https://api.github.com/users/nikhilkalige/repos", "events_url": "https://api.github.com/users/nikhilkalige/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilkalige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T18:39:25Z", "updated_at": "2019-08-17T00:55:26Z", "closed_at": "2019-08-15T18:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n```\r\nastroid.extract_node('def foo(bar:int, x: float, y: str, test:str='') -> str:pass')\r\n```\r\n\r\n### Current behavior\r\n```\r\nSyntaxError                               Traceback (most recent call last)\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/astroid/builder.py in _data_build(self, data, modname, path)\r\n    165         try:\r\n--> 166             node = _parse(data + \"\\n\")\r\n    167         except (TypeError, ValueError, SyntaxError) as exc:\r\n\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/astroid/_ast.py in _parse(string, parse_python_two)\r\n     39             parse_func = partial(parse_func, feature_version=sys.version_info.minor)\r\n---> 40     return parse_func(string)\r\n     41 \r\n\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/typed_ast/ast3.py in parse(source, filename, mode, feature_version)\r\n     59     \"\"\"\r\n---> 60     return _ast3._parse(source, filename, mode, feature_version)\r\n     61 \r\n\r\nSyntaxError: invalid syntax (<unknown>, line 1)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nAstroidSyntaxError                        Traceback (most recent call last)\r\n<ipython-input-4-966008fbc97a> in <module>()\r\n----> 1 astroid.extract_node('def foo(bar:int, x: float, y: str, test:str='') -> str:pass')\r\n\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/astroid/builder.py in extract_node(code, module_name)\r\n    416             requested_lines.append(idx + 1)\r\n    417 \r\n--> 418     tree = parse(code, module_name=module_name)\r\n    419     if not tree.body:\r\n    420         raise ValueError(\"Empty tree, cannot extract from it\")\r\n\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/astroid/builder.py in parse(code, module_name, path, apply_transforms)\r\n    273     code = textwrap.dedent(code)\r\n    274     builder = AstroidBuilder(manager=MANAGER, apply_transforms=apply_transforms)\r\n--> 275     return builder.string_build(code, modname=module_name, path=path)\r\n    276 \r\n    277 \r\n\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/astroid/builder.py in string_build(self, data, modname, path)\r\n    138     def string_build(self, data, modname=\"\", path=None):\r\n    139         \"\"\"Build astroid from source code string.\"\"\"\r\n--> 140         module = self._data_build(data, modname, path)\r\n    141         module.file_bytes = data.encode(\"utf-8\")\r\n    142         return self._post_build(module, \"utf-8\")\r\n\r\n~/.virtualenvs/notebook/lib/python3.5/site-packages/astroid/builder.py in _data_build(self, data, modname, path)\r\n    172                 path=path,\r\n    173                 error=exc,\r\n--> 174             ) from exc\r\n    175         if path is not None:\r\n    176             node_file = os.path.abspath(path)\r\n\r\nAstroidSyntaxError: Parsing Python code failed:\r\ninvalid syntax (<unknown>, line 1)\r\n```\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"``\r\n2.3.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/685", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/685/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/685/events", "html_url": "https://github.com/PyCQA/astroid/issues/685", "id": 469906502, "node_id": "MDU6SXNzdWU0Njk5MDY1MDI=", "number": 685, "title": "Unknown/proprietary license for astroid/tests/testdata/python?/data/SSL1/Connection1.py", "user": {"login": "bdrung", "id": 239485, "node_id": "MDQ6VXNlcjIzOTQ4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/239485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrung", "html_url": "https://github.com/bdrung", "followers_url": "https://api.github.com/users/bdrung/followers", "following_url": "https://api.github.com/users/bdrung/following{/other_user}", "gists_url": "https://api.github.com/users/bdrung/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrung/subscriptions", "organizations_url": "https://api.github.com/users/bdrung/orgs", "repos_url": "https://api.github.com/users/bdrung/repos", "events_url": "https://api.github.com/users/bdrung/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-18T17:47:37Z", "updated_at": "2019-09-11T12:20:37Z", "closed_at": "2019-09-11T12:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The license for `astroid/tests/testdata/python2/data/SSL1/Connection1.py` and `astroid/tests/testdata/python3/data/SSL1/Connection1.py` is unknown and therefore to be assumed proprietary. These files just state as header:\r\n\r\n```\r\n\"\"\"M2Crypto.SSL.Connection\r\n\r\nCopyright (c) 1999-2004 Ng Pheng Siong. All rights reserved.\"\"\"\r\n\r\nRCS_id='$Id: Connection1.py,v 1.1 2005-06-13 20:55:22 syt Exp $'\r\n```\r\n\r\nThis is a blocker for updating astroid in Debian.\r\n\r\nSo please add the license line to these two files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/677", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/677/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/677/events", "html_url": "https://github.com/PyCQA/astroid/issues/677", "id": 455200991, "node_id": "MDU6SXNzdWU0NTUyMDA5OTE=", "number": 677, "title": "Fail when importing collections on python3.8", "user": {"login": "jkonecny12", "id": 1643889, "node_id": "MDQ6VXNlcjE2NDM4ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1643889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkonecny12", "html_url": "https://github.com/jkonecny12", "followers_url": "https://api.github.com/users/jkonecny12/followers", "following_url": "https://api.github.com/users/jkonecny12/following{/other_user}", "gists_url": "https://api.github.com/users/jkonecny12/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkonecny12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkonecny12/subscriptions", "organizations_url": "https://api.github.com/users/jkonecny12/orgs", "repos_url": "https://api.github.com/users/jkonecny12/repos", "events_url": "https://api.github.com/users/jkonecny12/events{/privacy}", "received_events_url": "https://api.github.com/users/jkonecny12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-12T13:02:22Z", "updated_at": "2019-06-20T07:26:04Z", "closed_at": "2019-06-20T07:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1.  Install python3.8.0b1\r\n2.  Use my script below\r\n3.  Run pylint from pip on this script (python3 -m pylint ./reproducer.py)\r\n\r\n### Current behavior\r\n\r\n<mock-chroot> sh-5.0# python3 -m pylint ./test.py\r\n************* Module test\r\ntest.py:4:0: E0001: Cannot import 'collections' due to syntax error 'invalid syntax (<unknown>, line 96)' (syntax-error)\r\ntest.py:7:4: C0103: Constant name \"c\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\n\r\n### Expected behavior\r\n\r\nEverything should be fine, although I'm not sure about the UPPER_CASE. Is that correct? \r\n\r\n### ``python3 -m pylint --version`` output\r\n\r\n__main__.py 2.3.1\r\nastroid 2.2.5\r\nPython 3.8.0b1 (default, Jun  5 2019, 08:48:48) \r\n[GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\n\r\n\r\n------------------------------\r\n### Reproducer script\r\n\r\n```\r\n#!/usr/bin/python3\r\n\"\"\" My small reproducer \"\"\"\r\n\r\nimport collections\r\n\r\nif __name__ == \"__main__\":\r\n    c = collections.Counter()\r\n    c['a'] += 1\r\n    print(\"abc\", c)\r\n```\r\n\r\n------------------------------\r\n\r\n\r\nNot sure if this is really astroid issue or pylint issue. Please tell me and I'll create this issue on pylint.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/676", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/676/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/676/events", "html_url": "https://github.com/PyCQA/astroid/issues/676", "id": 452932066, "node_id": "MDU6SXNzdWU0NTI5MzIwNjY=", "number": 676, "title": "Version typed-ast==1.4.0 (released June 5th) binaries are not available for py34", "user": {"login": "jgsogo", "id": 1406456, "node_id": "MDQ6VXNlcjE0MDY0NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1406456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgsogo", "html_url": "https://github.com/jgsogo", "followers_url": "https://api.github.com/users/jgsogo/followers", "following_url": "https://api.github.com/users/jgsogo/following{/other_user}", "gists_url": "https://api.github.com/users/jgsogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgsogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgsogo/subscriptions", "organizations_url": "https://api.github.com/users/jgsogo/orgs", "repos_url": "https://api.github.com/users/jgsogo/repos", "events_url": "https://api.github.com/users/jgsogo/events{/privacy}", "received_events_url": "https://api.github.com/users/jgsogo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1001885425, "node_id": "MDU6TGFiZWwxMDAxODg1NDI1", "url": "https://api.github.com/repos/PyCQA/astroid/labels/contributor%20friendly", "name": "contributor friendly", "color": "79bfe5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-06T09:40:46Z", "updated_at": "2019-07-16T08:59:56Z", "closed_at": "2019-07-16T08:59:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Machine without Microsoft Windows SDK 7.1\r\n2. `pip install astroid` (using python 3.4, it will trigger a build)\r\n3. Error in [output](https://conan-ci.jfrog.info/blue/organizations/jenkins/ConanNightly/detail/ConanNightly/518/pipeline):\r\n\r\n```\r\n  Running setup.py install for typed-ast: started\r\n    Running setup.py install for typed-ast: finished with status 'error'\r\n    ERROR: Complete output from command 'd:\\j\\t\\9f6d\\py34\\disabled_revisions\\venv\\scripts\\python.exe' -u -c 'import setuptools, tokenize;__file__='\"'\"'C:\\\\Users\\\\Jenkins\\\\AppData\\\\Local\\\\Temp\\\\2\\\\pip-install-2jlu6nis\\\\typed-ast\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\Jenkins\\AppData\\Local\\Temp\\2\\pip-record-r0fif5f_\\install-record.txt' --single-version-externally-managed --compile --install-headers 'd:\\j\\t\\9f6d\\py34\\disabled_revisions\\venv\\include\\site\\python3.4\\typed-ast':\r\n    ERROR: running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win32-3.4\r\n    creating build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\ast27.py -> build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\ast3.py -> build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\conversions.py -> build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\__init__.py -> build\\lib.win32-3.4\\typed_ast\r\n    package init file 'ast3\\tests\\__init__.py' not found (or not a regular file)\r\n    creating build\\lib.win32-3.4\\typed_ast\\tests\r\n    copying ast3\\tests\\test_basics.py -> build\\lib.win32-3.4\\typed_ast\\tests\r\n    running build_ext\r\n    building '_ast27' extension\r\n    error: Microsoft Visual C++ 10.0 is required. Get it with \"Microsoft Windows SDK 7.1\": www.microsoft.com/download/details.aspx?id=8279\r\n```\r\n### Current behavior\r\n`astroid` fails to install (fails to build) as a consequence of this new `typed-ast` version that requires a Microsoft Windows SDK to compile.\r\n\r\n### Expected behavior\r\nInstall `astroid` successfully\r\n\r\n### Proposed solution:\r\nFreeze `typed-ast` version to be `<1.4`\r\nReported to `typed-ast` repo to check that this change was intentional: https://github.com/python/typed_ast/issues/122\r\n\r\n### Astroid version:\r\nWheel: `astroid-2.2.5-py3-none-any.whl`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/675", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/675/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/675/events", "html_url": "https://github.com/PyCQA/astroid/issues/675", "id": 451174795, "node_id": "MDU6SXNzdWU0NTExNzQ3OTU=", "number": 675, "title": "Add support for Python 3.8", "user": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1386119142, "node_id": "MDU6TGFiZWwxMzg2MTE5MTQy", "url": "https://api.github.com/repos/PyCQA/astroid/labels/python%203.8", "name": "python 3.8", "color": "fc1672", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-06-02T10:05:57Z", "updated_at": "2019-07-11T06:34:30Z", "closed_at": "2019-07-11T06:34:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We do have a dozen of tests currently failing on Python 3.8. We should add support for it before the official launch in autumn.\r\n\r\n- [x] [Positional only arguments](https://docs.python.org/3.8/whatsnew/3.8.html#positional-only-parameters)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/674", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/674/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/674/events", "html_url": "https://github.com/PyCQA/astroid/issues/674", "id": 451069459, "node_id": "MDU6SXNzdWU0NTEwNjk0NTk=", "number": 674, "title": "Add support for NamedExpr parsing for Python 3.8", "user": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 298354427, "node_id": "MDU6TGFiZWwyOTgzNTQ0Mjc=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/blocker", "name": "blocker", "color": "e11d21", "default": false, "description": null}, {"id": 1386119142, "node_id": "MDU6TGFiZWwxMzg2MTE5MTQy", "url": "https://api.github.com/repos/PyCQA/astroid/labels/python%203.8", "name": "python 3.8", "color": "fc1672", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-01T10:12:20Z", "updated_at": "2019-06-02T08:02:38Z", "closed_at": "2019-06-02T08:02:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 3.8 introduced the assignment expressions, which come with their new nodes. One of them is `NamedExpr` which holds the actual assignment expression. For instance in `if a := 1`, the `NamedExpr` node will consist of `a := 1`, where `a` is the target and `1` is the value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/671", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/671/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/671/events", "html_url": "https://github.com/PyCQA/astroid/issues/671", "id": 443548936, "node_id": "MDU6SXNzdWU0NDM1NDg5MzY=", "number": 671, "title": "parse \"\" file, and it is written in py2 style", "user": {"login": "JoshSullivan11", "id": 46171231, "node_id": "MDQ6VXNlcjQ2MTcxMjMx", "avatar_url": "https://avatars2.githubusercontent.com/u/46171231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshSullivan11", "html_url": "https://github.com/JoshSullivan11", "followers_url": "https://api.github.com/users/JoshSullivan11/followers", "following_url": "https://api.github.com/users/JoshSullivan11/following{/other_user}", "gists_url": "https://api.github.com/users/JoshSullivan11/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshSullivan11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshSullivan11/subscriptions", "organizations_url": "https://api.github.com/users/JoshSullivan11/orgs", "repos_url": "https://api.github.com/users/JoshSullivan11/repos", "events_url": "https://api.github.com/users/JoshSullivan11/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshSullivan11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-13T18:52:05Z", "updated_at": "2019-05-13T22:01:52Z", "closed_at": "2019-05-13T22:01:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run a sphinx build, but an error occurs related to your package. The error is caused by your package trying to parse a file using py2 style syntax from what I am seeing, which is causing an error with my python 3 implementation. I attached the file in question that is causing the issue and the error logs. Please let me know if I can provide any other information.\r\n\r\nEnvironment info:\r\nOS: Linux Ubuntu 16.04\r\nPython version: 3.5.2\r\n\r\n\r\n[builderpy.txt](https://github.com/PyCQA/astroid/files/3174348/builderpy.txt)\r\n[sphinx-err-nm7k_wyi.log](https://github.com/PyCQA/astroid/files/3174349/sphinx-err-nm7k_wyi.log)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/668", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/668/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/668/events", "html_url": "https://github.com/PyCQA/astroid/issues/668", "id": 440372196, "node_id": "MDU6SXNzdWU0NDAzNzIxOTY=", "number": 668, "title": "Inference fails on assert-only function", "user": {"login": "jtrakk", "id": 43392409, "node_id": "MDQ6VXNlcjQzMzkyNDA5", "avatar_url": "https://avatars1.githubusercontent.com/u/43392409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtrakk", "html_url": "https://github.com/jtrakk", "followers_url": "https://api.github.com/users/jtrakk/followers", "following_url": "https://api.github.com/users/jtrakk/following{/other_user}", "gists_url": "https://api.github.com/users/jtrakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtrakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtrakk/subscriptions", "organizations_url": "https://api.github.com/users/jtrakk/orgs", "repos_url": "https://api.github.com/users/jtrakk/repos", "events_url": "https://api.github.com/users/jtrakk/events{/privacy}", "received_events_url": "https://api.github.com/users/jtrakk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-04T21:21:06Z", "updated_at": "2019-06-02T09:23:10Z", "closed_at": "2019-06-02T09:23:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting started with `astroid`. I want to find the functions that are called inside the `test_sth` function.\r\n\r\n```python3\r\nimport astroid\r\n\r\nsource = \"\"\"\r\n\r\ndef check_equal(a, b):\r\n    assert a == b\r\n\r\n\r\ndef test_sth():\r\n    check_equal(10, 11)\r\n\r\n\"\"\"\r\n\r\n\r\ndef transform_call(node):\r\n    for func in node.infer():\r\n        print(func)\r\n\r\n\r\nastroid.MANAGER.register_transform(astroid.nodes.Call, transform_call)\r\ntree = astroid.parse(source)\r\n```\r\n    \r\nI was expecting it to find the `check_equal` function. Running with python3.7, astroid 2.2.5, I get this exception:\r\n\r\n<details><summary>Traceback</summary>\r\n<p>\r\n\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\nStopIteration: {'node': <Call l.8 at 0x7fb9dcbfd5c0>, 'context': <astroid.context.InferenceContext object at 0x7fb9dcbfa0f8>}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/user/tmp/inf.py\", line 21, in <module>\r\n    tree = astroid.parse(source)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/builder.py\", line 275, in parse\r\n    return builder.string_build(code, modname=module_name, path=path)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/builder.py\", line 142, in string_build\r\n    return self._post_build(module, \"utf-8\")\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/builder.py\", line 160, in _post_build\r\n    module = self._manager.visit_transforms(module)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/manager.py\", line 69, in visit_transforms\r\n    return self._transform.visit(node)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 89, in visit\r\n    module.body = [self._visit(child) for child in module.body]\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 89, in <listcomp>\r\n    module.body = [self._visit(child) for child in module.body]\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 54, in _visit\r\n    visited = self._visit_generic(value)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 61, in _visit_generic\r\n    return [self._visit_generic(child) for child in node]\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 61, in <listcomp>\r\n    return [self._visit_generic(child) for child in node]\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 67, in _visit_generic\r\n    return self._visit(node)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 54, in _visit\r\n    visited = self._visit_generic(value)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 67, in _visit_generic\r\n    return self._visit(node)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 57, in _visit\r\n    return self._transform(node)\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/transforms.py\", line 40, in _transform\r\n    ret = transform_func(node)\r\n  File \"/home/user/tmp/inf.py\", line 16, in transform_call\r\n    for func in node.infer():\r\n  File \"/home/user/.local/pipx/venvs/ipython/lib/python3.7/site-packages/astroid/decorators.py\", line 136, in raise_if_nothing_inferred\r\n    raise exceptions.InferenceError(**error.args[0])\r\nastroid.exceptions.InferenceError: Inference failed for <Call l.8 at 0x7fb9dcbfd5c0>.\r\n```\r\n</p>\r\n</details>\r\n\r\n\r\nI'm guessing this may be related to https://github.com/PyCQA/astroid/issues/485, but not sure. Am I doing something wrong or is there a workaround I can use? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/666", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/666/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/666/events", "html_url": "https://github.com/PyCQA/astroid/issues/666", "id": 438600537, "node_id": "MDU6SXNzdWU0Mzg2MDA1Mzc=", "number": 666, "title": "Add numpy brain tips for `numpy.append`", "user": {"login": "willsALMANJ", "id": 1178780, "node_id": "MDQ6VXNlcjExNzg3ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1178780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willsALMANJ", "html_url": "https://github.com/willsALMANJ", "followers_url": "https://api.github.com/users/willsALMANJ/followers", "following_url": "https://api.github.com/users/willsALMANJ/following{/other_user}", "gists_url": "https://api.github.com/users/willsALMANJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/willsALMANJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willsALMANJ/subscriptions", "organizations_url": "https://api.github.com/users/willsALMANJ/orgs", "repos_url": "https://api.github.com/users/willsALMANJ/repos", "events_url": "https://api.github.com/users/willsALMANJ/events{/privacy}", "received_events_url": "https://api.github.com/users/willsALMANJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001885216, "node_id": "MDU6TGFiZWwxMDAxODg1MjE2", "url": "https://api.github.com/repos/PyCQA/astroid/labels/brain", "name": "brain", "color": "bf1e05", "default": false, "description": ""}, {"id": 297123626, "node_id": "MDU6TGFiZWwyOTcxMjM2MjY=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hippo91", "id": 11694943, "node_id": "MDQ6VXNlcjExNjk0OTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/11694943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hippo91", "html_url": "https://github.com/hippo91", "followers_url": "https://api.github.com/users/hippo91/followers", "following_url": "https://api.github.com/users/hippo91/following{/other_user}", "gists_url": "https://api.github.com/users/hippo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/hippo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hippo91/subscriptions", "organizations_url": "https://api.github.com/users/hippo91/orgs", "repos_url": "https://api.github.com/users/hippo91/repos", "events_url": "https://api.github.com/users/hippo91/events{/privacy}", "received_events_url": "https://api.github.com/users/hippo91/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-04-30T04:35:28Z", "updated_at": "2020-01-05T10:40:21Z", "closed_at": "2020-01-05T10:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nastroid currently does not account for `numpy.append` as mentioned in #664. An example of the problem is the following file:\r\n\r\n```\r\nimport numpy as np\r\na = np.append([0], 0)\r\na = -a\r\n```\r\n\r\nwhich produces the following errors in pylint:\r\n\r\n```\r\n/tmp/test.py:3:4: E1130: bad operand type for unary -: tuple (invalid-unary-operand-type)\r\n/tmp/test.py:3:4: E1130: bad operand type for unary -: list (invalid-unary-operand-type)\r\n```\r\n\r\nThese errors are generated for pylint=1.7.2, astroid=1.5.3 and numpy=1.16.2. The errors are not generated for numpy=1.15.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/665", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/665/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/665/events", "html_url": "https://github.com/PyCQA/astroid/issues/665", "id": 435588086, "node_id": "MDU6SXNzdWU0MzU1ODgwODY=", "number": 665, "title": "Expose multi-line function argument type annotation comments", "user": {"login": "AWhetter", "id": 3090295, "node_id": "MDQ6VXNlcjMwOTAyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3090295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AWhetter", "html_url": "https://github.com/AWhetter", "followers_url": "https://api.github.com/users/AWhetter/followers", "following_url": "https://api.github.com/users/AWhetter/following{/other_user}", "gists_url": "https://api.github.com/users/AWhetter/gists{/gist_id}", "starred_url": "https://api.github.com/users/AWhetter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AWhetter/subscriptions", "organizations_url": "https://api.github.com/users/AWhetter/orgs", "repos_url": "https://api.github.com/users/AWhetter/repos", "events_url": "https://api.github.com/users/AWhetter/events{/privacy}", "received_events_url": "https://api.github.com/users/AWhetter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001885425, "node_id": "MDU6TGFiZWwxMDAxODg1NDI1", "url": "https://api.github.com/repos/PyCQA/astroid/labels/contributor%20friendly", "name": "contributor friendly", "color": "79bfe5", "default": false, "description": ""}, {"id": 297123626, "node_id": "MDU6TGFiZWwyOTcxMjM2MjY=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T03:43:37Z", "updated_at": "2019-05-14T09:56:01Z", "closed_at": "2019-05-14T09:56:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Feature Request\r\nSay we are parsing the following function:\r\n\r\n```python\r\ndef sum(\r\n        a,  # type: int\r\n        b,  # type: int\r\n):\r\n    # type: (...) -> int\r\n    return a + b\r\n```\r\n\r\nThere is no way to access the type annotation comments for the individual `a` and `b` arguments, only the function itself.\r\n`typed_ast` exposes these type comments through the attribute `type_comment` on each `arg` node:\r\n\r\n```python\r\n>>> import typed_ast\r\n>>> module = typed_ast.ast3.parse('''def sum(\\n    a,  # type: int\\n    b,  # type: int\\n    ):\\n    # type: (...) -> int\\n    return a + b''')\r\n>>> module.body[0].args.args\r\n[<typed_ast._ast3.arg object at 0x7f318d7cd0b8>, <typed_ast._ast3.arg object at 0x7f318d7cd0f0>]\r\n>>> module.body[0].args.args[0].type_comment\r\n'int'\r\n```\r\n\r\n### Desired behavior\r\nWe could add a `type_annotation` attribute to the `AssignName` node, but for regular assignments this is redundant information because type comments are exposed on the parent `Assign` node.\r\nSo the parent `Arguments` node seems like the right place for it to go. I'm proposing the addition of a `type_comment_args` attribute on the `Arguments` node that contains a list of the type comments, one for each argument using a None for arguments that are missing a comment.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.2.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/663", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/663/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/663/events", "html_url": "https://github.com/PyCQA/astroid/issues/663", "id": 430975453, "node_id": "MDU6SXNzdWU0MzA5NzU0NTM=", "number": 663, "title": "Python 3.7.2 StopIteration with custom context", "user": {"login": "hardmooth", "id": 39583404, "node_id": "MDQ6VXNlcjM5NTgzNDA0", "avatar_url": "https://avatars1.githubusercontent.com/u/39583404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardmooth", "html_url": "https://github.com/hardmooth", "followers_url": "https://api.github.com/users/hardmooth/followers", "following_url": "https://api.github.com/users/hardmooth/following{/other_user}", "gists_url": "https://api.github.com/users/hardmooth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardmooth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardmooth/subscriptions", "organizations_url": "https://api.github.com/users/hardmooth/orgs", "repos_url": "https://api.github.com/users/hardmooth/repos", "events_url": "https://api.github.com/users/hardmooth/events{/privacy}", "received_events_url": "https://api.github.com/users/hardmooth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-09T13:42:58Z", "updated_at": "2019-04-10T10:09:10Z", "closed_at": "2019-04-09T14:17:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. unzip [pylint_exc_stop_iteration.zip](https://github.com/PyCQA/astroid/files/3059251/pylint_exc_stop_iteration.zip)\r\n2. run pylint in python 3.7.2:\r\n  ``python37 -m pylint pylint_exc_stop_iteration.py``\r\n\r\n### Current behavior\r\n\r\n```\r\nme@the-host /some_path\r\n$ python37 -m pylint pylint_exc_stop_iteration.py\r\nTraceback (most recent call last):\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\protocols.py\", line 492, in _infer_context_manager\r\n    enter = next(inferred.igetattr(\"__enter__\", context=context))\r\nStopIteration\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\Program Files\\Python37\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"D:\\Program Files\\Python37\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\__main__.py\", line 8, in <module>\r\n    pylint.run_pylint()\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\__init__.py\", line 20, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\lint.py\", line 1628, in __init__\r\n    linter.check(args)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\lint.py\", line 943, in check\r\n    self._do_check(files_or_modules)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\lint.py\", line 1075, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\lint.py\", line 1158, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\utils.py\", line 1303, in walk\r\n    self.walk(child)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\utils.py\", line 1303, in walk\r\n    self.walk(child)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\utils.py\", line 1303, in walk\r\n    self.walk(child)\r\n  [Previous line repeated 2 more times]\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\utils.py\", line 1300, in walk\r\n    cb(astroid)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\pylint\\checkers\\typecheck.py\", line 844, in visit_attribute\r\n    inferred = list(node.expr.infer())\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\decorators.py\", line 92, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\inference.py\", line 832, in infer_assign\r\n    stmts = list(self.assigned_stmts(context=context))\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\astroid\\protocols.py\", line 537, in with_assigned_stmts\r\n    yield from _infer_context_manager(self, mgr, context)\r\nRuntimeError: generator raised StopIteration\r\n```\r\n\r\n### Expected behavior\r\n\r\n```\r\nme@the-host /some_path\r\n$ python36 -m pylint pylint_exc_stop_iteration.py\r\n\r\n-------------------------------------------------------------------\r\nYour code has been rated at 10.00/10 (previous run: 9.33/10, +0.67)\r\n```\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n``$ python37 -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"\r\n2.2.5``\r\n\r\n### more Version information\r\n```\r\nme@the-host /some_path\r\n$ python37 -m pip freeze | egrep \"astroid|pylint\"\r\nastroid==2.2.5\r\npylint==2.3.1\r\n\r\nme@the-host /some_path\r\n$ python37 --version\r\nPython 3.7.2\r\n```\r\n\r\n * im on Windows 7\r\n * Error comes in Windows CMD as well", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/658", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/658/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/658/events", "html_url": "https://github.com/PyCQA/astroid/issues/658", "id": 426085086, "node_id": "MDU6SXNzdWU0MjYwODUwODY=", "number": 658, "title": "Extension modules incorrectly classified as belonging to stdlib.", "user": {"login": "markmcclain", "id": 484276, "node_id": "MDQ6VXNlcjQ4NDI3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/484276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markmcclain", "html_url": "https://github.com/markmcclain", "followers_url": "https://api.github.com/users/markmcclain/followers", "following_url": "https://api.github.com/users/markmcclain/following{/other_user}", "gists_url": "https://api.github.com/users/markmcclain/gists{/gist_id}", "starred_url": "https://api.github.com/users/markmcclain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markmcclain/subscriptions", "organizations_url": "https://api.github.com/users/markmcclain/orgs", "repos_url": "https://api.github.com/users/markmcclain/repos", "events_url": "https://api.github.com/users/markmcclain/events{/privacy}", "received_events_url": "https://api.github.com/users/markmcclain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-27T17:13:43Z", "updated_at": "2019-03-29T08:13:06Z", "closed_at": "2019-03-29T08:13:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Install a platform specific extension.\r\n2. Run pylint (errors on potentially unsafe extension being scanned)\r\n\r\n### Current behavior\r\nExtensions in the platform specific location are misclassified by is_standard_module() as being in the standard library because the path shares prefix with standard library. \r\n\r\n### Expected behavior\r\nThe extension should not be considered part of the stdlib.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\nmaster\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/652", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/652/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/652/events", "html_url": "https://github.com/PyCQA/astroid/issues/652", "id": 415645803, "node_id": "MDU6SXNzdWU0MTU2NDU4MDM=", "number": 652, "title": "astroid blocks for updates to mypy", "user": {"login": "astir13", "id": 8127572, "node_id": "MDQ6VXNlcjgxMjc1NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8127572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astir13", "html_url": "https://github.com/astir13", "followers_url": "https://api.github.com/users/astir13/followers", "following_url": "https://api.github.com/users/astir13/following{/other_user}", "gists_url": "https://api.github.com/users/astir13/gists{/gist_id}", "starred_url": "https://api.github.com/users/astir13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astir13/subscriptions", "organizations_url": "https://api.github.com/users/astir13/orgs", "repos_url": "https://api.github.com/users/astir13/repos", "events_url": "https://api.github.com/users/astir13/events{/privacy}", "received_events_url": "https://api.github.com/users/astir13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-28T14:19:00Z", "updated_at": "2019-03-05T09:45:28Z", "closed_at": "2019-03-05T09:45:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. try to create a pipenv with latest astroid and mypy inside\r\n2. the dependency of astroid to typed-ast <1.3.0 conflicts with mypy dependency >= 1.3.1 (see https://python-forum.io/Thread-latest-astroid-dependencies-break-mypy?pid=72966#pid72966)\r\n3. the pipenv -v lock command issues an error\r\n\r\n### Current behavior\r\nerror from pipenv -v lock\r\n\r\n### Expected behavior\r\nwould be nice if astroid could reevaluate its dependency to typed-ast to allow other libraries to use more modern typed-ast \r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.1.0\r\n\r\nastroid==2.2.0 requires lazy-object-proxy, six, typed-ast<1.3.0\r\nmypy==0.670 requires mypy-extensions<0.5.0,>=0.4.0, typed-ast<1.4.0,>=1.3.1\r\n\r\nWorkaround is of course to set mypy to use version 0.660 in the Pipfile.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/651", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/651/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/651/events", "html_url": "https://github.com/PyCQA/astroid/issues/651", "id": 415333611, "node_id": "MDU6SXNzdWU0MTUzMzM2MTE=", "number": 651, "title": "broken build from 2.1.0 -> 2.2.0 minor version upgrade", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-27T21:24:31Z", "updated_at": "2019-03-03T13:06:00Z", "closed_at": "2019-03-02T11:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a daily cron job in CI that runs pylint, pinned to pylint version 2.2.2. This runs using Python 3.7.\r\n\r\nYesterday this job [succeeded](https://travis-ci.org/jab/bidict/jobs/498784114) but today it [failed](https://travis-ci.org/jab/bidict/jobs/499334076). I changed nothing in between.\r\n\r\nChecking the `pip list` output, the only thing that did change is transitively picking up astroid 2.2.0 instead of 2.1.0 (via my direct dependency on pylint).\r\n\r\nA minor version upgrade should not cause breaking changes, right?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/650", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/650/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/650/events", "html_url": "https://github.com/PyCQA/astroid/issues/650", "id": 415325459, "node_id": "MDU6SXNzdWU0MTUzMjU0NTk=", "number": 650, "title": "Version 2.2.0 blows the stack when pylint-ing cirq", "user": {"login": "Strilanc", "id": 79941, "node_id": "MDQ6VXNlcjc5OTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/79941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Strilanc", "html_url": "https://github.com/Strilanc", "followers_url": "https://api.github.com/users/Strilanc/followers", "following_url": "https://api.github.com/users/Strilanc/following{/other_user}", "gists_url": "https://api.github.com/users/Strilanc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Strilanc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Strilanc/subscriptions", "organizations_url": "https://api.github.com/users/Strilanc/orgs", "repos_url": "https://api.github.com/users/Strilanc/repos", "events_url": "https://api.github.com/users/Strilanc/events{/privacy}", "received_events_url": "https://api.github.com/users/Strilanc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}, {"id": 1252862094, "node_id": "MDU6TGFiZWwxMjUyODYyMDk0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/regression", "name": "regression", "color": "e2686a", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-27T21:02:48Z", "updated_at": "2020-03-12T09:57:09Z", "closed_at": "2020-03-12T09:57:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example failure: https://travis-ci.com/quantumlib/Cirq/jobs/181020703\r\n\r\nOn my local machine, switching astroid between 2.1.0 and 2.2.0 causes this stack overflow to go away (in 2.1.0) and appear (in 2.2.0)\r\n\r\nHere is the stack trace. Since it's a stack overflow, the trace is quite long.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7fcddf0029d8>, <Call l.80 at 0x7fcdd800e128>)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.2/bin/pylint\", line 10, in <module>\r\n    sys.exit(run_pylint())\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/__init__.py\", line 19, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/lint.py\", line 1395, in __init__\r\n    linter.generate_reports()\r\n  File \"/opt/python/3.5.2/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/lint.py\", line 1209, in fix_import_path\r\n    yield\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/lint.py\", line 1394, in __init__\r\n    linter.check(args)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/lint.py\", line 801, in check\r\n    self._do_check(files_or_modules)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/lint.py\", line 938, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/lint.py\", line 1018, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/utils.py\", line 1162, in walk\r\n    self.walk(child)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/utils.py\", line 1162, in walk\r\n    self.walk(child)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/utils.py\", line 1162, in walk\r\n    self.walk(child)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/utils.py\", line 1162, in walk\r\n    self.walk(child)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/utils.py\", line 1162, in walk\r\n    self.walk(child)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/utils.py\", line 1159, in walk\r\n    cb(astroid)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/checkers/typecheck.py\", line 1356, in visit_subscript\r\n    inferred = safe_infer(node.value)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pylint/checkers/utils.py\", line 832, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 157, in safe_infer\r\n    next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 141, in raise_if_nothing_inferred\r\n    yield from generator\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 779, in _infer_augassign\r\n    for lhs, rhs in itertools.product(lhs_iter, rhs_iter):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 744, in _infer_binop\r\n    lhs_iter = left.infer(context=lhs_context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 130, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/brain/brain_builtin_inference.py\", line 674, in infer_len\r\n    return nodes.Const(helpers.object_len(argument_node))\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 245, in object_len\r\n    inferred_node = safe_infer(node, context=context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/helpers.py\", line 153, in safe_infer\r\n    value = next(inferit)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 303, in infer_attribute\r\n    yield from owner.igetattr(self.attrname, context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 219, in igetattr\r\n    self._wrap_attr(get_attr, context), context, frame=self\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 131, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/bases.py\", line 137, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 117, in yes_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 460, in _filter_operation_errors\r\n    for result in infer_callable(self, context):\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/inference.py\", line 742, in _infer_binop\r\n    lhs_context = contextmod.copy_context(context)\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 155, in copy_context\r\n    return context.clone()\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/astroid/context.py\", line 102, in clone\r\n    clone = InferenceContext(self.path, inferred=self.inferred)\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/649", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/649/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/649/events", "html_url": "https://github.com/PyCQA/astroid/issues/649", "id": 415067608, "node_id": "MDU6SXNzdWU0MTUwNjc2MDg=", "number": 649, "title": "Astroid version 2.2 (with pylint 2.2) is causing exceptions", "user": {"login": "jan11011977", "id": 1407570, "node_id": "MDQ6VXNlcjE0MDc1NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1407570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jan11011977", "html_url": "https://github.com/jan11011977", "followers_url": "https://api.github.com/users/jan11011977/followers", "following_url": "https://api.github.com/users/jan11011977/following{/other_user}", "gists_url": "https://api.github.com/users/jan11011977/gists{/gist_id}", "starred_url": "https://api.github.com/users/jan11011977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jan11011977/subscriptions", "organizations_url": "https://api.github.com/users/jan11011977/orgs", "repos_url": "https://api.github.com/users/jan11011977/repos", "events_url": "https://api.github.com/users/jan11011977/events{/privacy}", "received_events_url": "https://api.github.com/users/jan11011977/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-27T11:04:12Z", "updated_at": "2020-01-03T10:05:34Z", "closed_at": "2019-02-27T15:51:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new version of astroid was just deployed which is causing pylint to crash. I have Pylint pinned to version 2.2.2. but I hadn't pinned astroid, so that package was upgraded to 2.2.0. This then caused the crash:\r\n\r\nPS D:\\shared\\python\\ctn-compass> D:\\shared\\.venv3.7.1\\python\\ctn-compass\\scripts\\pylint --rcfile=..\\pylintrc src\r\nTraceback (most recent call last):\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"D:\\shared\\.venv3.7.1\\python\\ctn-compass\\scripts\\pylint.exe\\__main__.py\", line 9, in <module>\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\__init__.py\", line 20, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\lint.py\", line 1608, in __init__\r\n    linter.check(args)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\lint.py\", line 938, in check\r\n    self._do_check(files_or_modules)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\lint.py\", line 1071, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\lint.py\", line 1154, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\utils.py\", line 1269, in walk\r\n    self.walk(child)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\utils.py\", line 1266, in walk\r\n    cb(astroid)\r\n  File \"d:\\shared\\.venv3.7.1\\python\\ctn-compass\\lib\\site-packages\\pylint\\checkers\\variables.py\", line 1582, in visit_import\r\n    module = next(node.infer_name_module(parts[0]))\r\nAttributeError: 'Import' object has no attribute 'infer_name_module'\r\n\r\nMaybe astroid version 2.2.0 is incompabitl with pylint 2.2.2?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/646", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/646/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/646/events", "html_url": "https://github.com/PyCQA/astroid/issues/646", "id": 411105103, "node_id": "MDU6SXNzdWU0MTExMDUxMDM=", "number": 646, "title": "typed-ast 1.3.0 supports Python 3.7", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-16T19:35:13Z", "updated_at": "2019-02-19T09:06:57Z", "closed_at": "2019-02-19T07:53:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With https://github.com/python/typed_ast/pull/78 the recent 1.3.x release of typed-ast fully supports Python 3.7. Thus, the [condition](https://github.com/PyCQA/astroid/blob/master/astroid/__pkginfo__.py#L33) in `__pkginfo__.py` can probably be removed (or changed so that Python < 3.6 is only required for typed-ast < 1.3.0).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/644", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/644/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/644/events", "html_url": "https://github.com/PyCQA/astroid/issues/644", "id": 410729513, "node_id": "MDU6SXNzdWU0MTA3Mjk1MTM=", "number": 644, "title": "_NonDeducibleTypeHierarchy exception on valid code", "user": {"login": "condemil", "id": 722990, "node_id": "MDQ6VXNlcjcyMjk5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/722990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/condemil", "html_url": "https://github.com/condemil", "followers_url": "https://api.github.com/users/condemil/followers", "following_url": "https://api.github.com/users/condemil/following{/other_user}", "gists_url": "https://api.github.com/users/condemil/gists{/gist_id}", "starred_url": "https://api.github.com/users/condemil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/condemil/subscriptions", "organizations_url": "https://api.github.com/users/condemil/orgs", "repos_url": "https://api.github.com/users/condemil/repos", "events_url": "https://api.github.com/users/condemil/events{/privacy}", "received_events_url": "https://api.github.com/users/condemil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T11:37:11Z", "updated_at": "2019-02-19T08:22:14Z", "closed_at": "2019-02-19T08:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Create file `test.py` with the following content:\r\n\r\n```python\r\nimport collections.abc\r\nfrom typing import (\r\n    TYPE_CHECKING,\r\n    Any,\r\n    MutableMapping,\r\n)\r\n\r\nif TYPE_CHECKING:\r\n    BaseClass = MutableMapping[str, Any]\r\nelse:\r\n    BaseClass = collections.abc.MutableMapping\r\n\r\n\r\nclass TestBaseException(BaseClass):\r\n    pass\r\n\r\nclass TestException(TestBaseException):\r\n    pass\r\n\r\n\r\ndef test():\r\n    try:\r\n        a = None\r\n    except TestException:\r\n        raise\r\n    except Exception:\r\n        pass\r\n```\r\n\r\n2. Run pylint with `pylint test.py`\r\n3. See `astroid.exceptions._NonDeducibleTypeHierarchy` error\r\n\r\n### Current behavior\r\n\r\nastroid.exceptions._NonDeducibleTypeHierarchy raised\r\n\r\n### Expected behavior\r\n\r\nno error\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.1.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/642", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/642/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/642/events", "html_url": "https://github.com/PyCQA/astroid/issues/642", "id": 408118944, "node_id": "MDU6SXNzdWU0MDgxMTg5NDQ=", "number": 642, "title": "Understanding the scope of type inference", "user": {"login": "pmiddend", "id": 178496, "node_id": "MDQ6VXNlcjE3ODQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/178496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmiddend", "html_url": "https://github.com/pmiddend", "followers_url": "https://api.github.com/users/pmiddend/followers", "following_url": "https://api.github.com/users/pmiddend/following{/other_user}", "gists_url": "https://api.github.com/users/pmiddend/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmiddend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmiddend/subscriptions", "organizations_url": "https://api.github.com/users/pmiddend/orgs", "repos_url": "https://api.github.com/users/pmiddend/repos", "events_url": "https://api.github.com/users/pmiddend/events{/privacy}", "received_events_url": "https://api.github.com/users/pmiddend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-08T11:48:24Z", "updated_at": "2019-02-11T08:06:44Z", "closed_at": "2019-02-11T08:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for reaching out this way, but I didn't find any \"contact information\".\r\n\r\nI want to write a pylint checker that tests `if` statements that check for a redundant `None`. So\r\n\r\n```\r\na: int\r\nif a is None:\r\n  pass\r\n```\r\n\r\nwill result in a message \"redundant check for `None`\", whereas\r\n\r\n```\r\na: Optional[int]\r\nif a is None:\r\n  pass\r\n```\r\n\r\nwill pass the test.\r\n\r\nGiven an `If(...)`, I'd need the type for the `left` expression. This doesn't seem to be generally possible with astroid. At least `.infer(...)` always gives me `Uninferable`. Am I overlooking something here, or is inference just not there yet?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/639", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/639/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/639/events", "html_url": "https://github.com/PyCQA/astroid/issues/639", "id": 402006817, "node_id": "MDU6SXNzdWU0MDIwMDY4MTc=", "number": 639, "title": "Dependency on typed-ast<=1.1.0 breaks Pytest and mypy", "user": {"login": "dvf", "id": 1169974, "node_id": "MDQ6VXNlcjExNjk5NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1169974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvf", "html_url": "https://github.com/dvf", "followers_url": "https://api.github.com/users/dvf/followers", "following_url": "https://api.github.com/users/dvf/following{/other_user}", "gists_url": "https://api.github.com/users/dvf/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvf/subscriptions", "organizations_url": "https://api.github.com/users/dvf/orgs", "repos_url": "https://api.github.com/users/dvf/repos", "events_url": "https://api.github.com/users/dvf/events{/privacy}", "received_events_url": "https://api.github.com/users/dvf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T23:51:26Z", "updated_at": "2019-02-17T17:30:16Z", "closed_at": "2019-01-23T08:29:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "New astroid causes pipenv to not find a dependency when installed next to pytest and mypy. `pkginfo.py` pins version 1.1.0. Any reason for this?\r\n\r\n```\r\nERROR: Could not find a version that matches typed-ast<1.3.0,<=1.1.0,>=1.2.0\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/633", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/633/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/633/events", "html_url": "https://github.com/PyCQA/astroid/issues/633", "id": 395648374, "node_id": "MDU6SXNzdWUzOTU2NDgzNzQ=", "number": 633, "title": "DuplicateBasesError raised on kite-shaped inheritance graph with base class created by type()", "user": {"login": "BenediktSeidl", "id": 1055738, "node_id": "MDQ6VXNlcjEwNTU3Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenediktSeidl", "html_url": "https://github.com/BenediktSeidl", "followers_url": "https://api.github.com/users/BenediktSeidl/followers", "following_url": "https://api.github.com/users/BenediktSeidl/following{/other_user}", "gists_url": "https://api.github.com/users/BenediktSeidl/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenediktSeidl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenediktSeidl/subscriptions", "organizations_url": "https://api.github.com/users/BenediktSeidl/orgs", "repos_url": "https://api.github.com/users/BenediktSeidl/repos", "events_url": "https://api.github.com/users/BenediktSeidl/events{/privacy}", "received_events_url": "https://api.github.com/users/BenediktSeidl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-03T16:54:25Z", "updated_at": "2019-06-02T09:59:03Z", "closed_at": "2019-06-02T09:59:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "pylint crashes when linting a kite-shaped inheritance graph with base class created by `type()`. this seems to be a astroid problem and can be reproduced with following versions (empty fields were not tested):\r\n\r\n| astroid version -> | 2.1.0 | 2.0.4 | 2.0.3 | 2.0 | master | 1.6.5 |\r\n|--------|----|---|---|---|---|---|\r\n| **python 3.7.2**    | | | | | crashes | crashes^1 |\r\n| **python 3.7.0**    | crashes | crashes | crashes | crashes | crashes | crashes^1 |\r\n| **python 3.6.8**    |  crashes   |   |    | crashes | crashes | crashes |\r\n| **python 3.5.6**    | | | | | crashes | crashes |\r\n\r\n<details><summary>1: exits with a different exception (click to expand)</summary>\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\nStopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 104, in wrapped\r\n    raise StopIteration\r\nStopIteration\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 18, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 282, in parse\r\n    return builder.string_build(code, modname=module_name, path=path)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 159, in string_build\r\n    return self._post_build(module, 'utf-8')\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 173, in _post_build\r\n    self.delayed_assattr(delayed)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 232, in delayed_assattr\r\n    for inferred in node.expr.infer():\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 95, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/context.py\", line 71, in cache_generator\r\n    for result in generator:\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 86, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/inference.py\", line 760, in infer_assign\r\n    stmts = list(self.assigned_stmts(context=context))\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/protocols.py\", line 304, in _arguments_infer_argname\r\n    is_metaclass = isinstance(cls, nodes.ClassDef) and cls.type == 'metaclass'\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 1650, in _class_type\r\n    if _is_metaclass(klass):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 1636, in _is_metaclass\r\n    if _is_metaclass(baseobj, seen):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 1636, in _is_metaclass\r\n    if _is_metaclass(baseobj, seen):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 1619, in _is_metaclass\r\n    for baseobj in base.infer():\r\nRuntimeError: generator raised StopIteration\r\n```\r\n\r\n</details>\r\n\r\n\r\n### Related Issues\r\n* [pylint#2666](https://github.com/PyCQA/pylint/issues/2666) by @pdeblanc (this is where i took the minimal example and the headline)\r\n* [#627 comment](https://github.com/PyCQA/astroid/issues/627#issuecomment-450108213) by @dzen\r\n\r\n### Steps to reproduce\r\n\r\n``` bash\r\n# test.sh\r\npip install $1\r\npython << __EOF__\r\nimport astroid\r\nastroid.parse(\"\"\"\r\nA = type('A', (object,), {})\r\n\r\nclass B1(A):\r\n    pass\r\n\r\nclass B2(A):\r\n    pass\r\n\r\nclass C(B1, B2):\r\n    pass\r\n\r\nclass D(C):\r\n    def update(self):\r\n        self.hello = 'hello'\r\n\"\"\")\r\n__EOF__\r\n```\r\n\r\n```\r\ndocker run -v$PWD:/workspace --rm python:3.5.6 bash /workspace/test.sh https://github.com/PyCQA/astroid/archive/master.zip\r\ndocker run -v$PWD:/workspace --rm python:3.7.0 bash /workspace/test.sh astroid==2.0.3\r\n```\r\n\r\n### Current behavior\r\ncrashes with \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 31, in cached\r\n    return cache[func]\r\nKeyError: <bound method ClassDef.slots of <ClassDef.D l.13 at 0x7f75878789e8>>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 17, in <module>\r\n    \"\"\")\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 257, in parse\r\n    return builder.string_build(code, modname=module_name, path=path)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 134, in string_build\r\n    return self._post_build(module, 'utf-8')\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 148, in _post_build\r\n    self.delayed_assattr(delayed)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 214, in delayed_assattr\r\n    if not _can_assign_attr(inferred, node.attrname):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/builder.py\", line 57, in _can_assign_attr\r\n    slots = node.slots()\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 33, in cached\r\n    cache[func] = result = func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 2656, in slots\r\n    slots = list(grouped_slots())\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 2642, in grouped_slots\r\n    for cls in self.mro()[:-1]:\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 2735, in mro\r\n    return self._compute_mro(context=context)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 2716, in _compute_mro\r\n    _verify_duplicates_mro(unmerged_mro, self, context)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 94, in _verify_duplicates_mro\r\n    mros=sequences, cls=cls, context=context)\r\nastroid.exceptions.DuplicateBasesError: Duplicates found in MROs (D), (C, B1, A, B2, A, object), (C) for <ClassDef.D l.13 at 0x7f75878789e8>.\r\n```\r\n\r\n### Expected behavior\r\ndo not crash\r\n\r\n*edit: version 1.6.5 crashes with all python versions*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/628", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/628/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/628/events", "html_url": "https://github.com/PyCQA/astroid/issues/628", "id": 389763948, "node_id": "MDU6SXNzdWUzODk3NjM5NDg=", "number": 628, "title": "Decorator `attrib` unsupperoted where `attr.ib` is", "user": {"login": "gavento", "id": 956446, "node_id": "MDQ6VXNlcjk1NjQ0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/956446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gavento", "html_url": "https://github.com/gavento", "followers_url": "https://api.github.com/users/gavento/followers", "following_url": "https://api.github.com/users/gavento/following{/other_user}", "gists_url": "https://api.github.com/users/gavento/gists{/gist_id}", "starred_url": "https://api.github.com/users/gavento/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gavento/subscriptions", "organizations_url": "https://api.github.com/users/gavento/orgs", "repos_url": "https://api.github.com/users/gavento/repos", "events_url": "https://api.github.com/users/gavento/events{/privacy}", "received_events_url": "https://api.github.com/users/gavento/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-11T13:27:27Z", "updated_at": "2018-12-12T07:53:21Z", "closed_at": "2018-12-12T07:53:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While pylint supports `attr` classes with `attr.ib` attributes, it does not support the same with `attr.attrib`, which is an alias preferred by some.\r\n\r\n### Steps to reproduce\r\n1. `pylint attrib_test.py` with:\r\n```python\r\nimport attr\r\nfrom attr import attrib, attrs\r\n\r\n@attr.s\r\nclass D1:\r\n    d = attr.ib()\r\n\r\n@attrs\r\nclass D2:\r\n    d = attrib()\r\n\r\n@attr.s\r\nclass OK:\r\n    x1 = attr.ib(type=D1)\r\n    x2 = attr.ib(type=D2)\r\n\r\n    def test(self):\r\n        return (self.x1.d, self.x2.d)\r\n\r\n@attrs\r\nclass Err:\r\n    x1 = attrib(type=D1)\r\n    x2 = attrib(type=D2)\r\n\r\n    def test(self):\r\n        return (self.x1.d, self.x2.d)\r\n```\r\n### Current behavior\r\n\r\nClass `OK` reports no errors while `Err` reports:\r\n```\r\n[... snip docstring and too-few-methods lints]\r\ntst.py:26:16: E1101: Instance of '_CountingAttr' has no 'd' member (no-member)\r\ntst.py:26:27: E1101: Instance of '_CountingAttr' has no 'd' member (no-member)\r\n[... snip docstring and too-few-methods lints]\r\n```\r\nNote the problem is not in how classes `D1`, `D2` were declared (`attr.ib` or `attrib`).\r\n\r\n### Expected behavior\r\n\r\nclass `Err` should also return no errors.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/626", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/626/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/626/events", "html_url": "https://github.com/PyCQA/astroid/issues/626", "id": 387012880, "node_id": "MDU6SXNzdWUzODcwMTI4ODA=", "number": 626, "title": "AttributeError: 'Attribute' object has no attribute 'lookup'", "user": {"login": "zidarsk8", "id": 566311, "node_id": "MDQ6VXNlcjU2NjMxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/566311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zidarsk8", "html_url": "https://github.com/zidarsk8", "followers_url": "https://api.github.com/users/zidarsk8/followers", "following_url": "https://api.github.com/users/zidarsk8/following{/other_user}", "gists_url": "https://api.github.com/users/zidarsk8/gists{/gist_id}", "starred_url": "https://api.github.com/users/zidarsk8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zidarsk8/subscriptions", "organizations_url": "https://api.github.com/users/zidarsk8/orgs", "repos_url": "https://api.github.com/users/zidarsk8/repos", "events_url": "https://api.github.com/users/zidarsk8/events{/privacy}", "received_events_url": "https://api.github.com/users/zidarsk8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-03T21:27:03Z", "updated_at": "2018-12-04T07:34:39Z", "closed_at": "2018-12-04T07:34:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\nI have tried to narrow down this bug but due to sqlalchemy magic this is as low as I got:\r\n\r\n#### Only in python 3 environment:\r\n\r\n1. run `pip install -U sqlalchemy==1.2.14` # or any version after 0.9.0 I'm just using the latest\r\n2. Create file linttest.py\r\n```python\r\nfrom sqlalchemy.ext.declarative import declared_attr\r\n\r\nclass MyModel():\r\n\r\n  @declared_attr\r\n  def title(cls):\r\n    pass\r\n\r\n  def my_function(self):\r\n    value = getattr(self, 'title')\r\n    return value == 5  # changing this line to `getattr(self, 'title') == 5` works\r\n```\r\n3. run pylint on this file\r\n```\r\n$ pylint pylinttest.py\r\n************* Module pylinttest\r\npylinttest.py:10:2: E0213: Method should have \"self\" as first argument (no-self-argument)\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/__init__.py\", line 91, in _inference_tip_cached\r\n    return iter(_cache[func, node])\r\nKeyError: (<function register_builtin_transform.<locals>._transform_wrapper at 0x7f74cb851bf8>, <Call l.14 at 0x7f74cb577da0>)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 181, in getattr\r\n    values = self._proxied.instance_attr(name, context)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/scoped_nodes.py\", line 2310, in instance_attr\r\n    target=self, attribute=name, context=context\r\nastroid.exceptions.AttributeInferenceError: 'title' not found on <ClassDef.MyModel l.7 at 0x7f74cb577a58>.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 215, in igetattr\r\n    get_attr = self.getattr(name, context, lookupclass=False)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 193, in getattr\r\n    ) from exc\r\nastroid.exceptions.AttributeInferenceError: 'title' not found on <Instance of pylinttest.MyModel at 0x140139593100760>.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pylint\", line 11, in <module>\r\n    sys.exit(run_pylint())\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/__init__.py\", line 20, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/lint.py\", line 1608, in __init__\r\n    linter.check(args)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/lint.py\", line 938, in check\r\n    self._do_check(files_or_modules)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/lint.py\", line 1071, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/lint.py\", line 1154, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/utils.py\", line 1269, in walk\r\n    self.walk(child)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/utils.py\", line 1269, in walk\r\n    self.walk(child)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/utils.py\", line 1269, in walk\r\n    self.walk(child)\r\n  [Previous line repeated 1 more time]\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/utils.py\", line 1266, in walk\r\n    cb(astroid)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/checkers/base.py\", line 2153, in visit_compare\r\n    self._check_callable_comparison(node)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/checkers/base.py\", line 2137, in _check_callable_comparison\r\n    for operand in (left_operand, right_operand)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/checkers/base.py\", line 2138, in <genexpr>\r\n    if isinstance(utils.safe_infer(operand), bare_callables)\r\n  File \"/usr/local/lib/python3.7/site-packages/pylint/checkers/utils.py\", line 1073, in safe_infer\r\n    value = next(inferit)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 128, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 135, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/util.py\", line 160, in limit_inference\r\n    yield from islice(iterator, size)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/context.py\", line 113, in cache_generator\r\n    for result in generator:\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 128, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/decorators.py\", line 95, in wrapped\r\n    res = next(generator)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 135, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/node_classes.py\", line 348, in infer\r\n    return self._explicit_inference(self, context, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/__init__.py\", line 93, in _inference_tip_cached\r\n    result = func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/brain/brain_builtin_inference.py\", line 132, in _transform_wrapper\r\n    result = transform(node, context=context)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/brain/brain_builtin_inference.py\", line 415, in infer_getattr\r\n    return next(obj.igetattr(attr, context=context))\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 227, in igetattr\r\n    yield from self._wrap_attr(attrs, context)\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 235, in _wrap_attr\r\n    if _is_property(attr):\r\n  File \"/usr/local/lib/python3.7/site-packages/astroid/bases.py\", line 85, in _is_property\r\n    module, _ = base_class.lookup(base_class.name)\r\nAttributeError: 'Attribute' object has no attribute 'lookup'\r\n```\r\n\r\n### Current behavior\r\n\r\nAttribute error is raised when analyzing title attribute.\r\n\r\n### Expected behavior\r\n\r\nPylint should finish normally \r\n\r\n### 2.1.0 , I also tried with version 2.0, any earlier version raises a different issue\r\n```\r\n# pylint --version\r\npylint 2.2.2\r\nastroid 2.1.0\r\nPython 3.7.1 (default, Nov 16 2018, 22:26:09)\r\n[GCC 6.3.0 20170516]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/623", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/623/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/623/events", "html_url": "https://github.com/PyCQA/astroid/issues/623", "id": 377385721, "node_id": "MDU6SXNzdWUzNzczODU3MjE=", "number": 623, "title": "maximum recursion depth exceeded (can even crash python interpreter)", "user": {"login": "MarKett", "id": 25745542, "node_id": "MDQ6VXNlcjI1NzQ1NTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/25745542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarKett", "html_url": "https://github.com/MarKett", "followers_url": "https://api.github.com/users/MarKett/followers", "following_url": "https://api.github.com/users/MarKett/following{/other_user}", "gists_url": "https://api.github.com/users/MarKett/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarKett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarKett/subscriptions", "organizations_url": "https://api.github.com/users/MarKett/orgs", "repos_url": "https://api.github.com/users/MarKett/repos", "events_url": "https://api.github.com/users/MarKett/events{/privacy}", "received_events_url": "https://api.github.com/users/MarKett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1118382864, "node_id": "MDU6TGFiZWwxMTE4MzgyODY0", "url": "https://api.github.com/repos/PyCQA/astroid/labels/crash", "name": "crash", "color": "ffa696", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-05T12:48:42Z", "updated_at": "2019-01-21T07:28:58Z", "closed_at": "2019-01-18T15:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suspect this error to be the same as https://github.com/PyCQA/astroid/issues/264\r\nbut am unsure, so new issue.\r\n\r\n### Steps to reproduce\r\n\r\n`from os import path`\r\n`a = path.normpath( path.dirname( path.realpath( __file__ ) ) )`\r\n`b = path.normpath( path.abspath( path.join( a, '..' ) ) )`\r\n`c = path.normpath( path.abspath( path.join( b, '..' ) ) )`\r\n`x = path.join( c )`\r\n\r\nSave as file and execute pylint on it. This will crash the python interpreter.\r\nAlternatively to better analyze the underlying problem in astroid, change the file to:\r\n`from os import path`\r\n`a = path.dirname( path.realpath( __file__ ) )`\r\n`b = path.normpath( path.abspath( path.join( a, '..' ) ) )`\r\n`c = path.normpath( path.abspath( path.join( b, '..' ) ) )`\r\n`x = path.join( c )`\r\n\r\nNow it will throw an RecursionException but will not crash the python interpreter.\r\n\r\n### Current behavior\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nCurrent thread 0x0003d524 (most recent call first):\r\n  File \"D:\\Program Files\\Python36\\lib\\_weakrefset.py\", line 75 in __contains__\r\n  File \"D:\\Program Files\\Python36\\lib\\abc.py\", line 188 in __instancecheck__\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\node_classes.py\", line 1587 in _find_arg\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\node_classes.py\", line 1557 in find_argname\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\arguments.py\", line 168 in infer_argument\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\protocols.py\", line 350 in arguments_assigned_stmts\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\protocols.py\", line 291 in assend_assigned_stmts\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\inference.py\", line 812 in infer_assign\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\decorators.py\", line 89 in wrapped\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\decorators.py\", line 125 in raise_if_nothing_inferred\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\context.py\", line 107 in cache_generator\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\util.py\", line 148 in limit_inference\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\bases.py\", line 125 in _infer_stmts\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\decorators.py\", line 92 in wrapped\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\decorators.py\", line 125 in raise_if_nothing_inferred\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\context.py\", line 107 in cache_generator\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\util.py\", line 148 in limit_inference\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 1628 in infer_call_result\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\inference.py\", line 219 in infer_call\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\decorators.py\", line 92 in wrapped\r\n  File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\decorators.py\", line 125 in raise_if_nothing_inferred\r\n  ...\r\n\r\n### Expected behavior\r\n- Python interpreter does not crash. (probably not fixable by astroid devs)\r\n- RecursionException does not happen. (fix for this should automatically avoid interpreter crash)\r\n\r\n### Versions\r\nastroid 2.0.4 (does **not** happen in astroid 2.0.0)\r\npylint 2.1.1\r\nPython 3.6.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/617", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/617/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/617/events", "html_url": "https://github.com/PyCQA/astroid/issues/617", "id": 365198243, "node_id": "MDU6SXNzdWUzNjUxOTgyNDM=", "number": 617, "title": "addition of ast.Constant type makes astroid crash on import when using current CPython master (which will become 3.8)", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-30T06:47:35Z", "updated_at": "2018-09-30T09:06:52Z", "closed_at": "2018-09-30T09:06:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the merge of https://github.com/python/cpython/pull/9445 broke astroid on CPython 3.8 pre-releases:\r\n\r\n```\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/trio/tests/test_exports.py:9: in <module>\r\n    from pylint.lint import PyLinter\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/pylint/lint.py:75: in <module>\r\n    import astroid\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/__init__.py:156: in <module>\r\n    __import__(module[:-3])\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/brain/brain_builtin_inference.py:103: in <module>\r\n    extend_builtins({'bytes': partial(_extend_str, rvalue=\"b''\"),\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/brain/brain_builtin_inference.py:99: in extend_builtins\r\n    transform(builtin_ast[class_name])\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/brain/brain_builtin_inference.py:84: in _extend_str\r\n    fake = AstroidBuilder(MANAGER).string_build(code)['whatever']\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/builder.py:132: in string_build\r\n    module = self._data_build(data, modname, path)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/builder.py:173: in _data_build\r\n    module = builder.visit_module(node, modname, node_file, package)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:162: in visit_module\r\n    newnode.postinit([self.visit(child, newnode) for child in node.body])\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:162: in <listcomp>\r\n    newnode.postinit([self.visit(child, newnode) for child in node.body])\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:174: in visit\r\n    return visit_method(node, parent)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:954: in visit_classdef\r\n    return super(TreeRebuilder3, self).visit_classdef(node, parent,\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:394: in visit_classdef\r\n    [self.visit(child, newnode)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:394: in <listcomp>\r\n    [self.visit(child, newnode)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:174: in visit\r\n    return visit_method(node, parent)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:576: in visit_functiondef\r\n    return self._visit_functiondef(nodes.FunctionDef, node, parent)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:566: in _visit_functiondef\r\n    body=[self.visit(child, newnode) for child in node.body],\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:566: in <listcomp>\r\n    body=[self.visit(child, newnode) for child in node.body],\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:174: in visit\r\n    return visit_method(node, parent)\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:741: in visit_return\r\n    newnode.postinit(self.visit(node.value, newnode))\r\n../../../../virtualenv/python3.8-dev/lib/python3.8/site-packages/astroid/rebuilder.py:172: in visit\r\n    visit_method = getattr(self, visit_name)\r\nE   AttributeError: 'TreeRebuilder3' object has no attribute 'visit_constant'\r\n```\r\n\r\n(See: https://travis-ci.org/python-trio/trio/jobs/435176057)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/614", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/614/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/614/events", "html_url": "https://github.com/PyCQA/astroid/issues/614", "id": 361968925, "node_id": "MDU6SXNzdWUzNjE5Njg5MjU=", "number": 614, "title": "Subscript inference fails to account for multiple possible inferences for value or slice", "user": {"login": "fizbin", "id": 4110350, "node_id": "MDQ6VXNlcjQxMTAzNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4110350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizbin", "html_url": "https://github.com/fizbin", "followers_url": "https://api.github.com/users/fizbin/followers", "following_url": "https://api.github.com/users/fizbin/following{/other_user}", "gists_url": "https://api.github.com/users/fizbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizbin/subscriptions", "organizations_url": "https://api.github.com/users/fizbin/orgs", "repos_url": "https://api.github.com/users/fizbin/repos", "events_url": "https://api.github.com/users/fizbin/events{/privacy}", "received_events_url": "https://api.github.com/users/fizbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-19T23:54:55Z", "updated_at": "2018-10-15T08:11:37Z", "closed_at": "2018-10-15T08:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\nRun the following program (in a python3 python):\r\n\r\n```\r\nimport astroid\r\n\r\nsrc = '''\r\ndef my_function(param):\r\n    ans = (1, 2)\r\n    if param:\r\n        ans = (3, 4)\r\n    my_var1 = ans[1]\r\n    (_, my_var2) = ans\r\n    # Note that at this point my_var1 and my_var2 should be identical\r\n    print((ans, my_var1, my_var2))\r\n'''\r\n\r\ntree = astroid.parse(src)\r\nans_node = tree.body[0].body[4].value.args[0].elts[0]\r\nmy_var1_node = tree.body[0].body[4].value.args[0].elts[1]\r\nmy_var2_node = tree.body[0].body[4].value.args[0].elts[2]\r\n\r\nprint(\"ans infer yields: %s\" % (list(ans_node.infer()),))\r\nprint(\"my_var1 infer yields: %s\" % (list(my_var1_node.infer()),))\r\nprint(\"my_var2 infer yields: %s\" % (list(my_var2_node.infer()),))\r\n\r\nprint(\"Constant values inferred for my_var1: %s\"\r\n      % ([x.value for x in my_var1_node.infer()],))\r\nprint(\"Constant values inferred for my_var2: %s\"\r\n      % ([x.value for x in my_var2_node.infer()],))\r\n```\r\n\r\n### Current behavior\r\nThe program outputs:\r\n```\r\nans infer yields: [<Tuple.tuple l.3 at 0x10e9ef208>, <Tuple.tuple l.5 at 0x10e9ef3c8>]\r\nmy_var1 infer yields: [<Const.int l.3 at 0x10e9ef128>]\r\nmy_var2 infer yields: [<Const.int l.3 at 0x10e9ef128>, <Const.int l.5 at 0x10e9ef2e8>]\r\nConstant values inferred for my_var1: [2]\r\nConstant values inferred for my_var2: [2, 4]\r\n```\r\nThat is, fewer possibilities are inferred for `my_var1` than `my_var2`, even though they should be identical.\r\n\r\n### Expected behavior\r\nThe inferred possibilities for `my_var1` and `my_var2` should be identical. The error is that the routine `infer_subscript` fails to account for the idea that `self.values` or `self.slice` could have multiple inferred possibilities.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.0.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/612", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/612/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/612/events", "html_url": "https://github.com/PyCQA/astroid/issues/612", "id": 356081274, "node_id": "MDU6SXNzdWUzNTYwODEyNzQ=", "number": 612, "title": "Enum value type inference is very limited", "user": {"login": "alexbecker", "id": 3656258, "node_id": "MDQ6VXNlcjM2NTYyNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3656258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbecker", "html_url": "https://github.com/alexbecker", "followers_url": "https://api.github.com/users/alexbecker/followers", "following_url": "https://api.github.com/users/alexbecker/following{/other_user}", "gists_url": "https://api.github.com/users/alexbecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbecker/subscriptions", "organizations_url": "https://api.github.com/users/alexbecker/orgs", "repos_url": "https://api.github.com/users/alexbecker/repos", "events_url": "https://api.github.com/users/alexbecker/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-31T18:24:47Z", "updated_at": "2019-02-05T16:50:29Z", "closed_at": "2019-02-05T07:57:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at https://github.com/PyCQA/astroid/commit/6f7d8014a3dd951b060c32dfef458aff3e18b0cf, it appears `Enum` `value` attribute type inference is limited only to literals. Unfortunately my company makes use of `Enum` subclasses with `tuple` values.\r\n\r\n### Steps to reproduce\r\n1. Create the following `test.py` file:\r\n```python\r\nimport enum\r\n\r\n\r\nclass MyEnum(enum.Enum):\r\n    a = (1, 2)\r\n\r\n\r\nif __name__ == '__main__':\r\n    for i in MyEnum.a.value:\r\n        print(i)\r\n    print(1 in MyEnum.a.value)\r\n```\r\n2. Run `pylint test.py`.\r\n\r\n### Current behavior\r\n```\r\n************* Module test\r\ntest.py:9:13: E1133: Non-iterable value MyEnum.a.value is used in an iterating context (not-an-iterable)\r\ntest.py:11:15: E1135: Value 'MyEnum.a.value' doesn't support membership test (unsupported-membership-test)\r\n```\r\n\r\n### Expected behavior\r\nNo error should occur since `MyEnum.a.value` is a tuple.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n`2.0.4`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/608", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/608/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/608/events", "html_url": "https://github.com/PyCQA/astroid/issues/608", "id": 352871742, "node_id": "MDU6SXNzdWUzNTI4NzE3NDI=", "number": 608, "title": "Use dev version for installs from git?", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-22T09:26:10Z", "updated_at": "2019-08-06T13:26:36Z", "closed_at": "2018-08-23T07:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just now installed `astroid` from source and got this:\r\n```\r\n$ pip install .\r\nProcessing /Users/deil/work/code/astroid\r\nRequirement already satisfied: lazy_object_proxy in /Users/deil/software/anaconda3/envs/gammapy-dev/lib/python3.6/site-packages (from astroid==2.0.4) (1.3.1)\r\nRequirement already satisfied: six in /Users/deil/software/anaconda3/envs/gammapy-dev/lib/python3.6/site-packages (from astroid==2.0.4) (1.11.0)\r\nRequirement already satisfied: wrapt in /Users/deil/software/anaconda3/envs/gammapy-dev/lib/python3.6/site-packages (from astroid==2.0.4) (1.10.11)\r\nRequirement already satisfied: typed_ast in /Users/deil/software/anaconda3/envs/gammapy-dev/lib/python3.6/site-packages (from astroid==2.0.4) (1.1.0)\r\nBuilding wheels for collected packages: astroid\r\n  Running setup.py bdist_wheel for astroid ... done\r\n  Stored in directory: /private/var/folders/t_/_mywtcj146lbk2c99bnxw7z40000gp/T/pip-ephem-wheel-cache-j59f58ye/wheels/04/f5/54/c911721540117e600833bb9d5e9d2ca9e716881706d385b552\r\nSuccessfully built astroid\r\nInstalling collected packages: astroid\r\n  Found existing installation: astroid 2.0.4\r\n    Uninstalling astroid-2.0.4:\r\n      Successfully uninstalled astroid-2.0.4\r\nSuccessfully installed astroid-2.0.4\r\n```\r\n\r\nSo it claims to have installed version `2.0.4`, but really it's 1f0eff526dcc3dea0af68288c719d23767bd2581 which has changes.\r\n\r\nIs there some mistake, or are you just not set up / want to have dev versions for this package?\r\n(other packages auto-create dev version strings from git somehow, there's multiple solutions, all complex for this)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/605", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/605/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/605/events", "html_url": "https://github.com/PyCQA/astroid/issues/605", "id": 349724343, "node_id": "MDU6SXNzdWUzNDk3MjQzNDM=", "number": 605, "title": "Performance issues with astroid 1.6.X and possibly astroid 2.X as well", "user": {"login": "dickreuter", "id": 1256318, "node_id": "MDQ6VXNlcjEyNTYzMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1256318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dickreuter", "html_url": "https://github.com/dickreuter", "followers_url": "https://api.github.com/users/dickreuter/followers", "following_url": "https://api.github.com/users/dickreuter/following{/other_user}", "gists_url": "https://api.github.com/users/dickreuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/dickreuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dickreuter/subscriptions", "organizations_url": "https://api.github.com/users/dickreuter/orgs", "repos_url": "https://api.github.com/users/dickreuter/repos", "events_url": "https://api.github.com/users/dickreuter/events{/privacy}", "received_events_url": "https://api.github.com/users/dickreuter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890725738, "node_id": "MDU6TGFiZWw4OTA3MjU3Mzg=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/topic-performance", "name": "topic-performance", "color": "fac2fc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-11T10:33:56Z", "updated_at": "2019-01-18T15:39:59Z", "closed_at": "2019-01-18T15:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using asteroid 1.6.5 pylint becomes very slow as described here\r\nhttps://github.com/PyCQA/pylint/issues/2198\r\n\"took a simple test program like the one above and varied the installed versions of Pandas, Numpy, Pylint, and astroid. I found that the Pandas, Numpy, and Pylint versions do not matter at all, I tested several versions of each from Summer 2017 up until today. But astroid <= 1.6.1 took only about 20-30 seconds, whereas anything >= 1.6.2 took 8-10 minutes! This also applies to the 2.x.y releases of Pylint and astroid, they take forever to analyze the simple test program.\"\r\n\r\nAny suggestions what I can do about this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/599", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/599/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/599/events", "html_url": "https://github.com/PyCQA/astroid/issues/599", "id": 343039038, "node_id": "MDU6SXNzdWUzNDMwMzkwMzg=", "number": 599, "title": "Cannot import 'CallFunc' in astroid 2.0 ", "user": {"login": "sandjaie", "id": 12917663, "node_id": "MDQ6VXNlcjEyOTE3NjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/12917663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandjaie", "html_url": "https://github.com/sandjaie", "followers_url": "https://api.github.com/users/sandjaie/followers", "following_url": "https://api.github.com/users/sandjaie/following{/other_user}", "gists_url": "https://api.github.com/users/sandjaie/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandjaie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandjaie/subscriptions", "organizations_url": "https://api.github.com/users/sandjaie/orgs", "repos_url": "https://api.github.com/users/sandjaie/repos", "events_url": "https://api.github.com/users/sandjaie/events{/privacy}", "received_events_url": "https://api.github.com/users/sandjaie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-20T09:35:53Z", "updated_at": "2018-07-20T11:26:19Z", "closed_at": "2018-07-20T09:59:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python version: 3.6\r\n\r\nFacing the below issue while running `tox -e lint`. It seems to be fine if I switch to astroid==1.6.5\r\n```\r\nlint installed: astroid==2.0,docutils==0.14,dodgy==0.1.9,flake8==3.5.0,flake8-polyfill==1.0.2,frosted==1.4.1,gitdb2==2.0.4,GitPython==2.1.11,isort==4.3.4,lazy-object-proxy==1.3.1,mccabe==0.6.1,pep8-naming==0.7.0,pies==2.6.7,prospector==0.12.11,pycodestyle==2.3.1,pydocstyle==2.1.1,pyflakes==1.6.0,pylint==1.9.2,pylint-common==0.2.5,pylint-plugin-utils==0.4,pyroma==2.3.1,PyYAML==3.13,requirements-detector==0.5.2,setoptconf==0.2.0,six==1.11.0,smmap2==2.0.4,snowballstemmer==1.2.1,vulture==0.24,wrapt==1.10.11\r\nlint runtests: commands[0] | prospector -0 -I __init__.py -I _docs/ --strictness veryhigh --max-line-length 120\r\nTraceback (most recent call last):\r\n  File \"/tmp/workspace/component/.tox/lint/bin/prospector\", line 7, in <module>\r\n    from prospector.run import main\r\n  File \"/tmp/workspace/component/.tox/lint/lib/python3.6/site-packages/prospector/run.py\", line 9, in <module>\r\n    from prospector.config import configuration as cfg\r\n  File \"/tmp/workspace/component/.tox/lint/lib/python3.6/site-packages/prospector/config/__init__.py\", line 7, in <module>\r\n    from prospector.autodetect import autodetect_libraries\r\n  File \"/tmp/workspace/component/.tox/lint/lib/python3.6/site-packages/prospector/autodetect.py\", line 4, in <module>\r\n    from requirements_detector import find_requirements\r\n  File \"/tmp/workspace/component/.tox/lint/lib/python3.6/site-packages/requirements_detector/__init__.py\", line 1, in <module>\r\n    from requirements_detector.detect import find_requirements\r\n  File \"/tmp/workspace/component/.tox/lint/lib/python3.6/site-packages/requirements_detector/detect.py\", line 5, in <module>\r\n    from astroid import MANAGER, CallFunc, Name, Assign, Keyword, List, Tuple, Const, AssName\r\nImportError: cannot import name 'CallFunc'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/596", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/596/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/596/events", "html_url": "https://github.com/PyCQA/astroid/issues/596", "id": 341593758, "node_id": "MDU6SXNzdWUzNDE1OTM3NTg=", "number": 596, "title": "4 test failures on Python 3.6.5", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-16T16:42:43Z", "updated_at": "2018-07-17T07:49:09Z", "closed_at": "2018-07-17T07:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Four unit tests are failing on Fedora 28 x86_64 with Python 3.6.5:\r\n\r\n### Steps to reproduce\r\n1. ``tar xzf astroid-2.0.tar.gz``\r\n2. ``cd astroid-2.0``\r\n3. ``python3.6 -m pytest\r\n\r\n### Current behavior\r\n```\r\n================================================== FAILURES ==================================================\r\n__________________________________________ test_type_comments_with ___________________________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_comments_with():\r\n        module = builder.parse('''\r\n        with a as b: # type: int\r\n            pass\r\n        with a as b: # type: ignore\r\n            pass\r\n        ''')\r\n        node = module.body[0]\r\n        ignored_node = module.body[1]\r\n>       assert isinstance(node.type_annotation, astroid.Name)\r\nE       AssertionError: assert False\r\nE        +  where False = isinstance(None, <class 'astroid.node_classes.Name'>)\r\nE        +    where None = <With l.2 at 0x7fcd1c635390>.type_annotation\r\nE        +    and   <class 'astroid.node_classes.Name'> = astroid.Name\r\n\r\nastroid/tests/unittest_nodes.py:871: AssertionError\r\n___________________________________________ test_type_comments_for ___________________________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_comments_for():\r\n        module = builder.parse('''\r\n        for a, b in [1, 2, 3]: # type: List[int]\r\n            pass\r\n        for a, b in [1, 2, 3]: # type: ignore\r\n            pass\r\n        ''')\r\n        node = module.body[0]\r\n        ignored_node = module.body[1]\r\n>       assert isinstance(node.type_annotation, astroid.Subscript)\r\nE       AssertionError: assert False\r\nE        +  where False = isinstance(None, <class 'astroid.node_classes.Subscript'>)\r\nE        +    where None = <For l.2 at 0x7fcd1cb8bfd0>.type_annotation\r\nE        +    and   <class 'astroid.node_classes.Subscript'> = astroid.Subscript\r\n\r\nastroid/tests/unittest_nodes.py:886: AssertionError\r\n__________________________________________ test_type_coments_assign __________________________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_coments_assign():\r\n        module = builder.parse('''\r\n        a, b = [1, 2, 3] # type: List[int]\r\n        a, b = [1, 2, 3] # type: ignore\r\n        ''')\r\n        node = module.body[0]\r\n        ignored_node = module.body[1]\r\n>       assert isinstance(node.type_annotation, astroid.Subscript)\r\nE       AssertionError: assert False\r\nE        +  where False = isinstance(None, <class 'astroid.node_classes.Subscript'>)\r\nE        +    where None = <Assign l.2 at 0x7fcd1bf6c518>.type_annotation\r\nE        +    and   <class 'astroid.node_classes.Subscript'> = astroid.Subscript\r\n\r\nastroid/tests/unittest_nodes.py:900: AssertionError\r\n________________________________________ test_type_comments_function _________________________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_comments_function():\r\n        module = builder.parse('''\r\n        def func():\r\n            # type: (int) -> str\r\n            pass\r\n        def func1():\r\n            # type: (int, int, int) -> (str, str)\r\n            pass\r\n        def func2():\r\n            # type: (int, int, str, List[int]) -> List[int]\r\n            pass\r\n        ''')\r\n        expected_annotations = [\r\n            ([\"int\"], astroid.Name, \"str\"),\r\n            ([\"int\", \"int\", \"int\"], astroid.Tuple, \"(str, str)\"),\r\n            ([\"int\", \"int\", \"str\", \"List[int]\"], astroid.Subscript, \"List[int]\"),\r\n        ]\r\n        for node, (\r\n                expected_args,\r\n                expected_returns_type,\r\n                expected_returns_string\r\n            ) in zip(module.body, expected_annotations):\r\n>           assert node.type_comment_returns is not None\r\nE           assert None is not None\r\nE            +  where None = <FunctionDef.func l.2 at 0x7fcd1cb8b4a8>.type_comment_returns\r\n\r\nastroid/tests/unittest_nodes.py:958: AssertionError\r\n======================== 4 failed, 788 passed, 58 skipped, 10 xfailed in 8.22 seconds ========================\r\n```\r\n\r\n### Expected behavior\r\n\r\nno test failures\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` astroid 2.0\r\nPython 3.6.5 (default, Mar 29 2018, 18:20:46) \r\n[GCC 8.0.1 20180317 (Red Hat 8.0.1-0.19)] on linux\r\n\r\nSee https://copr-be.cloud.fedoraproject.org/results/@freeipa/freeipa-master/fedora-28-x86_64/00777812-python-astroid/builder-live.log for build failure on Fedora 28 COPR.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/593", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/593/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/593/events", "html_url": "https://github.com/PyCQA/astroid/issues/593", "id": 341299563, "node_id": "MDU6SXNzdWUzNDEyOTk1NjM=", "number": 593, "title": "Testsuite fails on python 3.7", "user": {"login": "eli-schwartz", "id": 6551424, "node_id": "MDQ6VXNlcjY1NTE0MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6551424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli-schwartz", "html_url": "https://github.com/eli-schwartz", "followers_url": "https://api.github.com/users/eli-schwartz/followers", "following_url": "https://api.github.com/users/eli-schwartz/following{/other_user}", "gists_url": "https://api.github.com/users/eli-schwartz/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli-schwartz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli-schwartz/subscriptions", "organizations_url": "https://api.github.com/users/eli-schwartz/orgs", "repos_url": "https://api.github.com/users/eli-schwartz/repos", "events_url": "https://api.github.com/users/eli-schwartz/events{/privacy}", "received_events_url": "https://api.github.com/users/eli-schwartz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-07-15T07:20:00Z", "updated_at": "2018-07-15T10:09:07Z", "closed_at": "2018-07-15T09:50:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to rebuild astroid master (due to the lack of a release and multiple failures with the stable release -- I was trying to see if the impending 2.0.0 release would fix it) for python 3.7 on Arch Linux, I hit the following testsuite error:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n______________ GetModuleFilesTest.test_load_module_set_attribute _______________\r\n\r\nself = <astroid.tests.unittest_modutils.GetModuleFilesTest testMethod=test_load_module_set_attribute>\r\n\r\n    def test_load_module_set_attribute(self):\r\n        import xml.etree.ElementTree\r\n        import xml\r\n        del xml.etree.ElementTree\r\n        del sys.modules['xml.etree.ElementTree']\r\n>       m = modutils.load_module_from_modpath(['xml', 'etree', 'ElementTree'])\r\n\r\nastroid/tests/unittest_modutils.py:311: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nastroid/modutils.py:231: in load_module_from_modpath\r\n    module = imp.load_module(curname, mp_file, mp_filename, mp_desc)\r\n/usr/lib/python3.7/imp.py:235: in load_module\r\n    return load_source(name, filename, file)\r\n/usr/lib/python3.7/imp.py:172: in load_source\r\n    module = _load(spec)\r\n<frozen importlib._bootstrap>:696: in _load\r\n    ???\r\n<frozen importlib._bootstrap>:677: in _load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap_external>:724: in exec_module\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <imp._LoadSourceCompatibility object at 0x7fe448e1acf8>\r\nfullname = 'xml.etree.ElementTree'\r\n\r\n>   ???\r\nE   TypeError: a bytes-like object is required, not 'str'\r\n\r\n<frozen importlib._bootstrap_external>:838: TypeError\r\n======== 1 failed, 801 passed, 48 skipped, 10 xfailed in 21.08 seconds =========\r\n```\r\n\r\nI actually get more errors trying to rebuild master on python 3.6:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n___________________________ test_type_comments_with ____________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_comments_with():\r\n        module = builder.parse('''\r\n        with a as b: # type: int\r\n            pass\r\n        with a as b: # type: ignore\r\n            pass\r\n        ''')\r\n        node = module.body[0]\r\n        ignored_node = module.body[1]\r\n>       assert isinstance(node.type_annotation, astroid.Name)\r\nE       AssertionError: assert False\r\nE        +  where False = isinstance(None, <class 'astroid.node_classes.Name'>)\r\nE        +    where None = <With l.2 at 0x7f8ab1ddb400>.type_annotation\r\nE        +    and   <class 'astroid.node_classes.Name'> = astroid.Name\r\n\r\nastroid/tests/unittest_nodes.py:863: AssertionError\r\n____________________________ test_type_comments_for ____________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_comments_for():\r\n        module = builder.parse('''\r\n        for a, b in [1, 2, 3]: # type: List[int]\r\n            pass\r\n        for a, b in [1, 2, 3]: # type: ignore\r\n            pass\r\n        ''')\r\n        node = module.body[0]\r\n        ignored_node = module.body[1]\r\n>       assert isinstance(node.type_annotation, astroid.Subscript)\r\nE       AssertionError: assert False\r\nE        +  where False = isinstance(None, <class 'astroid.node_classes.Subscript'>)\r\nE        +    where None = <For l.2 at 0x7f8ab1e6bcf8>.type_annotation\r\nE        +    and   <class 'astroid.node_classes.Subscript'> = astroid.Subscript\r\n\r\nastroid/tests/unittest_nodes.py:878: AssertionError\r\n___________________________ test_type_coments_assign ___________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_coments_assign():\r\n        module = builder.parse('''\r\n        a, b = [1, 2, 3] # type: List[int]\r\n        a, b = [1, 2, 3] # type: ignore\r\n        ''')\r\n        node = module.body[0]\r\n        ignored_node = module.body[1]\r\n>       assert isinstance(node.type_annotation, astroid.Subscript)\r\nE       AssertionError: assert False\r\nE        +  where False = isinstance(None, <class 'astroid.node_classes.Subscript'>)\r\nE        +    where None = <Assign l.2 at 0x7f8ab1dd07b8>.type_annotation\r\nE        +    and   <class 'astroid.node_classes.Subscript'> = astroid.Subscript\r\n\r\nastroid/tests/unittest_nodes.py:892: AssertionError\r\n_________________________ test_type_comments_function __________________________\r\n\r\n    @pytest.mark.skipif(not HAS_TYPED_AST, reason=\"requires typed_ast\")\r\n    def test_type_comments_function():\r\n        module = builder.parse('''\r\n        def func():\r\n            # type: (int) -> str\r\n            pass\r\n        def func1():\r\n            # type: (int, int, int) -> (str, str)\r\n            pass\r\n        def func2():\r\n            # type: (int, int, str, List[int]) -> List[int]\r\n            pass\r\n        ''')\r\n        expected_annotations = [\r\n            ([\"int\"], astroid.Name, \"str\"),\r\n            ([\"int\", \"int\", \"int\"], astroid.Tuple, \"(str, str)\"),\r\n            ([\"int\", \"int\", \"str\", \"List[int]\"], astroid.Subscript, \"List[int]\"),\r\n        ]\r\n        for node, (\r\n                expected_args,\r\n                expected_returns_type,\r\n                expected_returns_string\r\n            ) in zip(module.body, expected_annotations):\r\n>           assert node.type_comment_returns is not None\r\nE           assert None is not None\r\nE            +  where None = <FunctionDef.func l.2 at 0x7f8ab1ea7860>.type_comment_returns\r\n\r\nastroid/tests/unittest_nodes.py:950: AssertionError\r\n======== 4 failed, 803 passed, 43 skipped, 10 xfailed in 23.47 seconds =========\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/592", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/592/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/592/events", "html_url": "https://github.com/PyCQA/astroid/issues/592", "id": 340433538, "node_id": "MDU6SXNzdWUzNDA0MzM1Mzg=", "number": 592, "title": "astroid wheel should be marked as Python3 only", "user": {"login": "bart2", "id": 14372325, "node_id": "MDQ6VXNlcjE0MzcyMzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/14372325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bart2", "html_url": "https://github.com/bart2", "followers_url": "https://api.github.com/users/bart2/followers", "following_url": "https://api.github.com/users/bart2/following{/other_user}", "gists_url": "https://api.github.com/users/bart2/gists{/gist_id}", "starred_url": "https://api.github.com/users/bart2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bart2/subscriptions", "organizations_url": "https://api.github.com/users/bart2/orgs", "repos_url": "https://api.github.com/users/bart2/repos", "events_url": "https://api.github.com/users/bart2/events{/privacy}", "received_events_url": "https://api.github.com/users/bart2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297277709, "node_id": "MDU6TGFiZWwyOTcyNzc3MDk=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/task", "name": "task", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-11T22:56:06Z", "updated_at": "2018-07-13T06:50:29Z", "closed_at": "2018-07-13T06:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `universal = 1` flag in `setup.cfg` is causing our automation to try to build Python2 version of the latest `astroid`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/590", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/590/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/590/events", "html_url": "https://github.com/PyCQA/astroid/issues/590", "id": 339215310, "node_id": "MDU6SXNzdWUzMzkyMTUzMTA=", "number": 590, "title": "[Debian] Do you have an (rough) ETA for 2.0.0", "user": {"login": "P-EB", "id": 3770652, "node_id": "MDQ6VXNlcjM3NzA2NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3770652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-EB", "html_url": "https://github.com/P-EB", "followers_url": "https://api.github.com/users/P-EB/followers", "following_url": "https://api.github.com/users/P-EB/following{/other_user}", "gists_url": "https://api.github.com/users/P-EB/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-EB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-EB/subscriptions", "organizations_url": "https://api.github.com/users/P-EB/orgs", "repos_url": "https://api.github.com/users/P-EB/repos", "events_url": "https://api.github.com/users/P-EB/events{/privacy}", "received_events_url": "https://api.github.com/users/P-EB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-08T10:37:08Z", "updated_at": "2018-07-16T14:13:30Z", "closed_at": "2018-07-15T09:58:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear astroid devs,\r\n\r\nAs python3.7 became the main python release into Debian, many things broke, including our current packaged version of astroid.\r\n\r\nTo get some clear idea about how and when we'll be able to fix this specific package, I'm trying to find when your 3.7 compatible release will get on board.\r\n\r\nIn the current ChangeLog, the ETA for 2.0.0 is unknown. But maybe as devs you have a better idea regarding this?\r\n\r\nCheers! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/588", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/588/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/588/events", "html_url": "https://github.com/PyCQA/astroid/issues/588", "id": 339168635, "node_id": "MDU6SXNzdWUzMzkxNjg2MzU=", "number": 588, "title": "context propagation causing slowdown", "user": {"login": "nickdrozd", "id": 17630138, "node_id": "MDQ6VXNlcjE3NjMwMTM4", "avatar_url": "https://avatars1.githubusercontent.com/u/17630138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdrozd", "html_url": "https://github.com/nickdrozd", "followers_url": "https://api.github.com/users/nickdrozd/followers", "following_url": "https://api.github.com/users/nickdrozd/following{/other_user}", "gists_url": "https://api.github.com/users/nickdrozd/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdrozd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdrozd/subscriptions", "organizations_url": "https://api.github.com/users/nickdrozd/orgs", "repos_url": "https://api.github.com/users/nickdrozd/repos", "events_url": "https://api.github.com/users/nickdrozd/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdrozd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890725738, "node_id": "MDU6TGFiZWw4OTA3MjU3Mzg=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/topic-performance", "name": "topic-performance", "color": "fac2fc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-07T19:20:37Z", "updated_at": "2019-01-16T14:25:05Z", "closed_at": "2019-01-16T14:25:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently Pylint became slower. For instance, running Pylint against `pycodestyle.py` on my crappy little Thinkpad went from\r\n\r\n```\r\nreal\t0m19.452s\r\nuser\t0m19.268s\r\nsys\t0m0.189s\r\n```\r\nto\r\n\r\n```\r\nreal\t0m32.048s\r\nuser\t0m31.742s\r\nsys\t0m0.293s\r\n```\r\n\r\nGoing commit by commit, aea774e9554877871045f7f5d0a2f6e063a7c756 seems to be the culprit. I haven't had a chance to do any profiling, but I think\r\n\r\n```\r\n@@ -87,6 +94,7 @@ class InferenceContext:\r\n         clone = InferenceContext(copy.copy(self.path), inferred=self.inferred)\r\n         clone.callcontext = self.callcontext\r\n         clone.boundnode = self.boundnode\r\n+        clone.extra_context = copy.copy(self.extra_context)\r\n         return clone\r\n \r\n     def cache_generator(self, key, generator):\r\n```\r\n\r\nis what's doing it. The `copy` in `clone` was already quite slow, so I think adding another one is even slower. That's just a hypothesis though, I haven't tested it.\r\n\r\nI have no suggestions as to how to improve it, just making a note of the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/585", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/585/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/585/events", "html_url": "https://github.com/PyCQA/astroid/issues/585", "id": 338515029, "node_id": "MDU6SXNzdWUzMzg1MTUwMjk=", "number": 585, "title": "`NodeNG.get_children` yields nodes in inconsistent order", "user": {"login": "brendanator", "id": 1440886, "node_id": "MDQ6VXNlcjE0NDA4ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1440886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanator", "html_url": "https://github.com/brendanator", "followers_url": "https://api.github.com/users/brendanator/followers", "following_url": "https://api.github.com/users/brendanator/following{/other_user}", "gists_url": "https://api.github.com/users/brendanator/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanator/subscriptions", "organizations_url": "https://api.github.com/users/brendanator/orgs", "repos_url": "https://api.github.com/users/brendanator/repos", "events_url": "https://api.github.com/users/brendanator/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-05T10:24:15Z", "updated_at": "2018-08-03T08:49:57Z", "closed_at": "2018-08-03T08:49:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Write function with args, default args, annotations, varargs, kwargs\r\n2. Parse and call get_children\r\n\r\n### Current behavior\r\nNodes are yielded in this order\r\n- args\r\n- defaults\r\n- kwonlyargs\r\n- kw_defaults\r\n- annotations\r\n- varargannotation\r\n- kwargannotation\r\n- kwonlyargs_annotations\r\n\r\n### Expected behavior\r\n- Nodes are yielded in order they appear in source code\r\n- Varargs and kwargs are also yielded\r\n\r\n### Other example\r\n`IfExp.get_children` yields `test` node before `body` node\r\n\r\n### Possible Solution\r\nI would expect all fields that aren't identifiers in the [python3 AST](https://docs.python.org/3/library/ast.html#abstract-grammar) to be yielded in the order they appear in the source code\r\n\r\nIt seems as though astroid nodes are based on [python2.7 AST](https://docs.python.org/2.7/library/ast.html#abstract-grammar) with additional information from the later version added. I think it would be better to base the astroid nodes on the latest python AST and get the builder code to convert from python2.7 AST. This solution means that more information is retained in the AST and cleanly solves this issue\r\n\r\nI may provide a PR for this but want to check:\r\n- are there any problems with this solution\r\n- what needs looking out for when implementing this?\r\n- how would other libraries be affected?\r\n- is this likely to be merged?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/583", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/583/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/583/events", "html_url": "https://github.com/PyCQA/astroid/issues/583", "id": 338331549, "node_id": "MDU6SXNzdWUzMzgzMzE1NDk=", "number": 583, "title": "astroid.modutils.load_module_from_file failing on path when using multiple symlinks", "user": {"login": "mariocj89", "id": 3709683, "node_id": "MDQ6VXNlcjM3MDk2ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariocj89", "html_url": "https://github.com/mariocj89", "followers_url": "https://api.github.com/users/mariocj89/followers", "following_url": "https://api.github.com/users/mariocj89/following{/other_user}", "gists_url": "https://api.github.com/users/mariocj89/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariocj89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariocj89/subscriptions", "organizations_url": "https://api.github.com/users/mariocj89/orgs", "repos_url": "https://api.github.com/users/mariocj89/repos", "events_url": "https://api.github.com/users/mariocj89/events{/privacy}", "received_events_url": "https://api.github.com/users/mariocj89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-04T16:24:33Z", "updated_at": "2018-07-05T09:31:14Z", "closed_at": "2018-07-05T09:31:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Create a folder and symlinked it to another one. Create a module within it.\r\n```\r\nmkdir /tmp/deployment\r\nln -s /tmp/deployment /tmp/path_to_include\r\ntouch /tmp/secret.py\r\nln -s /tmp/secret.py /tmp/deployment/secret.py\r\n```\r\n2. Validate ```  PYTHONPATH=/tmp/path_to_include python3.6 -c \"import secret\" ``` works.\r\n3. Astroid wont be able to load it:\r\n```\r\nPYTHONPATH=/tmp/path_to_include python3.6 \r\n>>> import astroid\r\n>>> astroid.modutils.load_module_from_file('/tmp/path_to_include/secret.py')\r\n```\r\n\r\nNote `/tmp/path_to_include/secret.py` exists and we are passing `/tmp/path_to_include` in the path, but as the module resolves it to realpath `load_module_from_file` wont work.\r\n\r\n### Current behavior\r\n\r\nAstroid is unable to load a module it the python path where it is present is on is a symlink (the one on sys.path, not the file path itself)\r\n\r\n### Expected behaviour\r\n\r\nTo be able to import it the same way you would with python.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n2.0.0.dev3\r\n\r\n### version information:\r\n\r\nPresent in the latest versions of 1.6 and 1.5.\r\nWorks in the latest version of 1.4: 1.4.9\r\n\r\nRelated issue: https://github.com/PyCQA/astroid/issues/538\r\n\r\nRelated commit: https://github.com/PyCQA/astroid/commit/788bb41c9eb1078237724933e3d33ca98419c41f\r\n\r\nThis manifests as well for the `extra-path` argument on the same function in modutils.\r\n\r\n\r\nProposal: Lookup on both realpath and abspath the same way #538 was resolved.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/581", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/581/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/581/events", "html_url": "https://github.com/PyCQA/astroid/issues/581", "id": 338201494, "node_id": "MDU6SXNzdWUzMzgyMDE0OTQ=", "number": 581, "title": "type.__new__ attribute infers to both type.__new__ and object.__new__", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-07-04T09:34:58Z", "updated_at": "2018-07-14T00:15:51Z", "closed_at": "2018-07-14T00:15:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Example:\r\n\r\n```python\r\nimport astroid\r\nprint(astroid.extract_node(\"\"\"\r\ntype.__new__\r\n\"\"\").inferred())\r\n```\r\n\r\nResults in `[<BoundMethod __new__ of builtins.type at 0x126350295329928, <BoundMethod __new__ of builtins.object at 0x126350078306680]`\r\nThe above code should only infer to BoundMethod of `type.__new__`\r\n\r\nThis is causing some issues and hacks in the code base including https://github.com/PyCQA/astroid/blob/master/astroid/bases.py#L452 I think", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/580", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/580/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/580/events", "html_url": "https://github.com/PyCQA/astroid/issues/580", "id": 337730162, "node_id": "MDU6SXNzdWUzMzc3MzAxNjI=", "number": 580, "title": "OSError attributes are incorrectly ClassDefs", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-03T03:10:22Z", "updated_at": "2019-01-18T17:48:30Z", "closed_at": "2019-01-18T17:48:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The follwing code\r\n```python\r\nimport astroid\r\n[fname] = astroid.extract_node(\"\"\"\r\ntry:\r\n    pass\r\nexcept OSError as error:\r\n    error.filename #@\r\n\"\"\").infer()\r\nprint(fname)\r\n```\r\nGives\r\n```\r\nClassDef.filename(name='filename',\r\n                  doc='exception filename',\r\n                  decorators=None,\r\n                  bases=[],\r\n                  body=[ <Const.str l.0 at 0x702e55fcc978>,\r\n                    <Const.str l.0 at 0x702e55fcc9b0>])\r\n```\r\n\r\nThis causes false-positives such as `filename.startswith` because `filename` should be a string.\r\n`.locals['filename']` has this ClassDefs. `OSError.filename` is a `member_descriptor` in python.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/579", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/579/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/579/events", "html_url": "https://github.com/PyCQA/astroid/issues/579", "id": 337539284, "node_id": "MDU6SXNzdWUzMzc1MzkyODQ=", "number": 579, "title": "Type inference performance issue", "user": {"login": "7omb", "id": 6901126, "node_id": "MDQ6VXNlcjY5MDExMjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6901126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/7omb", "html_url": "https://github.com/7omb", "followers_url": "https://api.github.com/users/7omb/followers", "following_url": "https://api.github.com/users/7omb/following{/other_user}", "gists_url": "https://api.github.com/users/7omb/gists{/gist_id}", "starred_url": "https://api.github.com/users/7omb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/7omb/subscriptions", "organizations_url": "https://api.github.com/users/7omb/orgs", "repos_url": "https://api.github.com/users/7omb/repos", "events_url": "https://api.github.com/users/7omb/events{/privacy}", "received_events_url": "https://api.github.com/users/7omb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890725738, "node_id": "MDU6TGFiZWw4OTA3MjU3Mzg=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/topic-performance", "name": "topic-performance", "color": "fac2fc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-02T14:20:42Z", "updated_at": "2018-07-06T09:08:55Z", "closed_at": "2018-07-06T09:08:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "In pylint 1.9.2 astroids type inference performs very badly for the code below:\r\n\r\n```\r\nargs = []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args += []\r\n\r\nif True:\r\n    args.append('')\r\n```\r\n\r\nIf the `args.append('')` appears in the first if statement pylint finishes almost immediately. If you move it to the end it already takes more than 7s. Profiling shows that the running time and number of calls to the function `_infer_binary_operation` increases exponentially \r\n\r\nThe issue can be reproduced in a virtual environment with only pylint installed and an empty pylintrc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/577", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/577/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/577/events", "html_url": "https://github.com/PyCQA/astroid/issues/577", "id": 337043670, "node_id": "MDU6SXNzdWUzMzcwNDM2NzA=", "number": 577, "title": "Python 3.7 StopIteration becomes RuntimeError", "user": {"login": "chingc", "id": 471856, "node_id": "MDQ6VXNlcjQ3MTg1Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/471856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chingc", "html_url": "https://github.com/chingc", "followers_url": "https://api.github.com/users/chingc/followers", "following_url": "https://api.github.com/users/chingc/following{/other_user}", "gists_url": "https://api.github.com/users/chingc/gists{/gist_id}", "starred_url": "https://api.github.com/users/chingc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chingc/subscriptions", "organizations_url": "https://api.github.com/users/chingc/orgs", "repos_url": "https://api.github.com/users/chingc/repos", "events_url": "https://api.github.com/users/chingc/events{/privacy}", "received_events_url": "https://api.github.com/users/chingc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-29T15:31:30Z", "updated_at": "2018-07-15T07:30:25Z", "closed_at": "2018-06-29T15:37:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "[PEP 479](https://www.python.org/dev/peps/pep-0479), enabled for all code in Python 3.7, is causing astroid to fail.\r\nhttps://docs.python.org/3/whatsnew/3.7.html#changes-in-python-behavior\r\n\r\n### Steps to reproduce\r\n```python\r\n\"\"\"empty.py\"\"\"\r\n\r\nimport os\r\n```\r\n\r\n```python\r\npylint empty.py\r\n```\r\n\r\n<details>\r\n<summary>output</summary>\r\n\r\n```bash\r\nNo config file found, using default configuration\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\nStopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 104, in wrapped\r\n    raise StopIteration\r\nStopIteration\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\python37\\Lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\python37\\Lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\Cherry\\.virtualenvs\\test-0PsIO9xF\\Scripts\\pylint.exe\\__main__.py\", line 9, in <module>\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\__init__.py\", line 16, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\lint.py\", line 1347, in __init__\r\n    linter.check(args)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\lint.py\", line 768, in check\r\n    self._do_check(files_or_modules)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\lint.py\", line 901, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\lint.py\", line 980, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\utils.py\", line 1014, in walk\r\n    self.walk(child)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\utils.py\", line 1011, in walk\r\n    cb(astroid)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\pylint\\checkers\\variables.py\", line 1245, in visit_import\r\n    module = next(node.infer_name_module(parts[0]))\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\context.py\", line 71, in cache_generator\r\n    for result in generator:\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\inference.py\", line 194, in infer_import\r\n    yield self.do_import_module(name)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\mixins.py\", line 119, in do_import_module\r\n    relative_only=level and level >= 1)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 593, in import_module\r\n    return MANAGER.ast_from_module_name(absmodname)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\manager.py\", line 154, in ast_from_module_name\r\n    return self.ast_from_file(found_spec.location, modname, fallback=False)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\manager.py\", line 80, in ast_from_file\r\n    return AstroidBuilder(self).file_build(filepath, modname)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\builder.py\", line 153, in file_build\r\n    return self._post_build(module, encoding)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\builder.py\", line 173, in _post_build\r\n    self.delayed_assattr(delayed)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\builder.py\", line 232, in delayed_assattr\r\n    for inferred in node.expr.infer():\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\bases.py\", line 95, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\context.py\", line 71, in cache_generator\r\n    for result in generator:\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 86, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\inference.py\", line 760, in infer_assign\r\n    stmts = list(self.assigned_stmts(context=context))\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\protocols.py\", line 304, in _arguments_infer_argname\r\n    is_metaclass = isinstance(cls, nodes.ClassDef) and cls.type == 'metaclass'\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 1650, in _class_type\r\n    if _is_metaclass(klass):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 1619, in _is_metaclass\r\n    for baseobj in base.infer():\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\bases.py\", line 95, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\context.py\", line 71, in cache_generator\r\n    for result in generator:\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 86, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\inference.py\", line 219, in infer_import_from\r\n    module = self.do_import_module()\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\mixins.py\", line 119, in do_import_module\r\n    relative_only=level and level >= 1)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 593, in import_module\r\n    return MANAGER.ast_from_module_name(absmodname)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\manager.py\", line 154, in ast_from_module_name\r\n    return self.ast_from_file(found_spec.location, modname, fallback=False)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\manager.py\", line 80, in ast_from_file\r\n    return AstroidBuilder(self).file_build(filepath, modname)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\builder.py\", line 153, in file_build\r\n    return self._post_build(module, encoding)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\builder.py\", line 173, in _post_build\r\n    self.delayed_assattr(delayed)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\builder.py\", line 232, in delayed_assattr\r\n    for inferred in node.expr.infer():\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\bases.py\", line 95, in _infer_stmts\r\n    for inferred in stmt.infer(context=context):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\context.py\", line 71, in cache_generator\r\n    for result in generator:\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\decorators.py\", line 86, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\inference.py\", line 760, in infer_assign\r\n    stmts = list(self.assigned_stmts(context=context))\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\protocols.py\", line 304, in _arguments_infer_argname\r\n    is_metaclass = isinstance(cls, nodes.ClassDef) and cls.type == 'metaclass'\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 1650, in _class_type\r\n    if _is_metaclass(klass):\r\n  File \"c:\\users\\cherry\\.virtualenvs\\test-0psio9xf\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 1619, in _is_metaclass\r\n    for baseobj in base.infer():\r\nRuntimeError: generator raised StopIteration\r\n```\r\n\r\n</details>\r\n\r\n\r\n### pylint --version\r\n\r\n```bash\r\nNo config file found, using default configuration\r\npylint 1.9.2,\r\nastroid 1.6.5\r\nPython 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/570", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/570/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/570/events", "html_url": "https://github.com/PyCQA/astroid/issues/570", "id": 335818184, "node_id": "MDU6SXNzdWUzMzU4MTgxODQ=", "number": 570, "title": "Add of a DEP file", "user": {"login": "WaldoFR", "id": 10857454, "node_id": "MDQ6VXNlcjEwODU3NDU0", "avatar_url": "https://avatars1.githubusercontent.com/u/10857454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaldoFR", "html_url": "https://github.com/WaldoFR", "followers_url": "https://api.github.com/users/WaldoFR/followers", "following_url": "https://api.github.com/users/WaldoFR/following{/other_user}", "gists_url": "https://api.github.com/users/WaldoFR/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaldoFR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaldoFR/subscriptions", "organizations_url": "https://api.github.com/users/WaldoFR/orgs", "repos_url": "https://api.github.com/users/WaldoFR/repos", "events_url": "https://api.github.com/users/WaldoFR/events{/privacy}", "received_events_url": "https://api.github.com/users/WaldoFR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T13:24:42Z", "updated_at": "2018-06-28T21:56:02Z", "closed_at": "2018-06-28T21:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nSorry if this content is available somewhere, I've been looking for a file gathering all dependencies required by astroid 1.6.5 ( newest versions do not seem to include the feature neither), and I found nothing. It's a huge problem when trying to run the setup in offline mode. \r\n\r\nIn the pylint project, there is a DEP file including every version of each dependencies to install before running the command `python setup.py install`. I'd like to know where I could get the information in the current project.\r\n\r\nRegards,\r\nWaldoFR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/565", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/565/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/565/events", "html_url": "https://github.com/PyCQA/astroid/issues/565", "id": 333921073, "node_id": "MDU6SXNzdWUzMzM5MjEwNzM=", "number": 565, "title": "RecursionError when copying constants", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-20T04:35:17Z", "updated_at": "2018-06-24T00:26:22Z", "closed_at": "2018-06-24T00:26:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Steps to reproduce\r\nRun\r\n```python\r\nimport copy\r\nimport astroid\r\ncopy.copy(astroid.nodes.Const(1))\r\n```\r\n\r\n### Output\r\n\r\n```\r\n----> 1 copy.copy(astroid.nodes.Const(1))\r\n\r\n~/astroid/ast/lib64/python3.6/copy.py in copy(x)\r\n    104     if isinstance(rv, str):\r\n    105         return x\r\n--> 106     return _reconstruct(x, None, *rv)\r\n    107 \r\n    108 \r\n\r\n~/astroid/ast/lib64/python3.6/copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    279         if deep:\r\n    280             state = deepcopy(state, memo)\r\n--> 281         if hasattr(y, '__setstate__'):\r\n    282             y.__setstate__(state)\r\n    283         else:\r\n\r\n~/astroid/astroid/bases.py in __getattr__(self, name)\r\n     69         if name in self.__dict__:\r\n     70             return self.__dict__[name]\r\n---> 71         return getattr(self._proxied, name)\r\n     72 \r\n     73     def infer(self, context=None):\r\n\r\n~/astroid/astroid/raw_building.py in _set_proxied(const)\r\n    396 # infinite recursion (see https://bugs.launchpad.net/pylint/+bug/456870)\r\n    397 def _set_proxied(const):\r\n--> 398     return _CONST_PROXY[const.value.__class__]\r\n    399 nodes.Const._proxied = property(_set_proxied)\r\n    400 \r\n\r\n... last 2 frames repeated, from the frame below ...\r\n\r\n~/astroid/astroid/bases.py in __getattr__(self, name)\r\n     69         if name in self.__dict__:\r\n     70             return self.__dict__[name]\r\n---> 71         return getattr(self._proxied, name)\r\n     72 \r\n     73     def infer(self, context=None):\r\n\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n### Current version\r\n\r\ncdd9756b0f9ac270a2ca365ecde972d47a891e94\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/564", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/564/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/564/events", "html_url": "https://github.com/PyCQA/astroid/issues/564", "id": 333858708, "node_id": "MDU6SXNzdWUzMzM4NTg3MDg=", "number": 564, "title": "Should Inference infer all elements of a list?", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123629, "node_id": "MDU6TGFiZWwyOTcxMjM2Mjk=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T22:16:30Z", "updated_at": "2018-06-20T22:08:52Z", "closed_at": "2018-06-20T22:08:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Steps to reproduce\r\nGiven the following code, inference does not evaluate the elts of the list:\r\n```python\r\nimport astroid\r\ncode = \"\"\"\r\ndef foo():\r\n    return 1\r\nx = list([foo()])\r\nx\r\n\"\"\"\r\nnode = astroid.extract_node(code)\r\nnode.inferred()[0].as_string()\r\n```\r\n### Current behavior\r\nThe above code returns `'[foo()]'`\r\n\r\n### Expected behavior\r\n\r\nReturn `[1]` by evaluating elts.\r\n\r\n### version\r\ncdd9756b0f9ac270a2ca365ecde972d47a891e94\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/557", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/557/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/557/events", "html_url": "https://github.com/PyCQA/astroid/issues/557", "id": 330660875, "node_id": "MDU6SXNzdWUzMzA2NjA4NzU=", "number": 557, "title": "astroid 2.0.0 chokes on recursion", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T13:35:22Z", "updated_at": "2018-06-09T22:51:04Z", "closed_at": "2018-06-09T22:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\nhttps://github.com/PyCQA/astroid/blob/master/astroid/tests/testdata/python3/data/joined_strings.py\r\n\r\n```python\r\nimport astroid\r\nimport pathlib\r\nastroid.MANAGER.optimize_ast = True\r\nsource = pathlib.Path('joined_strings.py').read_text()\r\nbuilder = astroid.builder.AstroidBuilder()\r\ntree = builder.string_build(source)\r\n```\r\n\r\n### Current behavior with 1.6\r\n\r\nNo exception.\r\n\r\n### Current behavior with 2.0\r\n\r\n    RecursionError: maximum recursion depth exceeded\r\n\r\nThis breaks asttokens tests: https://github.com/gristlabs/asttokens/issues/16", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/556", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/556/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/556/events", "html_url": "https://github.com/PyCQA/astroid/issues/556", "id": 330601869, "node_id": "MDU6SXNzdWUzMzA2MDE4Njk=", "number": 556, "title": "astroid cannot find module if source file is a symlink?", "user": {"login": "stphnlyd", "id": 20906652, "node_id": "MDQ6VXNlcjIwOTA2NjUy", "avatar_url": "https://avatars3.githubusercontent.com/u/20906652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stphnlyd", "html_url": "https://github.com/stphnlyd", "followers_url": "https://api.github.com/users/stphnlyd/followers", "following_url": "https://api.github.com/users/stphnlyd/following{/other_user}", "gists_url": "https://api.github.com/users/stphnlyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stphnlyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stphnlyd/subscriptions", "organizations_url": "https://api.github.com/users/stphnlyd/orgs", "repos_url": "https://api.github.com/users/stphnlyd/repos", "events_url": "https://api.github.com/users/stphnlyd/events{/privacy}", "received_events_url": "https://api.github.com/users/stphnlyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-08T10:17:49Z", "updated_at": "2018-06-12T09:07:43Z", "closed_at": "2018-06-08T21:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using astroid 1.6.4 and get the same issue as https://github.com/PyCQA/pylint/issues/1470. And someone identified that it's related to astroid https://github.com/PyCQA/pylint/issues/1470#issuecomment-345093616\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/555", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/555/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/555/events", "html_url": "https://github.com/PyCQA/astroid/issues/555", "id": 330338983, "node_id": "MDU6SXNzdWUzMzAzMzg5ODM=", "number": 555, "title": "Module.stream documentation error", "user": {"login": "johnburnett", "id": 945935, "node_id": "MDQ6VXNlcjk0NTkzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/945935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnburnett", "html_url": "https://github.com/johnburnett", "followers_url": "https://api.github.com/users/johnburnett/followers", "following_url": "https://api.github.com/users/johnburnett/following{/other_user}", "gists_url": "https://api.github.com/users/johnburnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnburnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnburnett/subscriptions", "organizations_url": "https://api.github.com/users/johnburnett/orgs", "repos_url": "https://api.github.com/users/johnburnett/repos", "events_url": "https://api.github.com/users/johnburnett/events{/privacy}", "received_events_url": "https://api.github.com/users/johnburnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T16:04:24Z", "updated_at": "2018-06-07T17:35:04Z", "closed_at": "2018-06-07T17:34:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like there was an incorrect(?) deprecation note added to Module.stream in [this](https://github.com/PyCQA/astroid/blame/master/astroid/scoped_nodes.py#L421) commit, based on [this comment](https://github.com/PyCQA/astroid/blob/master/ChangeLog#L840) made in the changelog.  I think it was just Module.file_stream (now removed) that was deprecated, and Module.stream was intended to be the replacement?  If not, what replaces the replacement?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/554", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/554/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/554/events", "html_url": "https://github.com/PyCQA/astroid/issues/554", "id": 330319492, "node_id": "MDU6SXNzdWUzMzAzMTk0OTI=", "number": 554, "title": "Crash when handling code which stores bound method in a variable", "user": {"login": "nieltg", "id": 7892024, "node_id": "MDQ6VXNlcjc4OTIwMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7892024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nieltg", "html_url": "https://github.com/nieltg", "followers_url": "https://api.github.com/users/nieltg/followers", "following_url": "https://api.github.com/users/nieltg/following{/other_user}", "gists_url": "https://api.github.com/users/nieltg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nieltg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nieltg/subscriptions", "organizations_url": "https://api.github.com/users/nieltg/orgs", "repos_url": "https://api.github.com/users/nieltg/repos", "events_url": "https://api.github.com/users/nieltg/events{/privacy}", "received_events_url": "https://api.github.com/users/nieltg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T15:16:46Z", "updated_at": "2018-06-07T17:32:34Z", "closed_at": "2018-06-07T17:32:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\n1. Put this code to `myfile.py`.\r\n\r\n    ```python\r\n    class MyClass:\r\n        def mymethod1(self):\r\n            pass\r\n\r\n    i = MyClass()\r\n    bound1 = i.mymethod1.__get__(i, MyClass)\r\n    ```\r\n\r\n2. Run `pylint myfile.py` to lint it.\r\n\r\n### Current behavior\r\n\r\n`pylint` crashes while calling a method from `astroid` module.\r\n\r\n```\r\nNo config file found, using default configuration\r\n************* Module linecms.b\r\nC:  1, 0: Missing module docstring (missing-docstring)\r\nC:  1, 0: Missing class docstring (missing-docstring)\r\nC:  2, 4: Missing method docstring (missing-docstring)\r\nR:  1, 0: Too few public methods (1/2) (too-few-public-methods)\r\nTraceback (most recent call last):\r\n  File \"/home/nieltg/.local/bin/pylint\", line 11, in <module>\r\n    sys.exit(run_pylint())\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/__init__.py\", line 16, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/lint.py\", line 1347, in __init__\r\n    linter.check(args)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/lint.py\", line 768, in check\r\n    self._do_check(files_or_modules)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/lint.py\", line 901, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/lint.py\", line 980, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/utils.py\", line 1014, in walk\r\n    self.walk(child)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/utils.py\", line 1014, in walk\r\n    self.walk(child)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/utils.py\", line 1011, in walk\r\n    cb(astroid)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/checkers/base.py\", line 1451, in visit_assignname\r\n    if isinstance(utils.safe_infer(ass_type.value), astroid.ClassDef):\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/pylint/checkers/utils.py\", line 822, in safe_infer\r\n    value = next(inferit)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/astroid/decorators.py\", line 142, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/astroid/decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/astroid/inference.py\", line 172, in infer_call\r\n    for inferred in callee.infer_call_result(self, callcontext):\r\n  File \"/home/nieltg/.local/lib/python3.6/site-packages/astroid/interpreter/objectmodel.py\", line 316, in infer_call_result\r\n    parent=cls)\r\nTypeError: __init__() got an unexpected keyword argument 'name'\r\n```\r\n\r\n### Expected behavior\r\n\r\n`pylint` doesn't crash.\r\n\r\n### Module versions\r\n\r\n`astroid` version:\r\n\r\n```\r\n1.6.5\r\n```\r\n\r\n`pylint` version:\r\n\r\n```\r\nNo config file found, using default configuration\r\npylint 1.9.2,\r\nastroid 1.6.5\r\nPython 3.6.5 (default, Apr 14 2018, 13:17:30)\r\n[GCC 7.3.1 20180406]\r\n```\r\n\r\nThank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/551", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/551/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/551/events", "html_url": "https://github.com/PyCQA/astroid/issues/551", "id": 325516588, "node_id": "MDU6SXNzdWUzMjU1MTY1ODg=", "number": 551, "title": "Allow for stub files that explicitly state what the import tree is at run time", "user": {"login": "rawrgulmuffins", "id": 1521575, "node_id": "MDQ6VXNlcjE1MjE1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1521575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rawrgulmuffins", "html_url": "https://github.com/rawrgulmuffins", "followers_url": "https://api.github.com/users/rawrgulmuffins/followers", "following_url": "https://api.github.com/users/rawrgulmuffins/following{/other_user}", "gists_url": "https://api.github.com/users/rawrgulmuffins/gists{/gist_id}", "starred_url": "https://api.github.com/users/rawrgulmuffins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rawrgulmuffins/subscriptions", "organizations_url": "https://api.github.com/users/rawrgulmuffins/orgs", "repos_url": "https://api.github.com/users/rawrgulmuffins/repos", "events_url": "https://api.github.com/users/rawrgulmuffins/events{/privacy}", "received_events_url": "https://api.github.com/users/rawrgulmuffins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 717654774, "node_id": "MDU6TGFiZWw3MTc2NTQ3NzQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/needs-reproduction", "name": "needs-reproduction", "color": "1cdba2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-23T01:25:12Z", "updated_at": "2018-05-26T06:03:15Z", "closed_at": "2018-05-26T06:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Create a sub-package which is lazy loaded in a top level module\r\n2. Run pylint on top level package with `from <top_level> import <sub_module>`\r\n\r\n### Current behavior\r\n```\r\n:) pylint top_level/sub_module/bin/__main__.py\r\n************* Module __main__.py\r\nE:  9, 0: No name 'sub_package' in module 'top_level' (no-name-in-module)\r\n\r\n------------------------------------------------------------------\r\nYour code has been rated at 1.67/10 (previous run: 1.67/10, +0.00)\r\n```\r\n\r\n### Expected behavior\r\nIf I've created a stub file that contains something like\r\n\r\n```\r\ntop_level = sub_module\r\n```\r\n\r\nOr potentially another format\r\n\r\n```\r\ntop_level.sub_module\r\ntop_level.another_module\r\n```\r\n\r\n\r\nThen \r\n```\r\n:) pylint top_level/sub_module/bin/__main__.py.py\r\n\r\n------------------------------------------------------------------\r\nYour code has been rated at 10/10 (previous run: 10/10, +0.00)\r\n```\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n```\r\npython -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"\r\n1.6.2\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/550", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/550/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/550/events", "html_url": "https://github.com/PyCQA/astroid/issues/550", "id": 325446854, "node_id": "MDU6SXNzdWUzMjU0NDY4NTQ=", "number": 550, "title": "2.0.0 Test failures on Python 3.70b4", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/astroid/milestones/3", "html_url": "https://github.com/PyCQA/astroid/milestone/3", "labels_url": "https://api.github.com/repos/PyCQA/astroid/milestones/3/labels", "id": 3292372, "node_id": "MDk6TWlsZXN0b25lMzI5MjM3Mg==", "number": 3, "title": "2.0", "description": "Python 3.7 support and performance improvements", "creator": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2018-04-24T10:15:11Z", "updated_at": "2018-06-04T14:50:38Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2018-05-22T20:16:18Z", "updated_at": "2018-06-04T14:58:19Z", "closed_at": "2018-06-04T14:50:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n`tox -e py37`\r\n\r\n### Current behavior\r\n2 failed tests\r\n\r\n### Expected behavior\r\nall test pass\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n2.0.0.dev\r\n\r\n### Full log\r\n\r\n```\r\n$ tox -e py37\r\nGLOB sdist-make: /home/churchyard/Dokumenty/RedHat/astroid/setup.py\r\npy37 inst-nodeps: /home/churchyard/Dokumenty/RedHat/astroid/.tox/dist/astroid-2.0.0.dev0.zip\r\npy37 installed: astroid==2.0.0.dev0,attrs==18.1.0,coverage==4.5.1,lazy-object-proxy==1.3.1,more-itertools==4.1.0,nose==1.3.7,pluggy==0.6.0,py==1.5.3,pytest==3.5.1,python-dateutil==2.7.3,six==1.11.0,wrapt==1.10.11\r\npy37 runtests: PYTHONHASHSEED='1288285953'\r\npy37 runtests: commands[0] | python -Wi /home/churchyard/Dokumenty/RedHat/astroid/.tox/py37/lib/python3.7/site-packages/coverage run -m pytest --pyargs astroid\r\n============================================== test session starts ==============================================\r\nplatform linux -- Python 3.7.0b3, pytest-3.5.1, py-1.5.3, pluggy-0.6.0\r\nrootdir: /home/churchyard/Dokumenty/RedHat/astroid, inifile: pytest.ini\r\ncollected 829 items                                                                                             \r\n\r\nastroid/tests/unittest_brain.py .........................................s............................... [  8%]\r\n...................................xx.                                                                    [ 13%]\r\nastroid/tests/unittest_brain_numpy.py sssssssssss                                                         [ 14%]\r\nastroid/tests/unittest_builder.py ..s.s.................s.s.......................sssssssssss             [ 21%]\r\nastroid/tests/unittest_helpers.py .....s.......                                                           [ 23%]\r\nastroid/tests/unittest_inference.py ..................................................................... [ 31%]\r\n.............s.x...............x...........................x..............s.x............................ [ 44%]\r\n..............x...........................s.........................................                      [ 54%]\r\nastroid/tests/unittest_lookup.py .....................                                                    [ 57%]\r\nastroid/tests/unittest_manager.py ....................F......                                             [ 60%]\r\nastroid/tests/unittest_modutils.py ......................................                                 [ 64%]\r\nastroid/tests/unittest_nodes.py x.................s.....................s...s.................            [ 72%]\r\nastroid/tests/unittest_object_model.py x...ss........x...s.......                                         [ 75%]\r\nastroid/tests/unittest_objects.py ..............s.....                                                    [ 77%]\r\nastroid/tests/unittest_protocols.py .........                                                             [ 79%]\r\nastroid/tests/unittest_python3.py ........................                                                [ 81%]\r\nastroid/tests/unittest_raw_building.py ........s                                                          [ 82%]\r\nastroid/tests/unittest_regrtest.py ..........ss.s......                                                   [ 85%]\r\nastroid/tests/unittest_scoped_nodes.py ..................................s.......s...........s.........s. [ 93%]\r\n.........s..s.......s..ss..s.ss...ss....F.                                                                [ 98%]\r\nastroid/tests/unittest_transforms.py ........                                                             [ 99%]\r\nastroid/tests/unittest_utils.py .....                                                                     [100%]\r\n\r\n=================================================== FAILURES ====================================================\r\n______________________________ AstroidManagerTest.test_implicit_namespace_package _______________________________\r\n\r\nself = <Module.namespace_pep_420.module l.0 at 0x7fb368557f60>, name = 'var'\r\ncontext = <astroid.context.InferenceContext object at 0x7fb36aefcc78>\r\n\r\n    def igetattr(self, name, context=None):\r\n        \"\"\"Infer the possible values of the given variable.\r\n    \r\n            :param name: The name of the variable to infer.\r\n            :type name: str\r\n    \r\n            :returns: The inferred possible values.\r\n            :rtype: iterable(NodeNG) or None\r\n            \"\"\"\r\n        # set lookup name since this is necessary to infer on import nodes for\r\n        # instance\r\n        context = contextmod.copy_context(context)\r\n        context.lookupname = name\r\n        try:\r\n>           return bases._infer_stmts(self.getattr(name, context),\r\n                                      context, frame=self)\r\n\r\nastroid/scoped_nodes.py:516: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Module.namespace_pep_420.module l.0 at 0x7fb368557f60>, name = 'var'\r\ncontext = <astroid.context.InferenceContext object at 0x7fb36aefcc78>, ignore_locals = False\r\n\r\n    def getattr(self, name, context=None, ignore_locals=False):\r\n        result = []\r\n        name_in_locals = name in self.locals\r\n    \r\n        if name in self.special_attributes and not ignore_locals and not name_in_locals:\r\n            result = [self.special_attributes.lookup(name)]\r\n        elif not ignore_locals and name_in_locals:\r\n            result = self.locals[name]\r\n        elif self.package:\r\n            try:\r\n                result = [self.import_module(name, relative_only=True)]\r\n            except (exceptions.AstroidBuildingError, SyntaxError):\r\n                util.reraise(exceptions.AttributeInferenceError(target=self,\r\n                                                                attribute=name,\r\n                                                                context=context))\r\n        result = [n for n in result if not isinstance(n, node_classes.DelName)]\r\n        if result:\r\n            return result\r\n        raise exceptions.AttributeInferenceError(target=self, attribute=name,\r\n>                                                context=context)\r\nE       astroid.exceptions.AttributeInferenceError: 'var' not found on <Module.namespace_pep_420.module l.0 at 0x7fb368557f60>.\r\n\r\nastroid/scoped_nodes.py:500: AttributeInferenceError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <astroid.tests.unittest_manager.AstroidManagerTest testMethod=test_implicit_namespace_package>\r\n\r\n    @unittest.skipUnless(sys.version_info[:2] >= (3, 4), \"Needs PEP 420 namespace protocol\")\r\n    def test_implicit_namespace_package(self):\r\n        data_dir = os.path.dirname(resources.find('data/namespace_pep_420'))\r\n        contribute = os.path.join(data_dir, 'contribute_to_namespace')\r\n        for value in (data_dir, contribute):\r\n            sys.path.insert(0, value)\r\n    \r\n        try:\r\n            module = self.manager.ast_from_module_name('namespace_pep_420.module')\r\n            self.assertIsInstance(module, astroid.Module)\r\n            self.assertEqual(module.name, 'namespace_pep_420.module')\r\n>           var = next(module.igetattr('var'))\r\n\r\nastroid/tests/unittest_manager.py:118: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nastroid/scoped_nodes.py:520: in igetattr\r\n    error.message, target=self, attribute=name, context=context))\r\nastroid/util.py:30: in reraise\r\n    six.reraise(type(exception), exception, sys.exc_info()[2])\r\n.tox/py37/lib/python3.7/site-packages/six.py:692: in reraise\r\n    raise value.with_traceback(tb)\r\nastroid/scoped_nodes.py:516: in igetattr\r\n    return bases._infer_stmts(self.getattr(name, context),\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Module.namespace_pep_420.module l.0 at 0x7fb368557f60>, name = 'var'\r\ncontext = <astroid.context.InferenceContext object at 0x7fb36aefcc78>, ignore_locals = False\r\n\r\n    def getattr(self, name, context=None, ignore_locals=False):\r\n        result = []\r\n        name_in_locals = name in self.locals\r\n    \r\n        if name in self.special_attributes and not ignore_locals and not name_in_locals:\r\n            result = [self.special_attributes.lookup(name)]\r\n        elif not ignore_locals and name_in_locals:\r\n            result = self.locals[name]\r\n        elif self.package:\r\n            try:\r\n                result = [self.import_module(name, relative_only=True)]\r\n            except (exceptions.AstroidBuildingError, SyntaxError):\r\n                util.reraise(exceptions.AttributeInferenceError(target=self,\r\n                                                                attribute=name,\r\n                                                                context=context))\r\n        result = [n for n in result if not isinstance(n, node_classes.DelName)]\r\n        if result:\r\n            return result\r\n        raise exceptions.AttributeInferenceError(target=self, attribute=name,\r\n>                                                context=context)\r\nE       astroid.exceptions.InferenceError: 'var' not found on <Module.namespace_pep_420.module l.0 at 0x7fb368557f60>.\r\n\r\nastroid/scoped_nodes.py:500: InferenceError\r\n__________________________________ ClassNodeTest.test_using_six_add_metaclass ___________________________________\r\n\r\nself = <astroid.tests.unittest_scoped_nodes.ClassNodeTest testMethod=test_using_six_add_metaclass>\r\n\r\n    def test_using_six_add_metaclass(self):\r\n        klass = builder.extract_node('''\r\n            import six\r\n            import abc\r\n    \r\n            @six.add_metaclass(abc.ABCMeta)\r\n            class WithMeta(object):\r\n                pass\r\n            ''')\r\n        inferred = next(klass.infer())\r\n        metaclass = inferred.metaclass()\r\n        self.assertIsInstance(metaclass, scoped_nodes.ClassDef)\r\n>       self.assertEqual(metaclass.qname(), 'abc.ABCMeta')\r\nE       AssertionError: '_py_abc.ABCMeta' != 'abc.ABCMeta'\r\nE       - _py_abc.ABCMeta\r\nE       ? ----\r\nE       + abc.ABCMeta\r\n\r\nastroid/tests/unittest_scoped_nodes.py:1191: AssertionError\r\n========================= 2 failed, 761 passed, 56 skipped, 10 xfailed in 13.01 seconds =========================\r\nERROR: InvocationError: '/home/churchyard/Dokumenty/RedHat/astroid/.tox/py37/bin/python -Wi /home/churchyard/Dokumenty/RedHat/astroid/.tox/py37/lib/python3.7/site-packages/coverage run -m pytest --pyargs astroid'\r\n____________________________________________________ summary ____________________________________________________\r\nERROR:   py37: commands failed\r\n```\r\n\r\nTravis CI runs 3.7.0a4+ and I run b3 and b4, so this is probably why it passes on Travis, although I'm not sure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/544", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/544/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/544/events", "html_url": "https://github.com/PyCQA/astroid/issues/544", "id": 322333692, "node_id": "MDU6SXNzdWUzMjIzMzM2OTI=", "number": 544, "title": "find_spec incorrectly returns a spec for a nested namespace package", "user": {"login": "colinc719", "id": 16266523, "node_id": "MDQ6VXNlcjE2MjY2NTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/16266523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinc719", "html_url": "https://github.com/colinc719", "followers_url": "https://api.github.com/users/colinc719/followers", "following_url": "https://api.github.com/users/colinc719/following{/other_user}", "gists_url": "https://api.github.com/users/colinc719/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinc719/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinc719/subscriptions", "organizations_url": "https://api.github.com/users/colinc719/orgs", "repos_url": "https://api.github.com/users/colinc719/repos", "events_url": "https://api.github.com/users/colinc719/events{/privacy}", "received_events_url": "https://api.github.com/users/colinc719/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-11T15:13:57Z", "updated_at": "2018-05-14T16:19:21Z", "closed_at": "2018-05-14T16:19:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n`find_spec` returns a spec when a nested package is a namespace package.  If\r\npkg1 = any package\r\npkg2 = unrelated namespace package\r\n\r\n`find_spec(['pkg1', 'pkg2'])` returns a spec\r\n\r\nThis is causing a problem with pylint where it incorrectly thinks `import backports.tempfile` is a relative import since `find_spec('my_module', 'backports', 'tempfile')` returns a spec.\r\n\r\n\r\n### Steps to reproduce\r\n1.  Install backports.tempfile into a Python 2 environment.\r\n2.  Run\r\n```python\r\nfrom astroid.interpreter._import.spec import find_spec\r\n\r\nprint find_spec(['this', 'backports', 'tempfile'])\r\n```\r\n\r\n### Current behavior\r\nReturns spec\r\n\r\n### Expected behavior\r\nraise ImportError\r\n\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n1.4.4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/542", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/542/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/542/events", "html_url": "https://github.com/PyCQA/astroid/issues/542", "id": 320941188, "node_id": "MDU6SXNzdWUzMjA5NDExODg=", "number": 542, "title": "maximum recursion depth exceeded", "user": {"login": "altaurog", "id": 426636, "node_id": "MDQ6VXNlcjQyNjYzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/426636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altaurog", "html_url": "https://github.com/altaurog", "followers_url": "https://api.github.com/users/altaurog/followers", "following_url": "https://api.github.com/users/altaurog/following{/other_user}", "gists_url": "https://api.github.com/users/altaurog/gists{/gist_id}", "starred_url": "https://api.github.com/users/altaurog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altaurog/subscriptions", "organizations_url": "https://api.github.com/users/altaurog/orgs", "repos_url": "https://api.github.com/users/altaurog/repos", "events_url": "https://api.github.com/users/altaurog/events{/privacy}", "received_events_url": "https://api.github.com/users/altaurog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-07T20:16:10Z", "updated_at": "2018-06-19T06:36:34Z", "closed_at": "2018-06-19T06:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I realize there are a bunch of issues like this, but here\u2019s another example.  Apologies if it doesn\u2019t add anything of value.\r\n\r\n### Steps to reproduce\r\n1. analyse the following code:\r\n\r\n```python\r\n\"\"\"GraphQL Schema\"\"\"\r\nimport graphene\r\nimport graphene.relay as relay\r\n\r\n\r\nsites = [\r\n    'Facebook',\r\n    'Github',\r\n    'Instagram',\r\n    'LinkedIn',\r\n    'Pinterest',\r\n    'Reddit',\r\n    'Slack',\r\n    'Snapchat',\r\n    'Twitter',\r\n]\r\n\r\n\r\ndef resolve_sites(*_, **__):\r\n    \"\"\"retrieve multiple sites--ignore args for simplicity\u2019s sake\"\"\"\r\n    res = [Site(id=i, name=n) for i, n in enumerate(sites)]\r\n    edges = make_edges(res)\r\n    page_info = graphene.PageInfo(\r\n        has_previous_page=False,\r\n        has_next_page=False,\r\n        start_cursor=res[0].id,\r\n        end_cursor=res[-1].id,\r\n    )\r\n    return SiteConnection(page_info=page_info, edges=edges, totalCount=len(sites))\r\n\r\n\r\ndef make_edges(objs):\r\n    return [SiteConnection.Edge(node=s, cursor=s.id) for s in objs]\r\n\r\n\r\nclass Site(graphene.ObjectType):\r\n    id = graphene.String(required=True)\r\n    name = graphene.String(required=True)\r\n\r\n\r\nclass SiteConnection(graphene.Connection):\r\n    totalCount = graphene.Int(required=True)\r\n    class Meta:\r\n        node = Site\r\n\r\n\r\nclass Query(graphene.ObjectType):\r\n    sites = graphene.ConnectionField(SiteConnection, resolver=resolve_sites)\r\n\r\n\r\nschema = graphene.Schema(query=Query)\r\n```\r\n\r\n### Current behavior\r\n```\r\n...\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/context.py\", line 71, in cache_generator\r\n    for result in generator:\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/decorators.py\", line 86, in wrapped\r\n    generator = _func(node, context, **kwargs)\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/inference.py\", line 138, in infer_name\r\n    frame, stmts = self.lookup(self.name)\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/node_classes.py\", line 989, in lookup\r\n    return self.scope().scope_lookup(self, name)\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 2012, in scope_lookup\r\n    return frame._scope_lookup(node, name, offset)\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/scoped_nodes.py\", line 160, in _scope_lookup\r\n    stmts = node._filter_stmts(self.locals[name], self, offset)\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/node_classes.py\", line 1030, in _filter_stmts\r\n    myframe = self.frame().parent.frame()\r\n  File \"/home/altaurog/.venv/org_graph_api/lib/python3.6/site-packages/astroid/node_classes.py\", line 428, in frame\r\n    return self.parent.frame()\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo recursion exception.\r\n\r\n### Workaround:\r\n\r\nWith the following change to the code under analysis, it does not fail:\r\n```diff\r\n22c22\r\n<     edges = make_edges(res)\r\n---\r\n>     edges = make_edges(SiteConnection.Edge, res)\r\n32,33c32,33\r\n< def make_edges(objs):\r\n<     return [SiteConnection.Edge(node=s, cursor=s.id) for s in objs]\r\n---\r\n> def make_edges(edge_type, objs):\r\n>     return [edge_type(node=s, cursor=s.id) for s in objs]\r\n```\r\n\r\n### version info\r\n```\r\n$ python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"\r\n1.6.2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/541", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/541/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/541/events", "html_url": "https://github.com/PyCQA/astroid/issues/541", "id": 318237951, "node_id": "MDU6SXNzdWUzMTgyMzc5NTE=", "number": 541, "title": "astroid cannot import modules from wheels", "user": {"login": "leifwalsh", "id": 46406, "node_id": "MDQ6VXNlcjQ2NDA2", "avatar_url": "https://avatars2.githubusercontent.com/u/46406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leifwalsh", "html_url": "https://github.com/leifwalsh", "followers_url": "https://api.github.com/users/leifwalsh/followers", "following_url": "https://api.github.com/users/leifwalsh/following{/other_user}", "gists_url": "https://api.github.com/users/leifwalsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/leifwalsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leifwalsh/subscriptions", "organizations_url": "https://api.github.com/users/leifwalsh/orgs", "repos_url": "https://api.github.com/users/leifwalsh/repos", "events_url": "https://api.github.com/users/leifwalsh/events{/privacy}", "received_events_url": "https://api.github.com/users/leifwalsh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1001885425, "node_id": "MDU6TGFiZWwxMDAxODg1NDI1", "url": "https://api.github.com/repos/PyCQA/astroid/labels/contributor%20friendly", "name": "contributor friendly", "color": "79bfe5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-27T00:16:16Z", "updated_at": "2019-07-11T07:26:30Z", "closed_at": "2019-07-11T07:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Have a .whl file on the path, and code that imports it\r\n2. Run pylint on the importing code\r\n\r\n### Current behavior\r\npylint reports an error that it cannot import the module\r\n\r\n### Expected behavior\r\npylint doesn't report an error\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\nastroid 1.6.3, pylint 1.8.1\r\n\r\nI believe the fix would be to add `'.whl'` to this list:  https://github.com/PyCQA/astroid/blob/e0a298df55b15abcb77c2a93253f5ab7be52d0fb/astroid/manager.py#L188\r\n\r\nI've patched astroid locally and this does allow astroid to import the module.  I'm surprised we haven't seen this before, I think an older version of pylint also failed to astroid-import the module, but just didn't complain about it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/540", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/540/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/540/events", "html_url": "https://github.com/PyCQA/astroid/issues/540", "id": 317355379, "node_id": "MDU6SXNzdWUzMTczNTUzNzk=", "number": 540, "title": "2.0 Release Timeline?", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/astroid/milestones/3", "html_url": "https://github.com/PyCQA/astroid/milestone/3", "labels_url": "https://api.github.com/repos/PyCQA/astroid/milestones/3/labels", "id": 3292372, "node_id": "MDk6TWlsZXN0b25lMzI5MjM3Mg==", "number": 3, "title": "2.0", "description": "Python 3.7 support and performance improvements", "creator": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2018-04-24T10:15:11Z", "updated_at": "2018-06-04T14:50:38Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2018-04-24T19:03:05Z", "updated_at": "2018-05-21T09:47:56Z", "closed_at": "2018-05-21T09:47:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "How for in the future do you expect the 2.0 release to be? \r\n\r\nI could work on unblocking 2.0 instead of backporting fixes if the release is near enough. What do you think @PCManticore?\r\n\r\nI know PyCQA/pylint#1914 is blocking release. Anything else?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/539", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/539/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/539/events", "html_url": "https://github.com/PyCQA/astroid/issues/539", "id": 317002542, "node_id": "MDU6SXNzdWUzMTcwMDI1NDI=", "number": 539, "title": "RuntimeError raised while running under Python 3.7", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 912237183, "node_id": "MDU6TGFiZWw5MTIyMzcxODM=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/python%203.7", "name": "python 3.7", "color": "f9cb93", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/astroid/milestones/3", "html_url": "https://github.com/PyCQA/astroid/milestone/3", "labels_url": "https://api.github.com/repos/PyCQA/astroid/milestones/3/labels", "id": 3292372, "node_id": "MDk6TWlsZXN0b25lMzI5MjM3Mg==", "number": 3, "title": "2.0", "description": "Python 3.7 support and performance improvements", "creator": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2018-04-24T10:15:11Z", "updated_at": "2018-06-04T14:50:38Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2018-04-23T22:14:56Z", "updated_at": "2018-07-18T03:36:23Z", "closed_at": "2018-05-23T16:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. https://github.com/Microsoft/vscode-python/blob/master/news/announce.py\r\n2. `pylint ./announce.py`\r\n\r\n### Current behavior\r\n```\r\nNo config file found, using default configuration\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\nStopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\decorators.py\", line 104, in wrapped\r\n    raise StopIteration\r\nStopIteration\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\pylint\\lint.py\", line 942, in get_ast\r\n    return MANAGER.ast_from_file(filepath, modname, source=True)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\manager.py\", line 80, in ast_from_file\r\n    return AstroidBuilder(self).file_build(filepath, modname)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\builder.py\", line 153, in file_build\r\n    return self._post_build(module, encoding)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\builder.py\", line 177, in _post_build\r\n    module = self._manager.visit_transforms(module)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\manager.py\", line 62, in visit_transforms\r\n    return self._transform.visit(node)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\transforms.py\", line 83, in visit\r\n    module.body = [self._visit(child) for child in module.body]\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\transforms.py\", line 83, in <listcomp>\r\n    module.body = [self._visit(child) for child in module.body]\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\transforms.py\", line 53, in _visit\r\n    return self._transform(node)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\transforms.py\", line 35, in _transform\r\n    if predicate is None or predicate(node):\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\brain\\brain_functools.py\", line 65, in _looks_like_lru_cache\r\n    func = helpers.safe_infer(decorator.func)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\helpers.py\", line 104, in safe_infer\r\n    next(inferit)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\decorators.py\", line 89, in wrapped\r\n    res = next(generator)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\decorators.py\", line 142, in raise_if_nothing_inferred\r\n    yield next(generator)\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\inference.py\", line 238, in infer_attribute\r\n    for owner in self.expr.infer(context):\r\n  File \"c:\\users\\brcan\\repositories\\windows\\vscode-python\\news\\.venv\\lib\\site-packages\\astroid\\context.py\", line 71, in cache_generator\r\n    for result in generator:\r\nRuntimeError: generator raised StopIteration\r\n************* Module announce\r\nF:  1, 0: <class 'RuntimeError'>: generator raised StopIteration (astroid-error)\r\n```\r\n### Expected behavior\r\nNo exception.\r\n\r\n### ``python -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"`` output\r\n\r\n1.6.3 (as pulled in by Pylint).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/538", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/538/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/538/events", "html_url": "https://github.com/PyCQA/astroid/issues/538", "id": 316905839, "node_id": "MDU6SXNzdWUzMTY5MDU4Mzk=", "number": 538, "title": "astroid.modutils.load_module_from_file failing on symlinks outside of sys.path", "user": {"login": "mariocj89", "id": 3709683, "node_id": "MDQ6VXNlcjM3MDk2ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariocj89", "html_url": "https://github.com/mariocj89", "followers_url": "https://api.github.com/users/mariocj89/followers", "following_url": "https://api.github.com/users/mariocj89/following{/other_user}", "gists_url": "https://api.github.com/users/mariocj89/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariocj89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariocj89/subscriptions", "organizations_url": "https://api.github.com/users/mariocj89/orgs", "repos_url": "https://api.github.com/users/mariocj89/repos", "events_url": "https://api.github.com/users/mariocj89/events{/privacy}", "received_events_url": "https://api.github.com/users/mariocj89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-23T17:21:38Z", "updated_at": "2018-05-15T17:15:14Z", "closed_at": "2018-05-15T17:15:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n\r\n### Steps to reproduce\r\n\r\n###### 1. Create a file outside of your path and symlink it to CWD:\r\n```python3\r\nimport sys\r\nimport os\r\nimport tempfile\r\nimport pathlib\r\n\r\ntmp_dir = tempfile.mkdtemp()\r\nlinked_path = pathlib.Path()\r\noriginal_path = pathlib.Path(tmp_dir)\r\n\r\nfilename = 'pfile.py'\r\noriginal_file = original_path / filename\r\nlinked_file = linked_path / filename\r\n\r\nwith open(original_file, 'w') as f:\r\n    f.write(\"x=1;print(x)\")\r\nos.remove(linked_file)\r\nos.symlink(original_file, linked_file)\r\n```\r\n(just run this once once)\r\n\r\n###### 2. Try to import the file with `load_module_from_file`\r\n```\r\nastroid.modutils.load_module_from_file(\"pfile.py\")\r\n```\r\n\r\nThis will raise ```ImportError: Unable to find module for <full_path_in_tmpdir>/pfile.py in```\r\nNote it is fine to do just ```import pfile```\r\n\r\n\r\n### Current behaviour\r\n`load_module_from_file` raises ImportError  when importing a file symlinked from a folder out of `sys.path`.\r\n\r\n### Expected behaviour\r\nIt should be fine to import a module even if it is symlinked from a non-path folder.\r\n\r\n### Version information\r\nPresent in the latest versions of 1.6 and 1.5: 1.6.3 and 1.5.3 \r\nWorks in the latest version of 1.4: 1.4.9\r\n\r\n### Related commits/code\r\n- Commit that introduced the issue: cda9dc4ad0e2cc075553d133dd0fdab468d614d7\r\n- https://github.com/PyCQA/astroid/blob/8575ac1c0bd247bc314f6752355d1ea647dec911/astroid/modutils.py#L304 This check will fail as the folder of the symlinked file is not in sys.path\r\n\r\n### Possible implementation\r\n\r\nDISCLAIMER: Wihtout knowing much about the astroid my proposal might be total rubish.\r\n\r\nIf the objective of ```for path in six.moves.map(_canonicalize_path, sys.path):``` is just to verify that the file is within a valid path, have a function that does that, pass the original filename and check both the file with abspath and realpath.\r\n\r\nJust checking abspath can cause an issue in the other direction, trying to import the symlink whilst having the realfile within the path (unless you are OK breaking that or what the commit was trying to address).\r\n\r\nI am happy to get a PR through with the appropiate tests if this is confirmed to be something that needs fixing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/535", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/535/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/535/events", "html_url": "https://github.com/PyCQA/astroid/issues/535", "id": 313752027, "node_id": "MDU6SXNzdWUzMTM3NTIwMjc=", "number": 535, "title": "Please remove tests from the pip-installed version", "user": {"login": "cprogrammer1994", "id": 11232402, "node_id": "MDQ6VXNlcjExMjMyNDAy", "avatar_url": "https://avatars1.githubusercontent.com/u/11232402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cprogrammer1994", "html_url": "https://github.com/cprogrammer1994", "followers_url": "https://api.github.com/users/cprogrammer1994/followers", "following_url": "https://api.github.com/users/cprogrammer1994/following{/other_user}", "gists_url": "https://api.github.com/users/cprogrammer1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/cprogrammer1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cprogrammer1994/subscriptions", "organizations_url": "https://api.github.com/users/cprogrammer1994/orgs", "repos_url": "https://api.github.com/users/cprogrammer1994/repos", "events_url": "https://api.github.com/users/cprogrammer1994/events{/privacy}", "received_events_url": "https://api.github.com/users/cprogrammer1994/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-12T14:28:45Z", "updated_at": "2018-05-27T11:28:07Z", "closed_at": "2018-05-26T06:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. `pip install astroid`\r\n\r\n### Current behavior\r\n\r\n![image](https://user-images.githubusercontent.com/11232402/38683629-989a7b9e-3e76-11e8-8ee6-7152e10b280e.png)\r\n\r\n### Expected behavior\r\n\r\n![image](https://user-images.githubusercontent.com/11232402/38683674-b56df566-3e76-11e8-8feb-da2c3ac2c185.png)\r\n\r\n```\r\npython -c \"from astroid import __pkginfo__; print(__pkginfo__.version)\"\r\n1.6.3\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/533", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/533/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/533/events", "html_url": "https://github.com/PyCQA/astroid/issues/533", "id": 311440860, "node_id": "MDU6SXNzdWUzMTE0NDA4NjA=", "number": 533, "title": "Inference error linting django", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 297123624, "node_id": "MDU6TGFiZWwyOTcxMjM2MjQ=", "url": "https://api.github.com/repos/PyCQA/astroid/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-05T01:07:10Z", "updated_at": "2020-01-05T20:01:39Z", "closed_at": "2018-04-19T19:41:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Download django 2.0.4: https://github.com/django/django/archive/2.0.4.zip\r\n2. unzip, cd to directory\r\n3. run `pylint django/template/context.py`\r\n\r\n### Current behavior\r\n\r\nFails with an exception\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib64/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/user/pylint/pylint/__main__.py\", line 7, in <module>\r\n    pylint.run_pylint()\r\n  File \"/home/user/pylint/pylint/__init__.py\", line 18, in run_pylint\r\n    Run(sys.argv[1:])\r\n  File \"/home/user/pylint/pylint/lint.py\", line 1359, in __init__\r\n    linter.check(args)\r\n  File \"/home/user/pylint/pylint/lint.py\", line 779, in check\r\n    self._do_check(files_or_modules)\r\n  File \"/home/user/pylint/pylint/lint.py\", line 912, in _do_check\r\n    self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n  File \"/home/user/pylint/pylint/lint.py\", line 992, in check_astroid_module\r\n    walker.walk(ast_node)\r\n  File \"/home/user/pylint/pylint/utils.py\", line 1036, in walk\r\n    self.walk(child)\r\n  File \"/home/user/pylint/pylint/utils.py\", line 1036, in walk\r\n    self.walk(child)\r\n  File \"/home/user/pylint/pylint/utils.py\", line 1036, in walk\r\n    self.walk(child)\r\n  File \"/home/user/pylint/pylint/utils.py\", line 1033, in walk\r\n    cb(astroid)\r\n  File \"/home/user/pylint/pylint/checkers/stdlib.py\", line 236, in visit_call\r\n    self._check_shallow_copy_environ(node)\r\n  File \"/home/user/pylint/pylint/checkers/stdlib.py\", line 208, in _check_shallow_copy_environ\r\n    if inferred.qname() == OS_ENVIRON:\r\nAttributeError: 'Super' object has no attribute 'qname'\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo exception\r\n\r\n### Discussion\r\n\r\nShould inference be leaking `Super` nodes? Should we add `qname` for Non-scoped nodes (to `NodeNG`) (empty string or a series of names like `mymod.myclass.myfunc.mysuper`) ? or should this code be changed to have a guard conditional?\r\n\r\n### Version\r\n\r\nastroid commit: 5d77795885879572a3f0e9779f0ac88789f1d267\r\npylint commit: 164933412f685c407616866537fb16caecaef066\r\nPython 3.6.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/528", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/528/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/528/events", "html_url": "https://github.com/PyCQA/astroid/issues/528", "id": 309666037, "node_id": "MDU6SXNzdWUzMDk2NjYwMzc=", "number": 528, "title": "Exception when parsing call of __path__ from namespace package", "user": {"login": "MarKett", "id": 25745542, "node_id": "MDQ6VXNlcjI1NzQ1NTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/25745542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarKett", "html_url": "https://github.com/MarKett", "followers_url": "https://api.github.com/users/MarKett/followers", "following_url": "https://api.github.com/users/MarKett/following{/other_user}", "gists_url": "https://api.github.com/users/MarKett/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarKett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarKett/subscriptions", "organizations_url": "https://api.github.com/users/MarKett/orgs", "repos_url": "https://api.github.com/users/MarKett/repos", "events_url": "https://api.github.com/users/MarKett/events{/privacy}", "received_events_url": "https://api.github.com/users/MarKett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-29T08:36:05Z", "updated_at": "2018-04-03T06:18:01Z", "closed_at": "2018-03-30T08:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Create a _test.py_ file with the following content:\r\n```\r\nimport ns_package\r\nprint(\"__path__:\",ns_package.__path__)\r\n```\r\n2. Create a new folder right next to this .py file named _ns_package_. (optionally, insert python files)\r\n3. Run pylint over the _test.py_ file.\r\n\r\n### Current behavior\r\n**Exception:**\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\lint.py\", line 1347, in __init__\r\n>     linter.check(args)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\lint.py\", line 768, in check\r\n>     self._do_check(files_or_modules)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\lint.py\", line 901, in _do_check\r\n>     self.check_astroid_module(ast_node, walker, rawcheckers, tokencheckers)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\lint.py\", line 980, in check_astroid_module\r\n>     walker.walk(ast_node)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\utils.py\", line 1014, in walk\r\n>     self.walk(child)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\utils.py\", line 1014, in walk\r\n>     self.walk(child)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\utils.py\", line 1014, in walk\r\n>     self.walk(child)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\utils.py\", line 1011, in walk\r\n>     cb(astroid)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\pylint\\checkers\\typecheck.py\", line 714, in visit_attribute\r\n>     if not [n for n in owner.getattr(node.attrname)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\scoped_nodes.py\", line 484, in getattr\r\n>     result = [self.special_attributes.lookup(name)]\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\interpreter\\objectmodel.py\", line 110, in lookup\r\n>     return getattr(self, \"py\" + name)\r\n>   File \"D:\\Program Files\\Python36\\lib\\site-packages\\astroid\\interpreter\\objectmodel.py\", line 142, in py__path__\r\n>     path = os.path.dirname(self._instance.file)\r\n>   File \"D:\\Program Files\\Python36\\lib\\ntpath.py\", line 242, in dirname\r\n>     return split(p)[0]\r\n>   File \"D:\\Program Files\\Python36\\lib\\ntpath.py\", line 204, in split\r\n>     p = os.fspath(p)\r\n> TypeError: expected str, bytes or os.PathLike object, not NoneType\r\n\r\n### Expected behavior\r\nNo errors\r\n\r\n### Versions\r\nPython: 3.6.1 (64bit)\r\nPyLint: 1.8.3\r\nAstroid: 1.6.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/astroid/issues/523", "repository_url": "https://api.github.com/repos/PyCQA/astroid", "labels_url": "https://api.github.com/repos/PyCQA/astroid/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/astroid/issues/523/comments", "events_url": "https://api.github.com/repos/PyCQA/astroid/issues/523/events", "html_url": "https://github.com/PyCQA/astroid/issues/523", "id": 308319563, "node_id": "MDU6SXNzdWUzMDgzMTk1NjM=", "number": 523, "title": "Reconsider the usefulness of Unknown", "user": {"login": "brycepg", "id": 441800, "node_id": "MDQ6VXNlcjQ0MTgwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/441800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycepg", "html_url": "https://github.com/brycepg", "followers_url": "https://api.github.com/users/brycepg/followers", "following_url": "https://api.github.com/users/brycepg/following{/other_user}", "gists_url": "https://api.github.com/users/brycepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycepg/subscriptions", "organizations_url": "https://api.github.com/users/brycepg/orgs", "repos_url": "https://api.github.com/users/brycepg/repos", "events_url": "https://api.github.com/users/brycepg/events{/privacy}", "received_events_url": "https://api.github.com/users/brycepg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-25T03:43:32Z", "updated_at": "2018-07-06T09:12:53Z", "closed_at": "2018-07-06T09:12:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Pylint is failing on `pandas` because of `Unknown` not having a name attribute.\r\n```\r\n    def visit_call(self, node):\r\n        \"\"\"Visit a Call node.\"\"\"\r\n        try:\r\n            for inferred in node.func.infer():\r\n                if inferred is astroid.Uninferable:\r\n                    continue\r\n>               if inferred.root().name == OPEN_MODULE:\r\nE               AttributeError: 'Unknown' object has no attribute 'name'\r\n\r\n../pylint/pylint/checkers/stdlib.py:209: AttributeError\r\n```", "performed_via_github_app": null, "score": 1.0}]}