{"total_count": 21, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/29", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/29/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/29/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/29", "id": 635745202, "node_id": "MDU6SXNzdWU2MzU3NDUyMDI=", "number": 29, "title": "Exception in callback Task.__wakeup(<Future finished result=None>)", "user": {"login": "grcdeepak1", "id": 2237156, "node_id": "MDQ6VXNlcjIyMzcxNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2237156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grcdeepak1", "html_url": "https://github.com/grcdeepak1", "followers_url": "https://api.github.com/users/grcdeepak1/followers", "following_url": "https://api.github.com/users/grcdeepak1/following{/other_user}", "gists_url": "https://api.github.com/users/grcdeepak1/gists{/gist_id}", "starred_url": "https://api.github.com/users/grcdeepak1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grcdeepak1/subscriptions", "organizations_url": "https://api.github.com/users/grcdeepak1/orgs", "repos_url": "https://api.github.com/users/grcdeepak1/repos", "events_url": "https://api.github.com/users/grcdeepak1/events{/privacy}", "received_events_url": "https://api.github.com/users/grcdeepak1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T20:42:44Z", "updated_at": "2020-07-16T13:16:33Z", "closed_at": "2020-07-16T13:16:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exception in callback Task.__wakeup(<Future finished result=None>)\r\nhandle: <Handle Task.__wakeup(<Future finished result=None>)>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/nest_asyncio.py\", line 150, in run\r\n    ctx.run(self._callback, *self._args)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/tasks.py\", line 329, in __wakeup\r\n    self.__step()\r\n  File \"/usr/local/lib/python3.7/site-packages/nest_asyncio.py\", line 108, in step\r\n    step_orig(task, exc)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/tasks.py\", line 313, in __step\r\n    _leave_task(self._loop, self)\r\n  File \"/usr/local/lib/python3.7/site-packages/nest_asyncio.py\", line 122, in leave_task\r\n    del curr_tasks[loop]\r\nKeyError: <_UnixSelectorEventLoop running=True closed=False debug=False>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/27", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/27/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/27/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/27", "id": 632181885, "node_id": "MDU6SXNzdWU2MzIxODE4ODU=", "number": 27, "title": "Python 3.6 still gives same error ", "user": {"login": "Nicholas7435", "id": 10407878, "node_id": "MDQ6VXNlcjEwNDA3ODc4", "avatar_url": "https://avatars2.githubusercontent.com/u/10407878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas7435", "html_url": "https://github.com/Nicholas7435", "followers_url": "https://api.github.com/users/Nicholas7435/followers", "following_url": "https://api.github.com/users/Nicholas7435/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas7435/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas7435/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas7435/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas7435/orgs", "repos_url": "https://api.github.com/users/Nicholas7435/repos", "events_url": "https://api.github.com/users/Nicholas7435/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas7435/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-06T03:55:29Z", "updated_at": "2020-07-16T13:15:37Z", "closed_at": "2020-07-16T13:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/10407878/83935492-0638d480-a788-11ea-8d4c-953b37d3f0cb.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/26", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/26/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/26/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/26", "id": 630096284, "node_id": "MDU6SXNzdWU2MzAwOTYyODQ=", "number": 26, "title": "KeyError at del curr_tasks[loop] in leave_task", "user": {"login": "bggardner", "id": 1537777, "node_id": "MDQ6VXNlcjE1Mzc3Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1537777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bggardner", "html_url": "https://github.com/bggardner", "followers_url": "https://api.github.com/users/bggardner/followers", "following_url": "https://api.github.com/users/bggardner/following{/other_user}", "gists_url": "https://api.github.com/users/bggardner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bggardner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bggardner/subscriptions", "organizations_url": "https://api.github.com/users/bggardner/orgs", "repos_url": "https://api.github.com/users/bggardner/repos", "events_url": "https://api.github.com/users/bggardner/events{/privacy}", "received_events_url": "https://api.github.com/users/bggardner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T15:32:29Z", "updated_at": "2020-07-17T12:01:58Z", "closed_at": "2020-07-17T12:01:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "During high frequency calls in an implementation awaiting `websockets.recv()`, I occasionally receive:\r\n```\r\nException in callback Task.__wakeup(<Future finished result=None>)\r\nhandle: <Handle Task.__wakeup(<Future finished result=None>)>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/nest_asyncio.py\", line 150, in run\r\n    ctx.run(self._callback, *self._args)\r\n  File \"/usr/lib/python3.7/asyncio/tasks.py\", line 303, in __wakeup\r\n    self.__step()\r\n  File \"/usr/local/lib/python3.7/dist-packages/nest_asyncio.py\", line 108, in step\r\n    step_orig(task, exc)\r\n  File \"/usr/lib/python3.7/asyncio/tasks.py\", line 287, in __step\r\n    _leave_task(self._loop, self)\r\n  File \"/usr/local/lib/python3.7/dist-packages/nest_asyncio.py\", line 122, in leave_task\r\n    del curr_tasks[loop]\r\nKeyError: <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/24", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/24/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/24/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/24", "id": 617833265, "node_id": "MDU6SXNzdWU2MTc4MzMyNjU=", "number": 24, "title": "Not compatible with Python 3.6", "user": {"login": "Parakoopa", "id": 3512122, "node_id": "MDQ6VXNlcjM1MTIxMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3512122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parakoopa", "html_url": "https://github.com/Parakoopa", "followers_url": "https://api.github.com/users/Parakoopa/followers", "following_url": "https://api.github.com/users/Parakoopa/following{/other_user}", "gists_url": "https://api.github.com/users/Parakoopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parakoopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parakoopa/subscriptions", "organizations_url": "https://api.github.com/users/Parakoopa/orgs", "repos_url": "https://api.github.com/users/Parakoopa/repos", "events_url": "https://api.github.com/users/Parakoopa/events{/privacy}", "received_events_url": "https://api.github.com/users/Parakoopa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T00:11:50Z", "updated_at": "2020-07-16T13:14:37Z", "closed_at": "2020-07-16T13:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, just letting you know, that commit 3a2c8a2be3482a2d0a8561eda89e87bd096e21f0 broke Python 3.6 (and probably 3.5) compatibility, because `run_forever` is no longer patched. \r\n\r\n1.2.3 seems to work perfectly for this version though, so I don't think a fix is neccesary, you might want to update the README though.\r\n\r\nThanks for this package!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/23", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/23/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/23/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/23", "id": 613540017, "node_id": "MDU6SXNzdWU2MTM1NDAwMTc=", "number": 23, "title": "Working with tornado", "user": {"login": "maartenbreddels", "id": 1765949, "node_id": "MDQ6VXNlcjE3NjU5NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1765949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maartenbreddels", "html_url": "https://github.com/maartenbreddels", "followers_url": "https://api.github.com/users/maartenbreddels/followers", "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}", "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}", "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions", "organizations_url": "https://api.github.com/users/maartenbreddels/orgs", "repos_url": "https://api.github.com/users/maartenbreddels/repos", "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}", "received_events_url": "https://api.github.com/users/maartenbreddels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-06T18:56:43Z", "updated_at": "2020-07-16T11:48:36Z", "closed_at": "2020-05-07T22:25:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into issues combining this package with tornado:\r\n```\r\n  File \"/Users/maartenbreddels/miniconda3/envs/vaex37-test/lib/python3.7/site-packages/tornado/gen.py\", line 712, in __init__\r\n    if self.handle_yield(first_yielded):\r\n  File \"/Users/maartenbreddels/miniconda3/envs/vaex37-test/lib/python3.7/site-packages/tornado/gen.py\", line 789, in handle_yield\r\n    self.io_loop.add_future(self.future, inner)\r\n  File \"/Users/maartenbreddels/miniconda3/envs/vaex37-test/lib/python3.7/site-packages/tornado/ioloop.py\", line 693, in add_future\r\n    assert is_future(future)\r\nAssertionError\r\n```\r\n\r\nThe problem is tornado keeps a tuple of types that it considers futures. I have this workaround:\r\nhttps://github.com/vaexio/vaex/blob/293d510ef5c8b96ce75224e909a005599c96cc92/packages/vaex-core/vaex/asyncio.py#L5\r\n\r\nBut maybe you have a better idea for this, or maybe tornado is to blame for this?\r\nThis line is the issue: https://github.com/tornadoweb/tornado/blob/712d61079defdad23b0a5e9fe0090b54e55cf7d0/tornado/concurrent.py#L49", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/20", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/20/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/20/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/20", "id": 574670935, "node_id": "MDU6SXNzdWU1NzQ2NzA5MzU=", "number": 20, "title": "Python 3.8.2 breaks nest-asyncio", "user": {"login": "crusaderky", "id": 6213168, "node_id": "MDQ6VXNlcjYyMTMxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6213168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crusaderky", "html_url": "https://github.com/crusaderky", "followers_url": "https://api.github.com/users/crusaderky/followers", "following_url": "https://api.github.com/users/crusaderky/following{/other_user}", "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}", "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions", "organizations_url": "https://api.github.com/users/crusaderky/orgs", "repos_url": "https://api.github.com/users/crusaderky/repos", "events_url": "https://api.github.com/users/crusaderky/events{/privacy}", "received_events_url": "https://api.github.com/users/crusaderky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-03T13:32:58Z", "updated_at": "2020-04-28T13:19:21Z", "closed_at": "2020-03-10T09:28:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This trivial demo works with CPython 3.8.1 and breaks with 3.8.2:\r\n\r\n```python\r\nimport asyncio\r\nimport nest_asyncio\r\nnest_asyncio.apply()\r\n\r\n\r\nasync def f():\r\n    print(\"OK\")\r\n\r\n\r\nasync def g():\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(f())\r\n\r\nif __name__ == \"__main__\":\r\n    asyncio.run(g())\r\n```\r\n\r\n#### Works\r\n- Linux x64, anaconda, nest_asyncio 1.2.2\r\n- python=3.8.1=h357f687_2 (conda-forge)\r\n\r\nOutput: OK\r\n\r\n#### Broken\r\n- Linux x64, anaconda, nest_asyncio 1.2.2\r\n- python=3.8.2=h9d8adfe_1_cpython (conda-forge)\r\n\r\nOutput: RuntimeError: This event loop is already running\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/18", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/18/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/18/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/18", "id": 549945586, "node_id": "MDU6SXNzdWU1NDk5NDU1ODY=", "number": 18, "title": "nest_asyncio seems to reset contextvars", "user": {"login": "otsuka", "id": 1156160, "node_id": "MDQ6VXNlcjExNTYxNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1156160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otsuka", "html_url": "https://github.com/otsuka", "followers_url": "https://api.github.com/users/otsuka/followers", "following_url": "https://api.github.com/users/otsuka/following{/other_user}", "gists_url": "https://api.github.com/users/otsuka/gists{/gist_id}", "starred_url": "https://api.github.com/users/otsuka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otsuka/subscriptions", "organizations_url": "https://api.github.com/users/otsuka/orgs", "repos_url": "https://api.github.com/users/otsuka/repos", "events_url": "https://api.github.com/users/otsuka/events{/privacy}", "received_events_url": "https://api.github.com/users/otsuka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-15T03:36:30Z", "updated_at": "2020-03-10T09:27:09Z", "closed_at": "2020-03-10T09:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "With nest_asyncio, contextvars seems to be reset after creating and running new Task.\r\nTherefore the test below fails.\r\n\r\nDisabling next_asyncio, the test is successful.\r\n\r\n```py\r\nimport asyncio\r\nimport contextvars\r\n\r\nimport nest_asyncio\r\nimport pytest\r\n\r\n# commenting out this line, the test suceeds\r\nnest_asyncio.apply()\r\n\r\nnumber_cv: contextvars.ContextVar[int] = contextvars.ContextVar('number_cv')\r\n\r\n\r\nclass TestContextVars:\r\n\r\n    @pytest.mark.asyncio\r\n    async def test_context_var(self):\r\n        number_cv.set(1)\r\n\r\n        await self.child_method()\r\n\r\n        n = number_cv.get(-1)\r\n        print(f'parent after child_method: number={n}')  # ok \"parent after child_method: number=2\"\r\n\r\n        await asyncio.create_task(self.child_task())\r\n\r\n        n = number_cv.get(-1)\r\n        print(f'parent after child_task: number={n}')  # \"parent after child_task: number=-1\"\r\n        assert n == 2\r\n\r\n    async def child_method(self):\r\n        n = number_cv.get(-1)\r\n        print(f'in child_method: number={n}')  # ok \"in child_method: number=1\"\r\n        number_cv.set(2)\r\n\r\n    async def child_task(self):\r\n        n = number_cv.get(-1)\r\n        print(f'in child_task: number={n}')  # ok \"in child_task: number=2\"\r\n        number_cv.set(3)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/17", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/17/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/17/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/17", "id": 549767530, "node_id": "MDU6SXNzdWU1NDk3Njc1MzA=", "number": 17, "title": "Two or more calls to run_until_complete causes run_until_complete to not exit.", "user": {"login": "stuz5000", "id": 7799980, "node_id": "MDQ6VXNlcjc3OTk5ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7799980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuz5000", "html_url": "https://github.com/stuz5000", "followers_url": "https://api.github.com/users/stuz5000/followers", "following_url": "https://api.github.com/users/stuz5000/following{/other_user}", "gists_url": "https://api.github.com/users/stuz5000/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuz5000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuz5000/subscriptions", "organizations_url": "https://api.github.com/users/stuz5000/orgs", "repos_url": "https://api.github.com/users/stuz5000/repos", "events_url": "https://api.github.com/users/stuz5000/events{/privacy}", "received_events_url": "https://api.github.com/users/stuz5000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-14T19:22:28Z", "updated_at": "2020-03-10T17:12:10Z", "closed_at": "2020-03-10T09:24:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the following, I call n function that re-enter run_until_complete.\r\nWhen n=1, the program exits. When n=2, the program never exits. Is it expected? \r\n\r\n```\r\nimport asyncio\r\nimport functools\r\nimport time\r\n\r\nimport nest_asyncio\r\nnest_asyncio.apply()\r\n\r\ndef sync(corot):\r\n    \"\"\"\r\n    Make a synchronous function from an asynchronous one.\r\n    :param corot:\r\n    :return:\r\n    \"\"\"\r\n    result, = asyncio.get_event_loop().run_until_complete(asyncio.gather(corot))\r\n    return result\r\n\r\nasync def sync_to_corountine(func, *args, **kw):\r\n    \"\"\"\r\n    Make a coroutine from a synchronous function.\r\n    \"\"\"\r\n    try:\r\n        return func(*args, *kw)\r\n    finally:\r\n        # every async needs an await.\r\n        await asyncio.sleep(0)\r\n\r\ndef main():\r\n    async def background(timeout):\r\n        await asyncio.sleep(timeout)\r\n        print(f\"Background: {timeout}\")\r\n\r\n    loop = asyncio.get_event_loop()\r\n    # Run some bacground work to check we are never blocked\r\n    bg_tasks = [\r\n        loop.create_task(background(i))\r\n        for i in range(10)\r\n    ]\r\n\r\n\r\n\r\n    async def long_running_async_task(result):\r\n        # Simulate slow IO\r\n        print(f\"...START long_running_async_task [{result}]\")\r\n        await asyncio.sleep(4)\r\n        print(f\"...END   long_running_async_task [{result}]\")\r\n        return result\r\n\r\n    def sync_function_with_async_dependency(result):\r\n        print(f\"...START sync_function_with_async_dependency [{result}]\")\r\n        result = sync(long_running_async_task(result))\r\n        print(f\"...END   sync_function_with_async_dependency [{result}]\")\r\n        return result\r\n\r\n    # Call sync_function_with_async_dependency\r\n    # One reentrant task is OK\r\n    # Multiple reentrant tasks->fails to exit\r\n    n = 2\r\n    for i in range(n):\r\n       bg_tasks.append(sync_to_corountine(sync_function_with_async_dependency, i))\r\n\r\n    # OK\r\n    # bg_tasks.append(long_running_async_task(123))\r\n    # bg_tasks.append(long_running_async_task(456))\r\n\r\n    task = asyncio.gather(*bg_tasks)  # , loop=loop)\r\n    loop.run_until_complete(task)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/16", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/16/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/16/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/16", "id": 549734155, "node_id": "MDU6SXNzdWU1NDk3MzQxNTU=", "number": 16, "title": "Is there a pattern to switch asyncio projects to nest_asyncio?", "user": {"login": "stuz5000", "id": 7799980, "node_id": "MDQ6VXNlcjc3OTk5ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7799980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuz5000", "html_url": "https://github.com/stuz5000", "followers_url": "https://api.github.com/users/stuz5000/followers", "following_url": "https://api.github.com/users/stuz5000/following{/other_user}", "gists_url": "https://api.github.com/users/stuz5000/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuz5000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuz5000/subscriptions", "organizations_url": "https://api.github.com/users/stuz5000/orgs", "repos_url": "https://api.github.com/users/stuz5000/repos", "events_url": "https://api.github.com/users/stuz5000/events{/privacy}", "received_events_url": "https://api.github.com/users/stuz5000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-14T18:13:04Z", "updated_at": "2020-01-15T01:09:34Z", "closed_at": "2020-01-15T01:09:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to port a Flask webservice to an async one (e.g. quart). \r\n I've run into the issue of `async creep`. I don't see how to call async IO function from sync web-handler functions, called by async webservers  (detail https://stackoverflow.com/questions/59738489/why-isnt-run-until-complete-re-entrant-how-to-incrementally-port-to-async-wi).\r\n\r\nIt occurred to me that a re-entrant async event loops are all that is required to allow sync-land and async-land to live in harmony, but GvR had a religious objections to it: https://bugs.python.org/issue22239 , with the consequence that sync code cannot efficiently call sync code without adding threads. And so I am here -- can nest_asyncio be used use none-nest_asyncio projects and allow the event loop to become reentrant?\r\n\r\nFor example, let's say I use the async Flask replacement Quart, its there a general pattern to safely switch to quart to use nest_asyncio without refactoring quart? (e.g. by replacing the event-loop hook?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/14", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/14/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/14/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/14", "id": 543841552, "node_id": "MDU6SXNzdWU1NDM4NDE1NTI=", "number": 14, "title": "AttributeError: type object 'Task' has no attribute '_Task__step'", "user": {"login": "emersonxsu", "id": 9097770, "node_id": "MDQ6VXNlcjkwOTc3NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9097770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emersonxsu", "html_url": "https://github.com/emersonxsu", "followers_url": "https://api.github.com/users/emersonxsu/followers", "following_url": "https://api.github.com/users/emersonxsu/following{/other_user}", "gists_url": "https://api.github.com/users/emersonxsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/emersonxsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emersonxsu/subscriptions", "organizations_url": "https://api.github.com/users/emersonxsu/orgs", "repos_url": "https://api.github.com/users/emersonxsu/repos", "events_url": "https://api.github.com/users/emersonxsu/events{/privacy}", "received_events_url": "https://api.github.com/users/emersonxsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T11:09:20Z", "updated_at": "2020-07-13T16:23:23Z", "closed_at": "2020-01-06T13:08:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to call `nest_asyncio.apply()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/13", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/13/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/13/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/13", "id": 531005716, "node_id": "MDU6SXNzdWU1MzEwMDU3MTY=", "number": 13, "title": "Include LICENSE in released package", "user": {"login": "diego-plan9", "id": 418311, "node_id": "MDQ6VXNlcjQxODMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/418311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diego-plan9", "html_url": "https://github.com/diego-plan9", "followers_url": "https://api.github.com/users/diego-plan9/followers", "following_url": "https://api.github.com/users/diego-plan9/following{/other_user}", "gists_url": "https://api.github.com/users/diego-plan9/gists{/gist_id}", "starred_url": "https://api.github.com/users/diego-plan9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diego-plan9/subscriptions", "organizations_url": "https://api.github.com/users/diego-plan9/orgs", "repos_url": "https://api.github.com/users/diego-plan9/repos", "events_url": "https://api.github.com/users/diego-plan9/events{/privacy}", "received_events_url": "https://api.github.com/users/diego-plan9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-02T09:39:47Z", "updated_at": "2019-12-23T15:18:17Z", "closed_at": "2019-12-07T11:06:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First of all, thanks for making `nest_asyncio` available - it covers a very handy use case! I was wondering if it would be possible to make a new release that includes the `LICENSE` file along with the rest of the files, in order to facilitate proper attribution. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/12", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/12/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/12/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/12", "id": 482302524, "node_id": "MDU6SXNzdWU0ODIzMDI1MjQ=", "number": 12, "title": "get_asyncgen_hooks not available in python 3.5", "user": {"login": "jyu00", "id": 28284230, "node_id": "MDQ6VXNlcjI4Mjg0MjMw", "avatar_url": "https://avatars2.githubusercontent.com/u/28284230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyu00", "html_url": "https://github.com/jyu00", "followers_url": "https://api.github.com/users/jyu00/followers", "following_url": "https://api.github.com/users/jyu00/following{/other_user}", "gists_url": "https://api.github.com/users/jyu00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyu00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyu00/subscriptions", "organizations_url": "https://api.github.com/users/jyu00/orgs", "repos_url": "https://api.github.com/users/jyu00/repos", "events_url": "https://api.github.com/users/jyu00/events{/privacy}", "received_events_url": "https://api.github.com/users/jyu00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-19T13:09:04Z", "updated_at": "2019-08-25T10:45:28Z", "closed_at": "2019-08-25T10:45:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nWe've been using `nest_asyncio` for a while now (thanks!). Just yesterday our test failed with \r\n\r\n```\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/nest_asyncio.py\", line 62, in run_forever\r\n    old_agen_hooks = sys.get_asyncgen_hooks()\r\nAttributeError: module 'sys' has no attribute 'get_asyncgen_hooks'\r\n```\r\n\r\nIt looks like `sys.get_asyncgen_hooks` wasn't introduced until Python 3.6, and this package is supposed to support Python 3.5+. \r\n\r\nThanks, \r\nJessie ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/11", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/11/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/11/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/11", "id": 472955802, "node_id": "MDU6SXNzdWU0NzI5NTU4MDI=", "number": 11, "title": "Ready queue mutation, IndexError: pop from an empty deque", "user": {"login": "corydolphin", "id": 446889, "node_id": "MDQ6VXNlcjQ0Njg4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/446889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corydolphin", "html_url": "https://github.com/corydolphin", "followers_url": "https://api.github.com/users/corydolphin/followers", "following_url": "https://api.github.com/users/corydolphin/following{/other_user}", "gists_url": "https://api.github.com/users/corydolphin/gists{/gist_id}", "starred_url": "https://api.github.com/users/corydolphin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corydolphin/subscriptions", "organizations_url": "https://api.github.com/users/corydolphin/orgs", "repos_url": "https://api.github.com/users/corydolphin/repos", "events_url": "https://api.github.com/users/corydolphin/events{/privacy}", "received_events_url": "https://api.github.com/users/corydolphin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-07-25T16:18:11Z", "updated_at": "2019-12-07T11:08:14Z", "closed_at": "2019-12-07T11:08:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nFirst, thanks for sharing the patch and publishing this library. I'm trying to workaround re-entrancy while converting a codebase incrementally to asyncio, where there are call chains of async > loop.run_until_complete(async). \r\n\r\nI've hit an issue with the patch with handles from the _ready queue seemingly being popped from elsewhere. \r\nI.e. from `python3.6/asyncio/base_events.py` popping from the ready queue throws, because it iterates too far. \r\n```\r\n        ntodo = len(self._ready)\r\n        for i in range(ntodo):\r\n            handle = self._ready.popleft() # throws.\r\n            if handle._cancelled:\r\n                continue\r\n```\r\nThe full exception stack trace looks like this:\r\n\r\n``` Python\r\nreturn aio_batcher.run_until_complete(aio_batcher.evaluate_coroutines(json_data))\r\n  File \"/Users/cory/src/nd/util/aio_batcher/decorators.py\", line 50, in run_until_complete\r\n    return loop.run_until_complete(awaitable)\r\n  File \"/var/lib/conda/envs/nextdoor3/lib/python3.6/site-packages/nest_asyncio.py\", line 63, in run_until_complete\r\n    return self._run_until_complete_orig(future)\r\n  File \"/var/lib/conda/envs/nextdoor3/lib/python3.6/asyncio/base_events.py\", line 454, in run_until_complete\r\n    self.run_forever()\r\n  File \"/var/lib/conda/envs/nextdoor3/lib/python3.6/asyncio/base_events.py\", line 421, in run_forever\r\n    self._run_once()\r\n  File \"/var/lib/conda/envs/nextdoor3/lib/python3.6/asyncio/base_events.py\", line 1411, in _run_once\r\n    handle = self._ready.popleft()\r\nIndexError: pop from an empty deque\r\n```\r\n\r\nMy hypothesis is that one of the enqueued items triggers the nest_async, or else an enqueued item is processing other elements from the queue. \r\n\r\nIt is the worst kind of problem where it is reproducible, but I have yet to isolate a simple test case to make it easy to understand. Do you have a hunch of what might be happening? Perhaps something you ran into while writing the patch?\r\n\r\nThanks for your help,\r\nCory\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/10", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/10/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/10/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/10", "id": 465704043, "node_id": "MDU6SXNzdWU0NjU3MDQwNDM=", "number": 10, "title": "Attempt to access websocket outside of a relevant context", "user": {"login": "SmartManoj", "id": 7231077, "node_id": "MDQ6VXNlcjcyMzEwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7231077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SmartManoj", "html_url": "https://github.com/SmartManoj", "followers_url": "https://api.github.com/users/SmartManoj/followers", "following_url": "https://api.github.com/users/SmartManoj/following{/other_user}", "gists_url": "https://api.github.com/users/SmartManoj/gists{/gist_id}", "starred_url": "https://api.github.com/users/SmartManoj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SmartManoj/subscriptions", "organizations_url": "https://api.github.com/users/SmartManoj/orgs", "repos_url": "https://api.github.com/users/SmartManoj/repos", "events_url": "https://api.github.com/users/SmartManoj/events{/privacy}", "received_events_url": "https://api.github.com/users/SmartManoj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-09T10:35:12Z", "updated_at": "2019-07-09T14:02:52Z", "closed_at": "2019-07-09T14:02:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nRuntimeError: Attempt to access websocket outside of a relevant context\r\nAttempt to access websocket outside of a relevant context\r\nTraceback (most recent call last):\r\n  File \"D:\\SmartBot\\my_env\\SmartBot\\telegram.py\", line 888, in wa2tg2\r\n    data = await websocket.receive()\r\n  File \"C:\\Users\\Smart\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\quart\\local.py\", line 115, in __getattr__\r\n    return getattr(self._get_current_object(), name)\r\n  File \"C:\\Users\\Smart\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\quart\\local.py\", line 84, in _get_current_object\r\n    return object.__getattribute__(self, '__LocalProxy_local')()\r\n  File \"C:\\Users\\Smart\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\quart\\globals.py\", line 14, in _ctx_lookup\r\n    raise RuntimeError(f\"Attempt to access {name} outside of a relevant context\")\r\n\r\n```\r\nIn quart and telethon", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/9", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/9/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/9/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/9", "id": 448171042, "node_id": "MDU6SXNzdWU0NDgxNzEwNDI=", "number": 9, "title": "Error when running multiple Jupyter cells: ERROR! Session/line number was not unique in database", "user": {"login": "rodmendezp", "id": 43543557, "node_id": "MDQ6VXNlcjQzNTQzNTU3", "avatar_url": "https://avatars1.githubusercontent.com/u/43543557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodmendezp", "html_url": "https://github.com/rodmendezp", "followers_url": "https://api.github.com/users/rodmendezp/followers", "following_url": "https://api.github.com/users/rodmendezp/following{/other_user}", "gists_url": "https://api.github.com/users/rodmendezp/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodmendezp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodmendezp/subscriptions", "organizations_url": "https://api.github.com/users/rodmendezp/orgs", "repos_url": "https://api.github.com/users/rodmendezp/repos", "events_url": "https://api.github.com/users/rodmendezp/events{/privacy}", "received_events_url": "https://api.github.com/users/rodmendezp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T13:27:18Z", "updated_at": "2019-05-25T22:54:19Z", "closed_at": "2019-05-24T19:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running multiples cells, where each of them run an async functions, and I want the cells to run consecutively, so I am using the function loop.run_until_complete to make sure each cell completes before running the next. Here is an example\r\n\r\n```python\r\nimport asyncio\r\nimport nest_asyncio\r\nfrom timeit import default_timer\r\n\r\nnest_asyncio.apply()\r\n\r\nasync def print_loop():\r\n  print('{0:<30}{1:>20}'.format('Function', 'Completed at'))\r\n  for i in range(3):\r\n    elapsed = default_timer() - START_TIME\r\n    completed_at = '{:5.2f}s'.format(elapsed)\r\n    print('{0:<30}{1:>20}'.format('[LOOP] %d' % i, completed_at))\r\n    time.sleep(0.5)\r\n\r\nSTART_TIME = defualt_timer()\r\n\r\n# This code will go on each cell\r\nloop = asyncio.get_event_loop()\r\ntask = asyncio.ensure_future(print_loop())\r\nloop.run_until_complete(task)\r\n```\r\n\r\nThe run_until_complete blocks the next cell, but when running 3 or more cells I get the error \r\n```ERROR! Session/line number was not unique in database. History logging moved to new session```\r\nAnd the output start appearing in differents cells\r\n\r\n![bugger_init](https://user-images.githubusercontent.com/43543557/58330821-bd74de80-7e05-11e9-8722-8c4a598c0bcd.PNG)\r\nAnd I get the following\r\n![bugged_cells](https://user-images.githubusercontent.com/43543557/58330900-ea28f600-7e05-11e9-865a-34bdcf946fd7.PNG)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/8", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/8/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/8/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/8", "id": 417420705, "node_id": "MDU6SXNzdWU0MTc0MjA3MDU=", "number": 8, "title": "Using with Quamash", "user": {"login": "danieljfarrell", "id": 112847, "node_id": "MDQ6VXNlcjExMjg0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/112847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieljfarrell", "html_url": "https://github.com/danieljfarrell", "followers_url": "https://api.github.com/users/danieljfarrell/followers", "following_url": "https://api.github.com/users/danieljfarrell/following{/other_user}", "gists_url": "https://api.github.com/users/danieljfarrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieljfarrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieljfarrell/subscriptions", "organizations_url": "https://api.github.com/users/danieljfarrell/orgs", "repos_url": "https://api.github.com/users/danieljfarrell/repos", "events_url": "https://api.github.com/users/danieljfarrell/events{/privacy}", "received_events_url": "https://api.github.com/users/danieljfarrell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-05T17:45:56Z", "updated_at": "2019-03-05T21:49:52Z", "closed_at": "2019-03-05T21:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use this project a lot recently with Jupyter notebooks for testing async code, thanks! Hope it\u2019s OK to leave a question here?\r\n\r\nIn your readme it says this probably will not work with quamash events loops, I was wondering if you could let me know more about that, such as what\u2019s the main difficult?\r\n\r\nI am using Quamash for a desktop QT application and I\u2019m coming up against the classic problem of interoperability with legacy code that I cannot change.  I need to call an \u2018async def\u2019 function and waiting for it to complete inside a \u2018def\u2019 function. \r\n\r\nDo you think nest_asyncio could help? Or do you think it\u2019s not worth it because it may introduce really hard to track down bugs?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/7", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/7/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/7/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/7", "id": 405800034, "node_id": "MDU6SXNzdWU0MDU4MDAwMzQ=", "number": 7, "title": "AttributeError: 'Loop' object has no attribute '_check_closed'", "user": {"login": "paduel", "id": 5903320, "node_id": "MDQ6VXNlcjU5MDMzMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5903320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paduel", "html_url": "https://github.com/paduel", "followers_url": "https://api.github.com/users/paduel/followers", "following_url": "https://api.github.com/users/paduel/following{/other_user}", "gists_url": "https://api.github.com/users/paduel/gists{/gist_id}", "starred_url": "https://api.github.com/users/paduel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paduel/subscriptions", "organizations_url": "https://api.github.com/users/paduel/orgs", "repos_url": "https://api.github.com/users/paduel/repos", "events_url": "https://api.github.com/users/paduel/events{/privacy}", "received_events_url": "https://api.github.com/users/paduel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-01T17:30:37Z", "updated_at": "2019-02-02T09:01:02Z", "closed_at": "2019-02-02T09:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ewald.\r\n\r\nI fallen in love with ib_insync several months ago. Now I look for a solution to nested loops, I find this amazing package, and it's yours too. Great Ewald !\r\n\r\nI'm trying to use with aiogram and my own async code. But I get this error. I'm using  Python 3.7.2.\r\n\r\nCould you help me?  Thanks for your brilliant work.\r\n\r\n\r\n```\r\n...\r\n  File \"/home/argante/anaconda2/Proyectos 8/beagledwx/dwx.py\", line 51, in data_request\r\n    data = list_of_dict_to_dict(loop.run_until_complete(future))\r\n  File \"/home/argante/anaconda2/envs/python372/lib/python3.7/site-packages/nest_asyncio.py\", line 53, in run_until_complete\r\n    self._check_closed()\r\nAttributeError: 'Loop' object has no attribute '_check_closed'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/6", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/6/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/6/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/6", "id": 390618006, "node_id": "MDU6SXNzdWUzOTA2MTgwMDY=", "number": 6, "title": "Exception handlers do not seem to work after apply().", "user": {"login": "taimurrabuske", "id": 451252, "node_id": "MDQ6VXNlcjQ1MTI1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/451252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taimurrabuske", "html_url": "https://github.com/taimurrabuske", "followers_url": "https://api.github.com/users/taimurrabuske/followers", "following_url": "https://api.github.com/users/taimurrabuske/following{/other_user}", "gists_url": "https://api.github.com/users/taimurrabuske/gists{/gist_id}", "starred_url": "https://api.github.com/users/taimurrabuske/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taimurrabuske/subscriptions", "organizations_url": "https://api.github.com/users/taimurrabuske/orgs", "repos_url": "https://api.github.com/users/taimurrabuske/repos", "events_url": "https://api.github.com/users/taimurrabuske/events{/privacy}", "received_events_url": "https://api.github.com/users/taimurrabuske/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-13T10:40:23Z", "updated_at": "2019-02-02T09:01:21Z", "closed_at": "2019-02-02T09:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my application, after I apply the patch, the exception handler that I set is not used for exceptions. Is this the expected behavior?\r\n\r\nCheers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/4", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/4/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/4/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/4", "id": 375994143, "node_id": "MDU6SXNzdWUzNzU5OTQxNDM=", "number": 4, "title": "Running this with serial_asyncio fails to close the COM ports", "user": {"login": "scottbgoldblatt", "id": 8919401, "node_id": "MDQ6VXNlcjg5MTk0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8919401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbgoldblatt", "html_url": "https://github.com/scottbgoldblatt", "followers_url": "https://api.github.com/users/scottbgoldblatt/followers", "following_url": "https://api.github.com/users/scottbgoldblatt/following{/other_user}", "gists_url": "https://api.github.com/users/scottbgoldblatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbgoldblatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbgoldblatt/subscriptions", "organizations_url": "https://api.github.com/users/scottbgoldblatt/orgs", "repos_url": "https://api.github.com/users/scottbgoldblatt/repos", "events_url": "https://api.github.com/users/scottbgoldblatt/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbgoldblatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T14:37:00Z", "updated_at": "2018-10-31T14:52:36Z", "closed_at": "2018-10-31T14:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The first time the following serial application runs, it succeeds.  However, the second time it is run it fails:\r\n\r\nSerialException: could not open port 'com3': PermissionError(13, 'Access is denied.', None, 5)\r\n---------------------\r\nimport asyncio\r\nimport serial_asyncio\r\nimport nest_asyncio\r\n\r\n\r\nasync def main(loop):\r\n    reader, _ = await serial_asyncio.open_serial_connection(url='com3', baudrate=115200)\r\n    print('Reader created')\r\n    _, writer = await serial_asyncio.open_serial_connection(url='com4', baudrate=115200)\r\n    print('Writer created')\r\n    messages = [b'foo\\n', b'bar\\n', b'baz\\n', b'qux\\n']\r\n    sent = send(writer, messages)\r\n    received = recv(reader)\r\n    \r\n    await asyncio.wait([sent, received])\r\n    \r\n    \r\n    print('finished! main')\r\n    \r\n\r\nasync def send(w, msgs):\r\n    for msg in msgs:\r\n        w.write(msg)\r\n        print(f'sent: {msg.decode().rstrip()}')\r\n        await asyncio.sleep(0.5)\r\n    w.write(b'DONE\\n')\r\n    print('Done sending')\r\n\r\n\r\nasync def recv(r):\r\n    while True:\r\n        msg = await r.readuntil(b'\\n')\r\n        if msg.rstrip() == b'DONE':\r\n            print('Done receiving')\r\n            break\r\n        print(f'received: {msg.rstrip().decode()}')\r\n    \r\n\r\n\r\nnest_asyncio.apply()\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main(loop))\r\nprint('finished! loop')", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/3", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/3/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/3/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/3", "id": 364812236, "node_id": "MDU6SXNzdWUzNjQ4MTIyMzY=", "number": 3, "title": "Task not executing", "user": {"login": "davidbrochart", "id": 4711805, "node_id": "MDQ6VXNlcjQ3MTE4MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4711805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbrochart", "html_url": "https://github.com/davidbrochart", "followers_url": "https://api.github.com/users/davidbrochart/followers", "following_url": "https://api.github.com/users/davidbrochart/following{/other_user}", "gists_url": "https://api.github.com/users/davidbrochart/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbrochart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbrochart/subscriptions", "organizations_url": "https://api.github.com/users/davidbrochart/orgs", "repos_url": "https://api.github.com/users/davidbrochart/repos", "events_url": "https://api.github.com/users/davidbrochart/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbrochart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-28T09:32:13Z", "updated_at": "2018-10-13T16:41:15Z", "closed_at": "2018-10-13T16:33:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say you have a file `foo.py`:\r\n\r\n```python\r\nimport asyncio\r\n\r\nasync def foo():\r\n    print('foo')\r\n    await asyncio.sleep(0)\r\n    print('done')\r\n\r\nloop = asyncio.get_event_loop()\r\ntask = asyncio.ensure_future(foo())\r\nloop.run_until_complete(task)\r\n```\r\n\r\nAnd a Notebook with this cell:\r\n\r\n```python\r\nimport nest_asyncio\r\nnest_asyncio.apply()\r\n\r\nimport foo\r\n```\r\n\r\nExecuting the cell just hangs, `foo()` is not executed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/1", "repository_url": "https://api.github.com/repos/erdewit/nest_asyncio", "labels_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/1/comments", "events_url": "https://api.github.com/repos/erdewit/nest_asyncio/issues/1/events", "html_url": "https://github.com/erdewit/nest_asyncio/issues/1", "id": 357999365, "node_id": "MDU6SXNzdWUzNTc5OTkzNjU=", "number": 1, "title": "Module instead of package", "user": {"login": "basnijholt", "id": 6897215, "node_id": "MDQ6VXNlcjY4OTcyMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6897215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basnijholt", "html_url": "https://github.com/basnijholt", "followers_url": "https://api.github.com/users/basnijholt/followers", "following_url": "https://api.github.com/users/basnijholt/following{/other_user}", "gists_url": "https://api.github.com/users/basnijholt/gists{/gist_id}", "starred_url": "https://api.github.com/users/basnijholt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basnijholt/subscriptions", "organizations_url": "https://api.github.com/users/basnijholt/orgs", "repos_url": "https://api.github.com/users/basnijholt/repos", "events_url": "https://api.github.com/users/basnijholt/events{/privacy}", "received_events_url": "https://api.github.com/users/basnijholt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-07T09:53:19Z", "updated_at": "2018-09-07T15:46:31Z", "closed_at": "2018-09-07T12:11:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see there is only one file on the package. I think you should make an installable module out of it :)", "performed_via_github_app": null, "score": 1.0}]}