{"total_count": 23, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/52", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/52/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/52/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/52", "id": 665821862, "node_id": "MDU6SXNzdWU2NjU4MjE4NjI=", "number": 52, "title": "_replace_atomic not working on Windows 10", "user": {"login": "kiudee", "id": 564473, "node_id": "MDQ6VXNlcjU2NDQ3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/564473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiudee", "html_url": "https://github.com/kiudee", "followers_url": "https://api.github.com/users/kiudee/followers", "following_url": "https://api.github.com/users/kiudee/following{/other_user}", "gists_url": "https://api.github.com/users/kiudee/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiudee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiudee/subscriptions", "organizations_url": "https://api.github.com/users/kiudee/orgs", "repos_url": "https://api.github.com/users/kiudee/repos", "events_url": "https://api.github.com/users/kiudee/events{/privacy}", "received_events_url": "https://api.github.com/users/kiudee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-26T17:09:04Z", "updated_at": "2020-08-12T08:26:09Z", "closed_at": "2020-08-12T08:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I write to a file as follows:\r\n```python\r\nwith AtomicWriter(data_path, mode=\"wb\", overwrite=True).open() as f:\r\n    np.savez_compressed(f, arr)\r\n```\r\n\r\nOn linux this works, but on Windows I receive the following error:\r\n```\r\n  File \"C:\\Users\\Karlson\\Anaconda3\\envs\\chess-tuning-tools\\lib\\contextlib.py\", line 119, in __exit__\r\n    next(self.gen)\r\n  File \"C:\\Users\\Karlson\\Anaconda3\\envs\\chess-tuning-tools\\lib\\site-packages\\atomicwrites\\__init__.py\", line 169, in _open\r\n    self.commit(f)\r\n  File \"C:\\Users\\Karlson\\Anaconda3\\envs\\chess-tuning-tools\\lib\\site-packages\\atomicwrites\\__init__.py\", line 202, in commit\r\n    replace_atomic(f.name, self._path)\r\n  File \"C:\\Users\\Karlson\\Anaconda3\\envs\\chess-tuning-tools\\lib\\site-packages\\atomicwrites\\__init__.py\", line 99, in replace_atomic\r\n    return _replace_atomic(src, dst)\r\n  File \"C:\\Users\\Karlson\\Anaconda3\\envs\\chess-tuning-tools\\lib\\site-packages\\atomicwrites\\__init__.py\", line 81, in _replace_atomic\r\n    _windows_default_flags | _MOVEFILE_REPLACE_EXISTING\r\n  File \"C:\\Users\\Karlson\\Anaconda3\\envs\\chess-tuning-tools\\lib\\site-packages\\atomicwrites\\__init__.py\", line 76, in _handle_errors\r\n    raise WinError()\r\nPermissionError: [WinError 5] Access is denied\r\n```\r\nThe script is located in the home folder and should not be run with admin privileges.\r\n\r\nUsing the following versions:\r\n```\r\natomicwrites              1.4.0                      py_0\r\nnumpy                     1.18.1           py37h93ca92e_0\r\npython                    3.7.6                h60c2a47_2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/50", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/50/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/50/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/50", "id": 611626514, "node_id": "MDU6SXNzdWU2MTE2MjY1MTQ=", "number": 50, "title": "Support Python 3.8", "user": {"login": "jugmac00", "id": 9895620, "node_id": "MDQ6VXNlcjk4OTU2MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9895620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugmac00", "html_url": "https://github.com/jugmac00", "followers_url": "https://api.github.com/users/jugmac00/followers", "following_url": "https://api.github.com/users/jugmac00/following{/other_user}", "gists_url": "https://api.github.com/users/jugmac00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugmac00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugmac00/subscriptions", "organizations_url": "https://api.github.com/users/jugmac00/orgs", "repos_url": "https://api.github.com/users/jugmac00/repos", "events_url": "https://api.github.com/users/jugmac00/events{/privacy}", "received_events_url": "https://api.github.com/users/jugmac00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T06:09:40Z", "updated_at": "2020-05-04T10:25:09Z", "closed_at": "2020-05-04T10:25:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3.8 is out for a while, so it would be nice if `atomicwrites` support it.\r\n\r\nI ran the tests locally with Python 3.8, no errors, not even a deprecation warning.\r\n\r\nIf you are ok, I'd create a pull request to add support for Python 3.8.\r\n\r\nI'd also clean up the current version mismatches:\r\n```\r\n$ check-python-versions \r\nsetup.py says:              2.7, 3.4, 3.5, 3.6, 3.7\r\n- python_requires says:     2.7, 3.4, 3.5, 3.6, 3.7, 3.8\r\ntox.ini says:               2.7, 3.4, 3.5, 3.6, 3.7, 3.8, PyPy\r\n.travis.yml says:           2.7, 3.4, 3.5, 3.6, 3.7, PyPy\r\n\r\nmismatch!\r\n```\r\n\r\nAlso, I noticed, in `appveyor` you only test up to Python 3.6, and only the 32 bit executables. If you are ok, I'd add also the 64 bit versions.\r\n\r\nThanks for your work!\r\n\r\nP.S.: What do you think about dropping support for Python 3.4?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/49", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/49/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/49/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/49", "id": 609138629, "node_id": "MDU6SXNzdWU2MDkxMzg2Mjk=", "number": 49, "title": "Assuming the pypi release is for the Path change", "user": {"login": "earonesty", "id": 50769, "node_id": "MDQ6VXNlcjUwNzY5", "avatar_url": "https://avatars3.githubusercontent.com/u/50769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/earonesty", "html_url": "https://github.com/earonesty", "followers_url": "https://api.github.com/users/earonesty/followers", "following_url": "https://api.github.com/users/earonesty/following{/other_user}", "gists_url": "https://api.github.com/users/earonesty/gists{/gist_id}", "starred_url": "https://api.github.com/users/earonesty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/earonesty/subscriptions", "organizations_url": "https://api.github.com/users/earonesty/orgs", "repos_url": "https://api.github.com/users/earonesty/repos", "events_url": "https://api.github.com/users/earonesty/events{/privacy}", "received_events_url": "https://api.github.com/users/earonesty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T15:14:53Z", "updated_at": "2020-04-30T14:41:09Z", "closed_at": "2020-04-30T14:41:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's no release-tag for the latest release at pypi, so I'm guessing:\r\n\r\nhttps://pypi.org/project/atomicwrites/1.4.0/\r\n\r\nvs \r\n\r\nhttps://github.com/untitaker/python-atomicwrites/releases\r\n\r\nIs that right?   It's just the latest master at pypi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/47", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/47/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/47/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/47", "id": 605087755, "node_id": "MDU6SXNzdWU2MDUwODc3NTU=", "number": 47, "title": "`pathlib.Path` support", "user": {"login": "LovecraftianHorror", "id": 30302768, "node_id": "MDQ6VXNlcjMwMzAyNzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/30302768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LovecraftianHorror", "html_url": "https://github.com/LovecraftianHorror", "followers_url": "https://api.github.com/users/LovecraftianHorror/followers", "following_url": "https://api.github.com/users/LovecraftianHorror/following{/other_user}", "gists_url": "https://api.github.com/users/LovecraftianHorror/gists{/gist_id}", "starred_url": "https://api.github.com/users/LovecraftianHorror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LovecraftianHorror/subscriptions", "organizations_url": "https://api.github.com/users/LovecraftianHorror/orgs", "repos_url": "https://api.github.com/users/LovecraftianHorror/repos", "events_url": "https://api.github.com/users/LovecraftianHorror/events{/privacy}", "received_events_url": "https://api.github.com/users/LovecraftianHorror/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-22T21:30:02Z", "updated_at": "2020-04-28T21:38:56Z", "closed_at": "2020-04-28T21:38:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to support passing in `pathlib.Path` for the `path` `atomic_write(path)`?\r\n\r\nI noticed that doing so works fine for `PosixPath`s, but fails for `WindowsPath`s from [this CI run](https://github.com/LovecraftianHorror/subwinder/runs/609921794?check_suite_focus=true). This can result in someone breaking cross-platform support without being obvious. I notice that the test follows the same solution I went with where you just cast the `path` to a `str`.\r\n\r\nAllowing `atomic_write` to accept `Path`s also helps `atomic_write` behave more like `open` as well which also accepts `Path`s.\r\n\r\nI haven't delved too far, but the fix might be as simple as\r\n\r\n```python\r\ntry:\r\n    from pathlib import Path\r\n    if isinstance(path, Path):\r\n        path = str(path)\r\nexcept ImportError:\r\n    # Just assume `path` is already a `str`\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/46", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/46/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/46/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/46", "id": 596915663, "node_id": "MDU6SXNzdWU1OTY5MTU2NjM=", "number": 46, "title": "switch from `MoveFileExW` to `MoveFileTransactedW` on windows.", "user": {"login": "Cologler", "id": 10906962, "node_id": "MDQ6VXNlcjEwOTA2OTYy", "avatar_url": "https://avatars0.githubusercontent.com/u/10906962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cologler", "html_url": "https://github.com/Cologler", "followers_url": "https://api.github.com/users/Cologler/followers", "following_url": "https://api.github.com/users/Cologler/following{/other_user}", "gists_url": "https://api.github.com/users/Cologler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cologler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cologler/subscriptions", "organizations_url": "https://api.github.com/users/Cologler/orgs", "repos_url": "https://api.github.com/users/Cologler/repos", "events_url": "https://api.github.com/users/Cologler/events{/privacy}", "received_events_url": "https://api.github.com/users/Cologler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T23:09:08Z", "updated_at": "2020-04-11T19:26:18Z", "closed_at": "2020-04-11T19:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://docs.microsoft.com/zh-cn/windows/win32/api/winbase/nf-winbase-movefileexw:\r\n\r\n> To perform this operation as a transacted operation, use the MoveFileTransacted function.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/43", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/43/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/43/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/43", "id": 487953020, "node_id": "MDU6SXNzdWU0ODc5NTMwMjA=", "number": 43, "title": "Clarify whether Atomicwrites supports Python 3.7", "user": {"login": "CAM-Gerlach", "id": 17051931, "node_id": "MDQ6VXNlcjE3MDUxOTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/17051931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAM-Gerlach", "html_url": "https://github.com/CAM-Gerlach", "followers_url": "https://api.github.com/users/CAM-Gerlach/followers", "following_url": "https://api.github.com/users/CAM-Gerlach/following{/other_user}", "gists_url": "https://api.github.com/users/CAM-Gerlach/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAM-Gerlach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAM-Gerlach/subscriptions", "organizations_url": "https://api.github.com/users/CAM-Gerlach/orgs", "repos_url": "https://api.github.com/users/CAM-Gerlach/repos", "events_url": "https://api.github.com/users/CAM-Gerlach/events{/privacy}", "received_events_url": "https://api.github.com/users/CAM-Gerlach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-02T01:05:48Z", "updated_at": "2019-09-08T18:27:24Z", "closed_at": "2019-09-08T17:04:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given Python 3.7 has been released well over a year ago and is the default for new versions of most distributions (e.g. Debian 10, Ubuntu 19, Fedora 29, modern Arch, etc.), as well the official Python.org binaries and Anaconda for other platforms, it would be helpful to either run the test suite on Python 3.7 in your tox/travis config and (presuming it passes) declare compatibility in your PyPI Trove classifiers, or else open an issue listing the bug(s) blocking compatibility so you and/or the community can know what to fix (we use it with Spyder on Python 3.7 with no issues, but its possible there could be an edge case the test suite exercises that we do not). If you'd like, I can submit a PR to at least trigger the builds and see if they pass when I get a chance, unless you're aware of issues already. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/41", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/41/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/41/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/41", "id": 435526756, "node_id": "MDU6SXNzdWU0MzU1MjY3NTY=", "number": 41, "title": "FEAT: file locking", "user": {"login": "jbrockmendel", "id": 8078968, "node_id": "MDQ6VXNlcjgwNzg5Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrockmendel", "html_url": "https://github.com/jbrockmendel", "followers_url": "https://api.github.com/users/jbrockmendel/followers", "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}", "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions", "organizations_url": "https://api.github.com/users/jbrockmendel/orgs", "repos_url": "https://api.github.com/users/jbrockmendel/repos", "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrockmendel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-21T16:43:47Z", "updated_at": "2019-04-22T14:21:21Z", "closed_at": "2019-04-22T14:21:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Making file writing atomic is a great feature.  Another feature that might be a good fit is locking files for e.g. appends.\r\n\r\nUse Case: I have multiple processes that periodically write (append) to a log file \"example_shared_log.txt\" and need to prevent them from clobbering each other.  One way to accomplish this is with fcntl:\r\n\r\n```\r\ndef locked_write(fd, content):\r\n    fcntl.flock(fd, fcntl.LOCK_EX)\r\n    try:\r\n        fd.write(content)\r\n    finally:\r\n        fcntl.flock(fd, fcntl.LOCK_UN)\r\n        fd.close()\r\n```\r\n\r\nbut that loses atomicity.  A better solution would be to combine a lock on the original path with the rotation that atomicwrites uses.\r\n\r\nIf I put together a PR, would a feature like this be welcome?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/39", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/39/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/39/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/39", "id": 405021101, "node_id": "MDU6SXNzdWU0MDUwMjExMDE=", "number": 39, "title": "Use of prefix, suffix and bufsize for tempfile broken by #37", "user": {"login": "GlenWalker", "id": 3500068, "node_id": "MDQ6VXNlcjM1MDAwNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3500068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GlenWalker", "html_url": "https://github.com/GlenWalker", "followers_url": "https://api.github.com/users/GlenWalker/followers", "following_url": "https://api.github.com/users/GlenWalker/following{/other_user}", "gists_url": "https://api.github.com/users/GlenWalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/GlenWalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GlenWalker/subscriptions", "organizations_url": "https://api.github.com/users/GlenWalker/orgs", "repos_url": "https://api.github.com/users/GlenWalker/repos", "events_url": "https://api.github.com/users/GlenWalker/events{/privacy}", "received_events_url": "https://api.github.com/users/GlenWalker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-31T00:03:06Z", "updated_at": "2019-02-01T10:37:31Z", "closed_at": "2019-02-01T10:37:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was using these arguments from a subclass of atomicwrites.AtomicWriter, which broke when upgrading from atomicwrites-1.1.5 to atomicwrites-1.2.1.\r\n\r\nI see in #38 that you preferred not to support prefix and suffix, as you hadn't seen a good usecase for changing the defaults, so in the interests of persuading you our usecase is:\r\n* We are using atomicwrites to update files on large scale network storage. If a process crashes or is killed the temporary file will not be cleaned up. We set prefix and suffix appropriately to ensure we can find these files later, so they can be cleaned up. This happens often enough to be important.\r\n* We provide an API compatible with https://docs.python.org/2/library/functions.html#open to outside teams, and so need to pass a buffering / bufsize parameter through. (At some point we'll likely move to compatibility with io.open instead, but haven't yet)\r\n\r\nLet me know what you think - if you'd prefer to leave support for these arguments out I already have a subclass and can update it to override get_fileobject completely instead of calling the base implementation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/37", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/37/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/37/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/37", "id": 353394729, "node_id": "MDU6SXNzdWUzNTMzOTQ3Mjk=", "number": 37, "title": "Improve control over line endings", "user": {"login": "lorengordon", "id": 8457307, "node_id": "MDQ6VXNlcjg0NTczMDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8457307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorengordon", "html_url": "https://github.com/lorengordon", "followers_url": "https://api.github.com/users/lorengordon/followers", "following_url": "https://api.github.com/users/lorengordon/following{/other_user}", "gists_url": "https://api.github.com/users/lorengordon/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorengordon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorengordon/subscriptions", "organizations_url": "https://api.github.com/users/lorengordon/orgs", "repos_url": "https://api.github.com/users/lorengordon/repos", "events_url": "https://api.github.com/users/lorengordon/events{/privacy}", "received_events_url": "https://api.github.com/users/lorengordon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-23T14:00:45Z", "updated_at": "2018-08-24T17:57:07Z", "closed_at": "2018-08-24T17:57:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that the default mode is `w`, which in `tempfile.NamedTempFile()` always converts line endings based on the `os.linesep`. If I have a data with `\\n` line endings, `atom_write()` by default converts it to `\\r\\n` on Windows. And vice-versa on Linux.\r\n\r\nPython 3's `open()` introduced a new option, `newlines` to improve control over how line endings are handled. It's available in both Python 3 and Python 2 via `io.open()`. \r\n\r\n* https://docs.python.org/3/library/functions.html#open\r\n\r\nI can work around the problem by specifying the mode as `w+b`, but then on Python 3 I also have to make sure the string is encoded as bytes. It would be convenient if this library used `io.open` and propagated the `newline` parameter. Setting `newline=''` then does not perform any translation on line endings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/35", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/35/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/35/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/35", "id": 348209163, "node_id": "MDU6SXNzdWUzNDgyMDkxNjM=", "number": 35, "title": "Add `atomic_folder`", "user": {"login": "sotte", "id": 79138, "node_id": "MDQ6VXNlcjc5MTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/79138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sotte", "html_url": "https://github.com/sotte", "followers_url": "https://api.github.com/users/sotte/followers", "following_url": "https://api.github.com/users/sotte/following{/other_user}", "gists_url": "https://api.github.com/users/sotte/gists{/gist_id}", "starred_url": "https://api.github.com/users/sotte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sotte/subscriptions", "organizations_url": "https://api.github.com/users/sotte/orgs", "repos_url": "https://api.github.com/users/sotte/repos", "events_url": "https://api.github.com/users/sotte/events{/privacy}", "received_events_url": "https://api.github.com/users/sotte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171324140, "node_id": "MDU6TGFiZWwxNzEzMjQxNDA=", "url": "https://api.github.com/repos/untitaker/python-atomicwrites/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 171324141, "node_id": "MDU6TGFiZWwxNzEzMjQxNDE=", "url": "https://api.github.com/repos/untitaker/python-atomicwrites/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-07T07:58:12Z", "updated_at": "2018-12-16T18:32:24Z", "closed_at": "2018-12-16T18:32:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes I have a bunch of operations which create many files in a folder. The folder should only be there in the end of the operation. Something like this:\r\n```python\r\nwith atomic_folder(\"foo\") as folder:\r\n    unzip(something, folder)\r\n    # \"foo/\" doesn't exist yet.\r\n# now it does\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/31", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/31/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/31/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/31", "id": 327929376, "node_id": "MDU6SXNzdWUzMjc5MjkzNzY=", "number": 31, "title": "How do I integrate this with ZipFile?", "user": {"login": "MacHu-GWU", "id": 6800411, "node_id": "MDQ6VXNlcjY4MDA0MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6800411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MacHu-GWU", "html_url": "https://github.com/MacHu-GWU", "followers_url": "https://api.github.com/users/MacHu-GWU/followers", "following_url": "https://api.github.com/users/MacHu-GWU/following{/other_user}", "gists_url": "https://api.github.com/users/MacHu-GWU/gists{/gist_id}", "starred_url": "https://api.github.com/users/MacHu-GWU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MacHu-GWU/subscriptions", "organizations_url": "https://api.github.com/users/MacHu-GWU/orgs", "repos_url": "https://api.github.com/users/MacHu-GWU/repos", "events_url": "https://api.github.com/users/MacHu-GWU/events{/privacy}", "received_events_url": "https://api.github.com/users/MacHu-GWU/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-30T23:03:04Z", "updated_at": "2018-05-31T07:57:53Z", "closed_at": "2018-05-31T07:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is how we use ZipFile.\r\n\r\n```python\r\nsrc = \"a.txt\"\r\ndst = \"a.zip\"\r\n\r\nwith ZipFile(dst, \"w\") as f:\r\n    f.write(src)\r\n```\r\n\r\nHow can I integrate ``atomic_write`` with this?\r\nCould you provide me an example that use ``atomic_write`` to zip a single large text file?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/30", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/30/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/30/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/30", "id": 326310841, "node_id": "MDU6SXNzdWUzMjYzMTA4NDE=", "number": 30, "title": "Unlimited recursion on Windows with Python 2.7", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-24T21:56:49Z", "updated_at": "2018-05-25T08:34:51Z", "closed_at": "2018-05-25T08:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I bumped to the latest pytest which now needs atomicwrites... and the tests fail to run on Windows.\r\nI am under the impression that atomicwrites is the culprit but I may be wrong?\r\n\r\nSee https://ci.appveyor.com/project/nexB/license-expression/build/248/job/smx1qy33w1dxrlh5#L531\r\nand https://ci.appveyor.com/project/nexB/license-expression/build/248/job/jpd8c35tgee9mi7y#L532\r\n\r\nThings work fine on POSIX and other Python versions on Windows:\r\nhttps://travis-ci.org/nexB/license-expression/builds/383421178\r\nhttps://ci.appveyor.com/project/nexB/license-expression/build/248\r\n \r\nThe exact versions used are here:\r\nhttps://github.com/nexB/license-expression/tree/fix-symbol-comparison/thirdparty/dev", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/29", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/29/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/29/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/29", "id": 324911254, "node_id": "MDU6SXNzdWUzMjQ5MTEyNTQ=", "number": 29, "title": "Can it work with pickle.dump/json.dump instead of text only ?", "user": {"login": "sionking", "id": 7851877, "node_id": "MDQ6VXNlcjc4NTE4Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7851877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sionking", "html_url": "https://github.com/sionking", "followers_url": "https://api.github.com/users/sionking/followers", "following_url": "https://api.github.com/users/sionking/following{/other_user}", "gists_url": "https://api.github.com/users/sionking/gists{/gist_id}", "starred_url": "https://api.github.com/users/sionking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sionking/subscriptions", "organizations_url": "https://api.github.com/users/sionking/orgs", "repos_url": "https://api.github.com/users/sionking/repos", "events_url": "https://api.github.com/users/sionking/events{/privacy}", "received_events_url": "https://api.github.com/users/sionking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-21T13:13:07Z", "updated_at": "2020-05-09T17:07:04Z", "closed_at": "2018-05-21T15:44:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to make my dumps atomic.\r\n\r\nSCK.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/27", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/27/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/27/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/27", "id": 320768955, "node_id": "MDU6SXNzdWUzMjA3Njg5NTU=", "number": 27, "title": "Some network filesystems don't support `_sync_directory` ", "user": {"login": "mozillazg", "id": 485054, "node_id": "MDQ6VXNlcjQ4NTA1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/485054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mozillazg", "html_url": "https://github.com/mozillazg", "followers_url": "https://api.github.com/users/mozillazg/followers", "following_url": "https://api.github.com/users/mozillazg/following{/other_user}", "gists_url": "https://api.github.com/users/mozillazg/gists{/gist_id}", "starred_url": "https://api.github.com/users/mozillazg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mozillazg/subscriptions", "organizations_url": "https://api.github.com/users/mozillazg/orgs", "repos_url": "https://api.github.com/users/mozillazg/repos", "events_url": "https://api.github.com/users/mozillazg/events{/privacy}", "received_events_url": "https://api.github.com/users/mozillazg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-07T11:27:38Z", "updated_at": "2018-05-15T15:50:16Z", "closed_at": "2018-05-15T15:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "`fsync` on dir will cause `OSError: [Errno 22] Invalid argument` when run program  on `VirtualBox` shared dir.\r\n\r\n```python\r\n  File \"/home/vagrant/venv/local/lib/python2.7/site-packages/atomicwrites/__init__.py\", line 152, in _open\r\n    self.commit(f)\r\n  File \"/home/vagrant/venv/local/lib/python2.7/site-packages/atomicwrites/__init__.py\", line 177, in commit\r\n    replace_atomic(f.name, self._path)\r\n  File \"/home/vagrant/venv/local/lib/python2.7/site-packages/atomicwrites/__init__.py\", line 89, in replace_atomic\r\n    return _replace_atomic(src, dst)\r\n  File \"/home/vagrant/venv/local/lib/python2.7/site-packages/atomicwrites/__init__.py\", line 46, in _replace_atomic\r\n    _sync_directory(os.path.normpath(os.path.dirname(dst)))\r\n  File \"/home/vagrant/venv/local/lib/python2.7/site-packages/atomicwrites/__init__.py\", line 40, in _sync_directory\r\n    _proper_fsync(fd)\r\nOSError: [Errno 22] Invalid argument\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/25", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/25/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/25/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/25", "id": 288744834, "node_id": "MDU6SXNzdWUyODg3NDQ4MzQ=", "number": 25, "title": "Use os.replace instead of os.rename for python 3.3+", "user": {"login": "dhulke", "id": 5838232, "node_id": "MDQ6VXNlcjU4MzgyMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5838232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhulke", "html_url": "https://github.com/dhulke", "followers_url": "https://api.github.com/users/dhulke/followers", "following_url": "https://api.github.com/users/dhulke/following{/other_user}", "gists_url": "https://api.github.com/users/dhulke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhulke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhulke/subscriptions", "organizations_url": "https://api.github.com/users/dhulke/orgs", "repos_url": "https://api.github.com/users/dhulke/repos", "events_url": "https://api.github.com/users/dhulke/events{/privacy}", "received_events_url": "https://api.github.com/users/dhulke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-01-15T23:45:34Z", "updated_at": "2018-01-16T21:31:10Z", "closed_at": "2018-01-16T21:31:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using this lib on Windows 10 with no issues so far, but I'm affraid os.rename, though not well documented for Windows, isn't atomic. As per the documentation:\r\n\r\n> If you want cross-platform overwriting of the destination, use replace().\r\nhttps://docs.python.org/3/library/os.html#os.rename\r\n\r\nSo I suggest something along the lines of:\r\n\r\n```\r\ndef _replace_atomic(src, dst):\r\n        try:\r\n                os.replace(src, dst)\r\n        except:\r\n                os.rename(src, dst)\r\n        _sync_directory(os.path.normpath(os.path.dirname(dst)))\r\n```\r\n\r\nIll submit a pull request and I would appreciate if you could update your pip entry. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/22", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/22/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/22/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/22", "id": 172460632, "node_id": "MDU6SXNzdWUxNzI0NjA2MzI=", "number": 22, "title": "Please provide a CHANGES file", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-22T14:03:29Z", "updated_at": "2020-01-01T20:20:19Z", "closed_at": "2020-01-01T20:20:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very helpful for packagers, interesting for some other people.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/19", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/19/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/19/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/19", "id": 169752225, "node_id": "MDU6SXNzdWUxNjk3NTIyMjU=", "number": 19, "title": "Cannot use atomicwrites on filename with no directory component", "user": {"login": "DarwinAwardWinner", "id": 228145, "node_id": "MDQ6VXNlcjIyODE0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/228145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DarwinAwardWinner", "html_url": "https://github.com/DarwinAwardWinner", "followers_url": "https://api.github.com/users/DarwinAwardWinner/followers", "following_url": "https://api.github.com/users/DarwinAwardWinner/following{/other_user}", "gists_url": "https://api.github.com/users/DarwinAwardWinner/gists{/gist_id}", "starred_url": "https://api.github.com/users/DarwinAwardWinner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DarwinAwardWinner/subscriptions", "organizations_url": "https://api.github.com/users/DarwinAwardWinner/orgs", "repos_url": "https://api.github.com/users/DarwinAwardWinner/repos", "events_url": "https://api.github.com/users/DarwinAwardWinner/events{/privacy}", "received_events_url": "https://api.github.com/users/DarwinAwardWinner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-06T15:44:23Z", "updated_at": "2016-08-14T12:27:54Z", "closed_at": "2016-08-14T12:27:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running the example in the README with atomicwrites 1.1.0:\n\n```\nfrom atomicwrites import atomic_write\n\nwith atomic_write('foo.txt', overwrite=True) as f:\n    f.write('Hello world.')\n```\n\nI get:\n\n```\nTraceback (most recent call last):\n  File \"/Users/ryan/temp/atomictest.py\", line 4, in <module>\n    f.write('Hello world.')\n  File \"/Users/ryan/.pyenv/versions/3.5.2/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/Users/ryan/.pyenv/versions/3.5.2/lib/python3.5/site-packages/atomicwrites/__init__.py\", line 152, in _open\n    self.commit(f)\n  File \"/Users/ryan/.pyenv/versions/3.5.2/lib/python3.5/site-packages/atomicwrites/__init__.py\", line 177, in commit\n    replace_atomic(f.name, self._path)\n  File \"/Users/ryan/.pyenv/versions/3.5.2/lib/python3.5/site-packages/atomicwrites/__init__.py\", line 89, in replace_atomic\n    return _replace_atomic(src, dst)\n  File \"/Users/ryan/.pyenv/versions/3.5.2/lib/python3.5/site-packages/atomicwrites/__init__.py\", line 46, in _replace_atomic\n    _sync_directory(os.path.dirname(dst))\n  File \"/Users/ryan/.pyenv/versions/3.5.2/lib/python3.5/site-packages/atomicwrites/__init__.py\", line 38, in _sync_directory\n    fd = os.open(directory, 0)\nFileNotFoundError: [Errno 2] No such file or directory: ''\n```\n\nThe reason is that `os.path.dirname('foo.txt')` returns `''` instead of `'.'`.\n\nIt looks like a bug was introduced here: https://github.com/untitaker/python-atomicwrites/commit/4c7de64e07240e91482a845afc122e3c6aff0bb1#diff-530c1a5f2cffcd30669f3bb3ebbafc75R31\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/12", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/12/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/12/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/12", "id": 165486242, "node_id": "MDU6SXNzdWUxNjU0ODYyNDI=", "number": 12, "title": "fsync after rename/move", "user": {"login": "Unrud", "id": 11810547, "node_id": "MDQ6VXNlcjExODEwNTQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11810547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Unrud", "html_url": "https://github.com/Unrud", "followers_url": "https://api.github.com/users/Unrud/followers", "following_url": "https://api.github.com/users/Unrud/following{/other_user}", "gists_url": "https://api.github.com/users/Unrud/gists{/gist_id}", "starred_url": "https://api.github.com/users/Unrud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Unrud/subscriptions", "organizations_url": "https://api.github.com/users/Unrud/orgs", "repos_url": "https://api.github.com/users/Unrud/repos", "events_url": "https://api.github.com/users/Unrud/events{/privacy}", "received_events_url": "https://api.github.com/users/Unrud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-14T06:32:50Z", "updated_at": "2016-08-02T07:47:07Z", "closed_at": "2016-07-26T16:00:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "On POSIX it's possible to fsync the directory, to ensure that the new file names are written to disk.\nI think on Windows it's necessary to open the new (target) file and fsync it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/9", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/9/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/9/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/9", "id": 143071700, "node_id": "MDU6SXNzdWUxNDMwNzE3MDA=", "number": 9, "title": "_open except block accidentally raises the inner exception", "user": {"login": "sruggier", "id": 427071, "node_id": "MDQ6VXNlcjQyNzA3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/427071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sruggier", "html_url": "https://github.com/sruggier", "followers_url": "https://api.github.com/users/sruggier/followers", "following_url": "https://api.github.com/users/sruggier/following{/other_user}", "gists_url": "https://api.github.com/users/sruggier/gists{/gist_id}", "starred_url": "https://api.github.com/users/sruggier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sruggier/subscriptions", "organizations_url": "https://api.github.com/users/sruggier/orgs", "repos_url": "https://api.github.com/users/sruggier/repos", "events_url": "https://api.github.com/users/sruggier/events{/privacy}", "received_events_url": "https://api.github.com/users/sruggier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171324138, "node_id": "MDU6TGFiZWwxNzEzMjQxMzg=", "url": "https://api.github.com/repos/untitaker/python-atomicwrites/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-23T20:30:02Z", "updated_at": "2016-03-25T20:16:28Z", "closed_at": "2016-03-25T20:16:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm talking specifically about this code:\n\n```\n        except:\n            try:\n                self.rollback(f)\n            except Exception:\n                pass\n            raise\n```\n\nI managed to hit a corner case where rollback throws an exception (f was None at that point), so control flow reached the `raise` statement on the last line. For some reason, this raised the inner exception, not the outer one.\n\nI can submit a patch to fix this: would you prefer a fix that uses the three-argument raise statement, which only works with Python 2, or should I add a dependency on six, and then call six.reraise, so it works with both 2 and 3?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/8", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/8/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/8/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/8", "id": 139894494, "node_id": "MDU6SXNzdWUxMzk4OTQ0OTQ=", "number": 8, "title": "corruption of commas to semicolon in ORG field", "user": {"login": "linsam", "id": 13092909, "node_id": "MDQ6VXNlcjEzMDkyOTA5", "avatar_url": "https://avatars2.githubusercontent.com/u/13092909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linsam", "html_url": "https://github.com/linsam", "followers_url": "https://api.github.com/users/linsam/followers", "following_url": "https://api.github.com/users/linsam/following{/other_user}", "gists_url": "https://api.github.com/users/linsam/gists{/gist_id}", "starred_url": "https://api.github.com/users/linsam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linsam/subscriptions", "organizations_url": "https://api.github.com/users/linsam/orgs", "repos_url": "https://api.github.com/users/linsam/repos", "events_url": "https://api.github.com/users/linsam/events{/privacy}", "received_events_url": "https://api.github.com/users/linsam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-10T14:01:02Z", "updated_at": "2016-03-10T17:50:23Z", "closed_at": "2016-03-10T15:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have an ORG field like\n\n`ORG:Example\\, Inc.;North West;Sales`\n\nAnd modify, it shows up in the editor as\n\n`Organisation : Example, Inc., North West, Sales`\n\nAnd gets saved as\n\n`ORG:Example;Inc.;North West;Sales`\n\nThat is, \"Example, Inc.\" became converted to \"Example\" with a sub org of \"Inc.\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/7", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/7/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/7/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/7", "id": 127118868, "node_id": "MDU6SXNzdWUxMjcxMTg4Njg=", "number": 7, "title": "Python error on rollback", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171324138, "node_id": "MDU6TGFiZWwxNzEzMjQxMzg=", "url": "https://api.github.com/repos/untitaker/python-atomicwrites/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-17T19:50:36Z", "updated_at": "2016-02-14T19:56:30Z", "closed_at": "2016-02-14T19:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when the folder is not writable:\n\n```\natomicwrites/__init__.py\", line 124, in _open\n    self.rollback(f)\nUnboundLocalError: local variable 'f' referenced before assignment\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/6", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/6/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/6/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/6", "id": 119934727, "node_id": "MDU6SXNzdWUxMTk5MzQ3Mjc=", "number": 6, "title": "Proper fsync on OS X", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171324140, "node_id": "MDU6TGFiZWwxNzEzMjQxNDA=", "url": "https://api.github.com/repos/untitaker/python-atomicwrites/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-02T12:51:37Z", "updated_at": "2016-07-26T19:59:10Z", "closed_at": "2016-07-26T19:59:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this is missing\n\n```\nif hasattr(fcntl, \"F_FULLFSYNC\"):\n    fcntl.fcntl(f.fileno(), fcntl.F_FULLFSYNC)\nelse:\n    os.fsync(f.fileno())\n```\n\non OSX.\n\nAs mentioned here [0] and here [1] fsync doesn't wait for the changes to hit the disk there.\n\n[0] https://lists.apple.com/archives/darwin-dev/2005/Feb/msg00072.html\n[1] https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/fsync.2.html#//apple_ref/doc/man/2/fsync\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/1", "repository_url": "https://api.github.com/repos/untitaker/python-atomicwrites", "labels_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/1/comments", "events_url": "https://api.github.com/repos/untitaker/python-atomicwrites/issues/1/events", "html_url": "https://github.com/untitaker/python-atomicwrites/issues/1", "id": 55807721, "node_id": "MDU6SXNzdWU1NTgwNzcyMQ==", "number": 1, "title": "Windows support?", "user": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-28T20:03:56Z", "updated_at": "2015-02-06T16:14:02Z", "closed_at": "2015-02-06T16:14:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See https://github.com/untitaker/rust-atomicwrites/issues/3\n", "performed_via_github_app": null, "score": 1.0}]}