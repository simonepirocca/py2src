{"total_count": 3060, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7881", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7881/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7881/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7881/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7881", "id": 696890515, "node_id": "MDU6SXNzdWU2OTY4OTA1MTU=", "number": 7881, "title": "Pascal language support", "user": {"login": "number201724", "id": 7903677, "node_id": "MDQ6VXNlcjc5MDM2Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7903677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/number201724", "html_url": "https://github.com/number201724", "followers_url": "https://api.github.com/users/number201724/followers", "following_url": "https://api.github.com/users/number201724/following{/other_user}", "gists_url": "https://api.github.com/users/number201724/gists{/gist_id}", "starred_url": "https://api.github.com/users/number201724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/number201724/subscriptions", "organizations_url": "https://api.github.com/users/number201724/orgs", "repos_url": "https://api.github.com/users/number201724/repos", "events_url": "https://api.github.com/users/number201724/events{/privacy}", "received_events_url": "https://api.github.com/users/number201724/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-09-09T14:59:39Z", "updated_at": "2020-09-09T19:12:25Z", "closed_at": "2020-09-09T19:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What language does this apply to?**\r\npascal language\r\n\r\n**Describe the problem you are trying to solve.**\r\n\r\n**Describe the solution you'd like**\r\nadd pascal language support and generate\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7872", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7872/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7872/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7872/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7872", "id": 692335321, "node_id": "MDU6SXNzdWU2OTIzMzUzMjE=", "number": 7872, "title": "Bug report", "user": {"login": "duahsdev", "id": 70723791, "node_id": "MDQ6VXNlcjcwNzIzNzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/70723791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duahsdev", "html_url": "https://github.com/duahsdev", "followers_url": "https://api.github.com/users/duahsdev/followers", "following_url": "https://api.github.com/users/duahsdev/following{/other_user}", "gists_url": "https://api.github.com/users/duahsdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/duahsdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duahsdev/subscriptions", "organizations_url": "https://api.github.com/users/duahsdev/orgs", "repos_url": "https://api.github.com/users/duahsdev/repos", "events_url": "https://api.github.com/users/duahsdev/events{/privacy}", "received_events_url": "https://api.github.com/users/duahsdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-03T20:45:06Z", "updated_at": "2020-09-03T20:45:18Z", "closed_at": "2020-09-03T20:45:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: master/v3.6.0/v3.5.0 etc.\r\nLanguage: C++/Java/Python/C#/Ruby/PHP/Objective-C/Javascript\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**What did you expect to see**\r\n\r\n**What did you see instead?**\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\n**Anything else we should know about your project / environment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7870", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7870/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7870/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7870/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7870", "id": 691458650, "node_id": "MDU6SXNzdWU2OTE0NTg2NTA=", "number": 7870, "title": "C# How to get messages to implement IBufferMessage?", "user": {"login": "MaximGurschi", "id": 18578793, "node_id": "MDQ6VXNlcjE4NTc4Nzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/18578793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaximGurschi", "html_url": "https://github.com/MaximGurschi", "followers_url": "https://api.github.com/users/MaximGurschi/followers", "following_url": "https://api.github.com/users/MaximGurschi/following{/other_user}", "gists_url": "https://api.github.com/users/MaximGurschi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaximGurschi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaximGurschi/subscriptions", "organizations_url": "https://api.github.com/users/MaximGurschi/orgs", "repos_url": "https://api.github.com/users/MaximGurschi/repos", "events_url": "https://api.github.com/users/MaximGurschi/events{/privacy}", "received_events_url": "https://api.github.com/users/MaximGurschi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-09-02T22:02:39Z", "updated_at": "2020-09-03T09:17:11Z", "closed_at": "2020-09-03T09:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've updated my .NET standard 2.1 project to reference the latest protobuf nuget package, and expected the following code to work:\r\n\r\nmyMessage.WriteTo(**Span**);\r\n\r\n, however it does not work because myMessage does not implement **IBufferMessage**. What is the trick to get the generated message to implement the interface?\r\n\r\nI'm currently referencing:\r\n\"Google.Protobuf\" Version=\"3.13.0\"\r\n\"Grpc.Tools\" Version=\"2.31.0\"\r\n\r\n, is the issue that Grpc.Tools was not updated yet?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7863", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7863/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7863/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7863/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7863", "id": 689387837, "node_id": "MDU6SXNzdWU2ODkzODc4Mzc=", "number": 7863, "title": "Different binary output for the same message using C++ and Python", "user": {"login": "lidizheng", "id": 7394928, "node_id": "MDQ6VXNlcjczOTQ5Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lidizheng", "html_url": "https://github.com/lidizheng", "followers_url": "https://api.github.com/users/lidizheng/followers", "following_url": "https://api.github.com/users/lidizheng/following{/other_user}", "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions", "organizations_url": "https://api.github.com/users/lidizheng/orgs", "repos_url": "https://api.github.com/users/lidizheng/repos", "events_url": "https://api.github.com/users/lidizheng/events{/privacy}", "received_events_url": "https://api.github.com/users/lidizheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-31T17:58:01Z", "updated_at": "2020-08-31T18:22:54Z", "closed_at": "2020-08-31T18:22:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue appears in OSS, but I used Google3 to reproduce. See internal version b/167236207.\r\n\r\n**What did you do?**\r\n\r\nProto message definition\r\n```protobuf\r\nsyntax = \"proto3\";\r\n\r\nimport \"google/protobuf/empty.proto\";\r\n\r\npackage codelab_grpc.test;\r\n\r\nmessage TestPassedRequest\r\n{\r\n    message TestPassedMsg\r\n    {\r\n        bool option = 1;\r\n        string data = 2;\r\n        uint32 data_size = 3;\r\n    }\r\n\r\n    TestPassedMsg message = 1;\r\n}\r\n\r\nmessage TestFailedRequest\r\n{\r\n    message TestFailedMsg\r\n    {\r\n        string data = 1;\r\n        uint32 data_size = 2;\r\n        bool option = 3;\r\n    }\r\n\r\n    TestFailedMsg message = 1;\r\n}\r\n\r\nservice TestServer\r\n{\r\n    rpc TestPassed (TestPassedRequest) returns (google.protobuf.Empty);\r\n\r\n    rpc TestFailed (TestFailedRequest) returns (google.protobuf.Empty);\r\n}\r\n\r\n```\r\n\r\nCreate a message in Python using\r\n```python\r\nrequest = test_pb2.TestFailedRequest.TestFailedMsg(data = \"blabla\", data_size = 500, option = True)\r\n```\r\n\r\nCreate a message in C++ using\r\n```C++\r\n::codelab_grpc::test::TestFailedRequest request;\r\nrequest.mutable_message()->set_data(\"blabla\");\r\nrequest.mutable_message()->set_data_size(500);\r\nrequest.mutable_message()->set_option(true);\r\n```\r\n\r\n**What did you expect to see**\r\n\r\nUnified output across languages.\r\n\r\n**What did you see instead?**\r\n\r\nThere are 2 bytes different in the serialized result:\r\n\r\n```\r\nC++ Encoded Message:    0A 0D 0A 06 62 6C 61 62 6C 61 10 F4 03 18 01\r\nPython Encoded Message:       0A 06 62 6C 61 62 6C 61 10 F4 03 18 01\r\n```\r\n\r\n**Anything else we should know about your project / environment**\r\n\r\nOriginated from an issue: https://github.com/grpc/grpc/issues/20802\r\n\r\nUsing Python client with message above causes INTERNAL error on the server side.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7861", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7861/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7861/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7861/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7861", "id": 688740530, "node_id": "MDU6SXNzdWU2ODg3NDA1MzA=", "number": 7861, "title": "Protobuf 3.13.0 Build error MSVC2019", "user": {"login": "jcduprey", "id": 70480241, "node_id": "MDQ6VXNlcjcwNDgwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/70480241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcduprey", "html_url": "https://github.com/jcduprey", "followers_url": "https://api.github.com/users/jcduprey/followers", "following_url": "https://api.github.com/users/jcduprey/following{/other_user}", "gists_url": "https://api.github.com/users/jcduprey/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcduprey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcduprey/subscriptions", "organizations_url": "https://api.github.com/users/jcduprey/orgs", "repos_url": "https://api.github.com/users/jcduprey/repos", "events_url": "https://api.github.com/users/jcduprey/events{/privacy}", "received_events_url": "https://api.github.com/users/jcduprey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-30T15:38:27Z", "updated_at": "2020-08-30T19:01:14Z", "closed_at": "2020-08-30T19:01:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: v3.13.0\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nWindows 10\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nVisual Studio 2019\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n\r\n1. Downloaded and unpacked protobuf-all-3.6.0.zip\r\n2. Followed instructions in cmake/README.md to set up NMake makefile based build (both debug and release configurations)\r\n3. Run Release build with nmake\r\n\r\n**What did you expect to see**\r\nBuild success\r\n\r\n**What did you see instead?**\r\nUnfamiliar console error:\r\n```\r\nC:\\Users\\...\\protobuf-3.13.0\\cmake\\build\\release>nmake\r\n\r\nMicrosoft (R) Program Maintenance Utility Version 14.27.29111.0\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n[  7%] Built target libprotobuf-lite\r\n[ 27%] Built target libprotobuf\r\n[ 48%] Built target libprotoc\r\n[ 49%] Built target protoc\r\n[ 49%] Built target gmock\r\n[ 50%] Built target gmock_main\r\n[ 93%] Built target tests\r\n[ 94%] Built target test_plugin\r\n[ 97%] Built target lite-test\r\n[ 97%] Building CXX object CMakeFiles/lite-arena-test.dir/C_/Users/.../protobuf-3.13.0/src/google/protobuf/map_lite_unittest.pb.cc.obj\r\nmap_lite_unittest.pb.cc\r\nC:\\Users\\...\\protobuf-3.13.0\\src\\google\\protobuf\\map_lite_unittest.pb.cc : fatal error C1083: Cannot open compiler generated file: '': Invalid argument\r\nNMAKE : fatal error U1077: 'C:\\PROGRA~2\\MICROS~3\\2019\\COMMUN~1\\VC\\Tools\\MSVC\\1427~1.291\\bin\\Hostx86\\x86\\cl.exe' : return code '0x1'\r\nStop.\r\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\bin\\HostX86\\x86\\nmake.exe\"' : return code '0x2'\r\nStop.\r\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\bin\\HostX86\\x86\\nmake.exe\"' : return code '0x2'\r\nStop.\r\n```\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\n**Anything else we should know about your project / environment**\r\nThe console output is condensed since I tried rerunning `nmake` after it failed with the same error at 97% the first time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7859", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7859/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7859/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7859/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7859", "id": 688483610, "node_id": "MDU6SXNzdWU2ODg0ODM2MTA=", "number": 7859, "title": "can not create java file from .proto", "user": {"login": "xaidanwang", "id": 28696431, "node_id": "MDQ6VXNlcjI4Njk2NDMx", "avatar_url": "https://avatars0.githubusercontent.com/u/28696431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xaidanwang", "html_url": "https://github.com/xaidanwang", "followers_url": "https://api.github.com/users/xaidanwang/followers", "following_url": "https://api.github.com/users/xaidanwang/following{/other_user}", "gists_url": "https://api.github.com/users/xaidanwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/xaidanwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xaidanwang/subscriptions", "organizations_url": "https://api.github.com/users/xaidanwang/orgs", "repos_url": "https://api.github.com/users/xaidanwang/repos", "events_url": "https://api.github.com/users/xaidanwang/events{/privacy}", "received_events_url": "https://api.github.com/users/xaidanwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-29T07:50:00Z", "updated_at": "2020-08-29T20:40:50Z", "closed_at": "2020-08-29T08:13:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: 3.13.0  ..\r\nLanguage: Java\r\noperating system: Windows 10\r\n\r\ncreate file commandLine:\r\nprotoc.exe --jar_out=. addressbook.proto\r\n--jar_out: protoc-gen-jar: Plugin failed with status code 1.\r\n\r\naddressbook.proto\r\n\r\nsyntax = \"proto3\";\r\npackage tutorial;\r\noption java_package = \"com.example.tutorial\";\r\noption java_outer_classname = \"AddressBookProtos\";\r\nmessage Person {\r\n   string name = 1;\r\n   int32 id = 2;\r\n   string email = 3;\r\n\r\n  enum PhoneType {\r\n    MOBILE = 0;\r\n    HOME = 1;\r\n    WORK = 2;\r\n  }\r\n\r\n  message PhoneNumber {\r\n     string number = 1;\r\n     PhoneType type = 2;\r\n  }\r\n\r\n  repeated PhoneNumber phones = 4;\r\n}\r\n\r\nmessage AddressBook {\r\n  repeated Person people = 1;\r\n}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7849", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7849/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7849/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7849/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7849", "id": 686205249, "node_id": "MDU6SXNzdWU2ODYyMDUyNDk=", "number": 7849, "title": "Generate incorrect source files with cross referenced types", "user": {"login": "wasphin", "id": 1237906, "node_id": "MDQ6VXNlcjEyMzc5MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1237906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasphin", "html_url": "https://github.com/wasphin", "followers_url": "https://api.github.com/users/wasphin/followers", "following_url": "https://api.github.com/users/wasphin/following{/other_user}", "gists_url": "https://api.github.com/users/wasphin/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasphin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasphin/subscriptions", "organizations_url": "https://api.github.com/users/wasphin/orgs", "repos_url": "https://api.github.com/users/wasphin/repos", "events_url": "https://api.github.com/users/wasphin/events{/privacy}", "received_events_url": "https://api.github.com/users/wasphin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-26T10:26:00Z", "updated_at": "2020-08-27T01:47:05Z", "closed_at": "2020-08-26T15:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: v3.5.0\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\n\r\nLinux RHEL8\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n\r\ngcc (GCC) 8.3.1 20191121\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n``foobar.proto`` with content:\r\n```protobuf\r\nmessage Foo {\r\n    optional Bar bar = 1;\r\n}\r\n\r\nmessage Bar {\r\n    optional Foo foo = 1;\r\n}\r\n```\r\n\r\n**What did you expect to see**\r\n```c++\r\nvoid InitDefaultsFooImpl();\r\nvoid InitDefaultsFoo();\r\nvoid InitDefaultsBarImpl();\r\nvoid InitDefaultsBar();\r\n```\r\n\r\n**What did you see instead?**\r\n```c++\r\nvoid InitDefaultsBarImpl();\r\nvoid InitDefaultsBar();\r\n```\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\n**Anything else we should know about your project / environment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7833", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7833/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7833/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7833/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7833", "id": 682562376, "node_id": "MDU6SXNzdWU2ODI1NjIzNzY=", "number": 7833, "title": "How can I generate java mutable message bean.", "user": {"login": "huhuang03", "id": 4716706, "node_id": "MDQ6VXNlcjQ3MTY3MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4716706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huhuang03", "html_url": "https://github.com/huhuang03", "followers_url": "https://api.github.com/users/huhuang03/followers", "following_url": "https://api.github.com/users/huhuang03/following{/other_user}", "gists_url": "https://api.github.com/users/huhuang03/gists{/gist_id}", "starred_url": "https://api.github.com/users/huhuang03/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huhuang03/subscriptions", "organizations_url": "https://api.github.com/users/huhuang03/orgs", "repos_url": "https://api.github.com/users/huhuang03/repos", "events_url": "https://api.github.com/users/huhuang03/events{/privacy}", "received_events_url": "https://api.github.com/users/huhuang03/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 416407785, "node_id": "MDU6TGFiZWw0MTY0MDc3ODU=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/java-lite", "name": "java-lite", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-20T09:24:37Z", "updated_at": "2020-09-08T10:45:51Z", "closed_at": "2020-09-08T10:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for feature requests (including cleanup requests) only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n\r\n**What language does this apply to?**\r\nIf it's a proto syntax change, is it for proto2 or proto3?\r\nproto2\r\n\r\nIf it's about generated code change, what programming language?\r\n\r\njava\r\n\r\n**Describe the problem you are trying to solve.**\r\nI have an old android project, which use the java-nano generate, which generate filed modifiable bean. But now java-nano is deprecated. I upgrade t use java-lite, which can only generate the immutable bean. But in the old android project. The api designed used many bean field modify in-place feature.\r\n\r\n**Describe the solution you'd like**\r\nCan I generate the java Message bean as mutable?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7829", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7829/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7829/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7829/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7829", "id": 681830289, "node_id": "MDU6SXNzdWU2ODE4MzAyODk=", "number": 7829, "title": "Please ask the owner of this code generator to support proto3 optional.--dart_out: ", "user": {"login": "girirajthara", "id": 24633011, "node_id": "MDQ6VXNlcjI0NjMzMDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/24633011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girirajthara", "html_url": "https://github.com/girirajthara", "followers_url": "https://api.github.com/users/girirajthara/followers", "following_url": "https://api.github.com/users/girirajthara/following{/other_user}", "gists_url": "https://api.github.com/users/girirajthara/gists{/gist_id}", "starred_url": "https://api.github.com/users/girirajthara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girirajthara/subscriptions", "organizations_url": "https://api.github.com/users/girirajthara/orgs", "repos_url": "https://api.github.com/users/girirajthara/repos", "events_url": "https://api.github.com/users/girirajthara/events{/privacy}", "received_events_url": "https://api.github.com/users/girirajthara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-19T13:14:02Z", "updated_at": "2020-08-19T15:26:06Z", "closed_at": "2020-08-19T15:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for feature requests (including cleanup requests) only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n\r\n**What language does this apply to?**\r\n proto3?\r\nIf it's about generated code change, what programming language?\r\ndart\r\n\r\n**Describe the problem you are trying to solve.**\r\n --experimental_allow_proto3_optional in dart\r\n\r\n**Describe the solution you'd like**\r\n  All other languages have it. It would be great as we want it in dart\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7820", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7820/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7820/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7820/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7820", "id": 680188568, "node_id": "MDU6SXNzdWU2ODAxODg1Njg=", "number": 7820, "title": "Release notes are not up to date", "user": {"login": "elharo", "id": 1005544, "node_id": "MDQ6VXNlcjEwMDU1NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1005544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elharo", "html_url": "https://github.com/elharo", "followers_url": "https://api.github.com/users/elharo/followers", "following_url": "https://api.github.com/users/elharo/following{/other_user}", "gists_url": "https://api.github.com/users/elharo/gists{/gist_id}", "starred_url": "https://api.github.com/users/elharo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elharo/subscriptions", "organizations_url": "https://api.github.com/users/elharo/orgs", "repos_url": "https://api.github.com/users/elharo/repos", "events_url": "https://api.github.com/users/elharo/events{/privacy}", "received_events_url": "https://api.github.com/users/elharo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307316923, "node_id": "MDU6TGFiZWwzMDczMTY5MjM=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/packaging%20&%20distribution", "name": "packaging & distribution", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "acozzette", "id": 1115459, "node_id": "MDQ6VXNlcjExMTU0NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1115459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acozzette", "html_url": "https://github.com/acozzette", "followers_url": "https://api.github.com/users/acozzette/followers", "following_url": "https://api.github.com/users/acozzette/following{/other_user}", "gists_url": "https://api.github.com/users/acozzette/gists{/gist_id}", "starred_url": "https://api.github.com/users/acozzette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acozzette/subscriptions", "organizations_url": "https://api.github.com/users/acozzette/orgs", "repos_url": "https://api.github.com/users/acozzette/repos", "events_url": "https://api.github.com/users/acozzette/events{/privacy}", "received_events_url": "https://api.github.com/users/acozzette/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "acozzette", "id": 1115459, "node_id": "MDQ6VXNlcjExMTU0NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1115459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acozzette", "html_url": "https://github.com/acozzette", "followers_url": "https://api.github.com/users/acozzette/followers", "following_url": "https://api.github.com/users/acozzette/following{/other_user}", "gists_url": "https://api.github.com/users/acozzette/gists{/gist_id}", "starred_url": "https://api.github.com/users/acozzette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acozzette/subscriptions", "organizations_url": "https://api.github.com/users/acozzette/orgs", "repos_url": "https://api.github.com/users/acozzette/repos", "events_url": "https://api.github.com/users/acozzette/events{/privacy}", "received_events_url": "https://api.github.com/users/acozzette/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-17T12:13:32Z", "updated_at": "2020-08-19T17:31:32Z", "closed_at": "2020-08-19T17:31:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/protocolbuffers/protobuf/blob/master/CHANGES.txt stops at 3.12.3 and unreleased versions. No 3.12.4 or 3.13.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7818", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7818/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7818/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7818/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7818", "id": 679858213, "node_id": "MDU6SXNzdWU2Nzk4NTgyMTM=", "number": 7818, "title": "[C++] Allow serialization to *any* stream using type traits/templates", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250677079, "node_id": "MDU6TGFiZWwyNTA2NzcwNzk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c++", "name": "c++", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T00:21:39Z", "updated_at": "2020-08-20T16:49:00Z", "closed_at": "2020-08-20T16:49:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What language does this apply to?**\r\nC++\r\n\r\n**Describe the problem you are trying to solve.**\r\nDirectly serialize to custom classes not inheriting from `std::ostream` instead of going the detour over creating a string.\r\n\r\nSpecifically, I want to serialize directly to ZeroMQ via [`zmqpp::message`](https://github.com/zeromq/zmqpp/blob/85ae96020f2376c53d2176e04e88e8e51021b748/src/zmqpp/message.hpp#L260-L277).\r\n\r\n**Describe the solution you'd like**\r\nProbably it would be best to just use the `operator<<()` in combination with a template.\r\n```\r\ntemplate <class T>\r\nvoid SerializeToStream(T& stream) {\r\n    stream << \"serialized content\";\r\n}\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nConverting to string and then composing ZeroMQ messages.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7816", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7816/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7816/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7816/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7816", "id": 679803979, "node_id": "MDU6SXNzdWU2Nzk4MDM5Nzk=", "number": 7816, "title": "bundled_php.c is missing.", "user": {"login": "walliammeng", "id": 65137233, "node_id": "MDQ6VXNlcjY1MTM3MjMz", "avatar_url": "https://avatars3.githubusercontent.com/u/65137233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walliammeng", "html_url": "https://github.com/walliammeng", "followers_url": "https://api.github.com/users/walliammeng/followers", "following_url": "https://api.github.com/users/walliammeng/following{/other_user}", "gists_url": "https://api.github.com/users/walliammeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/walliammeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walliammeng/subscriptions", "organizations_url": "https://api.github.com/users/walliammeng/orgs", "repos_url": "https://api.github.com/users/walliammeng/repos", "events_url": "https://api.github.com/users/walliammeng/events{/privacy}", "received_events_url": "https://api.github.com/users/walliammeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-16T18:39:42Z", "updated_at": "2020-08-17T17:12:23Z", "closed_at": "2020-08-17T17:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": " master/v3.13.0\r\nPHP\r\n\r\nmissing file. Had you forgot to upload bundled_php.c into github?\r\n\r\n![image](https://user-images.githubusercontent.com/65137233/90341522-d3864480-e032-11ea-90bf-35521a865685.png)\r\n![image](https://user-images.githubusercontent.com/65137233/90341524-d8e38f00-e032-11ea-9e1c-b856b674c9bf.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7813", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7813/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7813/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7813/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7813", "id": 679507315, "node_id": "MDU6SXNzdWU2Nzk1MDczMTU=", "number": 7813, "title": "PHP ext - please fix package.xml with real changes", "user": {"login": "remicollet", "id": 270445, "node_id": "MDQ6VXNlcjI3MDQ0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/270445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remicollet", "html_url": "https://github.com/remicollet", "followers_url": "https://api.github.com/users/remicollet/followers", "following_url": "https://api.github.com/users/remicollet/following{/other_user}", "gists_url": "https://api.github.com/users/remicollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/remicollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remicollet/subscriptions", "organizations_url": "https://api.github.com/users/remicollet/orgs", "repos_url": "https://api.github.com/users/remicollet/repos", "events_url": "https://api.github.com/users/remicollet/events{/privacy}", "received_events_url": "https://api.github.com/users/remicollet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307319099, "node_id": "MDU6TGFiZWwzMDczMTkwOTk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/php", "name": "php", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-15T05:51:46Z", "updated_at": "2020-08-23T16:29:19Z", "closed_at": "2020-08-23T16:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "See: \r\nhttps://pecl.php.net/package-changelog.php?package=protobuf\r\n\r\nAll version (including RC) have \"GA release\" which have no value for users.\r\n\r\nPlease fix your release process to provide something useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7812", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7812/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7812/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7812/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7812", "id": 679505013, "node_id": "MDU6SXNzdWU2Nzk1MDUwMTM=", "number": 7812, "title": "PHP ext version 3.13.0 - Build Warning", "user": {"login": "remicollet", "id": 270445, "node_id": "MDQ6VXNlcjI3MDQ0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/270445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remicollet", "html_url": "https://github.com/remicollet", "followers_url": "https://api.github.com/users/remicollet/followers", "following_url": "https://api.github.com/users/remicollet/following{/other_user}", "gists_url": "https://api.github.com/users/remicollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/remicollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remicollet/subscriptions", "organizations_url": "https://api.github.com/users/remicollet/orgs", "repos_url": "https://api.github.com/users/remicollet/repos", "events_url": "https://api.github.com/users/remicollet/events{/privacy}", "received_events_url": "https://api.github.com/users/remicollet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307319099, "node_id": "MDU6TGFiZWwzMDczMTkwOTk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/php", "name": "php", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "TeBoring", "id": 5195749, "node_id": "MDQ6VXNlcjUxOTU3NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5195749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeBoring", "html_url": "https://github.com/TeBoring", "followers_url": "https://api.github.com/users/TeBoring/followers", "following_url": "https://api.github.com/users/TeBoring/following{/other_user}", "gists_url": "https://api.github.com/users/TeBoring/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeBoring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeBoring/subscriptions", "organizations_url": "https://api.github.com/users/TeBoring/orgs", "repos_url": "https://api.github.com/users/TeBoring/repos", "events_url": "https://api.github.com/users/TeBoring/events{/privacy}", "received_events_url": "https://api.github.com/users/TeBoring/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TeBoring", "id": 5195749, "node_id": "MDQ6VXNlcjUxOTU3NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5195749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeBoring", "html_url": "https://github.com/TeBoring", "followers_url": "https://api.github.com/users/TeBoring/followers", "following_url": "https://api.github.com/users/TeBoring/following{/other_user}", "gists_url": "https://api.github.com/users/TeBoring/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeBoring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeBoring/subscriptions", "organizations_url": "https://api.github.com/users/TeBoring/orgs", "repos_url": "https://api.github.com/users/TeBoring/repos", "events_url": "https://api.github.com/users/TeBoring/events{/privacy}", "received_events_url": "https://api.github.com/users/TeBoring/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-08-15T05:30:54Z", "updated_at": "2020-08-18T03:26:18Z", "closed_at": "2020-08-18T03:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Building against PHP 7.4\r\n\r\n```\r\np74-php-pecl-protobuf-3.13.0/NTS/names.c  -fPIC -DPIC -o .libs/names.o\r\n/dev/shm/BUILD/php74-php-pecl-protobuf-3.13.0/NTS/message.c: In function 'Message_write_property':\r\n/dev/shm/BUILD/php74-php-pecl-protobuf-3.13.0/NTS/message.c:269:3: warning: 'return' with no value, in function returning non-void [-Wreturn-type]\r\n  269 |   return;\r\n      |   ^~~~~~\r\n/dev/shm/BUILD/php74-php-pecl-protobuf-3.13.0/NTS/message.c:245:25: note: declared here\r\n  245 | static PROTO_RETURN_VAL Message_write_property(\r\n      |                         ^~~~~~~~~~~~~~~~~~~~~~\r\n/dev/shm/BUILD/php74-php-pecl-protobuf-3.13.0/NTS/message.c:276:3: warning: 'return' with no value, in function returning non-void [-Wreturn-type]\r\n  276 |   return;\r\n      |   ^~~~~~\r\n/dev/shm/BUILD/php74-php-pecl-protobuf-3.13.0/NTS/message.c:245:25: note: declared here\r\n  245 | static PROTO_RETURN_VAL Message_write_property(\r\n      |                         ^~~~~~~~~~~~~~~~~~~~~~\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7807", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7807/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7807/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7807/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7807", "id": 678972772, "node_id": "MDU6SXNzdWU2Nzg5NzI3NzI=", "number": 7807, "title": "Protobuf uses legacy go package name", "user": {"login": "pkpfr", "id": 54272108, "node_id": "MDQ6VXNlcjU0MjcyMTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/54272108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkpfr", "html_url": "https://github.com/pkpfr", "followers_url": "https://api.github.com/users/pkpfr/followers", "following_url": "https://api.github.com/users/pkpfr/following{/other_user}", "gists_url": "https://api.github.com/users/pkpfr/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkpfr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkpfr/subscriptions", "organizations_url": "https://api.github.com/users/pkpfr/orgs", "repos_url": "https://api.github.com/users/pkpfr/repos", "events_url": "https://api.github.com/users/pkpfr/events{/privacy}", "received_events_url": "https://api.github.com/users/pkpfr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T07:50:15Z", "updated_at": "2020-08-20T16:37:07Z", "closed_at": "2020-08-20T16:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.12.4\r\nLanguage: Go\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nAll\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\ngo 1.14.6\r\n\r\n**What did you do?**\r\nThe GitHub project github.com/golang/protobuf states that it has been superseded by google.golang.org/protobuf but protobuf is still uses the old go package name.\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage google.protobuf;\r\n\r\noption csharp_namespace = \"Google.Protobuf.WellKnownTypes\";\r\noption cc_enable_arenas = true;\r\noption go_package = \"github.com/golang/protobuf/ptypes/timestamppb\";\r\noption java_package = \"com.google.protobuf\";\r\noption java_outer_classname = \"TimestampProto\";\r\noption java_multiple_files = true;\r\noption objc_class_prefix = \"GPB\";\r\n```\r\n\r\n**What did you expect to see**\r\n```\r\noption go_package = \"google.golang.org/protobuf/types/known/timestamp\";\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7801", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7801/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7801/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7801/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7801", "id": 677862612, "node_id": "MDU6SXNzdWU2Nzc4NjI2MTI=", "number": 7801, "title": "segmentation fault for protos with optional fields", "user": {"login": "arithmetic1728", "id": 58957152, "node_id": "MDQ6VXNlcjU4OTU3MTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/58957152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arithmetic1728", "html_url": "https://github.com/arithmetic1728", "followers_url": "https://api.github.com/users/arithmetic1728/followers", "following_url": "https://api.github.com/users/arithmetic1728/following{/other_user}", "gists_url": "https://api.github.com/users/arithmetic1728/gists{/gist_id}", "starred_url": "https://api.github.com/users/arithmetic1728/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arithmetic1728/subscriptions", "organizations_url": "https://api.github.com/users/arithmetic1728/orgs", "repos_url": "https://api.github.com/users/arithmetic1728/repos", "events_url": "https://api.github.com/users/arithmetic1728/events{/privacy}", "received_events_url": "https://api.github.com/users/arithmetic1728/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, {"login": "anandolee", "id": 11618033, "node_id": "MDQ6VXNlcjExNjE4MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11618033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandolee", "html_url": "https://github.com/anandolee", "followers_url": "https://api.github.com/users/anandolee/followers", "following_url": "https://api.github.com/users/anandolee/following{/other_user}", "gists_url": "https://api.github.com/users/anandolee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandolee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandolee/subscriptions", "organizations_url": "https://api.github.com/users/anandolee/orgs", "repos_url": "https://api.github.com/users/anandolee/repos", "events_url": "https://api.github.com/users/anandolee/events{/privacy}", "received_events_url": "https://api.github.com/users/anandolee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-08-12T17:35:50Z", "updated_at": "2020-08-14T18:20:50Z", "closed_at": "2020-08-14T18:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: v3.12.4\r\nLanguage: Python\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\ngLinux\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\npython 3.6.9, gcc 9.3.0\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n\r\n  1.  Write the following to `foo.proto`:\r\n\r\n```\r\nsyntax = \"proto3\";\r\n \r\nmessage Nested {\r\n  optional bool test = 1;\r\n}\r\n \r\nmessage Foo {\r\n  optional string name = 1;\r\n  Nested nested = 3;\r\n}\r\n```\r\n\r\n  2. Compile with `protoc`: `protoc --experimental_allow_proto3_optional --python_out=. foo.proto`\r\n\r\n  3. Write the following to `repro.py`:\r\n\r\n```py\r\nfrom foo_pb2 import Foo\r\n \r\nfoo = Foo()\r\nfoo.name = 'name'\r\nfoo.nested.test = False\r\n \r\nfoo.Clear()\r\n```\r\n  \r\n4. Run: `python repro.py`, segv happens at line `foo.Clear()`\r\n```\r\npython repro.py \r\nFatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x00007f981a49c4c0 (most recent call first):\r\n  File \"repro.py\", line 7 in <module>\r\nSegmentation fault\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7798", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7798/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7798/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7798/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7798", "id": 677636370, "node_id": "MDU6SXNzdWU2Nzc2MzYzNzA=", "number": 7798, "title": "Add Lua file generation function", "user": {"login": "1050229", "id": 25715480, "node_id": "MDQ6VXNlcjI1NzE1NDgw", "avatar_url": "https://avatars1.githubusercontent.com/u/25715480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1050229", "html_url": "https://github.com/1050229", "followers_url": "https://api.github.com/users/1050229/followers", "following_url": "https://api.github.com/users/1050229/following{/other_user}", "gists_url": "https://api.github.com/users/1050229/gists{/gist_id}", "starred_url": "https://api.github.com/users/1050229/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1050229/subscriptions", "organizations_url": "https://api.github.com/users/1050229/orgs", "repos_url": "https://api.github.com/users/1050229/repos", "events_url": "https://api.github.com/users/1050229/events{/privacy}", "received_events_url": "https://api.github.com/users/1050229/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-12T12:05:48Z", "updated_at": "2020-08-24T13:41:07Z", "closed_at": "2020-08-12T15:48:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "protoc_release.exe --lua_out=./ game.proto\r\n\r\nThis does not generate Lua protocol files\r\n\r\nWhat should I do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7795", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7795/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7795/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7795/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7795", "id": 677065551, "node_id": "MDU6SXNzdWU2NzcwNjU1NTE=", "number": 7795, "title": "why cant define onemore repeated section in one structure", "user": {"login": "Blakeyi", "id": 20620315, "node_id": "MDQ6VXNlcjIwNjIwMzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/20620315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blakeyi", "html_url": "https://github.com/Blakeyi", "followers_url": "https://api.github.com/users/Blakeyi/followers", "following_url": "https://api.github.com/users/Blakeyi/following{/other_user}", "gists_url": "https://api.github.com/users/Blakeyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blakeyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blakeyi/subscriptions", "organizations_url": "https://api.github.com/users/Blakeyi/orgs", "repos_url": "https://api.github.com/users/Blakeyi/repos", "events_url": "https://api.github.com/users/Blakeyi/events{/privacy}", "received_events_url": "https://api.github.com/users/Blakeyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T17:39:20Z", "updated_at": "2020-08-12T10:31:34Z", "closed_at": "2020-08-12T10:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": " we defined a structure like the follow with golang\uff1a\r\nmessage tokenMessage{\r\n  Header header =1\uff1b\r\n  uint32 srvtokenType =2;\r\n  repeated uint32 srvtokenID = 3;\r\n  uint32 clttokenType2 = 4;\r\n  repeated uint32  clttokenID = 5;\r\n}\r\n i cant Parse the structure  in the remote\uff0c\r\nbut\uff0c if i only use one repeated  \uff0cthen i can  Parse the structure success\r\ncan you tell me the reason\uff1f\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7787", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7787/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7787/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7787/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7787", "id": 675340405, "node_id": "MDU6SXNzdWU2NzUzNDA0MDU=", "number": 7787, "title": "Linking error with protobuf on windows", "user": {"login": "NavaniSrivastava", "id": 48958672, "node_id": "MDQ6VXNlcjQ4OTU4Njcy", "avatar_url": "https://avatars0.githubusercontent.com/u/48958672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NavaniSrivastava", "html_url": "https://github.com/NavaniSrivastava", "followers_url": "https://api.github.com/users/NavaniSrivastava/followers", "following_url": "https://api.github.com/users/NavaniSrivastava/following{/other_user}", "gists_url": "https://api.github.com/users/NavaniSrivastava/gists{/gist_id}", "starred_url": "https://api.github.com/users/NavaniSrivastava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NavaniSrivastava/subscriptions", "organizations_url": "https://api.github.com/users/NavaniSrivastava/orgs", "repos_url": "https://api.github.com/users/NavaniSrivastava/repos", "events_url": "https://api.github.com/users/NavaniSrivastava/events{/privacy}", "received_events_url": "https://api.github.com/users/NavaniSrivastava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T23:21:04Z", "updated_at": "2020-08-19T09:18:28Z", "closed_at": "2020-08-19T09:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.12.4\r\nLanguage: C++\r\n\r\n**What operating system and version?**\r\nWindows 10\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nMicrosoft Visual Studio 2019\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Configured protobuf using \"cmake -G \"Visual Studio 16 2019\" -A x64 -DCMAKE_BUILD_TYPE=Release -Dprotobuf_WITH_ZLIB=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF -DCMAKE_INSTALL_PREFIX=../../../../install ../..\"\r\n2. Compiled solution in Microsoft Visual Studio 2019 for x64 Release Version\r\n3. Created .cc and .h file for .proto file using generated protoc binary\r\n4. Added .cc, .h and libprotobuf.lib, libprotoc.lib and libprotobuf.lib to my Qt project.\r\n5. Compiled the code. It gives linking error saying \"qtmain.lib(qtmain_win.obj):- 1: error: LNK2019: unresolved external symbol main referenced in function WinMain\". On removing compilation of .cc, .h and all protobuf libraries, build works fine. We need to disable entry point for these libraries.\r\n\r\n**What did you expect to see**\r\nLibraries should not have entry point\r\n\r\n**What did you see instead?**\r\nApplication received winmain from protbuf\r\nqtmain.lib(qtmain_win.obj):- 1: error: LNK2019: unresolved external symbol main referenced in function WinMain\r\nwin32-build\\bin\\release\\Test_app.exe:- 1: error: LNK1120: 1 unresolved externals\r\n\r\n**Anything else we should know about your project / environment**\r\nI am including protobuf in application built on Qt 5.15.0 version. On building the same version of protobuf for linux, everything works fine for my application. Issue comes while I use it in windows.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7785", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7785/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7785/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7785/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7785", "id": 674886053, "node_id": "MDU6SXNzdWU2NzQ4ODYwNTM=", "number": 7785, "title": "protoc --go_out=plugins=grpc,mode=server:. mode/echo.proto  not work", "user": {"login": "iweixubin", "id": 35992465, "node_id": "MDQ6VXNlcjM1OTkyNDY1", "avatar_url": "https://avatars0.githubusercontent.com/u/35992465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iweixubin", "html_url": "https://github.com/iweixubin", "followers_url": "https://api.github.com/users/iweixubin/followers", "following_url": "https://api.github.com/users/iweixubin/following{/other_user}", "gists_url": "https://api.github.com/users/iweixubin/gists{/gist_id}", "starred_url": "https://api.github.com/users/iweixubin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iweixubin/subscriptions", "organizations_url": "https://api.github.com/users/iweixubin/orgs", "repos_url": "https://api.github.com/users/iweixubin/repos", "events_url": "https://api.github.com/users/iweixubin/events{/privacy}", "received_events_url": "https://api.github.com/users/iweixubin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T09:23:20Z", "updated_at": "2020-08-11T22:39:05Z", "closed_at": "2020-08-11T22:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Go  is server side, i don't want gen client code\r\nprotoc --go_out=plugins=grpc,**mode=server**:. mode/echo.proto\r\n\r\nC# is client side, i don't want gen server code\r\nprotoc  --plugin=protoc-gen-grpc=grpc_csharp_plugin.exe  **--grpc_opt=no_server**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7784", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7784/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7784/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7784/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7784", "id": 674742743, "node_id": "MDU6SXNzdWU2NzQ3NDI3NDM=", "number": 7784, "title": "optional serialize error in 4.0.0-RC2", "user": {"login": "imsoul", "id": 4151408, "node_id": "MDQ6VXNlcjQxNTE0MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4151408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imsoul", "html_url": "https://github.com/imsoul", "followers_url": "https://api.github.com/users/imsoul/followers", "following_url": "https://api.github.com/users/imsoul/following{/other_user}", "gists_url": "https://api.github.com/users/imsoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/imsoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imsoul/subscriptions", "organizations_url": "https://api.github.com/users/imsoul/orgs", "repos_url": "https://api.github.com/users/imsoul/repos", "events_url": "https://api.github.com/users/imsoul/events{/privacy}", "received_events_url": "https://api.github.com/users/imsoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-07T04:11:42Z", "updated_at": "2020-08-17T17:08:16Z", "closed_at": "2020-08-17T17:08:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 4.0.0-RC2.\r\nLanguage: PHP\r\nSystem: Linux\r\n\r\ncomposer package: \r\n\r\n`composer require google/protobuf 4.0.0-RC2`\r\n\r\nexample:\r\n\r\n```\r\nmessage PRoom{\r\n  sint64 roomid = 1;\r\n  optional sint64 uid = 2;\r\n  string title = 3;\r\n  optional sint32 styleid = 4;\r\n  optional sint32 level = 5;\r\n}\r\n```\r\n\r\n```\r\n$room = [\r\n            'roomid'=>1,\r\n            'uid'=>1000,\r\n            'title'=>'101',\r\n            'style'=>1,\r\n            'level'=>1\r\n        ];\r\n$protoRoom = new PRoom($room);\r\nvar_dump($protoRoom->serializeToJsonString());\r\n\r\n//output:  {\"roomid\":\"1\",\"title\":\"101\"}\r\n\r\n```\r\n\r\nThe fields with optional had gone away.\r\nBut when I use the PECL package, it's OK.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7780", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7780/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7780/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7780/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7780", "id": 673635778, "node_id": "MDU6SXNzdWU2NzM2MzU3Nzg=", "number": 7780, "title": "[C++] Segmentation Fault when not explicitly calling message that has string type inside oneof type ", "user": {"login": "alealv", "id": 9395091, "node_id": "MDQ6VXNlcjkzOTUwOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9395091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alealv", "html_url": "https://github.com/alealv", "followers_url": "https://api.github.com/users/alealv/followers", "following_url": "https://api.github.com/users/alealv/following{/other_user}", "gists_url": "https://api.github.com/users/alealv/gists{/gist_id}", "starred_url": "https://api.github.com/users/alealv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alealv/subscriptions", "organizations_url": "https://api.github.com/users/alealv/orgs", "repos_url": "https://api.github.com/users/alealv/repos", "events_url": "https://api.github.com/users/alealv/events{/privacy}", "received_events_url": "https://api.github.com/users/alealv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-05T15:35:56Z", "updated_at": "2020-08-05T16:08:01Z", "closed_at": "2020-08-05T16:08:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm facing an issue (segmentation fault) if I don't explicitly call a function related to Message on my code.\r\n\r\nTo be more clear, I have the following `test.proto`:\r\n\r\n\r\n```\r\nmessage Message {\r\n    \r\n    ...\r\n    // Some other fields\r\n    ...\r\n\r\n    SubMessage submsg = 10;\r\n}\r\n\r\nmessage SubMessage {\r\n\r\n    oneof type {\r\n        string dummy = 1;\r\n    }\r\n}\r\n```\r\n\r\nAnd my GRPC client looks like:\r\n\r\n```\r\n\r\nstd::optional<test::Message> Config(const std::string& dummy) const {\r\n    asr::Message msg;\r\n\r\n    // Some code modifying other \r\n\r\n\r\n    if (!dummy.empty()) {\r\n        msg.mutable_submsg()->set_dummy(dummy);\r\n    }\r\n\r\n    return msg;\r\n}\r\n\r\n```\r\nThe code compiles without any issue or warning. Then, at some point, when executing the GRPC client and tries to send a message it causes a Segmentation Fault.\r\nThere is no other place where `submsg` is being called and the same happens if I comment the whole **if** statement block.\r\n\r\nNow, if I always call one of these lines, the problem disappears.\r\n\r\n```\r\nmsg.mutable_submsg()->set_dummy(\"\");\r\nmsg.mutable_submsg();\r\n```\r\nBut of course, I think this is a bug because otherwise, I will be setting `submsg` and the function `has_submsg` won't make any sense.\r\n\r\nVersion: v3.12.2.\r\nLanguage: C++\r\nOS: Linux 5.7.9-050709-generic\r\nCompiler: gcc (Ubuntu 8.4.0-3ubuntu2) 8.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7770", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7770/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7770/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7770/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7770", "id": 670327733, "node_id": "MDU6SXNzdWU2NzAzMjc3MzM=", "number": 7770, "title": "Duplicate symbols with Unity (Jumbo) builds", "user": {"login": "greenkalx", "id": 13293941, "node_id": "MDQ6VXNlcjEzMjkzOTQx", "avatar_url": "https://avatars2.githubusercontent.com/u/13293941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greenkalx", "html_url": "https://github.com/greenkalx", "followers_url": "https://api.github.com/users/greenkalx/followers", "following_url": "https://api.github.com/users/greenkalx/following{/other_user}", "gists_url": "https://api.github.com/users/greenkalx/gists{/gist_id}", "starred_url": "https://api.github.com/users/greenkalx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greenkalx/subscriptions", "organizations_url": "https://api.github.com/users/greenkalx/orgs", "repos_url": "https://api.github.com/users/greenkalx/repos", "events_url": "https://api.github.com/users/greenkalx/events{/privacy}", "received_events_url": "https://api.github.com/users/greenkalx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 205322238, "node_id": "MDU6TGFiZWwyMDUzMjIyMzg=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c%23", "name": "c#", "color": "bfd4f2", "default": false, "description": null}, {"id": 250677079, "node_id": "MDU6TGFiZWwyNTA2NzcwNzk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c++", "name": "c++", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jtattermusch", "id": 9939684, "node_id": "MDQ6VXNlcjk5Mzk2ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtattermusch", "html_url": "https://github.com/jtattermusch", "followers_url": "https://api.github.com/users/jtattermusch/followers", "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}", "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions", "organizations_url": "https://api.github.com/users/jtattermusch/orgs", "repos_url": "https://api.github.com/users/jtattermusch/repos", "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}", "received_events_url": "https://api.github.com/users/jtattermusch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jtattermusch", "id": 9939684, "node_id": "MDQ6VXNlcjk5Mzk2ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtattermusch", "html_url": "https://github.com/jtattermusch", "followers_url": "https://api.github.com/users/jtattermusch/followers", "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}", "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions", "organizations_url": "https://api.github.com/users/jtattermusch/orgs", "repos_url": "https://api.github.com/users/jtattermusch/repos", "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}", "received_events_url": "https://api.github.com/users/jtattermusch/received_events", "type": "User", "site_admin": false}, {"login": "anandolee", "id": 11618033, "node_id": "MDQ6VXNlcjExNjE4MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11618033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandolee", "html_url": "https://github.com/anandolee", "followers_url": "https://api.github.com/users/anandolee/followers", "following_url": "https://api.github.com/users/anandolee/following{/other_user}", "gists_url": "https://api.github.com/users/anandolee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandolee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandolee/subscriptions", "organizations_url": "https://api.github.com/users/anandolee/orgs", "repos_url": "https://api.github.com/users/anandolee/repos", "events_url": "https://api.github.com/users/anandolee/events{/privacy}", "received_events_url": "https://api.github.com/users/anandolee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-31T23:16:41Z", "updated_at": "2020-08-24T16:11:57Z", "closed_at": "2020-08-24T16:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nWe have multiple projects in Visual Studio that compile with 'protoc.exe' from .proto files to .h and .cc.\r\n\r\nWhen compiling with Unity (Jumbo) builds,\r\nis there a recommended way to work with the duplicate symbols (One Definition Rule) that collide when compiling the merged .cc files?\r\n\r\nThe errors that are produced:\r\n```\r\n1>C:\\app\\ProtoBuf\\generated\\Pelican.pb.cc(284,65): error C2374: 'schemas': redefinition; multiple initialization\r\n1>C:\\app\\ProtoBuf\\generated\\Pelican.Ipc.pb.cc(393): message : see declaration of 'schemas'\r\n1>C:\\app\\ProtoBuf\\generated\\Pelican.pb.cc(295,55): error C2374: 'file_default_instances': redefinition; multiple initialization\r\n1>C:\\app\\ProtoBuf\\generated\\Pelican.Ipc.pb.cc(409): message : see declaration of 'file_default_instances'\r\n```\r\n\r\nReferences:\r\nhttps://onqtam.com/programming/2019-12-20-pch-unity-cmake-3-16/\r\nhttps://onqtam.com/programming/2018-07-07-unity-builds/\r\nhttps://cmake.org/cmake/help/latest/prop_tgt/UNITY_BUILD.html\r\nhttps://devblogs.microsoft.com/cppblog/support-for-unity-jumbo-files-in-visual-studio-2017-15-8-experimental/\r\n\r\nRunning v3.9.1:\r\nc:\\>C:\\protobuf-compiler\\bin\\protoc.exe --version\r\nlibprotoc 3.9.1\r\n\r\nRegards\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7759", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7759/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7759/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7759/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7759", "id": 667866099, "node_id": "MDU6SXNzdWU2Njc4NjYwOTk=", "number": 7759, "title": "protobuf-config.cmake: Invalid escape sequence \\.", "user": {"login": "Croydon", "id": 1593194, "node_id": "MDQ6VXNlcjE1OTMxOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Croydon", "html_url": "https://github.com/Croydon", "followers_url": "https://api.github.com/users/Croydon/followers", "following_url": "https://api.github.com/users/Croydon/following{/other_user}", "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions", "organizations_url": "https://api.github.com/users/Croydon/orgs", "repos_url": "https://api.github.com/users/Croydon/repos", "events_url": "https://api.github.com/users/Croydon/events{/privacy}", "received_events_url": "https://api.github.com/users/Croydon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-29T13:56:26Z", "updated_at": "2020-08-20T00:04:54Z", "closed_at": "2020-08-20T00:04:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.12.4\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**  \r\nReproducable both on Windows 10 + WSL Fedora Remix 31 \r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nHappens both with CMake 3.17.3 on Windows and CMake 3.18.0 on WSL Fedora Remix 31\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\nTry to use the `PROTOBUF_GENERATE_CPP` function\r\n\r\n**What did you expect to see**\r\nNo CMake error at least \ud83d\ude04 \r\n\r\n**What did you see instead?**\r\n```\r\nCMake Error at lib/cmake/protobuf/protobuf-config.cmake:108 (if):\r\n  Syntax error in cmake code at\r\n    lib/cmake/protobuf/protobuf-config.cmake:108\r\n\r\n  when parsing string\r\n\r\n    ^\\.\\.[/\\\\].*\r\n\r\n  Invalid escape sequence \\.\r\nCall Stack (most recent call first):\r\n  lib/cmake/protobuf/protobuf-module.cmake:22 (protobuf_generate)\r\n  CMakeLists.txt:13 (PROTOBUF_GENERATE_CPP)\r\n```\r\n\r\nThe respective code lines got recently introduced via\r\n\r\nhttps://github.com/protocolbuffers/protobuf/commit/c91ab40081b1916b286c6c9a4ce7fce4c1125a87\r\nhttps://github.com/protocolbuffers/protobuf/pull/7359\r\n\r\nTherefore a friendly ping to @afshinpir and @acozzette \ud83d\ude04 \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7757", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7757/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7757/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7757/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7757", "id": 667547535, "node_id": "MDU6SXNzdWU2Njc1NDc1MzU=", "number": 7757, "title": "Can not build protobuf in c++", "user": {"login": "MonicaGu", "id": 23579389, "node_id": "MDQ6VXNlcjIzNTc5Mzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23579389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MonicaGu", "html_url": "https://github.com/MonicaGu", "followers_url": "https://api.github.com/users/MonicaGu/followers", "following_url": "https://api.github.com/users/MonicaGu/following{/other_user}", "gists_url": "https://api.github.com/users/MonicaGu/gists{/gist_id}", "starred_url": "https://api.github.com/users/MonicaGu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MonicaGu/subscriptions", "organizations_url": "https://api.github.com/users/MonicaGu/orgs", "repos_url": "https://api.github.com/users/MonicaGu/repos", "events_url": "https://api.github.com/users/MonicaGu/events{/privacy}", "received_events_url": "https://api.github.com/users/MonicaGu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T04:54:12Z", "updated_at": "2020-07-29T06:26:12Z", "closed_at": "2020-07-29T06:26:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\n [git commit]: (https://github.com/protocolbuffers/protobuf/commit/92e3d3e02a886839c75aca74dab4d0ea4cef8eb8)\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nLinux Ubuntu 14.04.6 LTS\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Run `./autogen.sh`\r\n\r\n**What did you expect to see**\r\nProtocolbuffers should be compiled successfully.\r\n\r\n**What did you see instead?**\r\nThe output is :\r\n```\r\nxxx@graphics-gpu:~/test/FlexFlow/protobuf$ ./autogen.sh\r\n+ mkdir -p third_party/googletest/m4\r\n+ autoreconf -f -i -Wall,no-obsolete\r\nUsage: autoreconf [-f] [-h] [--help] [-m dir] [--macrodir=dir]\r\n       [-l dir] [--localdir=dir] [--force] [--verbose] [--version]\r\n```\r\nIt seems that there is something wrong with the autoreconf command.\r\n\r\n**Anything else we should know about your project / environment**\r\nI am using makeinfo 4.5, Autoconf 2.10 and automake (GNU automake) 1.4-p6. I downloaded the package of autoconf from [http://ftp.gnu.org/gnu/autoconf/autoconf-2.10.tar.gz](http://ftp.gnu.org/gnu/autoconf/autoconf-2.10.tar.gz) and compiled and installed it locally since I do not have the sudo permissions. No error appeared when I compiled and installed autoconf. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7755", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7755/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7755/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7755/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7755", "id": 667349887, "node_id": "MDU6SXNzdWU2NjczNDk4ODc=", "number": 7755, "title": "v3.12.4 published but not pushed", "user": {"login": "wesleytodd", "id": 1027776, "node_id": "MDQ6VXNlcjEwMjc3NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1027776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleytodd", "html_url": "https://github.com/wesleytodd", "followers_url": "https://api.github.com/users/wesleytodd/followers", "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}", "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions", "organizations_url": "https://api.github.com/users/wesleytodd/orgs", "repos_url": "https://api.github.com/users/wesleytodd/repos", "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleytodd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T20:23:01Z", "updated_at": "2020-07-30T23:05:09Z", "closed_at": "2020-07-30T23:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this just an accident?  Could we get a commit and tag pushed for the js package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7753", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7753/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7753/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7753/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7753", "id": 665739140, "node_id": "MDU6SXNzdWU2NjU3MzkxNDA=", "number": 7753, "title": "npm install protobuf fails to install the module", "user": {"login": "protofolius", "id": 30254488, "node_id": "MDQ6VXNlcjMwMjU0NDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/30254488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protofolius", "html_url": "https://github.com/protofolius", "followers_url": "https://api.github.com/users/protofolius/followers", "following_url": "https://api.github.com/users/protofolius/following{/other_user}", "gists_url": "https://api.github.com/users/protofolius/gists{/gist_id}", "starred_url": "https://api.github.com/users/protofolius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protofolius/subscriptions", "organizations_url": "https://api.github.com/users/protofolius/orgs", "repos_url": "https://api.github.com/users/protofolius/repos", "events_url": "https://api.github.com/users/protofolius/events{/privacy}", "received_events_url": "https://api.github.com/users/protofolius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-26T08:55:14Z", "updated_at": "2020-07-26T11:06:24Z", "closed_at": "2020-07-26T11:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: protobuf 0.11.1 , nodejs 8.10.0 , npm 3.5.2\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nubuntu 18.04 LTS\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\npython\r\n\r\n**What did you do?**\r\nnpm install protobuf\r\n\r\n**What did you expect to see**\r\na proper compile and installation of the module\r\n\r\n**What did you see instead?**\r\n`protobuf_for_node.target.mk:101: recipe for target 'Release/obj.target/protobuf_for_node/protobuf_for_node.o' failed\r\nmake: *** [Release/obj.target/protobuf_for_node/protobuf_for_node.o] Error 1\r\nmake: Leaving directory '/usr/share/npm/node_modules/protobuf/build'\r\ngyp ERR! build error\r\ngyp ERR! stack Error: `make` failed with exit code: 2\r\ngyp ERR! stack     at ChildProcess.onExit (/usr/share/npm/node_modules/node-gyp/lib/build.js:276:23)\r\ngyp ERR! stack     at emitTwo (events.js:126:13)\r\ngyp ERR! stack     at ChildProcess.emit (events.js:214:7)\r\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)\r\ngyp ERR! System Linux 4.15.0-112-generic\r\ngyp ERR! command \"/usr/bin/node\" \"/usr/share/npm/node_modules/.bin/node-gyp\" \"rebuild\"\r\ngyp ERR! cwd /usr/share/npm/node_modules/protobuf\r\ngyp ERR! node -v v8.10.0\r\ngyp ERR! node-gyp -v v3.2.1\r\ngyp ERR! not ok\r\nnpm@3.5.2 /usr/share/npm\r\n\u251c\u2500\u2500 line-reader-sync@0.1.0  extraneous\r\n\u2514\u2500\u2500 sync-request@6.1.0  extraneous\r\n\r\nnpm ERR! Linux 4.15.0-112-generic\r\nnpm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"i\" \"protobuf\"\r\nnpm ERR! node v8.10.0\r\nnpm ERR! npm  v3.5.2\r\nnpm ERR! code ELIFECYCLE\r\n\r\nnpm ERR! protobuf@0.11.1 install: `node-gyp rebuild`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the protobuf@0.11.1 install script 'node-gyp rebuild'.\r\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\r\nnpm ERR! If you do, this is most likely a problem with the protobuf package,\r\nnpm ERR! not with npm itself.\r\nnpm ERR! Tell the author that this fails on your system:\r\nnpm ERR!     node-gyp rebuild\r\nnpm ERR! You can get information on how to open an issue for this project with:\r\nnpm ERR!     npm bugs protobuf\r\nnpm ERR! Or if that isn't available, you can get their info via:\r\nnpm ERR!     npm owner ls protobuf\r\nnpm ERR! There is likely additional logging output above.\r\n\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     /usr/share/npm/node_modules/npm-debug.log\r\n`\r\n\r\n**Anything else we should know about your project / environment**\r\nnpm ERR! Linux 4.15.0-112-generic\r\nnpm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"bugs\" \"protobuf\"\r\nnpm ERR! node v8.10.0\r\nnpm ERR! npm  v3.5.2\r\nnpm ERR! path xdg-open\r\nnpm ERR! code ENOENT\r\nnpm ERR! errno ENOENT\r\nnpm ERR! syscall spawn xdg-open\r\n\r\nnpm ERR! enoent spawn xdg-open ENOENT\r\nnpm ERR! enoent spawn xdg-open ENOENT\r\nnpm ERR! enoent This is most likely not a problem with npm itself\r\nnpm ERR! enoent and is related to npm not being able to find a file.\r\nnpm ERR! enoent\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7748", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7748/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7748/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7748/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7748", "id": 664236726, "node_id": "MDU6SXNzdWU2NjQyMzY3MjY=", "number": 7748, "title": "Missing release assets in 4.0.0-rc2?", "user": {"login": "botovq", "id": 11229187, "node_id": "MDQ6VXNlcjExMjI5MTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/11229187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botovq", "html_url": "https://github.com/botovq", "followers_url": "https://api.github.com/users/botovq/followers", "following_url": "https://api.github.com/users/botovq/following{/other_user}", "gists_url": "https://api.github.com/users/botovq/gists{/gist_id}", "starred_url": "https://api.github.com/users/botovq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botovq/subscriptions", "organizations_url": "https://api.github.com/users/botovq/orgs", "repos_url": "https://api.github.com/users/botovq/repos", "events_url": "https://api.github.com/users/botovq/events{/privacy}", "received_events_url": "https://api.github.com/users/botovq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T06:37:59Z", "updated_at": "2020-07-23T18:06:57Z", "closed_at": "2020-07-23T18:06:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [4.0.0-rc-2 release](https://github.com/protocolbuffers/protobuf/releases/tag/v4.0.0-rc2) does not include the rc-2 versions of the following archives. Note that rc-1 has 28 assets while rc-2 has 20 assets.\r\n\r\n- protobuf-all-4.0.0-rc-1.tar.gz\r\n- protobuf-all-4.0.0-rc-1.zip\r\n- protobuf-cpp-4.0.0-rc-1.tar.gz\r\n- protobuf-cpp-4.0.0-rc-1.zip\r\n- protobuf-csharp-4.0.0-rc-1.tar.gz\r\n- protobuf-csharp-4.0.0-rc-1.zip\r\n- protobuf-java-4.0.0-rc-1.tar.gz\r\n- protobuf-java-4.0.0-rc-1.zip\r\n\r\nIs this deliberate, an oversight or am I too early?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7746", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7746/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7746/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7746/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7746", "id": 663720436, "node_id": "MDU6SXNzdWU2NjM3MjA0MzY=", "number": 7746, "title": "Missing  protobuf/php/ext/google/protobuf/bundled_php.c", "user": {"login": "muzzlerator", "id": 51605857, "node_id": "MDQ6VXNlcjUxNjA1ODU3", "avatar_url": "https://avatars3.githubusercontent.com/u/51605857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muzzlerator", "html_url": "https://github.com/muzzlerator", "followers_url": "https://api.github.com/users/muzzlerator/followers", "following_url": "https://api.github.com/users/muzzlerator/following{/other_user}", "gists_url": "https://api.github.com/users/muzzlerator/gists{/gist_id}", "starred_url": "https://api.github.com/users/muzzlerator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muzzlerator/subscriptions", "organizations_url": "https://api.github.com/users/muzzlerator/orgs", "repos_url": "https://api.github.com/users/muzzlerator/repos", "events_url": "https://api.github.com/users/muzzlerator/events{/privacy}", "received_events_url": "https://api.github.com/users/muzzlerator/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307319099, "node_id": "MDU6TGFiZWwzMDczMTkwOTk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/php", "name": "php", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T12:22:46Z", "updated_at": "2020-07-23T23:54:48Z", "closed_at": "2020-07-23T23:54:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: master/v4.0.0rc1\r\nLanguage: PHP\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nFreebsd 12, Debian 10\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Clone repository\r\n2. \r\n> cd ./protobuf/php/ext/google/protobuf/\r\n> pear package\r\nError: File \"./LICENSE\" in package.xml does not exist\r\nError: File \"./bundled_php.c\" in package.xml does not exist\r\nError: Channel validator warning: field \"date\" - Release Date \"2020-06-01\" is not today\r\nCannot package, errors in package\r\n\r\n**What did you expect to see**\r\nCompiled package\r\n\r\n**What did you see instead?**\r\nNo package\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\n**Anything else we should know about your project / environment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7742", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7742/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7742/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7742/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7742", "id": 662569976, "node_id": "MDU6SXNzdWU2NjI1Njk5NzY=", "number": 7742, "title": "version 3.12.0 crash on iPhone5", "user": {"login": "aiqinxuancai", "id": 4475018, "node_id": "MDQ6VXNlcjQ0NzUwMTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4475018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiqinxuancai", "html_url": "https://github.com/aiqinxuancai", "followers_url": "https://api.github.com/users/aiqinxuancai/followers", "following_url": "https://api.github.com/users/aiqinxuancai/following{/other_user}", "gists_url": "https://api.github.com/users/aiqinxuancai/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiqinxuancai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiqinxuancai/subscriptions", "organizations_url": "https://api.github.com/users/aiqinxuancai/orgs", "repos_url": "https://api.github.com/users/aiqinxuancai/repos", "events_url": "https://api.github.com/users/aiqinxuancai/events{/privacy}", "received_events_url": "https://api.github.com/users/aiqinxuancai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 269641799, "node_id": "MDU6TGFiZWwyNjk2NDE3OTk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/objective-c", "name": "objective-c", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-21T04:30:43Z", "updated_at": "2020-07-22T07:29:40Z", "closed_at": "2020-07-22T07:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use the OC version of Protobuf 3.12.0 which is install by pod.\r\n\r\nAccording to the collected crash logs, the problem only occurs on 32-bit devices such as iPhone5, iPhone4s, iPad4, and iPadMini.\r\n\r\n```0\tWolf\r\nGPBCodedInputStreamReadDouble (GPBCodedInputStream.m:134 [Inline: GPBConvertInt64ToDouble])\r\n1\tWolf\r\nGPBCodedInputStreamReadDouble (GPBCodedInputStream.m:103)\r\n2\tWolf\r\n-[GPBMessage mergeFromCodedInputStream:extensionRegistry:] (GPBMessage.m:2143)\r\n3\tWolf\r\n-[GPBMessage mergeFromData:extensionRegistry:] (GPBMessage.m:1928)\r\n4\tWolf\r\n-[GPBMessage initWithData:extensionRegistry:error:] (GPBMessage.m:0)\r\n5\tWolf\r\n+[GPBMessage parseFromData:extensionRegistry:error:] (GPBMessage.m:1957)\r\n6\tWolf\r\n+[GPBMessage parseFromData:error:] (GPBMessage.m:1951)\r\n7\tWolf\r\n__45-[NetworkServiceManager receiveData:reqInfo:]_block_invoke (NetworkServiceManager.mm:0)\r\n8\tlibdispatch.dylib\r\n__dispatch_call_block_and_release + 11\r\n9\tlibdispatch.dylib\r\n__dispatch_queue_drain$VARIANT$mp + 1759\r\n10\tlibdispatch.dylib\r\n__dispatch_queue_invoke$VARIANT$mp + 285\r\n11\tlibdispatch.dylib\r\n__dispatch_root_queue_drain + 1561\r\n12\tlibdispatch.dylib\r\n__dispatch_worker_thread3 + 97\r\n13\tlibsystem_pthread.dylib\r\n_pthread_wqthread + 1024```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7732", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7732/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7732/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7732/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7732", "id": 659776430, "node_id": "MDU6SXNzdWU2NTk3NzY0MzA=", "number": 7732, "title": "[PHP] Intermittent conformance failure with new C extension", "user": {"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-18T00:43:30Z", "updated_at": "2020-07-30T18:41:27Z", "closed_at": "2020-07-30T17:09:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following error has been showing up intermittently on Kokoro. So far it has only appeared on Mac:\r\n\r\n```\r\nCONFORMANCE TEST BEGIN ====================================\r\n\r\nERROR, test=Required.Proto3.JsonInput.FloatFieldQuotedValue.JsonOutput: Output was not equivalent to reference message: modified: optional_float: 1 -> 113\r\n. request=json_payload: \"{\\\"optionalFloat\\\": \\\"1\\\"}\" requested_output_format: JSON message_type: \"protobuf_test_messages.proto3.TestAllTypesProto3\" test_category: JSON_TEST, response=json_payload: \"{\\\"optionalFloat\\\":113}\"\r\n\r\nThese tests failed.  If they can't be fixed right now, you can add them to the failure list so the overall suite can succeed.  Add them to the failure list by running:\r\n  ./update_failure_list.py failure_list_php_c.txt --add failing_tests.txt\r\n\r\n  Required.Proto3.JsonInput.FloatFieldQuotedValue.JsonOutput\r\n```\r\n\r\nAnother instance.\r\n\r\n```\r\nCONFORMANCE TEST BEGIN ====================================\r\n\r\nERROR, test=Required.Proto3.JsonInput.FloatFieldQuotedValue.ProtobufOutput: Output was not equivalent to reference message: modified: optional_float: 1 -> 11\r\n. request=json_payload: \"{\\\"optionalFloat\\\": \\\"1\\\"}\" requested_output_format: PROTOBUF message_type: \"protobuf_test_messages.proto3.TestAllTypesProto3\" test_category: JSON_TEST, response=protobuf_payload: \"]\\000\\0000A\"\r\nERROR, test=Required.Proto3.JsonInput.FloatFieldQuotedValue.JsonOutput: Output was not equivalent to reference message: modified: optional_float: 1 -> 11\r\n. request=json_payload: \"{\\\"optionalFloat\\\": \\\"1\\\"}\" requested_output_format: JSON message_type: \"protobuf_test_messages.proto3.TestAllTypesProto3\" test_category: JSON_TEST, response=json_payload: \"{\\\"optionalFloat\\\":11}\"\r\n\r\nThese tests failed.  If they can't be fixed right now, you can add them to the failure list so the overall suite can succeed.  Add them to the failure list by running:\r\n  ./update_failure_list.py failure_list_php_c.txt --add failing_tests.txt\r\n\r\n  Required.Proto3.JsonInput.FloatFieldQuotedValue.JsonOutput\r\n  Required.Proto3.JsonInput.FloatFieldQuotedValue.ProtobufOutput\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7725", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7725/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7725/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7725/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7725", "id": 658933145, "node_id": "MDU6SXNzdWU2NTg5MzMxNDU=", "number": 7725, "title": "Shard a great example for use protobuf of java", "user": {"login": "farsunset", "id": 3784106, "node_id": "MDQ6VXNlcjM3ODQxMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3784106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farsunset", "html_url": "https://github.com/farsunset", "followers_url": "https://api.github.com/users/farsunset/followers", "following_url": "https://api.github.com/users/farsunset/following{/other_user}", "gists_url": "https://api.github.com/users/farsunset/gists{/gist_id}", "starred_url": "https://api.github.com/users/farsunset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farsunset/subscriptions", "organizations_url": "https://api.github.com/users/farsunset/orgs", "repos_url": "https://api.github.com/users/farsunset/repos", "events_url": "https://api.github.com/users/farsunset/events{/privacy}", "received_events_url": "https://api.github.com/users/farsunset/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-17T06:50:25Z", "updated_at": "2020-07-17T06:50:29Z", "closed_at": "2020-07-17T06:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/farsunset/hoxin-im\r\n\r\nhttp://farsunset.com", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7719", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7719/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7719/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7719/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7719", "id": 657972814, "node_id": "MDU6SXNzdWU2NTc5NzI4MTQ=", "number": 7719, "title": "PHP extension 4.0 - TSRMLS_* usage", "user": {"login": "remicollet", "id": 270445, "node_id": "MDQ6VXNlcjI3MDQ0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/270445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remicollet", "html_url": "https://github.com/remicollet", "followers_url": "https://api.github.com/users/remicollet/followers", "following_url": "https://api.github.com/users/remicollet/following{/other_user}", "gists_url": "https://api.github.com/users/remicollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/remicollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remicollet/subscriptions", "organizations_url": "https://api.github.com/users/remicollet/orgs", "repos_url": "https://api.github.com/users/remicollet/repos", "events_url": "https://api.github.com/users/remicollet/events{/privacy}", "received_events_url": "https://api.github.com/users/remicollet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T08:24:46Z", "updated_at": "2020-07-18T02:08:11Z", "closed_at": "2020-07-18T02:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please TSRMLS_* usage\r\n\r\n- not needed in 7.x\r\n- not supported in 8.x\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7718", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7718/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7718/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7718/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7718", "id": 657864196, "node_id": "MDU6SXNzdWU2NTc4NjQxOTY=", "number": 7718, "title": "PHP ext 4.0.0RC1 minimal required version", "user": {"login": "remicollet", "id": 270445, "node_id": "MDQ6VXNlcjI3MDQ0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/270445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remicollet", "html_url": "https://github.com/remicollet", "followers_url": "https://api.github.com/users/remicollet/followers", "following_url": "https://api.github.com/users/remicollet/following{/other_user}", "gists_url": "https://api.github.com/users/remicollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/remicollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remicollet/subscriptions", "organizations_url": "https://api.github.com/users/remicollet/orgs", "repos_url": "https://api.github.com/users/remicollet/repos", "events_url": "https://api.github.com/users/remicollet/events{/privacy}", "received_events_url": "https://api.github.com/users/remicollet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-16T05:33:11Z", "updated_at": "2020-07-19T16:57:46Z", "closed_at": "2020-07-19T16:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to changelog, this version requires PHP 7\r\nAccording to package.xml it requires PHP >= 5.5.9\r\n\r\nPlease fix package.xml", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7714", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7714/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7714/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7714/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7714", "id": 657406806, "node_id": "MDU6SXNzdWU2NTc0MDY4MDY=", "number": 7714, "title": "Some releases are not found in PECL", "user": {"login": "PierrickVoulet", "id": 6769971, "node_id": "MDQ6VXNlcjY3Njk5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6769971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PierrickVoulet", "html_url": "https://github.com/PierrickVoulet", "followers_url": "https://api.github.com/users/PierrickVoulet/followers", "following_url": "https://api.github.com/users/PierrickVoulet/following{/other_user}", "gists_url": "https://api.github.com/users/PierrickVoulet/gists{/gist_id}", "starred_url": "https://api.github.com/users/PierrickVoulet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PierrickVoulet/subscriptions", "organizations_url": "https://api.github.com/users/PierrickVoulet/orgs", "repos_url": "https://api.github.com/users/PierrickVoulet/repos", "events_url": "https://api.github.com/users/PierrickVoulet/events{/privacy}", "received_events_url": "https://api.github.com/users/PierrickVoulet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T14:41:06Z", "updated_at": "2020-07-15T17:47:06Z", "closed_at": "2020-07-15T17:47:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: 3.12.3, 4.0.0RC1\r\nLanguage: PHP\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nLinux\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nPHP Extension (C implementation)\r\n\r\n**What did you do?**\r\nI went to https://pecl.php.net/package/protobuf\r\n\r\n**What did you expect to see**\r\nAll the released versions of protobuf to date\r\n\r\n**What did you see instead?**\r\nI could not find the versions 3.12.3 and 4.0.0RC1, the latest available is 3.12.2\r\n\r\n**Anything else we should know about your project / environment**\r\nNone", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7702", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7702/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7702/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7702/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7702", "id": 655402705, "node_id": "MDU6SXNzdWU2NTU0MDI3MDU=", "number": 7702, "title": "google::protobuf::util::JsonStringToMessage How to reject a json string when the json string missing a proto3 message field ?", "user": {"login": "YuanYingdong", "id": 14237073, "node_id": "MDQ6VXNlcjE0MjM3MDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/14237073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuanYingdong", "html_url": "https://github.com/YuanYingdong", "followers_url": "https://api.github.com/users/YuanYingdong/followers", "following_url": "https://api.github.com/users/YuanYingdong/following{/other_user}", "gists_url": "https://api.github.com/users/YuanYingdong/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuanYingdong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuanYingdong/subscriptions", "organizations_url": "https://api.github.com/users/YuanYingdong/orgs", "repos_url": "https://api.github.com/users/YuanYingdong/repos", "events_url": "https://api.github.com/users/YuanYingdong/events{/privacy}", "received_events_url": "https://api.github.com/users/YuanYingdong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T13:40:10Z", "updated_at": "2020-07-20T18:08:30Z", "closed_at": "2020-07-20T18:08:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pb3 removed the keyword required and optional, And we want to do the field check when converting from a json string to pb3 message, we find when a field is missing the Jong string, JsonStringToMessage API will automatically set the missing field to the default value, for example empty json string \"{}\u201d will set all message fields to default by calling this API, but such json request is obviously illegal. how to do this json field check in pb3? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7683", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7683/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7683/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7683/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7683", "id": 651492246, "node_id": "MDU6SXNzdWU2NTE0OTIyNDY=", "number": 7683, "title": "protobuf-all-3.12.3.tar.gz tarball differs from the v3.12.3 tag", "user": {"login": "jschueller", "id": 3832365, "node_id": "MDQ6VXNlcjM4MzIzNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3832365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jschueller", "html_url": "https://github.com/jschueller", "followers_url": "https://api.github.com/users/jschueller/followers", "following_url": "https://api.github.com/users/jschueller/following{/other_user}", "gists_url": "https://api.github.com/users/jschueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/jschueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jschueller/subscriptions", "organizations_url": "https://api.github.com/users/jschueller/orgs", "repos_url": "https://api.github.com/users/jschueller/repos", "events_url": "https://api.github.com/users/jschueller/events{/privacy}", "received_events_url": "https://api.github.com/users/jschueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-06T12:18:36Z", "updated_at": "2020-07-06T19:19:09Z", "closed_at": "2020-07-06T19:19:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "the protobuf-all-3.12.3.tar.gz tarball content differs from the v3.12.3 tag (https://github.com/protocolbuffers/protobuf/releases/tag/v3.12.3)\r\n\r\nI noticed because some declarations differ between the protobuf-all-3.12.3.tar.gz and the github-generated v3.12.3.tar.gz tarball:\r\n```\r\n$ curl -L https://github.com/protocolbuffers/protobuf/releases/download/v3.12.3/protobuf-all-3.12.3.tar.gz | tar xz\r\n$ mv protobuf-3.12.3 protobuf-3.12.3.all\r\n$ curl -L https://github.com/protocolbuffers/protobuf/archive/v3.12.3.tar.gz | tar xz\r\n$ diff -ur ./protobuf-3.12.3.all/src/google/protobuf/generated_message_table_driven.h ./protobuf-3.12.3/src/google/protobuf/generated_message_table_driven.h\r\n--- ./protobuf-3.12.3.all/src/google/protobuf/generated_message_table_driven.h  2020-06-02 22:17:08.000000000 +0200\r\n+++ ./protobuf-3.12.3/src/google/protobuf/generated_message_table_driven.h      2020-06-03 00:12:47.000000000 +0200\r\n@@ -120,7 +120,7 @@\r\n // ParseTableField is kept small to help simplify instructions for computing\r\n // offsets, as we will always need this information to parse a field.\r\n // Additional data, needed for some types, is stored in\r\n-// AuxillaryParseTableField.\r\n+// AuxiliaryParseTableField.\r\n struct ParseTableField {\r\n   uint32 offset;\r\n   // The presence_index ordinarily represents a has_bit index, but for fields\r\n@@ -138,7 +138,7 @@\r\n \r\n struct ParseTable;\r\n \r\n-union AuxillaryParseTableField {\r\n+union AuxiliaryParseTableField {\r\n   typedef bool (*EnumValidator)(int);\r\n \r\n   // Enums\r\n@@ -169,20 +169,20 @@\r\n   };\r\n   map_aux maps;\r\n \r\n-  AuxillaryParseTableField() = default;\r\n-  constexpr AuxillaryParseTableField(AuxillaryParseTableField::enum_aux e)\r\n+  AuxiliaryParseTableField() = default;\r\n+  constexpr AuxiliaryParseTableField(AuxiliaryParseTableField::enum_aux e)\r\n       : enums(e) {}\r\n-  constexpr AuxillaryParseTableField(AuxillaryParseTableField::message_aux m)\r\n+  constexpr AuxiliaryParseTableField(AuxiliaryParseTableField::message_aux m)\r\n       : messages(m) {}\r\n-  constexpr AuxillaryParseTableField(AuxillaryParseTableField::string_aux s)\r\n+  constexpr AuxiliaryParseTableField(AuxiliaryParseTableField::string_aux s)\r\n       : strings(s) {}\r\n-  constexpr AuxillaryParseTableField(AuxillaryParseTableField::map_aux m)\r\n+  constexpr AuxiliaryParseTableField(AuxiliaryParseTableField::map_aux m)\r\n       : maps(m) {}\r\n };\r\n \r\n struct ParseTable {\r\n   const ParseTableField* fields;\r\n-  const AuxillaryParseTableField* aux;\r\n+  const AuxiliaryParseTableField* aux;\r\n   int max_field_number;\r\n   // TODO(ckennelly): Do something with this padding.\r\n \r\n@@ -207,10 +207,10 @@\r\n // The tables must be composed of POD components to ensure link-time\r\n // initialization.\r\n static_assert(std::is_pod<ParseTableField>::value, \"\");\r\n-static_assert(std::is_pod<AuxillaryParseTableField>::value, \"\");\r\n-static_assert(std::is_pod<AuxillaryParseTableField::enum_aux>::value, \"\");\r\n-static_assert(std::is_pod<AuxillaryParseTableField::message_aux>::value, \"\");\r\n-static_assert(std::is_pod<AuxillaryParseTableField::string_aux>::value, \"\");\r\n+static_assert(std::is_pod<AuxiliaryParseTableField>::value, \"\");\r\n+static_assert(std::is_pod<AuxiliaryParseTableField::enum_aux>::value, \"\");\r\n+static_assert(std::is_pod<AuxiliaryParseTableField::message_aux>::value, \"\");\r\n+static_assert(std::is_pod<AuxiliaryParseTableField::string_aux>::value, \"\");\r\n static_assert(std::is_pod<ParseTable>::value, \"\");\r\n \r\n // TODO(ckennelly): Consolidate these implementations into a single one, using\r\n```\r\n\r\nThis diffs seems to come from:\r\nhttps://github.com/protocolbuffers/protobuf/commit/2ae7cf0e03c3469973e592e812565e4ee2470e0b\r\nwhich is marked as included in the v3.12.3 tag\r\nso it might be that protobuf-all-3.12.3.tar.gz is generated from a different commit/branch and not the v3.12.3 tag\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7681", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7681/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7681/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7681/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7681", "id": 650918340, "node_id": "MDU6SXNzdWU2NTA5MTgzNDA=", "number": 7681, "title": "What is the rationale of compiling importer.cc and parser.cc into libprotobuf rather than in libprotoc?", "user": {"login": "georgthegreat", "id": 1121500, "node_id": "MDQ6VXNlcjExMjE1MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1121500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgthegreat", "html_url": "https://github.com/georgthegreat", "followers_url": "https://api.github.com/users/georgthegreat/followers", "following_url": "https://api.github.com/users/georgthegreat/following{/other_user}", "gists_url": "https://api.github.com/users/georgthegreat/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgthegreat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgthegreat/subscriptions", "organizations_url": "https://api.github.com/users/georgthegreat/orgs", "repos_url": "https://api.github.com/users/georgthegreat/repos", "events_url": "https://api.github.com/users/georgthegreat/events{/privacy}", "received_events_url": "https://api.github.com/users/georgthegreat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-04T16:24:16Z", "updated_at": "2020-07-23T17:50:54Z", "closed_at": "2020-07-23T17:50:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**What language does this apply to?**\r\nIf it's a proto syntax change, is it for proto2 or proto3?\r\nIf it's about generated code change, what programming language?\r\n\r\n**All of the above.**\r\n\r\n**Describe the problem you are trying to solve.**\r\n\r\nAt the time, [compiler/importer.cc](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/compiler/importer.cc) and [compiler/parser.cc](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/compiler/parser.cc) are linked into `libprotobuf.so` rather than in `libprotoc.so`. See [Makefile.am](https://github.com/protocolbuffers/protobuf/blob/86b3ccf28ca437330cc42a2b3a75a1314977fcfd/src/Makefile.am#L261), [libprotobuf.cmake](https://github.com/protocolbuffers/protobuf/blob/86b3ccf28ca437330cc42a2b3a75a1314977fcfd/cmake/libprotobuf.cmake#L5), [BUILD](https://github.com/protocolbuffers/protobuf/blob/86b3ccf28ca437330cc42a2b3a75a1314977fcfd/BUILD#L215).\r\n\r\nThese two files, however, implement `.proto` files parsing and thus should be linked into `libprotoc.so`. According to the [statement](https://developers.google.com/protocol-buffers/docs/reference/cpp#google.protobuf.compiler) in C++ API Reference regarding `google::protobuf::compiler` namespace:\r\n\r\n> Since this functionality is only useful to those writing custom compilers, it is in a separate library called \"libprotoc\" which you will have to link against. \r\n\r\n**Describe the solution you'd like**\r\n\r\nFix the build scripts by moving these two files into corresponding section / library.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7679", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7679/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7679/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7679/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7679", "id": 650773156, "node_id": "MDU6SXNzdWU2NTA3NzMxNTY=", "number": 7679, "title": "C++ enum_Name functions are now templates, breaking existing code.", "user": {"login": "inazarenko", "id": 12076208, "node_id": "MDQ6VXNlcjEyMDc2MjA4", "avatar_url": "https://avatars0.githubusercontent.com/u/12076208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inazarenko", "html_url": "https://github.com/inazarenko", "followers_url": "https://api.github.com/users/inazarenko/followers", "following_url": "https://api.github.com/users/inazarenko/following{/other_user}", "gists_url": "https://api.github.com/users/inazarenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/inazarenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inazarenko/subscriptions", "organizations_url": "https://api.github.com/users/inazarenko/orgs", "repos_url": "https://api.github.com/users/inazarenko/repos", "events_url": "https://api.github.com/users/inazarenko/events{/privacy}", "received_events_url": "https://api.github.com/users/inazarenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T21:35:59Z", "updated_at": "2020-07-06T22:47:01Z", "closed_at": "2020-07-06T22:47:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm upgrading a fairly large codebase to v3.12.3. One change between the versions was that <EnumType>_Name functions are now templates. Here's the list of breakage kinds that I encountered. All examples assume:\r\n```\r\nmessage X {\r\n  enum E { ... }\r\n}\r\n```\r\n\r\n- code that attempts to introduce a short alias for the `_Name` function\r\n  ```\r\n  auto& E_Name = X::E_Name;\r\n  ```\r\n- code that takes the address of the `_Name` function:  \r\n  ```\r\n  void foo(std::function<string(X::E)> bar);\r\n  ...\r\n  foo(&X::E_Name);\r\n  ```\r\n- code that passes a type implicitly convertible to `E`:\r\n  ```\r\n  std::atomic<X::E> e;\r\n  ...\r\n  return X::E_Name(e);\r\n  ```\r\n\r\nI realize that reverting the change is not practical at this point, so this is mostly FYI. From the comments on the commits that introduced the change, I got a feeling that the authors weren't sure if this would be a backward-compatible change. It wasn't :)\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.12.3.\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nLinux, Ubuntu LTS 16.04\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nclang 9.0.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7676", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7676/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7676/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7676/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7676", "id": 649945532, "node_id": "MDU6SXNzdWU2NDk5NDU1MzI=", "number": 7676, "title": "Expose resetting the position in CodedOutputStream (C#)", "user": {"login": "MaximGurschi", "id": 18578793, "node_id": "MDQ6VXNlcjE4NTc4Nzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/18578793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaximGurschi", "html_url": "https://github.com/MaximGurschi", "followers_url": "https://api.github.com/users/MaximGurschi/followers", "following_url": "https://api.github.com/users/MaximGurschi/following{/other_user}", "gists_url": "https://api.github.com/users/MaximGurschi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaximGurschi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaximGurschi/subscriptions", "organizations_url": "https://api.github.com/users/MaximGurschi/orgs", "repos_url": "https://api.github.com/users/MaximGurschi/repos", "events_url": "https://api.github.com/users/MaximGurschi/events{/privacy}", "received_events_url": "https://api.github.com/users/MaximGurschi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-02T13:47:19Z", "updated_at": "2020-07-07T14:41:48Z", "closed_at": "2020-07-07T14:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhat do you think of a small update to the COS, to support resetting the position, if the data is written to a flat array directly?\r\nThe use case is the ability to reuse the same COS with a preallocated buffer. \r\nThis should help with some GC concerns around COS.\r\n\r\nThe effect of resetting the position is achievable by using the Stream ctors on COS, but that means that every byte must go through an intermediary stream before landing in the preallocated buffer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7671", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7671/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7671/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7671/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7671", "id": 648613178, "node_id": "MDU6SXNzdWU2NDg2MTMxNzg=", "number": 7671, "title": "encoding (serialization)  Map Fields", "user": {"login": "zavarat", "id": 3786452, "node_id": "MDQ6VXNlcjM3ODY0NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3786452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zavarat", "html_url": "https://github.com/zavarat", "followers_url": "https://api.github.com/users/zavarat/followers", "following_url": "https://api.github.com/users/zavarat/following{/other_user}", "gists_url": "https://api.github.com/users/zavarat/gists{/gist_id}", "starred_url": "https://api.github.com/users/zavarat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zavarat/subscriptions", "organizations_url": "https://api.github.com/users/zavarat/orgs", "repos_url": "https://api.github.com/users/zavarat/repos", "events_url": "https://api.github.com/users/zavarat/events{/privacy}", "received_events_url": "https://api.github.com/users/zavarat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-01T01:59:13Z", "updated_at": "2020-07-03T02:28:22Z", "closed_at": "2020-07-03T02:28:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nAccording to the google guide, \"JavaScript Generated Code\" contains the following function for Map Fields. But no matter how hard I look, I can't see a function for encoding. (Of course, I thought there would be a function like setXXXMap(), but I couldn't find it.) How should I encode Map Fields?\r\n\r\nhttps://developers.google.com/protocol-buffers/docs/reference/javascript-generated#map\r\n---\r\n\r\nMap Fields\r\nFor this message with a map field:\r\n\r\n```\r\nmessage Bar {}\r\n\r\nmessage Baz {\r\n  map<string, Bar> foo = 1;\r\n}\r\n```\r\nthe compiler generates the following instance method:\r\ngetFooMap(): Returns the Map containing foo's key-value pairs. You can then use Map methods to interact with the map.\r\n\r\n---", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7657", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7657/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7657/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7657/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7657", "id": 646890553, "node_id": "MDU6SXNzdWU2NDY4OTA1NTM=", "number": 7657, "title": "Consider change HasFoo to methods instead of  fields in C# when proto2", "user": {"login": "rozbo", "id": 7907969, "node_id": "MDQ6VXNlcjc5MDc5Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7907969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rozbo", "html_url": "https://github.com/rozbo", "followers_url": "https://api.github.com/users/rozbo/followers", "following_url": "https://api.github.com/users/rozbo/following{/other_user}", "gists_url": "https://api.github.com/users/rozbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rozbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rozbo/subscriptions", "organizations_url": "https://api.github.com/users/rozbo/orgs", "repos_url": "https://api.github.com/users/rozbo/repos", "events_url": "https://api.github.com/users/rozbo/events{/privacy}", "received_events_url": "https://api.github.com/users/rozbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-28T10:34:16Z", "updated_at": "2020-06-28T11:49:39Z", "closed_at": "2020-06-28T11:49:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## current\r\n\r\n```c#\r\n    public bool HasCode {\r\n      get { return (_hasBits0 & 1) != 0; }\r\n    }\r\n```\r\n\r\nwe can check it by\r\n```c#\r\n{\r\nif (someObj.HasCode){\r\n    xxxxx\r\n}\r\n```\r\n\r\n## want to \r\n```c#\r\n    public bool HasCode() {\r\n           return (_hasBits0 & 1) != 0; \r\n    }\r\n```\r\n\r\n# reason\r\n1. Be consistent with other languages like c++ \r\n2. This will have side effects on generating json \uff08There will be some additional members HasFoo:true\uff09\r\n\r\n\r\n#7395\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7654", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7654/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7654/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7654/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7654", "id": 646726414, "node_id": "MDU6SXNzdWU2NDY3MjY0MTQ=", "number": 7654, "title": "[C#] All methods defined in partial class `Any` of `AnyPartial.cs` are omitted from generated `Any` stub", "user": {"login": "Wizhi", "id": 1936878, "node_id": "MDQ6VXNlcjE5MzY4Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1936878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wizhi", "html_url": "https://github.com/Wizhi", "followers_url": "https://api.github.com/users/Wizhi/followers", "following_url": "https://api.github.com/users/Wizhi/following{/other_user}", "gists_url": "https://api.github.com/users/Wizhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wizhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wizhi/subscriptions", "organizations_url": "https://api.github.com/users/Wizhi/orgs", "repos_url": "https://api.github.com/users/Wizhi/repos", "events_url": "https://api.github.com/users/Wizhi/events{/privacy}", "received_events_url": "https://api.github.com/users/Wizhi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T18:01:21Z", "updated_at": "2020-06-27T18:53:56Z", "closed_at": "2020-06-27T18:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: v3.12.3\r\nLanguage: C#\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\n\r\n```\r\n$ uname -a\r\nLinux localhost.localdomain 5.6.13-100.fc30.x86_64 #1 SMP Fri May 15 00:36:06 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n$ lsb_release -a\r\nLSB Version:\t:core-4.1-amd64:core-4.1-noarch\r\nDistributor ID:\tFedora\r\nDescription:\tFedora release 30 (Thirty)\r\nRelease:\t30\r\nCodename:\tThirty\r\n```\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n\r\n```\r\n$ dotnet --version\r\n3.1.301\r\n```\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n\r\n1. Download the [protoc-v3.12.3-linux-x86_64 release][protoc]\r\n2. Run the following commands\r\n\r\n```\r\n$ unzip protoc-3.12.3-linux-x86_64.zip -d protoc\r\n$ cd protoc\r\n$ /bin/protoc -I include/ --csharp_out=. include/google/protobuf/any.proto\r\n```\r\n\r\n**What did you expect to see**\r\nI expected to see a static `Google.Protobuf.WellKnownTypes.Any.Pack` method, along with other [instance methods as seen in `AnyPartial.cs`.][anypartial]\r\n\r\n**What did you see instead?**\r\nThere is no static `Google.Protobuf.WellKnownTypes.Any.Pack` method, and all of the other instance methods are missing as well.\r\n\r\n```\r\n$ cat Any.cs\r\n// <auto-generated>\r\n//     Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n//     source: google/protobuf/any.proto\r\n// </auto-generated>\r\n#pragma warning disable 1591, 0612, 3021\r\n#region Designer generated code\r\n\r\nusing pb = global::Google.Protobuf;\r\nusing pbc = global::Google.Protobuf.Collections;\r\nusing pbr = global::Google.Protobuf.Reflection;\r\nusing scg = global::System.Collections.Generic;\r\nnamespace Google.Protobuf.WellKnownTypes {\r\n\r\n  /// <summary>Holder for reflection information generated from google/protobuf/any.proto</summary>\r\n  public static partial class AnyReflection {\r\n\r\n    #region Descriptor\r\n    /// <summary>File descriptor for google/protobuf/any.proto</summary>\r\n    public static pbr::FileDescriptor Descriptor {\r\n      get { return descriptor; }\r\n    }\r\n    private static pbr::FileDescriptor descriptor;\r\n\r\n    static AnyReflection() {\r\n      byte[] descriptorData = global::System.Convert.FromBase64String(\r\n          string.Concat(\r\n            \"Chlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvEg9nb29nbGUucHJvdG9idWYi\",\r\n            \"JgoDQW55EhAKCHR5cGVfdXJsGAEgASgJEg0KBXZhbHVlGAIgASgMQm8KE2Nv\",\r\n            \"bS5nb29nbGUucHJvdG9idWZCCEFueVByb3RvUAFaJWdpdGh1Yi5jb20vZ29s\",\r\n            \"YW5nL3Byb3RvYnVmL3B0eXBlcy9hbnmiAgNHUEKqAh5Hb29nbGUuUHJvdG9i\",\r\n            \"dWYuV2VsbEtub3duVHlwZXNiBnByb3RvMw==\"));\r\n      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,\r\n          new pbr::FileDescriptor[] { },\r\n          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {\r\n            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.WellKnownTypes.Any), global::Google.Protobuf.WellKnownTypes.Any.Parser, new[]{ \"TypeUrl\", \"Value\" }, null, null, null)\r\n          }));\r\n    }\r\n    #endregion\r\n\r\n  }\r\n  #region Messages\r\n  /// <summary>\r\n  /// `Any` contains an arbitrary serialized protocol buffer message along with a\r\n  /// URL that describes the type of the serialized message.\r\n  ///\r\n  /// Protobuf library provides support to pack/unpack Any values in the form\r\n  /// of utility functions or additional generated methods of the Any type.\r\n  ///\r\n  /// Example 1: Pack and unpack a message in C++.\r\n  ///\r\n  ///     Foo foo = ...;\r\n  ///     Any any;\r\n  ///     any.PackFrom(foo);\r\n  ///     ...\r\n  ///     if (any.UnpackTo(&amp;foo)) {\r\n  ///       ...\r\n  ///     }\r\n  ///\r\n  /// Example 2: Pack and unpack a message in Java.\r\n  ///\r\n  ///     Foo foo = ...;\r\n  ///     Any any = Any.pack(foo);\r\n  ///     ...\r\n  ///     if (any.is(Foo.class)) {\r\n  ///       foo = any.unpack(Foo.class);\r\n  ///     }\r\n  ///\r\n  ///  Example 3: Pack and unpack a message in Python.\r\n  ///\r\n  ///     foo = Foo(...)\r\n  ///     any = Any()\r\n  ///     any.Pack(foo)\r\n  ///     ...\r\n  ///     if any.Is(Foo.DESCRIPTOR):\r\n  ///       any.Unpack(foo)\r\n  ///       ...\r\n  ///\r\n  ///  Example 4: Pack and unpack a message in Go\r\n  ///\r\n  ///      foo := &amp;pb.Foo{...}\r\n  ///      any, err := ptypes.MarshalAny(foo)\r\n  ///      ...\r\n  ///      foo := &amp;pb.Foo{}\r\n  ///      if err := ptypes.UnmarshalAny(any, foo); err != nil {\r\n  ///        ...\r\n  ///      }\r\n  ///\r\n  /// The pack methods provided by protobuf library will by default use\r\n  /// 'type.googleapis.com/full.type.name' as the type URL and the unpack\r\n  /// methods only use the fully qualified type name after the last '/'\r\n  /// in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\r\n  /// name \"y.z\".\r\n  ///\r\n  /// JSON\r\n  /// ====\r\n  /// The JSON representation of an `Any` value uses the regular\r\n  /// representation of the deserialized, embedded message, with an\r\n  /// additional field `@type` which contains the type URL. Example:\r\n  ///\r\n  ///     package google.profile;\r\n  ///     message Person {\r\n  ///       string first_name = 1;\r\n  ///       string last_name = 2;\r\n  ///     }\r\n  ///\r\n  ///     {\r\n  ///       \"@type\": \"type.googleapis.com/google.profile.Person\",\r\n  ///       \"firstName\": &lt;string>,\r\n  ///       \"lastName\": &lt;string>\r\n  ///     }\r\n  ///\r\n  /// If the embedded message type is well-known and has a custom JSON\r\n  /// representation, that representation will be embedded adding a field\r\n  /// `value` which holds the custom JSON in addition to the `@type`\r\n  /// field. Example (for message [google.protobuf.Duration][]):\r\n  ///\r\n  ///     {\r\n  ///       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\r\n  ///       \"value\": \"1.212s\"\r\n  ///     }\r\n  /// </summary>\r\n  public sealed partial class Any : pb::IMessage<Any> {\r\n    private static readonly pb::MessageParser<Any> _parser = new pb::MessageParser<Any>(() => new Any());\r\n    private pb::UnknownFieldSet _unknownFields;\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public static pb::MessageParser<Any> Parser { get { return _parser; } }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public static pbr::MessageDescriptor Descriptor {\r\n      get { return global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor.MessageTypes[0]; }\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    pbr::MessageDescriptor pb::IMessage.Descriptor {\r\n      get { return Descriptor; }\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public Any() {\r\n      OnConstruction();\r\n    }\r\n\r\n    partial void OnConstruction();\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public Any(Any other) : this() {\r\n      typeUrl_ = other.typeUrl_;\r\n      value_ = other.value_;\r\n      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public Any Clone() {\r\n      return new Any(this);\r\n    }\r\n\r\n    /// <summary>Field number for the \"type_url\" field.</summary>\r\n    public const int TypeUrlFieldNumber = 1;\r\n    private string typeUrl_ = \"\";\r\n    /// <summary>\r\n    /// A URL/resource name that uniquely identifies the type of the serialized\r\n    /// protocol buffer message. This string must contain at least\r\n    /// one \"/\" character. The last segment of the URL's path must represent\r\n    /// the fully qualified name of the type (as in\r\n    /// `path/google.protobuf.Duration`). The name should be in a canonical form\r\n    /// (e.g., leading \".\" is not accepted).\r\n    ///\r\n    /// In practice, teams usually precompile into the binary all types that they\r\n    /// expect it to use in the context of Any. However, for URLs which use the\r\n    /// scheme `http`, `https`, or no scheme, one can optionally set up a type\r\n    /// server that maps type URLs to message definitions as follows:\r\n    ///\r\n    /// * If no scheme is provided, `https` is assumed.\r\n    /// * An HTTP GET on the URL must yield a [google.protobuf.Type][]\r\n    ///   value in binary format, or produce an error.\r\n    /// * Applications are allowed to cache lookup results based on the\r\n    ///   URL, or have them precompiled into a binary to avoid any\r\n    ///   lookup. Therefore, binary compatibility needs to be preserved\r\n    ///   on changes to types. (Use versioned type names to manage\r\n    ///   breaking changes.)\r\n    ///\r\n    /// Note: this functionality is not currently available in the official\r\n    /// protobuf release, and it is not used for type URLs beginning with\r\n    /// type.googleapis.com.\r\n    ///\r\n    /// Schemes other than `http`, `https` (or the empty scheme) might be\r\n    /// used with implementation specific semantics.\r\n    /// </summary>\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public string TypeUrl {\r\n      get { return typeUrl_; }\r\n      set {\r\n        typeUrl_ = pb::ProtoPreconditions.CheckNotNull(value, \"value\");\r\n      }\r\n    }\r\n\r\n    /// <summary>Field number for the \"value\" field.</summary>\r\n    public const int ValueFieldNumber = 2;\r\n    private pb::ByteString value_ = pb::ByteString.Empty;\r\n    /// <summary>\r\n    /// Must be a valid serialized protocol buffer of the above specified type.\r\n    /// </summary>\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public pb::ByteString Value {\r\n      get { return value_; }\r\n      set {\r\n        value_ = pb::ProtoPreconditions.CheckNotNull(value, \"value\");\r\n      }\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public override bool Equals(object other) {\r\n      return Equals(other as Any);\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public bool Equals(Any other) {\r\n      if (ReferenceEquals(other, null)) {\r\n        return false;\r\n      }\r\n      if (ReferenceEquals(other, this)) {\r\n        return true;\r\n      }\r\n      if (TypeUrl != other.TypeUrl) return false;\r\n      if (Value != other.Value) return false;\r\n      return Equals(_unknownFields, other._unknownFields);\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public override int GetHashCode() {\r\n      int hash = 1;\r\n      if (TypeUrl.Length != 0) hash ^= TypeUrl.GetHashCode();\r\n      if (Value.Length != 0) hash ^= Value.GetHashCode();\r\n      if (_unknownFields != null) {\r\n        hash ^= _unknownFields.GetHashCode();\r\n      }\r\n      return hash;\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public override string ToString() {\r\n      return pb::JsonFormatter.ToDiagnosticString(this);\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public void WriteTo(pb::CodedOutputStream output) {\r\n      if (TypeUrl.Length != 0) {\r\n        output.WriteRawTag(10);\r\n        output.WriteString(TypeUrl);\r\n      }\r\n      if (Value.Length != 0) {\r\n        output.WriteRawTag(18);\r\n        output.WriteBytes(Value);\r\n      }\r\n      if (_unknownFields != null) {\r\n        _unknownFields.WriteTo(output);\r\n      }\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public int CalculateSize() {\r\n      int size = 0;\r\n      if (TypeUrl.Length != 0) {\r\n        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeUrl);\r\n      }\r\n      if (Value.Length != 0) {\r\n        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);\r\n      }\r\n      if (_unknownFields != null) {\r\n        size += _unknownFields.CalculateSize();\r\n      }\r\n      return size;\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public void MergeFrom(Any other) {\r\n      if (other == null) {\r\n        return;\r\n      }\r\n      if (other.TypeUrl.Length != 0) {\r\n        TypeUrl = other.TypeUrl;\r\n      }\r\n      if (other.Value.Length != 0) {\r\n        Value = other.Value;\r\n      }\r\n      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);\r\n    }\r\n\r\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]\r\n    public void MergeFrom(pb::CodedInputStream input) {\r\n      uint tag;\r\n      while ((tag = input.ReadTag()) != 0) {\r\n        switch(tag) {\r\n          default:\r\n            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);\r\n            break;\r\n          case 10: {\r\n            TypeUrl = input.ReadString();\r\n            break;\r\n          }\r\n          case 18: {\r\n            Value = input.ReadBytes();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  #endregion\r\n\r\n}\r\n\r\n#endregion Designer generated code\r\n```\r\n\r\n**Anything else we should know about your project / environment**\r\nN/A\r\n\r\n[protoc]: https://github.com/protocolbuffers/protobuf/releases/download/v3.12.3/protoc-3.12.3-linux-x86_64.zip\r\n[anypartial]: https://github.com/protocolbuffers/protobuf/blob/master/csharp/src/Google.Protobuf/WellKnownTypes/AnyPartial.cs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7653", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7653/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7653/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7653/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7653", "id": 646666257, "node_id": "MDU6SXNzdWU2NDY2NjYyNTc=", "number": 7653, "title": "[MSVC] fails on protostream_objectwriter_test.cc", "user": {"login": "gvanem", "id": 945271, "node_id": "MDQ6VXNlcjk0NTI3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/945271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanem", "html_url": "https://github.com/gvanem", "followers_url": "https://api.github.com/users/gvanem/followers", "following_url": "https://api.github.com/users/gvanem/following{/other_user}", "gists_url": "https://api.github.com/users/gvanem/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanem/subscriptions", "organizations_url": "https://api.github.com/users/gvanem/orgs", "repos_url": "https://api.github.com/users/gvanem/repos", "events_url": "https://api.github.com/users/gvanem/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T11:46:31Z", "updated_at": "2020-07-06T23:04:24Z", "closed_at": "2020-07-06T23:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The file `util/internal/protostream_objectwriter_test.cc` fails to compile with MSVC-2019:\r\n```\r\nprotostream_objectwriter_test.cc(107): error C2039: 'tr1': is not a member of 'std'\r\nf:\\gv\\VC_2019\\VC\\Tools\\MSVC\\14.26.28801\\include\\stack(20): note: see declaration of 'std'\r\nprotostream_objectwriter_test.cc(107): error C3083: 'tr1': the symbol to the left of a '::' must be a type\r\n```\r\n\r\nReason seems to be that with `cl -std:c++14`, it does not set the value of `__cplusplus` to a suitable value for:\r\n```c\r\n#if __cplusplus >= 201103L\r\nusing std::get;\r\n#else\r\nusing std::tr1::get;\r\n#endif\r\n```\r\n\r\nBut with this, it compiles with any `-std:cxx` value.\r\n```c\r\n#if (__cplusplus >= 201103L) || (_MSVC_LANG >= 201103L)\r\nusing std::get;\r\n#else\r\nusing std::tr1::get;\r\n#endif\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7649", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7649/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7649/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7649/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7649", "id": 645551635, "node_id": "MDU6SXNzdWU2NDU1NTE2MzU=", "number": 7649, "title": "undefined symbol: _ZN6google8protobuf5Arena18CreateMaybeMessageIN7demo10Demo", "user": {"login": "GOGOYAO", "id": 18675094, "node_id": "MDQ6VXNlcjE4Njc1MDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/18675094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GOGOYAO", "html_url": "https://github.com/GOGOYAO", "followers_url": "https://api.github.com/users/GOGOYAO/followers", "following_url": "https://api.github.com/users/GOGOYAO/following{/other_user}", "gists_url": "https://api.github.com/users/GOGOYAO/gists{/gist_id}", "starred_url": "https://api.github.com/users/GOGOYAO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GOGOYAO/subscriptions", "organizations_url": "https://api.github.com/users/GOGOYAO/orgs", "repos_url": "https://api.github.com/users/GOGOYAO/repos", "events_url": "https://api.github.com/users/GOGOYAO/events{/privacy}", "received_events_url": "https://api.github.com/users/GOGOYAO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T13:12:21Z", "updated_at": "2020-07-22T10:11:31Z", "closed_at": "2020-07-22T08:34:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.11.2\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\ncentos 7\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\ngcc 8.3.1\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\nI generate a static lib using the codes generated by protoc. And Then I compile out a shared lib (.so) with the static lib. Finnaly I will compile out my binary with the shared lib. The proto is like this,\r\n```\r\npackage demo;\r\nmessage Demo {\r\n   optional string name = 1;\r\n}\r\n\r\nmessage a {\r\n   repeated Demo demo = 1;\r\n}\r\n```\r\nThen, my binary whill link my `.so` file but I get the error `undefined symbol` when I run the binary.\r\n\r\n**What did you expect to see**\r\nI can run my binary successfully.\r\n\r\n**What did you see instead?**\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\nIf I modify the `message a` like this,\r\n```\r\nmessage a {\r\n   repeated string demo = 1;\r\n}\r\n```\r\nI will run my binary successfully. Or I did not use the `add_demo()` function, it works too.\r\n\r\nI check the symbol of my `.so` file. I can see two records about `_ZN6google8protobuf5Arena18CreateMaybeMessageIN7demo10Demo`.\r\n\r\n```\r\n                 U _ZN6google8protobuf5Arena18CreateMaybeMessageIN7demo10DemoEIEEEPT_PS1_DpOT0_\r\n00000000001e36fc T _ZN6google8protobuf5Arena18CreateMaybeMessageIN7demo10DemoEJEEEPT_PS1_DpOT0_\r\n```\r\nI use the `c++filt` and I can see they are the same function, which I can find in the `pb.cc`.\r\n\r\n**Anything else we should know about your project / environment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7647", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7647/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7647/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7647/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7647", "id": 645088279, "node_id": "MDU6SXNzdWU2NDUwODgyNzk=", "number": 7647, "title": "Any message type throws access violation error in C++", "user": {"login": "hazdazzler009", "id": 67400733, "node_id": "MDQ6VXNlcjY3NDAwNzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/67400733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hazdazzler009", "html_url": "https://github.com/hazdazzler009", "followers_url": "https://api.github.com/users/hazdazzler009/followers", "following_url": "https://api.github.com/users/hazdazzler009/following{/other_user}", "gists_url": "https://api.github.com/users/hazdazzler009/gists{/gist_id}", "starred_url": "https://api.github.com/users/hazdazzler009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hazdazzler009/subscriptions", "organizations_url": "https://api.github.com/users/hazdazzler009/orgs", "repos_url": "https://api.github.com/users/hazdazzler009/repos", "events_url": "https://api.github.com/users/hazdazzler009/events{/privacy}", "received_events_url": "https://api.github.com/users/hazdazzler009/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-25T01:59:58Z", "updated_at": "2020-06-26T23:36:14Z", "closed_at": "2020-06-26T17:52:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the following proto file:\r\n\r\n```\r\nservice Greeter {\r\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\r\n}\r\n\r\nmessage HelloRequest {\r\n  string name = 1;\r\n}\r\n\r\nmessage foo {\r\n string name = 1;\r\n}\r\n\r\n// The response message containing the greetings\r\nmessage HelloReply {\r\n  string message = 1;\r\n  google.protobuf.Any details = 2;\r\n}\r\n\r\n```\r\nOn server side, this is how I populate the reply:\r\n\r\n ```\r\nstd::string prefix(\"Hello \");\r\nreply->set_message(prefix + request->name());\r\nfoo f;\r\nf.set_name(\"my name is foo\");\r\n\r\nAny any;\r\nany.PackFrom(f);\r\nreply->set_allocated_details(&any);\r\n\t\r\nreturn Status::OK;\r\n```\r\nOn the client side I get the following error:\r\n```\r\n14: Endpoint read failed\r\nGreeter received: RPC failed\r\n```\r\nIf I uncomment the set_allocated_details line then everything works. Can anyone tell me what am I doing wrong, seems like I am missing something obvious?\r\nprotoc version: libprotoc 3.2.0\r\nplatform : windows", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7640", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7640/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7640/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7640/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7640", "id": 641540416, "node_id": "MDU6SXNzdWU2NDE1NDA0MTY=", "number": 7640, "title": "Ruby: proto3_optional fields' generated oneofs do not track presence", "user": {"login": "viacheslav-rostovtsev", "id": 58152857, "node_id": "MDQ6VXNlcjU4MTUyODU3", "avatar_url": "https://avatars1.githubusercontent.com/u/58152857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viacheslav-rostovtsev", "html_url": "https://github.com/viacheslav-rostovtsev", "followers_url": "https://api.github.com/users/viacheslav-rostovtsev/followers", "following_url": "https://api.github.com/users/viacheslav-rostovtsev/following{/other_user}", "gists_url": "https://api.github.com/users/viacheslav-rostovtsev/gists{/gist_id}", "starred_url": "https://api.github.com/users/viacheslav-rostovtsev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viacheslav-rostovtsev/subscriptions", "organizations_url": "https://api.github.com/users/viacheslav-rostovtsev/orgs", "repos_url": "https://api.github.com/users/viacheslav-rostovtsev/repos", "events_url": "https://api.github.com/users/viacheslav-rostovtsev/events{/privacy}", "received_events_url": "https://api.github.com/users/viacheslav-rostovtsev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307319070, "node_id": "MDU6TGFiZWwzMDczMTkwNzA=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/ruby", "name": "ruby", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "haberman", "id": 1270, "node_id": "MDQ6VXNlcjEyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haberman", "html_url": "https://github.com/haberman", "followers_url": "https://api.github.com/users/haberman/followers", "following_url": "https://api.github.com/users/haberman/following{/other_user}", "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haberman/subscriptions", "organizations_url": "https://api.github.com/users/haberman/orgs", "repos_url": "https://api.github.com/users/haberman/repos", "events_url": "https://api.github.com/users/haberman/events{/privacy}", "received_events_url": "https://api.github.com/users/haberman/received_events", "type": "User", "site_admin": false}, {"login": "TeBoring", "id": 5195749, "node_id": "MDQ6VXNlcjUxOTU3NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5195749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeBoring", "html_url": "https://github.com/TeBoring", "followers_url": "https://api.github.com/users/TeBoring/followers", "following_url": "https://api.github.com/users/TeBoring/following{/other_user}", "gists_url": "https://api.github.com/users/TeBoring/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeBoring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeBoring/subscriptions", "organizations_url": "https://api.github.com/users/TeBoring/orgs", "repos_url": "https://api.github.com/users/TeBoring/repos", "events_url": "https://api.github.com/users/TeBoring/events{/privacy}", "received_events_url": "https://api.github.com/users/TeBoring/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-18T20:49:14Z", "updated_at": "2020-06-23T22:22:47Z", "closed_at": "2020-06-23T22:22:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: 3.12.2\r\nLanguage: Ruby\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nx86_64-linux\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nruby 2.5.7\r\n\r\n**What did you do?**\r\nI'm trying to use the new proto3_optional field and check it's generated oneof field to track its presence. Please refer to the example below:\r\n```\r\nrequire 'google/protobuf'\r\n\r\nGoogle::Protobuf::DescriptorPool.generated_pool.build do\r\n  add_message \"TestMessage\" do\r\n    oneof :oneof_singular do\r\n      optional :oneof_singular_str, :string, 1\r\n    end\r\n    proto3_optional :optional_str, :string, 2\r\n  end\r\nend\r\n\r\nTestMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup(\"TestMessage\").msgclass\r\nmessage = TestMessage.new\r\n\r\n# Non-default value\r\nmessage.oneof_singular_str = \"foo\"\r\nputs message.oneof_singular == :oneof_singular_str # => true\r\nputs message.oneof_singular_str == \"foo\" # => true\r\n\r\n# Default value\r\nmessage.optional_str = \"foo\"\r\nputs message.optional_str == \"foo\" # => true\r\nputs message._optional_str == :optional_str # => false (unexpected)\r\nputs message._optional_str == nil # => true (unexpected)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7638", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7638/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7638/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7638/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7638", "id": 641208225, "node_id": "MDU6SXNzdWU2NDEyMDgyMjU=", "number": 7638, "title": "[Question]: Maps in Protobuf options", "user": {"login": "katallaxie", "id": 570959, "node_id": "MDQ6VXNlcjU3MDk1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/570959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katallaxie", "html_url": "https://github.com/katallaxie", "followers_url": "https://api.github.com/users/katallaxie/followers", "following_url": "https://api.github.com/users/katallaxie/following{/other_user}", "gists_url": "https://api.github.com/users/katallaxie/gists{/gist_id}", "starred_url": "https://api.github.com/users/katallaxie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katallaxie/subscriptions", "organizations_url": "https://api.github.com/users/katallaxie/orgs", "repos_url": "https://api.github.com/users/katallaxie/repos", "events_url": "https://api.github.com/users/katallaxie/events{/privacy}", "received_events_url": "https://api.github.com/users/katallaxie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T13:27:52Z", "updated_at": "2020-07-01T16:09:18Z", "closed_at": "2020-07-01T16:09:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to ask the question, if it is possible to have a map in a Protobuf option. Because the example are working with `oneof`, and scalar types, but as you can also specify a map (e.g. `map<string,string> = 1;` it should also be possible to specify the value of the map. But I did not find an example how to actually write this option. \r\n\r\nLet me give you an example.\r\n\r\n```\r\n// Specific Service ...\r\nmessage MyService {\r\n   message UpdateItemInput {\r\n    string Name    = 1;\r\n   // Having a map of attributes for the options.\r\n    map<string,string> Attributes = 2;\r\n  }\r\n\r\n  oneof input {\r\n    UpdateItemInput UpdateItem = 3;\r\n  }\r\n}\r\n\r\n// Service mapping ...\r\nmessage Services {\r\n  string selector = 1;\r\n\r\n  oneof pattern {\r\n    MyService MyService = 1;\r\n  }\r\n}\r\n\r\n// providing the options\r\nextend google.protobuf.MethodOptions {\r\n  Services services = 12345678;\r\n}\r\n\r\n```\r\n\r\nWhen specifying the option, the `string` gets parsed by `protoc` and the go generator and works. But I don't know how to actually specify the values for the map for `Attributes` \ud83e\udd14 . If this is actually in the the language or should not be possible. \r\n\r\n```\r\n// Example ...\r\nservice Example {\r\n  // Update ...\r\n  rpc Update(Update.Request) returns (Update.Response) {\r\n    option (com.example.services).MyService.UpdateItem = {\r\n      Name: \"example\"\r\n      Attributes: { { \"key\": \"value\" } }\r\n    };\r\n  };\r\n  // ListItems ...\r\n  rpc ListItems(ListItems.Request) returns (stream ListItems.Response);\r\n}\r\n```\r\n\r\nThanks for any guidance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7637", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7637/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7637/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7637/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7637", "id": 640956414, "node_id": "MDU6SXNzdWU2NDA5NTY0MTQ=", "number": 7637, "title": "3.12.3 might be wrongly tagged - created from master branch? (C#-release package lose IBufferMessage.cs)", "user": {"login": "IllusionCui", "id": 4591296, "node_id": "MDQ6VXNlcjQ1OTEyOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4591296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IllusionCui", "html_url": "https://github.com/IllusionCui", "followers_url": "https://api.github.com/users/IllusionCui/followers", "following_url": "https://api.github.com/users/IllusionCui/following{/other_user}", "gists_url": "https://api.github.com/users/IllusionCui/gists{/gist_id}", "starred_url": "https://api.github.com/users/IllusionCui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IllusionCui/subscriptions", "organizations_url": "https://api.github.com/users/IllusionCui/orgs", "repos_url": "https://api.github.com/users/IllusionCui/repos", "events_url": "https://api.github.com/users/IllusionCui/events{/privacy}", "received_events_url": "https://api.github.com/users/IllusionCui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 205322238, "node_id": "MDU6TGFiZWwyMDUzMjIyMzg=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c%23", "name": "c#", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dlj-NaN", "id": 17623044, "node_id": "MDQ6VXNlcjE3NjIzMDQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/17623044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlj-NaN", "html_url": "https://github.com/dlj-NaN", "followers_url": "https://api.github.com/users/dlj-NaN/followers", "following_url": "https://api.github.com/users/dlj-NaN/following{/other_user}", "gists_url": "https://api.github.com/users/dlj-NaN/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlj-NaN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlj-NaN/subscriptions", "organizations_url": "https://api.github.com/users/dlj-NaN/orgs", "repos_url": "https://api.github.com/users/dlj-NaN/repos", "events_url": "https://api.github.com/users/dlj-NaN/events{/privacy}", "received_events_url": "https://api.github.com/users/dlj-NaN/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dlj-NaN", "id": 17623044, "node_id": "MDQ6VXNlcjE3NjIzMDQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/17623044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlj-NaN", "html_url": "https://github.com/dlj-NaN", "followers_url": "https://api.github.com/users/dlj-NaN/followers", "following_url": "https://api.github.com/users/dlj-NaN/following{/other_user}", "gists_url": "https://api.github.com/users/dlj-NaN/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlj-NaN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlj-NaN/subscriptions", "organizations_url": "https://api.github.com/users/dlj-NaN/orgs", "repos_url": "https://api.github.com/users/dlj-NaN/repos", "events_url": "https://api.github.com/users/dlj-NaN/events{/privacy}", "received_events_url": "https://api.github.com/users/dlj-NaN/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-06-18T06:52:50Z", "updated_at": "2020-07-30T23:05:39Z", "closed_at": "2020-07-30T23:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "3.12.3-C#-release package lose IBufferMessage.cs\r\n3.12.3-source-release package contains IBufferMessage.cs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7636", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7636/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7636/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7636/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7636", "id": 640616962, "node_id": "MDU6SXNzdWU2NDA2MTY5NjI=", "number": 7636, "title": "[Docs] Language Guide (proto3) reference errors", "user": {"login": "DazWilkin", "id": 1022400, "node_id": "MDQ6VXNlcjEwMjI0MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1022400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DazWilkin", "html_url": "https://github.com/DazWilkin", "followers_url": "https://api.github.com/users/DazWilkin/followers", "following_url": "https://api.github.com/users/DazWilkin/following{/other_user}", "gists_url": "https://api.github.com/users/DazWilkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/DazWilkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DazWilkin/subscriptions", "organizations_url": "https://api.github.com/users/DazWilkin/orgs", "repos_url": "https://api.github.com/users/DazWilkin/repos", "events_url": "https://api.github.com/users/DazWilkin/events{/privacy}", "received_events_url": "https://api.github.com/users/DazWilkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T17:25:55Z", "updated_at": "2020-06-19T17:20:33Z", "closed_at": "2020-06-19T17:20:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Documentation errors:\r\n\r\nhttps://developers.google.com/protocol-buffers/docs/proto3\r\n\r\nThe in-page content has incorrect in-page references:\r\n\r\n```HTML\r\n<a href=\"#services\">Defining Services</a>\r\n<a href=\"#json\">JSON Mapping</a>\r\n```\r\nAre both incorrect:\r\n\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#services\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#json\r\n\r\nThe right-hand content list has these correctly as:\r\n\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#defining_services\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#json_mapping\r\n\r\nThere are possibly others.\r\n\r\nIt would be helpful to have and I was unable to find a \"Send feedback\" option on pages on this site as is found with e.g. Google Cloud Platform documentation\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7634", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7634/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7634/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7634/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7634", "id": 639608763, "node_id": "MDU6SXNzdWU2Mzk2MDg3NjM=", "number": 7634, "title": "Proto3, I can't Merge zero value to a new object", "user": {"login": "imsoul", "id": 4151408, "node_id": "MDQ6VXNlcjQxNTE0MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4151408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imsoul", "html_url": "https://github.com/imsoul", "followers_url": "https://api.github.com/users/imsoul/followers", "following_url": "https://api.github.com/users/imsoul/following{/other_user}", "gists_url": "https://api.github.com/users/imsoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/imsoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imsoul/subscriptions", "organizations_url": "https://api.github.com/users/imsoul/orgs", "repos_url": "https://api.github.com/users/imsoul/repos", "events_url": "https://api.github.com/users/imsoul/events{/privacy}", "received_events_url": "https://api.github.com/users/imsoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-16T12:01:31Z", "updated_at": "2020-06-17T19:21:36Z", "closed_at": "2020-06-16T16:25:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes I want to update one field or several fields of the object.\r\nI use the method \"MergeFrom\"\r\nbut when the new object has zeo value, I can't update the value.\r\n\r\nFor example:\r\n\r\n```\r\n  message User{\r\n  int32 uid = 1; \r\n  string name= 2; \r\n  int32 age= 3; \r\n  int32 coin= 4; \r\n  int32 exp= 5; \r\n  }\r\n```\r\n\r\n```\r\n$data = [\r\n            'uid'=>1,\r\n            'name'=>'Soul',\r\n            'age'=>20,\r\n            'coin'=>1000,\r\n            'exp'=>1000\r\n        ];\r\n        $roleProto = new User($data);\r\n\r\n        $data2 = [\r\n            'uid'=>1,\r\n            'coin'=>0,\r\n            'exp'=>1100,\r\n        ];\r\n\r\n        $roleProto2 = new User($data2);\r\n        $str = $roleProto2->serializeToString();\r\n        $roleProto->mergeFromString($str);\r\n        var_dump($roleProto->serializeToJsonString());\r\n```\r\n\r\nIt dosen't work. the field \"coin\" isn't update.\r\nbut when I use \"google.protobuf.Int64Value\", it works in PHP, but it dosen't work in C#(unity).\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7632", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7632/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7632/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7632/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7632", "id": 639298820, "node_id": "MDU6SXNzdWU2MzkyOTg4MjA=", "number": 7632, "title": "3.12.3 release binaries do not include commits present in 3.12.3 Git tag", "user": {"login": "kevinburkemeter", "id": 51895701, "node_id": "MDQ6VXNlcjUxODk1NzAx", "avatar_url": "https://avatars1.githubusercontent.com/u/51895701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinburkemeter", "html_url": "https://github.com/kevinburkemeter", "followers_url": "https://api.github.com/users/kevinburkemeter/followers", "following_url": "https://api.github.com/users/kevinburkemeter/following{/other_user}", "gists_url": "https://api.github.com/users/kevinburkemeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinburkemeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinburkemeter/subscriptions", "organizations_url": "https://api.github.com/users/kevinburkemeter/orgs", "repos_url": "https://api.github.com/users/kevinburkemeter/repos", "events_url": "https://api.github.com/users/kevinburkemeter/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinburkemeter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-16T01:20:39Z", "updated_at": "2020-07-30T23:06:29Z", "closed_at": "2020-07-30T23:06:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The commit before the v3.12.3 tagged release is 28cc693f3d05bab5f779b6fc8d514868130e81c1. I would expect to see this commit present in releases tagged for v3.12.3. Unfortunately, it appears as if it is not present; if I download the v3.12.3 release from the Github releases page, and run it, I do not see that \"Generated protocol buffer code\" message in the generated Python code.\r\n\r\nWhen I install protoc from Homebrew, it checks out the Git tag and compiles, so I do see the message. This is a problem because some of my team members use Linux and some of them use Mac. This means that the generated protobuf file thrashes back and forth when different members of the team generate it.\r\n\r\nI can't inspect the binary but I did run strings on it and I did not see the message in the compiled binary. Compare:\r\n\r\n```\r\n~/src/github.com/meterup/proto/protoc-3.12.3-linux-x86_64\r\n\u00b1 (python*) $ strings ./bin/protoc| grep 'Generated protocol'\r\n\r\n~/src/github.com/meterup/proto/protoc-3.12.3-linux-x86_64\r\n\u00b1 (python*) $ strings /usr/local/Cellar/protobuf/3.12.3/lib/libprotoc.23.dylib | grep 'Generated protocol'\r\n\"\"\"Generated protocol buffer code.\"\"\"\r\n```\r\n\r\nCould you consider creating a new release that contains exactly the commits described in the release tag? This is the best way to ensure that things are predictable. \r\n\r\nIt seems like others have previously reported problems with the Protobuf release process so this may be worth investing some time in. Alternatively, include metadata about the Git commit in the `.zip` file so that it can be compared against the actual Git tag corresponding to the release.\r\n\r\nhttps://github.com/protocolbuffers/protobuf/issues/7560 \r\nhttps://github.com/protocolbuffers/protobuf/issues/7600\r\nhttps://github.com/protocolbuffers/protobuf/issues/7627", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7627", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7627/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7627/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7627/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7627", "id": 638225897, "node_id": "MDU6SXNzdWU2MzgyMjU4OTc=", "number": 7627, "title": "IBufferMessage Missing in 3.12.3", "user": {"login": "Zehua-Chen", "id": 31496190, "node_id": "MDQ6VXNlcjMxNDk2MTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/31496190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zehua-Chen", "html_url": "https://github.com/Zehua-Chen", "followers_url": "https://api.github.com/users/Zehua-Chen/followers", "following_url": "https://api.github.com/users/Zehua-Chen/following{/other_user}", "gists_url": "https://api.github.com/users/Zehua-Chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zehua-Chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zehua-Chen/subscriptions", "organizations_url": "https://api.github.com/users/Zehua-Chen/orgs", "repos_url": "https://api.github.com/users/Zehua-Chen/repos", "events_url": "https://api.github.com/users/Zehua-Chen/events{/privacy}", "received_events_url": "https://api.github.com/users/Zehua-Chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-13T20:20:07Z", "updated_at": "2020-08-13T19:28:06Z", "closed_at": "2020-08-13T19:28:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.12.3.\r\nLanguage: C#\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\n\r\nmacOS 10.15.5\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n\r\n- protoc version 3.12.3\r\n- Unity 2019.2.11f1\r\n- API Compatibility Level: .Net Standard 2.0\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Compile .proto files using protoc\r\n2. Download packages from NuGet and find dll files under `netstandard2.0` folder:\r\n   - [Google.Protobuf](https://www.nuget.org/packages/Google.Protobuf/)\r\n   - [System.Memory](https://www.nuget.org/packages/System.Memory/)\r\n   - [System.Buffers](https://www.nuget.org/packages/System.Buffers/)\r\n3. Import the dll files into Unity\r\n4. See compiler error saying that `IBufferMessage` is missing\r\n\r\n**What did you expect to see**\r\n\r\nNo compiler errors\r\n\r\n**What did you see instead?**\r\n\r\nCompiler error saying that `IBufferMessage` is missing\r\n\r\n**Anything else we should know about your project / environment**\r\n\r\nIf I clone the repo and checkout v3.12.3, build it on my own machine, import the dlls, then there are no errors. But if I use the dll I got from NuGet, then there are errors", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7623", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7623/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7623/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7623/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7623", "id": 637975895, "node_id": "MDU6SXNzdWU2Mzc5NzU4OTU=", "number": 7623, "title": "protoc --descriptor_set_out should include FileDescriptorProto.source_code_info like protoc --XXX_out", "user": {"login": "timostamm", "id": 4289451, "node_id": "MDQ6VXNlcjQyODk0NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4289451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timostamm", "html_url": "https://github.com/timostamm", "followers_url": "https://api.github.com/users/timostamm/followers", "following_url": "https://api.github.com/users/timostamm/following{/other_user}", "gists_url": "https://api.github.com/users/timostamm/gists{/gist_id}", "starred_url": "https://api.github.com/users/timostamm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timostamm/subscriptions", "organizations_url": "https://api.github.com/users/timostamm/orgs", "repos_url": "https://api.github.com/users/timostamm/repos", "events_url": "https://api.github.com/users/timostamm/events{/privacy}", "received_events_url": "https://api.github.com/users/timostamm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T20:02:20Z", "updated_at": "2020-06-16T07:21:36Z", "closed_at": "2020-06-16T07:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: 3.12.3\r\nLanguage: n/a\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nn/a\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nn/a\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n\r\n1) create `comments.proto`:\r\n```proto\r\nsyntax = \"proto3\";\r\npackage testing;\r\nmessage MessageWithComments {\r\n    // Leading field comment.\r\n    string foo = 1;\r\n}\r\n```\r\n\r\n2) Write a FileDescriptorSet for it:\r\n```shell\r\n$ protoc --descriptor_set_out temp comments.proto\r\n```\r\n\r\n3) Text-format it:\r\n```shell\r\nprotoc < temp --decode=google.protobuf.FileDescriptorSet google/protobuf/descriptor.proto\r\n```\r\n\r\n\r\n**What did you expect to see**\r\n\r\nSourceCodeInfo with comments:\r\n\r\n```shell\r\nfile {\r\n  name: \"comments.proto\"\r\n  package: \"testing\"\r\n  message_type {\r\n    name: \"MessageWithComments\"\r\n    field {\r\n      name: \"foo\"\r\n      number: 1\r\n      label: LABEL_OPTIONAL\r\n      type: TYPE_STRING\r\n      json_name: \"foo\"\r\n    }\r\n  }\r\n  source_code_info {\r\n    \u2026\r\n    location {\r\n      path: 4\r\n      path: 0\r\n      path: 2\r\n      path: 0\r\n      span: 4\r\n      span: 4\r\n      span: 19\r\n      leading_comments: \" Leading field comment.\\n\"\r\n    }\r\n    \u2026\r\n  }\r\n  syntax: \"proto3\"\r\n}\r\n```\r\n\r\n**What did you see instead?**\r\n\r\n```shell\r\n$ protoc < temp --decode=google.protobuf.FileDescriptorSet google/protobuf/descriptor.proto\r\nfile {\r\n  name: \"comments.proto\"\r\n  package: \"testing\"\r\n  message_type {\r\n    name: \"MessageWithComments\"\r\n    field {\r\n      name: \"foo\"\r\n      number: 1\r\n      label: LABEL_OPTIONAL\r\n      type: TYPE_STRING\r\n      json_name: \"foo\"\r\n    }\r\n  }\r\n  syntax: \"proto3\"\r\n}\r\n```\r\n\r\n**Anything else we should know about your project / environment**\r\n\r\nWriting a protoc plugin, wanted to use `--descriptor_set_out` to generate data for unit tests. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7616", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7616/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7616/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7616/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7616", "id": 636692867, "node_id": "MDU6SXNzdWU2MzY2OTI4Njc=", "number": 7616, "title": "mac  Protobuf 3.12 AuxillaryParseTableField wrong spelling", "user": {"login": "hanyang2013212", "id": 18328645, "node_id": "MDQ6VXNlcjE4MzI4NjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/18328645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanyang2013212", "html_url": "https://github.com/hanyang2013212", "followers_url": "https://api.github.com/users/hanyang2013212/followers", "following_url": "https://api.github.com/users/hanyang2013212/following{/other_user}", "gists_url": "https://api.github.com/users/hanyang2013212/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanyang2013212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanyang2013212/subscriptions", "organizations_url": "https://api.github.com/users/hanyang2013212/orgs", "repos_url": "https://api.github.com/users/hanyang2013212/repos", "events_url": "https://api.github.com/users/hanyang2013212/events{/privacy}", "received_events_url": "https://api.github.com/users/hanyang2013212/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-11T03:41:14Z", "updated_at": "2020-06-11T04:03:54Z", "closed_at": "2020-06-11T04:03:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running PX4 gazebo simulation on mac catellina, however, the build was faild due to a list of errors associated with AuxillaryParseTableField:\r\n\r\n/usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/msgs/altimeter.pb.h:53:51: error: no type named 'AuxillaryParseTableField' in namespace 'google::protobuf::internal'; did you mean 'AuxiliaryParseTableField'?\r\n  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]\r\n               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\r\n/usr/local/include/google/protobuf/generated_message_table_driven.h:141:7: note: 'AuxiliaryParseTableField' declared here\r\nunion AuxiliaryParseTableField {\r\n      ^\r\nIn file included from /Users/hanyang/Documents/Firmware/Tools/sitl_gazebo/src/gazebo_irlock_plugin.cpp:23:\r\nIn file included from /usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/sensors/DepthCameraSensor.hh:23:\r\nIn file included from /usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/sensors/CameraSensor.hh:24:\r\nIn file included from /usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/sensors/Sensor.hh:33:\r\nIn file included from /usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/msgs/msgs.hh:35:\r\nIn file included from /usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/msgs/MessageTypes.hh:8:\r\nIn file included from /usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/msgs/any.pb.h:36:\r\n/usr/local/Cellar/gazebo9/9.13.0_1/include/gazebo-9/gazebo/msgs/color.pb.h:52:51: error: no type named 'AuxillaryParseTableField' in namespace 'google::protobuf::internal'; did you mean 'AuxiliaryParseTableField'?\r\n  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]\r\n               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^ \r\n/usr/local/include/google/protobuf/generated_message_table_driven.h:141:7: note: 'AuxiliaryParseTableField' declared here\r\nunion AuxiliaryParseTableField {\r\n      ^\r\nIn file included from /Users/hanyang/Documents/Firmware/Tools/sitl_gazebo/src/gazebo_irlock_plugin.cpp:23:\r\n\r\nI guess whether there is a spelling bug with the new version of the protobuf", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7612", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7612/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7612/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7612/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7612", "id": 636531743, "node_id": "MDU6SXNzdWU2MzY1MzE3NDM=", "number": 7612, "title": "3.12.3: is not LTO ready", "user": {"login": "kloczek", "id": 31284574, "node_id": "MDQ6VXNlcjMxMjg0NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/31284574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kloczek", "html_url": "https://github.com/kloczek", "followers_url": "https://api.github.com/users/kloczek/followers", "following_url": "https://api.github.com/users/kloczek/following{/other_user}", "gists_url": "https://api.github.com/users/kloczek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kloczek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kloczek/subscriptions", "organizations_url": "https://api.github.com/users/kloczek/orgs", "repos_url": "https://api.github.com/users/kloczek/repos", "events_url": "https://api.github.com/users/kloczek/events{/privacy}", "received_events_url": "https://api.github.com/users/kloczek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T20:37:04Z", "updated_at": "2020-06-20T20:29:23Z", "closed_at": "2020-06-20T20:29:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've build protobuf with LTO however af ter that trying to build protobuf-c I found that some public cymbols have been removed by LTo and protobuf-c build fails with:\r\n```\r\n[tkloczko@barrel protobuf-c-1.3.3]$ make\r\n/bin/sh ./libtool  --tag=CXX   --mode=link g++ -std=c++11  -pthread  -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection   -Wl,-z,relro -Wl,--as-needed  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld  -o protoc-c/protoc-gen-c protoc-c/protoc_gen_c-c_bytes_field.o protoc-c/protoc_gen_c-c_enum.o protoc-c/protoc_gen_c-c_enum_field.o protoc-c/protoc_gen_c-c_extension.o protoc-c/protoc_gen_c-c_field.o protoc-c/protoc_gen_c-c_file.o protoc-c/protoc_gen_c-c_generator.o protoc-c/protoc_gen_c-c_helpers.o protoc-c/protoc_gen_c-c_message.o protoc-c/protoc_gen_c-c_message_field.o protoc-c/protoc_gen_c-c_primitive_field.o protoc-c/protoc_gen_c-c_service.o protoc-c/protoc_gen_c-c_string_field.o protoc-c/protoc_gen_c-main.o  -lprotoc\r\nlibtool: link: g++ -std=c++11 -pthread -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -Wl,-z -Wl,relro -Wl,--as-needed -Wl,-z -Wl,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -o protoc-c/protoc-gen-c protoc-c/protoc_gen_c-c_bytes_field.o protoc-c/protoc_gen_c-c_enum.o protoc-c/protoc_gen_c-c_enum_field.o protoc-c/protoc_gen_c-c_extension.o protoc-c/protoc_gen_c-c_field.o protoc-c/protoc_gen_c-c_file.o protoc-c/protoc_gen_c-c_generator.o protoc-c/protoc_gen_c-c_helpers.o protoc-c/protoc_gen_c-c_message.o protoc-c/protoc_gen_c-c_message_field.o protoc-c/protoc_gen_c-c_primitive_field.o protoc-c/protoc_gen_c-c_service.o protoc-c/protoc_gen_c-c_string_field.o protoc-c/protoc_gen_c-main.o  -lprotoc -pthread\r\n/usr/bin/ld: protoc-c/protoc_gen_c-c_field.o: undefined reference to symbol '_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci'\r\n/usr/bin/ld: /usr/lib64/libprotobuf.so.23: error adding symbols: DSO missing from command line\r\ncollect2: error: ld returned 1 exit status\r\nmake: *** [Makefile:1195: protoc-c/protoc-gen-c] Error 1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7607", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7607/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7607/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7607/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7607", "id": 634574323, "node_id": "MDU6SXNzdWU2MzQ1NzQzMjM=", "number": 7607, "title": "Can't get `import ` info in the `.proto` file recursively", "user": {"login": "Abbyyan", "id": 12140508, "node_id": "MDQ6VXNlcjEyMTQwNTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/12140508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abbyyan", "html_url": "https://github.com/Abbyyan", "followers_url": "https://api.github.com/users/Abbyyan/followers", "following_url": "https://api.github.com/users/Abbyyan/following{/other_user}", "gists_url": "https://api.github.com/users/Abbyyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abbyyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abbyyan/subscriptions", "organizations_url": "https://api.github.com/users/Abbyyan/orgs", "repos_url": "https://api.github.com/users/Abbyyan/repos", "events_url": "https://api.github.com/users/Abbyyan/events{/privacy}", "received_events_url": "https://api.github.com/users/Abbyyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T12:39:36Z", "updated_at": "2020-06-10T06:55:37Z", "closed_at": "2020-06-10T06:55:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've write a proto file `test1.proto` which import another file `test2.proto` , and `test2.proto` import `test3.proto`. They are just like follows.\r\n`test1.proto` \r\n```\r\nsyntax = \"proto3\";\r\nimport test2.proto\r\n```\r\nand here is `test2.proto `.\r\n```\r\nsyntax = \"proto3\";\r\nimport test3.proto\r\n```\r\n\r\nBut when i use `Importer` to process `test1.prot` and get its dependencies, i can only get the outer most dependency which is `test2.proto` (which i thought should be `test2.proto` and `test3.proto`). \r\n```cpp\r\ngoogle::protobuf::compiler::DiskSourceTree sourceTree;  // source tree\r\n  sourceTree.MapPath(\"\", \"./proto_info\");\r\n  MyErrorCollector errorCollector;\r\n  google::protobuf::compiler::Importer importer(&sourceTree, &errorCollector);\r\n  const google::protobuf::FileDescriptor* filedes =\r\n      importer.Import(\"test1.proto\");\r\n// cout<< \"file des = \"<<filedes->DebugString()<<endl;\r\n  cout<<\"dependecies count = \"<<filedes->dependency_count()<<endl;\r\nfor(int i =0 ;i<filedes->dependency_count();i++){\r\n      cout<<\"index = \"<<i<<\" ; dependency = \"<<filedes->dependency(i)->name()<<endl;\r\n  }\r\n```\r\nThe output info is as follows:\r\n```shell\r\n>>> dependecies count = 1\r\n>>> index = 0; dependency = test2.cpp\r\n\r\n```\r\nAny problems there please? How can i get all the dependencies recursively please? Hope for your help. Thanks a lot. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7600", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7600/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7600/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7600/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7600", "id": 631562091, "node_id": "MDU6SXNzdWU2MzE1NjIwOTE=", "number": 7600, "title": "protobuf-java 3.12.3 not published", "user": {"login": "augi", "id": 273052, "node_id": "MDQ6VXNlcjI3MzA1Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/273052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/augi", "html_url": "https://github.com/augi", "followers_url": "https://api.github.com/users/augi/followers", "following_url": "https://api.github.com/users/augi/following{/other_user}", "gists_url": "https://api.github.com/users/augi/gists{/gist_id}", "starred_url": "https://api.github.com/users/augi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/augi/subscriptions", "organizations_url": "https://api.github.com/users/augi/orgs", "repos_url": "https://api.github.com/users/augi/repos", "events_url": "https://api.github.com/users/augi/events{/privacy}", "received_events_url": "https://api.github.com/users/augi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-05T12:44:33Z", "updated_at": "2020-07-30T15:00:04Z", "closed_at": "2020-07-30T15:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version listed in Maven Central is 3.12.2 but there is two days old GitHub release of 3.12.3.\r\n\r\nhttps://search.maven.org/artifact/com.google.protobuf/protobuf-java", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7591", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7591/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7591/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7591/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7591", "id": 629588610, "node_id": "MDU6SXNzdWU2Mjk1ODg2MTA=", "number": 7591, "title": "v3.12 field presence does not support Javascript", "user": {"login": "skearnes", "id": 952729, "node_id": "MDQ6VXNlcjk1MjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/952729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skearnes", "html_url": "https://github.com/skearnes", "followers_url": "https://api.github.com/users/skearnes/followers", "following_url": "https://api.github.com/users/skearnes/following{/other_user}", "gists_url": "https://api.github.com/users/skearnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/skearnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skearnes/subscriptions", "organizations_url": "https://api.github.com/users/skearnes/orgs", "repos_url": "https://api.github.com/users/skearnes/repos", "events_url": "https://api.github.com/users/skearnes/events{/privacy}", "received_events_url": "https://api.github.com/users/skearnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T23:48:00Z", "updated_at": "2020-06-05T23:41:38Z", "closed_at": "2020-06-05T23:41:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [documentation](https://github.com/protocolbuffers/protobuf/blob/master/docs/field_presence.md#javascript-example) for field presence includes a Javascript example, and there are no indications in the [announcement](https://github.com/protocolbuffers/protobuf/issues/1606#issuecomment-618687169) or [release notes](https://github.com/protocolbuffers/protobuf/releases/tag/v3.12.0) that suggest Javascript is not supported.\r\n\r\nHowever, Javascript field presence is not _actually_ supported in v3.12. Since this is blocking for our use of proto3 (see https://github.com/Open-Reaction-Database/ord-schema/pull/176), it would be nice to have an ETA so we can decide whether to downgrade to proto2 instead of waiting.\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: v3.12.2\r\nLanguage: Javascript\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Download the protoc-3.12.2-linux-x86_64.zip release and unzip\r\n2. Run `protoc` with `--experimental_allow_proto3_optional` and `--js_out=...`\r\n\r\n**What did you expect to see?**\r\n\r\nJavascript proto wrappers that support `optional` fields.\r\n\r\n**What did you see instead?**\r\n\r\n```\r\nproto/reaction.proto: is a proto3 file that contains optional fields, but code \r\ngenerator --js_out hasn't been updated to support optional fields in proto3. \r\nPlease ask the owner of this code generator to support proto3 optional.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7584", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7584/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7584/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7584/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7584", "id": 628828516, "node_id": "MDU6SXNzdWU2Mjg4Mjg1MTY=", "number": 7584, "title": "ld: -bind_at_load and -bitcode_bundle cannot be used together", "user": {"login": "AsteriskZuo", "id": 11733363, "node_id": "MDQ6VXNlcjExNzMzMzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/11733363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsteriskZuo", "html_url": "https://github.com/AsteriskZuo", "followers_url": "https://api.github.com/users/AsteriskZuo/followers", "following_url": "https://api.github.com/users/AsteriskZuo/following{/other_user}", "gists_url": "https://api.github.com/users/AsteriskZuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsteriskZuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsteriskZuo/subscriptions", "organizations_url": "https://api.github.com/users/AsteriskZuo/orgs", "repos_url": "https://api.github.com/users/AsteriskZuo/repos", "events_url": "https://api.github.com/users/AsteriskZuo/events{/privacy}", "received_events_url": "https://api.github.com/users/AsteriskZuo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T01:16:21Z", "updated_at": "2020-06-02T07:04:45Z", "closed_at": "2020-06-02T07:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.11.4\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nMacOS 10.15.2\r\n\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nxcode:11.3.1\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. create iOS static library shell script\r\n```\r\nIOS_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS13.2.sdk\r\n    export CFLAGS='-arch arm64 -target aarch64-ios-darwin  -Wno-unused-function -fstrict-aliasing  -Wno-ignored-optimization-argument -DIOS -fembed-bitcode -miphoneos-version-min=8.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS13.2.sdk -I/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS13.2.sdk/usr/include'\r\n    export LDFLAGS=\"-arch arm64 -target aarch64-ios-darwin -fembed-bitcode -isysroot ${IOS_SYSROOT} -L${IOS_SYSROOT}/usr/lib \"\r\n    export CXXFLAGS=\"-std=c++14 -arch arm64 -target aarch64-ios-darwin -fstrict-aliasing -fembed-bitcode -DIOS -miphoneos-version-min=8.0 -I${IOS_SYSROOT}/usr/include\"\r\n    export CPPFLAGS=${CFLAGS}\r\n\r\n./configure --host=aarch64-ios-darwin --prefix=\"xxx\" --disable-shared --with-protoc=protoc\r\n```\r\n2. sh shell script\r\n3. generate libprotobuf.a\r\n4. make error.\r\ntip:\r\n```\r\nld: -bind_at_load and -bitcode_bundle (Xcode setting ENABLE_BITCODE=YES) cannot be used together\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [protoc] Error 1\r\nmake[1]: *** [all-recursive] Error 1\r\nmake: *** [all] Error 2\r\n```\r\n\r\nThe libprotobuf.a static library has been generated. But the error still cannot continue to execute.\r\n\r\n**What did you expect to see**\r\nDon't make an error.\r\n\r\n**What did you see instead?**\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\n**Anything else we should know about your project / environment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7577", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7577/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7577/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7577/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7577", "id": 627305910, "node_id": "MDU6SXNzdWU2MjczMDU5MTA=", "number": 7577, "title": "Compiling protobuf on Windows requires pthread.h, how do I get this!?", "user": {"login": "kingoftheconnors", "id": 23728939, "node_id": "MDQ6VXNlcjIzNzI4OTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/23728939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingoftheconnors", "html_url": "https://github.com/kingoftheconnors", "followers_url": "https://api.github.com/users/kingoftheconnors/followers", "following_url": "https://api.github.com/users/kingoftheconnors/following{/other_user}", "gists_url": "https://api.github.com/users/kingoftheconnors/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingoftheconnors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingoftheconnors/subscriptions", "organizations_url": "https://api.github.com/users/kingoftheconnors/orgs", "repos_url": "https://api.github.com/users/kingoftheconnors/repos", "events_url": "https://api.github.com/users/kingoftheconnors/events{/privacy}", "received_events_url": "https://api.github.com/users/kingoftheconnors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-29T14:19:39Z", "updated_at": "2020-08-12T13:19:25Z", "closed_at": "2020-08-12T13:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: master/v3.6.0/v3.5.0 etc.\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nWindows Pro 10.0.18363 Build 18363\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\ngcc version 9.2.0\r\ncmake version 3.16.19112601-MSVC_2\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Use Visual Studio Developer Console 2019 and traverse to the cloned protobuf repository\r\n2. Build using cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_BUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=c:\\sdk\\protobuf-amd64 ..\\cmake\r\n3. See the line `looking for pthreads - not found`\r\n4. Go to CMakeError.log to see elaborated:\r\n\r\n```\r\nC:\\MinGW\\bin\\gcc.exe    -o CMakeFiles/cmTC_74cdf.dir/CheckIncludeFile.c.obj   -c CheckIncludeFile.c\r\nCheckIncludeFile.c:1:10: fatal error: pthread.h: No such file or directory\r\n    1 | #include <pthread.h>\r\n      |          ^~~~~~~~~~~\r\ncompilation terminated.\r\n```\r\n\r\n**What did you expect to see**\r\nAs Windows is not a UNIX system, I expected that protobuf would not require a UNIX library like pthreads. Perhaps using a cross-platform alternative, or the windows API\r\n\r\n**Anything else we should know about your project / environment**\r\nI am compiling protobuf to use the GameNetworkingSockets library, which recommends building protobuf using cmake.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7555", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7555/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7555/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7555/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7555", "id": 625103154, "node_id": "MDU6SXNzdWU2MjUxMDMxNTQ=", "number": 7555, "title": "Incorrect source generation for GPBExtensionDescription", "user": {"login": "emlynmac", "id": 3941071, "node_id": "MDQ6VXNlcjM5NDEwNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3941071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emlynmac", "html_url": "https://github.com/emlynmac", "followers_url": "https://api.github.com/users/emlynmac/followers", "following_url": "https://api.github.com/users/emlynmac/following{/other_user}", "gists_url": "https://api.github.com/users/emlynmac/gists{/gist_id}", "starred_url": "https://api.github.com/users/emlynmac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emlynmac/subscriptions", "organizations_url": "https://api.github.com/users/emlynmac/orgs", "repos_url": "https://api.github.com/users/emlynmac/repos", "events_url": "https://api.github.com/users/emlynmac/events{/privacy}", "received_events_url": "https://api.github.com/users/emlynmac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 269641799, "node_id": "MDU6TGFiZWwyNjk2NDE3OTk=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/objective-c", "name": "objective-c", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "thomasvl", "id": 5279928, "node_id": "MDQ6VXNlcjUyNzk5Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5279928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasvl", "html_url": "https://github.com/thomasvl", "followers_url": "https://api.github.com/users/thomasvl/followers", "following_url": "https://api.github.com/users/thomasvl/following{/other_user}", "gists_url": "https://api.github.com/users/thomasvl/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasvl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasvl/subscriptions", "organizations_url": "https://api.github.com/users/thomasvl/orgs", "repos_url": "https://api.github.com/users/thomasvl/repos", "events_url": "https://api.github.com/users/thomasvl/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasvl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "thomasvl", "id": 5279928, "node_id": "MDQ6VXNlcjUyNzk5Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5279928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasvl", "html_url": "https://github.com/thomasvl", "followers_url": "https://api.github.com/users/thomasvl/followers", "following_url": "https://api.github.com/users/thomasvl/following{/other_user}", "gists_url": "https://api.github.com/users/thomasvl/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasvl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasvl/subscriptions", "organizations_url": "https://api.github.com/users/thomasvl/orgs", "repos_url": "https://api.github.com/users/thomasvl/repos", "events_url": "https://api.github.com/users/thomasvl/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasvl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2020-05-26T18:42:28Z", "updated_at": "2020-06-03T14:12:13Z", "closed_at": "2020-06-02T22:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: 3.11.2\r\nLanguage:Objective-C\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nMacOS 10.15.4\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nXcode 11.5\r\ncoocapods 1.9.2\r\n\r\n**What did you do?**\r\nSteps to reproduce the behaviour:\r\nUsing the code at https://github.com/GoogleCloudPlatform/ios-docs-samples/tree/master/text-to-speech, and locking the gRPCPlugin to version 1.27.\r\n`pod install`\r\n\r\n**What did you expect to see**\r\nWhen compiling the `annotations.proto` file, a section of generated code is:\r\n\r\n```\r\n+ (GPBExtensionRegistry*)extensionRegistry {\r\n  // This is called by +initialize so there is no need to worry\r\n  // about thread safety and initialization of registry.\r\n  static GPBExtensionRegistry* registry = nil;\r\n  if (!registry) {\r\n    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();\r\n    registry = [[GPBExtensionRegistry alloc] init];\r\n    static GPBExtensionDescription descriptions[] = {\r\n      {\r\n        .defaultValue.valueMessage = nil,\r\n        .singletonName = GPBStringifySymbol(AnnotationsRoot_HTTP),\r\n        .extendedClass = GPBStringifySymbol(GPBMethodOptions),\r\n        .messageOrGroupClassName = GPBStringifySymbol(HttpRule),\r\n        .enumDescriptorFunc = NULL,\r\n        .fieldNumber = 72295728,\r\n        .dataType = GPBDataTypeMessage,\r\n        .options = GPBExtensionNone,\r\n      },\r\n    };\r\n    for (size_t i = 0; i < sizeof(descriptions) / sizeof(descriptions[0]); ++i) {\r\n      GPBExtensionDescriptor *extension =\r\n          [[GPBExtensionDescriptor alloc] initWithExtensionDescription:&descriptions[i]];\r\n      [registry addExtension:extension];\r\n      [self globallyRegisterExtension:extension];\r\n      [extension release];\r\n    }\r\n    // None of the imports (direct or indirect) defined extensions, so no need to add\r\n    // them to this registry.\r\n  }\r\n  return registry;\r\n}\r\n```\r\n\r\n**What did you see instead?**\r\nThe struct does not have this signature and the code that should be generated is:\r\n```\r\n+ (GPBExtensionRegistry*)extensionRegistry {\r\n  // This is called by +initialize so there is no need to worry\r\n  // about thread safety and initialization of registry.\r\n  static GPBExtensionRegistry* registry = nil;\r\n  if (!registry) {\r\n    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();\r\n    registry = [[GPBExtensionRegistry alloc] init];\r\n    static GPBExtensionDescription descriptions[] = {\r\n      {\r\n        .defaultValue.valueMessage = nil,\r\n        .singletonName = GPBStringifySymbol(AnnotationsRoot_HTTP),\r\n        .extendedClass = GPBStringifySymbol(GPBMethodOptions),\r\n        .messageOrGroupClass.name = GPBStringifySymbol(HttpRule),\r\n        .enumDescriptorFunc = NULL,\r\n        .fieldNumber = 72295728,\r\n        .dataType = GPBDataTypeMessage,\r\n        .options = GPBExtensionNone,\r\n      },\r\n    };\r\n    for (size_t i = 0; i < sizeof(descriptions) / sizeof(descriptions[0]); ++i) {\r\n      GPBExtensionDescriptor *extension =\r\n          [[GPBExtensionDescriptor alloc] initWithExtensionDescription:&descriptions[i]];\r\n      [registry addExtension:extension];\r\n      [self globallyRegisterExtension:extension];\r\n      [extension release];\r\n    }\r\n    // None of the imports (direct or indirect) defined extensions, so no need to add\r\n    // them to this registry.\r\n  }\r\n  return registry;\r\n}\r\n```\r\n\r\nNote that `messageOrGroupClassName` has been turned into a union type:\r\n\r\nThe description of the struct is in `GPBDescriptor_PackagePrivate.h`:\r\n```\r\n// An extension\r\ntypedef struct GPBExtensionDescription {\r\n  GPBGenericValue defaultValue;\r\n  const char *singletonName;\r\n  union {\r\n    const char *name;\r\n    Class clazz;\r\n  } extendedClass;\r\n  union {\r\n    const char *name;\r\n    Class clazz;\r\n  } messageOrGroupClass;\r\n  GPBEnumDescriptorFunc enumDescriptorFunc;\r\n  int32_t fieldNumber;\r\n  GPBDataType dataType;\r\n  GPBExtensionOptions options;\r\n} GPBExtensionDescription;\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7553", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7553/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7553/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7553/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7553", "id": 624690827, "node_id": "MDU6SXNzdWU2MjQ2OTA4Mjc=", "number": 7553, "title": "Update documentation to clarify that packed repeated fields are not wire-compatible with optional fields", "user": {"login": "BenBirt", "id": 1123120, "node_id": "MDQ6VXNlcjExMjMxMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1123120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenBirt", "html_url": "https://github.com/BenBirt", "followers_url": "https://api.github.com/users/BenBirt/followers", "following_url": "https://api.github.com/users/BenBirt/following{/other_user}", "gists_url": "https://api.github.com/users/BenBirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenBirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenBirt/subscriptions", "organizations_url": "https://api.github.com/users/BenBirt/orgs", "repos_url": "https://api.github.com/users/BenBirt/repos", "events_url": "https://api.github.com/users/BenBirt/events{/privacy}", "received_events_url": "https://api.github.com/users/BenBirt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "acozzette", "id": 1115459, "node_id": "MDQ6VXNlcjExMTU0NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1115459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acozzette", "html_url": "https://github.com/acozzette", "followers_url": "https://api.github.com/users/acozzette/followers", "following_url": "https://api.github.com/users/acozzette/following{/other_user}", "gists_url": "https://api.github.com/users/acozzette/gists{/gist_id}", "starred_url": "https://api.github.com/users/acozzette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acozzette/subscriptions", "organizations_url": "https://api.github.com/users/acozzette/orgs", "repos_url": "https://api.github.com/users/acozzette/repos", "events_url": "https://api.github.com/users/acozzette/events{/privacy}", "received_events_url": "https://api.github.com/users/acozzette/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "acozzette", "id": 1115459, "node_id": "MDQ6VXNlcjExMTU0NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1115459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acozzette", "html_url": "https://github.com/acozzette", "followers_url": "https://api.github.com/users/acozzette/followers", "following_url": "https://api.github.com/users/acozzette/following{/other_user}", "gists_url": "https://api.github.com/users/acozzette/gists{/gist_id}", "starred_url": "https://api.github.com/users/acozzette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acozzette/subscriptions", "organizations_url": "https://api.github.com/users/acozzette/orgs", "repos_url": "https://api.github.com/users/acozzette/repos", "events_url": "https://api.github.com/users/acozzette/events{/privacy}", "received_events_url": "https://api.github.com/users/acozzette/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-26T08:18:42Z", "updated_at": "2020-05-30T06:32:28Z", "closed_at": "2020-05-29T21:09:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This was previously discussed in https://github.com/protocolbuffers/protobuf/issues/2905.)\r\n\r\nAs far as I can tell, protobuf wire-format parsers are not expected to translate packed repeated fields -> optional fields (indeed, this would be acting contrary to the behaviour of at least the Go and Java generated client libraries, both of which I have tested).\r\n\r\nAs discussed in the linked issue, it sounds like it's expected that optional is compatible with repeated, and repeated is compatible with packed repeated, but packed repeated is not compatible with optional.\r\n\r\nThat's fine, but it's very confusing because the documentation doesn't really say anything about this. In particular confusion arises in the proto2 documentation [here](https://developers.google.com/protocol-buffers/docs/proto#updating): `optional is compatible with repeated. Given serialized data of a repeated field as input, clients that expect this field to be optional will take the last input value if it's a primitive type field or merge all input elements if it's a message type field.` This documentation doesn't say anything about packed repeated fields.\r\n\r\nIt's also especially confusing in the proto3 documentation [here](https://developers.google.com/protocol-buffers/docs/proto3#updating), because there's not even mention of optional <-> repeated compatibility. Users who are used to proto2 semantics may assume that optional is compatible with repeated, without realising that since proto3 repeated fields are packed by default, this compatibility is broken (at least until they explicitly set `packed=false`).\r\n\r\nCan the documentation here please be updated?\r\n\r\nSuggestion (for the proto2 paragraph quoted above): `optional is compatible with repeated. Given serialized data of a repeated field as input, clients that expect this field to be optional will take the last input value if it's a primitive type field or merge all input elements if it's a message type field. Note that if the repeated field has packed=true, serialized data in this format will not be interpreted as an optional field, and will instead be treated as an unknown field.`\r\n\r\nSuggestion for the proto3 documentation: `As in proto2, optional is compatible with repeated. However, by default all repeated proto3 fields are packed. For proto3 repeated fields to be compatible with optional, those fields must be annotated with packed=false.`\r\n\r\n(Obviously the optimal answer would be to make packed repeated compatible with optional, but I suspect that might be impossible!)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7549", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7549/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7549/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7549/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7549", "id": 624356222, "node_id": "MDU6SXNzdWU2MjQzNTYyMjI=", "number": 7549, "title": "Messages with a oneof always fail in ConvertMessage", "user": {"login": "Matt-Stedman-TEC", "id": 56026761, "node_id": "MDQ6VXNlcjU2MDI2NzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/56026761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt-Stedman-TEC", "html_url": "https://github.com/Matt-Stedman-TEC", "followers_url": "https://api.github.com/users/Matt-Stedman-TEC/followers", "following_url": "https://api.github.com/users/Matt-Stedman-TEC/following{/other_user}", "gists_url": "https://api.github.com/users/Matt-Stedman-TEC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt-Stedman-TEC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt-Stedman-TEC/subscriptions", "organizations_url": "https://api.github.com/users/Matt-Stedman-TEC/orgs", "repos_url": "https://api.github.com/users/Matt-Stedman-TEC/repos", "events_url": "https://api.github.com/users/Matt-Stedman-TEC/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt-Stedman-TEC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T15:08:44Z", "updated_at": "2020-05-25T15:38:47Z", "closed_at": "2020-05-25T15:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Issue\r\nCalling the `ConvertMessage()` method on a JSON Object (message) with a `oneof` set raises the exception `'Message type # should not have multiple # oneof fields.'`\r\nThis ConvertMessage method is called in a number of places, e.g.  a method I've made that calls `ParseDict()` from the same `json_format.py` file as linked below.\r\n\r\n# Call Stack & Code\r\n```python\r\n        proto_message: ProtoMessage = self._proto_msg\r\n        message_dict = self.to_dict()\r\n\r\n        walk_collection(message_dict, to_proto_field_case, None)\r\n\r\n        ParseDict(message_dict, proto_message)  # <-- in here\r\n```\r\n\r\nThen inside `json_format.py` file:\r\n```python\r\n# Check no other oneof field is parsed.\r\n        if field.containing_oneof is not None:\r\n          oneof_name = field.containing_oneof.name \r\n          if oneof_name in names:\r\n            raise ParseError('Message type \"{0}\" should not have multiple '\r\n                             '\"{1}\" oneof fields.'.format(\r\n                                 message.DESCRIPTOR.full_name, oneof_name))\r\n          names.append(oneof_name)\r\n```\r\nwe add the oneof field name to the list of names, meaning that the next field we look at (which is also in the oneof list but has value of None) will raise the exception.\r\n_see:_ https://github.com/protocolbuffers/protobuf/blob/39d730dd96c81196893734ee1e075c34567e59ae/python/google/protobuf/json_format.py#L540\r\n\r\n### I changed to this to remove error\r\n```python\r\n# Check no other oneof field is parsed.\r\n                if field.containing_oneof is not None:\r\n                    oneof_name = field.containing_oneof.name\r\n                    if js[name] is not None:\r\n                      if oneof_name in names:\r\n                          raise ParseError(\r\n                              'Message type \"{0}\" should not have multiple '\r\n                              '\"{1}\" oneof fields.'.format(message.DESCRIPTOR.full_name, oneof_name)\r\n                          )\r\n                      names.append(oneof_name) # TODO Matt query this!\r\n```\r\nThis instead only adds the oneof field name to the list of names to check if a value is assigned (i.e. not None message).\r\n\r\n# Question\r\nIs this an issue with how I am generating my messages?\r\nIs this an issue in the `json_format.py` code? (Happy to make a PR)\r\nIs the message supposed to incorporate fields of the oneof such as:\r\n```python\r\nmessage = {\r\n  a = \"foo\",\r\n  b = None,\r\n  c = None\r\n}\r\n```\r\nwhere the message definition is `oneof = {a, b, c}`.?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7546", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7546/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7546/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7546/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7546", "id": 623557697, "node_id": "MDU6SXNzdWU2MjM1NTc2OTc=", "number": 7546, "title": "[golang]Repeated imported enum cause panic in golang", "user": {"login": "purefire", "id": 7490218, "node_id": "MDQ6VXNlcjc0OTAyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7490218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purefire", "html_url": "https://github.com/purefire", "followers_url": "https://api.github.com/users/purefire/followers", "following_url": "https://api.github.com/users/purefire/following{/other_user}", "gists_url": "https://api.github.com/users/purefire/gists{/gist_id}", "starred_url": "https://api.github.com/users/purefire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purefire/subscriptions", "organizations_url": "https://api.github.com/users/purefire/orgs", "repos_url": "https://api.github.com/users/purefire/repos", "events_url": "https://api.github.com/users/purefire/events{/privacy}", "received_events_url": "https://api.github.com/users/purefire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-23T02:16:56Z", "updated_at": "2020-05-28T17:43:29Z", "closed_at": "2020-05-28T17:43:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n    I've got a wired issue working with protobuf/golang. I have a proto defined a enum like\r\nenum OSType {\r\n    UNKNOWN_OSTYPE = 0;\r\n    MACOS          = 1;\r\n    IOS            = 2;\r\n    ANDROID        = 3;\r\n    WINDOWS        = 4;\r\n}\r\nin fileA,  then import it and use it in a object in fileB\r\n\r\nimport fileA\r\n...\r\nmessage SomeObj {\r\n    ... \r\n    repeated OSType platforms = 10;\r\n    ...\r\n}\r\n\r\n    then generate into some go files. When I use it as a return value of, I find the panic, whatever I put a nil, empty array, or an array of several OSTypes(non-duplicated).\r\n\r\n    Debug into the code and find it's related to this enum array - in this object I have several other enums but none of them cause any problem. What's more, if I move this enum array out of FileA, the panic disappeared immediately.\r\n\r\n    The panic reads like[1]. Also I'm using Kite framework, not sure if it is related.\r\n\r\n    I am not sure if this is a mis-use or bug? Though I've got a workaround, looking forwards some insight and best-practice. Thanks.\r\n\r\n[1]\r\n[2020-05-22T21:03:55+08:00] catch panic!!! panic location: google.golang.org/protobuf/internal/filedesc.(*EnumValues).Get:66\r\nstacktrace:\r\ngoroutine 4447 [running]:\r\nruntime/debug.Stack(0xc001836528, 0x31e87a0, 0xc000456c30)\r\n        /usr/local/go/src/runtime/debug/stack.go:24 +0x9d\r\ngit.purefire.org/package/common.Recover(0x3267540, 0xc001d580c0, 0xc000c6c9c8)\r\n        /Users/purefire/go/pkg/mod/git.purefire.org/package/common@v1.0.322/common.go:213 +0x16e\r\npanic(0x2b9ec00, 0xc0008ab7c0)\r\n        /usr/local/go/src/runtime/panic.go:679 +0x1b2\r\ngoogle.golang.org/protobuf/internal/filedesc.(*EnumValues).Get(0xc0000f01c0, 0x0, 0xc0000f01c0, 0x101008b)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/filedesc/desc_list_gen.go:66 +0x4b\r\ngoogle.golang.org/protobuf/internal/impl.newEnumConverter(0x32859e0, 0x2a2c6a0, 0x32858c0, 0xc000264d60, 0x29bb7c0, 0xc0018993e0)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/convert.go:379 +0x85\r\ngoogle.golang.org/protobuf/internal/impl.newSingularConverter(0x32859e0, 0x2a2c6a0, 0x32858c0, 0xc000264d60, 0xc000c6bb60, 0x116987b)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/convert.go:138 +0xefa\r\ngoogle.golang.org/protobuf/internal/impl.newListConverter(0x32859e0, 0xc0001e8ac0, 0x32858c0, 0xc000264d60, 0xe0, 0x2b12f60)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/convert_list.go:17 +0xae\r\ngoogle.golang.org/protobuf/internal/impl.NewConverter(0x32859e0, 0xc0001e8ac0, 0x32858c0, 0xc000264d60, 0xc000c6bc18, 0x1016587)\r\n     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/convert.go:56 +0x123\r\ngoogle.golang.org/protobuf/internal/impl.fieldInfoForList(0x32858c0, 0xc000264d60, 0x29f3e60, 0x9, 0x0, 0x0, 0x32859e0, 0x290fa00, 0x29f3e6b, 0x4e, ...)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/message_reflect_field.go:172 +0xe1\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).makeKnownFieldsFunc(0xc000d9a140, 0xffffffffffffffff, 0xffffffffffffffff, 0x80, 0xffffffffffffffff, 0xc001fb7ad0, 0xc001fb7b00, 0xc001fb7b30, 0xc001fb7b60)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/message_reflect.go:61 +0x673\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).makeReflectFuncs(0xc000d9a140, 0x32859e0, 0x2d16600, 0xffffffffffffffff, 0xffffffffffffffff, 0x80, 0xffffffffffffffff, 0xc001fb7ad0, 0xc001fb7b00, 0xc001fb7b30, ...)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/message_reflect.go:36 +0x63\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).initOnce(0xc000d9a140)\r\n   /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/message.go:90 +0x19c\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).init(0xc000d9a140)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/message.go:72 +0x3c\r\ngoogle.golang.org/protobuf/internal/impl.(*messageReflectWrapper).ProtoMethods(0xc0004563d0, 0x120804b)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/message_reflect_gen.go:150 +0x2f\r\ngoogle.golang.org/protobuf/proto.protoMethods(...)       /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/proto/proto_methods.go:18\r\ngoogle.golang.org/protobuf/proto.sizeMessage(0x327da60, 0xc0004563d0, 0xc0004563d0)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/proto/size.go:30 +0x35\r\ngoogle.golang.org/protobuf/proto.MarshalOptions.Size(0x2000000, 0x31e9c80, 0xc0004563d0, 0x31e9c80)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/proto/size.go:26 +0x4e\r\ngoogle.golang.org/protobuf/proto.Size(...)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/proto/size.go:16\r\ngoogle.golang.org/protobuf/internal/impl.sizeMessageSlice(0xc001fb7a70, 0x32859e0, 0x2cbdf40, 0x1, 0x2d43700, 0x2ad9e00)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/codec_field.go:526 +0xbb\r\ngoogle.golang.org/protobuf/internal/impl.makeMessageSliceFieldCoder.func1(0xc001fb7a70, 0xc00191ac60, 0x2e4800, 0x2ad9e00)     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/codec_field.go:452 +0x54\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointerSlow(0xc000d9a3c0, 0xc001fb7a70, 0x5054d00, 0x0)\r\n     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/encode.go:79 +0xbe\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointer(0xc000d9a3c0, 0xc001fb7a70, 0x2ad9e00, 0xc001fb7a70)\r\n     /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/encode.go:56 +0x7\r\ngoogle.golang.org/protobuf/internal/impl.(*MessageInfo).size(0xc000d9a3c0, 0x327da60, 0xc000456380, 0x1208100, 0xc000d9a3c0)\r\n   /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/internal/impl/encode.go:40 +0x55\r\ngoogle.golang.org/protobuf/proto.MarshalOptions.marshal(0xc000000001, 0x0, 0x0, 0x0, 0x327da60, 0xc000456380, 0xc000456380, 0x327da60, 0xc000456380, 0x2ad9e00, ...)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/proto/encode.go:153 +0x2f6\r\ngoogle.golang.org/protobuf/proto.MarshalOptions.MarshalAppend(0x2000001, 0x0, 0x0, 0x0, 0x31e9c80, 0xc000456380, 0x29dfa40, 0x300db40, 0x2a934e0, 0xc0023eb260, ...)\r\n        /Users/purefire/go/pkg/mod/google.golang.org/protobuf@v1.23.0/proto/encode.go:125 +0x98\r\ngithub.com/golang/protobuf/proto.marshalAppend(0x0, 0x0, 0x0, 0x324fa80, 0xc001fb7a70, 0x324fa00, 0xc001fb7a70, 0x0, 0x0, 0x0, ...)\r\n        /Users/purefire/go/pkg/mod/github.com/golang/protobuf@v1.4.2/proto/wire.go:40 +0xbe\r\ngithub.com/golang/protobuf/proto.Marshal(...)\r\n        /Users/purefire/go/pkg/mod/github.com/golang/protobuf@v1.4.2/proto/wire.go:23", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7545", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7545/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7545/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7545/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7545", "id": 623142864, "node_id": "MDU6SXNzdWU2MjMxNDI4NjQ=", "number": 7545, "title": "FieldOptions protoc c++ from a different folder", "user": {"login": "thomas-olszamowski", "id": 65765756, "node_id": "MDQ6VXNlcjY1NzY1NzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/65765756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomas-olszamowski", "html_url": "https://github.com/thomas-olszamowski", "followers_url": "https://api.github.com/users/thomas-olszamowski/followers", "following_url": "https://api.github.com/users/thomas-olszamowski/following{/other_user}", "gists_url": "https://api.github.com/users/thomas-olszamowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomas-olszamowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomas-olszamowski/subscriptions", "organizations_url": "https://api.github.com/users/thomas-olszamowski/orgs", "repos_url": "https://api.github.com/users/thomas-olszamowski/repos", "events_url": "https://api.github.com/users/thomas-olszamowski/events{/privacy}", "received_events_url": "https://api.github.com/users/thomas-olszamowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-22T11:26:34Z", "updated_at": "2020-06-03T09:11:20Z", "closed_at": "2020-05-29T18:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nlibprotoc 3.11.4\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nLinux, MacOS\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n* Apple clang version 11.0.3 (clang-1103.0.32.59)\r\n* Up to date gcc compiler\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Create a minimal file \"field.proto\" that extends field options:\r\n````\r\nsyntax = \"proto3\";\r\n\r\nimport \"google/protobuf/descriptor.proto\";\r\n\r\nmessage FieldOptions {\r\n  double value = 1;\r\n}\r\n\r\nextend google.protobuf.FieldOptions {\r\n  FieldOptions my_option = 91576;\r\n}\r\n````\r\n\r\n2. Import this file `import \"field.proto\";` in a different .proto file in the same folder. \r\n3. Be happy that everything works fine (protoc / c++ compiler / c++ linker)\r\n4. move field.proto into a subdirectory \"options\".\r\n5. Import the file in the same .proto file `import \"options/field.proto\";`\r\n\r\n**What did you expect to see**\r\neverything should work out just fine\r\n\r\n**What did you see instead?**\r\nA compiler error of the generated .cc file that imports \"field.proto\" that looks like this:\r\n```\r\nNo member named 'descriptor_table_options_2ffield_2eproto' in the global namespace; did you mean 'descriptor_table_field_2eproto'?\r\n```\r\n\r\nin a line that looks like this (generated .cc file that imports \"field.proto\")\r\n\r\n```\r\nstatic const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_data_2dobjects_2eproto_deps[1] = {\r\n  &::descriptor_table_options_2ffield_2eproto,\r\n};\r\n```\r\n\r\n\r\n**Anything else we should know about your project / environment**\r\nNo. It works without problems for golang and ruby. It's a pure c++ problem.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7544", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7544/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7544/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7544/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7544", "id": 623024048, "node_id": "MDU6SXNzdWU2MjMwMjQwNDg=", "number": 7544, "title": "C# ARM64", "user": {"login": "turowicz", "id": 1055391, "node_id": "MDQ6VXNlcjEwNTUzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/turowicz", "html_url": "https://github.com/turowicz", "followers_url": "https://api.github.com/users/turowicz/followers", "following_url": "https://api.github.com/users/turowicz/following{/other_user}", "gists_url": "https://api.github.com/users/turowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/turowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/turowicz/subscriptions", "organizations_url": "https://api.github.com/users/turowicz/orgs", "repos_url": "https://api.github.com/users/turowicz/repos", "events_url": "https://api.github.com/users/turowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/turowicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-22T07:49:03Z", "updated_at": "2020-05-22T07:53:41Z", "closed_at": "2020-05-22T07:53:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error when loading the library on an ARM64 device:\r\n\r\n```\r\nError loading native library \"/app/libgrpc_csharp_ext.x64.so\". \r\nSystem.IO.IOException: Error loading native library \"/app/libgrpc_csharp_ext.x64.so\". \r\n   at Grpc.Core.Internal.UnmanagedLibrary..ctor(String[] libraryPathAlternatives)\r\n   at Grpc.Core.Internal.NativeExtension.LoadUnmanagedLibrary()\r\n   at Grpc.Core.Internal.NativeExtension.LoadNativeMethods()\r\n   at Grpc.Core.Internal.NativeExtension..ctor()\r\n   at Grpc.Core.Internal.NativeExtension.Get()\r\n   at Grpc.Core.Internal.NativeMethods.Get()\r\n   at Grpc.Core.GrpcEnvironment.GrpcNativeInit()\r\n   at Grpc.Core.GrpcEnvironment..ctor()\r\n   at Grpc.Core.GrpcEnvironment.AddRef()\r\n   at Grpc.Core.Channel..ctor(String target, ChannelCredentials credentials, IEnumerable`1 options)\r\n   at Grpc.Core.Channel..ctor(String host, Int32 port, ChannelCredentials credentials, IEnumerable`1 options)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7537", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7537/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7537/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7537/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7537", "id": 622147360, "node_id": "MDU6SXNzdWU2MjIxNDczNjA=", "number": 7537, "title": "protobuf installer for winget", "user": {"login": "lutzroeder", "id": 438516, "node_id": "MDQ6VXNlcjQzODUxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/438516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lutzroeder", "html_url": "https://github.com/lutzroeder", "followers_url": "https://api.github.com/users/lutzroeder/followers", "following_url": "https://api.github.com/users/lutzroeder/following{/other_user}", "gists_url": "https://api.github.com/users/lutzroeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/lutzroeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lutzroeder/subscriptions", "organizations_url": "https://api.github.com/users/lutzroeder/orgs", "repos_url": "https://api.github.com/users/lutzroeder/repos", "events_url": "https://api.github.com/users/lutzroeder/events{/privacy}", "received_events_url": "https://api.github.com/users/lutzroeder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-20T23:31:43Z", "updated_at": "2020-07-21T03:17:07Z", "closed_at": "2020-07-21T03:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Make `protoc` available via [winget](https://github.com/microsoft/winget-cli).\r\n\r\n```\r\nC:\\Users\\<username>\\Desktop>winget install protobuf\r\nNo app found matching input criteria.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7534", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7534/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7534/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7534/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7534", "id": 621784614, "node_id": "MDU6SXNzdWU2MjE3ODQ2MTQ=", "number": 7534, "title": "Java: Protoc fails to properly parse extension bytes", "user": {"login": "oldergod", "id": 1767669, "node_id": "MDQ6VXNlcjE3Njc2Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1767669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oldergod", "html_url": "https://github.com/oldergod", "followers_url": "https://api.github.com/users/oldergod/followers", "following_url": "https://api.github.com/users/oldergod/following{/other_user}", "gists_url": "https://api.github.com/users/oldergod/gists{/gist_id}", "starred_url": "https://api.github.com/users/oldergod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oldergod/subscriptions", "organizations_url": "https://api.github.com/users/oldergod/orgs", "repos_url": "https://api.github.com/users/oldergod/repos", "events_url": "https://api.github.com/users/oldergod/events{/privacy}", "received_events_url": "https://api.github.com/users/oldergod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-20T13:57:17Z", "updated_at": "2020-05-20T18:05:59Z", "closed_at": "2020-05-20T18:05:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following test fails.\r\n```java\r\n  @Test void allTypesSerialization() {\r\n    AllTypesOuterClass.AllTypes allTypes = AllTypesOuterClass.AllTypes.newBuilder()\r\n        .setExtension(extOptBool, true)\r\n        .setExtension(extRepBool, list(true))\r\n        .setExtension(extPackBool, list(true))\r\n        .build();\r\n    \r\n    assertThat(AllTypesOuterClass.AllTypes.parseFrom(allTypes.toByteArray()))\r\n        .isEqualTo(allTypes);\r\n  }\r\n```\r\nFailure's difference is as followed\r\n![image](https://user-images.githubusercontent.com/1767669/82454758-28d8a700-9a80-11ea-9ec1-b6110faf58c9.png)\r\n\r\nHere is the schema.\r\n```protobuf\r\nsyntax = \"proto2\";\r\npackage squareup.proto2.alltypes;\r\nmessage AllTypes {\r\n  extensions 1001 to 1217;\r\n}\r\nextend AllTypes {\r\n  optional bool ext_opt_bool = 1011;\r\n  repeated bool ext_rep_bool = 1111;\r\n  repeated bool ext_pack_bool = 1211 [packed = true];\r\n}\r\n```\r\n\r\nI am using\r\n```\r\n\"com.google.protobuf:protobuf-gradle-plugin:0.8.10\"\r\n\"com.google.protobuf:protobuf-java:3.11.4\"\r\n\"com.google.protobuf:protobuf-java-util:3.11.4\"\r\n\"com.google.protobuf:protoc:3.11.4\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7532", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7532/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7532/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7532/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7532", "id": 621562100, "node_id": "MDU6SXNzdWU2MjE1NjIxMDA=", "number": 7532, "title": "Objective-C bazel target failed to build at 3.12.x", "user": {"login": "stanley-cheung", "id": 11674202, "node_id": "MDQ6VXNlcjExNjc0MjAy", "avatar_url": "https://avatars2.githubusercontent.com/u/11674202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanley-cheung", "html_url": "https://github.com/stanley-cheung", "followers_url": "https://api.github.com/users/stanley-cheung/followers", "following_url": "https://api.github.com/users/stanley-cheung/following{/other_user}", "gists_url": "https://api.github.com/users/stanley-cheung/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanley-cheung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanley-cheung/subscriptions", "organizations_url": "https://api.github.com/users/stanley-cheung/orgs", "repos_url": "https://api.github.com/users/stanley-cheung/repos", "events_url": "https://api.github.com/users/stanley-cheung/events{/privacy}", "received_events_url": "https://api.github.com/users/stanley-cheung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-20T08:23:12Z", "updated_at": "2020-05-21T23:44:58Z", "closed_at": "2020-05-21T23:44:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Environment: MacOS\r\n\r\nAt the `3.12.x` branch, `bazel build :protobuf_objc` failed, but completed successfully at the `3.11.x` branch.\r\n\r\nAt `3.12.x`\r\n```\r\nstanleycheung@stanleycheung-macbookpro3:~/protobuf$ bazel build :protobuf_objc\r\nStarting local Bazel server and connecting to it...\r\nINFO: Analyzed target //:protobuf_objc (19 packages loaded, 238 targets configured).\r\nINFO: Found 1 target...\r\nERROR: missing input file 'objectivec/google/protobuf/FieldMask.pbobjc.m', owner: '//:objectivec/google/protobuf/FieldMask.pbobjc.m'\r\nERROR: /Users/stanleycheung/protobuf/BUILD:969:1: //:protobuf_objc: missing input file '//:objectivec/google/protobuf/FieldMask.pbobjc.m'\r\nERROR: /Users/stanleycheung/protobuf/BUILD:969:1: C++ compilation of rule '//:protobuf_objc' failed: I/O exception during sandboxed execution: Running '/var/tmp/_bazel_stanleycheung/install/7afe40059062a3d2a6e3d7dae41ab49a/xcode-locator 11.3.1.11C505' failed.\r\nProcess terminated by signal 15\r\nstdout: \r\nstderr: \r\nTarget //:protobuf_objc failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nERROR: /Users/stanleycheung/protobuf/BUILD:969:1 1 input file(s) do not exist\r\nINFO: Elapsed time: 5.224s, Critical Path: 0.09s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully\r\n```\r\n\r\nAt `3.11.x`\r\n```\r\n~/protobuf$ bazel build :protobuf_objc\r\nStarting local Bazel server and connecting to it...\r\nINFO: Analyzed target //:protobuf_objc (19 packages loaded, 238 targets configured).\r\nINFO: Found 1 target...\r\nTarget //:protobuf_objc up-to-date:\r\n  bazel-out/apl-darwin_x86_64-fastbuild/bin/libprotobuf_objc.a\r\nINFO: Elapsed time: 8.173s, Critical Path: 2.48s\r\nINFO: 25 processes: 25 darwin-sandbox.\r\nINFO: Build completed successfully, 27 total actions\r\n```\r\n\r\nCould it be because of #7173? Is it because `objectivec/GPBFieldMask.pbobjc.h` is not part of `hdrs` in the `:protobuf_objc` BUILD rule? https://github.com/protocolbuffers/protobuf/blob/3.12.x/BUILD#L969\r\n\r\nThis patch seems to fix the issue:\r\n```\r\ndiff --git a/BUILD b/BUILD\r\nindex 8ab4cb413..b32a1f161 100644\r\n--- a/BUILD\r\n+++ b/BUILD\r\n@@ -969,6 +969,16 @@ alias(\r\n objc_library(\r\n     name = \"protobuf_objc\",\r\n     hdrs = [\r\n+        \"objectivec/GPBAny.pbobjc.h\",\r\n+        \"objectivec/GPBApi.pbobjc.h\",\r\n+        \"objectivec/GPBDuration.pbobjc.h\",\r\n+        \"objectivec/GPBEmpty.pbobjc.h\",\r\n+        \"objectivec/GPBFieldMask.pbobjc.h\",\r\n+        \"objectivec/GPBSourceContext.pbobjc.h\",\r\n+        \"objectivec/GPBStruct.pbobjc.h\",\r\n+        \"objectivec/GPBTimestamp.pbobjc.h\",\r\n+        \"objectivec/GPBType.pbobjc.h\",\r\n+        \"objectivec/GPBWrappers.pbobjc.h\",\r\n         \"objectivec/GPBArray.h\",\r\n         \"objectivec/GPBBootstrap.h\",\r\n         \"objectivec/GPBCodedInputStream.h\",\r\n@@ -1017,6 +1027,16 @@ objc_library(\r\n         \"objectivec\",\r\n     ],\r\n     non_arc_srcs = [\r\n+        \"objectivec/GPBAny.pbobjc.m\",\r\n+        \"objectivec/GPBApi.pbobjc.m\",\r\n+        \"objectivec/GPBDuration.pbobjc.m\",\r\n+        \"objectivec/GPBEmpty.pbobjc.m\",\r\n+        \"objectivec/GPBFieldMask.pbobjc.m\",\r\n+        \"objectivec/GPBSourceContext.pbobjc.m\",\r\n+        \"objectivec/GPBStruct.pbobjc.m\",\r\n+        \"objectivec/GPBTimestamp.pbobjc.m\",\r\n+        \"objectivec/GPBType.pbobjc.m\",\r\n+        \"objectivec/GPBWrappers.pbobjc.m\",\r\n         \"objectivec/GPBArray.m\",\r\n         \"objectivec/GPBCodedInputStream.m\",\r\n         \"objectivec/GPBCodedOutputStream.m\",\r\n@@ -1031,16 +1051,6 @@ objc_library(\r\n         \"objectivec/GPBUtilities.m\",\r\n         \"objectivec/GPBWellKnownTypes.m\",\r\n         \"objectivec/GPBWireFormat.m\",\r\n-        \"objectivec/google/protobuf/Any.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Api.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Duration.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Empty.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/FieldMask.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/SourceContext.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Struct.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Timestamp.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Type.pbobjc.m\",\r\n-        \"objectivec/google/protobuf/Wrappers.pbobjc.m\",\r\n     ],\r\n     visibility = [\"//visibility:public\"],\r\n )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7522", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7522/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7522/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7522/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7522", "id": 619601861, "node_id": "MDU6SXNzdWU2MTk2MDE4NjE=", "number": 7522, "title": "spelling error in generated C++ file", "user": {"login": "frankseide", "id": 16671126, "node_id": "MDQ6VXNlcjE2NjcxMTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/16671126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankseide", "html_url": "https://github.com/frankseide", "followers_url": "https://api.github.com/users/frankseide/followers", "following_url": "https://api.github.com/users/frankseide/following{/other_user}", "gists_url": "https://api.github.com/users/frankseide/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankseide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankseide/subscriptions", "organizations_url": "https://api.github.com/users/frankseide/orgs", "repos_url": "https://api.github.com/users/frankseide/repos", "events_url": "https://api.github.com/users/frankseide/events{/privacy}", "received_events_url": "https://api.github.com/users/frankseide/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T03:42:23Z", "updated_at": "2020-05-19T23:23:37Z", "closed_at": "2020-05-19T23:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems there is a spelling error in the file generated with protoc-3.12.0-win64.zip:\r\n```\r\n  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]\r\n```\r\nI can only compile this way:\r\n```\r\n#ifdef _MSC_VER\r\n#pragma warning(disable : 4100 4125 4127 4244 4267 4512 4456 4510 4610 4800)\r\n#endif\r\n#ifdef __GNUC__\r\n#pragma GCC diagnostic push\r\n#pragma GCC diagnostic ignored \"-Wunused-variable\"\r\n#pragma GCC diagnostic ignored \"-Wsuggest-override\"\r\n#endif\r\n\r\n#define AuxillaryParseTableField AuxiliaryParseTableField  // in protobuf 3.12, the generated source has a spelling error\r\n\r\n#include \"onnx-ml.pb.cc\" // this is the actual file we compile\r\n```\r\nIt would also be nice if the generated code was warning-free, so that we don't need to wrap it.\r\n\r\n**What version of protobuf and what language are you using?**\r\n\r\nVersion: protoc-3.12.0-win64.zip\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\n\r\nWindows 10\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\n\r\nVisual Studio 2017\r\n\r\n**What did you do?**\r\n```\r\nprotoc -I=. --cpp_out=. onnx-ml.proto\r\n```\r\n\r\n**What did you expect to see**\r\n\r\n**What did you see instead?**\r\n\r\nA compilation error due to a mis-spelled symbol in the generated file `onnx-ml.pb.h`\r\n\r\n**Anything else we should know about your project / environment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7518", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7518/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7518/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7518/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7518", "id": 619376560, "node_id": "MDU6SXNzdWU2MTkzNzY1NjA=", "number": 7518, "title": "Rubygems release 3.12.0 differs from github release version", "user": {"login": "mikelorant", "id": 215265, "node_id": "MDQ6VXNlcjIxNTI2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/215265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikelorant", "html_url": "https://github.com/mikelorant", "followers_url": "https://api.github.com/users/mikelorant/followers", "following_url": "https://api.github.com/users/mikelorant/following{/other_user}", "gists_url": "https://api.github.com/users/mikelorant/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikelorant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikelorant/subscriptions", "organizations_url": "https://api.github.com/users/mikelorant/orgs", "repos_url": "https://api.github.com/users/mikelorant/repos", "events_url": "https://api.github.com/users/mikelorant/events{/privacy}", "received_events_url": "https://api.github.com/users/mikelorant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-16T04:38:03Z", "updated_at": "2020-05-20T23:49:29Z", "closed_at": "2020-05-17T00:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Checking the code for the tag of the Ruby release 3.12.0 shows the following:\r\n\r\n```\r\ns.required_ruby_version = '>= 2.3'\r\n```\r\n\r\nhttps://github.com/protocolbuffers/protobuf/blob/v3.12.0/ruby/google-protobuf.gemspec\r\n\r\nHowever download the Gem from Rubygems shows:\r\n\r\n```\r\ns.required_ruby_version = Gem::Requirement.new([\">= 2.5\".freeze, \"< 2.8.dev\".freeze])\r\n```\r\n\r\nThis is causing issues with applications dependent on this such as aws-fluent-plugin-kinesis.\r\n\r\n```\r\nERROR:  Error installing fluent-plugin-kinesis:\r\n\tgoogle-protobuf requires Ruby version < 2.8.dev, >= 2.5.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7512", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7512/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7512/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7512/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7512", "id": 618673612, "node_id": "MDU6SXNzdWU2MTg2NzM2MTI=", "number": 7512, "title": "How can I make previous version of protobuf  with source code on Linux", "user": {"login": "Patrick08T", "id": 18464261, "node_id": "MDQ6VXNlcjE4NDY0MjYx", "avatar_url": "https://avatars0.githubusercontent.com/u/18464261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patrick08T", "html_url": "https://github.com/Patrick08T", "followers_url": "https://api.github.com/users/Patrick08T/followers", "following_url": "https://api.github.com/users/Patrick08T/following{/other_user}", "gists_url": "https://api.github.com/users/Patrick08T/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patrick08T/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patrick08T/subscriptions", "organizations_url": "https://api.github.com/users/Patrick08T/orgs", "repos_url": "https://api.github.com/users/Patrick08T/repos", "events_url": "https://api.github.com/users/Patrick08T/events{/privacy}", "received_events_url": "https://api.github.com/users/Patrick08T/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T03:35:16Z", "updated_at": "2020-05-15T03:40:14Z", "closed_at": "2020-05-15T03:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for feature requests (including cleanup requests) only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What language does this apply to?**\r\nC++ language.\r\n\r\n**Describe the problem you are trying to solve.**\r\nI can not find cmake dir In the Source Code dir.\r\n\r\n**Describe the solution you'd like**\r\nIf there has a probability, I hop there will be a cmake dir in the Source Code dir, or some documents let me find the correct cmake dir.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7507", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7507/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7507/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7507/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7507", "id": 618473656, "node_id": "MDU6SXNzdWU2MTg0NzM2NTY=", "number": 7507, "title": "_pb2 don't have a initial docstring", "user": {"login": "staticdev", "id": 1446633, "node_id": "MDQ6VXNlcjE0NDY2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1446633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staticdev", "html_url": "https://github.com/staticdev", "followers_url": "https://api.github.com/users/staticdev/followers", "following_url": "https://api.github.com/users/staticdev/following{/other_user}", "gists_url": "https://api.github.com/users/staticdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/staticdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staticdev/subscriptions", "organizations_url": "https://api.github.com/users/staticdev/orgs", "repos_url": "https://api.github.com/users/staticdev/repos", "events_url": "https://api.github.com/users/staticdev/events{/privacy}", "received_events_url": "https://api.github.com/users/staticdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-14T19:14:32Z", "updated_at": "2020-06-02T21:45:31Z", "closed_at": "2020-06-02T21:45:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**What language does this apply to?**\r\nproto3 / python\r\n\r\n**Describe the problem you are trying to solve.**\r\nI generate code from .proto with:\r\n```sh\r\npython3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. myproto.proto\r\n```\r\n\r\nWhen linting it, the modules (_pb2) don't follow basic docstring recommandation from common linters:\r\n* _pb2 don't have a initial docstring;\r\n\r\n**Describe the solution you'd like**\r\nChange the behavior of the generator to include docstrings following [Google Style](https://github.com/google/styleguide/blob/gh-pages/pyguide.md) Docstrings (section 3.8). \r\n\r\n**Describe alternatives you've considered**\r\n-\r\n\r\n**Additional context**\r\n-", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7505", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7505/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7505/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7505/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7505", "id": 617961256, "node_id": "MDU6SXNzdWU2MTc5NjEyNTY=", "number": 7505, "title": "Regression in 3.12: toString() returns incorrect ascii when there are duplicate keys in a map", "user": {"login": "thesamet", "id": 307373, "node_id": "MDQ6VXNlcjMwNzM3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/307373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thesamet", "html_url": "https://github.com/thesamet", "followers_url": "https://api.github.com/users/thesamet/followers", "following_url": "https://api.github.com/users/thesamet/following{/other_user}", "gists_url": "https://api.github.com/users/thesamet/gists{/gist_id}", "starred_url": "https://api.github.com/users/thesamet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thesamet/subscriptions", "organizations_url": "https://api.github.com/users/thesamet/orgs", "repos_url": "https://api.github.com/users/thesamet/repos", "events_url": "https://api.github.com/users/thesamet/events{/privacy}", "received_events_url": "https://api.github.com/users/thesamet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-14T06:29:41Z", "updated_at": "2020-05-16T00:19:30Z", "closed_at": "2020-05-16T00:19:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Prior to protobuf 3.12, when parsing a map using TextFormat:\r\n* If there are duplicate map keys, the last key seen is used.\r\n* toString emits the duplicate keys in the original order, so if the ascii representation was parsed again, the same last key will be used, and the original message will be preserved.\r\n\r\nIn 3.12.0-rc-1 and 3.12.0-rc-2:\r\n* The last key seen is used.\r\n* toString does not retain the original order. In some cases, the last value printed for a key, is not necessarily the value that is being used in a message. As a result, parsing again the output of `toString` results in a different message.\r\n\r\nIn other words, `m.toString()` is producing a text representation that when parsed does not give the original `m` back.\r\n\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.12.0-rc-2\r\nLanguage: Java\r\n**What operating system (Linux, Windows, ...) and version?**\r\nUbuntu 19.10\r\n\r\n**What did you do?**\r\n\r\nnp.proto:\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage mypkg;\r\n\r\nmessage Msg {\r\n  map<int32, int32> m = 1;\r\n}\r\n```\r\n\r\nMain.java:\r\n```\r\nimport mypkg.Np.Msg;\r\n\r\nimport com.google.protobuf.TextFormat;\r\nimport com.google.protobuf.util.JsonFormat;\r\n\r\nimport java.lang.String;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws Exception {\r\n            String input =\r\n            \"m: {\\n\" +\r\n            \"  key: 1\\n\" +\r\n            \"  value: 1\\n\" +\r\n            \"}\\n\" +\r\n            \"m: {\\n\" +\r\n            \"  key: -2147483647\\n\" +\r\n            \"  value: 5\\n\" +\r\n            \"}\\n\" +\r\n            \"m: {\\n\" +\r\n            \"  key: 1\\n\" +\r\n            \"  value: -1\\n\" +\r\n            \"}\\n\";\r\n\r\n            Msg p = TextFormat.parse(input, Msg.class);\r\n            int i1 = p.getMMap().get(1);\r\n            Msg p2 = TextFormat.parse(p.toString(), Msg.class);\r\n            int i2 = p2.getMMap().get(1);\r\n            System.out.println(i1);  // prints -1\r\n            System.out.println(i2);  // prints 1, expected -1\r\n    }\r\n}\r\n```\r\n\r\n**What did you expect to see**\r\nEither a failure to parse, or:\r\n```\r\n-1\r\n-1\r\n```\r\n\r\n**What did you see instead?**\r\n```\r\n1\r\n-1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7500", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7500/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7500/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7500/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7500", "id": 617268497, "node_id": "MDU6SXNzdWU2MTcyNjg0OTc=", "number": 7500, "title": "Broken release links for Protobuf 2.6.1", "user": {"login": "jobesu14", "id": 4171803, "node_id": "MDQ6VXNlcjQxNzE4MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4171803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jobesu14", "html_url": "https://github.com/jobesu14", "followers_url": "https://api.github.com/users/jobesu14/followers", "following_url": "https://api.github.com/users/jobesu14/following{/other_user}", "gists_url": "https://api.github.com/users/jobesu14/gists{/gist_id}", "starred_url": "https://api.github.com/users/jobesu14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jobesu14/subscriptions", "organizations_url": "https://api.github.com/users/jobesu14/orgs", "repos_url": "https://api.github.com/users/jobesu14/repos", "events_url": "https://api.github.com/users/jobesu14/events{/privacy}", "received_events_url": "https://api.github.com/users/jobesu14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-13T08:53:23Z", "updated_at": "2020-05-14T12:24:50Z", "closed_at": "2020-05-14T12:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The links in the release section are broken for version 2.6.1\r\n[https://github.com/protocolbuffers/protobuf/releases/tag/v2.6.1](https://github.com/protocolbuffers/protobuf/releases/tag/v2.6.1)\r\n\r\nExample of broken links: [https://github.com/protocolbuffers/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz](https://github.com/protocolbuffers/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7493", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7493/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7493/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7493/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7493", "id": 616895243, "node_id": "MDU6SXNzdWU2MTY4OTUyNDM=", "number": 7493, "title": "Please remove test files from the Pypi distribution (at least from the wheels)", "user": {"login": "mishas", "id": 3140736, "node_id": "MDQ6VXNlcjMxNDA3MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3140736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mishas", "html_url": "https://github.com/mishas", "followers_url": "https://api.github.com/users/mishas/followers", "following_url": "https://api.github.com/users/mishas/following{/other_user}", "gists_url": "https://api.github.com/users/mishas/gists{/gist_id}", "starred_url": "https://api.github.com/users/mishas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mishas/subscriptions", "organizations_url": "https://api.github.com/users/mishas/orgs", "repos_url": "https://api.github.com/users/mishas/repos", "events_url": "https://api.github.com/users/mishas/events{/privacy}", "received_events_url": "https://api.github.com/users/mishas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-12T19:15:26Z", "updated_at": "2020-08-20T00:16:37Z", "closed_at": "2020-08-20T00:16:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the average size of the Python3 Wheel file in pypi is 1.3MBs, and installed 5.3MBs.\r\n\r\nThis is wasteful, as those tests are not useful (used) after installation via `pip install protobuf`, and when dealing with small python code that uses protobufs, this is a huge size multiplier.\r\n\r\nBy just excluding the test files, we're able to reduce the installed size to about 3.4MB (~35% smaller)\r\n\r\n**What language does this apply to?**\r\nPython\r\n\r\n**Describe the problem you are trying to solve.**\r\nWheel files are too large\r\n\r\n**Describe the solution you'd like**\r\nRemove test files from binary (and other) pypi distributions.\r\n\r\n**Describe alternatives you've considered**\r\nDelete the files post install.\r\n\r\n**Additional context**\r\nhttps://pypi.org/project/protobuf/#files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7486", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7486/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7486/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7486/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7486", "id": 615707137, "node_id": "MDU6SXNzdWU2MTU3MDcxMzc=", "number": 7486, "title": "C# conformance test failure for proto2 JSON formatting", "user": {"login": "jskeet", "id": 17011, "node_id": "MDQ6VXNlcjE3MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124699531, "node_id": "MDU6TGFiZWwxMjQ2OTk1MzE=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 205322238, "node_id": "MDU6TGFiZWwyMDUzMjIyMzg=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c%23", "name": "c#", "color": "bfd4f2", "default": false, "description": null}, {"id": 1002491210, "node_id": "MDU6TGFiZWwxMDAyNDkxMjEw", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/conformance%20tests", "name": "conformance tests", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "jskeet", "id": 17011, "node_id": "MDQ6VXNlcjE3MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jskeet", "id": 17011, "node_id": "MDQ6VXNlcjE3MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-11T08:51:58Z", "updated_at": "2020-06-11T05:43:30Z", "closed_at": "2020-06-11T05:43:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "JSON formatting is ignoring field presence for proto2 fields. Here's a failing test in C#:\r\n\r\n```csharp\r\n[Test]\r\npublic void Proto2_DefaultValuesWritten()\r\n{\r\n    var value = new ProtobufTestMessages.Proto2.TestAllTypesProto2() { FieldName13 = 0 };\r\n    AssertWriteValue(value, \"{ 'FieldName13': 0 }\");\r\n}\r\n```\r\n\r\nI have some code that fixes this by using HasPresence, but it then breaks for message types when specifying \"format default values\".\r\n\r\nI've managed to get the failing test to pass without breaking anything else, but there's significant impact in terms of the complexity of documenting `JsonFormatter.Settings.FormatDefaultValues`.\r\nEffectively, I've got rules of:\r\n\r\n- Fields that support presence use that... except when the field is a message field that's not within a oneof\r\n- Otherwise, for default values, use the FormatDefaultValues setting\r\n\r\nI'll create a PR with that change in, but we need to be sure it's the behavior we want.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7480", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7480/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7480/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7480/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7480", "id": 615002521, "node_id": "MDU6SXNzdWU2MTUwMDI1MjE=", "number": 7480, "title": "TextFormat and JsonFormat ignore experimental proto3 optional enums", "user": {"login": "thesamet", "id": 307373, "node_id": "MDQ6VXNlcjMwNzM3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/307373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thesamet", "html_url": "https://github.com/thesamet", "followers_url": "https://api.github.com/users/thesamet/followers", "following_url": "https://api.github.com/users/thesamet/following{/other_user}", "gists_url": "https://api.github.com/users/thesamet/gists{/gist_id}", "starred_url": "https://api.github.com/users/thesamet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thesamet/subscriptions", "organizations_url": "https://api.github.com/users/thesamet/orgs", "repos_url": "https://api.github.com/users/thesamet/repos", "events_url": "https://api.github.com/users/thesamet/events{/privacy}", "received_events_url": "https://api.github.com/users/thesamet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T21:42:57Z", "updated_at": "2020-05-14T00:53:44Z", "closed_at": "2020-05-14T00:53:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\n\r\nVersion: 3.12.0-rc-1\r\nLanguage: Java\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nUbuntu 19.10\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nopenjdk version \"1.8.0_252\"\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n\r\nDefine proto:\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage mypkg;\r\n\r\nenum V {\r\n  A = 0;\r\n  B = 1;\r\n  C = 2;\r\n}\r\n\r\nmessage Msg {\r\n  optional V v = 1;\r\n}\r\n```\r\n\r\nIn code:\r\n```\r\nimport mypkg.Np.Msg;\r\n\r\nimport com.google.protobuf.TextFormat;\r\nimport com.google.protobuf.util.JsonFormat;\r\n\r\nimport java.lang.String;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws Exception {\r\n        Msg withV = Msg.newBuilder().setV(mypkg.Np.V.B).build();\r\n        // prints false, excepted true\r\n        System.out.println(TextFormat.parse(withV.toString(), Msg.class).hasV());\r\n\r\n        String js = JsonFormat.printer().print(withV);\r\n        Msg.Builder b = Msg.newBuilder();\r\n        JsonFormat.parser().merge(js, b);\r\n\r\n        // prints false, excepted true\r\n        System.out.println(b.build().hasV());\r\n    }\r\n}\r\n```\r\n\r\nGenerated protos using protoc with `--experimental_allow_proto3_optional`.\r\n\r\n**What did you expect to see**\r\nWhen serializing the message `withV` above into ascii format or json, the optional field correctly shows up. The expectation is that `v` would be present when the json/ascii is parsed back.\r\n\r\n**What did you see instead?**\r\nHowever, when parsing both the json or text representation, the optional field gets ignored: `hasV` returns false in both cases, despite that the enum appears in the textual presentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7473", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7473/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7473/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7473/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7473", "id": 613700444, "node_id": "MDU6SXNzdWU2MTM3MDA0NDQ=", "number": 7473, "title": "Release java artifacts for 3.12.0-rc1", "user": {"login": "thesamet", "id": 307373, "node_id": "MDQ6VXNlcjMwNzM3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/307373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thesamet", "html_url": "https://github.com/thesamet", "followers_url": "https://api.github.com/users/thesamet/followers", "following_url": "https://api.github.com/users/thesamet/following{/other_user}", "gists_url": "https://api.github.com/users/thesamet/gists{/gist_id}", "starred_url": "https://api.github.com/users/thesamet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thesamet/subscriptions", "organizations_url": "https://api.github.com/users/thesamet/orgs", "repos_url": "https://api.github.com/users/thesamet/repos", "events_url": "https://api.github.com/users/thesamet/events{/privacy}", "received_events_url": "https://api.github.com/users/thesamet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T00:53:01Z", "updated_at": "2020-05-07T01:50:22Z", "closed_at": "2020-05-07T01:50:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is the binary artifact for Java available somewhere else? I was looking for the release candidate at the usual place:\r\nhttps://repo1.maven.org/maven2/com/google/protobuf/protobuf-java/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7469", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7469/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7469/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7469/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7469", "id": 612827260, "node_id": "MDU6SXNzdWU2MTI4MjcyNjA=", "number": 7469, "title": "Discrepancy in generated code of unsafe_arena_release_foo ", "user": {"login": "leikong", "id": 11276068, "node_id": "MDQ6VXNlcjExMjc2MDY4", "avatar_url": "https://avatars0.githubusercontent.com/u/11276068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leikong", "html_url": "https://github.com/leikong", "followers_url": "https://api.github.com/users/leikong/followers", "following_url": "https://api.github.com/users/leikong/following{/other_user}", "gists_url": "https://api.github.com/users/leikong/gists{/gist_id}", "starred_url": "https://api.github.com/users/leikong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leikong/subscriptions", "organizations_url": "https://api.github.com/users/leikong/orgs", "repos_url": "https://api.github.com/users/leikong/repos", "events_url": "https://api.github.com/users/leikong/events{/privacy}", "received_events_url": "https://api.github.com/users/leikong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-05T19:04:57Z", "updated_at": "2020-07-23T01:12:56Z", "closed_at": "2020-07-23T01:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.8.0.0 etc.\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nUbuntu 18.04.4 LTS\r\nLinux 4.15.0-99-generic #100-Ubuntu SMP x86_64 GNU/Linux\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nC compiler is Clang 9.0.0\r\nCXX compiler is Clang 9.0.0\r\n\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\nI was using unsafe_arena_set_allocated_* and unsafe_arena_release_* APIs to avoid unnecessary allocations when the sub-objects are only \"leased\" by a leasing object inside a function scope, unsafe_arena_release_*  is always called before leaving the scope.\r\n\r\nAt the beginning, I chose the unsafe_arena_set_allocated and release APIs because the other safe version of release API does an extra allocation when the object is allocated on arena. And I saw the following generated code, which does not check if the object is allocated on arena or not, so it is safe to such use unsafe_arena_* on objects allocated in both arena and heap.\r\n\r\ninline foo* outter1::unsafe_arena_release_foo() { \r\n  foo* temp = foo_;\r\n  foo_ = nullptr;\r\n  return temp;\r\n}\r\n\r\n**What did you expect to see**\r\nI expected to see consistent behavior on different types.\r\n\r\n**What did you see instead?**\r\n\r\nHowever, I later saw the following the generated code with arena check, it means it is not okay to call for heap-allocated objects.\r\n\r\ninline void outter2::unsafe_arena_set_allocated_bar(\r\n    std::string* bar) {\r\n  **GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);**\r\n... ...\r\n}\r\n\r\nSo, why the discrepancy?\r\n\r\nHaving to use two different sets of unsafe APIs (depending allocation type) makes things harder, it also makes the code less robust to future changes. I could check allocation type at runtime and choose the APIs accordingly, but that requires much more code.\r\n\r\nI am wondering if protobuf owners also realize such an issue and start to remove arena checking gradually, thus the discrepancy in arena checking. It that the case? If not, can protobuf provide a single set of unsafe_set_allocated&release API for both arena-allocated and heap-allocated objects? A possible solution is to remove arena checking in all unsafe_arena_* code, arena checking is not always generated for unsafe_arena_* anyway. I could be wrong, but it seems to arena checking is only done for std::string in generated unsafe_arena_* code. I wonder if it is because google internal version of protobuf has arena support for std::string, thus the special treatment.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7467", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7467/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7467/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7467/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7467", "id": 612506555, "node_id": "MDU6SXNzdWU2MTI1MDY1NTU=", "number": 7467, "title": "use protobuf dll for c++ project", "user": {"login": "Eyal-Elbaz", "id": 20536371, "node_id": "MDQ6VXNlcjIwNTM2Mzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/20536371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eyal-Elbaz", "html_url": "https://github.com/Eyal-Elbaz", "followers_url": "https://api.github.com/users/Eyal-Elbaz/followers", "following_url": "https://api.github.com/users/Eyal-Elbaz/following{/other_user}", "gists_url": "https://api.github.com/users/Eyal-Elbaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eyal-Elbaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eyal-Elbaz/subscriptions", "organizations_url": "https://api.github.com/users/Eyal-Elbaz/orgs", "repos_url": "https://api.github.com/users/Eyal-Elbaz/repos", "events_url": "https://api.github.com/users/Eyal-Elbaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Eyal-Elbaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-05T10:44:13Z", "updated_at": "2020-05-05T19:04:22Z", "closed_at": "2020-05-05T19:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nI'm using the latest  protobuf  version on visual studio 2019, windows 10, c++ \r\nI have a project and I'm using protobuf but I can't send my code with a request to download certain lib so I decided to use all in downloaded libprotobuf.dll and added it to my project but I get this error:\r\nLNK1107: invalid or corrupt file: cannot read at 0x2C0\r\nis there any way to fix this or maybe another way to include protobuf without other installations ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7463", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7463/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7463/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7463/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7463", "id": 612228845, "node_id": "MDU6SXNzdWU2MTIyMjg4NDU=", "number": 7463, "title": "mixing with optional fields:  core dump --experimental_allow_proto3_optional", "user": {"login": "dwsutherland", "id": 11400777, "node_id": "MDQ6VXNlcjExNDAwNzc3", "avatar_url": "https://avatars3.githubusercontent.com/u/11400777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwsutherland", "html_url": "https://github.com/dwsutherland", "followers_url": "https://api.github.com/users/dwsutherland/followers", "following_url": "https://api.github.com/users/dwsutherland/following{/other_user}", "gists_url": "https://api.github.com/users/dwsutherland/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwsutherland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwsutherland/subscriptions", "organizations_url": "https://api.github.com/users/dwsutherland/orgs", "repos_url": "https://api.github.com/users/dwsutherland/repos", "events_url": "https://api.github.com/users/dwsutherland/events{/privacy}", "received_events_url": "https://api.github.com/users/dwsutherland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-04T23:16:13Z", "updated_at": "2020-05-16T07:53:10Z", "closed_at": "2020-05-09T01:19:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: `v3.12.0-rc-1`\r\nLanguage: `Python3.7.5`\r\nOperating system: `linux-x86_64`\r\n(`Linux cortex-vbox 5.3.0-51-generic #44-Ubuntu SMP Wed Apr 22 21:09:44 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`)\r\n\r\n`protoc` pre-compile:\r\nhttps://github.com/protocolbuffers/protobuf/releases/download/v3.12.0-rc1/protoc-3.12.0-rc-1-linux-x86_64.zip\r\n\r\nInstall:\r\n`pip install protobuf==3.12.0-rc1`\r\n\r\nIt appears the new (`3.12.0-rc-1`) optional fields work if all singular fields in a message are optional:\r\n```\r\nmessage PbTest {\r\n    optional string test_string = 1;\r\n    optional bool test_bool = 2;\r\n    optional int32 test_int32 = 3;\r\n}\r\n```\r\n```\r\n>>> from cylc.flow.data_messages_pb2 import PbWorkflow, PbTest\r\n>>> test1 = PbTest(test_string='foo', test_bool=True, test_int32=1234)\r\n>>> test1\r\ntest_string: \"foo\"\r\ntest_bool: true\r\ntest_int32: 1234\r\n>>> test2 = PbTest(test_string='', test_bool=False, test_int32=0)\r\n>>> test2\r\ntest_string: \"\"\r\ntest_bool: false\r\ntest_int32: 0\r\n>>> test1.MergeFrom(test2)\r\n>>> test1\r\ntest_string: \"\"\r\ntest_bool: false\r\ntest_int32: 0\r\n```\r\nBut not if mixed with non-optional:\r\n```\r\nmessage PbTest {\r\n    string no_opt_string = 1;\r\n    optional string test_string = 2;\r\n    //optional bool test_bool = 2;\r\n    //optional int32 test_int32 = 3;\r\n}\r\n```\r\n```\r\n>>> from cylc.flow.data_messages_pb2 import PbWorkflow, PbTest\r\n>>> test1 = PbTest()\r\n>>> test1\r\n[libprotobuf FATAL google/protobuf/generated_message_reflection.cc:1015] CHECK failed: (has_bit_index) != (~0u): \r\nterminate called after throwing an instance of 'google::protobuf::FatalException'\r\n  what():  CHECK failed: (has_bit_index) != (~0u): \r\nAborted (core dumped)\r\n```\r\nAlso doesn't mix with singular message fields, i.e.:\r\n```\r\nmessage PbMeta {\r\n    string title = 1;\r\n    string description = 2;\r\n    string URL = 3;\r\n    repeated string user_defined = 4;\r\n}\r\nmessage PbTest {\r\n    //repeated string no_opt_strings = 1;\r\n    optional string test_string = 2;\r\n    Meta meta = 3;\r\n    //optional bool test_bool = 2;\r\n    //optional int32 test_int32 = 3;\r\n}\r\n```\r\n(optional single message fields do work)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7444", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7444/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7444/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7444/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7444", "id": 609519540, "node_id": "MDU6SXNzdWU2MDk1MTk1NDA=", "number": 7444, "title": "Do not install channelz when gRPC_USE_PROTO_LITE", "user": {"login": "avalon1610", "id": 1224335, "node_id": "MDQ6VXNlcjEyMjQzMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1224335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avalon1610", "html_url": "https://github.com/avalon1610", "followers_url": "https://api.github.com/users/avalon1610/followers", "following_url": "https://api.github.com/users/avalon1610/following{/other_user}", "gists_url": "https://api.github.com/users/avalon1610/gists{/gist_id}", "starred_url": "https://api.github.com/users/avalon1610/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avalon1610/subscriptions", "organizations_url": "https://api.github.com/users/avalon1610/orgs", "repos_url": "https://api.github.com/users/avalon1610/repos", "events_url": "https://api.github.com/users/avalon1610/events{/privacy}", "received_events_url": "https://api.github.com/users/avalon1610/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T02:36:12Z", "updated_at": "2020-04-30T02:37:36Z", "closed_at": "2020-04-30T02:37:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "#21011 fixed issue that we should not compile channelz when use gRPC_USE_PROTO_LITE, but not for install. \r\nwhen gRPC_INSTALL is ON, we got:\r\n`install TARGETS given target \"grpcpp_channelz\" which does not exist.`\r\n\r\nSo we need add `AND NOT gRPC_USE_PROTO_LITE` to install part too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7439", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7439/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7439/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7439/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7439", "id": 608728329, "node_id": "MDU6SXNzdWU2MDg3MjgzMjk=", "number": 7439, "title": "::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable  descriptor_table_***_2eproto", "user": {"login": "KaimingGao", "id": 5977698, "node_id": "MDQ6VXNlcjU5Nzc2OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5977698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaimingGao", "html_url": "https://github.com/KaimingGao", "followers_url": "https://api.github.com/users/KaimingGao/followers", "following_url": "https://api.github.com/users/KaimingGao/following{/other_user}", "gists_url": "https://api.github.com/users/KaimingGao/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaimingGao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaimingGao/subscriptions", "organizations_url": "https://api.github.com/users/KaimingGao/orgs", "repos_url": "https://api.github.com/users/KaimingGao/repos", "events_url": "https://api.github.com/users/KaimingGao/events{/privacy}", "received_events_url": "https://api.github.com/users/KaimingGao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T02:05:41Z", "updated_at": "2020-05-04T23:18:46Z", "closed_at": "2020-05-04T23:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "version : 3.8.0\r\n\r\ncompile command:\r\n`protoc  --cpp_out=./ google/protobuf/descriptor.proto -Igoogle/protobuf`\r\n\r\nthen I got descriptor.pb.h.  Howerver, this pb.h is different with the original google/protobuf/descriptor.pb.h.\r\n\r\ne.g.  I got\uff1a\r\n\r\n`extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_descriptor_2eproto;`\r\n\r\nin my file.\r\n\r\nwhile in the original file, it is:\r\n\r\n`extern PROTOBUF_EXPORT const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2fdescriptor_2eproto;\r\n`\r\n\r\nso, how to compile the descriptor.proto to get the right pb.h ?\r\n\r\nby the way, I got a similar issue with \r\n\r\n`descriptor_table_proto_2fcommon_2eproto #6179`  https://github.com/protocolbuffers/protobuf/issues/6179", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7432", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7432/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7432/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7432/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7432", "id": 608108188, "node_id": "MDU6SXNzdWU2MDgxMDgxODg=", "number": 7432, "title": "powerpc environment \uff0cload or read protobuf Transform libraries  ,received SIGSEGV, Illegal instruction", "user": {"login": "zzb2019", "id": 42893521, "node_id": "MDQ6VXNlcjQyODkzNTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/42893521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzb2019", "html_url": "https://github.com/zzb2019", "followers_url": "https://api.github.com/users/zzb2019/followers", "following_url": "https://api.github.com/users/zzb2019/following{/other_user}", "gists_url": "https://api.github.com/users/zzb2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzb2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzb2019/subscriptions", "organizations_url": "https://api.github.com/users/zzb2019/orgs", "repos_url": "https://api.github.com/users/zzb2019/repos", "events_url": "https://api.github.com/users/zzb2019/events{/privacy}", "received_events_url": "https://api.github.com/users/zzb2019/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-28T08:00:28Z", "updated_at": "2020-05-14T05:04:31Z", "closed_at": "2020-05-14T00:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. I cross-compiled the powerpc version of protobuf in the ubuntu environment, but the protoc under running bin cannot be executed, and Illegal instruction appears\r\nPower environment, uname -a is printed as follows:\r\nLinux KEDACOM 3.8.13-rt9-g609aea3 #1 Thu Apr 2 18:07:05 UTC 2020 PPC GNU/Linux\r\n\r\n2. Later, I compiled the libprotobuf. A static library generated by cross compilation into my protobuf conversion library. It's OK to complete the demo test, but I will report an illegal instruction when I load the conversion library through another library, and the SIGSEGV signal will be received when I call the stack.\r\n\r\nHow to deal with this problem?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7427", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7427/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7427/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7427/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7427", "id": 607178337, "node_id": "MDU6SXNzdWU2MDcxNzgzMzc=", "number": 7427, "title": "Import \"gogoproto/gogo.proto\" was not found or had errors", "user": {"login": "ighack", "id": 6670377, "node_id": "MDQ6VXNlcjY2NzAzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6670377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ighack", "html_url": "https://github.com/ighack", "followers_url": "https://api.github.com/users/ighack/followers", "following_url": "https://api.github.com/users/ighack/following{/other_user}", "gists_url": "https://api.github.com/users/ighack/gists{/gist_id}", "starred_url": "https://api.github.com/users/ighack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ighack/subscriptions", "organizations_url": "https://api.github.com/users/ighack/orgs", "repos_url": "https://api.github.com/users/ighack/repos", "events_url": "https://api.github.com/users/ighack/events{/privacy}", "received_events_url": "https://api.github.com/users/ighack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-27T02:09:00Z", "updated_at": "2020-08-27T02:20:41Z", "closed_at": "2020-08-27T02:20:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nprotoc -I=./ --python_out=./ ./binlog.proto\r\n\r\ngogoproto/gogo.proto: File not found.\r\nbinlog.proto:3:1: Import \"gogoproto/gogo.proto\" was not found or had errors.\r\n```\r\nlibprotoc 3.11.4\r\n\r\nwhat should I do?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7426", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7426/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7426/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7426/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7426", "id": 607062940, "node_id": "MDU6SXNzdWU2MDcwNjI5NDA=", "number": 7426, "title": "UInt32 represented as int in java", "user": {"login": "simPod", "id": 327717, "node_id": "MDQ6VXNlcjMyNzcxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/327717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simPod", "html_url": "https://github.com/simPod", "followers_url": "https://api.github.com/users/simPod/followers", "following_url": "https://api.github.com/users/simPod/following{/other_user}", "gists_url": "https://api.github.com/users/simPod/gists{/gist_id}", "starred_url": "https://api.github.com/users/simPod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simPod/subscriptions", "organizations_url": "https://api.github.com/users/simPod/orgs", "repos_url": "https://api.github.com/users/simPod/repos", "events_url": "https://api.github.com/users/simPod/events{/privacy}", "received_events_url": "https://api.github.com/users/simPod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T17:12:15Z", "updated_at": "2020-05-14T01:07:58Z", "closed_at": "2020-05-14T01:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What version of protobuf and what language are you using?**\r\nVersion: v3.9.+\r\nLanguage: Java\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nMacos Catalina\r\n\r\nValues for `uint32` fields are represented as `int` java primitive type in generated code. That type is capable of holding max value 2^32-1. `uint32` max value overflows the capacity of java `int`. \r\n\r\nEg. `3 936 623 488` is returned as `-358 343 808` from protobuf generated `uint32` getter.\r\n\r\nHow to work with it properly then? Currently I have to do this to get correct value but that does not seem to be good DX.\r\n\r\n```java\r\nif (value >= 0) {\r\n    return value;\r\n} else {\r\n    return value & 0x00000000FFFFFFFFL;\r\n}\r\n\r\n-------------\r\n\r\nInteger::toUnsignedLong(value)\r\n```\r\n\r\nI thought of two solutions:\r\n\r\n1) document the behaviour\r\n2) introduce a new type of getter that returns instance of `Number` so user does not need to do conversion manually. Except current `getUInt32Field()` there would have been `getUInt32FieldAsNumber()` introduced.\r\n\r\nWould MR with any such fix be accepted?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7425", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7425/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7425/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7425/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7425", "id": 606670583, "node_id": "MDU6SXNzdWU2MDY2NzA1ODM=", "number": 7425, "title": "Symbol not found: __ZN20wireless_diagnostics6google8protobuf2io16CodedInputStream24default_recursion_limit_E", "user": {"login": "TheWanderingCoel", "id": 39617891, "node_id": "MDQ6VXNlcjM5NjE3ODkx", "avatar_url": "https://avatars3.githubusercontent.com/u/39617891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheWanderingCoel", "html_url": "https://github.com/TheWanderingCoel", "followers_url": "https://api.github.com/users/TheWanderingCoel/followers", "following_url": "https://api.github.com/users/TheWanderingCoel/following{/other_user}", "gists_url": "https://api.github.com/users/TheWanderingCoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheWanderingCoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheWanderingCoel/subscriptions", "organizations_url": "https://api.github.com/users/TheWanderingCoel/orgs", "repos_url": "https://api.github.com/users/TheWanderingCoel/repos", "events_url": "https://api.github.com/users/TheWanderingCoel/events{/privacy}", "received_events_url": "https://api.github.com/users/TheWanderingCoel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T02:32:56Z", "updated_at": "2020-04-25T09:36:46Z", "closed_at": "2020-04-25T09:36:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: 3.11.4\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nmacOS Catalina 10.15.4\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\nApple clang version 11.0.3 (clang-1103.0.32.26)\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. Add protobuf to libs and include path\r\n2. Hit compile\r\n3. App crash\r\n4. symbol missing\r\n\r\n**What did you expect to see**\r\nThe program should run successfully\r\n\r\n**What did you see instead?**\r\n```\r\ndyld: Symbol not found: __ZN20wireless_diagnostics6google8protobuf2io16CodedInputStream24default_recursion_limit_E\r\n  Referenced from: /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libAWDSupport.dylib\r\n  Expected in: /usr/local/opt/protobuf/lib/libprotobuf-lite.dylib\r\n in /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libAWDSupport.dylib\r\n10:25:44: The program has unexpectedly finished.\r\n```\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\n**Anything else we should know about your project / environment**\r\n- Qt 5.14.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7420", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7420/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7420/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7420/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7420", "id": 606318282, "node_id": "MDU6SXNzdWU2MDYzMTgyODI=", "number": 7420, "title": "Use MessageToJsonString() convert Message into Json crash. Segment fault.", "user": {"login": "MelodyD", "id": 15688795, "node_id": "MDQ6VXNlcjE1Njg4Nzk1", "avatar_url": "https://avatars1.githubusercontent.com/u/15688795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MelodyD", "html_url": "https://github.com/MelodyD", "followers_url": "https://api.github.com/users/MelodyD/followers", "following_url": "https://api.github.com/users/MelodyD/following{/other_user}", "gists_url": "https://api.github.com/users/MelodyD/gists{/gist_id}", "starred_url": "https://api.github.com/users/MelodyD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MelodyD/subscriptions", "organizations_url": "https://api.github.com/users/MelodyD/orgs", "repos_url": "https://api.github.com/users/MelodyD/repos", "events_url": "https://api.github.com/users/MelodyD/events{/privacy}", "received_events_url": "https://api.github.com/users/MelodyD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T13:34:29Z", "updated_at": "2020-04-26T05:01:29Z", "closed_at": "2020-04-26T05:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for bug reports only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n**What version of protobuf and what language are you using?**\r\nVersion: v3.11.3\r\nLanguage: C++\r\n\r\n**What operating system (Linux, Windows, ...) and version?**\r\nUbuntu 16.04\r\n\r\n**What runtime / compiler are you using (e.g., python version or gcc version)**\r\ngcc 5.4.0\r\n\r\n**What did you do?**\r\nSteps to reproduce the behavior:\r\n1. I have a.out link b.so and b.so link libprotobuf.a .\r\n2. I was write code in b.so as below\r\n```\r\n\tstd::string json;\r\n        cicv::routing::RoutingResponse response;\r\n\tgoogle::protobuf::util::MessageToJsonString(response,&json);\r\n```\r\n3. When i debug a.out , it will always crash at code **google::protobuf::util::MessageToJsonString(response,&json);**.\r\n4. Here is the gdb info.\r\n```\r\nBreakpoint 3, cicv::routing::ResultGenerator::GeneratePassageRegion (this=0x7fffffffe45e, map_version=..., start_param=..., nodes=..., arc_dataset=0x6b08c0) at /home/cicv/projects/GD_RouteEngine/api/src/NET/result_generator.cc:46\r\n46\t\tgoogle::protobuf::util::MessageToJsonString(response,&json);\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n__GI___libc_free (mem=0xffffdd5800000000) at malloc.c:3103\r\n3103\tmalloc.c: \u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55.\r\n```\r\n \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7405", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7405/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7405/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7405/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7405", "id": 603971820, "node_id": "MDU6SXNzdWU2MDM5NzE4MjA=", "number": 7405, "title": "Protobuf Bytes parser (meanings)", "user": {"login": "M-Tonin", "id": 21134353, "node_id": "MDQ6VXNlcjIxMTM0MzUz", "avatar_url": "https://avatars0.githubusercontent.com/u/21134353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-Tonin", "html_url": "https://github.com/M-Tonin", "followers_url": "https://api.github.com/users/M-Tonin/followers", "following_url": "https://api.github.com/users/M-Tonin/following{/other_user}", "gists_url": "https://api.github.com/users/M-Tonin/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-Tonin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-Tonin/subscriptions", "organizations_url": "https://api.github.com/users/M-Tonin/orgs", "repos_url": "https://api.github.com/users/M-Tonin/repos", "events_url": "https://api.github.com/users/M-Tonin/events{/privacy}", "received_events_url": "https://api.github.com/users/M-Tonin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-21T12:49:27Z", "updated_at": "2020-04-22T11:12:50Z", "closed_at": "2020-04-22T11:12:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nNOTE: this form is for feature requests (including cleanup requests) only. For questions or troubleshooting, please see the protobuf mailing list: https://groups.google.com/forum/#!forum/protobuf\r\n\r\n-->\r\n\r\n\r\n**What language does this apply to?**\r\nIf it's a proto syntax change, is it for proto2 or proto3? proto2\r\nIf it's about generated code change, what programming language? python\r\n\r\n**Describe the problem you are trying to solve.**\r\nI have been studying the format of the protobuf, but at the level of bytes I cannot identify what signals the end of one field and the beginning of another, or what shows me that it is a new type of data. I can see the strings, see the floating points. But I don't know what a new field is, when a new field starts or ends.\r\n\r\n**Describe the solution you'd like**\r\nSine description about this. About how to interpret the protobuf bytes. What is the stop and start bytes.\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7395", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7395/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7395/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7395/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7395", "id": 602115024, "node_id": "MDU6SXNzdWU2MDIxMTUwMjQ=", "number": 7395, "title": "Consider removing HasFoo/ClearFoo() for proto2 message fields in C#", "user": {"login": "jskeet", "id": 17011, "node_id": "MDQ6VXNlcjE3MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 205322238, "node_id": "MDU6TGFiZWwyMDUzMjIyMzg=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c%23", "name": "c#", "color": "bfd4f2", "default": false, "description": null}, {"id": 124699533, "node_id": "MDU6TGFiZWwxMjQ2OTk1MzM=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jskeet", "id": 17011, "node_id": "MDQ6VXNlcjE3MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jskeet", "id": 17011, "node_id": "MDQ6VXNlcjE3MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jskeet", "html_url": "https://github.com/jskeet", "followers_url": "https://api.github.com/users/jskeet/followers", "following_url": "https://api.github.com/users/jskeet/following{/other_user}", "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions", "organizations_url": "https://api.github.com/users/jskeet/orgs", "repos_url": "https://api.github.com/users/jskeet/repos", "events_url": "https://api.github.com/users/jskeet/events{/privacy}", "received_events_url": "https://api.github.com/users/jskeet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-04-17T17:05:38Z", "updated_at": "2020-05-01T08:06:50Z", "closed_at": "2020-05-01T08:06:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To clarify that title, by \"proto2 message fields\" I mean \"fields in a proto2-syntax message, where the type of the field is a message type\".\r\n\r\nThis code:\r\n\r\n```csharp\r\nvar person = GetPersonFromSomewhere();\r\nif (person.HasAddress)\r\n{\r\n   // Do something with the address field\r\n}\r\n```\r\n\r\nis just equivalent to:\r\n\r\n```csharp\r\nvar person = GetPersonFromSomewhere();\r\nif (person.Address != null)\r\n{\r\n   // Do something with the address field\r\n}\r\n```\r\n\r\nor (more modern idiom)\r\n\r\n```csharp\r\nvar person = GetPersonFromSomewhere();\r\nif (person.Address is object)\r\n{\r\n   // Do something with the address field\r\n}\r\n```\r\n\r\nLikewise `person.ClearAddress()` is just equivalent to `person.Address = null;`\r\n\r\nWe should *consider* removing the presence accessors here.\r\n\r\nNote that this becomes trivial to do after #7382 is merged.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7388", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7388/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7388/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7388/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7388", "id": 600760172, "node_id": "MDU6SXNzdWU2MDA3NjAxNzI=", "number": 7388, "title": "Python Protobuf : How to dynamically add a key - value to a map ?", "user": {"login": "ideepg", "id": 6221043, "node_id": "MDQ6VXNlcjYyMjEwNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6221043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ideepg", "html_url": "https://github.com/ideepg", "followers_url": "https://api.github.com/users/ideepg/followers", "following_url": "https://api.github.com/users/ideepg/following{/other_user}", "gists_url": "https://api.github.com/users/ideepg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ideepg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ideepg/subscriptions", "organizations_url": "https://api.github.com/users/ideepg/orgs", "repos_url": "https://api.github.com/users/ideepg/repos", "events_url": "https://api.github.com/users/ideepg/events{/privacy}", "received_events_url": "https://api.github.com/users/ideepg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250677130, "node_id": "MDU6TGFiZWwyNTA2NzcxMzA=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/python", "name": "python", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "anandolee", "id": 11618033, "node_id": "MDQ6VXNlcjExNjE4MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11618033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandolee", "html_url": "https://github.com/anandolee", "followers_url": "https://api.github.com/users/anandolee/followers", "following_url": "https://api.github.com/users/anandolee/following{/other_user}", "gists_url": "https://api.github.com/users/anandolee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandolee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandolee/subscriptions", "organizations_url": "https://api.github.com/users/anandolee/orgs", "repos_url": "https://api.github.com/users/anandolee/repos", "events_url": "https://api.github.com/users/anandolee/events{/privacy}", "received_events_url": "https://api.github.com/users/anandolee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anandolee", "id": 11618033, "node_id": "MDQ6VXNlcjExNjE4MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11618033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandolee", "html_url": "https://github.com/anandolee", "followers_url": "https://api.github.com/users/anandolee/followers", "following_url": "https://api.github.com/users/anandolee/following{/other_user}", "gists_url": "https://api.github.com/users/anandolee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandolee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandolee/subscriptions", "organizations_url": "https://api.github.com/users/anandolee/orgs", "repos_url": "https://api.github.com/users/anandolee/repos", "events_url": "https://api.github.com/users/anandolee/events{/privacy}", "received_events_url": "https://api.github.com/users/anandolee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-16T05:33:35Z", "updated_at": "2020-05-27T00:13:30Z", "closed_at": "2020-05-27T00:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation doesn't give any insight about creating a key dynamically within a map and then assign a value to the key . \r\n\r\nAny leads would be helpful", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7375", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7375/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7375/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7375/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7375", "id": 599498736, "node_id": "MDU6SXNzdWU1OTk0OTg3MzY=", "number": 7375, "title": "Python protobuf: returning None on Timestamp", "user": {"login": "DHofs", "id": 61182609, "node_id": "MDQ6VXNlcjYxMTgyNjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/61182609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DHofs", "html_url": "https://github.com/DHofs", "followers_url": "https://api.github.com/users/DHofs/followers", "following_url": "https://api.github.com/users/DHofs/following{/other_user}", "gists_url": "https://api.github.com/users/DHofs/gists{/gist_id}", "starred_url": "https://api.github.com/users/DHofs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DHofs/subscriptions", "organizations_url": "https://api.github.com/users/DHofs/orgs", "repos_url": "https://api.github.com/users/DHofs/repos", "events_url": "https://api.github.com/users/DHofs/events{/privacy}", "received_events_url": "https://api.github.com/users/DHofs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 250677130, "node_id": "MDU6TGFiZWwyNTA2NzcxMzA=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/python", "name": "python", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "anandolee", "id": 11618033, "node_id": "MDQ6VXNlcjExNjE4MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11618033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandolee", "html_url": "https://github.com/anandolee", "followers_url": "https://api.github.com/users/anandolee/followers", "following_url": "https://api.github.com/users/anandolee/following{/other_user}", "gists_url": "https://api.github.com/users/anandolee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandolee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandolee/subscriptions", "organizations_url": "https://api.github.com/users/anandolee/orgs", "repos_url": "https://api.github.com/users/anandolee/repos", "events_url": "https://api.github.com/users/anandolee/events{/privacy}", "received_events_url": "https://api.github.com/users/anandolee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anandolee", "id": 11618033, "node_id": "MDQ6VXNlcjExNjE4MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11618033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandolee", "html_url": "https://github.com/anandolee", "followers_url": "https://api.github.com/users/anandolee/followers", "following_url": "https://api.github.com/users/anandolee/following{/other_user}", "gists_url": "https://api.github.com/users/anandolee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandolee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandolee/subscriptions", "organizations_url": "https://api.github.com/users/anandolee/orgs", "repos_url": "https://api.github.com/users/anandolee/repos", "events_url": "https://api.github.com/users/anandolee/events{/privacy}", "received_events_url": "https://api.github.com/users/anandolee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-14T11:26:46Z", "updated_at": "2020-05-01T09:56:00Z", "closed_at": "2020-04-20T20:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The FromDateTime() function from python's protobuf returns None instead of a TimeStamp on my gRPC application.\r\n\r\nThis is how I have it set up.\r\n\r\n```\r\nfrom google.protobuf.timestamp_pb2 import Timestamp\r\n\r\nself.forecastDate = []\r\nts = Timestamp()\r\ni = 0\r\nfor qty in self.forecastData:\r\n        self.forecastDate.append(\r\n                ts.FromDatetime(datetime.datetime.now() + datetime.timedelta(days=i))\r\n        )\r\n        i += 1\r\n```\r\nI really don't know what I am missing because documentation asks for a datetime as a parameter for that function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7363", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7363/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7363/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7363/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7363", "id": 595454290, "node_id": "MDU6SXNzdWU1OTU0NTQyOTA=", "number": 7363, "title": "Custom options are not exposed in the Python protoc plugin interface", "user": {"login": "JonasVautherin", "id": 2606672, "node_id": "MDQ6VXNlcjI2MDY2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonasVautherin", "html_url": "https://github.com/JonasVautherin", "followers_url": "https://api.github.com/users/JonasVautherin/followers", "following_url": "https://api.github.com/users/JonasVautherin/following{/other_user}", "gists_url": "https://api.github.com/users/JonasVautherin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonasVautherin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonasVautherin/subscriptions", "organizations_url": "https://api.github.com/users/JonasVautherin/orgs", "repos_url": "https://api.github.com/users/JonasVautherin/repos", "events_url": "https://api.github.com/users/JonasVautherin/events{/privacy}", "received_events_url": "https://api.github.com/users/JonasVautherin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T21:56:59Z", "updated_at": "2020-04-07T00:30:16Z", "closed_at": "2020-04-07T00:30:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems to me that custom options are not being exposed in python plugins. I am creating my own protoc plugin in python, which gets a `request` like so:\r\n\r\n```python\r\ndef generate_reactive(request):\r\n```\r\n\r\nThis request object contains fields like `file_to_generate`, `parameter`, `compiler_version`, `proto_file`. Basically this exposes everything that is being parsed from my proto file. Except that my custom option is not appearing there, even though it appears in the `*.pb.h` and `*.pb.cc` files, meaning that those plugins get access to it.\r\n\r\nIs that a missing feature in the python plugin interface?\r\n\r\nI am extending the options with:\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\nimport \"google/protobuf/descriptor.proto\";\r\n\r\npackage my.extensions;\r\n\r\nextend google.protobuf.FieldOptions {\r\n    string myopt = 1000;\r\n}\r\n```\r\n\r\nand trying on one of my fields with:\r\n\r\n```proto\r\n    double a_double = 1 [(my.extensions.myopt)=\"Is this the real life? Is this just fantasy?\"];\r\n```\r\n\r\nAs said above, the string clearly appears in `*.pb.h` and `*.pb.cc`, but doesn't seem exposed to the python plugin.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7339", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7339/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7339/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7339/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7339", "id": 589894670, "node_id": "MDU6SXNzdWU1ODk4OTQ2NzA=", "number": 7339, "title": "Reserve Protobuf Global Extension Registry number for ADLINK EdgeSDK", "user": {"login": "elder4p", "id": 11318425, "node_id": "MDQ6VXNlcjExMzE4NDI1", "avatar_url": "https://avatars2.githubusercontent.com/u/11318425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elder4p", "html_url": "https://github.com/elder4p", "followers_url": "https://api.github.com/users/elder4p/followers", "following_url": "https://api.github.com/users/elder4p/following{/other_user}", "gists_url": "https://api.github.com/users/elder4p/gists{/gist_id}", "starred_url": "https://api.github.com/users/elder4p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elder4p/subscriptions", "organizations_url": "https://api.github.com/users/elder4p/orgs", "repos_url": "https://api.github.com/users/elder4p/repos", "events_url": "https://api.github.com/users/elder4p/events{/privacy}", "received_events_url": "https://api.github.com/users/elder4p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T21:53:52Z", "updated_at": "2020-04-02T16:07:17Z", "closed_at": "2020-04-02T16:07:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reserve Protobuf Global Extension Registry number\r\n\r\nProject: ADLINK EdgeSDK\r\nWebsite: https://www.adlinktech.com/en/Edge-SDK-IoT\r\n\r\nLooks like 1086 is the next available.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7335", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7335/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7335/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7335/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7335", "id": 589286551, "node_id": "MDU6SXNzdWU1ODkyODY1NTE=", "number": 7335, "title": "Expose CodedOutputStream ctor", "user": {"login": "MaximGurschi", "id": 18578793, "node_id": "MDQ6VXNlcjE4NTc4Nzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/18578793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaximGurschi", "html_url": "https://github.com/MaximGurschi", "followers_url": "https://api.github.com/users/MaximGurschi/followers", "following_url": "https://api.github.com/users/MaximGurschi/following{/other_user}", "gists_url": "https://api.github.com/users/MaximGurschi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaximGurschi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaximGurschi/subscriptions", "organizations_url": "https://api.github.com/users/MaximGurschi/orgs", "repos_url": "https://api.github.com/users/MaximGurschi/repos", "events_url": "https://api.github.com/users/MaximGurschi/events{/privacy}", "received_events_url": "https://api.github.com/users/MaximGurschi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 205322238, "node_id": "MDU6TGFiZWwyMDUzMjIyMzg=", "url": "https://api.github.com/repos/protocolbuffers/protobuf/labels/c%23", "name": "c#", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T17:22:48Z", "updated_at": "2020-07-15T07:18:31Z", "closed_at": "2020-07-15T07:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "**What language does this apply to?**\r\nC#\r\n\r\n**Describe the problem you are trying to solve.**\r\nFast serialization for when the output byte array has other data.\r\n\r\n**Describe the solution you'd like**\r\nExpose the private ctor of CodedOutputStream:\r\nprivate CodedOutputStream(byte[] buffer, int offset, int length)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7315", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7315/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7315/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7315/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7315", "id": 583892341, "node_id": "MDU6SXNzdWU1ODM4OTIzNDE=", "number": 7315, "title": "Request for custom extension for SummaFT", "user": {"login": "wibobm", "id": 1387795, "node_id": "MDQ6VXNlcjEzODc3OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1387795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wibobm", "html_url": "https://github.com/wibobm", "followers_url": "https://api.github.com/users/wibobm/followers", "following_url": "https://api.github.com/users/wibobm/following{/other_user}", "gists_url": "https://api.github.com/users/wibobm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wibobm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wibobm/subscriptions", "organizations_url": "https://api.github.com/users/wibobm/orgs", "repos_url": "https://api.github.com/users/wibobm/repos", "events_url": "https://api.github.com/users/wibobm/events{/privacy}", "received_events_url": "https://api.github.com/users/wibobm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-18T17:33:39Z", "updated_at": "2020-03-20T13:23:55Z", "closed_at": "2020-03-20T13:23:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'd like to have custom extension allocated for SummaFT protoc-plugins to docs/options.md.\r\n\r\nA number of 1080 seems vacant, but please allocate appropriate number for us.\r\nThe project website is private but will be public end of summer.  You can use www.summaft.com for now.\r\n\r\nsee https://github.com/protocolbuffers/protobuf/pull/7314\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7302", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7302/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7302/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7302/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7302", "id": 580564043, "node_id": "MDU6SXNzdWU1ODA1NjQwNDM=", "number": 7302, "title": "Extension number request in my project of grpc-graphql-gateway", "user": {"login": "ysugimoto", "id": 1000401, "node_id": "MDQ6VXNlcjEwMDA0MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1000401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysugimoto", "html_url": "https://github.com/ysugimoto", "followers_url": "https://api.github.com/users/ysugimoto/followers", "following_url": "https://api.github.com/users/ysugimoto/following{/other_user}", "gists_url": "https://api.github.com/users/ysugimoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysugimoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysugimoto/subscriptions", "organizations_url": "https://api.github.com/users/ysugimoto/orgs", "repos_url": "https://api.github.com/users/ysugimoto/repos", "events_url": "https://api.github.com/users/ysugimoto/events{/privacy}", "received_events_url": "https://api.github.com/users/ysugimoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-13T12:15:48Z", "updated_at": "2020-03-17T15:28:37Z", "closed_at": "2020-03-17T15:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'd like to have custom option numbers for project of grpc-graphql-gateway to `docs/options.md`.\r\nThe project has three of FieldOptions, MethodOptions, and ServiceOptions.\r\n\r\nA number of 1079 seems vacant, but please allocate appropriate number for us.\r\nThe project website is https://github.com/ysugimoto/grpc-graphql-gateway \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7290", "repository_url": "https://api.github.com/repos/protocolbuffers/protobuf", "labels_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7290/labels{/name}", "comments_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7290/comments", "events_url": "https://api.github.com/repos/protocolbuffers/protobuf/issues/7290/events", "html_url": "https://github.com/protocolbuffers/protobuf/issues/7290", "id": 577817906, "node_id": "MDU6SXNzdWU1Nzc4MTc5MDY=", "number": 7290, "title": "Hello\uff0cA question need your to confirm. Can i compiler protobuf2(version) to C# sourcecode through protoc 3.11.4?", "user": {"login": "WZH70246", "id": 25500271, "node_id": "MDQ6VXNlcjI1NTAwMjcx", "avatar_url": "https://avatars0.githubusercontent.com/u/25500271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WZH70246", "html_url": "https://github.com/WZH70246", "followers_url": "https://api.github.com/users/WZH70246/followers", "following_url": "https://api.github.com/users/WZH70246/following{/other_user}", "gists_url": "https://api.github.com/users/WZH70246/gists{/gist_id}", "starred_url": "https://api.github.com/users/WZH70246/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WZH70246/subscriptions", "organizations_url": "https://api.github.com/users/WZH70246/orgs", "repos_url": "https://api.github.com/users/WZH70246/repos", "events_url": "https://api.github.com/users/WZH70246/events{/privacy}", "received_events_url": "https://api.github.com/users/WZH70246/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-09T10:51:16Z", "updated_at": "2020-04-10T02:11:16Z", "closed_at": "2020-04-10T02:11:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\uff0cA question need your to confirm. Can i compiler protobuf2(version) to C# sourcecode through protoc 3.11.4?", "performed_via_github_app": null, "score": 1.0}]}