{"total_count": 85, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/197", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/197/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/197/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/197", "id": 555071965, "node_id": "MDU6SXNzdWU1NTUwNzE5NjU=", "number": 197, "title": "Shapefile Reading Error", "user": {"login": "MrZombie69232", "id": 47268048, "node_id": "MDQ6VXNlcjQ3MjY4MDQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/47268048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrZombie69232", "html_url": "https://github.com/MrZombie69232", "followers_url": "https://api.github.com/users/MrZombie69232/followers", "following_url": "https://api.github.com/users/MrZombie69232/following{/other_user}", "gists_url": "https://api.github.com/users/MrZombie69232/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrZombie69232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrZombie69232/subscriptions", "organizations_url": "https://api.github.com/users/MrZombie69232/orgs", "repos_url": "https://api.github.com/users/MrZombie69232/repos", "events_url": "https://api.github.com/users/MrZombie69232/events{/privacy}", "received_events_url": "https://api.github.com/users/MrZombie69232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T11:01:25Z", "updated_at": "2020-03-02T15:31:07Z", "closed_at": "2020-03-02T15:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Syntax :- **sf = shapefile.Reader(\"Users\\Mr Zombie\\Desktop\\SortedRDR_0N1N_58E59E\\837.shp\")**\r\nTraceback (most recent call last):\r\n\r\n  Error I am getting :-\r\n```\r\n_File \"<ipython-input-12-e3bcb35a9a96>\", line 1, in <module>\r\n    sf = shapefile.Reader(\"Users\\Mr Zombie\\Desktop\\SortedRDR_0N1N_58E59E\\837.shp\")\r\n\r\n  File \"C:\\Users\\Public\\Anaconda3\\lib\\site-packages\\shapefile.py\", line 553, in __init__\r\n    self.load(args[0])\r\n\r\n  File \"C:\\Users\\Public\\Anaconda3\\lib\\site-packages\\shapefile.py\", line 646, in load\r\n    raise ShapefileException(\"Unable to open %s.dbf or %s.shp.\" % (shapeName, shapeName))\r\n\r\nShapefileException: Unable to open Users\\Mr Zombie\\Desktop\\SortedRDR_0N1N_58E59E\\837.dbf or Users\\Mr Zombie\\Desktop\\SortedRDR_0N1N_58E59E\\837.shp._\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/182", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/182/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/182/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/182", "id": 425196847, "node_id": "MDU6SXNzdWU0MjUxOTY4NDc=", "number": 182, "title": "UnicodeDecodeError", "user": {"login": "ShawDa", "id": 26062083, "node_id": "MDQ6VXNlcjI2MDYyMDgz", "avatar_url": "https://avatars2.githubusercontent.com/u/26062083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShawDa", "html_url": "https://github.com/ShawDa", "followers_url": "https://api.github.com/users/ShawDa/followers", "following_url": "https://api.github.com/users/ShawDa/following{/other_user}", "gists_url": "https://api.github.com/users/ShawDa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShawDa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShawDa/subscriptions", "organizations_url": "https://api.github.com/users/ShawDa/orgs", "repos_url": "https://api.github.com/users/ShawDa/repos", "events_url": "https://api.github.com/users/ShawDa/events{/privacy}", "received_events_url": "https://api.github.com/users/ShawDa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-26T02:26:53Z", "updated_at": "2019-03-26T03:34:46Z", "closed_at": "2019-03-26T03:34:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "`records = sf.records()`\r\n\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xcc in position 0: invalid continuation byte\r\n\r\nWhen i use version2, error happens; after change to version1, i can see the record.\r\nBy the way, it has Chinese character in the records.\r\nHope can fix it!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/180", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/180/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/180/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/180", "id": 408568067, "node_id": "MDU6SXNzdWU0MDg1NjgwNjc=", "number": 180, "title": "Calling dir() on a record produces a TypeError in Python 3.7", "user": {"login": "evfredericksen", "id": 4108096, "node_id": "MDQ6VXNlcjQxMDgwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4108096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evfredericksen", "html_url": "https://github.com/evfredericksen", "followers_url": "https://api.github.com/users/evfredericksen/followers", "following_url": "https://api.github.com/users/evfredericksen/following{/other_user}", "gists_url": "https://api.github.com/users/evfredericksen/gists{/gist_id}", "starred_url": "https://api.github.com/users/evfredericksen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evfredericksen/subscriptions", "organizations_url": "https://api.github.com/users/evfredericksen/orgs", "repos_url": "https://api.github.com/users/evfredericksen/repos", "events_url": "https://api.github.com/users/evfredericksen/events{/privacy}", "received_events_url": "https://api.github.com/users/evfredericksen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-10T19:14:43Z", "updated_at": "2019-02-15T20:24:33Z", "closed_at": "2019-02-15T19:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 31, in <module>\r\n    main()\r\n  File \"main.py\", line 23, in main\r\n    print(dir(record))\r\n  File \"C:\\Users\\evan\\projects\\wfrisk\\wfrisk\\lib\\site-packages\\shapefile.py\", line 471, in __dir__\r\n    return attrs + (self.__field_positions.values()) # plus field names (random order)\r\nTypeError: can only concatenate list (not \"dict_values\") to list\r\n```\r\n\r\nAdditionally it seems to make the most sense for dir() to expose self.__field_positions keys rather than values:\r\n ```python\r\nattrs = [attr for attr in vars(type(self)) if not attr.startswith('_')]\r\nreturn attrs + list(self.__field_positions) # plus field names (random order)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/178", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/178/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/178/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/178", "id": 405888358, "node_id": "MDU6SXNzdWU0MDU4ODgzNTg=", "number": 178, "title": "Allow random access to shapefile records", "user": {"login": "chrisranderson", "id": 5461398, "node_id": "MDQ6VXNlcjU0NjEzOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5461398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisranderson", "html_url": "https://github.com/chrisranderson", "followers_url": "https://api.github.com/users/chrisranderson/followers", "following_url": "https://api.github.com/users/chrisranderson/following{/other_user}", "gists_url": "https://api.github.com/users/chrisranderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisranderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisranderson/subscriptions", "organizations_url": "https://api.github.com/users/chrisranderson/orgs", "repos_url": "https://api.github.com/users/chrisranderson/repos", "events_url": "https://api.github.com/users/chrisranderson/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisranderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-01T21:53:54Z", "updated_at": "2019-02-06T23:58:48Z", "closed_at": "2019-02-06T23:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This would be great for my use case - using a large shapefile and fairly often wanting to return specific geometries instead of iterating through entire thing looking for it. I'm picturing something like `reader.getShapeRecords([13321, 482, 953])`.\r\n\r\nI don't understand the shapefile format - is this possible? Simple to implement?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/176", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/176/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/176/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/176", "id": 402783769, "node_id": "MDU6SXNzdWU0MDI3ODM3Njk=", "number": 176, "title": "Error in accessing record content in shapefile.Shaperecord object", "user": {"login": "alexandrutarna", "id": 34584499, "node_id": "MDQ6VXNlcjM0NTg0NDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/34584499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandrutarna", "html_url": "https://github.com/alexandrutarna", "followers_url": "https://api.github.com/users/alexandrutarna/followers", "following_url": "https://api.github.com/users/alexandrutarna/following{/other_user}", "gists_url": "https://api.github.com/users/alexandrutarna/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandrutarna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandrutarna/subscriptions", "organizations_url": "https://api.github.com/users/alexandrutarna/orgs", "repos_url": "https://api.github.com/users/alexandrutarna/repos", "events_url": "https://api.github.com/users/alexandrutarna/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandrutarna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-24T16:15:42Z", "updated_at": "2019-02-15T20:26:16Z", "closed_at": "2019-02-06T22:13:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/GeospatialPython/pyshp/blob/85b534c166acddd4e2dc322402fc6f952fd7a1da/shapefile.py#L471\r\n I am getting an error when I try to access the elements of the record. Even if I just try to view the records in the debugger I get the error shown in the image below. \r\n\r\n![image](https://user-images.githubusercontent.com/34584499/51691348-4704d300-2003-11e9-975f-9af473a272ef.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/175", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/175/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/175/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/175", "id": 392777642, "node_id": "MDU6SXNzdWUzOTI3Nzc2NDI=", "number": 175, "title": "Possible bug during conversion from shp to json ", "user": {"login": "karanchawla", "id": 15241546, "node_id": "MDQ6VXNlcjE1MjQxNTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/15241546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karanchawla", "html_url": "https://github.com/karanchawla", "followers_url": "https://api.github.com/users/karanchawla/followers", "following_url": "https://api.github.com/users/karanchawla/following{/other_user}", "gists_url": "https://api.github.com/users/karanchawla/gists{/gist_id}", "starred_url": "https://api.github.com/users/karanchawla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karanchawla/subscriptions", "organizations_url": "https://api.github.com/users/karanchawla/orgs", "repos_url": "https://api.github.com/users/karanchawla/repos", "events_url": "https://api.github.com/users/karanchawla/events{/privacy}", "received_events_url": "https://api.github.com/users/karanchawla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-19T21:06:43Z", "updated_at": "2020-08-05T10:46:23Z", "closed_at": "2020-08-05T10:46:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to convert a shape file and using the following example code: \r\n```\r\nreader = shapefile.Reader(\"NaturalGas_Pipelines_US_201804.shp\")\r\nfields = reader.fields[1:]\r\nfield_names = [field[0] for field in fields]\r\nbuffer = []\r\nfor sr in reader.shapeRecords():\r\n    atr = dict(zip(field_names, sr.record))\r\n    geom = sr.shape.__geo_interface__\r\n    buffer.append(dict(type=\"Feature\", \\\r\n    geometry=geom, properties=atr)) \r\n\r\n\r\n# write the GeoJSON file\r\ngeojson = open(\"natural_gas.json\", \"w\")\r\nprint(geojson)\r\ngeojson.write(dumps({\"type\": \"FeatureCollection\", \"features\": buffer}, indent=2) + \"\\n\")\r\ngeojson.close()\r\n```\r\n\r\nHowever, this throws an error as follows:\r\n```\r\n 217                         coordinates.append(tuple([tuple(p) for p in self.points[ps:part]]))\r\n    218                         ps = part\r\n--> 219                 else:\r\n    220                     coordinates.append(tuple([tuple(p) for p in self.points[part:]]))\r\n    221                 return {\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/174", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/174/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/174/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/174", "id": 392380154, "node_id": "MDU6SXNzdWUzOTIzODAxNTQ=", "number": 174, "title": "struct.error: unpack requires a bytes object of length 16", "user": {"login": "cmbasnett", "id": 5035660, "node_id": "MDQ6VXNlcjUwMzU2NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5035660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmbasnett", "html_url": "https://github.com/cmbasnett", "followers_url": "https://api.github.com/users/cmbasnett/followers", "following_url": "https://api.github.com/users/cmbasnett/following{/other_user}", "gists_url": "https://api.github.com/users/cmbasnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmbasnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmbasnett/subscriptions", "organizations_url": "https://api.github.com/users/cmbasnett/orgs", "repos_url": "https://api.github.com/users/cmbasnett/repos", "events_url": "https://api.github.com/users/cmbasnett/events{/privacy}", "received_events_url": "https://api.github.com/users/cmbasnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-18T23:33:07Z", "updated_at": "2019-02-15T20:25:48Z", "closed_at": "2019-02-06T21:18:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the following file:\r\n[SHAPE.zip](https://github.com/GeospatialPython/pyshp/files/2692631/SHAPE.zip)\r\n\r\nRunning this code:\r\n\r\n    import shapefile\r\n    sf = shapefile.Reader('/SHAPE')\r\n    print(sf)\r\n    sf.shapes()\r\n\r\n`print(sf)` prints the following:\r\n\r\n```\r\nshapefile Reader\r\n    1 shapes (type 'POLYGONZ')\r\n    1 records (2 fields)\r\n```\r\n\r\nHowever, calling `sf.shapes()` yields the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"[..]/scratch_16.py\", line 76, in <module>\r\n    sf.shapes()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/shapefile.py\", line 827, in shapes\r\n    shapes.append(self.__shape())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/shapefile.py\", line 751, in __shape\r\n    (mmin, mmax) = unpack(\"<2d\", f.read(16))\r\nstruct.error: unpack requires a bytes object of length 16\r\n```\r\n\r\nThis shape file was exported from Agisoft PhotoScan.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/172", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/172/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/172/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/172", "id": 381056427, "node_id": "MDU6SXNzdWUzODEwNTY0Mjc=", "number": 172, "title": "Possible bug", "user": {"login": "kmacdonell", "id": 19673253, "node_id": "MDQ6VXNlcjE5NjczMjUz", "avatar_url": "https://avatars1.githubusercontent.com/u/19673253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmacdonell", "html_url": "https://github.com/kmacdonell", "followers_url": "https://api.github.com/users/kmacdonell/followers", "following_url": "https://api.github.com/users/kmacdonell/following{/other_user}", "gists_url": "https://api.github.com/users/kmacdonell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmacdonell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmacdonell/subscriptions", "organizations_url": "https://api.github.com/users/kmacdonell/orgs", "repos_url": "https://api.github.com/users/kmacdonell/repos", "events_url": "https://api.github.com/users/kmacdonell/events{/privacy}", "received_events_url": "https://api.github.com/users/kmacdonell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-15T08:47:20Z", "updated_at": "2019-02-15T20:25:22Z", "closed_at": "2019-02-06T21:27:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've processed ALL the County shape files for the US States (not sure why there is a state called Dakota, but this is not my point.)\r\n\r\nONLY in the New Mexico county file do I get an error processing it.  ALL the other county files have worked fine.  I get the following error:\r\n@main[89]: Processing New Mexico...\r\n@main[96]: mkdir /Users/kevin/dev/workspace/GED/SHF/NM\r\n@main[106]: County shape file URL: https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_35_county10.zip\r\n@main[109]: wget(https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_35_county10.zip, out=/Users/kevin/dev/workspace/GED/SHF/NM.zip)\r\n100% [............................................................................] 673191 / 673191\r\n@main[113]: unzip -d /Users/kevin/dev/workspace/GED/SHF/NM /Users/kevin/dev/workspace/GED/SHF/NM.zip\r\n@main[124]: sfr = shapefile.Reader(/Users/kevin/dev/workspace/GED/SHF/NM/tl_2010_35_county10)\r\n@main[142]: State: New Mexico, record 20: 'utf-8' codec can't decode byte 0xf1 in position 2: invalid continuation byte.\r\n\r\nThere are 33 counties in New Mexico, so the package couldn't read that far.\r\n\r\nThis happens as I start to read the records from the file.\r\n                for i, rec in enumerate(sfr.records()):\r\n                    county_name = rec[4]\r\n                    logging.info(f\"\\t{i:>4} {rec[4]}\")\r\n                    state2county_map[state_key]['counties'].add(county_name)\r\n\r\nSo I'm guessing that the census bureau made a bad file, but if 50+ other files are OK, wondering if there is an edge case in this package.  I don't know enough to debug this myself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/170", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/170/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/170/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/170", "id": 377253018, "node_id": "MDU6SXNzdWUzNzcyNTMwMTg=", "number": 170, "title": "Auto converting setup description to be PyPI readable", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-05T05:13:03Z", "updated_at": "2019-02-15T20:30:35Z", "closed_at": "2019-02-15T20:30:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In the past, the PyPI description, contained and extracted from README.md, was manually edited and converted from Markdown to ReStructuredText (since PyPI only renders RST). With the newly overhauled PyPI website, the description cannot be manually edited. Until PyPI gets around to supporting Markdown, we must therefore find a way to automatically do this conversion when defining the 'description' arg in the setup.py script. Not sure what would be best here, but one easy way could be to have the setup.py script automatically convert to RST using the [iPandoc](https://pypi.org/project/iPandoc/) wrapper for the docverter.com online service API. And to only require this for actual deployment. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/169", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/169/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/169/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/169", "id": 375347402, "node_id": "MDU6SXNzdWUzNzUzNDc0MDI=", "number": 169, "title": "How to install the version2.0 pyshp?", "user": {"login": "Chenghui123", "id": 33248072, "node_id": "MDQ6VXNlcjMzMjQ4MDcy", "avatar_url": "https://avatars1.githubusercontent.com/u/33248072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chenghui123", "html_url": "https://github.com/Chenghui123", "followers_url": "https://api.github.com/users/Chenghui123/followers", "following_url": "https://api.github.com/users/Chenghui123/following{/other_user}", "gists_url": "https://api.github.com/users/Chenghui123/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chenghui123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chenghui123/subscriptions", "organizations_url": "https://api.github.com/users/Chenghui123/orgs", "repos_url": "https://api.github.com/users/Chenghui123/repos", "events_url": "https://api.github.com/users/Chenghui123/events{/privacy}", "received_events_url": "https://api.github.com/users/Chenghui123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-10-30T07:02:41Z", "updated_at": "2019-02-04T23:36:03Z", "closed_at": "2019-02-04T23:36:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to install the version2.0 pyshp?\r\nI replace the shapefile.py document, then it gives a error.\r\n![image](https://user-images.githubusercontent.com/33248072/47701436-c1b49100-dc54-11e8-9219-0d105f7c8fd6.png)\r\nSo, what should i do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/165", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/165/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/165/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/165", "id": 360666527, "node_id": "MDU6SXNzdWUzNjA2NjY1Mjc=", "number": 165, "title": "error in README.md", "user": {"login": "keithbriggs", "id": 5146641, "node_id": "MDQ6VXNlcjUxNDY2NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5146641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keithbriggs", "html_url": "https://github.com/keithbriggs", "followers_url": "https://api.github.com/users/keithbriggs/followers", "following_url": "https://api.github.com/users/keithbriggs/following{/other_user}", "gists_url": "https://api.github.com/users/keithbriggs/gists{/gist_id}", "starred_url": "https://api.github.com/users/keithbriggs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keithbriggs/subscriptions", "organizations_url": "https://api.github.com/users/keithbriggs/orgs", "repos_url": "https://api.github.com/users/keithbriggs/repos", "events_url": "https://api.github.com/users/keithbriggs/events{/privacy}", "received_events_url": "https://api.github.com/users/keithbriggs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-16T18:44:12Z", "updated_at": "2018-11-05T04:44:21Z", "closed_at": "2018-11-05T04:44:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no word \"vertice\" - it should be \"vertex\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/163", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/163/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/163/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/163", "id": 356249930, "node_id": "MDU6SXNzdWUzNTYyNDk5MzA=", "number": 163, "title": "Add credits/contributions section", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-02T03:34:08Z", "updated_at": "2018-11-05T04:43:56Z", "closed_at": "2018-11-05T04:43:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "PyShp owes a lot of thanks to the various users who raise issues or contribute PRs. As a thank you to contributors, and to highlight that PyShp is a collaborative project, it would be good to add a credits section to the README that lists and highlights all those who have contributed to the project over time. Not sure about best way to find and organize these, maybe look at Contributors tab and order alphabetically? What's common practice? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/156", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/156/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/156/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/156", "id": 346923013, "node_id": "MDU6SXNzdWUzNDY5MjMwMTM=", "number": 156, "title": "'Writer' object has no attribute 'recNum'", "user": {"login": "geniuszxd", "id": 19943303, "node_id": "MDQ6VXNlcjE5OTQzMzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/19943303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geniuszxd", "html_url": "https://github.com/geniuszxd", "followers_url": "https://api.github.com/users/geniuszxd/followers", "following_url": "https://api.github.com/users/geniuszxd/following{/other_user}", "gists_url": "https://api.github.com/users/geniuszxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/geniuszxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geniuszxd/subscriptions", "organizations_url": "https://api.github.com/users/geniuszxd/orgs", "repos_url": "https://api.github.com/users/geniuszxd/repos", "events_url": "https://api.github.com/users/geniuszxd/events{/privacy}", "received_events_url": "https://api.github.com/users/geniuszxd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034541, "node_id": "MDU6TGFiZWw4NDAzNDU0MQ==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-02T09:04:18Z", "updated_at": "2018-11-05T04:58:32Z", "closed_at": "2018-11-05T04:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "And also no \"shpNum\" and \"autoBalance\" attribute\r\nAre they removed?\r\n1.2.12 with python 3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/154", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/154/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/154/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/154", "id": 335130948, "node_id": "MDU6SXNzdWUzMzUxMzA5NDg=", "number": 154, "title": "Make writer fully stream-based", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-23T21:02:19Z", "updated_at": "2018-07-19T18:35:31Z", "closed_at": "2018-07-19T18:35:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Make it fully stream-writing similar to e.g. csv module, specifying filename upon creation, and no save() needed. \r\nDrop the temporary files, and write directly to the final file. Headers can be updated after by opening in r+ (read write) mode. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/153", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/153/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/153/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/153", "id": 335130517, "node_id": "MDU6SXNzdWUzMzUxMzA1MTc=", "number": 153, "title": "Simplify writing of different shapetypes", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-23T20:54:57Z", "updated_at": "2018-06-28T21:30:10Z", "closed_at": "2018-06-28T21:30:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Seems to be some confusion and inconvenience from having a few methods to write many different types of shapes, and having to set the shapetype with a constant, which is easy to not realize or forget (e.g. #149, #102). \r\n\r\nSwitch so there's only one method for each shapetype, no constants needed, allowing for better input validation as well. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/151", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/151/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/151/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/151", "id": 335064300, "node_id": "MDU6SXNzdWUzMzUwNjQzMDA=", "number": 151, "title": "shpNum shall start from 0 or 1", "user": {"login": "DeoLeung", "id": 3764720, "node_id": "MDQ6VXNlcjM3NjQ3MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeoLeung", "html_url": "https://github.com/DeoLeung", "followers_url": "https://api.github.com/users/DeoLeung/followers", "following_url": "https://api.github.com/users/DeoLeung/following{/other_user}", "gists_url": "https://api.github.com/users/DeoLeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeoLeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeoLeung/subscriptions", "organizations_url": "https://api.github.com/users/DeoLeung/orgs", "repos_url": "https://api.github.com/users/DeoLeung/repos", "events_url": "https://api.github.com/users/DeoLeung/events{/privacy}", "received_events_url": "https://api.github.com/users/DeoLeung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-23T03:35:57Z", "updated_at": "2018-06-23T20:49:37Z", "closed_at": "2018-06-23T20:49:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/GeospatialPython/pyshp/blob/master/shapefile.py#L1067\r\n\r\nwhen writing to `shp` file, the `shpNum` starts from 0 may cause index problem for some program, like `mapnik`. \r\n\r\nMaybe the `shpNum` start index could be configurable or it should start from 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/149", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/149/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/149/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/149", "id": 330968287, "node_id": "MDU6SXNzdWUzMzA5NjgyODc=", "number": 149, "title": "Polygons not showing in QGIS 2.18", "user": {"login": "Olsthoorn", "id": 13568963, "node_id": "MDQ6VXNlcjEzNTY4OTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/13568963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olsthoorn", "html_url": "https://github.com/Olsthoorn", "followers_url": "https://api.github.com/users/Olsthoorn/followers", "following_url": "https://api.github.com/users/Olsthoorn/following{/other_user}", "gists_url": "https://api.github.com/users/Olsthoorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olsthoorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olsthoorn/subscriptions", "organizations_url": "https://api.github.com/users/Olsthoorn/orgs", "repos_url": "https://api.github.com/users/Olsthoorn/repos", "events_url": "https://api.github.com/users/Olsthoorn/events{/privacy}", "received_events_url": "https://api.github.com/users/Olsthoorn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-10T13:22:37Z", "updated_at": "2018-06-28T21:11:53Z", "closed_at": "2018-06-28T21:11:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Shapefiles with shapeType = shapefile.POLYGON don't show up. Same for shapefiles generated with shapeType =shapefile.POLYLINE. Both in GQGIS 2.18\r\n\r\nAs it turned out after several hours searching for the cause:\r\n\r\nPOLYGON shapefile parts have to be writting with shapele.Writer.poly(parts=...)) and\r\nPOLYLINE shapefile parts have to be written with shapefile.Writer.line(parts= ... )) \r\n\r\nThe documentation says that you're free to choose either line(..) or poly(...) to write the coordinates, and indeed both shapefiles are read by QGIS without complaints, and QGIS knows the extent of the shapfiles, but they don't display unless they are generated by shapefile.Writer by the correct function.\r\n\r\nTheo Olsthoorn 180610", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/143", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/143/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/143/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/143", "id": 329472353, "node_id": "MDU6SXNzdWUzMjk0NzIzNTM=", "number": 143, "title": "Reading Records: Missing information on how to get the Field type", "user": {"login": "jh-RLI", "id": 38939526, "node_id": "MDQ6VXNlcjM4OTM5NTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/38939526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jh-RLI", "html_url": "https://github.com/jh-RLI", "followers_url": "https://api.github.com/users/jh-RLI/followers", "following_url": "https://api.github.com/users/jh-RLI/following{/other_user}", "gists_url": "https://api.github.com/users/jh-RLI/gists{/gist_id}", "starred_url": "https://api.github.com/users/jh-RLI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jh-RLI/subscriptions", "organizations_url": "https://api.github.com/users/jh-RLI/orgs", "repos_url": "https://api.github.com/users/jh-RLI/repos", "events_url": "https://api.github.com/users/jh-RLI/events{/privacy}", "received_events_url": "https://api.github.com/users/jh-RLI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-05T14:04:58Z", "updated_at": "2018-06-23T18:24:08Z", "closed_at": "2018-06-23T18:24:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find any function which returns the type of the field. The wiki mentions witch types are possible but not how to read them. Is it me or is it not possible to get the type ? \r\n\r\nField type: the type of data at this column index. Types can be: Character, Numbers, Longs, Dates, or Memo. The \"Memo\" type has no meaning within a GIS and is part of the xbase spec instead.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/140", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/140/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/140/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/140", "id": 321398513, "node_id": "MDU6SXNzdWUzMjEzOTg1MTM=", "number": 140, "title": "Raise better exception when too many fields added to writer", "user": {"login": "mwtoews", "id": 895458, "node_id": "MDQ6VXNlcjg5NTQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/895458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtoews", "html_url": "https://github.com/mwtoews", "followers_url": "https://api.github.com/users/mwtoews/followers", "following_url": "https://api.github.com/users/mwtoews/following{/other_user}", "gists_url": "https://api.github.com/users/mwtoews/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtoews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtoews/subscriptions", "organizations_url": "https://api.github.com/users/mwtoews/orgs", "repos_url": "https://api.github.com/users/mwtoews/repos", "events_url": "https://api.github.com/users/mwtoews/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtoews/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-09T01:21:01Z", "updated_at": "2018-06-06T14:59:25Z", "closed_at": "2018-06-06T14:59:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While accidentally writing too many fields to a new shapefile, I get a cryptic error message raised by `struct.pack`:\r\n> error: ushort format requires 0 <= number <= USHRT_MAX\r\n\r\nHere are the relevant bits of debugging through ipython, using pyshp version 1.2.12:\r\n```\r\nC:\\ProgramData\\Anaconda2\\lib\\site-packages\\shapefile.pyc in save(self, target, shp, shx, dbf)\r\n   1146             self.saveShx(target)\r\n   1147             self.shx.close()\r\n-> 1148             self.saveDbf(target)\r\n   1149             self.dbf.close()\r\n   1150             if generated:\r\n\r\nC:\\ProgramData\\Anaconda2\\lib\\site-packages\\shapefile.pyc in saveDbf(self, target)\r\n   1117             target = os.path.splitext(target)[0] + '.dbf'\r\n   1118         self.dbf = self.__getFileObj(target)\r\n-> 1119         self.__dbfHeader()\r\n   1120         self.__dbfRecords()\r\n   1121\r\n\r\nC:\\ProgramData\\Anaconda2\\lib\\site-packages\\shapefile.pyc in __dbfHeader(self)\r\n    803         recordLength = sum([int(field[2]) for field in self.fields]) + 1\r\n    804         header = pack('<BBBBLHH20x', version, year, month, day, numRecs,\r\n--> 805                 headerLength, recordLength)\r\n    806         f.write(header)\r\n    807         # Field descriptors\r\n```\r\nI did something equivalent to:\r\n```\r\nfor n in range(1000):\r\n    w.field(\"field{0}\".format(n), \"C\")\r\n```\r\n(I can't recall exactly how many, except that it was certainly beyond USHRT_MAX)\r\n\r\nCould we have a better exception raised somewhere? Something like ValueError(\"number of fields ({0}) exceeds the maximum 256\".format(headerLength), or whatever is the correct DBF limit. Or possibly, raise an exception when `w.field(name, ...)` has been called too many times.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/139", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/139/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/139/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/139", "id": 319135887, "node_id": "MDU6SXNzdWUzMTkxMzU4ODc=", "number": 139, "title": "Cannot create shapefile with unicode field names", "user": {"login": "ekeydar", "id": 2138328, "node_id": "MDQ6VXNlcjIxMzgzMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2138328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekeydar", "html_url": "https://github.com/ekeydar", "followers_url": "https://api.github.com/users/ekeydar/followers", "following_url": "https://api.github.com/users/ekeydar/following{/other_user}", "gists_url": "https://api.github.com/users/ekeydar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekeydar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekeydar/subscriptions", "organizations_url": "https://api.github.com/users/ekeydar/orgs", "repos_url": "https://api.github.com/users/ekeydar/repos", "events_url": "https://api.github.com/users/ekeydar/events{/privacy}", "received_events_url": "https://api.github.com/users/ekeydar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 84034541, "node_id": "MDU6TGFiZWw4NDAzNDU0MQ==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 84034542, "node_id": "MDU6TGFiZWw4NDAzNDU0Mg==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/question", "name": "question", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-01T07:26:05Z", "updated_at": "2019-02-15T20:25:10Z", "closed_at": "2019-02-06T21:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the new (2.0 dev) version with python3, and trying to create unicode field names (in Hebrew). This fails to me, since there is explicit encoding to ascii for the field names. \r\nIn the previous version we succeed in exporting unicode field names (we did the encoding manually in our side). \r\nIf I encode the field name manually before calling record.field, then I get different error.\r\n\r\nAttached two examples. \r\n\r\n- ex.py: creating field names with unicode names\r\n- ex2.py: creating field names encoded to 'utf-8'\r\n\r\nThanks!\r\n\r\n[ex.py.gz](https://github.com/GeospatialPython/pyshp/files/1963203/ex.py.gz)\r\n[ex2.py.gz](https://github.com/GeospatialPython/pyshp/files/1963204/ex2.py.gz)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/137", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/137/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/137/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/137", "id": 308801631, "node_id": "MDU6SXNzdWUzMDg4MDE2MzE=", "number": 137, "title": "How do I concatenate two shapefiles/DBF files", "user": {"login": "mohammedayub44", "id": 7122670, "node_id": "MDQ6VXNlcjcxMjI2NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7122670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohammedayub44", "html_url": "https://github.com/mohammedayub44", "followers_url": "https://api.github.com/users/mohammedayub44/followers", "following_url": "https://api.github.com/users/mohammedayub44/following{/other_user}", "gists_url": "https://api.github.com/users/mohammedayub44/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohammedayub44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohammedayub44/subscriptions", "organizations_url": "https://api.github.com/users/mohammedayub44/orgs", "repos_url": "https://api.github.com/users/mohammedayub44/repos", "events_url": "https://api.github.com/users/mohammedayub44/events{/privacy}", "received_events_url": "https://api.github.com/users/mohammedayub44/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034542, "node_id": "MDU6TGFiZWw4NDAzNDU0Mg==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/question", "name": "question", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-27T02:40:02Z", "updated_at": "2018-06-23T20:18:05Z", "closed_at": "2018-06-23T20:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I looked through the documentation of this library. I could not find any reference to append or add records to existing shapefiles or concatenate shapefiles. etc. I'm I missing something on the Wiki page? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/136", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/136/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/136/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/136", "id": 306579755, "node_id": "MDU6SXNzdWUzMDY1Nzk3NTU=", "number": 136, "title": "Parsing of N fields", "user": {"login": "desalema70", "id": 15314755, "node_id": "MDQ6VXNlcjE1MzE0NzU1", "avatar_url": "https://avatars2.githubusercontent.com/u/15314755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/desalema70", "html_url": "https://github.com/desalema70", "followers_url": "https://api.github.com/users/desalema70/followers", "following_url": "https://api.github.com/users/desalema70/following{/other_user}", "gists_url": "https://api.github.com/users/desalema70/gists{/gist_id}", "starred_url": "https://api.github.com/users/desalema70/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/desalema70/subscriptions", "organizations_url": "https://api.github.com/users/desalema70/orgs", "repos_url": "https://api.github.com/users/desalema70/repos", "events_url": "https://api.github.com/users/desalema70/events{/privacy}", "received_events_url": "https://api.github.com/users/desalema70/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-19T18:26:56Z", "updated_at": "2018-06-23T19:43:10Z", "closed_at": "2018-06-23T19:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm using your library to extract data from shapefiles and I have the following problem: many \"N\" field values in the DBF portion of the data I'm trying to extract are nul-terminated and unfortunately followed by what looks like garbage up to the maximum field length. For instance, a field is defined as N 5.2 (8 chars), and has the value \"05.11\\0PA\": the last two characters are garbage, obviously, and trip up the parser into returning None as the field's value.\r\n\r\nI am not too familiar with the DBF format but looking at the code I see that there is some support for nul-terminated strings, where the nul is just removed (shapefile.py line 501). I wonder if it might be possible to clip the string instead, which would increase the library's tolerance to unfortunate data. The same data, by the way, is readable by a number of other (non-python) libraries, so I don't think this is likely to cause a compatibility problem. So, instead of doing this:\r\n                value = value.replace(b('\\0'), b('')).strip()\r\nI propose this:\r\n                value = value.split('\\0')[0]\r\n\r\nWould this be acceptable? I've tried it locally and it works as expected (for my use-case).\r\n\r\nBTW I use version 1.2.11, but it seems to be the same in the latest release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/135", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/135/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/135/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/135", "id": 304137528, "node_id": "MDU6SXNzdWUzMDQxMzc1Mjg=", "number": 135, "title": "MULTIPOINTZ / MULTIPOINTM Not Working Correctly", "user": {"login": "jcox-nd", "id": 26392118, "node_id": "MDQ6VXNlcjI2MzkyMTE4", "avatar_url": "https://avatars1.githubusercontent.com/u/26392118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcox-nd", "html_url": "https://github.com/jcox-nd", "followers_url": "https://api.github.com/users/jcox-nd/followers", "following_url": "https://api.github.com/users/jcox-nd/following{/other_user}", "gists_url": "https://api.github.com/users/jcox-nd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcox-nd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcox-nd/subscriptions", "organizations_url": "https://api.github.com/users/jcox-nd/orgs", "repos_url": "https://api.github.com/users/jcox-nd/repos", "events_url": "https://api.github.com/users/jcox-nd/events{/privacy}", "received_events_url": "https://api.github.com/users/jcox-nd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-11T07:37:55Z", "updated_at": "2018-06-23T16:23:07Z", "closed_at": "2018-06-23T16:23:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has anybody had success writing and viewing shapes with MULTIPOINTZ or MULTIPOINTM type?\r\n\r\nI am able to write MULTIPOINT shapes just fine, and view them without issue. However, if I change the shape type to MULTIPOINTM or MULTIPOINTZ, pyshp writes the files without error, the viewer loads the shapefile without error, but nothing is displayed. For reference, I'm also writing out a PRJ file with WGS84 coordinate system. \r\n\r\nIn principle, if I can write out data as MULTIPOINT, then if I simply change to MULTIPOINTM and supply zeros for the \"m\" value, the rendering of the data in a viewer (e.g. QGIS) should not change.\r\n\r\nIf nobody has actually tested this and confirmed it works, I think there may be a bug in how these shapes are being written out. Otherwise, maybe there is something I'm not aware of.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/133", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/133/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/133/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/133", "id": 297557338, "node_id": "MDU6SXNzdWUyOTc1NTczMzg=", "number": 133, "title": "TypeError: object of type 'Reader' has no `len()`", "user": {"login": "Daniel-M", "id": 669787, "node_id": "MDQ6VXNlcjY2OTc4Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/669787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daniel-M", "html_url": "https://github.com/Daniel-M", "followers_url": "https://api.github.com/users/Daniel-M/followers", "following_url": "https://api.github.com/users/Daniel-M/following{/other_user}", "gists_url": "https://api.github.com/users/Daniel-M/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daniel-M/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daniel-M/subscriptions", "organizations_url": "https://api.github.com/users/Daniel-M/orgs", "repos_url": "https://api.github.com/users/Daniel-M/repos", "events_url": "https://api.github.com/users/Daniel-M/events{/privacy}", "received_events_url": "https://api.github.com/users/Daniel-M/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T18:53:49Z", "updated_at": "2018-02-15T22:03:00Z", "closed_at": "2018-02-15T22:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey everyone.\r\nI'm running pyshp 1.2.12 (downloaded today from PyPI) within Python 3.6.4 (and IPython 6.2.1.).\r\nApplying `len()` to a shapefile trows a `TypeError` as in the example below,\r\n\r\n```\r\nimport shapefile\r\n\r\nsf  = shapefile.Reader(\"shp/shpfile.shp\")\r\nprint(len(sf))\r\nTypeError: object of type 'Reader' has no len()\r\n```\r\n\r\nAlso tried loading the shapefile as a Python file descriptor as,\r\n\r\n```\r\nimport shapefile\r\n\r\nshpfile = open(\"shp/shpfile.shp\",\"rb\")\r\nsf  = shapefile.Reader(shp=shpfile)\r\nprint(len(sf))\r\nTypeError: object of type 'Reader' has no len()\r\n```\r\nDid I do something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/130", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/130/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/130/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/130", "id": 282471231, "node_id": "MDU6SXNzdWUyODI0NzEyMzE=", "number": 130, "title": "POINT shapefiles require dataset extent to be drawn in 2.0.0-dev", "user": {"login": "pstatix", "id": 34577905, "node_id": "MDQ6VXNlcjM0NTc3OTA1", "avatar_url": "https://avatars1.githubusercontent.com/u/34577905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pstatix", "html_url": "https://github.com/pstatix", "followers_url": "https://api.github.com/users/pstatix/followers", "following_url": "https://api.github.com/users/pstatix/following{/other_user}", "gists_url": "https://api.github.com/users/pstatix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pstatix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pstatix/subscriptions", "organizations_url": "https://api.github.com/users/pstatix/orgs", "repos_url": "https://api.github.com/users/pstatix/repos", "events_url": "https://api.github.com/users/pstatix/events{/privacy}", "received_events_url": "https://api.github.com/users/pstatix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-15T15:58:56Z", "updated_at": "2018-06-23T17:05:47Z", "closed_at": "2018-06-23T17:02:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a POINT shapefile, the `__shapefileHeader()` method is supplying the file header with a unpacked `*self.bbox()` of `0, 0, 0, 0`. What this results in is geometry that has no spatial index. This occurs due to the `self.__bbox()` method never getting called for shapes of type `1` in the `__shpRecord()` method. The `Writer` instance has a `self._bbox` initialized to `[0, 0, 0, 0]` and without calling it ever again, the `save()` method will ultimately try and pack the extent of a point in the file header with a bounding box as `0, 0, 0, 0`. ArcGIS is unable to plot points since no extent is provided, only when another file with an extent is loaded will the points display.\r\n\r\nTo resolve this (temporarily on a local copy) I've done the following:\r\n\r\n    def point(self, x, y, z=0, m=0, shapeType=POINT):\r\n        \"\"\"Creates a point shape.\"\"\"\r\n        pointShape = Shape(shapeType)\r\n        if shapeType == POINT:\r\n            pointShape.points.append([x, y])\r\n        elif shapeType == POINTZ:\r\n            pointShape.points.append([x, y, z])\r\n        elif shapeType == POINTM:\r\n            pointShape.points.append([x, y, z, m])\r\n        self.shape(pointShape)\r\n        _ = self.__bbox(pointShape) # catch a throw-away return\r\n\r\nAll it does is force the global `self._bbox` to update to the extent of the provided points. Since the new implementation of the `self.__bbox()` method updates by comparing the initial `self._bbox()` to the supplied point, the minimum x & y will always be 0 0. For example, if I added a `print()` inside the `__shpRecord()` method when packing the bounding box:\r\n\r\n    w = shapefile.Writer(1, True)\r\n    w.field('Point')\r\n    w.record('First')\r\n    w.record('Second')\r\n    w.point(1.0, 2.0)\r\n    w.point(3.0, 4.0)\r\n    w.save('/some/path')\r\n    >>> 0 0 3.0 4.0 # when the 'saveShp()' method calls\r\n    >>> 0 0 3.0 4.0 # when the 'saveShx()' method calls\r\n\r\nSo in summary, a redesign of how the `self.__bbox()` method is called when dealing with POINTs needs to be performed so that proper extent is written.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/129", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/129/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/129/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/129", "id": 277188029, "node_id": "MDU6SXNzdWUyNzcxODgwMjk=", "number": 129, "title": "Type Error using shapefile.Writer", "user": {"login": "mkatychev", "id": 11223234, "node_id": "MDQ6VXNlcjExMjIzMjM0", "avatar_url": "https://avatars0.githubusercontent.com/u/11223234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkatychev", "html_url": "https://github.com/mkatychev", "followers_url": "https://api.github.com/users/mkatychev/followers", "following_url": "https://api.github.com/users/mkatychev/following{/other_user}", "gists_url": "https://api.github.com/users/mkatychev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkatychev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkatychev/subscriptions", "organizations_url": "https://api.github.com/users/mkatychev/orgs", "repos_url": "https://api.github.com/users/mkatychev/repos", "events_url": "https://api.github.com/users/mkatychev/events{/privacy}", "received_events_url": "https://api.github.com/users/mkatychev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-27T22:13:31Z", "updated_at": "2018-03-27T17:08:36Z", "closed_at": "2017-11-27T22:26:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest documentation and the newest version( 1.2.12) I get an issue almost identical to [an earlier one](https://github.com/GeospatialPython/pyshp/issues/100) where I get a TypeError traceback.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/indoorgeo/Documents/shptester.py\", line 19, in <module>\r\n    w.shape(shaperec.shape)\r\n  File \"/Library/Python/2.7/site-packages/shapefile.py\", line 1086, in shape\r\n    return self._shapes[i]\r\nTypeError: object cannot be interpreted as an index\r\n```\r\n\r\nHere is the code to reproduce it ( I tried to follow the doucmentation as closely as possible):\r\n\r\n```\r\nimport shapefile\r\n\r\nw = shapefile.Writer(shapeType=5)\r\n# create two shapefile records/shape objects\r\nw.field('name', 'C')\r\nw.poly(parts=[[[122,37,4,9], [117,36,3,4]], [[115,32,8,8],\r\n    [118,20,6,4], [113,24]]])\r\nw.record('poly1')\r\nw.poly(parts=[[[123,37,4,9], [112,36,3,4]], [[112,32,8,8],\r\n    [118,20,6,4], [115,24]]])\r\nw.record('poly2')\r\nw.save('/Users/baseuser/Desktop/script_test/test')\r\n\r\nr = shapefile.Reader('/Users/baseuser/Desktop/script_test/test')\r\n\r\n# create new writer object\r\nw = shapefile.Writer(shapeType=r.shapeType)\r\n\r\n# ignore deletion field\r\nw.fields = r.fields[1:]\r\n\r\nfor shaperec in r.iterShapeRecords():\r\n    w.record(*shaperec.record)\r\n    w.shape(shaperec.shape)\r\n\r\n```\r\n\r\nany help is appreciated", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/127", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/127/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/127/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/127", "id": 273105727, "node_id": "MDU6SXNzdWUyNzMxMDU3Mjc=", "number": 127, "title": "how can I write a multipoint shape?", "user": {"login": "makhand", "id": 32423308, "node_id": "MDQ6VXNlcjMyNDIzMzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/32423308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makhand", "html_url": "https://github.com/makhand", "followers_url": "https://api.github.com/users/makhand/followers", "following_url": "https://api.github.com/users/makhand/following{/other_user}", "gists_url": "https://api.github.com/users/makhand/gists{/gist_id}", "starred_url": "https://api.github.com/users/makhand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makhand/subscriptions", "organizations_url": "https://api.github.com/users/makhand/orgs", "repos_url": "https://api.github.com/users/makhand/repos", "events_url": "https://api.github.com/users/makhand/events{/privacy}", "received_events_url": "https://api.github.com/users/makhand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-11T01:47:47Z", "updated_at": "2017-11-16T22:12:57Z", "closed_at": "2017-11-16T21:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see point, line and poly, but no multipoint in the code or instructions. If I needed to write a multipoint object, how would I do this? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/126", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/126/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/126/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/126", "id": 270352232, "node_id": "MDU6SXNzdWUyNzAzNTIyMzI=", "number": 126, "title": "Support for reading standalone dbf files", "user": {"login": "gastoneb", "id": 10867940, "node_id": "MDQ6VXNlcjEwODY3OTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/10867940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gastoneb", "html_url": "https://github.com/gastoneb", "followers_url": "https://api.github.com/users/gastoneb/followers", "following_url": "https://api.github.com/users/gastoneb/following{/other_user}", "gists_url": "https://api.github.com/users/gastoneb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gastoneb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gastoneb/subscriptions", "organizations_url": "https://api.github.com/users/gastoneb/orgs", "repos_url": "https://api.github.com/users/gastoneb/repos", "events_url": "https://api.github.com/users/gastoneb/events{/privacy}", "received_events_url": "https://api.github.com/users/gastoneb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-01T15:43:52Z", "updated_at": "2018-06-23T18:33:02Z", "closed_at": "2018-06-23T18:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to load a standalone dbf file (i.e. there is no *.shp file, just the table). However, the Reader.load() function requires that both the dbf and shp files exist. Can we change the \"and\" on line 376 to \"or\" in the next release?\r\n\r\n```\r\nif not (self.shp and self.dbf):\r\n    raise ShapefileException(\"Unable to open %s.dbf or %s.shp.\" % (shapeName, shapeName) )\r\n```\r\n    \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/123", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/123/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/123/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/123", "id": 265757129, "node_id": "MDU6SXNzdWUyNjU3NTcxMjk=", "number": 123, "title": "Problem with 'C' field and `None` values", "user": {"login": "megies", "id": 1842780, "node_id": "MDQ6VXNlcjE4NDI3ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1842780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megies", "html_url": "https://github.com/megies", "followers_url": "https://api.github.com/users/megies/followers", "following_url": "https://api.github.com/users/megies/following{/other_user}", "gists_url": "https://api.github.com/users/megies/gists{/gist_id}", "starred_url": "https://api.github.com/users/megies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megies/subscriptions", "organizations_url": "https://api.github.com/users/megies/orgs", "repos_url": "https://api.github.com/users/megies/repos", "events_url": "https://api.github.com/users/megies/events{/privacy}", "received_events_url": "https://api.github.com/users/megies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T12:46:24Z", "updated_at": "2018-06-23T19:31:43Z", "closed_at": "2018-06-23T19:31:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/GeospatialPython/pyshp/commit/add32d139eea92a7057d4de3c9976b27394a0e00#commitcomment-25005900\r\n\r\nTests should be really set up as proper unit tests to avoid breaking things..\r\n\r\nCC @karimbahgat", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/121", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/121/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/121/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/121", "id": 265557419, "node_id": "MDU6SXNzdWUyNjU1NTc0MTk=", "number": 121, "title": "WindowsError: The process cannot access the file because it is being used by another process", "user": {"login": "megies", "id": 1842780, "node_id": "MDQ6VXNlcjE4NDI3ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1842780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megies", "html_url": "https://github.com/megies", "followers_url": "https://api.github.com/users/megies/followers", "following_url": "https://api.github.com/users/megies/following{/other_user}", "gists_url": "https://api.github.com/users/megies/gists{/gist_id}", "starred_url": "https://api.github.com/users/megies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megies/subscriptions", "organizations_url": "https://api.github.com/users/megies/orgs", "repos_url": "https://api.github.com/users/megies/repos", "events_url": "https://api.github.com/users/megies/events{/privacy}", "received_events_url": "https://api.github.com/users/megies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-15T09:15:32Z", "updated_at": "2018-06-06T14:56:15Z", "closed_at": "2018-06-06T14:56:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In appveyor, I'm having trouble deleting `.dbf` files that were written by a `shapefile.Writer` and subsequently read again by a `shapefile.Reader` (to check contents were written correctly). \r\nI'm getting the following error: `WindowsError: [Error 32] The process cannot access the file because it is being used by another process: u'c:\\\\users\\\\appveyor\\\\appdata\\\\local\\\\temp\\\\1\\\\obspy-ogjwjz\\\\inventory.dbf'` on a `os.remove(filename)` call: See https://ci.appveyor.com/project/obspy/obspy/build/1.0.5339-master/job/ox2tu1p3xry0kkx4#L573\r\n\r\nI suspect the `Reader` is likely to blame, but even a manual `reader_instance.close()` call did not make this error go away.\r\n\r\nHave you seen something like the above before?\r\n\r\nSee obspy/obspy#1933.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/118", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/118/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/118/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/118", "id": 261265296, "node_id": "MDU6SXNzdWUyNjEyNjUyOTY=", "number": 118, "title": "2.0.dev bbox extent", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T10:14:24Z", "updated_at": "2018-06-23T16:55:47Z", "closed_at": "2018-06-23T16:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Creating output shapefile I am noticing one corner of the bbox set to 0.0, 0.0 when there is no data near that location. reviewing the __box call, the final line bbox = [min....) shows correct bbox values, however the next line, self._bbox is returning 0.0, 0.0, ..... \r\n\r\nso in the final line of __box is part of the issue, self._bbox[0] is 0, should these values be initialized to different values?\r\n\r\nThis code section changed from version 1.0.\r\n\r\nIf I set the following in Writer::__init__ i get the correct behavior\r\n`self._bbox=[180,90,-180,-90]`\r\n\r\nI am wondering if negative value points are in the test cases?\r\n\r\nTesting point,lines,polygons with GDAL all created the proper bounding box.\r\nshapefile.py test results do not. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/117", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/117/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/117/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/117", "id": 260020953, "node_id": "MDU6SXNzdWUyNjAwMjA5NTM=", "number": 117, "title": "Reader fails if file extension is uppercase", "user": {"login": "erickskb", "id": 7025746, "node_id": "MDQ6VXNlcjcwMjU3NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7025746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickskb", "html_url": "https://github.com/erickskb", "followers_url": "https://api.github.com/users/erickskb/followers", "following_url": "https://api.github.com/users/erickskb/following{/other_user}", "gists_url": "https://api.github.com/users/erickskb/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickskb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickskb/subscriptions", "organizations_url": "https://api.github.com/users/erickskb/orgs", "repos_url": "https://api.github.com/users/erickskb/repos", "events_url": "https://api.github.com/users/erickskb/events{/privacy}", "received_events_url": "https://api.github.com/users/erickskb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-23T16:52:03Z", "updated_at": "2018-06-23T18:30:35Z", "closed_at": "2018-06-23T18:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into an issue where I receive a shapefile from an external system where the filename and extension is all uppercase. (/SHAPEFILE.SHP) the load function in the Reader class failed to read the file, because it is appending .shp, .shx, .dbf to /SHAPEFILE and attempting to open the file, this throws an IOError because the open function is case sensitive and /SHAPEFILE.shp does not exist. Instead of having to re-save the file with a lowercase extension, I think pyshp should support this.\r\n\r\nI've created a pull request with a fix:\r\nhttps://github.com/GeospatialPython/pyshp/pull/116", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/115", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/115/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/115/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/115", "id": 256435251, "node_id": "MDU6SXNzdWUyNTY0MzUyNTE=", "number": 115, "title": "Shapetype code to name", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-09T12:12:35Z", "updated_at": "2018-06-23T18:22:26Z", "closed_at": "2018-06-23T18:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a shapeType to name function or attribute? I did not see one.\r\n\r\n.shapeType\r\n.shapeTypeName ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/113", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/113/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/113/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/113", "id": 252568944, "node_id": "MDU6SXNzdWUyNTI1Njg5NDQ=", "number": 113, "title": "2.0.0-dev ? .records", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-08-24T11:16:01Z", "updated_at": "2018-06-23T16:58:15Z", "closed_at": "2018-06-23T16:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears this attribute is no longer available.\r\n\r\n\r\n```\r\ncreate__outputs\r\n    if len(ws.records)>0:\r\nAttributeError: 'Writer' object has no attribute 'records'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/112", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/112/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/112/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/112", "id": 252550857, "node_id": "MDU6SXNzdWUyNTI1NTA4NTc=", "number": 112, "title": "1.2.10 vs 1.2.11", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034539, "node_id": "MDU6TGFiZWw4NDAzNDUzOQ==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-24T10:01:27Z", "updated_at": "2017-08-24T18:11:39Z", "closed_at": "2017-08-24T11:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Observing an error with 1.2.11 that does not occur with 1.2.10\r\n\r\n\r\nLook forward to any guidance, this change allows the shapefile to save \r\n```\r\nFAILS\r\n  value = format(value, \"d\")[:size].rjust(size) # caps the size if exceeds the field size\r\nSUCCEEDS\r\n  value = format(value, \"\")[:size].rjust(size) # caps the size if exceeds the field size\r\n```\r\n\r\n\r\n\r\n```\r\nfieldType,value,size prior to error: \r\nN,1.0,50\r\n```\r\n\r\n\r\n```\r\n  File \"lib\\ts.py\", line 8515, in to_shapefile\r\n    w.save(opath)\r\n  File \"C:\\g\\lib\\shapefile.py\", line 1117, in save\r\n    self.saveDbf(target)\r\n  File \"C:\\g\\lib\\shapefile.py\", line 1089, in saveDbf\r\n    self.__dbfRecords()\r\n  File \"C:\\g\\lib\\shapefile.py\", line 935, in __dbfRecords\r\n    value = format(value, \"d\")[:size].rjust(size) # caps the size if exceeds the field size\r\nValueError: Unknown format code 'd' for object of type 'float'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/109", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/109/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/109/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/109", "id": 250689679, "node_id": "MDU6SXNzdWUyNTA2ODk2Nzk=", "number": 109, "title": "Move encoding example from test.py and into README doctests", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T16:40:45Z", "updated_at": "2017-08-18T07:02:35Z", "closed_at": "2017-08-18T07:02:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/108", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/108/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/108/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/108", "id": 250297244, "node_id": "MDU6SXNzdWUyNTAyOTcyNDQ=", "number": 108, "title": "pyshp v. 1.2.11 reads non-string field values as None", "user": {"login": "martinburch", "id": 2335284, "node_id": "MDQ6VXNlcjIzMzUyODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2335284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinburch", "html_url": "https://github.com/martinburch", "followers_url": "https://api.github.com/users/martinburch/followers", "following_url": "https://api.github.com/users/martinburch/following{/other_user}", "gists_url": "https://api.github.com/users/martinburch/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinburch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinburch/subscriptions", "organizations_url": "https://api.github.com/users/martinburch/orgs", "repos_url": "https://api.github.com/users/martinburch/repos", "events_url": "https://api.github.com/users/martinburch/events{/privacy}", "received_events_url": "https://api.github.com/users/martinburch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T12:11:33Z", "updated_at": "2017-08-24T17:56:20Z", "closed_at": "2017-08-18T11:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a regression from 1.2.10, see\r\nhttps://gis.stackexchange.com/questions/252104/python-pyshp-reads-some-field-values-as-none?noredirect=1#comment396899_252104\r\n\r\n> Reading the records of AL082017_pts.shp in a recent hurricane path file with pyshp results in a lot of None.\r\n>\r\n> Here's the first record:\r\n>\r\n> sf = shapefile.Reader('AL082017_pts.shp')\r\n> print sf.record(0)\r\n> Output:\r\n> \r\n> ['GENESIS014', None, None, '08', None, '0600', None, 'al', None, 'DB', None, None, None, None]\r\n> The correct field values, as can be seen in the dbf, are:\r\n> \r\n> GENESIS014  2017080206  2017    08  2   0600    1012    al  8   DB  20  0   9.5 -13", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/104", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/104/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/104/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/104", "id": 244909498, "node_id": "MDU6SXNzdWUyNDQ5MDk0OTg=", "number": 104, "title": "Shapefiles encoded in Latin-1 return a mixture of str and (not decoded) bytes", "user": {"login": "ignamv", "id": 408363, "node_id": "MDQ6VXNlcjQwODM2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/408363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignamv", "html_url": "https://github.com/ignamv", "followers_url": "https://api.github.com/users/ignamv/followers", "following_url": "https://api.github.com/users/ignamv/following{/other_user}", "gists_url": "https://api.github.com/users/ignamv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignamv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignamv/subscriptions", "organizations_url": "https://api.github.com/users/ignamv/orgs", "repos_url": "https://api.github.com/users/ignamv/repos", "events_url": "https://api.github.com/users/ignamv/events{/privacy}", "received_events_url": "https://api.github.com/users/ignamv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-23T13:13:06Z", "updated_at": "2017-08-18T13:32:59Z", "closed_at": "2017-08-16T16:30:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. If I load the [Buenos Aires streets shapefile](https://data.buenosaires.gob.ar/dataset/calles) with `pyshp`, the records with accented letters are returned without decoding (as bytes). This is because of an [attempt to decode as UTF-8 which ignores exceptions](https://github.com/GeospatialPython/pyshp/blob/31c3a2bd0b3a1b812db95928a8a35ef7064eff3d/shapefile.py#L85). I have a simple fix by adding an optional \"encoding\" argument in the Reader constructor. This allows the Reader to correctly process both my shapefile and the one which motivated the faulty try/except block.\r\n\r\nWould it be OK if I added a unittest-based test for this? Or would you prefer a more backwards-compatible way?\r\n\r\nThanks\r\nIgnacio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/102", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/102/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/102/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/102", "id": 241611120, "node_id": "MDU6SXNzdWUyNDE2MTExMjA=", "number": 102, "title": "Writing POINTZ does not work correctly", "user": {"login": "domlysz", "id": 5639024, "node_id": "MDQ6VXNlcjU2MzkwMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5639024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domlysz", "html_url": "https://github.com/domlysz", "followers_url": "https://api.github.com/users/domlysz/followers", "following_url": "https://api.github.com/users/domlysz/following{/other_user}", "gists_url": "https://api.github.com/users/domlysz/gists{/gist_id}", "starred_url": "https://api.github.com/users/domlysz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domlysz/subscriptions", "organizations_url": "https://api.github.com/users/domlysz/orgs", "repos_url": "https://api.github.com/users/domlysz/repos", "events_url": "https://api.github.com/users/domlysz/events{/privacy}", "received_events_url": "https://api.github.com/users/domlysz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 973392451, "node_id": "MDU6TGFiZWw5NzMzOTI0NTE=", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/Investigate", "name": "Investigate", "color": "fbca04", "default": false, "description": "Needs to be looked at more closely"}], "state": "closed", "locked": false, "assignee": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-07-10T06:24:02Z", "updated_at": "2018-07-01T07:23:10Z", "closed_at": "2018-06-28T21:28:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nbelow the test code\r\n\r\n```python\r\nfrom shapefile import Writer as shpWriter, Reader as shpReader\r\nfrom shapefile import POINTZ, POLYLINEZ, POLYGONZ\r\n\r\nimport os\r\nfolder = os.path.dirname(os.path.abspath(__file__))\r\n\r\noutShp = shpWriter(POINTZ)\r\noutShp.field('id','N','10')\r\noutShp.point(10, 10, 10)\r\noutShp.record(0)\r\noutPath = folder + os.sep + 'out.shp'\r\noutShp.save(outPath)\r\n\r\nshp = shpReader(outPath)\r\nshape = shp.shapes()[0]\r\nxy = shape.points[0]\r\nz = shape.z[0]\r\nprint(xy, z)\r\n```\r\n\r\nwork correctly with pyshp 1.2.3 but raise an error with v 1.2.11\r\n\r\nAttributeError: _Shape instance has no attribute 'z'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/100", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/100/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/100/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/100", "id": 238228637, "node_id": "MDU6SXNzdWUyMzgyMjg2Mzc=", "number": 100, "title": "Copy shape object from ShapeRecord", "user": {"login": "abanduch", "id": 17747703, "node_id": "MDQ6VXNlcjE3NzQ3NzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/17747703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abanduch", "html_url": "https://github.com/abanduch", "followers_url": "https://api.github.com/users/abanduch/followers", "following_url": "https://api.github.com/users/abanduch/following{/other_user}", "gists_url": "https://api.github.com/users/abanduch/gists{/gist_id}", "starred_url": "https://api.github.com/users/abanduch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abanduch/subscriptions", "organizations_url": "https://api.github.com/users/abanduch/orgs", "repos_url": "https://api.github.com/users/abanduch/repos", "events_url": "https://api.github.com/users/abanduch/events{/privacy}", "received_events_url": "https://api.github.com/users/abanduch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-23T19:07:50Z", "updated_at": "2017-08-16T00:04:23Z", "closed_at": "2017-08-16T00:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "> `r = shapefile.Reader(r'\\...local\\share\\cartopy\\shapefiles\\natural_earth\\cultural\\10m_admin_1_states_provinces')\r\n> \r\n> w = shapefile.Writer()\r\n> w.fields = r.fields[1:] # skip first deletion field\r\n> \r\n> for shaperec in r.iterShapeRecords():\r\n>     #if shapeRec.record[8] == 'California':\r\n>     w.record(*shaperec.record)\r\n>     w.shape(shaperec.shape)\r\n> \r\n> w.save('shapefile/cal/test')`\r\n\r\nwhen trying to  use the above code from the docs, i get the following error:\r\n\r\n> `---------------------------------------------------------------------------\r\n> TypeError                                 Traceback (most recent call last)\r\n> <ipython-input-56-698c68f146ae> in <module>()\r\n>       7     #if shapeRec.record[8] == 'California':\r\n>       8     w.record(*shaperec.record)\r\n> ----> 9     w.shape(shaperec.shape)\r\n>      10 \r\n>      11 w.save('shapefile/cal/test')\r\n> \r\n> C:\\Program Files\\Anaconda3\\lib\\site-packages\\shapefile.py in shape(self, i)\r\n>    1053 \r\n>    1054     def shape(self, i):\r\n> -> 1055         return self._shapes[i]\r\n>    1056 \r\n>    1057     def shapes(self):\r\n> \r\n> TypeError: list indices must be integers or slices, not _Shape\r\n> `\r\n\r\nMy goal here is to copy only a portion of an existing shapefile to a new one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/99", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/99/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/99/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/99", "id": 236967389, "node_id": "MDU6SXNzdWUyMzY5NjczODk=", "number": 99, "title": "Unknown format code 'd' for object of type 'float'", "user": {"login": "etiennethomassen", "id": 1319600, "node_id": "MDQ6VXNlcjEzMTk2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1319600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etiennethomassen", "html_url": "https://github.com/etiennethomassen", "followers_url": "https://api.github.com/users/etiennethomassen/followers", "following_url": "https://api.github.com/users/etiennethomassen/following{/other_user}", "gists_url": "https://api.github.com/users/etiennethomassen/gists{/gist_id}", "starred_url": "https://api.github.com/users/etiennethomassen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etiennethomassen/subscriptions", "organizations_url": "https://api.github.com/users/etiennethomassen/orgs", "repos_url": "https://api.github.com/users/etiennethomassen/repos", "events_url": "https://api.github.com/users/etiennethomassen/events{/privacy}", "received_events_url": "https://api.github.com/users/etiennethomassen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034541, "node_id": "MDU6TGFiZWw4NDAzNDU0MQ==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-19T17:42:57Z", "updated_at": "2017-08-29T08:11:22Z", "closed_at": "2017-08-18T08:10:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Updating pyshp from 1.2.0 tot 1.2.11 results in the following error when trying to write a shapefile: ValueError:Unknown format code 'd' for object of type 'float'\r\n\r\n```\r\npython3.6/site-packages/shapefile.py in __dbfRecords\r\n935.  value = format(value, \"d\")[:size].rjust(size) # caps the size if exceeds the field size\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/91", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/91/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/91/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/91", "id": 223877499, "node_id": "MDU6SXNzdWUyMjM4Nzc0OTk=", "number": 91, "title": " unpack requires a bytes object of length 32 error", "user": {"login": "achapkowski", "id": 5131271, "node_id": "MDQ6VXNlcjUxMzEyNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achapkowski", "html_url": "https://github.com/achapkowski", "followers_url": "https://api.github.com/users/achapkowski/followers", "following_url": "https://api.github.com/users/achapkowski/following{/other_user}", "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions", "organizations_url": "https://api.github.com/users/achapkowski/orgs", "repos_url": "https://api.github.com/users/achapkowski/repos", "events_url": "https://api.github.com/users/achapkowski/events{/privacy}", "received_events_url": "https://api.github.com/users/achapkowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-24T16:29:00Z", "updated_at": "2017-04-29T21:31:10Z", "closed_at": "2017-04-27T07:55:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen I do the following:\r\n\r\n```\r\nshp = r\"D:\\data\\dummytest.shp\"\r\nreader = shapefile.Reader(shp)\r\nprint(reader.fields)\r\n\r\n```\r\n\r\nThe following error occurs:\r\n\r\n```struct.error: unpack requires a bytes object of length 32```\r\n\r\nThis error occurs in ```__dbfHeader(self)```.\r\n\r\nIn addition, it appears that the package is also returning the incorrect number of fields.  There are 8 non spatial columns and it says there are 7.  I think it might be due to the fact that the shapefile has FID before the SPATIAL column, but it's only a guess.  The shapefile is empty (no records) and it was created using ArcGIS Desktop.\r\n\r\nI'm using v1.2.10 with python 3.4.  Attached is the offending shapefile.\r\n\r\n[dummytest.zip](https://github.com/GeospatialPython/pyshp/files/952423/dummytest.zip)\r\n\r\n\r\n**Update**\r\nIt appears that if there are no records in the shapefile, the error will occur, but if you add a record, it will not throw this error.  Hope this helps!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/90", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/90/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/90/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/90", "id": 223445401, "node_id": "MDU6SXNzdWUyMjM0NDU0MDE=", "number": 90, "title": "Fields don't align to record values", "user": {"login": "achapkowski", "id": 5131271, "node_id": "MDQ6VXNlcjUxMzEyNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achapkowski", "html_url": "https://github.com/achapkowski", "followers_url": "https://api.github.com/users/achapkowski/followers", "following_url": "https://api.github.com/users/achapkowski/following{/other_user}", "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions", "organizations_url": "https://api.github.com/users/achapkowski/orgs", "repos_url": "https://api.github.com/users/achapkowski/repos", "events_url": "https://api.github.com/users/achapkowski/events{/privacy}", "received_events_url": "https://api.github.com/users/achapkowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-21T17:19:08Z", "updated_at": "2017-04-24T09:57:29Z", "closed_at": "2017-04-24T09:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI have a simple example:\r\n\r\n        reader = shapefile.Reader(filename)\r\n        fields = [field[0] for field in reader.fields]\r\n        for r in reader.iterShapeRecords():\r\n            print(dict(zip(fields, r.records)))\r\n            break\r\n        del reader\r\n\r\nThe records are not aligning up to the field names.  Is there a way to ensure field values match up field names?\r\n\r\nFor example, I have a STATE_FIPS field, it should be numeric value, but it's a string value.  \r\n\r\nWhat is the proper way to do this?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/89", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/89/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/89/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/89", "id": 222266015, "node_id": "MDU6SXNzdWUyMjIyNjYwMTU=", "number": 89, "title": "Handle correct size of e+ values", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-18T00:15:38Z", "updated_at": "2017-04-29T09:41:59Z", "closed_at": "2017-04-29T09:41:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "One thing that is still an issue with saving numeric values is that really small or really big numbers will be represented as an \"e+\" or \"e-\" type string when PyShp converts it to string before writing. This can cause the value to be larger than the allowed field length and/or raise an exception due to value length being different than the expected struct pack length. \r\n\r\nSolution to this should be to put the value through `format(value, \"formatlength\")` instead of str(value). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/88", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/88/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/88/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/88", "id": 222265034, "node_id": "MDU6SXNzdWUyMjIyNjUwMzQ=", "number": 88, "title": "Check that all shapes are of same type", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-18T00:08:23Z", "updated_at": "2018-06-28T21:31:51Z", "closed_at": "2018-06-28T21:31:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "One requirement of shapefiles is that they contain only shapes of the same type. As of right now PyShp does not try to check or ensure this, making it easy to create invalid shapefiles. The closest thing is it occasionally tries to (silently) force shape types to the type of the shapefile, but this can backfire and lead to unexpected shape contents (eg doing `writer.point(...)` on a Polygon shapefile). \r\n\r\nI suggest dropping the silent type forcings, and instead check and raise informative exceptions. Null geometries would ofcourse have to be allowed mixed in. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/83", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/83/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/83/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/83", "id": 213808971, "node_id": "MDU6SXNzdWUyMTM4MDg5NzE=", "number": 83, "title": "Shapefilepy fails to open a shapefile that has zero records.", "user": {"login": "jesegal", "id": 11397047, "node_id": "MDQ6VXNlcjExMzk3MDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/11397047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesegal", "html_url": "https://github.com/jesegal", "followers_url": "https://api.github.com/users/jesegal/followers", "following_url": "https://api.github.com/users/jesegal/following{/other_user}", "gists_url": "https://api.github.com/users/jesegal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesegal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesegal/subscriptions", "organizations_url": "https://api.github.com/users/jesegal/orgs", "repos_url": "https://api.github.com/users/jesegal/repos", "events_url": "https://api.github.com/users/jesegal/events{/privacy}", "received_events_url": "https://api.github.com/users/jesegal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-13T15:45:56Z", "updated_at": "2017-04-17T20:30:04Z", "closed_at": "2017-04-17T20:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error when opening a shapefile that has zero records.\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Python27\\ArcGIS10.3\\lib\\site-packages\\shapefile.py\", line 234, in __init__\r\n    self.load(args[0])\r\n  File \"C:\\Python27\\ArcGIS10.3\\lib\\site-packages\\shapefile.py\", line 279, in load\r\n    self.__dbfHeader()\r\n  File \"C:\\Python27\\ArcGIS10.3\\lib\\site-packages\\shapefile.py\", line 476, in __dbfHeader\r\n    fmt,fmtSize = self.__recordFmt()\r\n  File \"C:\\Python27\\ArcGIS10.3\\lib\\site-packages\\shapefile.py\", line 482, in __recordFmt\r\n    self.__dbfHeader()\r\n  File \"C:\\Python27\\ArcGIS10.3\\lib\\site-packages\\shapefile.py\", line 460, in __dbfHeader\r\n    fieldDesc = list(unpack(\"<11sc4xBB14x\", dbf.read(32)))\r\nerror: unpack requires a string argument of length 32\r\n\r\n>>> shapefile.__version__\r\n'1.2.10'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/78", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/78/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/78/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/78", "id": 208296888, "node_id": "MDU6SXNzdWUyMDgyOTY4ODg=", "number": 78, "title": "exception when opening .shp/.dbf with no records", "user": {"login": "cwalv", "id": 887222, "node_id": "MDQ6VXNlcjg4NzIyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/887222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwalv", "html_url": "https://github.com/cwalv", "followers_url": "https://api.github.com/users/cwalv/followers", "following_url": "https://api.github.com/users/cwalv/following{/other_user}", "gists_url": "https://api.github.com/users/cwalv/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwalv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwalv/subscriptions", "organizations_url": "https://api.github.com/users/cwalv/orgs", "repos_url": "https://api.github.com/users/cwalv/repos", "events_url": "https://api.github.com/users/cwalv/events{/privacy}", "received_events_url": "https://api.github.com/users/cwalv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-17T00:45:02Z", "updated_at": "2017-02-19T21:28:19Z", "closed_at": "2017-02-19T21:28:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you try to open a `.dbf` or `.shp` file with zero records, you get an exception:\r\n\r\n```python\r\nerrorTraceback (most recent call last)\r\n<ipython-input-2-d2d34bc0c430> in <module>()\r\n      1 d = r'C:\\Temp\\shp_create_test'\r\n----> 2 sf = shapefile.Reader(p.join(d, \"prec_test.dbf\"))\r\n\r\ns:\\source\\git\\pyshp\\shapefile.py in __init__(self, *args, **kwargs)\r\n    235         if len(args) > 0:\r\n    236             if is_string(args[0]):\r\n--> 237                 self.load(args[0])\r\n    238                 return\r\n    239         if \"shp\" in kwargs.keys():\r\n\r\ns:\\source\\git\\pyshp\\shapefile.py in load(self, shapefile)\r\n    281             self.__shpHeader()\r\n    282         if self.dbf:\r\n--> 283             self.__dbfHeader()\r\n    284 \r\n    285     def __getFileObj(self, f):\r\n\r\ns:\\source\\git\\pyshp\\shapefile.py in __dbfHeader(self)\r\n    478             raise ShapefileException(\"Shapefile dbf header lacks expected terminator. (likely corrupt?)\")\r\n    479         self.fields.insert(0, ('DeletionFlag', 'C', 1, 0))\r\n--> 480         fmt,fmtSize = self.__recordFmt()\r\n    481         self.__recStruct = Struct(fmt)\r\n    482 \r\n\r\ns:\\source\\git\\pyshp\\shapefile.py in __recordFmt(self)\r\n    484         \"\"\"Calculates the format and size of a .dbf record.\"\"\"\r\n    485         if not self.numRecords:\r\n--> 486             self.__dbfHeader()\r\n    487         fmt = ''.join(['%ds' % fieldinfo[2] for fieldinfo in self.fields])\r\n    488         fmtSize = calcsize(fmt)\r\n\r\ns:\\source\\git\\pyshp\\shapefile.py in __dbfHeader(self)\r\n    462         numFields = (headerLength - 33) // 32\r\n    463         for field in range(numFields):\r\n--> 464             fieldDesc = list(unpack(\"<11sc4xBB14x\", dbf.read(32)))\r\n    465             name = 0\r\n    466             idx = 0\r\n\r\nerror: unpack requires a string argument of length 32\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/76", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/76/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/76/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/76", "id": 202135823, "node_id": "MDU6SXNzdWUyMDIxMzU4MjM=", "number": 76, "title": "Bbox error when saving null geometries", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-20T13:05:37Z", "updated_at": "2017-04-17T09:47:00Z", "closed_at": "2017-04-17T09:47:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Surprised this hasn't been reported earlier, but saving shapefiles containing at least one null geometry results in error (though maybe related to #22?). This because the method to calculate the bbox for the entire file attempts to use coordinate information for all shapes, but null shapes don't have coordinates:\r\n\r\n```\r\n  File \"C:\\Python27\\lib\\site-packages\\shapefile.py\", line 717, in bbox\r\n    return self.__bbox(self._shapes)\r\n  File \"C:\\Python27\\lib\\site-packages\\shapefile.py\", line 687, in __bbox\r\n    px, py = list(zip(*s.points))[:2]\r\nValueError: need more than 0 values to unpack\r\n```\r\n\r\nThe bbox method looks like this:\r\n\r\n    def __bbox(self, shapes, shapeTypes=[]):\r\n        x = []\r\n        y = []\r\n        for s in shapes:\r\n            shapeType = self.shapeType\r\n            if shapeTypes:\r\n                shapeType = shapeTypes[shapes.index(s)]\r\n            px, py = list(zip(*s.points))[:2]\r\n            x.extend(px)\r\n            y.extend(py)\r\n        return [min(x), min(y), max(x), max(y)]\r\n\r\nShould be fairly easy to fix, by simply skipping each shape of type NULL. The shapeTypes arg also seems not to be unused and unnecessary, and can besides be accessed directly from each shape object via `s.shapeType`. Throwing together a PR at a later point. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/75", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/75/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/75/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/75", "id": 194765645, "node_id": "MDU6SXNzdWUxOTQ3NjU2NDU=", "number": 75, "title": "Bounding box : required argument is not a float.", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-10T12:49:43Z", "updated_at": "2016-12-10T12:56:02Z", "closed_at": "2016-12-10T12:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n__shapefileHeader\r\n\r\n(Pdb) self.bbox()\r\n[(27.832608133201113, 9.795471641760086), (27.83407345224767, 9.792505897009239), (28.999435663405407, 10.166337714425078), (29.00016322567532, 10.166267648796262)]\r\n\r\n(Pdb) pack(\"<4d\", *self.bbox())\r\n*** struct.error: required argument is not a float", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/73", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/73/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/73/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/73", "id": 179203947, "node_id": "MDU6SXNzdWUxNzkyMDM5NDc=", "number": 73, "title": "More on supported field types in README", "user": {"login": "karimbahgat", "id": 6413369, "node_id": "MDQ6VXNlcjY0MTMzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6413369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimbahgat", "html_url": "https://github.com/karimbahgat", "followers_url": "https://api.github.com/users/karimbahgat/followers", "following_url": "https://api.github.com/users/karimbahgat/following{/other_user}", "gists_url": "https://api.github.com/users/karimbahgat/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimbahgat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimbahgat/subscriptions", "organizations_url": "https://api.github.com/users/karimbahgat/orgs", "repos_url": "https://api.github.com/users/karimbahgat/repos", "events_url": "https://api.github.com/users/karimbahgat/events{/privacy}", "received_events_url": "https://api.github.com/users/karimbahgat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-26T11:30:36Z", "updated_at": "2017-04-29T09:41:59Z", "closed_at": "2017-04-29T09:41:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently in the README there is no discussion of which field types are supported, which character code represents which type, and what values each type stores. Would be useful to add a sentence or two on that in the README. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/72", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/72/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/72/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/72", "id": 178603991, "node_id": "MDU6SXNzdWUxNzg2MDM5OTE=", "number": 72, "title": "Python MemeoryError exception on larage shapefile", "user": {"login": "mawg", "id": 2999044, "node_id": "MDQ6VXNlcjI5OTkwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2999044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mawg", "html_url": "https://github.com/mawg", "followers_url": "https://api.github.com/users/mawg/followers", "following_url": "https://api.github.com/users/mawg/following{/other_user}", "gists_url": "https://api.github.com/users/mawg/gists{/gist_id}", "starred_url": "https://api.github.com/users/mawg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mawg/subscriptions", "organizations_url": "https://api.github.com/users/mawg/orgs", "repos_url": "https://api.github.com/users/mawg/repos", "events_url": "https://api.github.com/users/mawg/events{/privacy}", "received_events_url": "https://api.github.com/users/mawg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-22T13:02:41Z", "updated_at": "2016-09-22T22:06:37Z", "closed_at": "2016-09-22T13:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Update] please ignor/deletee this. I was running a 32 bit versoin of Python, which can only address 2gB of RAM.\n\n---\n\nI am new to Pyshp (but not to Python) and am staring big by getting my dataset from http://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/GMTED_Metadata/GMTED2010_Spatial_Metadata.zip\n\nIt unpacks to 1.7gB, with the .shp file being 1.2gB.\n\nWith this code:\n\nimport shapefile\ndata = shapefile.Reader(\"data_file.shp\")\n\ninstantiating the Shapefile reader gives me an exception MemoryError when using Pyshp.  But I am using ony 3% of my machine's 32gB, so I don't understand it.\n\nIs there any other approach that I can take? Can process the file in chunks in Python? Or use some tool to spilt the file into chinks, then process each of them individually?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/70", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/70/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/70/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/70", "id": 173715416, "node_id": "MDU6SXNzdWUxNzM3MTU0MTY=", "number": 70, "title": "setup.py still refers to README.txt", "user": {"login": "volter", "id": 1042313, "node_id": "MDQ6VXNlcjEwNDIzMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1042313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volter", "html_url": "https://github.com/volter", "followers_url": "https://api.github.com/users/volter/followers", "following_url": "https://api.github.com/users/volter/following{/other_user}", "gists_url": "https://api.github.com/users/volter/gists{/gist_id}", "starred_url": "https://api.github.com/users/volter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volter/subscriptions", "organizations_url": "https://api.github.com/users/volter/orgs", "repos_url": "https://api.github.com/users/volter/repos", "events_url": "https://api.github.com/users/volter/events{/privacy}", "received_events_url": "https://api.github.com/users/volter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-29T07:45:46Z", "updated_at": "2016-08-29T18:20:11Z", "closed_at": "2016-08-29T18:20:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suppose it should say README.md now, if you even want that in the long description.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/66", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/66/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/66/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/66", "id": 172791567, "node_id": "MDU6SXNzdWUxNzI3OTE1Njc=", "number": 66, "title": "Record Alignment Issue", "user": {"login": "micahcochran", "id": 7433104, "node_id": "MDQ6VXNlcjc0MzMxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7433104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micahcochran", "html_url": "https://github.com/micahcochran", "followers_url": "https://api.github.com/users/micahcochran/followers", "following_url": "https://api.github.com/users/micahcochran/following{/other_user}", "gists_url": "https://api.github.com/users/micahcochran/gists{/gist_id}", "starred_url": "https://api.github.com/users/micahcochran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micahcochran/subscriptions", "organizations_url": "https://api.github.com/users/micahcochran/orgs", "repos_url": "https://api.github.com/users/micahcochran/repos", "events_url": "https://api.github.com/users/micahcochran/events{/privacy}", "received_events_url": "https://api.github.com/users/micahcochran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-23T19:57:04Z", "updated_at": "2016-09-22T21:04:09Z", "closed_at": "2016-09-22T21:04:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Setup code\n\n``` Python\n>>> import shapefile\n>>> sf = shapefile.Reader(\"shapefiles/blockgroups\")\n>>> records = sf.records()\n```\n## Record Alignment issue in pyshp version 1.2.9.\n\nFrom the doctests\n\"Let's read the blockgroup key and the population for the 4th blockgroup:\"\n\n``` Python\n    >>> records[3][1:3]\n    ['060750601001', 4715]\n```\n\npyshp version 1.2.3, Python 2.7\n\n``` Python\nIn [9]: records[3][1:3]\nOut[9]: [u'060750601001', 4715]\n```\n\npyshp version 1.2.9, Python 2.7.12\n\n``` Python\nIn [15]: records[3][5:7]\nOut[15]: ('060750601001', '     4715')\n```\n\npyshp version 1.2.9, Python 3.5.2  \n(Each subsequent record has move the fields over by 1 value.)\n\n``` Python\nIn [5]: records[3][5:7]\nOut[5]: (b'060750601001', b'     4715')\n\nIn [10]: records[4][6:8]\nOut[10]: (b'060750102001', b'      473')\n\nIn [11]: records[5][7:9]\nOut[11]: (b'060750126001', b'     1137')\n```\n## The length of sf.records() has changed...\n\nThat issue could be explained by the record alignment issue.\n\nIn all versions tests this works...\n\n``` Python\n>>> sf.numRecords\n663\n```\n\npyshp 1.2.3\n\n``` Python\n>>> len(records)\n663\n```\n\npyshp 1.2.9\n\n``` Python\n>>> len(records)\n678\n```\n\nThere are a total of five (5) failing tests.  This could solve one (1) of those failing tests.\n## EDIT Additional Info:\n\nThe \"DeletionFlag\" field is being put in the output of the `records` function caused by PR #62  (@karimbahgat).   The `record` function works fine.\n\nFor instance:\npyshp 1.2.3, Python 2.7\n\n``` Python\nIn [35]: records[0][:5]\nOut[35]: [0.96761, u'060750179029', 4531, 4682.7, 970]\n```\n\npyshp 1.2.9, Python 2.7\n\n``` Python\nIn [49]: records[0][:5]\nOut[49]: (' ', '           0.96761', '060750179029', '     4531', '    4682.7')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/65", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/65/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/65/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/65", "id": 172154734, "node_id": "MDU6SXNzdWUxNzIxNTQ3MzQ=", "number": 65, "title": "README.md not included", "user": {"login": "jdhughes-usgs", "id": 2073498, "node_id": "MDQ6VXNlcjIwNzM0OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2073498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdhughes-usgs", "html_url": "https://github.com/jdhughes-usgs", "followers_url": "https://api.github.com/users/jdhughes-usgs/followers", "following_url": "https://api.github.com/users/jdhughes-usgs/following{/other_user}", "gists_url": "https://api.github.com/users/jdhughes-usgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdhughes-usgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdhughes-usgs/subscriptions", "organizations_url": "https://api.github.com/users/jdhughes-usgs/orgs", "repos_url": "https://api.github.com/users/jdhughes-usgs/repos", "events_url": "https://api.github.com/users/jdhughes-usgs/events{/privacy}", "received_events_url": "https://api.github.com/users/jdhughes-usgs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-19T15:15:23Z", "updated_at": "2016-09-25T00:48:26Z", "closed_at": "2016-09-25T00:48:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "README.md is not included in the pyshp 1.2.8 distribution on PyPI.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/63", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/63/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/63/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/63", "id": 172074958, "node_id": "MDU6SXNzdWUxNzIwNzQ5NTg=", "number": 63, "title": "Pip install of latest release is broken ", "user": {"login": "jenshnielsen", "id": 548266, "node_id": "MDQ6VXNlcjU0ODI2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenshnielsen", "html_url": "https://github.com/jenshnielsen", "followers_url": "https://api.github.com/users/jenshnielsen/followers", "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}", "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions", "organizations_url": "https://api.github.com/users/jenshnielsen/orgs", "repos_url": "https://api.github.com/users/jenshnielsen/repos", "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}", "received_events_url": "https://api.github.com/users/jenshnielsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-19T07:55:11Z", "updated_at": "2016-09-25T00:51:05Z", "closed_at": "2016-08-19T12:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n~ pip2 install --upgrade pyshp\nCollecting pyshp\n  Downloading pyshp-1.2.8.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/private/var/folders/zz/yg37r3x91_d5kkj0k8x8g0cm0000gn/T/pip-build-CZc6UF/pyshp/setup.py\", line 6, in <module>\n        long_description=open('README.md').read(),\n    IOError: [Errno 2] No such file or directory: 'README.md'\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/zz/yg37r3x91_d5kkj0k8x8g0cm0000gn/T/pip-build-CZc6UF/pyshp/\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/58", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/58/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/58/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/58", "id": 159338374, "node_id": "MDU6SXNzdWUxNTkzMzgzNzQ=", "number": 58, "title": "Bump the version number", "user": {"login": "mipuha", "id": 19832446, "node_id": "MDQ6VXNlcjE5ODMyNDQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/19832446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mipuha", "html_url": "https://github.com/mipuha", "followers_url": "https://api.github.com/users/mipuha/followers", "following_url": "https://api.github.com/users/mipuha/following{/other_user}", "gists_url": "https://api.github.com/users/mipuha/gists{/gist_id}", "starred_url": "https://api.github.com/users/mipuha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mipuha/subscriptions", "organizations_url": "https://api.github.com/users/mipuha/orgs", "repos_url": "https://api.github.com/users/mipuha/repos", "events_url": "https://api.github.com/users/mipuha/events{/privacy}", "received_events_url": "https://api.github.com/users/mipuha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-09T06:43:14Z", "updated_at": "2016-09-23T21:35:24Z", "closed_at": "2016-09-23T21:35:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since 1.2.3 there's been good fixes pulled into master, but the version remains the same. For dependency management reasons it would be great if the version was incremented to 1.2.4.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/55", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/55/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/55/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/55", "id": 150525662, "node_id": "MDU6SXNzdWUxNTA1MjU2NjI=", "number": 55, "title": "M values are not optional for shape types with Z geom", "user": {"login": "domlysz", "id": 5639024, "node_id": "MDQ6VXNlcjU2MzkwMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5639024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domlysz", "html_url": "https://github.com/domlysz", "followers_url": "https://api.github.com/users/domlysz/followers", "following_url": "https://api.github.com/users/domlysz/following{/other_user}", "gists_url": "https://api.github.com/users/domlysz/gists{/gist_id}", "starred_url": "https://api.github.com/users/domlysz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domlysz/subscriptions", "organizations_url": "https://api.github.com/users/domlysz/orgs", "repos_url": "https://api.github.com/users/domlysz/repos", "events_url": "https://api.github.com/users/domlysz/events{/privacy}", "received_events_url": "https://api.github.com/users/domlysz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 84034541, "node_id": "MDU6TGFiZWw4NDAzNDU0MQ==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-23T07:06:00Z", "updated_at": "2019-02-06T21:24:26Z", "closed_at": "2018-06-23T16:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": " According to SHP spec on wiki (https://en.wikipedia.org/wiki/Shapefile#Shapefile_shape_format_.28.shp.29), M range values are optional but pyshp always expecting them for shape types with Z geom.\n\n`\"shapefile.py\", line 357, in __shape\n    (mmin, mmax) = unpack(\"<2d\", f.read(16))\nstruct.error: unpack requires a bytes object of length 16`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/53", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/53/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/53/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/53", "id": 147237479, "node_id": "MDU6SXNzdWUxNDcyMzc0Nzk=", "number": 53, "title": "README.txt and README.md", "user": {"login": "micahcochran", "id": 7433104, "node_id": "MDQ6VXNlcjc0MzMxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7433104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micahcochran", "html_url": "https://github.com/micahcochran", "followers_url": "https://api.github.com/users/micahcochran/followers", "following_url": "https://api.github.com/users/micahcochran/following{/other_user}", "gists_url": "https://api.github.com/users/micahcochran/gists{/gist_id}", "starred_url": "https://api.github.com/users/micahcochran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micahcochran/subscriptions", "organizations_url": "https://api.github.com/users/micahcochran/orgs", "repos_url": "https://api.github.com/users/micahcochran/repos", "events_url": "https://api.github.com/users/micahcochran/events{/privacy}", "received_events_url": "https://api.github.com/users/micahcochran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-10T16:16:51Z", "updated_at": "2016-08-19T02:12:09Z", "closed_at": "2016-08-19T02:12:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Having both of these files causes confusion.  They are not kept in sync with one another.  For the most part the text version seems to have had some more extensive edits.\n\nThe Markdown version can be improved using guidance from the [CommonMark spec](http://spec.commonmark.org/) to be made more readable from a text editor.  Also, Markdown can be converted to many formats using pandoc or similar converter.\n\nThe doctest seems to work fine with the markdown version, but it does find about 25 fewer tests.\n\nIt seems like they were basically the same file on March 11, 2014.\n\nI propose removing README.txt, retargeting the doctest to use README.md, and include changes made to README.txt for inclusion to README.md.\n\nThe only issue I can see is that README.txt has release version, author, and release date.  This could be maintained in a separate file such as perhaps a RELEASE.txt file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/48", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/48/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/48/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/48", "id": 145828305, "node_id": "MDU6SXNzdWUxNDU4MjgzMDU=", "number": 48, "title": "`autoBalance = 1` does not balance", "user": {"login": "ezheidtmann", "id": 1178915, "node_id": "MDQ6VXNlcjExNzg5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1178915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezheidtmann", "html_url": "https://github.com/ezheidtmann", "followers_url": "https://api.github.com/users/ezheidtmann/followers", "following_url": "https://api.github.com/users/ezheidtmann/following{/other_user}", "gists_url": "https://api.github.com/users/ezheidtmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezheidtmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezheidtmann/subscriptions", "organizations_url": "https://api.github.com/users/ezheidtmann/orgs", "repos_url": "https://api.github.com/users/ezheidtmann/repos", "events_url": "https://api.github.com/users/ezheidtmann/events{/privacy}", "received_events_url": "https://api.github.com/users/ezheidtmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-04T23:00:28Z", "updated_at": "2016-09-24T22:13:31Z", "closed_at": "2016-09-24T22:13:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't have access to ArcMap, but a customer told me that the shapefile I made with `pyshp` had a mismatched count of shapes and records. If `len(w._shapes)` and `len(w.records)` are useful metrics before writing, I think I found a bug:\n\n``` python\nimport shapefile\nw = shapefile.Writer()\nw.shapetype = shapefile.POLYLINE\nw.autoBalance = 1\nw.field('myfield', 'C', 10, 0)\nw.poly(shapeType=shapefile.POLYLINE, parts=[[[1,2], [2,3]]])\nw.record(**{})\nassert len(w._shapes) == len(w.records) # fails for me\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/46", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/46/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/46/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/46", "id": 141334083, "node_id": "MDU6SXNzdWUxNDEzMzQwODM=", "number": 46, "title": "Add encoding='' kwarg to shapefile.Reader and shapefile.Writer", "user": {"login": "jtbraun", "id": 1192545, "node_id": "MDQ6VXNlcjExOTI1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1192545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtbraun", "html_url": "https://github.com/jtbraun", "followers_url": "https://api.github.com/users/jtbraun/followers", "following_url": "https://api.github.com/users/jtbraun/following{/other_user}", "gists_url": "https://api.github.com/users/jtbraun/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtbraun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtbraun/subscriptions", "organizations_url": "https://api.github.com/users/jtbraun/orgs", "repos_url": "https://api.github.com/users/jtbraun/repos", "events_url": "https://api.github.com/users/jtbraun/events{/privacy}", "received_events_url": "https://api.github.com/users/jtbraun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-03-16T16:54:37Z", "updated_at": "2017-04-14T14:27:58Z", "closed_at": "2017-04-14T14:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The natural earth data stores its strings encoded as Windows-1252 (versions < 3.x) or UTF-8 (>= 3.x). Currently, shapefile.py tries to guess at what it should do in the b() and u() routines.  For Python-3, utf-8 is assumed as the encoding, and for python-2, no encode or decode operations are performed.\n\nIt's my opinion that the user should be able to specify the encoding for the DBF fields as a kwarg to Reader and Writer.  If provided, b() should use that instead of utf-8 for the v.encode() operation, and it should do so for both python 2 and python 3.  Likewise, u(v) should be modified to decode in a similar manner.\n\nThis would enable cartopy (a popular mapping module with built-in support for natural earth data) to provide the encoding parameter, returning \"accurate\" data to the user, regardless of natural earth data version or python version.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/45", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/45/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/45/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/45", "id": 133628501, "node_id": "MDU6SXNzdWUxMzM2Mjg1MDE=", "number": 45, "title": "Read only speficied lat/long and plot on the basemap.", "user": {"login": "wxguy", "id": 9054645, "node_id": "MDQ6VXNlcjkwNTQ2NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9054645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxguy", "html_url": "https://github.com/wxguy", "followers_url": "https://api.github.com/users/wxguy/followers", "following_url": "https://api.github.com/users/wxguy/following{/other_user}", "gists_url": "https://api.github.com/users/wxguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxguy/subscriptions", "organizations_url": "https://api.github.com/users/wxguy/orgs", "repos_url": "https://api.github.com/users/wxguy/repos", "events_url": "https://api.github.com/users/wxguy/events{/privacy}", "received_events_url": "https://api.github.com/users/wxguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-15T05:50:16Z", "updated_at": "2016-02-15T18:01:20Z", "closed_at": "2016-02-15T14:12:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope you are aware that your `pyshp` module is the backbone of `readshapefile` function from `basemap` (matplotlib sub module). I am trying to plot some data on a basemap and using one of the NE (world) shapefile for plotting boundary. For some reason the `readshapefile` function only able to read entire shapefile instead of reading the lat/long specified in the basemap instance. This reading of shapefile takes tooo much time which eventually delays the plotting time. \n\nI have not found any solution for the problem of slow reading shpaefiles. I have raised this issue in the  `matplotlib` issue (later on it was moved to `basemap` issue tracker). The relevent issue raised is here https://github.com/matplotlib/basemap/issues/263 .\n\nIt would be great if you can solve this issue (either read the shapefile faster or read only the data within specified lat/long) at your end and I am sure that developers behind the matplotlib/basemap will integrate it later.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/42", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/42/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/42/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/42", "id": 123003288, "node_id": "MDU6SXNzdWUxMjMwMDMyODg=", "number": 42, "title": "Documentation on testing pyshp", "user": {"login": "micahcochran", "id": 7433104, "node_id": "MDQ6VXNlcjc0MzMxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7433104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micahcochran", "html_url": "https://github.com/micahcochran", "followers_url": "https://api.github.com/users/micahcochran/followers", "following_url": "https://api.github.com/users/micahcochran/following{/other_user}", "gists_url": "https://api.github.com/users/micahcochran/gists{/gist_id}", "starred_url": "https://api.github.com/users/micahcochran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micahcochran/subscriptions", "organizations_url": "https://api.github.com/users/micahcochran/orgs", "repos_url": "https://api.github.com/users/micahcochran/repos", "events_url": "https://api.github.com/users/micahcochran/events{/privacy}", "received_events_url": "https://api.github.com/users/micahcochran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-18T18:34:04Z", "updated_at": "2016-08-19T19:16:17Z", "closed_at": "2016-08-19T19:16:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This library only seems like it was designed to be tested during installation.  Since, the README.txt (used by the doctest) and the test data folder shapefiles/ are not installed by setup.py.\n\nIf you aren't in the pyshp folder, running shapefile.test() from the command line doesn't end well:\n\n```\n$ python3 -c 'import shapefile; shapefile.test()'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/usr/local/lib/python3.4/dist-packages/shapefile.py\", line 1186, in test\n    doctest.testfile(\"README.txt\", verbose=1)\n  File \"/usr/lib/python3.4/doctest.py\", line 2039, in testfile\n    encoding or \"utf-8\")\n  File \"/usr/lib/python3.4/doctest.py\", line 221, in _load_testfile\n    file_contents = package.__loader__.get_data(filename)\n  File \"<frozen importlib._bootstrap>\", line 1623, in get_data\nFileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.4/dist-packages/README.txt'\n```\n\nPerhaps the `test` function should be renamed to `_test`, to show that it is a private function.\n\nA little more documentation (README?) on testing pyshp for the people contributing to the project.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/41", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/41/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/41/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/41", "id": 119976796, "node_id": "MDU6SXNzdWUxMTk5NzY3OTY=", "number": 41, "title": "Python 3: make decoding shapefile fields more lenient...", "user": {"login": "micahcochran", "id": 7433104, "node_id": "MDQ6VXNlcjc0MzMxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7433104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micahcochran", "html_url": "https://github.com/micahcochran", "followers_url": "https://api.github.com/users/micahcochran/followers", "following_url": "https://api.github.com/users/micahcochran/following{/other_user}", "gists_url": "https://api.github.com/users/micahcochran/gists{/gist_id}", "starred_url": "https://api.github.com/users/micahcochran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micahcochran/subscriptions", "organizations_url": "https://api.github.com/users/micahcochran/orgs", "repos_url": "https://api.github.com/users/micahcochran/repos", "events_url": "https://api.github.com/users/micahcochran/events{/privacy}", "received_events_url": "https://api.github.com/users/micahcochran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-02T16:10:56Z", "updated_at": "2017-04-14T14:28:13Z", "closed_at": "2017-04-14T14:28:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This was reported https://github.com/matplotlib/basemap/issues/187 and subsequently merged into basemap.  ~~I have a basemap PR that deletes the inline copy of pyshp and makes pyshp an external dependency.~~  I just want to make sure that this patch has its chance for the \"mainline\" pyshp.\n\nEdit: pyshp is now an external dependency in the development version of matplotlib/basemap.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/39", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/39/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/39/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/39", "id": 117121247, "node_id": "MDU6SXNzdWUxMTcxMjEyNDc=", "number": 39, "title": "Wrong signed_area calculation", "user": {"login": "jatinderjit", "id": 4403052, "node_id": "MDQ6VXNlcjQ0MDMwNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4403052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jatinderjit", "html_url": "https://github.com/jatinderjit", "followers_url": "https://api.github.com/users/jatinderjit/followers", "following_url": "https://api.github.com/users/jatinderjit/following{/other_user}", "gists_url": "https://api.github.com/users/jatinderjit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jatinderjit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jatinderjit/subscriptions", "organizations_url": "https://api.github.com/users/jatinderjit/orgs", "repos_url": "https://api.github.com/users/jatinderjit/repos", "events_url": "https://api.github.com/users/jatinderjit/events{/privacy}", "received_events_url": "https://api.github.com/users/jatinderjit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-16T13:18:27Z", "updated_at": "2016-09-23T21:34:39Z", "closed_at": "2016-09-23T21:34:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "- The link referred for the area algorithm is not available anymore.\n- There is also bug in the formula (Second node's coordinates are appended to xs, ys instead of first node's. The polygon thus formed has a protruding edge.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/38", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/38/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/38/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/38", "id": 114110528, "node_id": "MDU6SXNzdWUxMTQxMTA1Mjg=", "number": 38, "title": "PyPI package: LICENSE.TXT missing", "user": {"login": "petrrr", "id": 3065632, "node_id": "MDQ6VXNlcjMwNjU2MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3065632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrrr", "html_url": "https://github.com/petrrr", "followers_url": "https://api.github.com/users/petrrr/followers", "following_url": "https://api.github.com/users/petrrr/following{/other_user}", "gists_url": "https://api.github.com/users/petrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrrr/subscriptions", "organizations_url": "https://api.github.com/users/petrrr/orgs", "repos_url": "https://api.github.com/users/petrrr/repos", "events_url": "https://api.github.com/users/petrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/petrrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-29T18:03:20Z", "updated_at": "2016-09-25T02:24:11Z", "closed_at": "2016-09-25T02:24:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the `LICENSE.TXT` (and maybe some other file which should have made it to the tarball, e.g. `changelog`) is missing. I am referring to version 1.2.3. This makes it a bit difficult to comply with the license. Maybe this could be added again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/37", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/37/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/37/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/37", "id": 106919004, "node_id": "MDU6SXNzdWUxMDY5MTkwMDQ=", "number": 37, "title": "How to validate shapefiles?", "user": {"login": "sellonen", "id": 1774247, "node_id": "MDQ6VXNlcjE3NzQyNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1774247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellonen", "html_url": "https://github.com/sellonen", "followers_url": "https://api.github.com/users/sellonen/followers", "following_url": "https://api.github.com/users/sellonen/following{/other_user}", "gists_url": "https://api.github.com/users/sellonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellonen/subscriptions", "organizations_url": "https://api.github.com/users/sellonen/orgs", "repos_url": "https://api.github.com/users/sellonen/repos", "events_url": "https://api.github.com/users/sellonen/events{/privacy}", "received_events_url": "https://api.github.com/users/sellonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034542, "node_id": "MDU6TGFiZWw4NDAzNDU0Mg==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/question", "name": "question", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-17T06:19:41Z", "updated_at": "2017-04-17T22:49:04Z", "closed_at": "2017-04-17T22:49:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find pyshp really valuable, thanks for your work. However, sometimes it creates shapfiles that I'm unable to open in certain GIS programs, namely MapInfo. The same files normally open just fine in qGIS. As MapInfo gives absolutely no information about what went wrong, I don't know where to start debugging, even though I'd be happy to contribute to pyshp.\n\nDo you have any recommendation about how to diagnose the shapefiles?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/35", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/35/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/35/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/35", "id": 105967271, "node_id": "MDU6SXNzdWUxMDU5NjcyNzE=", "number": 35, "title": "DBF only", "user": {"login": "AlainFELER", "id": 10269202, "node_id": "MDQ6VXNlcjEwMjY5MjAy", "avatar_url": "https://avatars2.githubusercontent.com/u/10269202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlainFELER", "html_url": "https://github.com/AlainFELER", "followers_url": "https://api.github.com/users/AlainFELER/followers", "following_url": "https://api.github.com/users/AlainFELER/following{/other_user}", "gists_url": "https://api.github.com/users/AlainFELER/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlainFELER/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlainFELER/subscriptions", "organizations_url": "https://api.github.com/users/AlainFELER/orgs", "repos_url": "https://api.github.com/users/AlainFELER/repos", "events_url": "https://api.github.com/users/AlainFELER/events{/privacy}", "received_events_url": "https://api.github.com/users/AlainFELER/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-11T08:35:35Z", "updated_at": "2016-09-25T02:22:44Z", "closed_at": "2016-09-25T02:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The class Reader comment says \"If one of the three files (.shp, .shx, .dbf) is missing no exception is thrown until you try to call a method that depends on that particular file.\" but if the .shp AND the .shx are missing it throws an exception.\nIt would be nice if the library accepted to open a .dbf alone : of course a shp with no .shp and no .shx is a poor one, but shapefile would still be very useful to analyse fields, compare dbfs, and some other things. Other libraries like dbf do that, but they have their own problems (no \"introspection\" with dbf for example).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/34", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/34/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/34/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/34", "id": 103110287, "node_id": "MDU6SXNzdWUxMDMxMTAyODc=", "number": 34, "title": "How do I specify an integer attribute?", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-25T20:33:00Z", "updated_at": "2020-04-09T08:19:11Z", "closed_at": "2016-09-26T11:22:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "w.field('testattr', 'N')\n\nThis appears to create a double, with length 50, precision 0.\n\nI was wondering what I need to specify to obtain an integer attribute.\n\nPython 3.4.3 and shapefile.py 1.2.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/32", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/32/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/32/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/32", "id": 101616526, "node_id": "MDU6SXNzdWUxMDE2MTY1MjY=", "number": 32, "title": "Invalid shapefile size in the header 'File length' field", "user": {"login": "Jackneill", "id": 451076, "node_id": "MDQ6VXNlcjQ1MTA3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/451076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jackneill", "html_url": "https://github.com/Jackneill", "followers_url": "https://api.github.com/users/Jackneill/followers", "following_url": "https://api.github.com/users/Jackneill/following{/other_user}", "gists_url": "https://api.github.com/users/Jackneill/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jackneill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jackneill/subscriptions", "organizations_url": "https://api.github.com/users/Jackneill/orgs", "repos_url": "https://api.github.com/users/Jackneill/repos", "events_url": "https://api.github.com/users/Jackneill/events{/privacy}", "received_events_url": "https://api.github.com/users/Jackneill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-18T09:48:55Z", "updated_at": "2017-04-17T19:36:33Z", "closed_at": "2017-04-17T19:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "With PolygonZ, M fields sizes are not added to the shape record length creating invalid shapefile size in the header (in __shpFileLength()).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/30", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/30/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/30/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/30", "id": 95783814, "node_id": "MDU6SXNzdWU5NTc4MzgxNA==", "number": 30, "title": "Python 2.7 UnicodeEncodeError when to save chinese in records", "user": {"login": "caesar0301", "id": 499254, "node_id": "MDQ6VXNlcjQ5OTI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/499254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caesar0301", "html_url": "https://github.com/caesar0301", "followers_url": "https://api.github.com/users/caesar0301/followers", "following_url": "https://api.github.com/users/caesar0301/following{/other_user}", "gists_url": "https://api.github.com/users/caesar0301/gists{/gist_id}", "starred_url": "https://api.github.com/users/caesar0301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caesar0301/subscriptions", "organizations_url": "https://api.github.com/users/caesar0301/orgs", "repos_url": "https://api.github.com/users/caesar0301/repos", "events_url": "https://api.github.com/users/caesar0301/events{/privacy}", "received_events_url": "https://api.github.com/users/caesar0301/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-18T03:23:40Z", "updated_at": "2017-04-14T14:28:26Z", "closed_at": "2017-04-14T14:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing some csv data into a shapefile of POINT type. One of the csv fields is in chinese and the pyshp.Writer complains about the encoding failure. Any ideas?\n\n```\nTraceback (most recent call last):\n  File \"apmap2shapefile.py\", line 31, in write2shp\n    shpw.save(outfile)\n  File \"/usr/local/lib/python2.7/site-packages/pyshp-1.2.3-py2.7.egg/shapefile.py\", line 1061, in save\n    self.saveDbf(target)\n  File \"/usr/local/lib/python2.7/site-packages/pyshp-1.2.3-py2.7.egg/shapefile.py\", line 1033, in saveDbf\n    self.__dbfRecords()\n  File \"/usr/local/lib/python2.7/site-packages/pyshp-1.2.3-py2.7.egg/shapefile.py\", line 916, in __dbfRecords\n    value = str(value)[:size].ljust(size)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-2: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/29", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/29/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/29/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/29", "id": 94277951, "node_id": "MDU6SXNzdWU5NDI3Nzk1MQ==", "number": 29, "title": "_shapes.extend access", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-07-10T10:30:16Z", "updated_at": "2017-05-19T21:38:28Z", "closed_at": "2017-05-19T21:38:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyCharm code inspection is flagging using the subject method as an issue.\nAccess\u00a0to\u00a0a\u00a0protected\u00a0member\u00a0_shapes\u00a0of\u00a0a\u00a0class\u00a0less...\u00a0(Ctrl+F1) \nThis inspection warns if a protected member is access outside the class or a descendant of the class where it's defined.\nIs there a better way to do this concatenate?\nCan this method be made public?\n                    r=shapefile.Reader(f)\n                    w.records.extend(r.records())\n                    w._shapes.extend(r.shapes())\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/28", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/28/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/28/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/28", "id": 91781325, "node_id": "MDU6SXNzdWU5MTc4MTMyNQ==", "number": 28, "title": "Python 3.4.3 Error : invalid literal for int() with 10: floatvalue", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-06-29T11:42:34Z", "updated_at": "2017-04-17T22:46:03Z", "closed_at": "2017-04-17T22:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version 1.2.1 20140507\n\nThe following line is throwing a stack track with the subject error message:\n\nLine 501\nvalue = int(value)\n\nMy quick fix is \nvalue = int(float(value))\n\nHowever there may be other areas where this type of conversion fails with python 3.\n\nReview my field definition it is an integer though the incoming value is a float, will change my field spec fiction to a float\n\nIt appears this line# is 506 with latest version.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/26", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/26/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/26/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/26", "id": 77051958, "node_id": "MDU6SXNzdWU3NzA1MTk1OA==", "number": 26, "title": "Spelling Errors in README", "user": {"login": "RossGammon", "id": 7116910, "node_id": "MDQ6VXNlcjcxMTY5MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7116910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RossGammon", "html_url": "https://github.com/RossGammon", "followers_url": "https://api.github.com/users/RossGammon/followers", "following_url": "https://api.github.com/users/RossGammon/following{/other_user}", "gists_url": "https://api.github.com/users/RossGammon/gists{/gist_id}", "starred_url": "https://api.github.com/users/RossGammon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RossGammon/subscriptions", "organizations_url": "https://api.github.com/users/RossGammon/orgs", "repos_url": "https://api.github.com/users/RossGammon/repos", "events_url": "https://api.github.com/users/RossGammon/events{/privacy}", "received_events_url": "https://api.github.com/users/RossGammon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-05-16T14:36:56Z", "updated_at": "2016-09-25T01:09:46Z", "closed_at": "2016-09-25T01:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "During a quality review of the last upload of pyshp in Debian, the following spelling errors were identified:\n$ codespell --quiet-level=3\n...\n./README.txt:265: dicussed  ==> discussed\n./README.txt:490: seperate  ==> separate\n./README.txt:551: nmae  ==> name\n\nI would have gladly produced a Pull Request for such a minor fix, but the same errors occur in PKG-INFO, README.pdf & README.html. Assuming one of them is the master, how were the other files produced from it.\n\nIt would be great if only one of these files was distributed in the tarball, and the rest built from the master file at build time. Is that possible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/25", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/25/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/25/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/25", "id": 67510231, "node_id": "MDU6SXNzdWU2NzUxMDIzMQ==", "number": 25, "title": "Best way to extract shapes from a big shapefile?", "user": {"login": "kuno", "id": 161327, "node_id": "MDQ6VXNlcjE2MTMyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/161327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuno", "html_url": "https://github.com/kuno", "followers_url": "https://api.github.com/users/kuno/followers", "following_url": "https://api.github.com/users/kuno/following{/other_user}", "gists_url": "https://api.github.com/users/kuno/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuno/subscriptions", "organizations_url": "https://api.github.com/users/kuno/orgs", "repos_url": "https://api.github.com/users/kuno/repos", "events_url": "https://api.github.com/users/kuno/events{/privacy}", "received_events_url": "https://api.github.com/users/kuno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034542, "node_id": "MDU6TGFiZWw4NDAzNDU0Mg==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/question", "name": "question", "color": "0e8a16", "default": true, "description": ""}, {"id": 84034543, "node_id": "MDU6TGFiZWw4NDAzNDU0Mw==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-10T05:06:36Z", "updated_at": "2015-07-13T03:06:53Z", "closed_at": "2015-07-13T03:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say, I have a big shapefile that contains all the countries of the world. \n\nThen what is the best way to extract shapes (records) based on each country, then group them as a new shapefile for its own ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/24", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/24/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/24/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/24", "id": 65985913, "node_id": "MDU6SXNzdWU2NTk4NTkxMw==", "number": 24, "title": "INTEGER VALUE OF 0 stack trace", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-04-02T18:32:49Z", "updated_at": "2017-04-17T21:59:52Z", "closed_at": "2017-04-17T21:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n    we.field('frame','N',9,0)\n```\n\nIf the value in the field is non-zero the write succeeds, if the value is 0 the following stack trace occurs.\n\nraceback (most recent call last):\n  File \"lib\\tc\\tc.py\", line 2809, in <module>\n    run(sys.argv[1])\n  File \"lib\\tc\\tc.py\", line 1666, in run\n    td,kd=shape_to_tripdct(src,cfg)\n  File \"lib\\tc\\tc.py\", line 1747, in shape_to_tripdct\n    attributes = sf.records()\n  File \"C:\\p\\tc_64\\lib\\shapefile.py\", line 535, in records\n    r = self.__record()\n  File \"C:\\p\\tc_64\\lib\\shapefile.py\", line 500, in __record\n    value = int(value)\nValueError: invalid literal for int() with base 10: '0.0'\nPress any key to continue . . .\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/23", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/23/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/23/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/23", "id": 64977282, "node_id": "MDU6SXNzdWU2NDk3NzI4Mg==", "number": 23, "title": "ValueError: invalid literal for int() with base 10: 'S'", "user": {"login": "beamerblvd", "id": 2373900, "node_id": "MDQ6VXNlcjIzNzM5MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2373900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beamerblvd", "html_url": "https://github.com/beamerblvd", "followers_url": "https://api.github.com/users/beamerblvd/followers", "following_url": "https://api.github.com/users/beamerblvd/following{/other_user}", "gists_url": "https://api.github.com/users/beamerblvd/gists{/gist_id}", "starred_url": "https://api.github.com/users/beamerblvd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beamerblvd/subscriptions", "organizations_url": "https://api.github.com/users/beamerblvd/orgs", "repos_url": "https://api.github.com/users/beamerblvd/repos", "events_url": "https://api.github.com/users/beamerblvd/events{/privacy}", "received_events_url": "https://api.github.com/users/beamerblvd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-28T19:12:08Z", "updated_at": "2017-04-28T17:23:33Z", "closed_at": "2017-04-28T17:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When loading the Quattroshapes (Foursquare) localities shapefiles (http://static.quattroshapes.com/qs_localities.zip) and calling `s.record(0)`, I get the following error:\n\n```\nValueError: invalid literal for int() with base 10: 'S'\n```\n\n~~This stems from the fact that, for whatever reason, `null` numeric values in this shapefile are \"S*********\" instead of \"**********\".~~\n\n~~Pull request coming soon.~~\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/22", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/22/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/22/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/22", "id": 62767911, "node_id": "MDU6SXNzdWU2Mjc2NzkxMQ==", "number": 22, "title": "Can not create Shapefile with NULL type", "user": {"login": "jmikulasek", "id": 688397, "node_id": "MDQ6VXNlcjY4ODM5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/688397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmikulasek", "html_url": "https://github.com/jmikulasek", "followers_url": "https://api.github.com/users/jmikulasek/followers", "following_url": "https://api.github.com/users/jmikulasek/following{/other_user}", "gists_url": "https://api.github.com/users/jmikulasek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmikulasek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmikulasek/subscriptions", "organizations_url": "https://api.github.com/users/jmikulasek/orgs", "repos_url": "https://api.github.com/users/jmikulasek/repos", "events_url": "https://api.github.com/users/jmikulasek/events{/privacy}", "received_events_url": "https://api.github.com/users/jmikulasek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-03-18T18:34:15Z", "updated_at": "2017-04-17T21:36:05Z", "closed_at": "2017-04-17T21:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to create a Shapefile of NULL type with several records. When I tried to save it I got this exception:\n\n```\nFile \"C:\\Projects\\Sources\\Arboretum\\src\\shapefile.py\", line 1030, in save\n    self.saveShx(target)\nFile \"C:\\Projects\\Sources\\Arboretum\\src\\shapefile.py\", line 993, in saveShx\n    self.shapeType = self._shapes[0].shapeType\nIndexError: list index out of range\n```\n\nThe reason is this condition: `if not self.shapeType:` in the Writer.saveShp and Writer.saveShx methods. When the condition is changed to `if self.shapeType is None:` the Shapefile is saved successfully.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/21", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/21/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/21/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/21", "id": 59946224, "node_id": "MDU6SXNzdWU1OTk0NjIyNA==", "number": 21, "title": "assertion error with floats and improving the assertion error message?", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-03-05T12:39:21Z", "updated_at": "2016-09-25T02:27:12Z", "closed_at": "2016-09-25T02:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am encountering an assertion error when I write floats with a lot of precision. Decreasing the precision solves the issue, again, this may be 'my' specification for the field. So this is probably not a bug, but it might be useful to have the assertion print out the field name and value for developers?\n\n```\n    w.field('test','N',16,3)\n```\n\nThis value was causing the issue:\n'test': 0.77569341788591528,\n\nWhen rounded no error\nround(val,4)\n\nERROR fragment\n\n  File \"c:\\p\\via\\lib\\shapefile.py\", line 1043, in save\n    self.saveDbf(target)\n  File \"c:\\p\\via\\lib\\shapefile.py\", line 1015, in saveDbf\n    self.__dbfRecords()\n  File \"c:\\p\\via\\lib\\shapefile.py\", line 902, in __dbfRecords\n    assert len(value) == size\nAssertionError\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/15", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/15/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/15/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/15", "id": 50901171, "node_id": "MDU6SXNzdWU1MDkwMTE3MQ==", "number": 15, "title": "Mysterious 1.2.1 Release", "user": {"login": "riggsd", "id": 647785, "node_id": "MDQ6VXNlcjY0Nzc4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riggsd", "html_url": "https://github.com/riggsd", "followers_url": "https://api.github.com/users/riggsd/followers", "following_url": "https://api.github.com/users/riggsd/following{/other_user}", "gists_url": "https://api.github.com/users/riggsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/riggsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riggsd/subscriptions", "organizations_url": "https://api.github.com/users/riggsd/orgs", "repos_url": "https://api.github.com/users/riggsd/repos", "events_url": "https://api.github.com/users/riggsd/events{/privacy}", "received_events_url": "https://api.github.com/users/riggsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-03T22:19:03Z", "updated_at": "2015-02-03T23:42:59Z", "closed_at": "2015-02-03T23:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Both the Google Code and GitHub repositories appear to have the source code for pyshp 1.2.0, however the download on PyPI contains 1.2.1 source code. Could you please push the latest code to the public repositories?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/14", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/14/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/14/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/14", "id": 45948415, "node_id": "MDU6SXNzdWU0NTk0ODQxNQ==", "number": 14, "title": "add new feature", "user": {"login": "geosky", "id": 5097313, "node_id": "MDQ6VXNlcjUwOTczMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5097313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geosky", "html_url": "https://github.com/geosky", "followers_url": "https://api.github.com/users/geosky/followers", "following_url": "https://api.github.com/users/geosky/following{/other_user}", "gists_url": "https://api.github.com/users/geosky/gists{/gist_id}", "starred_url": "https://api.github.com/users/geosky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geosky/subscriptions", "organizations_url": "https://api.github.com/users/geosky/orgs", "repos_url": "https://api.github.com/users/geosky/repos", "events_url": "https://api.github.com/users/geosky/events{/privacy}", "received_events_url": "https://api.github.com/users/geosky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 84034541, "node_id": "MDU6TGFiZWw4NDAzNDU0MQ==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-16T04:59:14Z", "updated_at": "2017-05-19T21:46:02Z", "closed_at": "2017-05-19T21:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "it seems that right now when adding new features save() will write the whole file once again, not append, right? adding new features extremely slow and unstable when data size is hugh.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/12", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/12/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/12/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/12", "id": 44621184, "node_id": "MDU6SXNzdWU0NDYyMTE4NA==", "number": 12, "title": "Documentation URL not valid", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-01T21:28:55Z", "updated_at": "2015-01-09T04:33:24Z", "closed_at": "2015-01-09T04:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "For more on this specification see: http://www. clicketyclick.dk/databases/xbase/format/index.html\n\nThis url has a space after \"www. \" causing a link failure when selected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/7", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/7/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/7/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/7", "id": 40975852, "node_id": "MDU6SXNzdWU0MDk3NTg1Mg==", "number": 7, "title": "pyshp 1.21 unable to write double values for an attribute", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034540, "node_id": "MDU6TGFiZWw4NDAzNDU0MA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2014-08-23T13:40:56Z", "updated_at": "2017-04-17T23:32:00Z", "closed_at": "2017-04-17T23:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a double attribute for a field causes a save error.\n\n```\ne.save(srcpath)\n```\n\n  File \"lib\\shapefile.py\", line 1042, in save\n    self.saveDbf(target)\n  File \"lib\\shapefile.py\", line 1014, in saveDbf\n    self.__dbfRecords()\n  File \"lib\\shapefile.py\", line 901, in __dbfRecords\n    assert len(value) == size\nAssertionError\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/6", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/6/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/6/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/6", "id": 40100361, "node_id": "MDU6SXNzdWU0MDEwMDM2MQ==", "number": 6, "title": "Documentation appears to be out of date. ", "user": {"login": "ForeverWintr", "id": 3046190, "node_id": "MDQ6VXNlcjMwNDYxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3046190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ForeverWintr", "html_url": "https://github.com/ForeverWintr", "followers_url": "https://api.github.com/users/ForeverWintr/followers", "following_url": "https://api.github.com/users/ForeverWintr/following{/other_user}", "gists_url": "https://api.github.com/users/ForeverWintr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ForeverWintr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ForeverWintr/subscriptions", "organizations_url": "https://api.github.com/users/ForeverWintr/orgs", "repos_url": "https://api.github.com/users/ForeverWintr/repos", "events_url": "https://api.github.com/users/ForeverWintr/events{/privacy}", "received_events_url": "https://api.github.com/users/ForeverWintr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84034538, "node_id": "MDU6TGFiZWw4NDAzNDUzOA==", "url": "https://api.github.com/repos/GeospatialPython/pyshp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GeospatialPython", "id": 5385450, "node_id": "MDQ6VXNlcjUzODU0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeospatialPython", "html_url": "https://github.com/GeospatialPython", "followers_url": "https://api.github.com/users/GeospatialPython/followers", "following_url": "https://api.github.com/users/GeospatialPython/following{/other_user}", "gists_url": "https://api.github.com/users/GeospatialPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeospatialPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeospatialPython/subscriptions", "organizations_url": "https://api.github.com/users/GeospatialPython/orgs", "repos_url": "https://api.github.com/users/GeospatialPython/repos", "events_url": "https://api.github.com/users/GeospatialPython/events{/privacy}", "received_events_url": "https://api.github.com/users/GeospatialPython/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2014-08-12T21:19:42Z", "updated_at": "2016-09-25T01:00:20Z", "closed_at": "2016-09-25T01:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for `shapefile.Writer` says that it has an `autobalance` attribute and `Balance()` method, neither of which seem to exist (they do exist in Editor though, I see).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/3", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/3/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/3/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/3", "id": 38149328, "node_id": "MDU6SXNzdWUzODE0OTMyOA==", "number": 3, "title": "UnboundLocalError when writing large shp file (while calculating shpFileLength)", "user": {"login": "djvdorp", "id": 827540, "node_id": "MDQ6VXNlcjgyNzU0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/827540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djvdorp", "html_url": "https://github.com/djvdorp", "followers_url": "https://api.github.com/users/djvdorp/followers", "following_url": "https://api.github.com/users/djvdorp/following{/other_user}", "gists_url": "https://api.github.com/users/djvdorp/gists{/gist_id}", "starred_url": "https://api.github.com/users/djvdorp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djvdorp/subscriptions", "organizations_url": "https://api.github.com/users/djvdorp/orgs", "repos_url": "https://api.github.com/users/djvdorp/repos", "events_url": "https://api.github.com/users/djvdorp/events{/privacy}", "received_events_url": "https://api.github.com/users/djvdorp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-18T05:32:02Z", "updated_at": "2020-07-20T12:10:57Z", "closed_at": "2017-04-17T21:50:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the great pySHP library! However, I'm currently facing an error, I hope you can help me out? It happens when I try to write a pretty large shp file, I tried with another file before and that worked just fine. \n\nI have already read your suggestions here:\nhttp://geospatialpython.com/2011/02/merging-lots-of-shapefiles-quickly.html\n\nAnd I also already Google'd around to see if an solution was around, but I couldn't find one myself. I can provide you with the testdata files, as they are Creative Commons, and I also can provide you with a sample of the code I'm using.\n\nI am using the latest pyshp version from pypi (1.2.1) on Python 2.7.6 (OS X 10.9.2).\n\n``` python\nTraceback (most recent call last):\n  File \"/Users/daniel/Projects/shapefileimport/app.py\", line 55, in <module>\n    hectopunten_output_writer.saveShp(\"Wegvakken\")\n  File \"/Users/daniel/.virtualenvs/shapefileimport/lib/python2.7/site-packages/shapefile.py\", line 995, in saveShp\n    self.__shapefileHeader(self.shp, headerType='shp')\n  File \"/Users/daniel/.virtualenvs/shapefileimport/lib/python2.7/site-packages/shapefile.py\", line 709, in __shapefileHeader\n    f.write(pack(\">i\", self.__shpFileLength()))\n  File \"/Users/daniel/.virtualenvs/shapefileimport/lib/python2.7/site-packages/shapefile.py\", line 617, in __shpFileLength\n    size += nParts * 4\nUnboundLocalError: local variable 'nParts' referenced before assignment\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/2", "repository_url": "https://api.github.com/repos/GeospatialPython/pyshp", "labels_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/2/comments", "events_url": "https://api.github.com/repos/GeospatialPython/pyshp/issues/2/events", "html_url": "https://github.com/GeospatialPython/pyshp/issues/2", "id": 36862062, "node_id": "MDU6SXNzdWUzNjg2MjA2Mg==", "number": 2, "title": "Why limited the length of field to 10?", "user": {"login": "kuno", "id": 161327, "node_id": "MDQ6VXNlcjE2MTMyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/161327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuno", "html_url": "https://github.com/kuno", "followers_url": "https://api.github.com/users/kuno/followers", "following_url": "https://api.github.com/users/kuno/following{/other_user}", "gists_url": "https://api.github.com/users/kuno/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuno/subscriptions", "organizations_url": "https://api.github.com/users/kuno/orgs", "repos_url": "https://api.github.com/users/kuno/repos", "events_url": "https://api.github.com/users/kuno/events{/privacy}", "received_events_url": "https://api.github.com/users/kuno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-07-01T04:45:09Z", "updated_at": "2016-03-23T22:35:34Z", "closed_at": "2014-07-02T05:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to shapefile, I saw in this line of code\nhttps://github.com/GeospatialPython/pyshp/blob/master/shapefile.py#L744\n\nThat you limited the lenght of the field to 10 at most, can you explain why?\n", "performed_via_github_app": null, "score": 1.0}]}