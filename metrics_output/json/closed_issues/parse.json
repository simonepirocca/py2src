{"total_count": 52, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/110", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/110/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/110/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/110", "id": 650746243, "node_id": "MDU6SXNzdWU2NTA3NDYyNDM=", "number": 110, "title": "error when pickling a parser with type conversions", "user": {"login": "martinResearch", "id": 18285382, "node_id": "MDQ6VXNlcjE4Mjg1Mzgy", "avatar_url": "https://avatars3.githubusercontent.com/u/18285382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinResearch", "html_url": "https://github.com/martinResearch", "followers_url": "https://api.github.com/users/martinResearch/followers", "following_url": "https://api.github.com/users/martinResearch/following{/other_user}", "gists_url": "https://api.github.com/users/martinResearch/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinResearch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinResearch/subscriptions", "organizations_url": "https://api.github.com/users/martinResearch/orgs", "repos_url": "https://api.github.com/users/martinResearch/repos", "events_url": "https://api.github.com/users/martinResearch/events{/privacy}", "received_events_url": "https://api.github.com/users/martinResearch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-03T19:49:35Z", "updated_at": "2020-07-26T05:49:22Z", "closed_at": "2020-07-26T05:49:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am not able to pickle some compiled parsers when using type conversions.     \r\n\r\nPickling works when using\r\n```\r\nfrom parse import compile\r\nimport pickle\r\np = compile(\"{age}\")\r\nwith open(\"test.pkl\",\"wb\") as outfile:\r\n\tpickle.dump(p,outfile)\r\n```\r\nPickling does not works when using **age:d** \r\n\r\n```   \r\nfrom parse import compile\r\nimport pickle\r\np = compile(\"{age:d}\")\r\nwith open(\"test.pkl\",\"wb\") as outfile:\r\n\tpickle.dump(p,outfile)\r\n```\r\nI get the following error message:\r\n```\r\n AttributeError: Can't pickle local object 'int_convert.<locals>.f'\r\n```\r\nI am using parse 1.15.0. I tried to use the latest revision from git and get the same error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/109", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/109/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/109/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/109", "id": 636728333, "node_id": "MDU6SXNzdWU2MzY3MjgzMzM=", "number": 109, "title": "Can't parse empty variable", "user": {"login": "akhilgargjosh", "id": 63342881, "node_id": "MDQ6VXNlcjYzMzQyODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/63342881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhilgargjosh", "html_url": "https://github.com/akhilgargjosh", "followers_url": "https://api.github.com/users/akhilgargjosh/followers", "following_url": "https://api.github.com/users/akhilgargjosh/following{/other_user}", "gists_url": "https://api.github.com/users/akhilgargjosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhilgargjosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhilgargjosh/subscriptions", "organizations_url": "https://api.github.com/users/akhilgargjosh/orgs", "repos_url": "https://api.github.com/users/akhilgargjosh/repos", "events_url": "https://api.github.com/users/akhilgargjosh/events{/privacy}", "received_events_url": "https://api.github.com/users/akhilgargjosh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T05:28:21Z", "updated_at": "2020-06-23T04:06:46Z", "closed_at": "2020-06-23T04:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Take this example\r\n\r\na = \"The '{name}' who say\"\r\nb = \"The '' who say\"\r\n\r\nparse(a,b) returns None whereas it should return empty string.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/108", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/108/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/108/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/108", "id": 584786330, "node_id": "MDU6SXNzdWU1ODQ3ODYzMzA=", "number": 108, "title": "[wishlist] Ability to get a set of values in a result", "user": {"login": "victorromeo", "id": 3838993, "node_id": "MDQ6VXNlcjM4Mzg5OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3838993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorromeo", "html_url": "https://github.com/victorromeo", "followers_url": "https://api.github.com/users/victorromeo/followers", "following_url": "https://api.github.com/users/victorromeo/following{/other_user}", "gists_url": "https://api.github.com/users/victorromeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorromeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorromeo/subscriptions", "organizations_url": "https://api.github.com/users/victorromeo/orgs", "repos_url": "https://api.github.com/users/victorromeo/repos", "events_url": "https://api.github.com/users/victorromeo/events{/privacy}", "received_events_url": "https://api.github.com/users/victorromeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-20T01:09:56Z", "updated_at": "2020-07-14T23:54:59Z", "closed_at": "2020-07-14T23:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "As an extension to #13 can I request inbuilt support for returning a collection of 'n' elements?\r\n\r\nWhen I'm parsing the output of `sudo iwlist wlan0 scan` I get variable length responses, which require additional plumbing.\r\n\r\n```\r\n                    Bit Rates:1 Mb/s; 2 Mb/s; 5.5 Mb/s; 11 Mb/s; 18 Mb/s\r\n                              24 Mb/s; 36 Mb/s; 54 Mb/s\r\n                    Bit Rates:6 Mb/s; 9 Mb/s; 12 Mb/s; 48 Mb/s\r\n...\r\n                        Pairwise Ciphers (2) : TKIP CCMP\r\nand\r\n                        Pairwise Ciphers (1) : CCMP\r\n```\r\n\r\nI know this is special case, but lists of values in strings are not unusual.  May I get a wishlist item?\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/106", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/106/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/106/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/106", "id": 576777505, "node_id": "MDU6SXNzdWU1NzY3Nzc1MDU=", "number": 106, "title": "Potentially unexpected behaviour with \"=\" character", "user": {"login": "s16h", "id": 1240827, "node_id": "MDQ6VXNlcjEyNDA4Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1240827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s16h", "html_url": "https://github.com/s16h", "followers_url": "https://api.github.com/users/s16h/followers", "following_url": "https://api.github.com/users/s16h/following{/other_user}", "gists_url": "https://api.github.com/users/s16h/gists{/gist_id}", "starred_url": "https://api.github.com/users/s16h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s16h/subscriptions", "organizations_url": "https://api.github.com/users/s16h/orgs", "repos_url": "https://api.github.com/users/s16h/repos", "events_url": "https://api.github.com/users/s16h/events{/privacy}", "received_events_url": "https://api.github.com/users/s16h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-06T08:35:57Z", "updated_at": "2020-03-07T09:55:58Z", "closed_at": "2020-03-06T10:06:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it expected that `parse(\"b={}\", \"ab=cd\")` is `None`? I was expecting to get `<Result ('cd',) {}>`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/102", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/102/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/102/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/102", "id": 573312042, "node_id": "MDU6SXNzdWU1NzMzMTIwNDI=", "number": 102, "title": "Various issues parsing singed or negative numbers", "user": {"login": "vladikcomper", "id": 18137266, "node_id": "MDQ6VXNlcjE4MTM3MjY2", "avatar_url": "https://avatars0.githubusercontent.com/u/18137266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladikcomper", "html_url": "https://github.com/vladikcomper", "followers_url": "https://api.github.com/users/vladikcomper/followers", "following_url": "https://api.github.com/users/vladikcomper/following{/other_user}", "gists_url": "https://api.github.com/users/vladikcomper/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladikcomper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladikcomper/subscriptions", "organizations_url": "https://api.github.com/users/vladikcomper/orgs", "repos_url": "https://api.github.com/users/vladikcomper/repos", "events_url": "https://api.github.com/users/vladikcomper/events{/privacy}", "received_events_url": "https://api.github.com/users/vladikcomper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-29T15:10:16Z", "updated_at": "2020-02-29T21:34:10Z", "closed_at": "2020-02-29T21:34:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of version 1.14.0, **parse** has several bugs prevent it form parsing negative or explicitly signed positive numbers (e.g. `+1234` instead of `1234`) correctly.\r\n\r\nThese bugs generally concern the following cases:\r\n1) Parsing _any_ hex, oct or bin number with a sign when type `{:d}` (integer number) is used.\r\n2) Parsing _any_ signed hex number under its native type, `{:x}`.\r\n\r\nIn the following examples, any unsigned number is parsed correctly:\r\n```\r\n>>> from parse import parse\r\n>>> parse('Number: {:d}','Number: 0b10') [0]\r\n2\r\n>>> parse('Number: {:d}','Number: 0o10') [0]\r\n8\r\n>>> parse('Number: {:d}','Number: 0x10') [0]\r\n16\r\n>>> parse('Number: {:x}','Number: 10') [0]\r\n16\r\n```\r\n\r\nHowever, when any sign (either positive or negative) is introduced, the parsing always fails as numbers are simply not recognized by the parser:\r\n```\r\n>>> parse('Number: {:d}','Number: -0b10') [0]\r\nTypeError: 'NoneType' object is not subscriptable\r\n>>> parse('Number: {:d}','Number: +0o10') [0]\r\nTypeError: 'NoneType' object is not subscriptable\r\n>>> parse('Number: {:d}','Number: -0x10') [0]\r\nTypeError: 'NoneType' object is not subscriptable\r\n>>> parse('Number: {:x}','Number: -10') [0]\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\n\r\nPlease note that the following examples work as intended (as the bug only occurs in the cases described above):\r\n```\r\n>>> parse('Number: {:b}','Number: -10') [0]\r\n-2\r\n>>> parse('Number: {:o}','Number: +10') [0]\r\n8\r\n>>> parse('Number: {:d}','Number: -10') [0]\r\n-10\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/100", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/100/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/100/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/100", "id": 560861083, "node_id": "MDU6SXNzdWU1NjA4NjEwODM=", "number": 100, "title": "Consider adding replace() ?", "user": {"login": "florisla", "id": 1745568, "node_id": "MDQ6VXNlcjE3NDU1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1745568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florisla", "html_url": "https://github.com/florisla", "followers_url": "https://api.github.com/users/florisla/followers", "following_url": "https://api.github.com/users/florisla/following{/other_user}", "gists_url": "https://api.github.com/users/florisla/gists{/gist_id}", "starred_url": "https://api.github.com/users/florisla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florisla/subscriptions", "organizations_url": "https://api.github.com/users/florisla/orgs", "repos_url": "https://api.github.com/users/florisla/repos", "events_url": "https://api.github.com/users/florisla/events{/privacy}", "received_events_url": "https://api.github.com/users/florisla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T08:46:14Z", "updated_at": "2020-02-10T08:20:17Z", "closed_at": "2020-02-10T08:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI find `parse` a lovely module which is much more intuitive than regular expressions.  Thanks!\r\n\r\nMost of the times I need to revert to `re` is when I want to replace text (using [re.sub()](https://docs.python.org/3/library/re.html#re.sub)).\r\n\r\nFor supporting this it would be great to have\r\n\r\n* Property `Result.span` (or `.start` and `.end`) -- equivalent to `min(span[0] for span in result.spans.values())` and `max(span[1] for span in result.spans.values())`.\r\n* `parse.replace(format, string, replacement)` and equivalent `Parser.replace()`.\r\n\r\nHave you considered adding this?\r\n\r\nI do realize it may be out of scope since `parse` is simply the reverse of `format`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/93", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/93/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/93/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/93", "id": 540704151, "node_id": "MDU6SXNzdWU1NDA3MDQxNTE=", "number": 93, "title": "Parse fortran style float error", "user": {"login": "purpleskyfall", "id": 25096239, "node_id": "MDQ6VXNlcjI1MDk2MjM5", "avatar_url": "https://avatars3.githubusercontent.com/u/25096239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purpleskyfall", "html_url": "https://github.com/purpleskyfall", "followers_url": "https://api.github.com/users/purpleskyfall/followers", "following_url": "https://api.github.com/users/purpleskyfall/following{/other_user}", "gists_url": "https://api.github.com/users/purpleskyfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/purpleskyfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purpleskyfall/subscriptions", "organizations_url": "https://api.github.com/users/purpleskyfall/orgs", "repos_url": "https://api.github.com/users/purpleskyfall/repos", "events_url": "https://api.github.com/users/purpleskyfall/events{/privacy}", "received_events_url": "https://api.github.com/users/purpleskyfall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-20T02:20:53Z", "updated_at": "2019-12-20T04:02:10Z", "closed_at": "2019-12-20T04:02:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Parse the fortran output style exponent number error, like '.196937E-02', It should be:\r\n\r\n```py\r\n>>> parse.parse('{:11e}', '.196937E-02')\r\n<Result ('0.00196937',) {}>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/92", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/92/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/92/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/92", "id": 537260956, "node_id": "MDU6SXNzdWU1MzcyNjA5NTY=", "number": 92, "title": "FixedTzOffset.__eq__(...) Fails when other is None", "user": {"login": "CraigMiloRogers", "id": 5853763, "node_id": "MDQ6VXNlcjU4NTM3NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5853763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraigMiloRogers", "html_url": "https://github.com/CraigMiloRogers", "followers_url": "https://api.github.com/users/CraigMiloRogers/followers", "following_url": "https://api.github.com/users/CraigMiloRogers/following{/other_user}", "gists_url": "https://api.github.com/users/CraigMiloRogers/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraigMiloRogers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraigMiloRogers/subscriptions", "organizations_url": "https://api.github.com/users/CraigMiloRogers/orgs", "repos_url": "https://api.github.com/users/CraigMiloRogers/repos", "events_url": "https://api.github.com/users/CraigMiloRogers/events{/privacy}", "received_events_url": "https://api.github.com/users/CraigMiloRogers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T23:05:49Z", "updated_at": "2019-12-20T03:54:20Z", "closed_at": "2019-12-20T03:54:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In parse 1.12.0 and 1.12.1, FixedTzOffset.__eq__(...)  fails when `other` is None. matplotlib triggers this behavior (see https://github.com/matplotlib/matplotlib/issues/15924). The matplotlib maintainer asserts that parse.py should return False in this case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/83", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/83/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/83/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/83", "id": 437735375, "node_id": "MDU6SXNzdWU0Mzc3MzUzNzU=", "number": 83, "title": "Some hex values mistakenly parsed as zeroes", "user": {"login": "vladikcomper", "id": 18137266, "node_id": "MDQ6VXNlcjE4MTM3MjY2", "avatar_url": "https://avatars0.githubusercontent.com/u/18137266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladikcomper", "html_url": "https://github.com/vladikcomper", "followers_url": "https://api.github.com/users/vladikcomper/followers", "following_url": "https://api.github.com/users/vladikcomper/following{/other_user}", "gists_url": "https://api.github.com/users/vladikcomper/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladikcomper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladikcomper/subscriptions", "organizations_url": "https://api.github.com/users/vladikcomper/orgs", "repos_url": "https://api.github.com/users/vladikcomper/repos", "events_url": "https://api.github.com/users/vladikcomper/events{/privacy}", "received_events_url": "https://api.github.com/users/vladikcomper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1204183326, "node_id": "MDU6TGFiZWwxMjA0MTgzMzI2", "url": "https://api.github.com/repos/r1chardj0n3s/parse/labels/bug", "name": "bug", "color": "ff6e6e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-26T15:46:52Z", "updated_at": "2020-02-29T21:34:10Z", "closed_at": "2020-02-29T21:34:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For some reason, parsing certain hex values with leading zeroes produces buggy and unreliable results.\r\nHere's a quick demonstration using the latest version of parse (1.12.0):\r\n\r\n```\r\n>>> from parse import parse\r\n>>> parse.parse('${:x}','$0b67')\r\n<Result (0,) {}>\r\n>>> parse.parse('${:x}','$0B67')\r\n<Result (0,) {}>\r\n>>> parse.parse('${:x}','$0B6')\r\n<Result (0,) {}>\r\n>>> parse.parse('${:x}','$0B')\r\n<Result (11,) {}>\r\n>>> parse.parse('${:x}','$B67')\r\n<Result (2919,) {}>\r\n```\r\n\r\nIt appears that parse() recognizes, but fails to parse certain combinations of hex digits, returning zero instead.\r\nInterestingly, whether parsing fails depends on the digit next to zero.\r\nBased on my testing, it always happens with numbers starting with \"0Bxxx\" (excluding \"0B\"; I know there was a separate [closed] bug report on that one, but it appears that the underlying issue is still there).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/82", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/82/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/82/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/82", "id": 437155459, "node_id": "MDU6SXNzdWU0MzcxNTU0NTk=", "number": 82, "title": "LICENSE file in pypi tarball", "user": {"login": "pgajdos", "id": 4067843, "node_id": "MDQ6VXNlcjQwNjc4NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4067843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgajdos", "html_url": "https://github.com/pgajdos", "followers_url": "https://api.github.com/users/pgajdos/followers", "following_url": "https://api.github.com/users/pgajdos/following{/other_user}", "gists_url": "https://api.github.com/users/pgajdos/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgajdos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgajdos/subscriptions", "organizations_url": "https://api.github.com/users/pgajdos/orgs", "repos_url": "https://api.github.com/users/pgajdos/repos", "events_url": "https://api.github.com/users/pgajdos/events{/privacy}", "received_events_url": "https://api.github.com/users/pgajdos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1454605371, "node_id": "MDU6TGFiZWwxNDU0NjA1Mzcx", "url": "https://api.github.com/repos/r1chardj0n3s/parse/labels/good-for-beginner", "name": "good-for-beginner", "color": "b6e07b", "default": false, "description": ""}, {"id": 1204146264, "node_id": "MDU6TGFiZWwxMjA0MTQ2MjY0", "url": "https://api.github.com/repos/r1chardj0n3s/parse/labels/wishlist", "name": "wishlist", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-25T11:45:30Z", "updated_at": "2019-10-31T06:48:24Z", "closed_at": "2019-10-31T06:48:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know it may sound tiresome after two issues filled because of license already. Could you please still consider to add LICENSE file also in pypi tarball? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/79", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/79/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/79/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/79", "id": 422968607, "node_id": "MDU6SXNzdWU0MjI5Njg2MDc=", "number": 79, "title": "Unmatched brace can still result in a match", "user": {"login": "mattsep", "id": 8900644, "node_id": "MDQ6VXNlcjg5MDA2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8900644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsep", "html_url": "https://github.com/mattsep", "followers_url": "https://api.github.com/users/mattsep/followers", "following_url": "https://api.github.com/users/mattsep/following{/other_user}", "gists_url": "https://api.github.com/users/mattsep/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsep/subscriptions", "organizations_url": "https://api.github.com/users/mattsep/orgs", "repos_url": "https://api.github.com/users/mattsep/repos", "events_url": "https://api.github.com/users/mattsep/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-19T21:45:40Z", "updated_at": "2019-04-07T01:11:12Z", "closed_at": "2019-04-07T01:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Certain patterns can still result in a match even when there are unmatched braces. For example:\r\n```\r\n>>> parse(\"{who.txt\", \"hello\")\r\n<Result () {'who.tx': 'hello'}>\r\n```\r\nEven though there is no closing `}`, `parse` assumes the final character is the closing brace and matches the pattern accordingly. In this case, I'd expect `parse` to return `None` since there is no direct match.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/76", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/76/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/76/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/76", "id": 402007363, "node_id": "MDU6SXNzdWU0MDIwMDczNjM=", "number": 76, "title": "Getting UnicodeEncodeError during installation", "user": {"login": "sylviayap", "id": 28693731, "node_id": "MDQ6VXNlcjI4NjkzNzMx", "avatar_url": "https://avatars1.githubusercontent.com/u/28693731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylviayap", "html_url": "https://github.com/sylviayap", "followers_url": "https://api.github.com/users/sylviayap/followers", "following_url": "https://api.github.com/users/sylviayap/following{/other_user}", "gists_url": "https://api.github.com/users/sylviayap/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylviayap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylviayap/subscriptions", "organizations_url": "https://api.github.com/users/sylviayap/orgs", "repos_url": "https://api.github.com/users/sylviayap/repos", "events_url": "https://api.github.com/users/sylviayap/events{/privacy}", "received_events_url": "https://api.github.com/users/sylviayap/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1204183326, "node_id": "MDU6TGFiZWwxMjA0MTgzMzI2", "url": "https://api.github.com/repos/r1chardj0n3s/parse/labels/bug", "name": "bug", "color": "ff6e6e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-01-22T23:54:01Z", "updated_at": "2019-03-04T06:12:56Z", "closed_at": "2019-01-23T02:04:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are installing the parse as the dependency of the behave\r\nAnd this is the traceback that we getting during the installation.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/pip-install-sme0se0x/parse/setup.py\", line 10, in <module>\r\n    f.write(__doc__)\r\nUnicodeEncodeError: 'ascii' codec can't encode character '\\xeb' in position 13017: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/72", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/72/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/72/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/72", "id": 401985409, "node_id": "MDU6SXNzdWU0MDE5ODU0MDk=", "number": 72, "title": "Several DeprecationWarning: invalid escape sequence ", "user": {"login": "r1chardj0n3s", "id": 663366, "node_id": "MDQ6VXNlcjY2MzM2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/663366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r1chardj0n3s", "html_url": "https://github.com/r1chardj0n3s", "followers_url": "https://api.github.com/users/r1chardj0n3s/followers", "following_url": "https://api.github.com/users/r1chardj0n3s/following{/other_user}", "gists_url": "https://api.github.com/users/r1chardj0n3s/gists{/gist_id}", "starred_url": "https://api.github.com/users/r1chardj0n3s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r1chardj0n3s/subscriptions", "organizations_url": "https://api.github.com/users/r1chardj0n3s/orgs", "repos_url": "https://api.github.com/users/r1chardj0n3s/repos", "events_url": "https://api.github.com/users/r1chardj0n3s/events{/privacy}", "received_events_url": "https://api.github.com/users/r1chardj0n3s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-22T22:36:51Z", "updated_at": "2019-01-22T22:37:59Z", "closed_at": "2019-01-22T22:37:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As noted in PR #71 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/70", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/70/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/70/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/70", "id": 373886657, "node_id": "MDU6SXNzdWUzNzM4ODY2NTc=", "number": 70, "title": "Can I parse a JSON string with any dotted names?", "user": {"login": "tar-xzvff", "id": 18513971, "node_id": "MDQ6VXNlcjE4NTEzOTcx", "avatar_url": "https://avatars1.githubusercontent.com/u/18513971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tar-xzvff", "html_url": "https://github.com/tar-xzvff", "followers_url": "https://api.github.com/users/tar-xzvff/followers", "following_url": "https://api.github.com/users/tar-xzvff/following{/other_user}", "gists_url": "https://api.github.com/users/tar-xzvff/gists{/gist_id}", "starred_url": "https://api.github.com/users/tar-xzvff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tar-xzvff/subscriptions", "organizations_url": "https://api.github.com/users/tar-xzvff/orgs", "repos_url": "https://api.github.com/users/tar-xzvff/repos", "events_url": "https://api.github.com/users/tar-xzvff/events{/privacy}", "received_events_url": "https://api.github.com/users/tar-xzvff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-25T10:48:57Z", "updated_at": "2019-01-22T22:43:00Z", "closed_at": "2019-01-22T22:43:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to parse JSON string.\r\nBut I got an error and I can not parse.\r\n\r\n```\r\nfrom parse import *\r\n\r\npattern = '{\"name\": {data.name}, \"age\": {data.age}}'\r\nprint(parse(pattern, '{\"name\": \"test\", \"age\": 25}'))\r\n```\r\n\r\nresult\r\n```\r\nValueError: format spec 'name\":' not recognised\r\n```\r\n\r\nIs it impossible to parse a JSON character string with any dotted names?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/69", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/69/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/69/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/69", "id": 371017305, "node_id": "MDU6SXNzdWUzNzEwMTczMDU=", "number": 69, "title": "Add beginning / end of string indicator", "user": {"login": "danshorstein", "id": 15842536, "node_id": "MDQ6VXNlcjE1ODQyNTM2", "avatar_url": "https://avatars1.githubusercontent.com/u/15842536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danshorstein", "html_url": "https://github.com/danshorstein", "followers_url": "https://api.github.com/users/danshorstein/followers", "following_url": "https://api.github.com/users/danshorstein/following{/other_user}", "gists_url": "https://api.github.com/users/danshorstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/danshorstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danshorstein/subscriptions", "organizations_url": "https://api.github.com/users/danshorstein/orgs", "repos_url": "https://api.github.com/users/danshorstein/repos", "events_url": "https://api.github.com/users/danshorstein/events{/privacy}", "received_events_url": "https://api.github.com/users/danshorstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-17T11:03:04Z", "updated_at": "2019-01-22T22:43:13Z", "closed_at": "2019-01-22T22:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be great to be able to indicate a match at beginning or end of string. E.g. if a pattern matches some records at the beginning and other records in the middle but you only want to target those at the beginning of the string, I don\u2019t see an easy way to do that currently.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/66", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/66/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/66/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/66", "id": 326837227, "node_id": "MDU6SXNzdWUzMjY4MzcyMjc=", "number": 66, "title": "Supported versions problem: python2.6, python2.5 (minor problem)", "user": {"login": "jenisys", "id": 371945, "node_id": "MDQ6VXNlcjM3MTk0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/371945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenisys", "html_url": "https://github.com/jenisys", "followers_url": "https://api.github.com/users/jenisys/followers", "following_url": "https://api.github.com/users/jenisys/following{/other_user}", "gists_url": "https://api.github.com/users/jenisys/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenisys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenisys/subscriptions", "organizations_url": "https://api.github.com/users/jenisys/orgs", "repos_url": "https://api.github.com/users/jenisys/repos", "events_url": "https://api.github.com/users/jenisys/events{/privacy}", "received_events_url": "https://api.github.com/users/jenisys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-27T18:15:11Z", "updated_at": "2018-05-27T22:02:18Z", "closed_at": "2018-05-27T22:02:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The \"setup.py\" file currently still states that python2.5 and python2.6 are supported. \r\nThis may be true, but can currently not be proven because the test suite contains at least tests that run only on python2.7 and newer.\r\n\r\nEXAMPLE:\r\n```shell\r\n$ pytest\r\nplatform ... -- Python 2.6.9, pytest-3.2.5, ...\r\n...\r\nself = <test_parse.TestParseType testMethod=test_decimal_value>\r\n    def test_decimal_value(self):\r\n        value = Decimal('5.5')\r\n>       str_ = 'test {}'.format(value)\r\nE       ValueError: zero length field name in format\r\n```\r\nNOTE: string-format without index or named args work only for Python2.7.x or newer AFAIK.\r\n\r\nPOSSIBLE SOLUTIONS:\r\n* Drop support for older python versions\r\n* Ensure that tests pass on all supported python version (and fix the test)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/65", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/65/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/65/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/65", "id": 318314351, "node_id": "MDU6SXNzdWUzMTgzMTQzNTE=", "number": 65, "title": "parse of '0B' as an hexadecimal fails", "user": {"login": "bentiss", "id": 2705518, "node_id": "MDQ6VXNlcjI3MDU1MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2705518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bentiss", "html_url": "https://github.com/bentiss", "followers_url": "https://api.github.com/users/bentiss/followers", "following_url": "https://api.github.com/users/bentiss/following{/other_user}", "gists_url": "https://api.github.com/users/bentiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bentiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bentiss/subscriptions", "organizations_url": "https://api.github.com/users/bentiss/orgs", "repos_url": "https://api.github.com/users/bentiss/repos", "events_url": "https://api.github.com/users/bentiss/events{/privacy}", "received_events_url": "https://api.github.com/users/bentiss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-27T08:02:23Z", "updated_at": "2018-05-26T23:46:03Z", "closed_at": "2018-05-26T23:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to parse a list of HID [usages](https://github.com/bentiss/hid-tools/blob/master/data/0001_generic_desktop.hut), I have a field that is represented by '0B' that I'd like to convert to the value 11.\r\n\r\nWhen parsing the values, I am using `parse.parse('{value:x}\\t{name}', line)`, so I am specifying that I want the int value to be an hex. However, I am hitting https://github.com/r1chardj0n3s/parse/blob/master/parse.py#L441 (in `int_convert`), and parse decides that my hex value is a base 2 one, and returns `0`.\r\n\r\nOne solution could be to enforce the size to be at least 3 in int_convert if the value starts with a '0' and a known prefix. But I think if the users provides the base for the conversion, the `int_convert`function should not try to be smart and simply use the provided base.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/64", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/64/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/64/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/64", "id": 316099384, "node_id": "MDU6SXNzdWUzMTYwOTkzODQ=", "number": 64, "title": "Request: Add a copy of the license in a separate file", "user": {"login": "techalchemy", "id": 954310, "node_id": "MDQ6VXNlcjk1NDMxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/954310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techalchemy", "html_url": "https://github.com/techalchemy", "followers_url": "https://api.github.com/users/techalchemy/followers", "following_url": "https://api.github.com/users/techalchemy/following{/other_user}", "gists_url": "https://api.github.com/users/techalchemy/gists{/gist_id}", "starred_url": "https://api.github.com/users/techalchemy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techalchemy/subscriptions", "organizations_url": "https://api.github.com/users/techalchemy/orgs", "repos_url": "https://api.github.com/users/techalchemy/repos", "events_url": "https://api.github.com/users/techalchemy/events{/privacy}", "received_events_url": "https://api.github.com/users/techalchemy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T01:58:45Z", "updated_at": "2018-05-26T23:14:31Z", "closed_at": "2018-05-26T23:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, we are vendoring this library over in https://github.com/pypa/pipenv and we are automating our vendoring process.  As part of the broader distribution process we are trying to handle our current licensing issues by including explicit license files for each of our vendored dependencies.  Would you be receptive to adding an additional LICENSE file with the text of the license of your software (MIT license I believe?)\r\n\r\nIf so I don't mind tossing a PR in this direction", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/63", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/63/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/63/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/63", "id": 310179921, "node_id": "MDU6SXNzdWUzMTAxNzk5MjE=", "number": 63, "title": "Parsing a continous string", "user": {"login": "Igorp45", "id": 37942938, "node_id": "MDQ6VXNlcjM3OTQyOTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/37942938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Igorp45", "html_url": "https://github.com/Igorp45", "followers_url": "https://api.github.com/users/Igorp45/followers", "following_url": "https://api.github.com/users/Igorp45/following{/other_user}", "gists_url": "https://api.github.com/users/Igorp45/gists{/gist_id}", "starred_url": "https://api.github.com/users/Igorp45/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Igorp45/subscriptions", "organizations_url": "https://api.github.com/users/Igorp45/orgs", "repos_url": "https://api.github.com/users/Igorp45/repos", "events_url": "https://api.github.com/users/Igorp45/events{/privacy}", "received_events_url": "https://api.github.com/users/Igorp45/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-30T22:07:40Z", "updated_at": "2019-01-22T23:02:12Z", "closed_at": "2019-01-22T23:02:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to parse continous string having letters and numbers by the easiest way:\r\n\r\n>>> parse('{:>w}{:g}{:w}{:g}{:w}', ' G3.80XA5.2M')\r\n<Result ('G', 3.8, 'XA', 5.2, 'M') {}>\r\n>>> parse('{:>w}{:g}{:w}{:g}{:w}', ' G3.80XA4.2M')\r\n<Result ('G', 3.8, 'XA', 4.2, 'M') {}>\r\n\r\nas far so good, but \r\n\r\n>>> parse('{:>w}{:g}{:w}{:g}{:w}', ' G3.80XA04.2M')\r\n<Result ('G', 3.8, 'XA0', 4.2, 'M') {}>\r\n>>> parse('{:>w}{:g}{:w}{:g}{:w}', ' G3.80XA44.2M')\r\n<Result ('G', 3.8, 'XA4', 4.2, 'M') {}>\r\n>>> parse('{:>w}{:g}{:w}{:g}{:w}', ' G3.80XA40M')\r\n<Result ('G', 3.8, 'XA4', 0.0, 'M') {}>\r\n\r\nchanging input string a little bit I was getting bad results. \r\n\r\nI am missing something?\r\n\r\nIgor", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/62", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/62/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/62/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/62", "id": 308773520, "node_id": "MDU6SXNzdWUzMDg3NzM1MjA=", "number": 62, "title": "add support for datetime.strftime directives?", "user": {"login": "7yl4r", "id": 1051390, "node_id": "MDQ6VXNlcjEwNTEzOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1051390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/7yl4r", "html_url": "https://github.com/7yl4r", "followers_url": "https://api.github.com/users/7yl4r/followers", "following_url": "https://api.github.com/users/7yl4r/following{/other_user}", "gists_url": "https://api.github.com/users/7yl4r/gists{/gist_id}", "starred_url": "https://api.github.com/users/7yl4r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/7yl4r/subscriptions", "organizations_url": "https://api.github.com/users/7yl4r/orgs", "repos_url": "https://api.github.com/users/7yl4r/repos", "events_url": "https://api.github.com/users/7yl4r/events{/privacy}", "received_events_url": "https://api.github.com/users/7yl4r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1204146264, "node_id": "MDU6TGFiZWwxMjA0MTQ2MjY0", "url": "https://api.github.com/repos/r1chardj0n3s/parse/labels/wishlist", "name": "wishlist", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-26T23:48:34Z", "updated_at": "2019-03-25T19:57:58Z", "closed_at": "2019-03-25T19:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are some edge cases that this module does not cover, and rather than recreating the wheel I would like to discuss a method to support [`datetime.strftime` directives](http://strftime.org/).\r\n\r\nThe basic strategy I am imagining would be to preprocess the given string to replace these directives with appropriate format definitions from a hard-coded table so that they are loaded into the `named` set. These values can then be used to set a datetime on the `named` set after everything is parsed.\r\n\r\nWalkthrough example:\r\n\r\n```python\r\nFMT_STR=\"string with {stuff}, {}, and strftime directives like %Y, %d, and %b\"\r\nparse(FMT_STR, \"string with myStuff, also_this, and strftime directives like 2018, 03 and Feb\").named\r\n>> {\r\n    \"stuff\": \"myStuff\",\r\n    \"__Y\": 2018,\r\n    \"__b\": \"Feb\",\r\n    \"__d\": 3,\r\n    \"__datetime\": datetime(2018, 2, 3)\r\n}\r\n```\r\n\r\nIn the above example the format string would be pre-parsed into something like :\r\n\r\n```\r\n\"string with {stuff}, {}, and strftime directives like {:4d}, {:2d}, and {:3w}\"\r\n```\r\n\r\nusing a mapping like:\r\n\r\n```\r\nmap = {\r\n    \"%Y\": \"{:4d}\", \r\n    \"%d\": \"{:2d}\", \r\n    \"%b\": \"{:3w}\"\r\n}\r\nfor directive, fmt in map.items():\r\n    string = string.replace(directive, fmt)\r\n```\r\n\r\nDoes this seem reasonable? I may try an implementation unless there are potential issues with this I am overlooking.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/60", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/60/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/60/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/60", "id": 306105192, "node_id": "MDU6SXNzdWUzMDYxMDUxOTI=", "number": 60, "title": "Brackets Break Date Parsing", "user": {"login": "njwhite", "id": 912123, "node_id": "MDQ6VXNlcjkxMjEyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/912123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njwhite", "html_url": "https://github.com/njwhite", "followers_url": "https://api.github.com/users/njwhite/followers", "following_url": "https://api.github.com/users/njwhite/following{/other_user}", "gists_url": "https://api.github.com/users/njwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/njwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njwhite/subscriptions", "organizations_url": "https://api.github.com/users/njwhite/orgs", "repos_url": "https://api.github.com/users/njwhite/repos", "events_url": "https://api.github.com/users/njwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/njwhite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-16T23:30:15Z", "updated_at": "2018-04-03T22:23:32Z", "closed_at": "2018-04-03T22:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "````python\r\nimport parse\r\ndef a(a):\r\n    return a\r\na.pattern = '((3))'\r\nparse.parse('{:a}q{:ti}', '3q2017-12-31', dict(a=a))\r\n````\r\n\r\n````\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-9cc16e0f1e39> in <module>()\r\n      3     return a\r\n      4 a.pattern = '((3))'\r\n----> 5 parse.parse('{:a}q{:ti}', '3q2017-12-31', dict(a=a))\r\n\r\n~/miniconda3/lib/python3.6/site-packages/parse.py in parse(format, string, extra_types, evaluate_result)\r\n   1115     In the case there is no match parse() will return None.\r\n   1116     '''\r\n-> 1117     return Parser(format, extra_types=extra_types).parse(string, evaluate_result=evaluate_result)\r\n   1118 \r\n   1119 \r\n\r\n~/miniconda3/lib/python3.6/site-packages/parse.py in parse(self, string, evaluate_result)\r\n    697 \r\n    698         if evaluate_result:\r\n--> 699             return self.evaluate_result(m)\r\n    700         else:\r\n    701             return Match(self, m)\r\n\r\n~/miniconda3/lib/python3.6/site-packages/parse.py in evaluate_result(self, m)\r\n    764         for n in self._fixed_fields:\r\n    765             if n in self._type_conversions:\r\n--> 766                 fixed_fields[n] = self._type_conversions[n](fixed_fields[n], m)\r\n    767         fixed_fields = tuple(fixed_fields[n] for n in self._fixed_fields)\r\n    768 \r\n\r\n~/miniconda3/lib/python3.6/site-packages/parse.py in date_convert(string, match, ymd, mdy, dmy, d_m_y, hms, am, tz, mm, dd)\r\n    482         d=groups[dd]\r\n    483     elif ymd is not None:\r\n--> 484         y, m, d = re.split('[-/\\s]', groups[ymd])\r\n    485     elif mdy is not None:\r\n    486         m, d, y = re.split('[-/\\s]', groups[mdy])\r\n\r\nValueError: not enough values to unpack (expected 3, got 1)\r\n\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/59", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/59/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/59/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/59", "id": 302235285, "node_id": "MDU6SXNzdWUzMDIyMzUyODU=", "number": 59, "title": "pip installation", "user": {"login": "LauLauThom", "id": 26764505, "node_id": "MDQ6VXNlcjI2NzY0NTA1", "avatar_url": "https://avatars2.githubusercontent.com/u/26764505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LauLauThom", "html_url": "https://github.com/LauLauThom", "followers_url": "https://api.github.com/users/LauLauThom/followers", "following_url": "https://api.github.com/users/LauLauThom/following{/other_user}", "gists_url": "https://api.github.com/users/LauLauThom/gists{/gist_id}", "starred_url": "https://api.github.com/users/LauLauThom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LauLauThom/subscriptions", "organizations_url": "https://api.github.com/users/LauLauThom/orgs", "repos_url": "https://api.github.com/users/LauLauThom/repos", "events_url": "https://api.github.com/users/LauLauThom/events{/privacy}", "received_events_url": "https://api.github.com/users/LauLauThom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-05T09:58:09Z", "updated_at": "2018-03-05T10:40:30Z", "closed_at": "2018-03-05T10:40:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nWould it be possible to have the package available via pip ? \r\nI used `pip install git+https://github.com/r1chardj0n3s/parse` that works well but something like `pip install parse` would be nice !\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/57", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/57/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/57/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/57", "id": 287206949, "node_id": "MDU6SXNzdWUyODcyMDY5NDk=", "number": 57, "title": "PM handling", "user": {"login": "MPagel", "id": 3179116, "node_id": "MDQ6VXNlcjMxNzkxMTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3179116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MPagel", "html_url": "https://github.com/MPagel", "followers_url": "https://api.github.com/users/MPagel/followers", "following_url": "https://api.github.com/users/MPagel/following{/other_user}", "gists_url": "https://api.github.com/users/MPagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/MPagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MPagel/subscriptions", "organizations_url": "https://api.github.com/users/MPagel/orgs", "repos_url": "https://api.github.com/users/MPagel/repos", "events_url": "https://api.github.com/users/MPagel/events{/privacy}", "received_events_url": "https://api.github.com/users/MPagel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T19:43:54Z", "updated_at": "2018-05-26T23:38:18Z", "closed_at": "2018-05-26T23:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "> the AM/PM are optional, and if PM is found then 12 hours will be added to the datetime object's hours amount - even if the hour is greater than 12 (for consistency.)\r\n\r\nI realize you've already chosen your poison here, but the \"add 12 always\" rule either needs an explicit exception, or it should just do away with the \"add 12 to PM values.\"  Why?\r\n\r\nnoon is 12:00PM.  15 minutes after noon is 12:15PM. 12 should NOT be added to these value, or they'll register as later than e.g. 9:24PM.\r\n\r\nIn fact, 12AM (and 12:15AM) should result in a SUBTRACTION of 12 hours, as it occurs prior to 1AM on the given day.\r\n\r\nBoth issues can be worked around by assuming in the presence of AM/PM indicators, a subtraction of 12 is done. So, the later adding of 12 hours for having \"PM\" would restore the timeline.\r\n\r\nSilly ancient peoples not inventing the concept of \"0\". Silly us for continuing to stick with a counter-intuitive notation.\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/55", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/55/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/55/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/55", "id": 278568221, "node_id": "MDU6SXNzdWUyNzg1NjgyMjE=", "number": 55, "title": "Cannot use { Character?", "user": {"login": "charliecliff", "id": 16039580, "node_id": "MDQ6VXNlcjE2MDM5NTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/16039580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charliecliff", "html_url": "https://github.com/charliecliff", "followers_url": "https://api.github.com/users/charliecliff/followers", "following_url": "https://api.github.com/users/charliecliff/following{/other_user}", "gists_url": "https://api.github.com/users/charliecliff/gists{/gist_id}", "starred_url": "https://api.github.com/users/charliecliff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charliecliff/subscriptions", "organizations_url": "https://api.github.com/users/charliecliff/orgs", "repos_url": "https://api.github.com/users/charliecliff/repos", "events_url": "https://api.github.com/users/charliecliff/events{/privacy}", "received_events_url": "https://api.github.com/users/charliecliff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T19:19:11Z", "updated_at": "2017-12-05T03:04:51Z", "closed_at": "2017-12-05T03:04:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "So.... you didn't list an escape character... so if my string contains \"{\", it just doesn't work?\r\n\r\n\r\nGREAT work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/54", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/54/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/54/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/54", "id": 272532424, "node_id": "MDU6SXNzdWUyNzI1MzI0MjQ=", "number": 54, "title": "Problem with findall in parse module", "user": {"login": "Sumant-Mahadik", "id": 33515669, "node_id": "MDQ6VXNlcjMzNTE1NjY5", "avatar_url": "https://avatars0.githubusercontent.com/u/33515669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sumant-Mahadik", "html_url": "https://github.com/Sumant-Mahadik", "followers_url": "https://api.github.com/users/Sumant-Mahadik/followers", "following_url": "https://api.github.com/users/Sumant-Mahadik/following{/other_user}", "gists_url": "https://api.github.com/users/Sumant-Mahadik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sumant-Mahadik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sumant-Mahadik/subscriptions", "organizations_url": "https://api.github.com/users/Sumant-Mahadik/orgs", "repos_url": "https://api.github.com/users/Sumant-Mahadik/repos", "events_url": "https://api.github.com/users/Sumant-Mahadik/events{/privacy}", "received_events_url": "https://api.github.com/users/Sumant-Mahadik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-09T11:34:21Z", "updated_at": "2017-12-14T02:03:02Z", "closed_at": "2017-12-14T02:03:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reference link : https://pypi.python.org/pypi/parse\r\n\r\ndata = \"\"\" 0 2 PRLI Def 666E00 B A 0 0\r\n1 2 PRLI Def 017000 B A 0 0\"\"\"\r\n\r\nfor x in parse.findall(\"{Id:^d} {Index:^d} {State:^} {Emulation:^} {ID:^} {NN:^} {PN:^} {ABTS:^d} {SRR:^d}\\n\", data):\r\nprint (\"====\", x.named)\r\n\r\nAbove code will and and gets hang(stuck) after printing first line.\r\nBut if we reduce number of columns then it will work fine.\r\nalso if there is difference in number of columns in data and pattern string then findall will hang.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/52", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/52/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/52/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/52", "id": 263579894, "node_id": "MDU6SXNzdWUyNjM1Nzk4OTQ=", "number": 52, "title": "Document behaviour when the template is ambiguous", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-06T21:43:49Z", "updated_at": "2017-12-14T02:09:22Z", "closed_at": "2017-12-14T02:09:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\r\n\r\n```\r\n>>> pattern = '{dir1}/{dir2}'\r\n>>> data = 'root/parent/subdir'\r\n>>> parse(pattern, data).named\r\n{'dir1': 'root', 'dir2': 'parent/subdir'}\r\n```\r\n\r\nBut `{'dir1': 'root/parent', 'dir2': 'subdir'}` is also fitting the pattern.  Is this behaviour is reliable, or should it be considered implementation detail?  I couldn't find it in the docs anywhere.  \r\n\r\nIs there anyway to coerce the result one way or the other? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/51", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/51/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/51/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/51", "id": 254444989, "node_id": "MDU6SXNzdWUyNTQ0NDQ5ODk=", "number": 51, "title": "Please add a license", "user": {"login": "hargup", "id": 2477788, "node_id": "MDQ6VXNlcjI0Nzc3ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2477788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hargup", "html_url": "https://github.com/hargup", "followers_url": "https://api.github.com/users/hargup/followers", "following_url": "https://api.github.com/users/hargup/following{/other_user}", "gists_url": "https://api.github.com/users/hargup/gists{/gist_id}", "starred_url": "https://api.github.com/users/hargup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hargup/subscriptions", "organizations_url": "https://api.github.com/users/hargup/orgs", "repos_url": "https://api.github.com/users/hargup/repos", "events_url": "https://api.github.com/users/hargup/events{/privacy}", "received_events_url": "https://api.github.com/users/hargup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T19:37:21Z", "updated_at": "2017-08-31T19:41:45Z", "closed_at": "2017-08-31T19:41:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use this project but can't because there is no license. [No license on a project means all rights are reserved the author of the code, that prevents any use of code by other people](https://opensource.stackexchange.com/a/1721/787). Please consider adding a license. You can use https://choosealicense.com/ or https://tldrlegal.com/ to determine what license is right for you.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/50", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/50/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/50/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/50", "id": 236488232, "node_id": "MDU6SXNzdWUyMzY0ODgyMzI=", "number": 50, "title": "Greedy matching causes subsequent specifiers to be included in first match", "user": {"login": "jagguli", "id": 74574, "node_id": "MDQ6VXNlcjc0NTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/74574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jagguli", "html_url": "https://github.com/jagguli", "followers_url": "https://api.github.com/users/jagguli/followers", "following_url": "https://api.github.com/users/jagguli/following{/other_user}", "gists_url": "https://api.github.com/users/jagguli/gists{/gist_id}", "starred_url": "https://api.github.com/users/jagguli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jagguli/subscriptions", "organizations_url": "https://api.github.com/users/jagguli/orgs", "repos_url": "https://api.github.com/users/jagguli/repos", "events_url": "https://api.github.com/users/jagguli/events{/privacy}", "received_events_url": "https://api.github.com/users/jagguli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-16T13:48:16Z", "updated_at": "2017-06-18T22:55:58Z", "closed_at": "2017-06-18T22:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```In [21]: from parse import compile\r\n\r\nIn [22]: p = compile('I make a POST request to \"{url_path_segment}\"')\r\n\r\nIn [23]: p.parse('I make a POST request to \"{url_path}\" with file \"{filename}\" as \"{key}\"')\r\nOut[23]: <Result () {'url_path_segment': '{url_path}\" with file \"{filename}\" as \"{key}'}>\r\n\r\n```\r\n\r\nexpected \r\n\r\n```None```\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/48", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/48/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/48/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/48", "id": 233645366, "node_id": "MDU6SXNzdWUyMzM2NDUzNjY=", "number": 48, "title": "possible to specify \"hungry\" format specs? ", "user": {"login": "Ricyteach", "id": 4923361, "node_id": "MDQ6VXNlcjQ5MjMzNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4923361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ricyteach", "html_url": "https://github.com/Ricyteach", "followers_url": "https://api.github.com/users/Ricyteach/followers", "following_url": "https://api.github.com/users/Ricyteach/following{/other_user}", "gists_url": "https://api.github.com/users/Ricyteach/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ricyteach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ricyteach/subscriptions", "organizations_url": "https://api.github.com/users/Ricyteach/orgs", "repos_url": "https://api.github.com/users/Ricyteach/repos", "events_url": "https://api.github.com/users/Ricyteach/events{/privacy}", "received_events_url": "https://api.github.com/users/Ricyteach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-05T16:43:22Z", "updated_at": "2017-06-06T00:16:31Z", "closed_at": "2017-06-06T00:16:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think this is more of a question, but it may be an issue as well. \r\n\r\nIf I format the following format spec string with `values`: \r\n\r\n    fmat='{}{}'\r\n    values=['a','b']\r\n\r\nI of course get this result: \r\n\r\n    >>> fmat.format(*values)\r\n    'ab'\r\n\r\nAnd `parse` handles this as expected. \r\n\r\n    >>> list(parse(fmat,'ab'))\r\n    ['a', 'b']\r\n\r\nHowever, I could get the same result by supplying these arguments (the final arg just being an empty string): \r\n\r\n    >>> values=['ab','']\r\n    >>> fmat.format(*values)\r\n    'ab'\r\n\r\nThe default `parse` behavior becomes a bit more clear when I do this: \r\n\r\n    >>> list(parse('{}{}', 'abcdef'))\r\n    ['a', 'bcdef']\r\n\r\nSo it seems that the format fields \"eat\" as little as possible. This definitely makes sense as a default behavior. \r\n\r\nIf I naively supply the optional third argument to `parse`, in an attempt to signal that a field should be as hungry as possible and \"eat\" any string (`str`) that it finds (if it can), I get the same result: \r\n\r\n    >>> list(parse('{:s}{:s}', 'abcdef', dict(s=str))\r\n    ['a', 'bcdef'] # rather than ['abcdef', '']\r\n\r\nAny ideas on how to get the last argument to be the empty string using the existing API? \r\n\r\nI do understand that an option like this would be tough to implement. For example: how should this be handled? \r\n\r\n    >>> list(parse('{:s}{:s}{:s}{:d}{:d}', 'abc123', dict(s=str), hungry=True))\r\n\r\nShould it return `None`, e.g.?:\r\n\r\n    ['abc123','','', ERROR, ERROR] # errors because no integers to eat after first string eats everything\r\n\r\nOr should it pick out the integers first and leave the leftovers for the other fields (i.e., integers are hungrier than strings)? \r\n\r\n    ['abc','','', 12, 3]\r\n\r\n(NOTE in the last example the integers  would also be \"hungry\", but not hungry enough to cause an error; i.e., integers are hungrier than strings, but not more hungry than each other.) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/42", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/42/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/42/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/42", "id": 232404814, "node_id": "MDU6SXNzdWUyMzI0MDQ4MTQ=", "number": 42, "title": "hex letters are considered \"digits\", really?", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-30T22:50:16Z", "updated_at": "2017-06-01T00:20:30Z", "closed_at": "2017-06-01T00:20:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just got bitten by this, I think it's a bug... \r\n\r\n```\r\n>>> parse('wat {:d} wat', 'wat 12345 wat')\r\n<Result (12345,) {}>\r\n>>> parse('wat {:d} wat', 'wat 12f45 wat')\r\n<Result (1245,) {}>\r\n>>> parse('wat {:d} wat', 'wat 12g45 wat')\r\n>>> parse('wat {:d} wat', 'wat ff3ff wat')\r\n<Result (3,) {}>\r\n>>> parse('wat {:d} wat', 'wat fffff wat')\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-54-91053c27d470> in <module>()\r\n----> 1 parse('wat {:d} wat', 'wat fffff wat')\r\n\r\n/home/wglenn/.virtualenvs/scratch/lib/python3.6/site-packages/parse.py in parse(format, string, extra_types, evaluate_result)\r\n   1113     In the case there is no match parse() will return None.\r\n   1114     '''\r\n-> 1115     return Parser(format, extra_types=extra_types).parse(string, evaluate_result=evaluate_result)\r\n   1116 \r\n   1117 \r\n\r\n/home/wglenn/.virtualenvs/scratch/lib/python3.6/site-packages/parse.py in parse(self, string, evaluate_result)\r\n    695 \r\n    696         if evaluate_result:\r\n--> 697             return self.evaluate_result(m)\r\n    698         else:\r\n    699             return Match(self, m)\r\n\r\n/home/wglenn/.virtualenvs/scratch/lib/python3.6/site-packages/parse.py in evaluate_result(self, m)\r\n    762         for n in self._fixed_fields:\r\n    763             if n in self._type_conversions:\r\n--> 764                 fixed_fields[n] = self._type_conversions[n](fixed_fields[n], m)\r\n    765         fixed_fields = tuple(fixed_fields[n] for n in self._fixed_fields)\r\n    766 \r\n\r\n/home/wglenn/.virtualenvs/scratch/lib/python3.6/site-packages/parse.py in f(string, match, base)\r\n    412         chars = CHARS[:base]\r\n    413         string = re.sub('[^%s]' % chars, '', string.lower())\r\n--> 414         return sign * int(string, base)\r\n    415     return f\r\n    416 \r\n\r\nValueError: invalid literal for int() with base 10: ''\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/41", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/41/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/41/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/41", "id": 226778977, "node_id": "MDU6SXNzdWUyMjY3Nzg5Nzc=", "number": 41, "title": "Difference in `parse` and `search`", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-06T15:12:40Z", "updated_at": "2017-12-14T02:12:54Z", "closed_at": "2017-12-14T02:12:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know that `parse.search` should be used to match a pattern at any position in the string whereas `parse.parse` has to match the string exactly.\r\n\r\nThe following issue came up some days ago in the radish project: https://github.com/radish-bdd/radish/issues/106\r\nEspecially this comment might be interesting: https://github.com/radish-bdd/radish/issues/106#issuecomment-299503624\r\n\r\n> However, this gives as interesting outcome:\r\n>  ```python\r\n> >>> patt = parse.compile('I have a {}')\r\n> >>> patt.search('I have a apple')\r\n> <Result ('a',) {}>\r\n> >>> patt.parse('I have a apple')\r\n> <Result ('apple',) {}>\r\n> ```\r\n>\r\n> and\r\n>\r\n > ```python\r\n> >>> patt = parse.compile('I {} a {}')\r\n> >>> patt.parse('I have a apple')\r\n> <Result ('have', 'apple') {}>\r\n> >>> patt.search('I have a apple')\r\n> <Result ('have', 'a') {}>\r\n> ```\r\n\r\nAs you can see `search` and `parse` are giving different results. In this example it indeed be possible to just use `parse` - but in a lot of cases we use this library for is not.\r\n\r\nIs this intended behavior?\r\n\r\n*Adding @rscrimojr*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/40", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/40/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/40/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/40", "id": 214715582, "node_id": "MDU6SXNzdWUyMTQ3MTU1ODI=", "number": 40, "title": "Cannot parse concatenated string items", "user": {"login": "ymoisan", "id": 7468595, "node_id": "MDQ6VXNlcjc0Njg1OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7468595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymoisan", "html_url": "https://github.com/ymoisan", "followers_url": "https://api.github.com/users/ymoisan/followers", "following_url": "https://api.github.com/users/ymoisan/following{/other_user}", "gists_url": "https://api.github.com/users/ymoisan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymoisan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymoisan/subscriptions", "organizations_url": "https://api.github.com/users/ymoisan/orgs", "repos_url": "https://api.github.com/users/ymoisan/repos", "events_url": "https://api.github.com/users/ymoisan/events{/privacy}", "received_events_url": "https://api.github.com/users/ymoisan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-16T14:07:46Z", "updated_at": "2018-10-03T22:23:30Z", "closed_at": "2018-10-03T22:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this is a bug or just me but here is my use case.  I have two items that are concatenated in a filename : a date (YYYMMDD) and a 2-digit string (model_run).  I can't find a way to specify a pattern that will allow parsing of the two concatenated elements : \r\n\r\n```python\r\n>>> filename_pattern = 'Some_string_{wx_variable}_ps2.5km_{YYYYMMDD}{model_run}_P{forecast_hour}-00.extension'\r\n>>> afile = 'Some_string_A_variable_ps2.5km_1999121100_P012-00.extension'\r\n>>> r = parse(filename_pattern, afile)\r\n>>> r\r\n<Result () {'forecast_hour': '012', 'wx_variable': 'A_variable', 'model_run': '999121100', 'YYYYMMDD': '1'}>\r\n>>> r.named['YYYYMMDD']\r\n'1'\r\n>>> r.named['model_run']\r\n'999121100'\r\n```\r\nHow can I get the parsed items I expect, i.e. ` r.named['YYYYMMDD'] = '19991211'` and  ` r.named['model_run'] = '00'` ?  \r\n\r\nI would like to avoid fiddling with the filename_pattern before parsing (e.g. add some format options like `width`, if that is even possible) because that would defeat the purpose of having a file pattern to begin with IMO.\r\n\r\nThanx !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/39", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/39/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/39/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/39", "id": 210981548, "node_id": "MDU6SXNzdWUyMTA5ODE1NDg=", "number": 39, "title": "Curious: why wasn't stdlib `string.Formatter().parse` used", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-01T05:09:42Z", "updated_at": "2017-03-01T16:42:38Z", "closed_at": "2017-03-01T05:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mostly just curious, not an actual bug.\r\n\r\nI'm working on a (tangentially) related idea of mine to rewrite format strings.\r\n\r\nhttps://docs.python.org/3/library/string.html#string.Formatter.parse", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/37", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/37/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/37/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/37", "id": 207307796, "node_id": "MDU6SXNzdWUyMDczMDc3OTY=", "number": 37, "title": "Lookup pattern but do not generate results", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-13T18:57:57Z", "updated_at": "2017-02-28T07:09:11Z", "closed_at": "2017-02-28T07:09:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a way to search for a string but not generate the results?\r\n\r\nThis would be especially useful when I have custom type converters but want to evaluate those later. I just want to make search my string is valid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/35", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/35/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/35/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/35", "id": 123783304, "node_id": "MDU6SXNzdWUxMjM3ODMzMDQ=", "number": 35, "title": "Support text alignment", "user": {"login": "dijxtra", "id": 426907, "node_id": "MDQ6VXNlcjQyNjkwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/426907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dijxtra", "html_url": "https://github.com/dijxtra", "followers_url": "https://api.github.com/users/dijxtra/followers", "following_url": "https://api.github.com/users/dijxtra/following{/other_user}", "gists_url": "https://api.github.com/users/dijxtra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dijxtra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dijxtra/subscriptions", "organizations_url": "https://api.github.com/users/dijxtra/orgs", "repos_url": "https://api.github.com/users/dijxtra/repos", "events_url": "https://api.github.com/users/dijxtra/events{/privacy}", "received_events_url": "https://api.github.com/users/dijxtra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-24T09:55:00Z", "updated_at": "2019-07-16T22:33:31Z", "closed_at": "2019-07-16T22:33:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Format supports text aligning, but parser does not. It'd be nice if it did :-)\n\nExample:\n\n```\nfrom parse import parse\nfmt = \"{:>6}{:>7}\"\nprint((\"three\", \"four\") == parse(fmt, fmt.format(\"three\", \"four\"))) #this should be True\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/32", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/32/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/32/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/32", "id": 113208652, "node_id": "MDU6SXNzdWUxMTMyMDg2NTI=", "number": 32, "title": "Fixed point should return Decimal", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-25T05:54:25Z", "updated_at": "2018-05-27T00:22:49Z", "closed_at": "2018-05-27T00:22:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "fixed point numbers should return a [Decimal](https://docs.python.org/3/library/decimal.html#decimal-objects)\n\nformat `f` is currently used for fixed point numbers, and returns a float.  Changing that would break many things, so suggest this new mode is given the upper case letter `F`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/31", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/31/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/31/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/31", "id": 113208433, "node_id": "MDU6SXNzdWUxMTMyMDg0MzM=", "number": 31, "title": "Result.__contains__ not implemented", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-25T05:48:46Z", "updated_at": "2019-01-22T23:30:35Z", "closed_at": "2019-01-22T23:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Result.__getitem__` is implemented to perform lookup using index or key, but `Result` doesnt implement `__contains__` and doesnt inherit from `abc.Mapping`\n\nAs a result, the following fails:\n\n``` python\n    if 'foo' in result:\n         blah['foo'] = result['foo']\n```\n\ninstead the following needs to be used:\n\n``` python\n    try:\n         blah['foo'] = result['foo']\n    except KeyError:\n        pass\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/29", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/29/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/29/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/29", "id": 93339546, "node_id": "MDU6SXNzdWU5MzMzOTU0Ng==", "number": 29, "title": "Unicode support?", "user": {"login": "jarek", "id": 47415, "node_id": "MDQ6VXNlcjQ3NDE1", "avatar_url": "https://avatars1.githubusercontent.com/u/47415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarek", "html_url": "https://github.com/jarek", "followers_url": "https://api.github.com/users/jarek/followers", "following_url": "https://api.github.com/users/jarek/following{/other_user}", "gists_url": "https://api.github.com/users/jarek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarek/subscriptions", "organizations_url": "https://api.github.com/users/jarek/orgs", "repos_url": "https://api.github.com/users/jarek/repos", "events_url": "https://api.github.com/users/jarek/events{/privacy}", "received_events_url": "https://api.github.com/users/jarek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-06T18:09:32Z", "updated_at": "2017-05-07T01:31:25Z", "closed_at": "2017-05-07T01:31:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ctrl+F \"unicode\" on README.rst here and on https://pypi.python.org/pypi/parse doesn't find anything. parse appears to hang indefinitely on unicode strings (as with e.g. `from __future__ import unicode_literals`). Is that the case? Is there any expectation it'll work in the future?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/25", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/25/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/25/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/25", "id": 50052557, "node_id": "MDU6SXNzdWU1MDA1MjU1Nw==", "number": 25, "title": "Allow element indexes in field names", "user": {"login": "rubenrua", "id": 195745, "node_id": "MDQ6VXNlcjE5NTc0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/195745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubenrua", "html_url": "https://github.com/rubenrua", "followers_url": "https://api.github.com/users/rubenrua/followers", "following_url": "https://api.github.com/users/rubenrua/following{/other_user}", "gists_url": "https://api.github.com/users/rubenrua/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubenrua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubenrua/subscriptions", "organizations_url": "https://api.github.com/users/rubenrua/orgs", "repos_url": "https://api.github.com/users/rubenrua/repos", "events_url": "https://api.github.com/users/rubenrua/events{/privacy}", "received_events_url": "https://api.github.com/users/rubenrua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-25T16:45:54Z", "updated_at": "2017-02-27T00:16:46Z", "closed_at": "2017-02-27T00:16:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The format field names can have element indexes. See the [python documentation](https://docs.python.org/2/library/string.html#format-string-syntax).\n\n```\nfield_name        ::=  arg_name (\".\" attribute_name | \"[\" element_index \"]\")*\narg_name          ::=  [identifier | integer]\nattribute_name    ::=  identifier\nelement_index     ::=  integer | index_string\n```\n\nBut parse doesn't support it. Example:\n\n``` python\n>>> \"test: {dict[0]}\".format(dict=[\"red\"])\n'test: red'\n>>> \"test: {dict[color0]}\".format(dict={\"color0\":\"red\"})\n'test: red'\n\n>>> parse.parse(\"test: {dict}\", \"test: blue\")\n<Result () {'dict': 'blue'}>\n>>> parse.parse(\"test: {dict[0]}\", \"test: blue\")\nNone\n# return must be <Result () {'dict[0]': 'blue'}>\n>>> parse.parse(\"test: {dict[color0]}\", \"test: blue\")\nNone\n# return must be <Result () {'dict[color0]': 'blue'}>\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/22", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/22/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/22/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/22", "id": 32290139, "node_id": "MDU6SXNzdWUzMjI5MDEzOQ==", "number": 22, "title": "Pipe symbol not escaped", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-26T14:26:49Z", "updated_at": "2014-05-02T06:46:47Z", "closed_at": "2014-05-02T06:46:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Literal text with a `|` symbol in it is not handled correctly:\n\n``` python\n>>> search('| {:d}', '| 10')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/mj/Development/venvs/stackoverflow-2.7/lib/python2.7/site-packages/parse.py\", line 1041, in search\n    return Parser(format, extra_types=extra_types).search(string, pos, endpos)\n  File \"/Users/mj/Development/venvs/stackoverflow-2.7/lib/python2.7/site-packages/parse.py\", line 678, in search\n    return self._generate_result(m)\n  File \"/Users/mj/Development/venvs/stackoverflow-2.7/lib/python2.7/site-packages/parse.py\", line 699, in _generate_result\n    fixed_fields[n] = self._type_conversions[n](fixed_fields[n], m)\n  File \"/Users/mj/Development/venvs/stackoverflow-2.7/lib/python2.7/site-packages/parse.py\", line 375, in f\n    if string[0] == '-':\nTypeError: 'NoneType' object has no attribute '__getitem__'\n```\n\nEscaping the `|` character explicitly makes it work:\n\n``` python\n>>> search('\\\\| {:d}', '| 10')\n<Result (10,) {}>\n```\n\nLooking over the code base it should be trivial to fix by adding `|` to he `REGEX_SAFETY` pattern. However, I do wonder why [`re.escape()`](https://docs.python.org/2/library/re.html#re.escape) isn't used instead to escape regular expression metacharacters instead here. Am I missing something, does `re.escape()` escape too much?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/21", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/21/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/21/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/21", "id": 31702556, "node_id": "MDU6SXNzdWUzMTcwMjU1Ng==", "number": 21, "title": "Is lazy matching possible?", "user": {"login": "midopa", "id": 1522141, "node_id": "MDQ6VXNlcjE1MjIxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1522141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/midopa", "html_url": "https://github.com/midopa", "followers_url": "https://api.github.com/users/midopa/followers", "following_url": "https://api.github.com/users/midopa/following{/other_user}", "gists_url": "https://api.github.com/users/midopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/midopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/midopa/subscriptions", "organizations_url": "https://api.github.com/users/midopa/orgs", "repos_url": "https://api.github.com/users/midopa/repos", "events_url": "https://api.github.com/users/midopa/events{/privacy}", "received_events_url": "https://api.github.com/users/midopa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-17T05:34:35Z", "updated_at": "2014-05-03T00:07:52Z", "closed_at": "2014-05-03T00:07:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the patterns:\n\n```\na = \"{hello} world\"\nb = \"hello world\"\nparse(a, 'well hello there world')  # matches\nparse(b, 'well hello there world')  # fails\n```\n\nIs there a way to get a to fail without specifying custom formats?\n\nAlternatively, is there a way to override the default format type/matching behavior?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/20", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/20/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/20/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/20", "id": 21654597, "node_id": "MDU6SXNzdWUyMTY1NDU5Nw==", "number": 20, "title": "Parser constructor should allow to set the regular expression flags (re flags)", "user": {"login": "jenisys", "id": 371945, "node_id": "MDQ6VXNlcjM3MTk0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/371945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenisys", "html_url": "https://github.com/jenisys", "followers_url": "https://api.github.com/users/jenisys/followers", "following_url": "https://api.github.com/users/jenisys/following{/other_user}", "gists_url": "https://api.github.com/users/jenisys/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenisys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenisys/subscriptions", "organizations_url": "https://api.github.com/users/jenisys/orgs", "repos_url": "https://api.github.com/users/jenisys/repos", "events_url": "https://api.github.com/users/jenisys/events{/privacy}", "received_events_url": "https://api.github.com/users/jenisys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-27T15:40:49Z", "updated_at": "2018-05-27T00:15:49Z", "closed_at": "2018-05-27T00:15:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the Parser class always applies \"re.IGNORECASE\" internally where needed. This may not be always desired. Therefore, it would be best, if the constructor of Parser would allow to provide own \"re flags\" or disable the \"re.IGNORECASE\" flag.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/18", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/18/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/18/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/18", "id": 21654370, "node_id": "MDU6SXNzdWUyMTY1NDM3MA==", "number": 18, "title": "Optional \"group_count\" attribute for user-defined type converters", "user": {"login": "jenisys", "id": 371945, "node_id": "MDQ6VXNlcjM3MTk0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/371945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenisys", "html_url": "https://github.com/jenisys", "followers_url": "https://api.github.com/users/jenisys/followers", "following_url": "https://api.github.com/users/jenisys/following{/other_user}", "gists_url": "https://api.github.com/users/jenisys/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenisys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenisys/subscriptions", "organizations_url": "https://api.github.com/users/jenisys/orgs", "repos_url": "https://api.github.com/users/jenisys/repos", "events_url": "https://api.github.com/users/jenisys/events{/privacy}", "received_events_url": "https://api.github.com/users/jenisys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1204183326, "node_id": "MDU6TGFiZWwxMjA0MTgzMzI2", "url": "https://api.github.com/repos/r1chardj0n3s/parse/labels/bug", "name": "bug", "color": "ff6e6e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-27T15:26:12Z", "updated_at": "2019-07-18T20:28:17Z", "closed_at": "2019-07-18T20:28:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current \"parse\" module has as small deficiency (or bug).\nWhen user-defined type converter uses regular expression grouping in its pattern (attribute), the extracted result parameters are partly wrong in some params because this group index offset is not considered.\nNOTE: This problem occurs only for fixed (unnamed) fields, named fields are OK.\n\n``` python\n# FILE: parse.py\n# NECESSARY CHANGES:\n\u2026\n        # -- Parser._handle_field()\n        ...\n        if type in self._extra_types:\n            type_converter = self._extra_types[type]\n            s = getattr(type_converter, 'pattern', r'.+?')\n            # -- EXTENSION: group_count attribute\n            group_count = getattr(type_converter, 'group_count', 0)\n            self._group_index += group_count\n            # -- EXTENSION-END\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/17", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/17/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/17/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/17", "id": 20953911, "node_id": "MDU6SXNzdWUyMDk1MzkxMQ==", "number": 17, "title": "Parse chokes on parse(\"{n} {n}, \"x x\")", "user": {"login": "Narsil", "id": 204321, "node_id": "MDQ6VXNlcjIwNDMyMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/204321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Narsil", "html_url": "https://github.com/Narsil", "followers_url": "https://api.github.com/users/Narsil/followers", "following_url": "https://api.github.com/users/Narsil/following{/other_user}", "gists_url": "https://api.github.com/users/Narsil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Narsil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Narsil/subscriptions", "organizations_url": "https://api.github.com/users/Narsil/orgs", "repos_url": "https://api.github.com/users/Narsil/repos", "events_url": "https://api.github.com/users/Narsil/events{/privacy}", "received_events_url": "https://api.github.com/users/Narsil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-14T12:34:58Z", "updated_at": "2013-10-15T15:24:01Z", "closed_at": "2013-10-15T00:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The parser is apparently in an infinite loop.\n\nI think it should at least say that this format is not parsable.\nAt best, it should do:\n\n```\nparse(\"{n} {n}\", \"x x\") -> {\"n\", \"x\"}\nparse(\"{n} {n}\", \"x y\") -> None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/16", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/16/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/16/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/16", "id": 20063143, "node_id": "MDU6SXNzdWUyMDA2MzE0Mw==", "number": 16, "title": "Bug in {:ta} and {:tg} parsing for AM/PM", "user": {"login": "donovandak", "id": 3086927, "node_id": "MDQ6VXNlcjMwODY5Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3086927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donovandak", "html_url": "https://github.com/donovandak", "followers_url": "https://api.github.com/users/donovandak/followers", "following_url": "https://api.github.com/users/donovandak/following{/other_user}", "gists_url": "https://api.github.com/users/donovandak/gists{/gist_id}", "starred_url": "https://api.github.com/users/donovandak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donovandak/subscriptions", "organizations_url": "https://api.github.com/users/donovandak/orgs", "repos_url": "https://api.github.com/users/donovandak/repos", "events_url": "https://api.github.com/users/donovandak/events{/privacy}", "received_events_url": "https://api.github.com/users/donovandak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-25T19:10:37Z", "updated_at": "2018-05-26T23:32:19Z", "closed_at": "2013-10-15T00:23:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the :ta parsing format, the hour between Noon and 13:00 (aka 1:00PM) generates a ValueError in datetime because hour must be in the range 0..23.  \n\nExample:\n\n> > > parse.**version**\n> > > '1.6.2'\n> > > \n> > > parse.parse('Meet at {:tg}', 'Meet at 1/2/2011 1:00 PM')\n> > > <Result (datetime.datetime(2011, 2, 1, 13, 0),) {}>\n\nexample from the documentation.  Now, changing this to 12:45 pm doesn't work.\n\n> > > parse.parse('Meet at {:tg}', 'Meet at 1/2/2011 12:45 PM')\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"//anaconda/lib/python2.7/site-packages/parse-1.6.2-py2.7.egg/parse.py\", line 983, in parse\n> > >     return Parser(format, extra_types=extra_types).parse(string)\n> > >   File \"//anaconda/lib/python2.7/site-packages/parse-1.6.2-py2.7.egg/parse.py\", line 640, in parse\n> > >     return self._generate_result(m)\n> > >   File \"//anaconda/lib/python2.7/site-packages/parse-1.6.2-py2.7.egg/parse.py\", line 678, in _generate_result\n> > >     fixed_fields[n] = self._type_conversions[n](fixed_fields[n], m)\n> > >   File \"//anaconda/lib/python2.7/site-packages/parse-1.6.2-py2.7.egg/parse.py\", line 518, in date_convert\n> > >     d = datetime(y, m, d, H, M, S, u, tzinfo=tz)\n> > > ValueError: hour must be in 0..23\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/15", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/15/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/15/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/15", "id": 16030519, "node_id": "MDU6SXNzdWUxNjAzMDUxOQ==", "number": 15, "title": "Percent format with decimal limit isn't supported", "user": {"login": "neckcen", "id": 620960, "node_id": "MDQ6VXNlcjYyMDk2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/620960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neckcen", "html_url": "https://github.com/neckcen", "followers_url": "https://api.github.com/users/neckcen/followers", "following_url": "https://api.github.com/users/neckcen/following{/other_user}", "gists_url": "https://api.github.com/users/neckcen/gists{/gist_id}", "starred_url": "https://api.github.com/users/neckcen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neckcen/subscriptions", "organizations_url": "https://api.github.com/users/neckcen/orgs", "repos_url": "https://api.github.com/users/neckcen/repos", "events_url": "https://api.github.com/users/neckcen/events{/privacy}", "received_events_url": "https://api.github.com/users/neckcen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-06-26T13:15:23Z", "updated_at": "2014-10-16T05:59:55Z", "closed_at": "2014-10-16T05:59:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following works: `{field:%}` but adding a decimal limit like `{field:.2%}` does not and throws an exception: \n\n```\n  File \"/usr/local/lib/python3.2/dist-packages/parse.py\", line 983, in parse\n    return Parser(format, extra_types=extra_types).parse(string)\n  File \"/usr/local/lib/python3.2/dist-packages/parse.py\", line 586, in __init__\n    self._expression = self._generate_expression()\n  File \"/usr/local/lib/python3.2/dist-packages/parse.py\", line 717, in _generate_expression\n    e.append(self._handle_field(part))\n  File \"/usr/local/lib/python3.2/dist-packages/parse.py\", line 770, in _handle_field\n    format = extract_format(format, self._extra_types)\n  File \"/usr/local/lib/python3.2/dist-packages/parse.py\", line 562, in extract_format\n    raise ValueError('type %r not recognised' % type)\n```\n\nUnsure whether this is a bug or intended.\n\nThanks for the extremely quick fix on the logging issue by the way!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/14", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/14/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/14/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/14", "id": 15819122, "node_id": "MDU6SXNzdWUxNTgxOTEyMg==", "number": 14, "title": "Logging is done with root logger.", "user": {"login": "neckcen", "id": 620960, "node_id": "MDQ6VXNlcjYyMDk2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/620960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neckcen", "html_url": "https://github.com/neckcen", "followers_url": "https://api.github.com/users/neckcen/followers", "following_url": "https://api.github.com/users/neckcen/following{/other_user}", "gists_url": "https://api.github.com/users/neckcen/gists{/gist_id}", "starred_url": "https://api.github.com/users/neckcen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neckcen/subscriptions", "organizations_url": "https://api.github.com/users/neckcen/orgs", "repos_url": "https://api.github.com/users/neckcen/repos", "events_url": "https://api.github.com/users/neckcen/events{/privacy}", "received_events_url": "https://api.github.com/users/neckcen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-20T19:43:55Z", "updated_at": "2013-06-21T00:12:56Z", "closed_at": "2013-06-21T00:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently parse uses `logging.debug()`; this sends the message to the root logger making it hard to filter. It would be great if parse could use `logging.getLogger(__name__).debug()` or `log.debug()` (log is assigned near the start but never used).\n\nThanks for that great module!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/11", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/11/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/11/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/11", "id": 8156087, "node_id": "MDU6SXNzdWU4MTU2MDg3", "number": 11, "title": "Add an optional cardinality field for parsing at end of the parse schema", "user": {"login": "jenisys", "id": 371945, "node_id": "MDQ6VXNlcjM3MTk0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/371945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenisys", "html_url": "https://github.com/jenisys", "followers_url": "https://api.github.com/users/jenisys/followers", "following_url": "https://api.github.com/users/jenisys/following{/other_user}", "gists_url": "https://api.github.com/users/jenisys/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenisys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenisys/subscriptions", "organizations_url": "https://api.github.com/users/jenisys/orgs", "repos_url": "https://api.github.com/users/jenisys/repos", "events_url": "https://api.github.com/users/jenisys/events{/privacy}", "received_events_url": "https://api.github.com/users/jenisys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-06T23:15:38Z", "updated_at": "2012-12-03T05:21:23Z", "closed_at": "2012-12-03T05:21:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`parse` uses currently the same field schema like the `str.format()` function.\nBut parsing problems are often slightly different (and more complicated) compared to output formatting problems. I stumbled over a use case where it would be rather nice to have an optional cardinality field after the type field.\n\nEXAMPLE:\n\n```\n#!python\nschema = \"I met {person:Person?} ...\"  #< OPTIONAL DATA: Zero or one cardinality\nschema = \"I am meeting with {persons:Person+}\"  #< MANY: One or more cardinality\nschema = \"I am meeting with {persons:Person*}\"  #< MANY: Zero or more cardinality\n```\n\nThe \"many solution\" is basically a comma-separated list of items for this datatype, like:\n\n```\n\"I am meeting with Alice, Bob, Charly\"\n```\n\nI have a canned, working solution (if my pull-request for the `pattern` attribute is accepted) that will allow to solve the underlying cardinality problem above: Generating a regular expression for the cardinality by using the regular expression of a user-defined (or built-in) data type.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/9", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/9/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/9/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/9", "id": 7539332, "node_id": "MDU6SXNzdWU3NTM5MzMy", "number": 9, "title": "Issue with quoting and question marks: parse('\"{}\"?', '\"teststr\"?')", "user": {"login": "ysangkok", "id": 284023, "node_id": "MDQ6VXNlcjI4NDAyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/284023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysangkok", "html_url": "https://github.com/ysangkok", "followers_url": "https://api.github.com/users/ysangkok/followers", "following_url": "https://api.github.com/users/ysangkok/following{/other_user}", "gists_url": "https://api.github.com/users/ysangkok/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysangkok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysangkok/subscriptions", "organizations_url": "https://api.github.com/users/ysangkok/orgs", "repos_url": "https://api.github.com/users/ysangkok/repos", "events_url": "https://api.github.com/users/ysangkok/events{/privacy}", "received_events_url": "https://api.github.com/users/ysangkok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-10-12T10:38:52Z", "updated_at": "2012-10-15T23:29:12Z", "closed_at": "2012-10-15T23:29:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> '\"{}\"?'.format(\"teststr\")\n'\"teststr\"?'\n>>> parse('\"{}\"?', '\"teststr\"?')\n<Result ('teststr\"?',) {}>\n```\n\nI would like to match only \"teststr\".  Am I doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/7", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/7/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/7/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/7", "id": 7186019, "node_id": "MDU6SXNzdWU3MTg2MDE5", "number": 7, "title": "Cannot use name with ti specifier", "user": {"login": "quantoid", "id": 672489, "node_id": "MDQ6VXNlcjY3MjQ4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/672489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantoid", "html_url": "https://github.com/quantoid", "followers_url": "https://api.github.com/users/quantoid/followers", "following_url": "https://api.github.com/users/quantoid/following{/other_user}", "gists_url": "https://api.github.com/users/quantoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantoid/subscriptions", "organizations_url": "https://api.github.com/users/quantoid/orgs", "repos_url": "https://api.github.com/users/quantoid/repos", "events_url": "https://api.github.com/users/quantoid/events{/privacy}", "received_events_url": "https://api.github.com/users/quantoid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-09-27T14:22:21Z", "updated_at": "2012-09-28T06:43:14Z", "closed_at": "2012-09-28T01:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "This doesn't work:\n\n```\n>>> parse.parse('on {date:ti}', 'on 2012-09-17')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"build\\bdist.win-amd64\\egg\\parse.py\", line 849, in parse\n  File \"build\\bdist.win-amd64\\egg\\parse.py\", line 526, in parse\n  File \"build\\bdist.win-amd64\\egg\\parse.py\", line 572, in _generate_result\nKeyError: 'date'\n```\n\nThis does work:\n\n```\n>>> parse.parse('on {:ti}', 'on 2012-09-17')\n<Result (datetime.datetime(2012, 9, 17, 0, 0),) {}>\n```\n\nDoesn't matter what name you use or what else is in the pattern, it always throws a KeyError.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/3", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/3/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/3/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/3", "id": 2315225, "node_id": "MDU6SXNzdWUyMzE1MjI1", "number": 3, "title": "Add search() and findall()", "user": {"login": "r1chardj0n3s", "id": 663366, "node_id": "MDQ6VXNlcjY2MzM2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/663366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r1chardj0n3s", "html_url": "https://github.com/r1chardj0n3s", "followers_url": "https://api.github.com/users/r1chardj0n3s/followers", "following_url": "https://api.github.com/users/r1chardj0n3s/following{/other_user}", "gists_url": "https://api.github.com/users/r1chardj0n3s/gists{/gist_id}", "starred_url": "https://api.github.com/users/r1chardj0n3s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r1chardj0n3s/subscriptions", "organizations_url": "https://api.github.com/users/r1chardj0n3s/orgs", "repos_url": "https://api.github.com/users/r1chardj0n3s/repos", "events_url": "https://api.github.com/users/r1chardj0n3s/events{/privacy}", "received_events_url": "https://api.github.com/users/r1chardj0n3s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-11-22T07:25:38Z", "updated_at": "2011-11-23T02:25:36Z", "closed_at": "2011-11-23T02:25:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "More than just match! findall() should be an iterator.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/2", "repository_url": "https://api.github.com/repos/r1chardj0n3s/parse", "labels_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/2/comments", "events_url": "https://api.github.com/repos/r1chardj0n3s/parse/issues/2/events", "html_url": "https://github.com/r1chardj0n3s/parse/issues/2", "id": 2310731, "node_id": "MDU6SXNzdWUyMzEwNzMx", "number": 2, "title": "Add parsing of other things (add requests here)", "user": {"login": "r1chardj0n3s", "id": 663366, "node_id": "MDQ6VXNlcjY2MzM2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/663366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r1chardj0n3s", "html_url": "https://github.com/r1chardj0n3s", "followers_url": "https://api.github.com/users/r1chardj0n3s/followers", "following_url": "https://api.github.com/users/r1chardj0n3s/following{/other_user}", "gists_url": "https://api.github.com/users/r1chardj0n3s/gists{/gist_id}", "starred_url": "https://api.github.com/users/r1chardj0n3s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r1chardj0n3s/subscriptions", "organizations_url": "https://api.github.com/users/r1chardj0n3s/orgs", "repos_url": "https://api.github.com/users/r1chardj0n3s/repos", "events_url": "https://api.github.com/users/r1chardj0n3s/events{/privacy}", "received_events_url": "https://api.github.com/users/r1chardj0n3s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-11-21T22:58:42Z", "updated_at": "2019-07-16T22:34:56Z", "closed_at": "2019-07-16T22:34:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It'd be neat if it could parse:\n- URLs, producing the same result as urlparse.urlparse()\n- email addresses, producing a (realname, email address) pair like email.utils.parseaddr()\n- IPv4 and IPv6 addresses (producing .. what?)\n\n...?\n", "performed_via_github_app": null, "score": 1.0}]}