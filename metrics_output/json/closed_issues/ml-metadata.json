{"total_count": 25, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/google/ml-metadata/issues/59", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/59/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/59/events", "html_url": "https://github.com/google/ml-metadata/issues/59", "id": 679423679, "node_id": "MDU6SXNzdWU2Nzk0MjM2Nzk=", "number": 59, "title": "Official/ recommended naming convention for pipelines", "user": {"login": "calvinleungyk", "id": 6678871, "node_id": "MDQ6VXNlcjY2Nzg4NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6678871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvinleungyk", "html_url": "https://github.com/calvinleungyk", "followers_url": "https://api.github.com/users/calvinleungyk/followers", "following_url": "https://api.github.com/users/calvinleungyk/following{/other_user}", "gists_url": "https://api.github.com/users/calvinleungyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvinleungyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvinleungyk/subscriptions", "organizations_url": "https://api.github.com/users/calvinleungyk/orgs", "repos_url": "https://api.github.com/users/calvinleungyk/repos", "events_url": "https://api.github.com/users/calvinleungyk/events{/privacy}", "received_events_url": "https://api.github.com/users/calvinleungyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T22:01:59Z", "updated_at": "2020-08-20T16:59:07Z", "closed_at": "2020-08-20T16:59:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi team, are there recommended naming conventions and namespace approaches for pipelines aside from the default interactive + unix timestamp naming that's used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/53", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/53/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/53/events", "html_url": "https://github.com/google/ml-metadata/issues/53", "id": 674994548, "node_id": "MDU6SXNzdWU2NzQ5OTQ1NDg=", "number": 53, "title": "MySQL - no index on EventPath table", "user": {"login": "mattmbk", "id": 2340251, "node_id": "MDQ6VXNlcjIzNDAyNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2340251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattmbk", "html_url": "https://github.com/mattmbk", "followers_url": "https://api.github.com/users/mattmbk/followers", "following_url": "https://api.github.com/users/mattmbk/following{/other_user}", "gists_url": "https://api.github.com/users/mattmbk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattmbk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattmbk/subscriptions", "organizations_url": "https://api.github.com/users/mattmbk/orgs", "repos_url": "https://api.github.com/users/mattmbk/repos", "events_url": "https://api.github.com/users/mattmbk/events{/privacy}", "received_events_url": "https://api.github.com/users/mattmbk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T12:50:47Z", "updated_at": "2020-08-07T17:37:11Z", "closed_at": "2020-08-07T17:37:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that when creating the EventPath table in MySQL there is no index created.\r\n\r\nThis causes performance to degrade as the amount of data grows in the table (e.g. > 100k rows).\r\n\r\nThe performance issues were resolved by adding an index:\r\nALTER TABLE `EventPath` ADD INDEX `event_id_index` (`event_id`);", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/52", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/52/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/52/events", "html_url": "https://github.com/google/ml-metadata/issues/52", "id": 673208614, "node_id": "MDU6SXNzdWU2NzMyMDg2MTQ=", "number": 52, "title": "PutContexts failed: Given node already exists", "user": {"login": "calvinleungyk", "id": 6678871, "node_id": "MDQ6VXNlcjY2Nzg4NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6678871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvinleungyk", "html_url": "https://github.com/calvinleungyk", "followers_url": "https://api.github.com/users/calvinleungyk/followers", "following_url": "https://api.github.com/users/calvinleungyk/following{/other_user}", "gists_url": "https://api.github.com/users/calvinleungyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvinleungyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvinleungyk/subscriptions", "organizations_url": "https://api.github.com/users/calvinleungyk/orgs", "repos_url": "https://api.github.com/users/calvinleungyk/repos", "events_url": "https://api.github.com/users/calvinleungyk/events{/privacy}", "received_events_url": "https://api.github.com/users/calvinleungyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-05T02:40:52Z", "updated_at": "2020-08-08T05:31:20Z", "closed_at": "2020-08-06T17:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi team, I ran a simple pipeline on JupyterLab that consists of InteractiveContext, ExampleGen, StatisticsGen, SchemaGen, ExampleValidator and Trainer but ml-metadata gRPC server keeps outputting this warning:\r\n```\r\n2020-07-31 05:48:17.165649: W ml_metadata/metadata_store/metadata_store_service_impl.cc:403] PutContexts failed: Given node already exists: type_id: 2\r\nname: \"interactive-2020-07-31T05_00_24.026542\"\r\nproperties {\r\n  key: \"pipeline_name\"\r\n  value {\r\n    string_value: \"interactive-2020-07-31T05_00_24.026542\"\r\n  }\r\n}\r\nInternal: mysql_query failed: errno: 1062, error: Duplicate entry '2-interactive-2020-07-31T05_00_24.026542' for key 'type_id'\r\n```\r\n\r\nThere are 5 components and this warning appears 4 times in a row and each time the name is identical.\r\n\r\nMy understanding is `pipeline_name` is used in both Artifacts and Contexts and it should allow update on a Context with existing name. if name already exists, it would be an update, but I'm not sure why put_contexts is repeatedly called. Has anyone seen this behavior / is this behavior expected or is something wrong?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/49", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/49/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/49/events", "html_url": "https://github.com/google/ml-metadata/issues/49", "id": 668657987, "node_id": "MDU6SXNzdWU2Njg2NTc5ODc=", "number": 49, "title": "MLMD comparison with MLFlow/Tracking", "user": {"login": "elgalu", "id": 111569, "node_id": "MDQ6VXNlcjExMTU2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/111569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elgalu", "html_url": "https://github.com/elgalu", "followers_url": "https://api.github.com/users/elgalu/followers", "following_url": "https://api.github.com/users/elgalu/following{/other_user}", "gists_url": "https://api.github.com/users/elgalu/gists{/gist_id}", "starred_url": "https://api.github.com/users/elgalu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elgalu/subscriptions", "organizations_url": "https://api.github.com/users/elgalu/orgs", "repos_url": "https://api.github.com/users/elgalu/repos", "events_url": "https://api.github.com/users/elgalu/events{/privacy}", "received_events_url": "https://api.github.com/users/elgalu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T12:08:25Z", "updated_at": "2020-07-31T21:12:46Z", "closed_at": "2020-07-31T21:12:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, please forgive my ignorance,\r\n\r\nIs this project somehow comparable to MLFlow/Tracking ?\r\nhttps://mlflow.org/docs/latest/tracking.html#tensorflow-and-keras-experimental", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/44", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/44/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/44/events", "html_url": "https://github.com/google/ml-metadata/issues/44", "id": 645647635, "node_id": "MDU6SXNzdWU2NDU2NDc2MzU=", "number": 44, "title": "[Support] SDK Docs", "user": {"login": "alexlatchford", "id": 628146, "node_id": "MDQ6VXNlcjYyODE0Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/628146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexlatchford", "html_url": "https://github.com/alexlatchford", "followers_url": "https://api.github.com/users/alexlatchford/followers", "following_url": "https://api.github.com/users/alexlatchford/following{/other_user}", "gists_url": "https://api.github.com/users/alexlatchford/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexlatchford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexlatchford/subscriptions", "organizations_url": "https://api.github.com/users/alexlatchford/orgs", "repos_url": "https://api.github.com/users/alexlatchford/repos", "events_url": "https://api.github.com/users/alexlatchford/events{/privacy}", "received_events_url": "https://api.github.com/users/alexlatchford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T15:17:13Z", "updated_at": "2020-06-29T22:28:22Z", "closed_at": "2020-06-29T22:28:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Been trying to find the SDK documentation for this project, especially how to retrieve metadata that is stored within an MLMD store but drawing a blank. Looks like [the Getting Started guide](https://www.tensorflow.org/tfx/guide/mlmd) does a great job of setting up the store and getting data into the store but I'm curious now how to utilize the data in further steps!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/43", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/43/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/43/events", "html_url": "https://github.com/google/ml-metadata/issues/43", "id": 644784891, "node_id": "MDU6SXNzdWU2NDQ3ODQ4OTE=", "number": 43, "title": "ml-metadata image deleted from registry, breaks kubeflow deployments", "user": {"login": "yanniszark", "id": 6123106, "node_id": "MDQ6VXNlcjYxMjMxMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6123106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanniszark", "html_url": "https://github.com/yanniszark", "followers_url": "https://api.github.com/users/yanniszark/followers", "following_url": "https://api.github.com/users/yanniszark/following{/other_user}", "gists_url": "https://api.github.com/users/yanniszark/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanniszark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanniszark/subscriptions", "organizations_url": "https://api.github.com/users/yanniszark/orgs", "repos_url": "https://api.github.com/users/yanniszark/repos", "events_url": "https://api.github.com/users/yanniszark/events{/privacy}", "received_events_url": "https://api.github.com/users/yanniszark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-24T17:28:06Z", "updated_at": "2020-06-24T17:47:16Z", "closed_at": "2020-06-24T17:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all!\r\nFirst of all, thanks for your work on `ml-metadata`! :smile:\r\nIt's a project we use in Kubeflow for our tracking needs. More specifically, we make use of the following image:\r\n` gcr.io/tfx-oss-public/ml_metadata_store_server:v0.21.1`\r\n\r\nHowever, this image recently disappeared. Was it deleted from the registry?\r\nBecause of this, all Kubeflow installations have a broken metadata component and some won't continue at all, as they detect a broken installation.\r\nIs it possible to restore the image until a more permanent solution can be implemented? (like cloning images to a kubeflow registry). Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/41", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/41/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/41/events", "html_url": "https://github.com/google/ml-metadata/issues/41", "id": 637305206, "node_id": "MDU6SXNzdWU2MzczMDUyMDY=", "number": 41, "title": "Support for building the server for alternate linux platforms?", "user": {"login": "s-mcqueen", "id": 3152380, "node_id": "MDQ6VXNlcjMxNTIzODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3152380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s-mcqueen", "html_url": "https://github.com/s-mcqueen", "followers_url": "https://api.github.com/users/s-mcqueen/followers", "following_url": "https://api.github.com/users/s-mcqueen/following{/other_user}", "gists_url": "https://api.github.com/users/s-mcqueen/gists{/gist_id}", "starred_url": "https://api.github.com/users/s-mcqueen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s-mcqueen/subscriptions", "organizations_url": "https://api.github.com/users/s-mcqueen/orgs", "repos_url": "https://api.github.com/users/s-mcqueen/repos", "events_url": "https://api.github.com/users/s-mcqueen/events{/privacy}", "received_events_url": "https://api.github.com/users/s-mcqueen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T20:37:28Z", "updated_at": "2020-06-22T16:29:06Z", "closed_at": "2020-06-22T16:29:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the Dockerfile used for building and running the server only supports Ubuntu 18.04. I have a use case where I want to run the server (outside of a container) on a CentOS host. Are there any plans for other supported build targets?\r\n\r\nI have a Dockerfile that compiles for centos7 that my team at Twitter is using to build the server. If there's interest, I would be happy to commit it upstream.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/39", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/39/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/39/events", "html_url": "https://github.com/google/ml-metadata/issues/39", "id": 618786138, "node_id": "MDU6SXNzdWU2MTg3ODYxMzg=", "number": 39, "title": "PutAttributionsAndAssociations() error: Context id not found.", "user": {"login": "wulikai1993", "id": 62692175, "node_id": "MDQ6VXNlcjYyNjkyMTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/62692175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wulikai1993", "html_url": "https://github.com/wulikai1993", "followers_url": "https://api.github.com/users/wulikai1993/followers", "following_url": "https://api.github.com/users/wulikai1993/following{/other_user}", "gists_url": "https://api.github.com/users/wulikai1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/wulikai1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wulikai1993/subscriptions", "organizations_url": "https://api.github.com/users/wulikai1993/orgs", "repos_url": "https://api.github.com/users/wulikai1993/repos", "events_url": "https://api.github.com/users/wulikai1993/events{/privacy}", "received_events_url": "https://api.github.com/users/wulikai1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T08:17:07Z", "updated_at": "2020-05-21T02:12:37Z", "closed_at": "2020-05-21T02:12:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "ml-metadata version: 0.22.0\r\n\r\n```python\r\nattribution = metadata_store_pb2.Attribution()\r\nattribution.artifact_id = model_artifact_id\r\nattribution.context_id = experiment_id\r\n\r\nassociation = metadata_store_pb2.Association()\r\nassociation.execution_id = run_id\r\nattribution.context_id = experiment_id\r\n\r\nrequest = metadata_store_service_pb2.PutAttributionsAndAssociationsRequest()\r\nrequest.attributions.append(attribution)\r\nrequest.associations.append(association)\r\nstub.PutAttributionsAndAssociations(request)\r\n```\r\n\r\nThe `experiment_id` is 20 here, and I inspect the database, there is the context which id is 20. So why the error occurs and how to solve it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/38", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/38/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/38/events", "html_url": "https://github.com/google/ml-metadata/issues/38", "id": 618460669, "node_id": "MDU6SXNzdWU2MTg0NjA2Njk=", "number": 38, "title": "How to delete an artifact?", "user": {"login": "nlarusstone", "id": 7347808, "node_id": "MDQ6VXNlcjczNDc4MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7347808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlarusstone", "html_url": "https://github.com/nlarusstone", "followers_url": "https://api.github.com/users/nlarusstone/followers", "following_url": "https://api.github.com/users/nlarusstone/following{/other_user}", "gists_url": "https://api.github.com/users/nlarusstone/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlarusstone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlarusstone/subscriptions", "organizations_url": "https://api.github.com/users/nlarusstone/orgs", "repos_url": "https://api.github.com/users/nlarusstone/repos", "events_url": "https://api.github.com/users/nlarusstone/events{/privacy}", "received_events_url": "https://api.github.com/users/nlarusstone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T18:51:31Z", "updated_at": "2020-05-20T17:23:36Z", "closed_at": "2020-05-20T17:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that you can delete an artifact type by passing in a `put_artifact_type` request with `can_delete_fields` set to true.\r\n\r\nHowever, I don't see how I could delete an artifact without going into the database and manually deleting rows.\r\n\r\nAm I missing something?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/36", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/36/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/36/events", "html_url": "https://github.com/google/ml-metadata/issues/36", "id": 607296259, "node_id": "MDU6SXNzdWU2MDcyOTYyNTk=", "number": 36, "title": "Throws error when running example", "user": {"login": "rickycao-qy", "id": 31037093, "node_id": "MDQ6VXNlcjMxMDM3MDkz", "avatar_url": "https://avatars0.githubusercontent.com/u/31037093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rickycao-qy", "html_url": "https://github.com/rickycao-qy", "followers_url": "https://api.github.com/users/rickycao-qy/followers", "following_url": "https://api.github.com/users/rickycao-qy/following{/other_user}", "gists_url": "https://api.github.com/users/rickycao-qy/gists{/gist_id}", "starred_url": "https://api.github.com/users/rickycao-qy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rickycao-qy/subscriptions", "organizations_url": "https://api.github.com/users/rickycao-qy/orgs", "repos_url": "https://api.github.com/users/rickycao-qy/repos", "events_url": "https://api.github.com/users/rickycao-qy/events{/privacy}", "received_events_url": "https://api.github.com/users/rickycao-qy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-27T07:10:30Z", "updated_at": "2020-05-05T18:25:43Z", "closed_at": "2020-05-05T18:25:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just follow the example provided in https://www.tensorflow.org/tfx/guide/mlmd. \r\n\r\nit fails at \r\n```\r\ninput_event = metadata_store_pb2.Event()\r\ninput_event.artifact_id = data_artifact_id\r\ninput_event.execution_id = run_id\r\ninput_event.type = metadata_store_pb2.Event.DECLARED_INPUT\r\n```\r\n\r\nand gives error\r\n```\r\nTraceback (most recent call last):\r\n  File \"test-mlmetadata.py\", line 45, in <module>\r\n    input_event.artifact_id = data_artifact_id\r\nTypeError: [2] has type list, but expected one of: int, long\r\n```\r\n\r\nit seems that the artifact_id expects a number and instead data_artifact_id is a list with numbers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/34", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/34/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/34/events", "html_url": "https://github.com/google/ml-metadata/issues/34", "id": 598012234, "node_id": "MDU6SXNzdWU1OTgwMTIyMzQ=", "number": 34, "title": "Using the same MySQL db to run more than 1 tfx pipelines", "user": {"login": "nadgirsanket", "id": 23015199, "node_id": "MDQ6VXNlcjIzMDE1MTk5", "avatar_url": "https://avatars0.githubusercontent.com/u/23015199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nadgirsanket", "html_url": "https://github.com/nadgirsanket", "followers_url": "https://api.github.com/users/nadgirsanket/followers", "following_url": "https://api.github.com/users/nadgirsanket/following{/other_user}", "gists_url": "https://api.github.com/users/nadgirsanket/gists{/gist_id}", "starred_url": "https://api.github.com/users/nadgirsanket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nadgirsanket/subscriptions", "organizations_url": "https://api.github.com/users/nadgirsanket/orgs", "repos_url": "https://api.github.com/users/nadgirsanket/repos", "events_url": "https://api.github.com/users/nadgirsanket/events{/privacy}", "received_events_url": "https://api.github.com/users/nadgirsanket/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T17:52:30Z", "updated_at": "2020-04-24T19:05:59Z", "closed_at": "2020-04-24T19:05:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's take an example scenario,\r\n\r\nI want to run 1 model per customer. If I have 10 customers, there would be 10 models (10 tfx pipelines).\r\n\r\nIf I hook up the tfx pipeline in airflow to run 10 tfx pipelines for 10 customers, the artifacts generated and stored in MySQL db are getting mixed between customers/pipelines.\r\n\r\nFor example, if I have to run the pipeline for 2 customers and the model Evaluator for the 2nd pipeline considers the 1st pipeline's model as a baseline model and 2nd pipeline's model as candidate model.\r\n\r\n```\r\nINFO:absl:Using ../../data/artifacts_<customer_2>/Trainer/model/2265/serving_model_dir as candidate model.\r\nINFO:absl:Using ../../data/artifacts_<customer_1>/Trainer/model/1446/serving_model_dir as baseline model.\r\nINFO:absl:Evaluating model.\r\nINFO:absl:Using 1 process(es) for Beam pipeline execution.\r\nWARNING:absl:inputs do not match those expected by the model: input_names=['examples'], found in extracts={}\r\nINFO:absl:Evaluation complete. Results written to ../../data/artifacts_<customer_2>/Evaluator/evaluation/2288.\r\nINFO:absl:Checking validation results.\r\nINFO:absl:Blessing result True written to ../../data/artifacts_<customer_2>/Evaluator/blessing/2288.\r\nINFO:absl:Running publisher for Evaluator\r\nINFO:absl:MetadataStore with DB connection initialized\r\n```\r\n\r\nThis issue was not there when I was using a file-based SQLite connection. The artifacts were being stored in a separate directory per customer and the pipeline was also identifying them as separate. But SQLite wasn't scalable. Hence, I moved to MYSQL connection.\r\n\r\nIs there a way to separately version the Artifacts between multiple pipelines using MySQL connection? If so, please let me know. Or if it's possible to scale file-based SQLite to scale to 1000s of connections, please let me know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/31", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/31/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/31/events", "html_url": "https://github.com/google/ml-metadata/issues/31", "id": 586716066, "node_id": "MDU6SXNzdWU1ODY3MTYwNjY=", "number": 31, "title": "Document imports in the Getting started guide", "user": {"login": "atn832", "id": 3399854, "node_id": "MDQ6VXNlcjMzOTk4NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3399854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atn832", "html_url": "https://github.com/atn832", "followers_url": "https://api.github.com/users/atn832/followers", "following_url": "https://api.github.com/users/atn832/following{/other_user}", "gists_url": "https://api.github.com/users/atn832/gists{/gist_id}", "starred_url": "https://api.github.com/users/atn832/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atn832/subscriptions", "organizations_url": "https://api.github.com/users/atn832/orgs", "repos_url": "https://api.github.com/users/atn832/repos", "events_url": "https://api.github.com/users/atn832/events{/privacy}", "received_events_url": "https://api.github.com/users/atn832/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-24T06:04:19Z", "updated_at": "2020-04-01T21:10:20Z", "closed_at": "2020-04-01T21:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "It took me a while to find how to import the dependencies required to run the Getting started code snippets. Can we add this snippet to the guide?\r\n\r\n```py\r\nfrom ml_metadata import metadata_store\r\nfrom ml_metadata.proto import metadata_store_pb2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/29", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/29/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/29/events", "html_url": "https://github.com/google/ml-metadata/issues/29", "id": 551259302, "node_id": "MDU6SXNzdWU1NTEyNTkzMDI=", "number": 29, "title": "Support artifact state with MYSQL DB.", "user": {"login": "liyzcj", "id": 18224647, "node_id": "MDQ6VXNlcjE4MjI0NjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/18224647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyzcj", "html_url": "https://github.com/liyzcj", "followers_url": "https://api.github.com/users/liyzcj/followers", "following_url": "https://api.github.com/users/liyzcj/following{/other_user}", "gists_url": "https://api.github.com/users/liyzcj/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyzcj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyzcj/subscriptions", "organizations_url": "https://api.github.com/users/liyzcj/orgs", "repos_url": "https://api.github.com/users/liyzcj/repos", "events_url": "https://api.github.com/users/liyzcj/events{/privacy}", "received_events_url": "https://api.github.com/users/liyzcj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-17T07:50:09Z", "updated_at": "2020-05-05T18:22:12Z", "closed_at": "2020-05-05T18:22:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Release 0.21.0, Artifact in proto add a state field. But when Connect with MYSQL DB, There are no State field in table Atifact.\r\n\r\nWe can Create a proto object Artifact with state, but when get this Artifact back from DB, the state will disappear, cause there are **no Artifact state store in DB.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/28", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/28/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/28/events", "html_url": "https://github.com/google/ml-metadata/issues/28", "id": 548812098, "node_id": "MDU6SXNzdWU1NDg4MTIwOTg=", "number": 28, "title": "get_contexts(), get_context_types() etc fail with exception when the DB is empty.", "user": {"login": "Ark-kun", "id": 1829149, "node_id": "MDQ6VXNlcjE4MjkxNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1829149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ark-kun", "html_url": "https://github.com/Ark-kun", "followers_url": "https://api.github.com/users/Ark-kun/followers", "following_url": "https://api.github.com/users/Ark-kun/following{/other_user}", "gists_url": "https://api.github.com/users/Ark-kun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ark-kun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ark-kun/subscriptions", "organizations_url": "https://api.github.com/users/Ark-kun/orgs", "repos_url": "https://api.github.com/users/Ark-kun/repos", "events_url": "https://api.github.com/users/Ark-kun/events{/privacy}", "received_events_url": "https://api.github.com/users/Ark-kun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T09:44:45Z", "updated_at": "2020-01-16T01:42:36Z", "closed_at": "2020-01-16T01:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "`get_contexts()` throws \"Cannot find any record\".\r\n`get_context_types()` throws \"\" (which is very confusing).\r\n\r\nExpected behavior: the \"get all\" functions should return empty list when the DB is empty and not throw an exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/27", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/27/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/27/events", "html_url": "https://github.com/google/ml-metadata/issues/27", "id": 542273483, "node_id": "MDU6SXNzdWU1NDIyNzM0ODM=", "number": 27, "title": "What is the schema_version in MLMD?", "user": {"login": "tywtyw", "id": 29749206, "node_id": "MDQ6VXNlcjI5NzQ5MjA2", "avatar_url": "https://avatars1.githubusercontent.com/u/29749206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tywtyw", "html_url": "https://github.com/tywtyw", "followers_url": "https://api.github.com/users/tywtyw/followers", "following_url": "https://api.github.com/users/tywtyw/following{/other_user}", "gists_url": "https://api.github.com/users/tywtyw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tywtyw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tywtyw/subscriptions", "organizations_url": "https://api.github.com/users/tywtyw/orgs", "repos_url": "https://api.github.com/users/tywtyw/repos", "events_url": "https://api.github.com/users/tywtyw/events{/privacy}", "received_events_url": "https://api.github.com/users/tywtyw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-25T06:56:48Z", "updated_at": "2020-01-02T18:59:41Z", "closed_at": "2020-01-02T18:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am confused about the schema version in MLMD. What is the scheme exactly about? Does it refer to changes in relationships between tables in database?  Hopefully to get a reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/25", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/25/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/25/events", "html_url": "https://github.com/google/ml-metadata/issues/25", "id": 534281896, "node_id": "MDU6SXNzdWU1MzQyODE4OTY=", "number": 25, "title": "Consider dropping tensorflow as dependency", "user": {"login": "Ark-kun", "id": 1829149, "node_id": "MDQ6VXNlcjE4MjkxNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1829149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ark-kun", "html_url": "https://github.com/Ark-kun", "followers_url": "https://api.github.com/users/Ark-kun/followers", "following_url": "https://api.github.com/users/Ark-kun/following{/other_user}", "gists_url": "https://api.github.com/users/Ark-kun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ark-kun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ark-kun/subscriptions", "organizations_url": "https://api.github.com/users/Ark-kun/orgs", "repos_url": "https://api.github.com/users/Ark-kun/repos", "events_url": "https://api.github.com/users/Ark-kun/events{/privacy}", "received_events_url": "https://api.github.com/users/Ark-kun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-06T22:13:00Z", "updated_at": "2020-08-13T18:44:34Z", "closed_at": "2020-08-13T18:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tensorflow is a huge package with many dependencies. It only supports modern CPUs and fails to even import on older ones.\r\n\r\nIn my opinion, Metadata should be generic and not TF-specific.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/23", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/23/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/23/events", "html_url": "https://github.com/google/ml-metadata/issues/23", "id": 523727611, "node_id": "MDU6SXNzdWU1MjM3Mjc2MTE=", "number": 23, "title": "Building with bazel 1.1.0 requires several incompatible flags", "user": {"login": "ZxMYS", "id": 1507278, "node_id": "MDQ6VXNlcjE1MDcyNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1507278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZxMYS", "html_url": "https://github.com/ZxMYS", "followers_url": "https://api.github.com/users/ZxMYS/followers", "following_url": "https://api.github.com/users/ZxMYS/following{/other_user}", "gists_url": "https://api.github.com/users/ZxMYS/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZxMYS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZxMYS/subscriptions", "organizations_url": "https://api.github.com/users/ZxMYS/orgs", "repos_url": "https://api.github.com/users/ZxMYS/repos", "events_url": "https://api.github.com/users/ZxMYS/events{/privacy}", "received_events_url": "https://api.github.com/users/ZxMYS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-15T22:43:43Z", "updated_at": "2019-11-18T17:51:50Z", "closed_at": "2019-11-18T17:51:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! When I tried to build ml-metadata with bazel 1.1.0 (`bazel run -c opt --define grpc_no_ares=true ml_metadata:build_pip_package`), I found that these incompatible flags are required:\r\n```\r\n--incompatible_disable_deprecated_attr_params=false \r\n--incompatible_no_support_tools_in_action_inputs=false \r\n--incompatible_new_actions_api=false \r\n--incompatible_string_join_requires_strings=false \r\n--incompatible_no_rule_outputs_param=false\r\n--incompatible_require_ctx_in_configure_features=false\r\n```\r\nIs there plan to better support bazel 1.1.0? thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/22", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/22/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/22/events", "html_url": "https://github.com/google/ml-metadata/issues/22", "id": 521260623, "node_id": "MDU6SXNzdWU1MjEyNjA2MjM=", "number": 22, "title": "metadata_store.py can't connect to gRPC via secure channel.", "user": {"login": "zhenghuiwang", "id": 8263977, "node_id": "MDQ6VXNlcjgyNjM5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8263977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhenghuiwang", "html_url": "https://github.com/zhenghuiwang", "followers_url": "https://api.github.com/users/zhenghuiwang/followers", "following_url": "https://api.github.com/users/zhenghuiwang/following{/other_user}", "gists_url": "https://api.github.com/users/zhenghuiwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhenghuiwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhenghuiwang/subscriptions", "organizations_url": "https://api.github.com/users/zhenghuiwang/orgs", "repos_url": "https://api.github.com/users/zhenghuiwang/repos", "events_url": "https://api.github.com/users/zhenghuiwang/events{/privacy}", "received_events_url": "https://api.github.com/users/zhenghuiwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T00:29:46Z", "updated_at": "2019-11-15T22:31:39Z", "closed_at": "2019-11-15T22:31:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Problem**\r\nGet the following error when trying to connect to metadata gRPC server via SSL.  I'm using the python `ml_metadata` pacakge `0.15.0`\r\n\r\n```\r\n File \"/Users/zhenghui/kubeflow/metadata/.env/lib/python3.6/site-packages/ml_metadata/metadata_store/metadata_store.py\", line 103, in _get_channel\r\n    certificate_chain)\r\n  File \"/Users/zhenghui/kubeflow/metadata/.env/lib/python3.6/site-packages/grpc/__init__.py\", line 1593, in ssl_channel_credentials\r\n    certificate_chain))\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 133, in grpc._cython.cygrpc.SSLChannelCredentials.__cinit__\r\nTypeError: expected certificate to be bytes, got <class 'str'>\r\n```\r\n\r\nIt seems SSL config has three string fields while the gRPC method expects bytes.\r\n\r\nThe code which calls the metadata_store.py is\r\n\r\n```\r\ndef __init__(self,\r\n               grpc_host: str = \"metadata-grpc-service.kubeflow\",\r\n               grpc_port: int = 8080,\r\n               root_certificates = None,\r\n               private_key=None,\r\n               certificate_chain= None):\r\n    config = mlpb.MetadataStoreClientConfig()\r\n    config.host = grpc_host\r\n    config.port = grpc_port\r\n    if private_key:\r\n      config.ssl_config.client_key = private_key\r\n    if root_certificates:\r\n      config.ssl_config.custom_ca = root_certificates\r\n    if certificate_chain:\r\n      config.ssl_config.server_cert = certificate_chain\r\n\r\n    self.store = metadata_store.MetadataStore(config,\r\n                                              disable_upgrade_migration=False)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/20", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/20/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/20/events", "html_url": "https://github.com/google/ml-metadata/issues/20", "id": 519567703, "node_id": "MDU6SXNzdWU1MTk1Njc3MDM=", "number": 20, "title": "Support SSL in MySQL backend?", "user": {"login": "ZxMYS", "id": 1507278, "node_id": "MDQ6VXNlcjE1MDcyNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1507278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZxMYS", "html_url": "https://github.com/ZxMYS", "followers_url": "https://api.github.com/users/ZxMYS/followers", "following_url": "https://api.github.com/users/ZxMYS/following{/other_user}", "gists_url": "https://api.github.com/users/ZxMYS/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZxMYS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZxMYS/subscriptions", "organizations_url": "https://api.github.com/users/ZxMYS/orgs", "repos_url": "https://api.github.com/users/ZxMYS/repos", "events_url": "https://api.github.com/users/ZxMYS/events{/privacy}", "received_events_url": "https://api.github.com/users/ZxMYS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-07T23:16:40Z", "updated_at": "2019-11-13T00:10:14Z", "closed_at": "2019-11-12T19:24:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! It seems like currently if I want to use MySQL as the backend there\u2019s no way to enable SSL of db connections? (I just briefly skimmed the source code so I might be wrong). \r\nCan we added optional MySQL SSL configs to connection config and support enabling SSL of MySQL in MLMD? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/15", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/15/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/15/events", "html_url": "https://github.com/google/ml-metadata/issues/15", "id": 494768666, "node_id": "MDU6SXNzdWU0OTQ3Njg2NjY=", "number": 15, "title": "0.14 contains a breaking change that silently migrates the DB schema by default", "user": {"login": "rclough", "id": 186589, "node_id": "MDQ6VXNlcjE4NjU4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/186589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rclough", "html_url": "https://github.com/rclough", "followers_url": "https://api.github.com/users/rclough/followers", "following_url": "https://api.github.com/users/rclough/following{/other_user}", "gists_url": "https://api.github.com/users/rclough/gists{/gist_id}", "starred_url": "https://api.github.com/users/rclough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rclough/subscriptions", "organizations_url": "https://api.github.com/users/rclough/orgs", "repos_url": "https://api.github.com/users/rclough/repos", "events_url": "https://api.github.com/users/rclough/events{/privacy}", "received_events_url": "https://api.github.com/users/rclough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-09-17T17:59:20Z", "updated_at": "2019-11-12T19:27:56Z", "closed_at": "2019-11-12T19:27:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "My team serves a centralized Kubeflow cluster for various customers at our company, who use TFX to run ML workloads (we are using TFX instead of the KFP DSL specifically because metadata tracking is already included). \r\n\r\nWe started looking into updating our tools to TFX 0.14, and ran our integration tests with the change on our development cluster, which (as far as we're aware) applied a MLMD schema migration, ultimately renaming the column ` is_artifact_type` to `type_kind`. We later on found out this was breaking the pipelines that of other users who were still running TFX 0.13. Since this was a dev cluster, nothing critical was impacted, but this brought up a serious concern, which is that any end user who decided to try a newer version of TFX could effectively take down dev/prod because there's an automated DB migration.\r\n\r\nWe're currently have a solution for the immediate issue, which is to create a limited privilege DB user to be used by MLMD (we have a wrapper around TFX for internal use where we can enforce this) so that schema migrations would fail unless triggered explicitly by an admin.\r\n\r\nThis however is not the only problem- we're left with the issue of getting all of our teams to \"jump at the same time\" and upgrade wholesale to TFX 0.14 when we're ready. While we don't have any production pipelines running on Kubeflow, this is a consideration for future breaking changes- if there are existing daily pipelines that are not actively maintained, and they use an older version of TFX, how do we manage them coexisting on the same cluster as newer versions if there is an incompatible schema?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/14", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/14/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/14/events", "html_url": "https://github.com/google/ml-metadata/issues/14", "id": 494007383, "node_id": "MDU6SXNzdWU0OTQwMDczODM=", "number": 14, "title": "Exception on put_contexts", "user": {"login": "ankxyz", "id": 21148145, "node_id": "MDQ6VXNlcjIxMTQ4MTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/21148145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankxyz", "html_url": "https://github.com/ankxyz", "followers_url": "https://api.github.com/users/ankxyz/followers", "following_url": "https://api.github.com/users/ankxyz/following{/other_user}", "gists_url": "https://api.github.com/users/ankxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankxyz/subscriptions", "organizations_url": "https://api.github.com/users/ankxyz/orgs", "repos_url": "https://api.github.com/users/ankxyz/repos", "events_url": "https://api.github.com/users/ankxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/ankxyz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-16T12:03:52Z", "updated_at": "2019-09-18T01:56:38Z", "closed_at": "2019-09-18T01:56:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Help me, please.\r\n\r\n# Environment\r\n\r\n```\r\nOS: Ubuntu 16.04\r\nPython: 3.7.3\r\nTensorflow: 0.14.0\r\nml_metadata: 0.14.0\r\n```\r\n\r\n# ml-metadata installation\r\n\r\n```bash\r\npip install ml_metadata==0.14.0\r\n```\r\n\r\n# Code (from https://github.com/google/ml-metadata/blob/master/g3doc/get_started.md, with some edits)\r\n\r\n```python\r\nfrom ml_metadata.metadata_store import metadata_store\r\nfrom ml_metadata.metadata_store.metadata_store import metadata_store_pb2\r\n\r\nconnection_config = metadata_store_pb2.ConnectionConfig()\r\nconnection_config.sqlite.filename_uri = 'my.db'\r\nconnection_config.sqlite.connection_mode = 3 # READWRITE_OPENCREATE\r\nstore = metadata_store.MetadataStore(connection_config)\r\n\r\n# Create ArtifactTypes, e.g., Data and Model\r\ndata_type = metadata_store_pb2.ArtifactType()\r\ndata_type.name = \"DataSet\"\r\ndata_type.properties[\"day\"] = metadata_store_pb2.INT\r\ndata_type.properties[\"split\"] = metadata_store_pb2.STRING\r\ndata_type_id = store.put_artifact_type(data_type)\r\n\r\nmodel_type = metadata_store_pb2.ArtifactType()\r\nmodel_type.name = \"SavedModel\"\r\nmodel_type.properties[\"version\"] = metadata_store_pb2.INT\r\nmodel_type.properties[\"name\"] = metadata_store_pb2.STRING\r\nmodel_type_id = store.put_artifact_type(model_type)\r\n\r\n# Create ExecutionType, e.g., Trainer\r\ntrainer_type = metadata_store_pb2.ExecutionType()\r\ntrainer_type.name = \"Trainer\"\r\ntrainer_type.properties[\"state\"] = metadata_store_pb2.STRING\r\ntrainer_type_id = store.put_execution_type(trainer_type)\r\n\r\n# Declare input artifact of type DataSet\r\ndata_artifact = metadata_store_pb2.Artifact()\r\ndata_artifact.uri = 'path/to/data'\r\ndata_artifact.properties[\"day\"].int_value = 1\r\ndata_artifact.properties[\"split\"].string_value = 'train'\r\ndata_artifact.type_id = data_type_id\r\ndata_artifact_id = store.put_artifacts([data_artifact])\r\n\r\n# Register the Execution of a Trainer run\r\ntrainer_run = metadata_store_pb2.Execution()\r\ntrainer_run.type_id = trainer_type_id\r\ntrainer_run.properties[\"state\"].string_value = \"RUNNING\"\r\nrun_id = store.put_executions([trainer_run])\r\n\r\n# Declare the input event\r\ninput_event = metadata_store_pb2.Event()\r\ninput_event.artifact_id = data_artifact_id[0]\r\ninput_event.execution_id = run_id[0]\r\ninput_event.type = metadata_store_pb2.Event.DECLARED_INPUT\r\n\r\n# Submit input event to the Metadata Store\r\nstore.put_events([input_event])\r\n\r\n# Declare output artifact of type SavedModel\r\nmodel_artifact = metadata_store_pb2.Artifact()\r\nmodel_artifact.uri = 'path/to/model/file'\r\nmodel_artifact.properties[\"version\"].int_value = 1\r\nmodel_artifact.properties[\"name\"].string_value = 'MNIST-v1'\r\nmodel_artifact.type_id = model_type_id\r\nmodel_artifact_id = store.put_artifacts([model_artifact])\r\n\r\n\r\n# Declare the output event\r\noutput_event = metadata_store_pb2.Event()\r\noutput_event.artifact_id = model_artifact_id[0]\r\noutput_event.execution_id = run_id[0]\r\noutput_event.type = metadata_store_pb2.Event.DECLARED_OUTPUT\r\n\r\n# Submit output event to the Metadata Store\r\nstore.put_events([output_event])\r\n\r\ntrainer_run.id = run_id[0]\r\ntrainer_run.properties[\"state\"].string_value = \"COMPLETED\"\r\nstore.put_executions([trainer_run])\r\n\r\n# Similarly, create a ContextType, e.g., Experiment with a `note` property\r\nexperiment_type = metadata_store_pb2.ContextType()\r\nexperiment_type.name = \"Experiment\"\r\nexperiment_type.properties[\"note\"] = metadata_store_pb2.STRING\r\nexperiment_type_id = store.put_context_type(experiment_type)\r\n\r\n# Group the model and the trainer run to an experiment.\r\nmy_experiment = metadata_store_pb2.Context()\r\nmy_experiment.type_id = experiment_type_id\r\nmy_experiment.properties[\"note\"].string_value = \"My first experiment.\"\r\nexperiment_id = store.put_contexts([my_experiment])\r\n```\r\n\r\n# Error:\r\n\r\n```python\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n/usr/local/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_code(self, code_obj, result, async_)\r\n   3325                 else:\r\n-> 3326                     exec(code_obj, self.user_global_ns, self.user_ns)\r\n   3327             finally:\r\n\r\n<ipython-input-8-f54113fb23b7> in <module>\r\n     82 my_experiment.properties[\"note\"].string_value = \"My first experiment.\"\r\n---> 83 experiment_id = store.put_contexts([my_experiment])\r\n\r\n/usr/local/lib/python3.7/site-packages/ml_metadata/metadata_store/metadata_store.py in put_contexts(self, contexts)\r\n    291     response = metadata_store_service_pb2.PutContextsResponse()\r\n--> 292     self._swig_call(metadata_store_serialized.PutContexts, request, response)\r\n    293     result = []\r\n\r\n/usr/local/lib/python3.7/site-packages/ml_metadata/metadata_store/metadata_store.py in _swig_call(self, method, request, response)\r\n     75     if status_code != 0:\r\n---> 76       raise _make_exception(error_message, status_code)\r\n     77     response.ParseFromString(response_str)\r\n\r\n<class 'str'>: (<class 'TypeError'>, TypeError('__str__ returned non-string (type bytes)'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n/usr/local/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_code(self, code_obj, result, async_)\r\n   3341             if result is not None:\r\n   3342                 result.error_in_exec = sys.exc_info()[1]\r\n-> 3343             self.showtraceback(running_compiled_code=True)\r\n   3344         else:\r\n   3345             outflag = False\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/core/interactiveshell.py in showtraceback(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)\r\n   2043                                             value, tb, tb_offset=tb_offset)\r\n   2044 \r\n-> 2045                     self._showtraceback(etype, value, stb)\r\n   2046                     if self.call_pdb:\r\n   2047                         # drop into debugger\r\n\r\n/usr/local/lib/python3.7/site-packages/ipykernel/zmqshell.py in _showtraceback(self, etype, evalue, stb)\r\n    544             u'traceback' : stb,\r\n    545             u'ename' : unicode_type(etype.__name__),\r\n--> 546             u'evalue' : py3compat.safe_unicode(evalue),\r\n    547         }\r\n    548 \r\n\r\n/usr/local/lib/python3.7/site-packages/ipython_genutils/py3compat.py in safe_unicode(e)\r\n     63     \"\"\"\r\n     64     try:\r\n---> 65         return unicode_type(e)\r\n     66     except UnicodeError:\r\n     67         pass\r\n\r\nTypeError: __str__ returned non-string (type bytes)\r\n```\r\n\r\n# One observation\r\n\r\nthe same error occures when I try to fill non-existent (undeclared in enity type) property of some entity (e.g. Artifact). But here `experiment_type` has property `note` => it seems correctly.\r\n\r\n\r\nThank you for advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/13", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/13/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/13/events", "html_url": "https://github.com/google/ml-metadata/issues/13", "id": 482759391, "node_id": "MDU6SXNzdWU0ODI3NTkzOTE=", "number": 13, "title": "Can't import metadata_store_service_pb2_grpc", "user": {"login": "TomomasaTakatori", "id": 49433075, "node_id": "MDQ6VXNlcjQ5NDMzMDc1", "avatar_url": "https://avatars2.githubusercontent.com/u/49433075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomomasaTakatori", "html_url": "https://github.com/TomomasaTakatori", "followers_url": "https://api.github.com/users/TomomasaTakatori/followers", "following_url": "https://api.github.com/users/TomomasaTakatori/following{/other_user}", "gists_url": "https://api.github.com/users/TomomasaTakatori/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomomasaTakatori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomomasaTakatori/subscriptions", "organizations_url": "https://api.github.com/users/TomomasaTakatori/orgs", "repos_url": "https://api.github.com/users/TomomasaTakatori/repos", "events_url": "https://api.github.com/users/TomomasaTakatori/events{/privacy}", "received_events_url": "https://api.github.com/users/TomomasaTakatori/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-20T09:51:01Z", "updated_at": "2019-08-21T02:07:53Z", "closed_at": "2019-08-21T02:07:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use the grpc connection,  but can't.\r\nError is \"ImportError: cannot import name 'metadata_store_service_pb2_grpc'\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/9", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/9/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/9/events", "html_url": "https://github.com/google/ml-metadata/issues/9", "id": 448977484, "node_id": "MDU6SXNzdWU0NDg5Nzc0ODQ=", "number": 9, "title": "Compilation Issue: crosses boundary of subpackage", "user": {"login": "joerg84", "id": 10809446, "node_id": "MDQ6VXNlcjEwODA5NDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/10809446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joerg84", "html_url": "https://github.com/joerg84", "followers_url": "https://api.github.com/users/joerg84/followers", "following_url": "https://api.github.com/users/joerg84/following{/other_user}", "gists_url": "https://api.github.com/users/joerg84/gists{/gist_id}", "starred_url": "https://api.github.com/users/joerg84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joerg84/subscriptions", "organizations_url": "https://api.github.com/users/joerg84/orgs", "repos_url": "https://api.github.com/users/joerg84/repos", "events_url": "https://api.github.com/users/joerg84/events{/privacy}", "received_events_url": "https://api.github.com/users/joerg84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-27T19:57:06Z", "updated_at": "2019-06-07T14:13:35Z", "closed_at": "2019-06-06T22:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be an issue with the TensorFlow dependency which prevents me from compiling ml-metadata. It seems to be similar to https://github.com/kubeflow/pipelines/issues/1288 which hopefully fixed with the next TF release. \r\nIs there a way I can avoid that issue in the meantime?\r\n\r\n```\r\n$ bazel run -c opt --define grpc_no_ares=true ml_metadata:build_pip_package\r\nStarting local Bazel server and connecting to it...\r\nINFO: An error occurred during the fetch of repository 'io_bazel_rules_closure'\r\nINFO: Call stack for the definition of repository 'io_bazel_rules_closure':\r\n - /Users/jarango/ml-metadata/WORKSPACE:25:1\r\nERROR: error loading package '': in /Users/jarango/ml-metadata/ml_metadata/workspace.bzl: in /private/var/tmp/_bazel_jarango/3250bda47e0c37e69ea58b486f066546/external/org_tensorflow/tensorflow/workspace.bzl: Label '@org_tensorflow//third_party:nccl/nccl_configure.bzl' crosses boundary of subpackage '@org_tensorflow//third_party/nccl' (perhaps you meant to put the colon here: '@org_tensorflow//third_party/nccl:nccl_configure.bzl'?)\r\nERROR: error loading package '': in /Users/jarango/ml-metadata/ml_metadata/workspace.bzl: in /private/var/tmp/_bazel_jarango/3250bda47e0c37e69ea58b486f066546/external/org_tensorflow/tensorflow/workspace.bzl: Label '@org_tensorflow//third_party:nccl/nccl_configure.bzl' crosses boundary of subpackage '@org_tensorflow//third_party/nccl' (perhaps you meant to put the colon here: '@org_tensorflow//third_party/nccl:nccl_configure.bzl'?)\r\nINFO: Elapsed time: 19.671s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (0 packages loaded)\r\nFAILED: Build did NOT complete successfully (0 packages loaded)\r\n```\r\n\r\n\r\n```\r\n$ bazel version\r\nBuild label: 0.25.2\r\nBuild target: bazel-out/darwin-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Fri May 10 20:50:40 2019 (1557521440)\r\nBuild timestamp: 1557521440\r\nBuild timestamp as int: 1557521440\r\n```\r\n\r\n\r\n```\r\n$ clang --version\r\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\r\nTarget: x86_64-apple-darwin18.6.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/2", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/2/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/2/events", "html_url": "https://github.com/google/ml-metadata/issues/2", "id": 402517593, "node_id": "MDU6SXNzdWU0MDI1MTc1OTM=", "number": 2, "title": "Issues building locally on a Mac ", "user": {"login": "ddutta", "id": 877050, "node_id": "MDQ6VXNlcjg3NzA1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/877050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddutta", "html_url": "https://github.com/ddutta", "followers_url": "https://api.github.com/users/ddutta/followers", "following_url": "https://api.github.com/users/ddutta/following{/other_user}", "gists_url": "https://api.github.com/users/ddutta/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddutta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddutta/subscriptions", "organizations_url": "https://api.github.com/users/ddutta/orgs", "repos_url": "https://api.github.com/users/ddutta/repos", "events_url": "https://api.github.com/users/ddutta/events{/privacy}", "received_events_url": "https://api.github.com/users/ddutta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T02:42:58Z", "updated_at": "2019-05-30T21:53:17Z", "closed_at": "2019-05-30T21:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Followed the guide, installed bazel etc and tried .... \r\n\r\n$ bazel run -c opt --define grpc_no_ares=true ml_metadata:build_pip_package\r\nStarting local Bazel server and connecting to it...\r\nINFO: Invocation ID: 86e0a52a-beab-4a71-869b-f28cae05bd0c\r\nERROR: /private/var/tmp/_bazel_dedutta/20c43d1af01a72b975f0b1d572e55dd8/external/protobuf_archive/BUILD:591:1: Traceback (most recent call last):\r\n\tFile \"/private/var/tmp/_bazel_dedutta/20c43d1af01a72b975f0b1d572e55dd8/external/protobuf_archive/BUILD\", line 591\r\n\t\tinternal_gen_well_known_protos_java(srcs = WELL_KNOWN_PROTOS)\r\n\tFile \"/private/var/tmp/_bazel_dedutta/20c43d1af01a72b975f0b1d572e55dd8/external/protobuf_archive/protobuf.bzl\", line 269, in internal_gen_well_known_protos_java\r\n\t\tLabel((\"%s//protobuf_java\" % REPOSITOR...))\r\n\tFile \"/private/var/tmp/_bazel_dedutta/20c43d1af01a72b975f0b1d572e55dd8/external/protobuf_archive/protobuf.bzl\", line 269, in Label\r\n\t\tREPOSITORY_NAME\r\nThe value 'REPOSITORY_NAME' has been removed in favor of 'repository_name()', please use the latter (https://docs.bazel.build/versions/master/skylark/lib/native.html#repository_name). You can temporarily allow the old name by using --incompatible_package_name_is_a_function=false\r\nERROR: /private/var/tmp/_bazel_dedutta/20c43d1af01a72b975f0b1d572e55dd8/external/protobuf_archive/BUILD:373:1: Target '@protobuf_archive//:android' contains an error and its package is in error and referenced by '@protobuf_archive//:protoc'\r\nERROR: /private/var/tmp/_bazel_dedutta/20c43d1af01a72b975f0b1d572e55dd8/external/protobuf_archive/BUILD:373:1: Target '@protobuf_archive//:msvc' contains an error and its package is in error and referenced by '@protobuf_archive//:protoc'\r\nERROR: /Users/dedutta/work/ml-metadata/ml_metadata/proto/BUILD:42:1: Target '@protobuf_archive//:protobuf_python_genproto' contains an error and its package is in error and referenced by '//ml_metadata/proto:metadata_store_py_pb2_genproto'\r\nERROR: /Users/dedutta/work/ml-metadata/ml_metadata/proto/BUILD:42:1: Target '@protobuf_archive//:protoc' contains an error and its package is in error and referenced by '//ml_metadata/proto:metadata_store_py_pb2_genproto'\r\nERROR: Analysis of target '//ml_metadata:build_pip_package' failed; build aborted: Analysis failed\r\nINFO: Elapsed time: 14.508s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (14 packages loaded, 40 targets co\\\r\nFAILED: Build did NOT complete successfully (14 packages loaded, 40 targets co\\\r\nnfigured)\r\n    currently loading: @org_tensorflow//tensorflow/core\r\n    Fetching @swig; fetching\r\n    Fetching @local_config_python; fetching\r\n    Fetching @local_config_cc; Restarting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/ml-metadata/issues/1", "repository_url": "https://api.github.com/repos/google/ml-metadata", "labels_url": "https://api.github.com/repos/google/ml-metadata/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/google/ml-metadata/issues/1/comments", "events_url": "https://api.github.com/repos/google/ml-metadata/issues/1/events", "html_url": "https://github.com/google/ml-metadata/issues/1", "id": 402512586, "node_id": "MDU6SXNzdWU0MDI1MTI1ODY=", "number": 1, "title": "Design requirements and API doc for ml-metadata", "user": {"login": "ddutta", "id": 877050, "node_id": "MDQ6VXNlcjg3NzA1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/877050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddutta", "html_url": "https://github.com/ddutta", "followers_url": "https://api.github.com/users/ddutta/followers", "following_url": "https://api.github.com/users/ddutta/following{/other_user}", "gists_url": "https://api.github.com/users/ddutta/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddutta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddutta/subscriptions", "organizations_url": "https://api.github.com/users/ddutta/orgs", "repos_url": "https://api.github.com/users/ddutta/repos", "events_url": "https://api.github.com/users/ddutta/events{/privacy}", "received_events_url": "https://api.github.com/users/ddutta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-24T02:17:46Z", "updated_at": "2019-01-24T02:20:20Z", "closed_at": "2019-01-24T02:20:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Its great to see this project. Would love to see the design doc (and see how we can leverage it within Kubeflow)...", "performed_via_github_app": null, "score": 1.0}]}