{"total_count": 32, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/128", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/128/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/128/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/128", "id": 639921267, "node_id": "MDU6SXNzdWU2Mzk5MjEyNjc=", "number": 128, "title": "Question: I have a working select and modifier but want it to remove the matched node, can only make the node a blank line", "user": {"login": "malsmith", "id": 1672048, "node_id": "MDQ6VXNlcjE2NzIwNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1672048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malsmith", "html_url": "https://github.com/malsmith", "followers_url": "https://api.github.com/users/malsmith/followers", "following_url": "https://api.github.com/users/malsmith/following{/other_user}", "gists_url": "https://api.github.com/users/malsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/malsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malsmith/subscriptions", "organizations_url": "https://api.github.com/users/malsmith/orgs", "repos_url": "https://api.github.com/users/malsmith/repos", "events_url": "https://api.github.com/users/malsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/malsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-16T19:32:15Z", "updated_at": "2020-06-18T17:10:06Z", "closed_at": "2020-06-18T17:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've built a selector that finds common class attributes and moves them to a superclass definition - but rather than removing the node from the matched class - I can only make the line blank, by setting by calling \r\n`node.children.clear() `\r\n\r\nThis also only makes an empty line not a full removal\r\n                attrib_assignment = capture.get(\"attr_assignment\")\r\n                attrib_assignment.parent.children.remove(attrib_assignment)\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/119", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/119/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/119/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/119", "id": 573301189, "node_id": "MDU6SXNzdWU1NzMzMDExODk=", "number": 119, "title": "Refactoring Python 2.7 files does not work (parse error on print statement)", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-29T14:06:30Z", "updated_at": "2020-03-21T00:13:01Z", "closed_at": "2020-03-21T00:13:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://pybowler.io/docs/basics-intro\r\n\r\n> lib2to3 provides a concrete syntax tree (CST) implementation that recognizes and supports the grammar of all Python versions back to 2.6. \r\n\r\n> By building on lib2to3, Bowler is capable of reading and modifying source files written for both Python 2 and 3. That said, Bowler requires Python 3.6 or newer to run\r\n\r\nEverything was working fine until I tried running on a (Py 2.7) source file which had a print statement in it\r\n\r\nThen I get:\r\n\r\n```\r\nERROR:RefactoringTool:Can't parse tests/fixtures/py27.py: ParseError: bad input: type=3, value='\"Python 2 syntax\"', context=(' ', (34, 10))\r\n```\r\n\r\nAfter putting some breakpoints in and digging through the source it seems the problem is here:\r\nhttps://github.com/facebookincubator/Bowler/blob/195fbae4550ea82d72b9c59f3dca372b20d1edf5/bowler/tool.py#L98\r\n\r\n`BowlerTool` hard-codes it so that the underlying fissix `RefactorTool` will use the no-print-statements grammar, which is therefore not Python 2 compatible.\r\n\r\nCommenting out that line fixes it for me... I wonder why it was added?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/118", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/118/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/118/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/118", "id": 559363028, "node_id": "MDU6SXNzdWU1NTkzNjMwMjg=", "number": 118, "title": "What are the restrictions on chaining select methods?", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-03T22:06:46Z", "updated_at": "2020-03-03T00:41:56Z", "closed_at": "2020-03-03T00:41:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The readme appears to say you can make a query that has a `select` followed by filters and modifiers, then chain a subsequent `select` onto it:\r\nhttps://github.com/facebookincubator/Bowler/tree/master/bowler#query-reference\r\n\r\nWhen I try to do this I get an error:\r\n```\r\n  File \"/.virtualenvs/waterloo-sHXra0II/lib/python3.7/site-packages/bowler/tool.py\", line 209, in refactor_queue\r\n    hunks = self.refactor_file(filename)\r\n  File \"/.virtualenvs/waterloo-sHXra0II/lib/python3.7/site-packages/bowler/tool.py\", line 171, in refactor_file\r\n    tree = self.refactor_string(input, filename)\r\n  File \"/.virtualenvs/waterloo-sHXra0II/lib/python3.7/site-packages/fissix/refactor.py\", line 370, in refactor_string\r\n    self.refactor_tree(tree, name)\r\n  File \"/.virtualenvs/waterloo-sHXra0II/lib/python3.7/site-packages/fissix/refactor.py\", line 410, in refactor_tree\r\n    self.traverse_by(self.bmi_post_order_heads, tree.post_order())\r\n  File \"/.virtualenvs/waterloo-sHXra0II/lib/python3.7/site-packages/fissix/refactor.py\", line 488, in traverse_by\r\n    node.replace(new)\r\n  File \"/.virtualenvs/waterloo-sHXra0II/lib/python3.7/site-packages/fissix/pytree.py\", line 108, in replace\r\n    assert self.parent is not None, str(self)\r\nAssertionError\r\n```\r\n\r\nI am guessing that this is because the subsequent selector has to select some sub-element of what was already selected by the initial `select`?  You can't chain an unrelated select query on?\r\n\r\n(I wanted to do that because I am na\u00efvely trying to pass metadata about the current file between  my modifiers)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/116", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/116/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/116/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/116", "id": 551150798, "node_id": "MDU6SXNzdWU1NTExNTA3OTg=", "number": 116, "title": "How to select strings and put an 'r' in front?", "user": {"login": "mbanders", "id": 4564080, "node_id": "MDQ6VXNlcjQ1NjQwODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4564080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbanders", "html_url": "https://github.com/mbanders", "followers_url": "https://api.github.com/users/mbanders/followers", "following_url": "https://api.github.com/users/mbanders/following{/other_user}", "gists_url": "https://api.github.com/users/mbanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbanders/subscriptions", "organizations_url": "https://api.github.com/users/mbanders/orgs", "repos_url": "https://api.github.com/users/mbanders/repos", "events_url": "https://api.github.com/users/mbanders/events{/privacy}", "received_events_url": "https://api.github.com/users/mbanders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-17T01:41:26Z", "updated_at": "2020-01-26T19:52:36Z", "closed_at": "2020-01-26T19:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible with Bowler to select some strings (based on some filter) and have it put an `r` in front to make the string a raw string?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/106", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/106/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/106/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/106", "id": 485174093, "node_id": "MDU6SXNzdWU0ODUxNzQwOTM=", "number": 106, "title": "pybowler.io TLS certificate has expired", "user": {"login": "xmartinez", "id": 936185, "node_id": "MDQ6VXNlcjkzNjE4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/936185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmartinez", "html_url": "https://github.com/xmartinez", "followers_url": "https://api.github.com/users/xmartinez/followers", "following_url": "https://api.github.com/users/xmartinez/following{/other_user}", "gists_url": "https://api.github.com/users/xmartinez/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmartinez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmartinez/subscriptions", "organizations_url": "https://api.github.com/users/xmartinez/orgs", "repos_url": "https://api.github.com/users/xmartinez/repos", "events_url": "https://api.github.com/users/xmartinez/events{/privacy}", "received_events_url": "https://api.github.com/users/xmartinez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "JoelMarcey", "id": 3757713, "node_id": "MDQ6VXNlcjM3NTc3MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3757713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelMarcey", "html_url": "https://github.com/JoelMarcey", "followers_url": "https://api.github.com/users/JoelMarcey/followers", "following_url": "https://api.github.com/users/JoelMarcey/following{/other_user}", "gists_url": "https://api.github.com/users/JoelMarcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelMarcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelMarcey/subscriptions", "organizations_url": "https://api.github.com/users/JoelMarcey/orgs", "repos_url": "https://api.github.com/users/JoelMarcey/repos", "events_url": "https://api.github.com/users/JoelMarcey/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelMarcey/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JoelMarcey", "id": 3757713, "node_id": "MDQ6VXNlcjM3NTc3MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3757713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelMarcey", "html_url": "https://github.com/JoelMarcey", "followers_url": "https://api.github.com/users/JoelMarcey/followers", "following_url": "https://api.github.com/users/JoelMarcey/following{/other_user}", "gists_url": "https://api.github.com/users/JoelMarcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelMarcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelMarcey/subscriptions", "organizations_url": "https://api.github.com/users/JoelMarcey/orgs", "repos_url": "https://api.github.com/users/JoelMarcey/repos", "events_url": "https://api.github.com/users/JoelMarcey/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelMarcey/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-08-26T10:52:11Z", "updated_at": "2019-09-28T22:28:18Z", "closed_at": "2019-09-28T22:28:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like it expired three days ago (on Aug 23 12:00:00 2019 GMT):\r\n\r\n```\r\n$ openssl s_client -servername pybowler.io -connect pybowler.io:443 </dev/null | grep notAfter 2>/dev/null\r\ndepth=2 C = US, O = DigiCert Inc, OU = www.digicert.com, CN = DigiCert High Assurance EV Root CA\r\nverify return:1\r\ndepth=1 C = US, O = DigiCert Inc, OU = www.digicert.com, CN = DigiCert SHA2 High Assurance Server CA\r\nverify return:1\r\ndepth=0 C = US, ST = CA, L = Menlo Park, O = \"Facebook, Inc.\", CN = pybowler.io\r\nverify error:num=10:certificate has expired\r\nnotAfter=Aug 23 12:00:00 2019 GMT\r\nverify return:1\r\ndepth=0 C = US, ST = CA, L = Menlo Park, O = \"Facebook, Inc.\", CN = pybowler.io\r\nnotAfter=Aug 23 12:00:00 2019 GMT\r\nverify return:1\r\nDONE\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/84", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/84/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/84/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/84", "id": 442470803, "node_id": "MDU6SXNzdWU0NDI0NzA4MDM=", "number": 84, "title": "remove_argument not working", "user": {"login": "gdevanla", "id": 1274371, "node_id": "MDQ6VXNlcjEyNzQzNzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1274371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdevanla", "html_url": "https://github.com/gdevanla", "followers_url": "https://api.github.com/users/gdevanla/followers", "following_url": "https://api.github.com/users/gdevanla/following{/other_user}", "gists_url": "https://api.github.com/users/gdevanla/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdevanla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdevanla/subscriptions", "organizations_url": "https://api.github.com/users/gdevanla/orgs", "repos_url": "https://api.github.com/users/gdevanla/repos", "events_url": "https://api.github.com/users/gdevanla/events{/privacy}", "received_events_url": "https://api.github.com/users/gdevanla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-09T23:03:24Z", "updated_at": "2019-05-10T23:04:33Z", "closed_at": "2019-05-10T23:04:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am not sure if I am doing this incorrectly, but here is the use case:\r\n\r\ntest.py\r\n```\r\ndef f1(z):                                                                                                                                                                                                          \r\n    print('test')                                                                                                                                                                                                   \r\n                                                                                                                                                                                                                    \r\ndef f(t, x):                                                                                                                                                                                                        \r\n    f1(z=x)                                                                                                                                                                                                         \r\n                                                                                                                                                                                                                    \r\nf(t=10, x=20)                                                                                                                                                                                                       \r\n               \r\n```\r\n\r\nAnd then, I use bowler to remove argument `t`.\r\n\r\n```\r\nq=Query('test.py')\r\n\r\nq.select_function('f').remove_argument('t').diff()\r\n\r\n```\r\n\r\nBut, I get the following error:\r\n```\r\n   816         stop_at = -1\r\n    817         if \"source\" not in transform.kwargs:\r\n--> 818             raise ValueError(\"remove_argument requires passing original function\")\r\n    819         signature = inspect.signature(transform.kwargs[\"source\"])\r\n    820         if name not in signature.parameters:\r\n\r\nValueError: remove_argument requires passing original function\r\n```\r\nAm I missing any steps here?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/80", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/80/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/80/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/80", "id": 439274067, "node_id": "MDU6SXNzdWU0MzkyNzQwNjc=", "number": 80, "title": "Make filename_matcher get the path too", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-05-01T18:46:17Z", "updated_at": "2019-05-04T21:07:59Z", "closed_at": "2019-05-04T21:07:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Originally, filename_matcher was intended to just match extensions, but there are reasons you might want to load the file and look at its contents too (`#!` line, or look for `__future__` imports to completely ignore without doing the CST parse).  I think this is as simple as passing `Filename(fullname)` which we have on the following line in `refactor_dir` already.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/77", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/77/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/77/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/77", "id": 431691349, "node_id": "MDU6SXNzdWU0MzE2OTEzNDk=", "number": 77, "title": "AST validation fails although CST can parse", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-10T20:13:26Z", "updated_at": "2019-05-15T01:18:48Z", "closed_at": "2019-05-15T01:18:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example, this snippet with a null transform will fail validation.  The current (even as of 3.8a) lib2to3 can parse it, but recent versions of ast will fail.\r\n\r\n```py\r\ntry:\r\n  pass\r\nexcept Exception, e:\r\n  pass\r\n```\r\n\r\nI've been kicking around the idea of reparsing with lib2to3 and doing a tree compare as part of testing, but maybe a less strict version is just do the parse without compare...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/69", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/69/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/69/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/69", "id": 425107426, "node_id": "MDU6SXNzdWU0MjUxMDc0MjY=", "number": 69, "title": "Tool with one arg uses one process", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-25T20:45:50Z", "updated_at": "2019-04-01T03:45:13Z", "closed_at": "2019-04-01T03:45:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's a bug on https://github.com/facebookincubator/Bowler/blob/master/bowler/tool.py#L214 when used with refactor_dir; it takes the count of args as number of processes.  This doesn't hit the case of `bowler run foo.py $(find . -name '*.py')` which is how I normally do it.  Removing the min is the easiest way forward.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/68", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/68/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/68/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/68", "id": 423864717, "node_id": "MDU6SXNzdWU0MjM4NjQ3MTc=", "number": 68, "title": "distribute as a wheel on pypi", "user": {"login": "chadrik", "id": 63251, "node_id": "MDQ6VXNlcjYzMjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/63251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadrik", "html_url": "https://github.com/chadrik", "followers_url": "https://api.github.com/users/chadrik/followers", "following_url": "https://api.github.com/users/chadrik/following{/other_user}", "gists_url": "https://api.github.com/users/chadrik/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadrik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadrik/subscriptions", "organizations_url": "https://api.github.com/users/chadrik/orgs", "repos_url": "https://api.github.com/users/chadrik/repos", "events_url": "https://api.github.com/users/chadrik/events{/privacy}", "received_events_url": "https://api.github.com/users/chadrik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T17:53:11Z", "updated_at": "2019-03-21T17:53:46Z", "closed_at": "2019-03-21T17:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a developer in charge of CI and automation I want this project distributed to pypi as a wheel because wheels are faster to deploy, and they don't require the runtime version of python to be available when running `pip install`.   The vast majority of projects are using wheels now, and it's really not much more work for the maintainer.  Another thing that should be fixed is that the project should be marked as python3-only on PyPI.  \r\n\r\nthanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/67", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/67/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/67/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/67", "id": 423864674, "node_id": "MDU6SXNzdWU0MjM4NjQ2NzQ=", "number": 67, "title": "distribute as a wheel on pypi", "user": {"login": "chadrik", "id": 63251, "node_id": "MDQ6VXNlcjYzMjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/63251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadrik", "html_url": "https://github.com/chadrik", "followers_url": "https://api.github.com/users/chadrik/followers", "following_url": "https://api.github.com/users/chadrik/following{/other_user}", "gists_url": "https://api.github.com/users/chadrik/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadrik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadrik/subscriptions", "organizations_url": "https://api.github.com/users/chadrik/orgs", "repos_url": "https://api.github.com/users/chadrik/repos", "events_url": "https://api.github.com/users/chadrik/events{/privacy}", "received_events_url": "https://api.github.com/users/chadrik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120747, "node_id": "MDU6TGFiZWw5NTgxMjA3NDc=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-21T17:53:06Z", "updated_at": "2019-04-05T03:05:55Z", "closed_at": "2019-04-02T17:37:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a developer in charge of CI and automation I want this project distributed to pypi as a wheel because wheels are faster to deploy, and they don't require the runtime version of python to be available when running `pip install`.   The vast majority of projects are using wheels now, and it's really not much more work for the maintainer.  Another thing that should be fixed is that the project should be marked as python3-only on PyPI.  \r\n\r\nthanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/60", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/60/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/60/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/60", "id": 416457080, "node_id": "MDU6SXNzdWU0MTY0NTcwODA=", "number": 60, "title": "python2 print statements broken", "user": {"login": "ndevenish", "id": 529963, "node_id": "MDQ6VXNlcjUyOTk2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/529963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndevenish", "html_url": "https://github.com/ndevenish", "followers_url": "https://api.github.com/users/ndevenish/followers", "following_url": "https://api.github.com/users/ndevenish/following{/other_user}", "gists_url": "https://api.github.com/users/ndevenish/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndevenish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndevenish/subscriptions", "organizations_url": "https://api.github.com/users/ndevenish/orgs", "repos_url": "https://api.github.com/users/ndevenish/repos", "events_url": "https://api.github.com/users/ndevenish/events{/privacy}", "received_events_url": "https://api.github.com/users/ndevenish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120752, "node_id": "MDU6TGFiZWw5NTgxMjA3NTI=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-03T00:17:26Z", "updated_at": "2019-04-02T19:40:28Z", "closed_at": "2019-04-02T17:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Parsing python2 code without print functions turned on seems to be broken? The README seems to imply that this should still work (*Bowler supports modifications to code from any version of Python 2 or 3*)\r\n\r\nDockerfile:\r\n```dockerfile\r\nFROM python:3.7\r\n\r\nRUN pip3 install git+https://github.com/facebookincubator/Bowler.git\r\nRUN echo \"print 'something'\" > test.py\r\nRUN bowler dump test.py\r\n```\r\nOutput:\r\n```\r\n$ bowler dump test.py\r\nERROR:bowler.tool:Skipping test.py: failed to parse\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/58", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/58/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/58/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/58", "id": 413650997, "node_id": "MDU6SXNzdWU0MTM2NTA5OTc=", "number": 58, "title": "Replace shell commands with diff-match-patch", "user": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120747, "node_id": "MDU6TGFiZWw5NTgxMjA3NDc=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-23T03:30:22Z", "updated_at": "2020-03-10T22:31:04Z", "closed_at": "2020-03-10T22:31:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To better support Windows (#8) and improve reliability on different environments, use of the `sh` module for the `patch` binary should be replaced with use of [diff-match-patch](https://pypi.org/project/diff-match-patch/) or a similar module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/52", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/52/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/52/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/52", "id": 403647565, "node_id": "MDU6SXNzdWU0MDM2NDc1NjU=", "number": 52, "title": "multiprocessing issue on windows", "user": {"login": "Levitanus", "id": 29713891, "node_id": "MDQ6VXNlcjI5NzEzODkx", "avatar_url": "https://avatars0.githubusercontent.com/u/29713891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Levitanus", "html_url": "https://github.com/Levitanus", "followers_url": "https://api.github.com/users/Levitanus/followers", "following_url": "https://api.github.com/users/Levitanus/following{/other_user}", "gists_url": "https://api.github.com/users/Levitanus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Levitanus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Levitanus/subscriptions", "organizations_url": "https://api.github.com/users/Levitanus/orgs", "repos_url": "https://api.github.com/users/Levitanus/repos", "events_url": "https://api.github.com/users/Levitanus/events{/privacy}", "received_events_url": "https://api.github.com/users/Levitanus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1050412341, "node_id": "MDU6TGFiZWwxMDUwNDEyMzQx", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/windows", "name": "windows", "color": "8f5bc6", "default": false, "description": "Windows-specific issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-28T04:36:30Z", "updated_at": "2020-03-10T22:31:04Z", "closed_at": "2020-03-10T22:31:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unrelated to the sh problem in windows I've caught another one:\r\n```\r\nTraceback (most recent call last):\r\n  File \"E:\\packages\\try_bowler\\test.py\", line 7, in <module>\r\n    rename.dump()\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\bowler\\query.py\", line 967, in dump\r\n    return self.execute(write=False)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\bowler\\query.py\", line 957, in execute\r\n    self.retcode = BowlerTool(fixers, **kwargs).run(self.paths)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\bowler\\tool.py\", line 342, in run\r\n    self.refactor(paths)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\bowler\\tool.py\", line 223, in refactor\r\n    child.start()\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\process.py\", line 112, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\context.py\", line 223, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\context.py\", line 322, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\popen_spawn_win32.py\", line 65, in __init__\r\n    reduction.dump(process_obj, to_child)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\reduction.py\", line 60, in dump\r\n    ForkingPickler(file, protocol).dump(obj)\r\nAttributeError: Can't pickle local object 'Query.create_fixer.<locals>.Fixer'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\spawn.py\", line 99, in spawn_main\r\n    new_handle = reduction.steal_handle(parent_pid, pipe_handle)\r\n  File \"C:\\Users\\Levitanus\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\multiprocessing\\reduction.py\", line 87, in steal_handle\r\n    _winapi.DUPLICATE_SAME_ACCESS | _winapi.DUPLICATE_CLOSE_SOURCE)\r\nPermissionError: [WinError 5] \u041e\u0442\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\r\n[Finished in 0.3s with exit code 1]\r\n```\r\n\r\nOriginal import in tool.py was replaced to import pbs as sh, but. as I understant, flow hasn't gone to the patching part of refactor\r\n\r\noriginal source:\r\n```\r\nimport bowler as bl\r\n\r\n\r\nrename = bl.Query()\r\nrename.select_var('value')\r\nrename.rename('new_val')\r\nrename.dump()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/49", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/49/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/49/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/49", "id": 392452891, "node_id": "MDU6SXNzdWUzOTI0NTI4OTE=", "number": 49, "title": "Bowler exits with error message after successful query", "user": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-19T06:01:22Z", "updated_at": "2019-06-26T23:03:02Z", "closed_at": "2019-06-26T23:03:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Repro\r\n\r\n```bash\r\ngit clone https://github.com/jreese/aql\r\ncd aql\r\ngit checkout 3565e740\r\nbowler do  'Query().select_class(\"Operation\").rename(\"Comparison\").diff()'\r\n```\r\n\r\n## Expected result\r\n\r\nBowler should generate the diff and exit with success\r\n\r\n## Actual result\r\n\r\nBowler generates the diff, and then outputs `Error: query failed`: https://gist.github.com/jreese/0da753bfd9a218d494bd10a7b401ce4f\r\n\r\nEnabling debug output does not indicate any error occurred.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/48", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/48/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/48/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/48", "id": 392452232, "node_id": "MDU6SXNzdWUzOTI0NTIyMzI=", "number": 48, "title": "Query.write() shouldn't be interactive", "user": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-19T05:58:17Z", "updated_at": "2019-06-20T18:01:07Z", "closed_at": "2019-06-20T18:01:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`Query().write()` prompts for every hunk, rather than assuming yes for each hunk.\r\n\r\n## Repro\r\n\r\n```bash\r\ngit clone https://github.com/jreese/aql\r\ncd aql\r\ngit checkout 3565e740\r\nbowler do  'Query().select_class(\"Operation\").rename(\"Comparison\").write()'\r\n```\r\n\r\n## Expected result\r\n\r\nBowler should just apply all modified hunks without prompting (and without printing hunks, IMO).\r\n\r\n## Actual result\r\n\r\nBowler prompts the user to apply each hunk, essentially identical to `idiff()` or `diff(interactive=True)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/41", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/41/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/41/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/41", "id": 388789634, "node_id": "MDU6SXNzdWUzODg3ODk2MzQ=", "number": 41, "title": "Would be great to have a helper that infers numeric types", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-07T19:46:02Z", "updated_at": "2018-12-14T01:06:11Z", "closed_at": "2018-12-14T01:06:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For a recent project I wished there were some functions that would let me figure out int vs float (vs unknown) for simple expressions.  I'm not aiming for this to be a full type-checker, or even go beyond those three (int/float/unknown), but I'll run the experiment to see if this ends up being too many lines of code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/40", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/40/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/40/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/40", "id": 387861144, "node_id": "MDU6SXNzdWUzODc4NjExNDQ=", "number": 40, "title": "Better errors when using strings", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-05T17:18:23Z", "updated_at": "2018-12-14T01:13:04Z", "closed_at": "2018-12-14T01:13:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you use `.filter(\"power < any* >\")` instead of `.select`, the resulting error is confusing because it just eval's string arguments.  What's the usecase for .filter taking a string?  I'd like to improve the error message if `<` is found in it as a first effort.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/36", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/36/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/36/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/36", "id": 386464441, "node_id": "MDU6SXNzdWUzODY0NjQ0NDE=", "number": 36, "title": "New contributor speedbumps", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-01T14:45:15Z", "updated_at": "2018-12-14T18:25:17Z", "closed_at": "2018-12-14T18:25:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* isort wants to change imports on a fresh checkout (should we do another run of black after?)\r\n* mypy requires a python3.6 executable, Arch only has 3.7 by default", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/35", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/35/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/35/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/35", "id": 384570109, "node_id": "MDU6SXNzdWUzODQ1NzAxMDk=", "number": 35, "title": "Allow overriding default file extensions", "user": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120747, "node_id": "MDU6TGFiZWw5NTgxMjA3NDc=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-27T00:37:05Z", "updated_at": "2018-12-04T01:34:33Z", "closed_at": "2018-12-04T01:34:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Bowler currently defaults to only touching files with a `.py` extension when given a directory to modify.  Bowler should also allow specifying a list of whitelisted extensions, or perhaps some sort of filter function instead, in cases where the files to modify use custom extensions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/34", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/34/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/34/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/34", "id": 383302136, "node_id": "MDU6SXNzdWUzODMzMDIxMzY=", "number": 34, "title": "\"Bowler\" is nigh impossible to Google", "user": {"login": "bertjwregeer", "id": 649426, "node_id": "MDQ6VXNlcjY0OTQyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/649426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bertjwregeer", "html_url": "https://github.com/bertjwregeer", "followers_url": "https://api.github.com/users/bertjwregeer/followers", "following_url": "https://api.github.com/users/bertjwregeer/following{/other_user}", "gists_url": "https://api.github.com/users/bertjwregeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bertjwregeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bertjwregeer/subscriptions", "organizations_url": "https://api.github.com/users/bertjwregeer/orgs", "repos_url": "https://api.github.com/users/bertjwregeer/repos", "events_url": "https://api.github.com/users/bertjwregeer/events{/privacy}", "received_events_url": "https://api.github.com/users/bertjwregeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-21T21:42:49Z", "updated_at": "2018-12-05T03:44:39Z", "closed_at": "2018-12-05T03:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unfortunately `facebook bowler` does not return this project, nor is it easy to do a search for `bowler + problem` or `facebook bowler + problem` to see if anyone else is having this issue.\r\n\r\nCutesy names are cool and all, but there is so much noise looking for bowler that it makes it hard to use the project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/27", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/27/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/27/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/27", "id": 375281310, "node_id": "MDU6SXNzdWUzNzUyODEzMTA=", "number": 27, "title": "Travis CI is broken", "user": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-30T01:27:05Z", "updated_at": "2018-10-30T22:14:12Z", "closed_at": "2018-10-30T22:14:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR's and commits aren't triggering builds on [Travis](https://travis-ci.com/facebookincubator/Bowler).  We should fix that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/19", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/19/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/19/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/19", "id": 366976096, "node_id": "MDU6SXNzdWUzNjY5NzYwOTY=", "number": 19, "title": "Large refactors cause patch rejects, exit code 0", "user": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120747, "node_id": "MDU6TGFiZWw5NTgxMjA3NDc=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1077316466, "node_id": "MDU6TGFiZWwxMDc3MzE2NDY2", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/hacktoberfest", "name": "hacktoberfest", "color": "e96f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-04T21:22:57Z", "updated_at": "2018-11-06T01:09:02Z", "closed_at": "2018-11-06T01:09:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Running a large refactor can cause patch to produce reject files. \r\n2. Bowler doesn't throw an exception when this is the case, which makes it difficult to notice.\r\n\r\nApologies for the size of this issue; I've reduced it as much as I can while still triggering the problem.\r\n\r\nThis file: https://gist.github.com/craigds/4bb86df3b3ead343c22be6c7c9c14a57\r\nI've snipped it at 1750 lines, because that's _just_ enough to reproduce the issue.\r\n\r\n\r\nWith this script:\r\n\r\n```python\r\nfrom fissix.fixer_util import Newline\r\nfrom fissix.pygram import python_symbols as syms\r\n\r\nfrom bowler import Query, TOKEN\r\nfrom bowler.types import Leaf, Node\r\n\r\n\r\ndef Assert(test, message=None, **kwargs):\r\n    \"\"\"\r\n    Build an assertion statement\r\n    \"\"\"\r\n    if not isinstance(test, list):\r\n        test = [test]\r\n    test[0].prefix = \" \"\r\n\r\n    return Node(syms.assert_stmt, [Leaf(TOKEN.NAME, \"assert\")] + test, **kwargs)\r\n\r\n\r\ndef gdaltest_fail_reason_to_assert(node, capture, filename):\r\n    \"\"\"\r\n    Converts an entire if statement into an assertion.\r\n\r\n    if x == y:\r\n        gdal.post_reason('foo')\r\n        return 'fail'\r\n\r\n    -->\r\n        assert x != y, 'foo'\r\n    \"\"\"\r\n    condition = capture[\"condition\"]\r\n    reason = capture[\"reason\"]\r\n    reason = reason.clone()\r\n\r\n    assertion = Assert([condition.clone()], reason, prefix=node.prefix)\r\n\r\n    # Trailing whitespace and any comments after the if statement are captured\r\n    # in the prefix for the dedent node. Copy it to the following node.\r\n    dedent = capture[\"dedent\"]\r\n    next_node = node.next_sibling\r\n    node.replace([assertion, Newline()])\r\n    next_node.prefix = dedent.prefix\r\n\r\n\r\n(\r\n    Query(\"half_of_ogr_fgdb.py\")\r\n    .select(\r\n        \"\"\"\r\n        if_stmt<\r\n            \"if\" condition=any \":\"\r\n            suite<\r\n                any any\r\n                simple_stmt<\r\n                    power<\r\n                        \"gdaltest\" trailer< \".\" \"post_reason\" >\r\n                        trailer< \"(\" reason=any \")\" >\r\n                    >\r\n                    any\r\n                >\r\n                simple_stmt<\r\n                    return_stmt< \"return\" returntype=STRING >\r\n                    any\r\n                >\r\n                dedent=any\r\n            >\r\n        >\r\n    \"\"\"\r\n    )\r\n    .modify(callback=gdaltest_fail_reason_to_assert)\r\n    .execute(interactive=False, write=True)\r\n)\r\n```\r\n\r\n# output\r\n\r\n```\r\nfailed to apply patch hunk\r\nTraceback (most recent call last):\r\n  File \"/Users/cdestigter/checkout/decrapify/lib/python3.7/site-packages/bowler/tool.py\", line 287, in process_hunks\r\n    sh.patch(\"-u\", filename, _in=patch)  # type: ignore\r\n  File \"/Users/cdestigter/checkout/decrapify/lib/python3.7/site-packages/sh.py\", line 1427, in __call__\r\n    return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n  File \"/Users/cdestigter/checkout/decrapify/lib/python3.7/site-packages/sh.py\", line 774, in __init__\r\n    self.wait()\r\n  File \"/Users/cdestigter/checkout/decrapify/lib/python3.7/site-packages/sh.py\", line 792, in wait\r\n    self.handle_command_exit_code(exit_code)\r\n  File \"/Users/cdestigter/checkout/decrapify/lib/python3.7/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n    raise exc\r\nsh.ErrorReturnCode_1:\r\n\r\n  RAN: /usr/bin/patch -u half_of_ogr_fgdb.py\r\n\r\n  STDOUT:\r\npatching file half_of_ogr_fgdb.py\r\nHunk #1 FAILED at 1539.\r\n1 out of 1 hunk FAILED -- saving rejects to file half_of_ogr_fgdb.py.rej\r\n\r\n\r\n  STDERR:\r\n```\r\n\r\n# causes?\r\n\r\nChopping much more out of the source file makes the error not occur. It doesn't seem to matter _which_ parts you chop out.\r\n\r\nMy hunch is that if the diff gets too large, the `patch` can no longer match line numbers from old to new, so it rejects the patch.\r\n\r\nA workaround might be to pause running fixers when the diff gets bigger than a certain threshold and write the new file out, and then continue running fixers? ie patch in multiple stages.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/17", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/17/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/17/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/17", "id": 363798897, "node_id": "MDU6SXNzdWUzNjM3OTg4OTc=", "number": 17, "title": "`bowler do` silently exits when IPython isn't available", "user": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1075891927, "node_id": "MDU6TGFiZWwxMDc1ODkxOTI3", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/PR", "name": "PR", "color": "b1d804", "default": false, "description": ""}, {"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T23:07:42Z", "updated_at": "2018-11-15T02:43:51Z", "closed_at": "2018-11-15T02:43:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, when running `bowler do`, if IPython isn't available to import, Bowler will just silently exit without saying why.  \r\n\r\nCulprit code: https://github.com/facebookincubator/Bowler/blob/master/bowler/main.py#L61", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/16", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/16/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/16/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/16", "id": 362818647, "node_id": "MDU6SXNzdWUzNjI4MTg2NDc=", "number": 16, "title": "bowler scripts fail on files not ending with a newline", "user": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1077316466, "node_id": "MDU6TGFiZWwxMDc3MzE2NDY2", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/hacktoberfest", "name": "hacktoberfest", "color": "e96f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-22T02:19:39Z", "updated_at": "2018-10-20T17:01:19Z", "closed_at": "2018-10-20T17:01:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nWorks (output):\r\n\r\n```bash\r\n$ echo 'pass' > foo\r\n$ bowler dump foo\r\nfoo\r\n[file_input] \"\"\r\n.  [simple_stmt] \"\"\r\n.  .  [1] \"\" \"pass\"\r\n.  .  [4] \"\" \"\r\n\"\r\n.  [0] \"\" \"\"\r\n```\r\n\r\nDoesn't work (no output):\r\n\r\n```bash\r\n$ echo -n 'pass' > foo\r\n$ bowler dump foo\r\n```\r\n\r\nThis seems to apply to the whole file (not finishing in a newline means no output at all for the whole file.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/14", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/14/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/14/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/14", "id": 362561824, "node_id": "MDU6SXNzdWUzNjI1NjE4MjQ=", "number": 14, "title": "Modifiers can't replace Nodes", "user": {"login": "syrusakbary", "id": 188257, "node_id": "MDQ6VXNlcjE4ODI1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/188257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syrusakbary", "html_url": "https://github.com/syrusakbary", "followers_url": "https://api.github.com/users/syrusakbary/followers", "following_url": "https://api.github.com/users/syrusakbary/following{/other_user}", "gists_url": "https://api.github.com/users/syrusakbary/gists{/gist_id}", "starred_url": "https://api.github.com/users/syrusakbary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syrusakbary/subscriptions", "organizations_url": "https://api.github.com/users/syrusakbary/orgs", "repos_url": "https://api.github.com/users/syrusakbary/repos", "events_url": "https://api.github.com/users/syrusakbary/events{/privacy}", "received_events_url": "https://api.github.com/users/syrusakbary/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1075891927, "node_id": "MDU6TGFiZWwxMDc1ODkxOTI3", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/PR", "name": "PR", "color": "b1d804", "default": false, "description": ""}, {"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-21T10:52:08Z", "updated_at": "2018-12-14T01:34:30Z", "closed_at": "2018-12-14T01:34:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all thanks for this great project. It's helping on modernizing the architecture of [GraphQL Python](https://github.com/graphql-python/) projects.\r\n\r\n## Use Case\r\n\r\nI'm trying to port automatically Python 3 code to Python 2 (to not break compatibility for old projects using the library, similar to what babel is doing).\r\nOn this quest, I was trying to replace the calls to `my_var = cast(MyType, old_var)` to `my_var = old_var`.\r\n\r\nFor it, I created the following pattern and modifier:\r\n#### example.py\r\n```python\r\n# This is the file that we want to modify\r\nmy_var = cast(MyType, old_var)\r\n```\r\n\r\n#### bowler_file\r\n```python\r\nfrom bowler import Query\r\n\r\nquery = Query(\"example.py\")\r\n\r\ncast_pattern = \"\"\"\r\n    power< \"cast\"\r\n        trailer< \"(\" cast_args=any* \")\" >\r\n    >\r\n\"\"\"\r\n\r\ndef cast_modifier(node, capture, filename):\r\n    args = capture.get(\"cast_args\")\r\n    last_arg = args[-1].children[-1]\r\n    return last_arg\r\n\r\nquery.select(cast_pattern).modify(cast_modifier).diff()\r\n```\r\n\r\nThe modifier is returning a different node than the provided as argument in the modifier function, so it should be replaced.\r\n\r\nHowever, based on the [current implementation](https://github.com/facebookincubator/Bowler/blob/master/bowler/query.py#L901-L904) the return value of the fixer & callback is actually not used, therefore no matter what the fixer or callback returns... the return value will always be skipped, forcing to have always the same node on the modifiers.\r\n\r\nIt seems this specific case is documented, however is not implemented.\r\n> Returned values will automatically replace the matched element in the syntax tree.\r\nhttps://pybowler.io/docs/api-query#modify\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/12", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/12/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/12/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/12", "id": 361519200, "node_id": "MDU6SXNzdWUzNjE1MTkyMDA=", "number": 12, "title": "Feature request: helper(s) to avoid syntax errors", "user": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120747, "node_id": "MDU6TGFiZWw5NTgxMjA3NDc=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-18T23:18:43Z", "updated_at": "2019-05-01T18:40:10Z", "closed_at": "2019-05-01T18:40:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote a thing to convert `self.assertFalse(x)` to `assert not x`, etc. Trouble is, it falls over easily when the expression in the parentheses isn't valid without the parentheses:\r\n\r\n```python\r\nself.assertFalse(\r\n    'a'\r\n    'b'\r\n)\r\n```\r\nMy code naively converts this to\r\n\r\n```python\r\nassert not 'a'\r\n    'b'\r\n```\r\n\r\n* I think a `parenthesize_if_necessary` helper would be really useful for this kind of situation. I imagine this bug is widespread. I tried to write one, but I'm a bit out of my depth.\r\n* It'd be useful to have access to a function which asserts a list of nodes has no syntax errors. I realise that would vary depending on targeted python version and `__future__` imports, but perhaps something can be done? \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/9", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/9/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/9/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/9", "id": 358396483, "node_id": "MDU6SXNzdWUzNTgzOTY0ODM=", "number": 9, "title": "Use parso instead of lib2to3", "user": {"login": "davidhalter", "id": 748594, "node_id": "MDQ6VXNlcjc0ODU5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/748594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidhalter", "html_url": "https://github.com/davidhalter", "followers_url": "https://api.github.com/users/davidhalter/followers", "following_url": "https://api.github.com/users/davidhalter/following{/other_user}", "gists_url": "https://api.github.com/users/davidhalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidhalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidhalter/subscriptions", "organizations_url": "https://api.github.com/users/davidhalter/orgs", "repos_url": "https://api.github.com/users/davidhalter/repos", "events_url": "https://api.github.com/users/davidhalter/events{/privacy}", "received_events_url": "https://api.github.com/users/davidhalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-09T17:43:04Z", "updated_at": "2019-09-28T22:28:01Z", "closed_at": "2018-09-09T22:02:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm just pointing this out:\r\n\r\nIf I were you, I wouldn't use lib2to3 directly. It has a lot of issues that I fixed in parso. It also has a nicer API, a refactored parser generator that you can actually understand, error recovery and a few more features that might come in handy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/8", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/8/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/8/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/8", "id": 358336375, "node_id": "MDU6SXNzdWUzNTgzMzYzNzU=", "number": 8, "title": "Pybowler cannot work on Windows. Traceback: component \"sh\" is currently only supported on linux/osx", "user": {"login": "WinstonPoh", "id": 7601526, "node_id": "MDQ6VXNlcjc2MDE1MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7601526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WinstonPoh", "html_url": "https://github.com/WinstonPoh", "followers_url": "https://api.github.com/users/WinstonPoh/followers", "following_url": "https://api.github.com/users/WinstonPoh/following{/other_user}", "gists_url": "https://api.github.com/users/WinstonPoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/WinstonPoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WinstonPoh/subscriptions", "organizations_url": "https://api.github.com/users/WinstonPoh/orgs", "repos_url": "https://api.github.com/users/WinstonPoh/repos", "events_url": "https://api.github.com/users/WinstonPoh/events{/privacy}", "received_events_url": "https://api.github.com/users/WinstonPoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1050412341, "node_id": "MDU6TGFiZWwxMDUwNDEyMzQx", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/windows", "name": "windows", "color": "8f5bc6", "default": false, "description": "Windows-specific issues"}], "state": "closed", "locked": false, "assignee": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-08T23:46:13Z", "updated_at": "2020-03-10T22:31:04Z", "closed_at": "2020-03-10T22:31:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installation of pybowler using pip install on windows 10, running bowler in powershell returns TB.\r\nSteps:\r\n1) in Python folder (typically something like C:\\Python36_32), go to Scripts folder, and run \".\\pip.exe install bowler.\r\n2) run .\\bowler.exe in same folder (Python36_32/Scripts)\r\n3) TB as follows:\r\n  ```\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Python36\\Scripts\\bowler-script.py\", line 11, in <module>\r\n    load_entry_point('bowler==0.5.1', 'console_scripts', 'bowler')()\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 565, in load_entry_point\r\n    return get_distribution(dist).load_entry_point(group, name)\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2631, in load_entry_point\r\n    return ep.load()\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2291, in load\r\n    return self.resolve()\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2297, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\bowler\\__init__.py\", line 12, in <module>\r\n    from .tool import BowlerTool\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\bowler\\tool.py\", line 12, in <module>\r\n    import sh\r\n\r\n  File \"c:\\python36\\lib\\site-packages\\sh.py\", line 36, in <module>\r\n    support.\" % __version__)\r\n\r\nImportError: sh 1.12.14 is currently only supported on linux and osx. please install pbs 0.110 (http://pypi.python.org/pypi/pbs) for windows support.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/6", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/6/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/6/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/6", "id": 357725905, "node_id": "MDU6SXNzdWUzNTc3MjU5MDU=", "number": 6, "title": "Asynchronous function calls aren't selected", "user": {"login": "srfraser", "id": 5933384, "node_id": "MDQ6VXNlcjU5MzMzODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5933384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srfraser", "html_url": "https://github.com/srfraser", "followers_url": "https://api.github.com/users/srfraser/followers", "following_url": "https://api.github.com/users/srfraser/following{/other_user}", "gists_url": "https://api.github.com/users/srfraser/gists{/gist_id}", "starred_url": "https://api.github.com/users/srfraser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srfraser/subscriptions", "organizations_url": "https://api.github.com/users/srfraser/orgs", "repos_url": "https://api.github.com/users/srfraser/repos", "events_url": "https://api.github.com/users/srfraser/events{/privacy}", "received_events_url": "https://api.github.com/users/srfraser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 958120745, "node_id": "MDU6TGFiZWw5NTgxMjA3NDU=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 958120749, "node_id": "MDU6TGFiZWw5NTgxMjA3NDk=", "url": "https://api.github.com/repos/facebookincubator/Bowler/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-09-06T16:07:34Z", "updated_at": "2018-09-14T20:47:31Z", "closed_at": "2018-09-14T20:47:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that `select_function` doesn't match function calls that are preceeded by `await`.  In the example below a synchronous file works as expected, but the async example only changes the name of the function at the definition, not the call.\r\n\r\nIs there a different way to select and modify async function calls? \r\n\r\nsync.py\r\n\r\n    def first_func():\r\n        print(\"In first func\")\r\n    \r\n    def main():\r\n        first_func()\r\n    \r\n    if __name__ == '__main__':\r\n        main()\r\n\r\n async.py\r\n\r\n    import asyncio\r\n    \r\n    async def first_func():\r\n        print(\"In first func\")\r\n    \r\n    async def async_main():\r\n        await first_func()\r\n    \r\n    if __name__ == '__main__':\r\n        loop = asyncio.get_event_loop()\r\n        loop.run_until_complete(async_main())\r\n    \r\nbowler command\r\n\r\n    $ bowler do \"Query(['sync.py', 'async.py']).select_function('first_func').rename('old_first_func').diff()\"\r\n    --- async.py\r\n    +++ async.py\r\n    @@ -1,6 +1,6 @@\r\n     import asyncio\r\n\r\n    -async def first_func():\r\n    +async def old_first_func():\r\n         print(\"In first func\")\r\n\r\n\r\n    --- sync.py\r\n    +++ sync.py\r\n    @@ -1,10 +1,10 @@\r\n\r\n    -def first_func():\r\n    +def old_first_func():\r\n         print(\"In first func\")\r\n\r\n\r\n     def main():\r\n    -    first_func()\r\n    +    old_first_func()\r\n\r\n\r\n     if __name__ == '__main__':\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/4", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/4/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/4/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/4", "id": 355488427, "node_id": "MDU6SXNzdWUzNTU0ODg0Mjc=", "number": 4, "title": "AttributeError: 'Query' object has no attribute 'select_name'", "user": {"login": "SamuelMarks", "id": 807580, "node_id": "MDQ6VXNlcjgwNzU4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/807580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamuelMarks", "html_url": "https://github.com/SamuelMarks", "followers_url": "https://api.github.com/users/SamuelMarks/followers", "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}", "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions", "organizations_url": "https://api.github.com/users/SamuelMarks/orgs", "repos_url": "https://api.github.com/users/SamuelMarks/repos", "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}", "received_events_url": "https://api.github.com/users/SamuelMarks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-30T08:56:15Z", "updated_at": "2018-08-31T07:36:11Z", "closed_at": "2018-08-31T07:36:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[docs/api-query](https://pybowler.io/docs/api-query) [@[548fc816fab01c933bf06618670dddfeb43e9c09](https://github.com/facebookincubator/Bowler/blob/548fc816fab01c933bf06618670dddfeb43e9c09/docs/api-query.md)] references a `select_name` function, but I can't find by `grep`ping the source code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facebookincubator/Bowler/issues/1", "repository_url": "https://api.github.com/repos/facebookincubator/Bowler", "labels_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/1/comments", "events_url": "https://api.github.com/repos/facebookincubator/Bowler/issues/1/events", "html_url": "https://github.com/facebookincubator/Bowler/issues/1", "id": 354079311, "node_id": "MDU6SXNzdWUzNTQwNzkzMTE=", "number": 1, "title": "Execute multiple select/modify steps", "user": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jreese", "id": 6444, "node_id": "MDQ6VXNlcjY0NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreese", "html_url": "https://github.com/jreese", "followers_url": "https://api.github.com/users/jreese/followers", "following_url": "https://api.github.com/users/jreese/following{/other_user}", "gists_url": "https://api.github.com/users/jreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreese/subscriptions", "organizations_url": "https://api.github.com/users/jreese/orgs", "repos_url": "https://api.github.com/users/jreese/repos", "events_url": "https://api.github.com/users/jreese/events{/privacy}", "received_events_url": "https://api.github.com/users/jreese/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-26T09:09:57Z", "updated_at": "2018-08-27T11:35:18Z", "closed_at": "2018-08-27T11:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for releasing this!\r\n\r\nI've been trying to execute multiple steps, and can't seem to find a way.\r\n\r\nI could of course create multiple `Query()` chains but then the diff and file-writing would happen more than once. \r\n\r\nIs there a way to chain multiple select&filter clauses in a single query and then execute them?\r\n\r\nFrom reading the bowler source code it seemed like maybe I could do this:\r\n\r\n```python\r\n(\r\n    Query()\r\n    .select(...)\r\n    .modify(...)\r\n    .select(...)\r\n    .modify(...)\r\n    .execute(...)\r\n)\r\n```\r\nbut this actually seems to silently overwrite the first select/modify. The second one gets executed correctly but the first disappears into the void.\r\n", "performed_via_github_app": null, "score": 1.0}]}