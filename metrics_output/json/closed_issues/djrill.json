{"total_count": 145, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/anymail/django-anymail/issues/199", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/199/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/199/events", "html_url": "https://github.com/anymail/django-anymail/issues/199", "id": 674161315, "node_id": "MDU6SXNzdWU2NzQxNjEzMTU=", "number": 199, "title": "SES backend not sending email to bcc", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136474, "node_id": "MDU6TGFiZWwzMzkxMzY0NzQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T09:15:41Z", "updated_at": "2020-08-06T15:04:14Z", "closed_at": "2020-08-06T15:04:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version: **django-anymail==7.1.0**\r\n* ESP (Mailgun, SendGrid, etc.): **SES**\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\n```\r\nEMAIL_BACKEND = \"anymail.backends.amazon_ses.EmailBackend\"\r\nANYMAIL = {\r\n    'AMAZON_SES_MESSAGE_TAG_NAME': 'Type',\r\n    'WEBHOOK_SECRET': os.environ.get('ANYMAIL_WEBHOOK_SECRET', '')\r\n}\r\n```\r\n* Versions of Django, requests, python: **Django 2.2**\r\n* Exact error message and/or stack trace\r\nEmails are not received on the BCC address\r\n\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\n```\r\nmsg = EmailMultiAlternatives(\r\n            subject=subject,\r\n            body=body_text,\r\n            from_email='{} <{}>'.format(from_email_name, from_email),\r\n            to=[to],\r\n            cc=[cc],\r\n            bcc=[bcc]\r\n        )\r\n\r\n        msg.esp_extra = {\r\n            'Tags': [\r\n                {'Name': 'App', 'Value': '{}'.format(self.app_name).replace(' ', '_')}\r\n            ]\r\n        }\r\n\r\n        if attachments and type(attachments) == list:\r\n            msg.attachments = attachments\r\n\r\n        if body_html:\r\n            msg.attach_alternative(body_html, 'text/html')\r\n\r\n        self.last_send_status = msg.send()\r\n        log.info('Email sent')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/197", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/197/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/197/events", "html_url": "https://github.com/anymail/django-anymail/issues/197", "id": 673565915, "node_id": "MDU6SXNzdWU2NzM1NjU5MTU=", "number": 197, "title": "Inbound UnicodeEncodeError on Python 2.7", "user": {"login": "kika115", "id": 32838660, "node_id": "MDQ6VXNlcjMyODM4NjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/32838660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kika115", "html_url": "https://github.com/kika115", "followers_url": "https://api.github.com/users/kika115/followers", "following_url": "https://api.github.com/users/kika115/following{/other_user}", "gists_url": "https://api.github.com/users/kika115/gists{/gist_id}", "starred_url": "https://api.github.com/users/kika115/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kika115/subscriptions", "organizations_url": "https://api.github.com/users/kika115/orgs", "repos_url": "https://api.github.com/users/kika115/repos", "events_url": "https://api.github.com/users/kika115/events{/privacy}", "received_events_url": "https://api.github.com/users/kika115/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 2256325092, "node_id": "MDU6TGFiZWwyMjU2MzI1MDky", "url": "https://api.github.com/repos/anymail/django-anymail/labels/python2", "name": "python2", "color": "f9d0c4", "default": false, "description": "Python 2-only issue"}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-08-05T14:03:15Z", "updated_at": "2020-08-05T19:46:35Z", "closed_at": "2020-08-05T19:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version : 6. \r\n* ESP Postmark\r\n* django 1.11.20 python 2.7.5 requests==2.24.0 \r\n![image](https://user-images.githubusercontent.com/32838660/89422215-57882480-d735-11ea-8846-75e4dab9df82.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/195", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/195/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/195/events", "html_url": "https://github.com/anymail/django-anymail/issues/195", "id": 669873052, "node_id": "MDU6SXNzdWU2Njk4NzMwNTI=", "number": 195, "title": "Minor feature request - Post-send signal to have esp_extra field", "user": {"login": "zehawki", "id": 8095144, "node_id": "MDQ6VXNlcjgwOTUxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8095144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zehawki", "html_url": "https://github.com/zehawki", "followers_url": "https://api.github.com/users/zehawki/followers", "following_url": "https://api.github.com/users/zehawki/following{/other_user}", "gists_url": "https://api.github.com/users/zehawki/gists{/gist_id}", "starred_url": "https://api.github.com/users/zehawki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zehawki/subscriptions", "organizations_url": "https://api.github.com/users/zehawki/orgs", "repos_url": "https://api.github.com/users/zehawki/repos", "events_url": "https://api.github.com/users/zehawki/events{/privacy}", "received_events_url": "https://api.github.com/users/zehawki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T14:25:56Z", "updated_at": "2020-07-31T23:25:07Z", "closed_at": "2020-07-31T23:25:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to send the esp_extra param through to post_send signal?\r\n\r\nHere's my usecase:\r\n\r\n1. Standard mails go via SES, tracked via SES Event Publishing. This is the default config done by setting AMAZON_SES_CONFIGURATION_SET_NAME\r\n2. At post_send, the info is written to the DB for tracking. All OK so far\r\n3. Admin mails also go via SES, but these need not be tracked. So I've overridden this using msg.esp_extra (custom ConfigurationSetName) when sending these mails out. This is also working as expected.\r\n4. But now at post_send, I dont find the esp_extra field, so cant prevent this needless write to DB.\r\n\r\nI've looked through the documentation and I think its not provided...\r\n\r\nOR is there another way to handle this usecase?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/194", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/194/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/194/events", "html_url": "https://github.com/anymail/django-anymail/issues/194", "id": 667342186, "node_id": "MDU6SXNzdWU2NjczNDIxODY=", "number": 194, "title": "Missing or invalid basic auth in Anymail Amazon SES webhook", "user": {"login": "zehawki", "id": 8095144, "node_id": "MDQ6VXNlcjgwOTUxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8095144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zehawki", "html_url": "https://github.com/zehawki", "followers_url": "https://api.github.com/users/zehawki/followers", "following_url": "https://api.github.com/users/zehawki/following{/other_user}", "gists_url": "https://api.github.com/users/zehawki/gists{/gist_id}", "starred_url": "https://api.github.com/users/zehawki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zehawki/subscriptions", "organizations_url": "https://api.github.com/users/zehawki/orgs", "repos_url": "https://api.github.com/users/zehawki/repos", "events_url": "https://api.github.com/users/zehawki/events{/privacy}", "received_events_url": "https://api.github.com/users/zehawki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495008181, "node_id": "MDU6TGFiZWw0OTUwMDgxODE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/docs", "name": "docs", "color": "c5def5", "default": false, "description": null}, {"id": 814278229, "node_id": "MDU6TGFiZWw4MTQyNzgyMjk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Amazon%20SES", "name": "esp:Amazon SES", "color": "d4c5f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-28T20:09:22Z", "updated_at": "2020-07-29T21:42:21Z", "closed_at": "2020-07-29T21:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for the package and the impossibly amazing documentation. \r\n\r\nI'm facing an issue with SES, where I get \"Missing or invalid basic auth in Anymail Amazon SES webhook\" when doing the subscriber confirmation step.\r\n\r\nI'm following exactly the steps in the documentation. Note that basic mail sending via Anymail is just fine.\r\n\r\nAnymail version: latest = 7.2\r\nESP: SES\r\nDjango: 2.2.11, requests: 2.23.0, python: 3.5\r\nExact error message: Missing or invalid basic auth in Anymail Amazon SES webhook\r\nUsing https with a x:y WEBHOOK_SECRET\r\n\r\n2 setups as follows, both with the same issue.\r\n\r\n1. localhost with dev server exposed via ngrok. \r\n2. localhost with nginx + uwsgi, exposed via ngrok\r\n\r\nThe ngrok dashboard shows that the SNS request comes in as follows:\r\n\r\nAccept-Encoding\tgzip,deflate\r\nAuthorization\tBasic ZmZHRXZ5dUlKMElNWFd1WjoqKioq\r\nContent-Length\t1596\r\nContent-Type\ttext/plain; charset=UTF-8\r\nHost\td5a7b6130b7d.ngrok.io\r\nUser-Agent\tAmazon Simple Notification Service Agent\r\nX-Amz-Sns-Message-Id\tf6cf73d2-25ae-4942-8407-16f1f7925bcd\r\nX-Amz-Sns-Message-Type\tSubscriptionConfirmation\r\nX-Amz-Sns-Topic-Arn\t<>\r\nX-Forwarded-For\t<>\r\nX-Forwarded-Proto\thttps\r\n\r\nWhich gets a 401 with\r\n\r\nWww-Authenticate\tBasic realm=\"Anymail WEBHOOK_SECRET\"\r\n\r\nThis is the same as #69 but I dont see a solution there....\r\n\r\n(Forgot to mention that `print(request.META.get('HTTP_AUTHORIZATION'))` for a POST via Postman is working fine, just to keep Anymail out of the loop)\r\n\r\nFew hours of trying stuff and I'm still stuck at this basic point. Any clues would be very appreciated. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/189", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/189/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/189/events", "html_url": "https://github.com/anymail/django-anymail/issues/189", "id": 663897356, "node_id": "MDU6SXNzdWU2NjM4OTczNTY=", "number": 189, "title": "Amazon SES - Emails to Bcc recipients are not being sent/delivered", "user": {"login": "mwheels", "id": 3514885, "node_id": "MDQ6VXNlcjM1MTQ4ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3514885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwheels", "html_url": "https://github.com/mwheels", "followers_url": "https://api.github.com/users/mwheels/followers", "following_url": "https://api.github.com/users/mwheels/following{/other_user}", "gists_url": "https://api.github.com/users/mwheels/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwheels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwheels/subscriptions", "organizations_url": "https://api.github.com/users/mwheels/orgs", "repos_url": "https://api.github.com/users/mwheels/repos", "events_url": "https://api.github.com/users/mwheels/events{/privacy}", "received_events_url": "https://api.github.com/users/mwheels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 814278229, "node_id": "MDU6TGFiZWw4MTQyNzgyMjk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Amazon%20SES", "name": "esp:Amazon SES", "color": "d4c5f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-22T16:35:44Z", "updated_at": "2020-07-22T20:42:50Z", "closed_at": "2020-07-22T20:42:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made the switch from Sendgrid to Amazon SES but as a result bcc recipients stopped receiving emails.\r\n\r\n`EmailMessage(subject='test', to=['to-mail@example.com'], cc=['cc-mail@example.com'], bcc=['bcc-mail@example.com']).send()`\r\n\r\nIn the AnymailStatus object of the EmailMessage all recipients show status \"queued\"\r\nand I don't receive any email events related to the bcc recipients.\r\n\r\n\r\n```\r\nANYMAIL = {\r\n    'WEBHOOK_SECRET': env.str('API_ANYMAIL_WEBHOOK_SECRET'),\r\n    'DEBUG_API_REQUESTS': False,\r\n    'SENDGRID_API_KEY': env.str('API_SENDGRID_API_KEY'),\r\n    'AMAZON_SES_CLIENT_PARAMS': {\r\n        'aws_access_key_id': env.str('API_AWS_ACCESS_KEY'),\r\n        'aws_secret_access_key': env.str('API_AWS_SECRET_ACCESS_KEY'),\r\n        'region_name': env.str('API_AWS_REGION_NAME'),\r\n    },\r\n    'AMAZON_SES_CONFIGURATION_SET_NAME': 'TrackingConfigSet',\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/188", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/188/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/188/events", "html_url": "https://github.com/anymail/django-anymail/issues/188", "id": 658408913, "node_id": "MDU6SXNzdWU2NTg0MDg5MTM=", "number": 188, "title": "pip install django-anymail[mailgun] - no matches found", "user": {"login": "banagale", "id": 1409710, "node_id": "MDQ6VXNlcjE0MDk3MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1409710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/banagale", "html_url": "https://github.com/banagale", "followers_url": "https://api.github.com/users/banagale/followers", "following_url": "https://api.github.com/users/banagale/following{/other_user}", "gists_url": "https://api.github.com/users/banagale/gists{/gist_id}", "starred_url": "https://api.github.com/users/banagale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/banagale/subscriptions", "organizations_url": "https://api.github.com/users/banagale/orgs", "repos_url": "https://api.github.com/users/banagale/repos", "events_url": "https://api.github.com/users/banagale/events{/privacy}", "received_events_url": "https://api.github.com/users/banagale/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495008181, "node_id": "MDU6TGFiZWw0OTUwMDgxODE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/docs", "name": "docs", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-16T17:37:25Z", "updated_at": "2020-07-23T01:54:33Z", "closed_at": "2020-07-23T01:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "It [looks like](https://github.com/anymail/django-anymail/blob/master/setup.py) only boto3 and sparkpost have requirements that can be added using the pypi extras option, is that correct?\r\n\r\nReason I ask is doing the default install given in readme, `pip install django-anymail[mailgun]` results in an error, in my case: `zsh: no matches found: django-anymail[mailgun]`\r\n\r\nI am using mailgun and I realize it has no dependencies, which it says in the onboarding instructions. However, if that is not a valid example, perhaps it would be better to simply list the services that do have dependencies and provide a working command for the default install.\r\n\r\nEdit: I see now [the docs](https://anymail.readthedocs.io/en/stable/installation/) do this but the readme perhaps is out of date? \r\n--\r\n* Anymail version 7.1\r\n* ESP (Mailgun, SendGrid, etc.) mailgun\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\n* Versions of Django, requests, python\r\n* Exact error message and/or stack trace\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/187", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/187/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/187/events", "html_url": "https://github.com/anymail/django-anymail/issues/187", "id": 648396222, "node_id": "MDU6SXNzdWU2NDgzOTYyMjI=", "number": 187, "title": "UnicodeEncodeError in SendGrid webhook", "user": {"login": "tcourtqtm", "id": 57504321, "node_id": "MDQ6VXNlcjU3NTA0MzIx", "avatar_url": "https://avatars3.githubusercontent.com/u/57504321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcourtqtm", "html_url": "https://github.com/tcourtqtm", "followers_url": "https://api.github.com/users/tcourtqtm/followers", "following_url": "https://api.github.com/users/tcourtqtm/following{/other_user}", "gists_url": "https://api.github.com/users/tcourtqtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcourtqtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcourtqtm/subscriptions", "organizations_url": "https://api.github.com/users/tcourtqtm/orgs", "repos_url": "https://api.github.com/users/tcourtqtm/repos", "events_url": "https://api.github.com/users/tcourtqtm/events{/privacy}", "received_events_url": "https://api.github.com/users/tcourtqtm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-30T18:18:30Z", "updated_at": "2020-07-25T00:32:46Z", "closed_at": "2020-07-25T00:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are seeing this error occasionally from our SendGrid webhook:\r\n\r\n```\r\nUnicodeEncodeError: 'charmap' codec can't encode character '\\ufffd' in position 43: character maps to <undefined>\r\n  File \"django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"django/utils/decorators.py\", line 43, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"anymail/webhooks/base.py\", line 109, in dispatch\r\n    return super(AnymailBaseWebhookView, self).dispatch(request, *args, **kwargs)\r\n  File \"django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"anymail/webhooks/base.py\", line 123, in post\r\n    events = self.parse_events(request)\r\n  File \"anymail/webhooks/sendgrid.py\", line 128, in parse_events\r\n    return [self.esp_to_anymail_event(request)]\r\n  File \"anymail/webhooks/sendgrid.py\", line 136, in esp_to_anymail_event\r\n    message = self.message_from_sendgrid_parsed(esp_event)\r\n  File \"anymail/webhooks/sendgrid.py\", line 192, in message_from_sendgrid_parsed\r\n    attachments=attachments,\r\n  File \"anymail/inbound.py\", line 289, in construct\r\n    part.set_payload(text, charset=text_charset)\r\n  File \"email/message.py\", line 315, in set_payload\r\n    if not isinstance(charset, Charset):\r\n  File \"encodings/cp1252.py\", line 12, in encode\r\n    return codecs.charmap_encode(input,errors,encoding_table)\r\n```\r\n\r\n* Anymail version: 7.1.0\r\n* ESP: SendGrid\r\n* Your ANYMAIL settings: all defaults except for secrets\r\n* Versions of Django, requests, python: python 3.6.9, Django 3.0.6, requests 2.22\r\n\r\nWe've seen this for a few different characters. Here is an example of the text that tripped this exception:\r\n\r\n```\r\nGood morning,\\n\\nAs per your request below, I\ufffdve done up a quote for you on our REDACTED.\\nI\ufffdve done up a one month quote as well as one for the full REDACTED.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/186", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/186/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/186/events", "html_url": "https://github.com/anymail/django-anymail/issues/186", "id": 642914338, "node_id": "MDU6SXNzdWU2NDI5MTQzMzg=", "number": 186, "title": "Doc links broken", "user": {"login": "karfau", "id": 135657, "node_id": "MDQ6VXNlcjEzNTY1Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/135657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karfau", "html_url": "https://github.com/karfau", "followers_url": "https://api.github.com/users/karfau/followers", "following_url": "https://api.github.com/users/karfau/following{/other_user}", "gists_url": "https://api.github.com/users/karfau/gists{/gist_id}", "starred_url": "https://api.github.com/users/karfau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karfau/subscriptions", "organizations_url": "https://api.github.com/users/karfau/orgs", "repos_url": "https://api.github.com/users/karfau/repos", "events_url": "https://api.github.com/users/karfau/events{/privacy}", "received_events_url": "https://api.github.com/users/karfau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T09:36:27Z", "updated_at": "2020-06-22T20:48:15Z", "closed_at": "2020-06-22T20:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "On this page https://pypi.org/project/django-anymail/ are the following links:\r\n\r\n> Full documentation: https://anymail.readthedocs.io/en/v7.1.0/\r\nPackage on PyPI: https://pypi.org/project/django-anymail/\r\nProject on Github: https://github.com/anymail/django-anymail\r\nChangelog: https://anymail.readthedocs.io/en/v7.1.0/changelog/\r\n\r\nBut the first and last one are broken\r\nhttps://anymail.readthedocs.io/en/stable/ works though", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/184", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/184/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/184/events", "html_url": "https://github.com/anymail/django-anymail/issues/184", "id": 610321850, "node_id": "MDU6SXNzdWU2MTAzMjE4NTA=", "number": 184, "title": "Use alternative JSONEncoder for serializing merge data", "user": {"login": "tcourtqtm", "id": 57504321, "node_id": "MDQ6VXNlcjU3NTA0MzIx", "avatar_url": "https://avatars3.githubusercontent.com/u/57504321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcourtqtm", "html_url": "https://github.com/tcourtqtm", "followers_url": "https://api.github.com/users/tcourtqtm/followers", "following_url": "https://api.github.com/users/tcourtqtm/following{/other_user}", "gists_url": "https://api.github.com/users/tcourtqtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcourtqtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcourtqtm/subscriptions", "organizations_url": "https://api.github.com/users/tcourtqtm/orgs", "repos_url": "https://api.github.com/users/tcourtqtm/repos", "events_url": "https://api.github.com/users/tcourtqtm/events{/privacy}", "received_events_url": "https://api.github.com/users/tcourtqtm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-30T19:14:19Z", "updated_at": "2020-06-06T18:20:28Z", "closed_at": "2020-06-06T18:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "As noted in [the docs](https://anymail.readthedocs.io/en/stable/sending/templates/#formatting-merge-data), anymail currently does not support certain data types when serializing merge data. In some cases, fixing the data to accommodate this restriction can be cumbersome.\r\n\r\nFor example, if you already have a serializer that produces the data needed, but which also includes properties with Decimals, dates, etc., then passing that to anymail requires manually fixing up the individual fields. For large, or deeply nested, data this might not be very desirable.\r\n\r\nCould anymail have an option to use a different JSONEncoder? Being able to swap in a different encoder, like the [Django JSON encoder](https://docs.djangoproject.com/en/3.0/topics/serialization/#djangojsonencoder) or any other custom  one, would be a nice way to solve this.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/183", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/183/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/183/events", "html_url": "https://github.com/anymail/django-anymail/issues/183", "id": 608638714, "node_id": "MDU6SXNzdWU2MDg2Mzg3MTQ=", "number": 183, "title": "Issue Batch Sending to GSuite Email Aliases", "user": {"login": "crawfordleeds", "id": 25166339, "node_id": "MDQ6VXNlcjI1MTY2MzM5", "avatar_url": "https://avatars0.githubusercontent.com/u/25166339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crawfordleeds", "html_url": "https://github.com/crawfordleeds", "followers_url": "https://api.github.com/users/crawfordleeds/followers", "following_url": "https://api.github.com/users/crawfordleeds/following{/other_user}", "gists_url": "https://api.github.com/users/crawfordleeds/gists{/gist_id}", "starred_url": "https://api.github.com/users/crawfordleeds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crawfordleeds/subscriptions", "organizations_url": "https://api.github.com/users/crawfordleeds/orgs", "repos_url": "https://api.github.com/users/crawfordleeds/repos", "events_url": "https://api.github.com/users/crawfordleeds/events{/privacy}", "received_events_url": "https://api.github.com/users/crawfordleeds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-28T21:50:50Z", "updated_at": "2020-04-29T16:37:10Z", "closed_at": "2020-04-29T00:59:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version: 7.1.0\r\n* ESP: SendGrid\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\n```python\r\nINSTALLED_APPS = [\r\n    ...\r\n    \"anymail\",  # Transactional Email\r\n    ...\r\n]\r\nANYMAIL = {\"SENDGRID_API_KEY\": env.str(\"SENDGRID_API_KEY\")}\r\nEMAIL_BACKEND = \"anymail.backends.sendgrid.EmailBackend\"\r\n```\r\n\r\n* Versions of Django, requests, python: 2.2.10 | 2.22.0 | 3.7.5\r\n\r\nI'm having issues batch sending in a very specific case where two of the emails belong to the same user, specifically when they are alias's of the same user through G Suite.\r\n\r\nI'll put in dummy domains to highlight the example. Assume I owned test.com and test2.com. I may have both of these emails configured in the same G Suite account such that I can send and receive from crawford@test.com and crawford@test2.com by logging into gmail from crawford@test.com.\r\n\r\nIn this scenario, I may want to send a batch email using anymail and SendGrid via the following:\r\n\r\n```python\r\nfrom django.core.mail import EmailMessage\r\n\r\nmessage = EmailMessage(to=[\"crawford@test.com\", \"crawford@test2.com\"])\r\nmessage.template_id = \"d-585141a716834e60b9bb2a599215c1c4\"\r\nmessage.merge_data = {\r\n    \"crawford@test.com\": {\"some_var\": \"Hello0\"},\r\n    \"crawford@test2.com\": {\"some_var\": \"Hello1\"},\r\n}\r\nmessage.send()\r\n```\r\n\r\n`message.send()` returns 1, as expected. However, only one message gets delivered. Looking at my SendGrid dashboard, I sometimes see activity showing both messages, sometimes just one.\r\n\r\nThe use case here is for a monthly status update email for a set of users. It is possible that users will have multiple accounts using emails that use different domains but are actually aliased to the same G Suite (or other email provider) user.\r\n\r\nWhile this may be a rare case, without a resolution, I was going to follow the [Django guide on sending multiple emails](https://docs.djangoproject.com/en/3.0/topics/email/#sending-multiple-emails) instead of the Anymail batch send. Is there an alternative recommendation for best practices when using Anymail?\r\n\r\nI'm suspicious this may be a G Suite or SendGrid but was hoping for feedback on if this could be an Anymail issue. If it's a limitation of Anymail I'd be happy to help contribute either to the docs or codebase to resolve the issue.\r\n\r\nAppreciate the help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/179", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/179/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/179/events", "html_url": "https://github.com/anymail/django-anymail/issues/179", "id": 580032993, "node_id": "MDU6SXNzdWU1ODAwMzI5OTM=", "number": 179, "title": "After upgrade to 7.x - it is impossible send one message with multiple recipients", "user": {"login": "vgrebenschikov", "id": 3735671, "node_id": "MDQ6VXNlcjM3MzU2NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3735671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgrebenschikov", "html_url": "https://github.com/vgrebenschikov", "followers_url": "https://api.github.com/users/vgrebenschikov/followers", "following_url": "https://api.github.com/users/vgrebenschikov/following{/other_user}", "gists_url": "https://api.github.com/users/vgrebenschikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgrebenschikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgrebenschikov/subscriptions", "organizations_url": "https://api.github.com/users/vgrebenschikov/orgs", "repos_url": "https://api.github.com/users/vgrebenschikov/repos", "events_url": "https://api.github.com/users/vgrebenschikov/events{/privacy}", "received_events_url": "https://api.github.com/users/vgrebenschikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-12T15:47:05Z", "updated_at": "2020-04-13T21:58:49Z", "closed_at": "2020-03-18T21:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n* django-anymail[sendgrid]==7.0.0\r\n* EMAIL_BACKEND = 'anymail.backends.sendgrid.EmailBackend'\r\n* Django==1.11.20, requests==2.21.0, python 3.7.4\r\n* AssertionError at sengrid.py:137 in build_merge_data\r\n```\r\nassert len(personalization[\"to\"]) == 1\r\n```\r\n\r\nLooks like problem was introduced in [d2d568b6d3](https://github.com/anymail/django-anymail/commit/d2d568b6d33acf0a0893dd107d96af02f5993946)\r\n(@medmunds - can you advice was it intentional?)\r\n\r\nbefore - assert on multiple personalizations:\r\n```\r\nassert len(self.data[\"personalizations\"]) == 1\r\n```\r\nafter - assert on multiple recipients in one mail:\r\n```\r\nassert len(personalization[\"to\"]) == 1\r\n```\r\nWhich completely broke my case when multiple recipients are specified in to_addresses (see below)\r\n\r\nStacktrace:\r\n> File \".../django/core/mail/message.py\", line 348, in send\r\n>      return self.get_connection(fail_silently).send_messages([self])\r\n> File \".../anymail/backends/base.py\", line 95, in send_messages\r\n>      sent = self._send(message)\r\n> File \".../anymail/backends/base_requests.py\", line 60, in _send\r\n>      return super(AnymailRequestsBackend, self)._send(message)\r\n> File \".../anymail/backends/base.py\", line 125, in _send\r\n>      response = self.post_to_esp(payload, message)\r\n> File \".../anymail/backends/base_requests.py\", line 71, in post_to_esp\r\n>      params = payload.get_request_params(self.api_url)\r\n> File \".../anymail/backends/base_requests.py\", line 166, in get_request_params\r\n>      data=self.serialize_data(),\r\n> File \".../anymail/backends/sendgrid.py\", line 104, in serialize_data\r\n>      self.build_merge_data()\r\n> File \".../anymail/backends/sendgrid.py\", line 137, in build_merge_data\r\n>      assert len(personalization[\"to\"]) == 1\r\n> AssertionError\r\n\r\n\r\n```\r\nfrom django.core.mail import EmailMultiAlternatives\r\n\r\ndef send_mail(\r\n    template_id, subject='', body='', body_html='', from_address=None, to_addresses=None,\r\n    context=None,\r\n):\r\n    msg = EmailMultiAlternatives(subject, body, from_address, to_addresses)\r\n\r\n    if template_id:\r\n        msg.merge_global_data = context\r\n        msg.template_id = template_id\r\n\r\n    if body_html:\r\n        msg.attach_alternative(body_html, 'text/html')\r\n\r\n    try:\r\n        msg.send()\r\n    except AnymailError:\r\n        logger.exception(\"Failed to send message with Anymail\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/178", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/178/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/178/events", "html_url": "https://github.com/anymail/django-anymail/issues/178", "id": 573433575, "node_id": "MDU6SXNzdWU1NzM0MzM1NzU=", "number": 178, "title": "Sparkpost webhook gives \"method not support 405\" response", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-29T23:54:50Z", "updated_at": "2020-03-01T00:07:20Z", "closed_at": "2020-03-01T00:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail 7.0.0\r\n* ESP == SparkPost\r\n* Default from the installation instructions\r\n* Django 2.2, requests==2.22.0\r\n* When adding the webhook through sparkpost, sparkpost receives: \"POST to webhook target URL failed with non-2xx response code 405\"\r\n\r\nI'm not sure why or how. Did there change something within sparkpost? Directly entering the url in my browser also gives 405.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/176", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/176/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/176/events", "html_url": "https://github.com/anymail/django-anymail/issues/176", "id": 555694130, "node_id": "MDU6SXNzdWU1NTU2OTQxMzA=", "number": 176, "title": "Email send but console show me `AnymailRequestAPIError`", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-27T16:38:07Z", "updated_at": "2020-01-27T17:11:12Z", "closed_at": "2020-01-27T17:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version\r\ndjango-anymail[mailgun]==7.0.0\r\n* ESP (Mailgun, SendGrid, etc.)\r\nMailGiun\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\n```python\r\nINSTALLED_APPS += [\"anymail\"]  # noqa F405\r\nEMAIL_BACKEND = \"anymail.backends.mailgun.EmailBackend\"\r\n# https://anymail.readthedocs.io/en/stable/installation/#anymail-settings-reference\r\nANYMAIL = {\r\n    \"MAILGUN_API_KEY\": env(\"MAILGUN_API_KEY\"),\r\n    \"MAILGUN_SENDER_DOMAIN\": env(\"MAILGUN_DOMAIN\"),\r\n    \"MAILGUN_API_URL\": env(\"MAILGUN_API_URL\", default=\"https://api.mailgun.net/v3\"),\r\n}\r\n```\r\n```bash\r\nMAILGUN_API_KEY=redacted\r\nMAILGUN_DOMAIN=osforenergy.com\r\nMAILGUN_API_URL=https://api.mailgun.net/v3/osforenergy.com\r\n```\r\n\r\n* Versions of Django, requests, python\r\ndjango==3.0.2\r\nrequests==2.22.0\r\nPython==3.7.6 from `Dockerfile`\r\n`FROM python:3.7-slim-buster`\r\n\r\n* Exact error message and/or stack trace\r\n```python\r\nIn [2]: from django.core.mail import send_mail\r\n   ...:\r\n   ...: send_mail(\r\n   ...:     'Test again',\r\n   ...:     'Why Anymail APIError?',\r\n   ...:     'noreply@osforenergy.com',\r\n   ...:     ['cs.sarit@gmail.com'],\r\n   ...:     fail_silently=False,\r\n   ...: )\r\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\n/usr/local/lib/python3.7/site-packages/anymail/backends/base_requests.py in deserialize_json_response(self, response, payload, message)\r\n    101         try:\r\n--> 102             return response.json()\r\n    103         except ValueError:\r\n\r\n/usr/local/lib/python3.7/site-packages/requests/models.py in json(self, **kwargs)\r\n    888                     return complexjson.loads(\r\n--> 889                         self.content.decode(encoding), **kwargs\r\n    890                     )\r\n\r\n/usr/local/lib/python3.7/json/__init__.py in loads(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    347             parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 348         return _default_decoder.decode(s)\r\n    349     if cls is None:\r\n\r\n/usr/local/lib/python3.7/json/decoder.py in decode(self, s, _w)\r\n    336         \"\"\"\r\n--> 337         obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338         end = _w(s, end).end()\r\n\r\n/usr/local/lib/python3.7/json/decoder.py in raw_decode(self, s, idx)\r\n    354         except StopIteration as err:\r\n--> 355             raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356         return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAnymailRequestsAPIError                   Traceback (most recent call last)\r\n<ipython-input-2-c167a1f8f97d> in <module>\r\n      6     'noreply@osforenergy.com',\r\n      7     ['cs.sarit@gmail.com'],\r\n----> 8     fail_silently=False,\r\n      9 )\r\n\r\n/usr/local/lib/python3.7/site-packages/django/core/mail/__init__.py in send_mail(subject, message, from_email, recipient_list, fail_silently, auth_user, auth_password, connection, html_message)\r\n     58         mail.attach_alternative(html_message, 'text/html')\r\n     59\r\n---> 60     return mail.send()\r\n     61\r\n     62\r\n\r\n/usr/local/lib/python3.7/site-packages/django/core/mail/message.py in send(self, fail_silently)\r\n    274             # send to.\r\n    275             return 0\r\n--> 276         return self.get_connection(fail_silently).send_messages([self])\r\n    277\r\n    278     def attach(self, filename=None, content=None, mimetype=None):\r\n\r\n/usr/local/lib/python3.7/site-packages/anymail/backends/base.py in send_messages(self, email_messages)\r\n     93             for message in email_messages:\r\n     94                 try:\r\n---> 95                     sent = self._send(message)\r\n     96                 except AnymailError:\r\n     97                     if self.fail_silently:\r\n\r\n/usr/local/lib/python3.7/site-packages/anymail/backends/base_requests.py in _send(self, message)\r\n     58                 \"(This is either an implementation error in {class_name}, \"\r\n     59                 \"or you are incorrectly calling _send directly.)\".format(class_name=class_name))\r\n---> 60         return super(AnymailRequestsBackend, self)._send(message)\r\n     61\r\n     62     def post_to_esp(self, payload, message):\r\n\r\n/usr/local/lib/python3.7/site-packages/anymail/backends/base.py in _send(self, message)\r\n    126         message.anymail_status.esp_response = response\r\n    127\r\n--> 128         recipient_status = self.parse_recipient_status(response, payload, message)\r\n    129         message.anymail_status.set_recipient_status(recipient_status)\r\n    130\r\n\r\n/usr/local/lib/python3.7/site-packages/anymail/backends/mailgun.py in parse_recipient_status(self, response, payload, message)\r\n     59         # The only way to detect rejected, etc. is via webhooks.\r\n     60         # (*Any* invalid recipient addresses will generate a 400 API error)\r\n---> 61         parsed_response = self.deserialize_json_response(response, payload, message)\r\n     62         try:\r\n     63             message_id = parsed_response[\"id\"]\r\n\r\n/usr/local/lib/python3.7/site-packages/anymail/backends/base_requests.py in deserialize_json_response(self, response, payload, message)\r\n    104             raise AnymailRequestsAPIError(\"Invalid JSON in %s API response\" % self.esp_name,\r\n    105                                           email_message=message, payload=payload, response=response,\r\n--> 106                                           backend=self)\r\n    107\r\n    108     @staticmethod\r\n\r\nAnymailRequestsAPIError: Invalid JSON in Mailgun API response\r\nSending a message to cs.sarit@gmail.com from noreply@osforenergy.com\r\nMailgun API response 200 (OK): 'Mailgun Magnificent API'\r\n```\r\n\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\n```python\r\nIn [2]: from django.core.mail import send_mail\r\n   ...:\r\n   ...: send_mail(\r\n   ...:     'Test again',\r\n   ...:     'Why Anymail APIError?',\r\n   ...:     'noreply@osforenergy.com',\r\n   ...:     ['cs.sarit@gmail.com'],\r\n   ...:     fail_silently=False,\r\n   ...: )\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/172", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/172/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/172/events", "html_url": "https://github.com/anymail/django-anymail/issues/172", "id": 536596939, "node_id": "MDU6SXNzdWU1MzY1OTY5Mzk=", "number": 172, "title": "Tests: Mailgun has changed inline attachment reporting in some events", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-11T20:28:45Z", "updated_at": "2019-12-11T22:53:26Z", "closed_at": "2019-12-11T22:53:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometime between [2019-12-02](https://travis-ci.org/anymail/django-anymail/builds/619762598) and [2019-12-05](https://travis-ci.org/anymail/django-anymail/builds/621364799), Mailgun changed their event reporting around inline attachments. Previously, inline attachments were *not* included in the event's `message.attachments` array. Now, inline attachments *are* included in that array in the *Accepted* event. Other events (like *Delivered* or *Opened*) still include only true attachments in `message.attachments`.\r\n\r\nAnymail's Mailgun live integration tests verify the attachments reported in the *Accepted* event, and so have been failing since this change. This only affects the test (and Mailgun's event reporting); the image is still correctly handled as an inline attachment in the sent message.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/171", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/171/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/171/events", "html_url": "https://github.com/anymail/django-anymail/issues/171", "id": 514800289, "node_id": "MDU6SXNzdWU1MTQ4MDAyODk=", "number": 171, "title": "HandleBars not working ", "user": {"login": "mcroni", "id": 9542980, "node_id": "MDQ6VXNlcjk1NDI5ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9542980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcroni", "html_url": "https://github.com/mcroni", "followers_url": "https://api.github.com/users/mcroni/followers", "following_url": "https://api.github.com/users/mcroni/following{/other_user}", "gists_url": "https://api.github.com/users/mcroni/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcroni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcroni/subscriptions", "organizations_url": "https://api.github.com/users/mcroni/orgs", "repos_url": "https://api.github.com/users/mcroni/repos", "events_url": "https://api.github.com/users/mcroni/events{/privacy}", "received_events_url": "https://api.github.com/users/mcroni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-30T16:14:31Z", "updated_at": "2019-11-08T02:19:25Z", "closed_at": "2019-11-08T00:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version: django-anymail==7.0.0\r\n* ESP: Mailgun\r\n*  Django==2.0.4, Python 3.6\r\n* Exact error message and/or stack trace\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\n\r\n\r\nAnymail used to work with my settings and mailgun, but now the variables i want to replace in my templates dont get replaced i only get this in my emails %recipient.name% . Even used the code below as a test \r\n```\r\nfrom django.core.mail import EmailMessage\r\n\r\nmessage = EmailMessage(\r\n    subject=None,  # use the subject in our stored template\r\n    from_email=\"marketing@example.com\",\r\n    to=[\"Wile E. <wile@example.com>\", \"rr@example.com\"])\r\nmessage.template_id = \"after_sale_followup_offer\"  # use this ESP stored template\r\nmessage.merge_data = {  # per-recipient data to merge into the template\r\n    'wile@example.com': {'NAME': \"Wile E.\",\r\n                         'OFFER': \"15% off anvils\"},\r\n    'rr@example.com':   {'NAME': \"Mr. Runner\"},\r\n}\r\nmessage.merge_global_data = {  # merge data for all recipients\r\n    'PARTNER': \"Acme, Inc.\",\r\n    'OFFER': \"5% off any Acme product\",  # a default if OFFER missing for recipient\r\n}\r\nmessage.send()\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/170", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/170/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/170/events", "html_url": "https://github.com/anymail/django-anymail/issues/170", "id": 514793081, "node_id": "MDU6SXNzdWU1MTQ3OTMwODE=", "number": 170, "title": "* django-anymail==7.0.0", "user": {"login": "mcroni", "id": 9542980, "node_id": "MDQ6VXNlcjk1NDI5ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9542980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcroni", "html_url": "https://github.com/mcroni", "followers_url": "https://api.github.com/users/mcroni/followers", "following_url": "https://api.github.com/users/mcroni/following{/other_user}", "gists_url": "https://api.github.com/users/mcroni/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcroni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcroni/subscriptions", "organizations_url": "https://api.github.com/users/mcroni/orgs", "repos_url": "https://api.github.com/users/mcroni/repos", "events_url": "https://api.github.com/users/mcroni/events{/privacy}", "received_events_url": "https://api.github.com/users/mcroni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-30T16:05:21Z", "updated_at": "2019-10-30T16:05:39Z", "closed_at": "2019-10-30T16:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version\r\n* ESP (Mailgun, SendGrid, etc.)\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\n* Versions of Django, requests, python\r\n* Exact error message and/or stack trace\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/168", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/168/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/168/events", "html_url": "https://github.com/anymail/django-anymail/issues/168", "id": 503322313, "node_id": "MDU6SXNzdWU1MDMzMjIzMTM=", "number": 168, "title": "Postmark batch support docs update", "user": {"login": "Honza-m", "id": 32596100, "node_id": "MDQ6VXNlcjMyNTk2MTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/32596100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Honza-m", "html_url": "https://github.com/Honza-m", "followers_url": "https://api.github.com/users/Honza-m/followers", "following_url": "https://api.github.com/users/Honza-m/following{/other_user}", "gists_url": "https://api.github.com/users/Honza-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/Honza-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Honza-m/subscriptions", "organizations_url": "https://api.github.com/users/Honza-m/orgs", "repos_url": "https://api.github.com/users/Honza-m/repos", "events_url": "https://api.github.com/users/Honza-m/events{/privacy}", "received_events_url": "https://api.github.com/users/Honza-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495008181, "node_id": "MDU6TGFiZWw0OTUwMDgxODE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/docs", "name": "docs", "color": "c5def5", "default": false, "description": null}, {"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T09:07:23Z", "updated_at": "2019-10-07T19:22:19Z", "closed_at": "2019-10-07T19:22:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nGoing through the documentation I've noticed that the table [this main ESP page](https://anymail.readthedocs.io/en/stable/esps/) shows that the Postmark implementation does not support the merge_data argument, however on the [ESP doc page](https://anymail.readthedocs.io/en/stable/esps/postmark/) the documentation says:\r\n\r\n>Changed in version 4.2: Added Postmark merge_data and batch sending support. (Earlier Anymail releases only supported merge_global_data with Postmark.)\r\n\r\nCould you please update the table to reflect that? It had me really sad and confused for a while.\r\n\r\nKeep up the good work, anymail is awesome!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/167", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/167/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/167/events", "html_url": "https://github.com/anymail/django-anymail/issues/167", "id": 495940272, "node_id": "MDU6SXNzdWU0OTU5NDAyNzI=", "number": 167, "title": "Add attachments to list of receivers", "user": {"login": "mcroni", "id": 9542980, "node_id": "MDQ6VXNlcjk1NDI5ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9542980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcroni", "html_url": "https://github.com/mcroni", "followers_url": "https://api.github.com/users/mcroni/followers", "following_url": "https://api.github.com/users/mcroni/following{/other_user}", "gists_url": "https://api.github.com/users/mcroni/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcroni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcroni/subscriptions", "organizations_url": "https://api.github.com/users/mcroni/orgs", "repos_url": "https://api.github.com/users/mcroni/repos", "events_url": "https://api.github.com/users/mcroni/events{/privacy}", "received_events_url": "https://api.github.com/users/mcroni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T17:47:04Z", "updated_at": "2019-09-30T20:22:53Z", "closed_at": "2019-09-30T20:22:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, this isnt exactly an issue but i am looking for a way to add different attachments to a mail i send out to multiple receivers and i am using mailgun as my backend email provider. Wondering if that can be done like the way `merge_data` works for individual recipients. Thanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/164", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/164/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/164/events", "html_url": "https://github.com/anymail/django-anymail/issues/164", "id": 490674749, "node_id": "MDU6SXNzdWU0OTA2NzQ3NDk=", "number": 164, "title": "[Question]: How to handle ReadTimeout", "user": {"login": "SHxKM", "id": 6573474, "node_id": "MDQ6VXNlcjY1NzM0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6573474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SHxKM", "html_url": "https://github.com/SHxKM", "followers_url": "https://api.github.com/users/SHxKM/followers", "following_url": "https://api.github.com/users/SHxKM/following{/other_user}", "gists_url": "https://api.github.com/users/SHxKM/gists{/gist_id}", "starred_url": "https://api.github.com/users/SHxKM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SHxKM/subscriptions", "organizations_url": "https://api.github.com/users/SHxKM/orgs", "repos_url": "https://api.github.com/users/SHxKM/repos", "events_url": "https://api.github.com/users/SHxKM/events{/privacy}", "received_events_url": "https://api.github.com/users/SHxKM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-07T20:02:09Z", "updated_at": "2019-09-07T22:27:52Z", "closed_at": "2019-09-07T22:27:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI think this is more question than error or bug. I've recently switched from SMTP based sending to API based sending in order to be able to tag my Mailgun transactional emails.\r\n I'm wondering about the error below and what's the best way to handle it. I _never_ saw these kind of errors before.\r\n\r\n* Anymail version - 6.1.0\r\n\r\n* ESP (Mailgun, SendGrid, etc.) - Mailgun\r\n\r\n\r\n* Versions of Django, requests, python:\r\n\r\n- Django: 2.1.11\r\n- Python: 3.6.8\r\n- requests: 2.20.0\r\n\r\n* Exact error message and/or stack trace:\r\n\r\n```\r\nAnymailRequestsAPIError\r\nError posting to https://api.mailgun.net/v3/mg.myapp.io/messages:\r\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.mailgun.net', port=443): Read timed out. (read timeout=30)\r\nSending a message to myuser@emailaddress.com from MyApp <notifications@mg.myapp.io>\r\n```\r\n\r\nI'm wondering if I should be contacting Mailgun about this, or write logic that will retry the email sending task myself? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/162", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/162/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/162/events", "html_url": "https://github.com/anymail/django-anymail/issues/162", "id": 488891424, "node_id": "MDU6SXNzdWU0ODg4OTE0MjQ=", "number": 162, "title": "Sendinblue: support multiple tags in webhooks", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 849239067, "node_id": "MDU6TGFiZWw4NDkyMzkwNjc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendinBlue", "name": "esp:SendinBlue", "color": "d4c5f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T01:15:50Z", "updated_at": "2019-09-07T20:39:50Z", "closed_at": "2019-09-04T22:45:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ESP: Sendinblue\r\nAnymail version: not-yet-released version including Sendinblue updates from #158 \r\n\r\n#158 adds support for sending Sendinblue messages with multiple `tags`.\r\n\r\nNeed to test how multiple tags show up in webhook payloads, and (if necessary) update Anymail's Sendinblue webhook parser. (Sendinblue's [webhook doc](https://help.sendinblue.com/hc/en-us/articles/360007666479) still only covers a single `tag` field in all webhook payloads.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/161", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/161/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/161/events", "html_url": "https://github.com/anymail/django-anymail/issues/161", "id": 488886222, "node_id": "MDU6SXNzdWU0ODg4ODYyMjI=", "number": 161, "title": "Sendinblue: Upcoming breaking changes in template sends", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339159196, "node_id": "MDU6TGFiZWwzMzkxNTkxOTY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/community%20input%20needed", "name": "community input needed", "color": "fbca04", "default": false, "description": null}, {"id": 849239067, "node_id": "MDU6TGFiZWw4NDkyMzkwNjc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendinBlue", "name": "esp:SendinBlue", "color": "d4c5f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-09-04T00:49:56Z", "updated_at": "2019-09-07T20:33:52Z", "closed_at": "2019-09-07T20:33:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Edit] tl;dr: The next release of Anymail will only support Sendinblue's [\"new\" template language][new-template-language], and will lose the ability to send attachments with templates. Sendinblue users will need to [upgrade their templates](https://help.sendinblue.com/hc/en-us/articles/360000991960-How-to-convert-your-templates-to-the-New-Template-Language) for use with Anymail v7.0.\r\n\r\n<hr>\r\n\r\nESP: Sendinblue\r\nAnymail version: not-yet-released version including Sendinblue changes from #158\r\n\r\nThe next release of Anymail is likely to contain breaking changes for Sendinblue users who use Sendinblue templates: attachments will no longer be supported with templates, and you *may* need to convert each of your templates to Sendinblue's \"new template language\" using the upgrade link in their editor.\r\n\r\nPlease read on for details; comments and alternative proposals welcome.\r\n\r\n## Background\r\n\r\nSendinblue has quietly released their [\"new\" Django-like template language][new-template-language], and has also quietly deprecated the v3 API that was used to send templates written in the \"old\" template language. The new API removes several limitations of the old one, but only when used with new-style templates. The new API also (in practice) *removes* the ability to send attachments with any templates.\r\n\r\nAnymail v6.1 and earlier use the deprecated API for template sends. In #158 @Thorbenl has been kind enough to update Anymail's Sendinblue backend to use the new API for template sends. But this will introduce problems for older templates or for anyone wanting to send attachments with template email.\r\n\r\n## Problem\r\n\r\nIf you have existing \"old template language\" Sendinblue templates, the changes introduced in #158 don't work as expected, and in some cases lose functionality compared to Anymail v6.1:\r\n\r\n1. Display names in `to`, `cc`, and `bcc` emails do not appear\\* in the sent message headers (works in 6.1)\r\n2. `reply_to` overrides don't work\\*; the sent message uses the template value (works in 6.1)\r\n3. `from_email` and `subject` overrides don't work\\*; the sent message uses the template values for both (new feature from #158, not available in 6.1)\r\n4. Attachments don't work\\*\\* with templates (works in 6.1)\r\n\r\n\\* Limitations 1-3 only apply if your Sendinblue template is written in the \"old\" template language *and* the template contains `%PARAM%` personalization fields (Anymail `merge_data`). If your old-style template does not have any `%` params, *or* if you upgrade the template to Sendinblue's [\"new\" Django-style language][new-template-language], display names and header field overrides all work as expected.\r\n\r\n\\*\\* Limitation 4, about attachments not working with templates, appears to be a deliberate design decision by Sendinblue, and is noted in their [v3/smtp/email](https://developers.sendinblue.com/reference#sendtransacemail) documentation. (They do have a way to pass attachment content by URL, but there's not really a way to map standard Django/Python attachment objects into that.)\r\n\r\n[new-template-language]: https://help.sendinblue.com/hc/en-us/articles/360000268730-Using-the-SendinBlue-template-language-to-create-email-templates-NEW-\r\n\r\n\r\n## Proposed resolution\r\n\r\nI'm opening a support ticket with Sendinblue about limitations 1-3. I'm hoping it's just a bug and they'll be able to fix it. If not, users will need to upgrade their Sendinblue templates to the new language if they rely on any of these features. (There's a one-click upgrade in the Sendinblue template editor.)\r\n\r\nLimitation 4 will be documented as an Anymail breaking change in the next release.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/157", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/157/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/157/events", "html_url": "https://github.com/anymail/django-anymail/issues/157", "id": 483639710, "node_id": "MDU6SXNzdWU0ODM2Mzk3MTA=", "number": 157, "title": "Mailgun: disable workaround for Unicode attachment filenames if fixed urllib3 in use", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-08-21T20:37:32Z", "updated_at": "2019-09-07T20:39:57Z", "closed_at": "2019-09-04T01:04:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Anymail v4.3 added a workaround for an urllib3 issue that caused Mailgun problems when trying to send attachments with non-ASCII filenames. (See #125)\r\n\r\nThe underlying [urllib3 issue](https://github.com/urllib3/urllib3/issues/303) was [fixed](https://github.com/urllib3/urllib3/pull/1492) in urllib3 v1.25 (2019-04-22).\r\n\r\nAnymail's Mailgun backend should feature-detect that urllib3 fix, and disable the filename workaround in `MailgunPayload.get_request_params` when it's not required. (The workaround ends up being a no-op with a newer urllib3, but there's a bit of needless overhead along the way.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/155", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/155/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/155/events", "html_url": "https://github.com/anymail/django-anymail/issues/155", "id": 473447732, "node_id": "MDU6SXNzdWU0NzM0NDc3MzI=", "number": 155, "title": "Mailgun Template Support", "user": {"login": "anstosa", "id": 568242, "node_id": "MDQ6VXNlcjU2ODI0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/568242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anstosa", "html_url": "https://github.com/anstosa", "followers_url": "https://api.github.com/users/anstosa/followers", "following_url": "https://api.github.com/users/anstosa/following{/other_user}", "gists_url": "https://api.github.com/users/anstosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/anstosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anstosa/subscriptions", "organizations_url": "https://api.github.com/users/anstosa/orgs", "repos_url": "https://api.github.com/users/anstosa/repos", "events_url": "https://api.github.com/users/anstosa/events{/privacy}", "received_events_url": "https://api.github.com/users/anstosa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}, {"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-07-26T16:49:45Z", "updated_at": "2019-09-07T20:40:10Z", "closed_at": "2019-09-03T18:51:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docs claim that\r\n> Mailgun does not offer ESP stored templates, so Anymail\u2019s template_id message attribute is not supported with the Mailgun backend.\r\n\r\nbut that does not appear to be true: https://documentation.mailgun.com/en/latest/api-templates.html\r\n\r\nAm I mistaking either Anymail's or Mailgun's docs?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/154", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/154/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/154/events", "html_url": "https://github.com/anymail/django-anymail/issues/154", "id": 466998420, "node_id": "MDU6SXNzdWU0NjY5OTg0MjA=", "number": 154, "title": "Upcoming change to SparkPost OOB bounce raw_reason (is not breaking)", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007649, "node_id": "MDU6TGFiZWw0OTUwMDc2NDk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SparkPost", "name": "esp:SparkPost", "color": "d4c5f9", "default": false, "description": null}, {"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-11T16:41:19Z", "updated_at": "2019-07-11T16:41:29Z", "closed_at": "2019-07-11T16:41:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SparkPost has recently announced an upcoming change, in September 2019, to their out-of-band bounce notifications. The announcement suggests it \"could be a breaking change for customers using string-matching on the `raw_reason` field.\" \r\n\r\nAnymail does not attempt to interpret the contents of SparkPost's `raw_reason` field, so this change **will *not* be breaking** for Anymail itself. \r\n\r\nHowever, if you have implemented an Anymail tracking event handler that examines [`AnymailTrackingEvent.mta_response`](https://anymail.readthedocs.io/en/stable/sending/tracking/#anymail.signals.AnymailTrackingEvent.mta_response), you may need to update your code. Anymail forwards SparkPost's `raw_reason` to tracking handlers as the `mta_response`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/153", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/153/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/153/events", "html_url": "https://github.com/anymail/django-anymail/issues/153", "id": 462883612, "node_id": "MDU6SXNzdWU0NjI4ODM2MTI=", "number": 153, "title": "Mailgun: Separate configuration of \"Private API key\" vs. \"HTTP webhook signing key\" [after Mailgun key rotation]", "user": {"login": "dominik-lekse", "id": 4815608, "node_id": "MDQ6VXNlcjQ4MTU2MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4815608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominik-lekse", "html_url": "https://github.com/dominik-lekse", "followers_url": "https://api.github.com/users/dominik-lekse/followers", "following_url": "https://api.github.com/users/dominik-lekse/following{/other_user}", "gists_url": "https://api.github.com/users/dominik-lekse/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominik-lekse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominik-lekse/subscriptions", "organizations_url": "https://api.github.com/users/dominik-lekse/orgs", "repos_url": "https://api.github.com/users/dominik-lekse/repos", "events_url": "https://api.github.com/users/dominik-lekse/events{/privacy}", "received_events_url": "https://api.github.com/users/dominik-lekse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-01T19:54:32Z", "updated_at": "2019-07-07T23:31:17Z", "closed_at": "2019-07-07T22:38:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\n- I currently evaluate Anymail in my Django project to integrate with Mailgun to be able to process inbound mails via Mailgun routes and the webhook of Anymail and to send mails via Mailgun.\r\n- The Mailgun API security distinguishes between a \"Private API key\" and a \"HTTP webhook signing key\" which are different.\r\n- According to the Anymail documentation, the Mailgun ESP needs to be provided the `ANYMAIL_MAILGUN_API_KEY` setting which takes the Mailgun \"Private API key\".\r\n- However, if `ANYMAIL_MAILGUN_API_KEY` is the \"Private API key\", the verification of inbound mail via the webhook fails\r\n- Webhook HTTP requests from Mailgun are signed with the \"HTTP webhook signing key\"\r\n\r\n### Proposal\r\n\r\n- Define a new setting `ANYMAIL_MAILGUN_SIGNING_KEY` which must be configured with the \"HTTP webhook signing key\" when using the inbound mail functionality\r\n- `MailgunBaseWebhookView` should take the key to verify the signature from `ANYMAIL_MAILGUN_SIGNING_KEY`\r\n\r\n### (Kind of) workaround\r\n\r\n- Depending on which API key is provided to `ANYMAIL_MAILGUN_API_KEY`, either inbound mails from Mailgun ESP or send mails via Mailgun ESP works, but not both\r\n- To allow inbound mails, set `ANYMAIL_MAILGUN_API_KEY` to the \"HTTP webhook signing key\"\r\n- To allow sending mails, set `ANYMAIL_MAILGUN_API_KEY` to the \"Private API key\"\r\n\r\n### Some notes\r\n\r\n- Before opening this issue, I have carefully scanned the Anymail documentation but was not able to find a hint\r\n- I have rotated all Mailgun keys at least once\r\n\r\n### Environment\r\n\r\n* Python 3.7.3\r\n* Anymail version: 6.0.1\r\n* ESP: Mailgun", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/152", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/152/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/152/events", "html_url": "https://github.com/anymail/django-anymail/issues/152", "id": 448675440, "node_id": "MDU6SXNzdWU0NDg2NzU0NDA=", "number": 152, "title": "Consistent merge functionality", "user": {"login": "slinkymanbyday", "id": 11174179, "node_id": "MDQ6VXNlcjExMTc0MTc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11174179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slinkymanbyday", "html_url": "https://github.com/slinkymanbyday", "followers_url": "https://api.github.com/users/slinkymanbyday/followers", "following_url": "https://api.github.com/users/slinkymanbyday/following{/other_user}", "gists_url": "https://api.github.com/users/slinkymanbyday/gists{/gist_id}", "starred_url": "https://api.github.com/users/slinkymanbyday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slinkymanbyday/subscriptions", "organizations_url": "https://api.github.com/users/slinkymanbyday/orgs", "repos_url": "https://api.github.com/users/slinkymanbyday/repos", "events_url": "https://api.github.com/users/slinkymanbyday/events{/privacy}", "received_events_url": "https://api.github.com/users/slinkymanbyday/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-27T05:45:00Z", "updated_at": "2019-06-01T08:46:28Z", "closed_at": "2019-06-01T08:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have recently moved from Mailgun to Sendgrid. As part of this I have noticed that the merge variables have a different format. \r\nFor example, %recipient.name% for mailgun and something like -name- or {{name}} for sendgrid.\r\n\r\nI feel like it would be helpful if anymail would have a consistent interface for this such that when changing mail provider, templates won't have to change.\r\n\r\nI would imagine the implementation would be something like:\r\n1) specify format string in settings similar to sendmail settings\r\n2) If needed, rewrite the body/subject with the correct format\r\n\r\nFor example:\r\nsettings:\r\n```\"MERGE_FIELD_FORMAT\": \"-{}-\"```\r\ntemplate:\r\n```Hello -name-, how are you?```\r\nmerge data:\r\n```\r\n{\r\n    'alice@example.com': {'name': \"Alice\"},\r\n}\r\n```\r\nresulting body for sendgrid: no rewrite necessary\r\n```Hello -name-, how are you?```\r\nresulting body for mailgun: \r\n```Hello %recipient.name%, how are you?```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/151", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/151/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/151/events", "html_url": "https://github.com/anymail/django-anymail/issues/151", "id": 447667475, "node_id": "MDU6SXNzdWU0NDc2Njc0NzU=", "number": 151, "title": "Configuring credentials for amazon SES", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 814278229, "node_id": "MDU6TGFiZWw4MTQyNzgyMjk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Amazon%20SES", "name": "esp:Amazon SES", "color": "d4c5f9", "default": false, "description": ""}, {"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-23T13:36:31Z", "updated_at": "2019-05-24T17:08:47Z", "closed_at": "2019-05-24T17:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not an error. \r\n\r\nI'm moving my application's email backend from Mandrill to SES. I like the feature **anymail** is providing and ease of changing provider without installing additional packages.\r\n\r\nMeanwhile, I'm setting up SES and Mandrill both through this package so that switching providers will be a single line swapping.\r\n\r\nBut, I couldn't locate in the documentation, how to provide AWS credentials?\r\nIt is mentioned to configure Boto3 but Boto3 is also used by `django-storages` and AWS credentials there are provided by simply putting CLIENT_ID and SECRET in the settings file\r\n```\r\nAWS_ACCESS_KEY_ID = 'client_id'\r\nAWS_SECRET_ACCESS_KEY = 'my_secret'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/150", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/150/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/150/events", "html_url": "https://github.com/anymail/django-anymail/issues/150", "id": 447640502, "node_id": "MDU6SXNzdWU0NDc2NDA1MDI=", "number": 150, "title": "Sendgrid: charset of text attachment is always iso-8859-1", "user": {"login": "nuschk", "id": 5167117, "node_id": "MDQ6VXNlcjUxNjcxMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5167117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuschk", "html_url": "https://github.com/nuschk", "followers_url": "https://api.github.com/users/nuschk/followers", "following_url": "https://api.github.com/users/nuschk/following{/other_user}", "gists_url": "https://api.github.com/users/nuschk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuschk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuschk/subscriptions", "organizations_url": "https://api.github.com/users/nuschk/orgs", "repos_url": "https://api.github.com/users/nuschk/repos", "events_url": "https://api.github.com/users/nuschk/events{/privacy}", "received_events_url": "https://api.github.com/users/nuschk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 849255546, "node_id": "MDU6TGFiZWw4NDkyNTU1NDY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/blocked", "name": "blocked", "color": "d93f0b", "default": false, "description": "Waiting on an external dependency"}, {"id": 495008181, "node_id": "MDU6TGFiZWw0OTUwMDgxODE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/docs", "name": "docs", "color": "c5def5", "default": false, "description": null}, {"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-05-23T12:43:19Z", "updated_at": "2019-12-12T20:03:03Z", "closed_at": "2019-07-07T22:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version\r\nLatest, 6.0.1\r\n\r\n* ESP (Mailgun, SendGrid, etc.)\r\nSendgrid\r\n\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\nDefault\r\n\r\n* Versions of Django, requests, python\r\ndjango==1.11.20\r\nrequests==2.20.0\r\npython==3.6.8\r\n\r\n* Exact error message and/or stack trace\r\nI'm sending an icalendar (ICS) file as attachment. The file's content is text (I don't think the exact content is relevant here, just note that there are some non-ascii chars around, like \u00fc, and \u00e4):\r\n\r\n```\r\nBEGIN:VCALENDAR\r\nVERSION:2.0\r\nPRODID:-//flatfox//flatfox.ch//\r\nMETHOD:REQUEST\r\nBEGIN:VEVENT\r\nSUMMARY:Viewing at Schreinerstrasse 64\\, 8004 Z\u00fcrich\r\nDTSTART;VALUE=DATE-TIME:20190526T150000Z\r\nDTEND;VALUE=DATE-TIME:20190526T153000Z\r\nDTSTAMP;VALUE=DATE-TIME:20190523T121031Z\r\nUID:036af9c4-74a8-4952-b4f0-a8212b80734a.201905261500@flatfox.ch\r\nSEQUENCE:9\r\nATTENDEE;CN=\"Bernhard M\u00e4der\";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED;ROLE=REQ\r\n -PARTICIPANT;RSVP=FALSE;X-NUM-GUESTS=0:MAILTO:<some_email>@flatfox.ch\r\nDESCRIPTION:Address: Schreinerstrasse 64\\, 8004 Z\u00fcrich\\nContact person: B\r\n ernhard M\u00e4der\\nWhen: Sun\\, 05/26/2019\\, 5 p.m.\\nAttendees: Max Muster - 2\r\n 738492379847\r\nLOCATION:Schreinerstrasse 64\\, 8004 Z\u00fcrich\r\nORGANIZER;CN=flatfox:MAILTO:<no_reply>@flatfox.ch\r\nPRIORITY:5\r\nSTATUS:CONFIRMED\r\nBEGIN:VALARM\r\nACTION:DISPLAY\r\nDESCRIPTION:Viewing at Schreinerstrasse 64\\, 8004 Z\u00fcrich\r\nTRIGGER:-PT30M\r\nEND:VALARM\r\nEND:VEVENT\r\nEND:VCALENDAR\r\n```\r\n\r\nThe resulting payload (as received by the email client, after the sendgrid roundtrip) is as follows:\r\n\r\n```\r\n--cc91f1040f2ddb86e28e23abd2298e8686508c1291386a1d824cb54aebce\r\nContent-Disposition: attachment; filename=\"termin.ics\" Content-Transfer-Encoding: base64 Content-Type: text/calendar; name=termin.ics; charset=iso-8859-1\r\nQkVHSU46VkNBTEVOREFSDQpWRVJTSU9OOjIuMA0KUFJPRElEOi0vL2ZsYXRmb3gvL2ZsYXRmb3gu\r\nY2gvLw0KTUVUSE9EOlJFUVVFU1QNCkJFR0lOOlZFVkVOVA0KU1VNTUFSWTpCZXNpY2h0aWd1bmcg\r\nZvxyIFNjaHJlaW5lcnN0cmFzc2UgNjRcLCA4MDA0IFr8cmljaA0KRFRTVEFSVDtWQUxVRT1EQVRF\r\nLVRJTUU6MjAxOTA1MjZUMTUwMDAwWg0KRFRFTkQ7VkFMVUU9REFURS1USU1FOjIwMTkwNTI2VDE1\r\nMzAwMFoNCkRUU1RBTVA7VkFMVUU9REFURS1USU1FOjIwMTkwNTIzVDEyMzUzNFoNClVJRDo2Mzhi\r\nYjBjYS1mMjhhLTQ4YWItYWVkOS04ODYxYmY1ZTg3NGQuMTY2OTg2QGZsYXRmb3guY2gNClNFUVVF\r\nTkNFOjENCkFUVEVOREVFO0NOPSJNYXggTXVzdGVyIjtDVVRZUEU9SU5ESVZJRFVBTDtQQVJUU1RB\r\nVD1BQ0NFUFRFRDtST0xFPVJFUS1QQVJUDQogSUNJUEFOVDtSU1ZQPUZBTFNFO1gtTlVNLUdVRVNU\r\nUz0wOk1BSUxUTzpiZXJuaGFyZC5tYWVkZXJAb3V0bG9vay5jb20NCkRFU0NSSVBUSU9OOkFkcmVz\r\nc2U6IFNjaHJlaW5lcnN0cmFzc2UgNjRcLCA4MDA0IFr8cmljaFxuS29udGFrdHBlcnNvbjogQmUN\r\nCiBybmhhcmQgTeRkZXJcblplaXQ6IFNvXCwgMjYuMDUuMjAxOVwsIDE3OjAwDQpMT0NBVElPTjpT\r\nY2hyZWluZXJzdHJhc3NlIDY0XCwgODAwNCBa/HJpY2gNCk9SR0FOSVpFUjtDTj1mbGF0Zm94Ok1B\r\nSUxUTzpjYWxlbmRhckBmbGF0Zm94LmNoDQpQUklPUklUWTo1DQpTVEFUVVM6Q09ORklSTUVEDQpC\r\nRUdJTjpWQUxBUk0NCkFDVElPTjpESVNQTEFZDQpERVNDUklQVElPTjpCZXNpY2h0aWd1bmcgZvxy\r\nIFNjaHJlaW5lcnN0cmFzc2UgNjRcLCA4MDA0IFr8cmljaA0KVFJJR0dFUjotUFQzME0NCkVORDpW\r\nQUxBUk0NCkVORDpWRVZFTlQNCkVORDpWQ0FMRU5EQVINCg==\r\n--cc91f1040f2ddb86e28e23abd2298e8686508c1291386a1d824cb54aebce--\r\n```\r\n\r\nThe problem with this:\r\n- The payload is encoded with UTF-8, then converted to base64\r\n- The charset states iso-8859-1 \r\n- Some mail client (outlook.com in particular) will now use the charset to decode the payload, which renders some characters wrongly. This is per spec, where the ICS's encoding may be deduced from the container's.\r\n\r\n*So, I'd like the charset to be set to `utf-8`.*\r\n\r\nAlso interesting, but not really important: gmail, thunderbird and a few other clients will (incorrectly) use UTF-8, as this is the default encoding for icalendar files.\r\n\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\nNone\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/149", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/149/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/149/events", "html_url": "https://github.com/anymail/django-anymail/issues/149", "id": 446128966, "node_id": "MDU6SXNzdWU0NDYxMjg5NjY=", "number": 149, "title": "6.0.1 ready for new Mailjet response field \"MessageUUID\" by 2019-06-03?", "user": {"login": "moseb", "id": 47785526, "node_id": "MDQ6VXNlcjQ3Nzg1NTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/47785526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moseb", "html_url": "https://github.com/moseb", "followers_url": "https://api.github.com/users/moseb/followers", "following_url": "https://api.github.com/users/moseb/following{/other_user}", "gists_url": "https://api.github.com/users/moseb/gists{/gist_id}", "starred_url": "https://api.github.com/users/moseb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moseb/subscriptions", "organizations_url": "https://api.github.com/users/moseb/orgs", "repos_url": "https://api.github.com/users/moseb/repos", "events_url": "https://api.github.com/users/moseb/events{/privacy}", "received_events_url": "https://api.github.com/users/moseb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646615837, "node_id": "MDU6TGFiZWw2NDY2MTU4Mzc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailjet", "name": "esp:Mailjet", "color": "d4c5f9", "default": false, "description": null}, {"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-20T13:49:36Z", "updated_at": "2019-05-20T16:53:51Z", "closed_at": "2019-05-20T16:48:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThe Mailjet API will return responses containing a new field `MessageUUID` by 2019-06-03 as [announced here](http://go.mailjet.com/nl2/mtrq/mu8s3.html?m=AMQAADvXGGkAAce8F3oAAGcXGWQAAAAAAAEAIZ_ZAAKwkgBc2SdWswwutFWCSFGzJwnZqe0ofgACkQI). Is django-anymail 6.0.1 considered ready for that change?\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/148", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/148/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/148/events", "html_url": "https://github.com/anymail/django-anymail/issues/148", "id": 443385591, "node_id": "MDU6SXNzdWU0NDMzODU1OTE=", "number": 148, "title": "UnicodeEncodeError in exception message", "user": {"login": "fdemmer", "id": 630975, "node_id": "MDQ6VXNlcjYzMDk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/630975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fdemmer", "html_url": "https://github.com/fdemmer", "followers_url": "https://api.github.com/users/fdemmer/followers", "following_url": "https://api.github.com/users/fdemmer/following{/other_user}", "gists_url": "https://api.github.com/users/fdemmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fdemmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fdemmer/subscriptions", "organizations_url": "https://api.github.com/users/fdemmer/orgs", "repos_url": "https://api.github.com/users/fdemmer/repos", "events_url": "https://api.github.com/users/fdemmer/events{/privacy}", "received_events_url": "https://api.github.com/users/fdemmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T13:01:25Z", "updated_at": "2019-05-19T18:37:58Z", "closed_at": "2019-05-19T18:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `errmsg` constructed in [`parse_address_list()`](https://github.com/anymail/django-anymail/blob/master/anymail/utils.py#L161) causes an exception, when any of the addresses contains a non-ascii character, because of the non-unicode string in `\", \".join(address_list_strings)`. This is only triggered, when there is an invalid email address in the list.\r\n\r\n* Anymail version: 5.0\r\n* ESP: Mailjet (but not relevant to issue)\r\n* Versions of Django 1.11.20, requests 2.20.1, python 2.7.16\r\n* Exact error message and/or stack trace\r\n\r\n```\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xc4' in position 114: ordinal not in range(128)\r\n[...]\r\n  File \"django/core/mail/message.py\", line 348, in send\r\n    return self.get_connection(fail_silently).send_messages([self])\r\n[...]\r\n  File \"anymail/backends/base.py\", line 95, in send_messages\r\n    sent = self._send(message)\r\n  File \"anymail/backends/base_requests.py\", line 60, in _send\r\n    return super(AnymailRequestsBackend, self)._send(message)\r\n  File \"anymail/backends/base.py\", line 124, in _send\r\n    payload = self.build_message_payload(message, self.send_defaults)\r\n  File \"anymail/backends/mailjet.py\", line 27, in build_message_payload\r\n    return MailjetPayload(message, defaults, self)\r\n  File \"anymail/backends/mailjet.py\", line 86, in __init__\r\n    auth=auth, headers=http_headers, *args, **kwargs)\r\n  File \"anymail/backends/base_requests.py\", line 148, in __init__\r\n    super(RequestsPayload, self).__init__(message, defaults, backend)\r\n  File \"anymail/backends/base.py\", line 275, in __init__\r\n    value = converter(value, field=attr)\r\n  File \"anymail/utils.py\", line 163, in parse_address_list\r\n    where=\" in `%s`\" % field if field else \"\",\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/147", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/147/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/147/events", "html_url": "https://github.com/anymail/django-anymail/issues/147", "id": 441464853, "node_id": "MDU6SXNzdWU0NDE0NjQ4NTM=", "number": 147, "title": "use of UNSET in AnymailMessage breaks compatibility with django-mailer?", "user": {"login": "ewingrj", "id": 30963004, "node_id": "MDQ6VXNlcjMwOTYzMDA0", "avatar_url": "https://avatars3.githubusercontent.com/u/30963004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ewingrj", "html_url": "https://github.com/ewingrj", "followers_url": "https://api.github.com/users/ewingrj/followers", "following_url": "https://api.github.com/users/ewingrj/following{/other_user}", "gists_url": "https://api.github.com/users/ewingrj/gists{/gist_id}", "starred_url": "https://api.github.com/users/ewingrj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ewingrj/subscriptions", "organizations_url": "https://api.github.com/users/ewingrj/orgs", "repos_url": "https://api.github.com/users/ewingrj/repos", "events_url": "https://api.github.com/users/ewingrj/events{/privacy}", "received_events_url": "https://api.github.com/users/ewingrj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-07T22:01:14Z", "updated_at": "2019-05-19T18:37:47Z", "closed_at": "2019-05-08T20:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version - 6.0\r\n* ESP (Mailgun, SendGrid, etc.)\r\n* Your ANYMAIL settings (change secrets to \"redacted\")\r\n* Versions of Django, requests, python\r\n* Exact error message and/or stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/django/core/management/base.py\", line 316, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/django/core/management/base.py\", line 353, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/mailer/management/commands/send_mail.py\", line 25, in handle\r\n    send_all()\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/mailer/engine.py\", line 155, in send_all\r\n    email.send()\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/django/core/mail/message.py\", line 291, in send\r\n    return self.get_connection(fail_silently).send_messages([self])\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/base.py\", line 95, in send_messages\r\n    sent = self._send(message)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/base_requests.py\", line 60, in _send\r\n    return super(AnymailRequestsBackend, self)._send(message)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/base.py\", line 124, in _send\r\n    payload = self.build_message_payload(message, self.send_defaults)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/mailjet.py\", line 29, in build_message_payload\r\n    return MailjetPayload(message, defaults, self)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/mailjet.py\", line 90, in __init__\r\n    auth=auth, headers=http_headers, *args, **kwargs)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/base_requests.py\", line 148, in __init__\r\n    super(RequestsPayload, self).__init__(message, defaults, backend)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/backends/base.py\", line 281, in __init__\r\n    value = converter(value, field=attr)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/utils.py\", line 181, in parse_single_address\r\n    parsed = parse_address_list([address], field=field)\r\n  File \"/Users/rjewing/.pyenv/versions/crowdly/lib/python3.7/site-packages/anymail/utils.py\", line 168, in parse_address_list\r\n    raise AnymailInvalidAddress(errmsg)\r\nanymail.exceptions.AnymailInvalidAddress: Invalid email address 'object object at 0x10f639f80' parsed from '<object object at 0x10f639f80>' in `envelope_sender`.\r\n```\r\n* Any other relevant code and settings (e.g., for problems\r\n  sending, your code that sends the message)\r\n\r\n`django-mailer` is mentioned in the docs, so it appears it should be supported, however I am getting the above error when I attempt to use `AnymailMessage`. It looks like this is b/c you check for `envelope_sender is not UNSET` however the `UNSET` object is not the same as when the message was created b/c `django-mailer` pickles & unpickles the email in a different process (cron job)\r\n\r\nIt works correctly when setting anymail attributes on django's `EmailMultiAlternatives`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/146", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/146/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/146/events", "html_url": "https://github.com/anymail/django-anymail/issues/146", "id": 428396741, "node_id": "MDU6SXNzdWU0MjgzOTY3NDE=", "number": 146, "title": "Randomly msg.anymail_status.message_id is set when sending to single recipient", "user": {"login": "justmobilize", "id": 1547881, "node_id": "MDQ6VXNlcjE1NDc4ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1547881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justmobilize", "html_url": "https://github.com/justmobilize", "followers_url": "https://api.github.com/users/justmobilize/followers", "following_url": "https://api.github.com/users/justmobilize/following{/other_user}", "gists_url": "https://api.github.com/users/justmobilize/gists{/gist_id}", "starred_url": "https://api.github.com/users/justmobilize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justmobilize/subscriptions", "organizations_url": "https://api.github.com/users/justmobilize/orgs", "repos_url": "https://api.github.com/users/justmobilize/repos", "events_url": "https://api.github.com/users/justmobilize/events{/privacy}", "received_events_url": "https://api.github.com/users/justmobilize/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-02T19:15:54Z", "updated_at": "2019-04-03T18:15:15Z", "closed_at": "2019-04-03T18:15:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\nUsing:\r\n- Python 3.6.7\r\n- Django==1.11.2\r\n- django-anymail==5.0\r\n- requests==2.21.0\r\n- Postmark\r\n- EMAIL_BACKEND = 'anymail.backends.postmark.EmailBackend'\r\n- ANYMAIL = {'POSTMARK_SERVER_TOKEN': 'xxxxxxxxxxxxxxxx'}\r\n\r\nWe send all of our emails to a single recipient, but sometimes `msg.anymail_status.message_id` is a set, looking at code it seams that should only happen if there are multiple recipients\r\n\r\nAny thoughts to why this might happen?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/144", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/144/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/144/events", "html_url": "https://github.com/anymail/django-anymail/issues/144", "id": 411825210, "node_id": "MDU6SXNzdWU0MTE4MjUyMTA=", "number": 144, "title": "AnymailRequestsAPIError with Mailgun API response 200 \"Mailgun Magnificent API\"", "user": {"login": "chiragchamoli", "id": 121390, "node_id": "MDQ6VXNlcjEyMTM5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/121390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chiragchamoli", "html_url": "https://github.com/chiragchamoli", "followers_url": "https://api.github.com/users/chiragchamoli/followers", "following_url": "https://api.github.com/users/chiragchamoli/following{/other_user}", "gists_url": "https://api.github.com/users/chiragchamoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/chiragchamoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chiragchamoli/subscriptions", "organizations_url": "https://api.github.com/users/chiragchamoli/orgs", "repos_url": "https://api.github.com/users/chiragchamoli/repos", "events_url": "https://api.github.com/users/chiragchamoli/events{/privacy}", "received_events_url": "https://api.github.com/users/chiragchamoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-02-19T09:27:52Z", "updated_at": "2019-12-15T22:13:33Z", "closed_at": "2019-02-21T08:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version: 5.0\r\n* ESP : Mailgun\r\n* Versions of Django 2.1.7\r\n* Exact error message and/or stack trace\r\n\r\nAnymailRequestsAPIError at /emails/\r\nInvalid JSON in Mailgun API response\r\nSending a message to chirax@gmail.com from dev.team@xxxx.com\r\nMailgun API response 200: OK Mailgun Magnificent API\r\n\r\nException Value: Invalid JSON in Mailgun API response\r\nSending a message to chirax@gmail.com from dev.team@xxxx.com\r\nMailgun API response 200: OK Mailgun Magnificent API\r\n\r\nAnymail is throwing an exception, but mailgun is sending 200\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/143", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/143/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/143/events", "html_url": "https://github.com/anymail/django-anymail/issues/143", "id": 408397161, "node_id": "MDU6SXNzdWU0MDgzOTcxNjE=", "number": 143, "title": "Sender address rejected when sending to certain domain with Mailgun", "user": {"login": "OmenApps", "id": 37490393, "node_id": "MDQ6VXNlcjM3NDkwMzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/37490393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OmenApps", "html_url": "https://github.com/OmenApps", "followers_url": "https://api.github.com/users/OmenApps/followers", "following_url": "https://api.github.com/users/OmenApps/following{/other_user}", "gists_url": "https://api.github.com/users/OmenApps/gists{/gist_id}", "starred_url": "https://api.github.com/users/OmenApps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OmenApps/subscriptions", "organizations_url": "https://api.github.com/users/OmenApps/orgs", "repos_url": "https://api.github.com/users/OmenApps/repos", "events_url": "https://api.github.com/users/OmenApps/events{/privacy}", "received_events_url": "https://api.github.com/users/OmenApps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-09T04:26:37Z", "updated_at": "2019-02-15T19:39:38Z", "closed_at": "2019-02-15T19:08:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having problems sending mail to certain domains via Mailgun with Anymail. Email to xxx@gmail.com and a most other domains goes through with no problem, but email to xxx@icloud.com fails.\r\n\r\nAnymail: Latest stable release\r\nESP: Mailgun\r\nDjango: 2.1\r\n\r\nMy settings:\r\n\r\n```\r\nINSTALLED_APPS += ['anymail']\r\nEMAIL_BACKEND = 'anymail.backends.mailgun.EmailBackend'\r\nANYMAIL = {\r\n    'MAILGUN_API_KEY': env('MAILGUN_API_KEY'),\r\n    'MAILGUN_SENDER_DOMAIN': env('MAILGUN_SENDER_DOMAIN'),\r\n}\r\n\r\n```\r\n\r\nhere, config.BASE_DOMAIN is 'myappdomain.com'\r\n\r\nBelow is the basic code I'm using to send email. In this example, I replaced the subject and content variables with strings for simplicity. We use a dedicated Mailgun sender domain, mg.myappdomain.com\r\n\r\n```\r\nmsg = EmailMultiAlternatives('subject', 'txt_content',\r\n                                         'contact@' + config.BASE_DOMAIN, [email])\r\n            msg.envelope_sender = 'contact@mg.' + config.BASE_DOMAIN\r\n            msg.attach_alternative('html_content', \"text/html\")\r\n            msg.send()\r\n```\r\n\r\n\r\nThe initial message in Mailgun logs is: Accepted: postmaster@mg.myappdomain.com \u2192 to_email_addy@icloud.com 'Password Reset E-mail'\r\n\r\nBut immediately afterward, I get: Will retry in 600 seconds: postmaster@mg.myappdomain.com \u2192 to_email_addy@icloud.com 'Password Reset E-mail' Server response: 450 4.1.8 <bounce+98e0eb.0a48d9-to_email_addy=icloud.com@mg.myappdomain.com>: Sender address rejected: Domain not found\r\n\r\n\r\n```\r\n{\r\n    \"severity\": \"temporary\",\r\n    \"tags\": [],\r\n    \"storage\": {\r\n        \"url\": \"https://se.api.mailgun.net/v3/domains/mg.myappdomain.com/messages/eRJwIjpmYWxzZSwiayI6ImI1MTY0N2M4LTcyMDjYNDU3Zi05ZTRkLWIwNGUwYzc0NmVkOCIsInMiOiJhZTkxXGI3YjcyIiwiYyI6InRhbmtiIn0=\",\r\n        \"key\": \"eyJwIjpmYWxzZSwigPI6ImI1MTY0N2M4LTcyMDgtNDU3Zi05ZTRkLWI07GUwYzc0NmVkOCIsInMiOiJhZTkxZGI3YjcyIiwiYyI6InRhbntiIn0=\"\r\n    },\r\n    \"delivery-status\": {\r\n        \"tls\": true,\r\n        \"mx-host\": \"mx5.mail.icloud.com\",\r\n        \"code\": 450,\r\n        \"description\": \"\",\r\n        \"session-seconds\": 0.6950631141662598,\r\n        \"retry-seconds\": 600,\r\n        \"attempt-no\": 1,\r\n        \"message\": \"4.1.8 <bounce+98e0eb.0a48d9-to_email_addy=icloud.com@mg.myappdomain.com>: Sender address rejected: Domain not found\",\r\n        \"certificate-verified\": true\r\n    },\r\n    \"recipient-domain\": \"icloud.com\",\r\n    \"id\": \"BtuPartKTRe50Ogyl2YrvB\",\r\n    \"campaigns\": [],\r\n    \"reason\": \"generic\",\r\n    \"user-variables\": {},\r\n    \"flags\": {\r\n        \"is-routed\": false,\r\n        \"is-authenticated\": true,\r\n        \"is-system-test\": false,\r\n        \"is-test-mode\": false\r\n    },\r\n    \"log-level\": \"warn\",\r\n    \"timestamp\": 1549685430.744174,\r\n    \"envelope\": {\r\n        \"transport\": \"smtp\",\r\n        \"sender\": \"postmaster@mg.myappdomain.com\",\r\n        \"sending-ip\": \"198.61.254.4\",\r\n        \"targets\": \"to_email_addy@icloud.com\"\r\n    },\r\n    \"message\": {\r\n        \"headers\": {\r\n            \"to\": \"to_email_addy@icloud.com\",\r\n            \"message-id\": \"20190209041019.1.D590260BF5E2D047@mg.myappdomain.com\",\r\n            \"from\": \"contact@myappdomain.com\",\r\n            \"subject\": \"Password Reset E-mail\"\r\n        },\r\n        \"attachments\": [],\r\n        \"size\": 1556\r\n    },\r\n    \"recipient\": \"to_email_addy@icloud.com\",\r\n    \"event\": \"failed\"\r\n}\r\n```\r\n\r\nI contacted Mailgun support, and this is their reply:\r\n\r\n> Thank you for contacting Mailgun support.\r\n> \r\n> It appears that messages are failing due to A DMARC issue. The from addresses on your messages: \"to_email_addy@myappdomain.com\", do not match with the sending domain of \"mg.myappdomain.com\".  To resolve this when creating your sending messages verify that the from address matche the sending domain. Please feel free to reach out to us should you require any further assistance.\r\n\r\n\r\nAny guidance would be appreciated. I read through the directions on the Mailgun section of Anymail docs, and have researched elsewhere as well, but no mater what I do, email to this domain fails. I have tried various combinations of using msg.envelope_sender directly and also using MAILGUN_SENDER_DOMAIN in my settings, but nothing seems to work.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/141", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/141/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/141/events", "html_url": "https://github.com/anymail/django-anymail/issues/141", "id": 407921112, "node_id": "MDU6SXNzdWU0MDc5MjExMTI=", "number": 141, "title": "Per-recipient metadata", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-07T22:12:42Z", "updated_at": "2019-02-24T19:43:36Z", "closed_at": "2019-02-23T21:32:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PR #134 proposes a new `merge_metadata` feature, which allows providing unique `metadata` for each recipient in a batch send. The PR implements `merge_metadata` for SendGrid.\r\n\r\nShould implement per-recipient metadata for these ESPs that can support it:\r\n* Mailgun (somewhat complicated: Anymail uses \"custom variables\" for `metadata`; these [can be set](https://documentation.mailgun.com/en/latest/user_manual.html#attaching-data-to-messages) per-recipient using \"recipient variables\"; need to avoid conflicts with `merge_data`, which also uses recipient variables)\r\n* Mailjet (batch send is an array of individual messages, including Mj-EventPayLoad) \r\n* Mandrill (top-level recipient_metadata is exactly the same form as proposed `merge_metadata`)\r\n* Postmark (batch send is an array of individual messages, including metadata) \r\n* SendGrid (individual custom_args in personalizations array are merged with top-level custom_args: PR #134)\r\n* SparkPost (individual metadata in recipients array are merged with top-level metadata)\r\n\r\nIt won't be possible to implement `merge_metadata` for these ESPs:\r\n* Amazon SES: not possible (Anymail uses X-Metadata custom header; SendBulkTemplatedEmail doesn't currently support custom headers)\r\n* SendinBlue: not applicable (SendinBlue's transactional APIs don't support batch sending)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/140", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/140/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/140/events", "html_url": "https://github.com/anymail/django-anymail/issues/140", "id": 407048144, "node_id": "MDU6SXNzdWU0MDcwNDgxNDQ=", "number": 140, "title": "Tests not running for Django 2.2 on pypy3.5-6.0", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-02-06T01:37:31Z", "updated_at": "2019-02-09T01:51:38Z", "closed_at": "2019-02-09T01:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Travis/tox is not running any tests under pypy3.5-6.0 for Django 2.2. (So that job appears to succeed, without testing anything.)\r\n\r\nCompare job log for [pypy3.5-6.0/Django2.2](https://travis-ci.org/anymail/django-anymail/jobs/489205746) with [pypy3.5-6.0/Django2.1](https://travis-ci.org/anymail/django-anymail/jobs/489205742) (which *does* run tests correctly).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/139", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/139/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/139/events", "html_url": "https://github.com/anymail/django-anymail/issues/139", "id": 406986252, "node_id": "MDU6SXNzdWU0MDY5ODYyNTI=", "number": 139, "title": "In SendGrid batch sends, should use different message_id for each recipient", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}, {"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-02-05T21:39:49Z", "updated_at": "2019-02-24T19:43:27Z", "closed_at": "2019-02-23T23:29:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(ESP: SendGrid; Anymail v3.0 and later)\r\n\r\nSince #109, Anymail generates a unique tracking [`message_id`](https://anymail.readthedocs.io/en/stable/esps/sendgrid/#sendgrid-message-id) for each SendGrid send.\r\n\r\nIf you are also using [batch sending](https://anymail.readthedocs.io/en/stable/esps/sendgrid/#batch-sending-merge-and-esp-templates), the same `message_id` is used for all recipients in the batch. This can complicate tracking send status, etc., on individual recipient messages.\r\n\r\nSince the `message_id` is implemented as a SendGrid `custom_args`, and SendGrid's `personalizations` format supports individual `custom_args` for each message in a batch, Anymail should generate a separate `message_id` for each recipient.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/138", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/138/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/138/events", "html_url": "https://github.com/anymail/django-anymail/issues/138", "id": 406870821, "node_id": "MDU6SXNzdWU0MDY4NzA4MjE=", "number": 138, "title": "Per-recipient message content using batch send", "user": {"login": "cycleconfident", "id": 46463851, "node_id": "MDQ6VXNlcjQ2NDYzODUx", "avatar_url": "https://avatars3.githubusercontent.com/u/46463851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cycleconfident", "html_url": "https://github.com/cycleconfident", "followers_url": "https://api.github.com/users/cycleconfident/followers", "following_url": "https://api.github.com/users/cycleconfident/following{/other_user}", "gists_url": "https://api.github.com/users/cycleconfident/gists{/gist_id}", "starred_url": "https://api.github.com/users/cycleconfident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cycleconfident/subscriptions", "organizations_url": "https://api.github.com/users/cycleconfident/orgs", "repos_url": "https://api.github.com/users/cycleconfident/repos", "events_url": "https://api.github.com/users/cycleconfident/events{/privacy}", "received_events_url": "https://api.github.com/users/cycleconfident/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-05T16:38:07Z", "updated_at": "2019-02-12T18:25:04Z", "closed_at": "2019-02-12T18:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the Postmark API docs, each recipient in a batch send (not using ESP templates) can contain it's own message content. I have also confirmed this with them over email.\r\n\r\nThe relevant API call is https://postmarkapp.com/developer/api/email-api#send-batch-emails\r\n\r\nWhen using Anymail, I can't see any way of using this functionality. Is the only way to not use batch send and send separate messages? I don't really want to use ESP templates either, to be honest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/137", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/137/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/137/events", "html_url": "https://github.com/anymail/django-anymail/issues/137", "id": 406585763, "node_id": "MDU6SXNzdWU0MDY1ODU3NjM=", "number": 137, "title": "Support of Built In Django Views and django.core.mail ", "user": {"login": "younes-alouani", "id": 32146526, "node_id": "MDQ6VXNlcjMyMTQ2NTI2", "avatar_url": "https://avatars0.githubusercontent.com/u/32146526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/younes-alouani", "html_url": "https://github.com/younes-alouani", "followers_url": "https://api.github.com/users/younes-alouani/followers", "following_url": "https://api.github.com/users/younes-alouani/following{/other_user}", "gists_url": "https://api.github.com/users/younes-alouani/gists{/gist_id}", "starred_url": "https://api.github.com/users/younes-alouani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/younes-alouani/subscriptions", "organizations_url": "https://api.github.com/users/younes-alouani/orgs", "repos_url": "https://api.github.com/users/younes-alouani/repos", "events_url": "https://api.github.com/users/younes-alouani/events{/privacy}", "received_events_url": "https://api.github.com/users/younes-alouani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T00:53:39Z", "updated_at": "2019-02-05T20:07:30Z", "closed_at": "2019-02-05T20:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just discovered this application and I have some questions. \r\nAre all the Django Methods in [django.core.mail](https://docs.djangoproject.com/en/2.1/topics/email/) Supported ?\r\nI'm using some built in views for authentication like [password reset view](https://github.com/django/django/blob/master/django/contrib/auth/views.py) that sends the mail. \r\nThe content of the email in the template `registration/password_reset_email.html` is bellow  : \r\n```\r\nSomeone asked for password reset for email {{ email }}. Follow the link below:\r\n{{ protocol}}://{{ domain }}{% url 'password_reset_confirm' uidb64=uid token=token %}\r\n```\r\n\r\nCan I use this built in view or should I create a new view to support html content in the email ?\r\nWill the link be clickable or the content will be plain text ?  \r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/136", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/136/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/136/events", "html_url": "https://github.com/anymail/django-anymail/issues/136", "id": 405180374, "node_id": "MDU6SXNzdWU0MDUxODAzNzQ=", "number": 136, "title": "Fetch body of sent message", "user": {"login": "cycleconfident", "id": 46463851, "node_id": "MDQ6VXNlcjQ2NDYzODUx", "avatar_url": "https://avatars3.githubusercontent.com/u/46463851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cycleconfident", "html_url": "https://github.com/cycleconfident", "followers_url": "https://api.github.com/users/cycleconfident/followers", "following_url": "https://api.github.com/users/cycleconfident/following{/other_user}", "gists_url": "https://api.github.com/users/cycleconfident/gists{/gist_id}", "starred_url": "https://api.github.com/users/cycleconfident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cycleconfident/subscriptions", "organizations_url": "https://api.github.com/users/cycleconfident/orgs", "repos_url": "https://api.github.com/users/cycleconfident/repos", "events_url": "https://api.github.com/users/cycleconfident/events{/privacy}", "received_events_url": "https://api.github.com/users/cycleconfident/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-31T10:34:05Z", "updated_at": "2019-02-05T16:34:15Z", "closed_at": "2019-02-05T16:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to get the (both HTML and text) body of a sent message using Anymail?\r\n\r\nSo, for example, if I send a batch of emails with a template that includes a tag for the recipient's name, how do I then get hold of the rendered HTML for each recipient?\r\n\r\nI'm using Postmark and I know their API has a \"message details\" endpoint that can be used but in order to use it, is the only way for me to code that separately? Anymail can't do this for me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/135", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/135/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/135/events", "html_url": "https://github.com/anymail/django-anymail/issues/135", "id": 403885302, "node_id": "MDU6SXNzdWU0MDM4ODUzMDI=", "number": 135, "title": "Should not raise an exception when \"to\" field is empty", "user": {"login": "ailionx", "id": 6605467, "node_id": "MDQ6VXNlcjY2MDU0Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6605467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailionx", "html_url": "https://github.com/ailionx", "followers_url": "https://api.github.com/users/ailionx/followers", "following_url": "https://api.github.com/users/ailionx/following{/other_user}", "gists_url": "https://api.github.com/users/ailionx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailionx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailionx/subscriptions", "organizations_url": "https://api.github.com/users/ailionx/orgs", "repos_url": "https://api.github.com/users/ailionx/repos", "events_url": "https://api.github.com/users/ailionx/events{/privacy}", "received_events_url": "https://api.github.com/users/ailionx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-28T16:02:11Z", "updated_at": "2019-02-24T19:43:15Z", "closed_at": "2019-02-05T19:36:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Normally, Django allows the email to be sent with \"to\" field to be empty. e.g. With recipients only in \"bcc\" field. Anymail should not raise an expection here:\r\nhttps://github.com/anymail/django-anymail/blob/3013eaf24bd255a3071d5f5a2b4f95c9f6244078/anymail/backends/postmark.py#L58", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/133", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/133/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/133/events", "html_url": "https://github.com/anymail/django-anymail/issues/133", "id": 401003610, "node_id": "MDU6SXNzdWU0MDEwMDM2MTA=", "number": 133, "title": "SEND_DEFAULTS setting not working", "user": {"login": "pro100filipp", "id": 12880697, "node_id": "MDQ6VXNlcjEyODgwNjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/12880697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro100filipp", "html_url": "https://github.com/pro100filipp", "followers_url": "https://api.github.com/users/pro100filipp/followers", "following_url": "https://api.github.com/users/pro100filipp/following{/other_user}", "gists_url": "https://api.github.com/users/pro100filipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro100filipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro100filipp/subscriptions", "organizations_url": "https://api.github.com/users/pro100filipp/orgs", "repos_url": "https://api.github.com/users/pro100filipp/repos", "events_url": "https://api.github.com/users/pro100filipp/events{/privacy}", "received_events_url": "https://api.github.com/users/pro100filipp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-19T14:58:46Z", "updated_at": "2019-01-19T15:08:51Z", "closed_at": "2019-01-19T15:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When constructing requests params with `RequestsPayload.get_request_params` default values are not merged into `data` dict.\r\n\r\n* Anymail version: 5.0\r\n* ESP: SendGrid (but seems to be present in all)\r\n* Django 1.11.16\r\n* requests 2.19.1\r\n* python 3.6.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/132", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/132/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/132/events", "html_url": "https://github.com/anymail/django-anymail/issues/132", "id": 394705345, "node_id": "MDU6SXNzdWUzOTQ3MDUzNDU=", "number": 132, "title": "Mailgun POST data missing attachments", "user": {"login": "madisvain", "id": 727994, "node_id": "MDQ6VXNlcjcyNzk5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/727994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madisvain", "html_url": "https://github.com/madisvain", "followers_url": "https://api.github.com/users/madisvain/followers", "following_url": "https://api.github.com/users/madisvain/following{/other_user}", "gists_url": "https://api.github.com/users/madisvain/gists{/gist_id}", "starred_url": "https://api.github.com/users/madisvain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madisvain/subscriptions", "organizations_url": "https://api.github.com/users/madisvain/orgs", "repos_url": "https://api.github.com/users/madisvain/repos", "events_url": "https://api.github.com/users/madisvain/events{/privacy}", "received_events_url": "https://api.github.com/users/madisvain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-28T19:36:59Z", "updated_at": "2018-12-28T20:28:17Z", "closed_at": "2018-12-28T20:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version - 5\r\n* ESP - Mailgun\r\n\r\nI'm getting some email webhooks from Mailgun with a *attachment* POST parameter that contains the JSON for attachment data like this:\r\n```json\r\n[\r\n    {\r\n        \"url\": \"https://storage.eu.mailgun.net/v3/domains/mailgun.upcount.app/messages/eyJwIjpmYWxzZSwiayI6ImE3ZGI0M2Q3LTk0M1QtNDkxNi04N2YwLThiZjAzNDFhZmJmZSIsInMiOiI4ZDUwM2U3ZjU4IiwiYyI6InRhbmtiIn0=/attachments/0\",\r\n        \"content-type\": \"application/pdf\",\r\n        \"name\": \"Hetzner_2018-12-19_R0008961359.pdf\",\r\n        \"size\": 59121\r\n    }\r\n]\r\n```\r\n\r\nSo the content is downloadable but the *attachment-count* is missing and the FILES content also.\r\n\r\nI'm using Mailgun EU if this makes a difference. Has anybody else had this issue come up - I'm making a fix for this in the MailgunInboundWebhookView. If somebody else has this issue I can make a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/130", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/130/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/130/events", "html_url": "https://github.com/anymail/django-anymail/issues/130", "id": 373079363, "node_id": "MDU6SXNzdWUzNzMwNzkzNjM=", "number": 130, "title": "[Proposal][Mailgun][webhooks] change event_types and reject_reason mappings", "user": {"login": "costela", "id": 94699, "node_id": "MDQ6VXNlcjk0Njk5", "avatar_url": "https://avatars0.githubusercontent.com/u/94699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/costela", "html_url": "https://github.com/costela", "followers_url": "https://api.github.com/users/costela/followers", "following_url": "https://api.github.com/users/costela/following{/other_user}", "gists_url": "https://api.github.com/users/costela/gists{/gist_id}", "starred_url": "https://api.github.com/users/costela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/costela/subscriptions", "organizations_url": "https://api.github.com/users/costela/orgs", "repos_url": "https://api.github.com/users/costela/repos", "events_url": "https://api.github.com/users/costela/events{/privacy}", "received_events_url": "https://api.github.com/users/costela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-23T16:05:41Z", "updated_at": "2018-11-01T19:26:50Z", "closed_at": "2018-11-01T19:26:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, it seems impossible to differentiate temporary from permanent failures by analyzing `AnymailTrackingEvent` created by the mailgun webhook.\r\nA delivery which had a temporary failure due to - for instance - a broken connection, will generate a webhook payload with (among other fields):\r\n```json\r\n{\r\n  \"event\": \"failed\",\r\n  \"reason\": \"generic\",\r\n  \"severity\": \"temporary\"\r\n}\r\n```\r\n\r\nThis gets mapped to a `AnymailTrackingEvent` with `event_type=BOUNCED` and `reject_reason=BOUNCED`, which is hardly helpful. In particular, in the case of a failed connection, it feels actually misleading, IMHO, since there was no actual bounce from the receiving server.\r\n\r\nLooking at `anymail/webhooks/mailgun.py`, I'd suggest doing something like the following in `esp_to_anymail_event()`:\r\n```python\r\nif event_type == EventType.BOUNCED and event_data['severity'] == 'temporary':\r\n  event_type = EventType.DEFERRED\r\n```\r\nAlso, changing the `reject_reasons` mapping from `generic \u2192 BOUNCED` to `generic \u2192 OTHER`. The rationale being: if Mailgun cannot interpret the error, we shouldn't assume it has any particular type.\r\n\r\nAdditionally, and mostly unrelated, we also see `\"reason\": \"greylisted\"` in our logs, which is currently not handled at all and might be mapped to `BOUNCED`?\r\n\r\nBefore working on a concrete PR, I thought I get some opinions on this. Thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/129", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/129/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/129/events", "html_url": "https://github.com/anymail/django-anymail/issues/129", "id": 373005643, "node_id": "MDU6SXNzdWUzNzMwMDU2NDM=", "number": 129, "title": "Confusing error when Anymail inbound webhook url used for Mailgun status-tracking webhook", "user": {"login": "vincent-lg", "id": 2088354, "node_id": "MDQ6VXNlcjIwODgzNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2088354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincent-lg", "html_url": "https://github.com/vincent-lg", "followers_url": "https://api.github.com/users/vincent-lg/followers", "following_url": "https://api.github.com/users/vincent-lg/following{/other_user}", "gists_url": "https://api.github.com/users/vincent-lg/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincent-lg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincent-lg/subscriptions", "organizations_url": "https://api.github.com/users/vincent-lg/orgs", "repos_url": "https://api.github.com/users/vincent-lg/repos", "events_url": "https://api.github.com/users/vincent-lg/events{/privacy}", "received_events_url": "https://api.github.com/users/vincent-lg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-23T13:39:58Z", "updated_at": "2018-11-07T02:15:50Z", "closed_at": "2018-11-07T02:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using mailgun and have followed the documentation to set up webhooks, listening for inbound messages.  When mailgun tries to notify the website, however, the POST request is answered by a 500 error which is rather cryptic for me.\r\n\r\n- Python version: 2.7.13.\r\n- Operating system: Linux (Debian 7).\r\n- ESP: mailgun.\r\n- Django version: 1.11.\r\n- Anymail version: 4.3.\r\n\r\nHere's the part of the traceback that (mostly) concerns `anymail`:\r\n\r\n```\r\n...\r\n  File \".../lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \".../local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \".../lib/python2.7/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \".../lib/python2.7/site-packages/django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \".../lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \".../lib/python2.7/site-packages/django/utils/decorators.py\", line 63, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \".../lib/python2.7/site-packages/anymail/webhooks/base.py\", line 109, in dispatch\r\n    return super(AnymailBaseWebhookView, self).dispatch(request, *args, **kwargs)\r\n  File \".../lib/python2.7/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \".../lib/python2.7/site-packages/anymail/webhooks/base.py\", line 123, in post\r\n    events = self.parse_events(request)\r\n  File \".../lib/python2.7/site-packages/anymail/webhooks/mailgun.py\", line 318, in parse_events\r\n    return [self.esp_to_anymail_event(request)]\r\n  File \".../lib/python2.7/site-packages/anymail/webhooks/mailgun.py\", line 329, in esp_to_anymail_e\r\nvent\r\n    message = self.message_from_mailgun_parsed(request)\r\n  File \".../lib/python2.7/site-packages/anymail/webhooks/mailgun.py\", line 371, in message_from_mai\r\nlgun_parsed\r\n    headers=json.loads(request.POST['message-headers']),  # includes From, To, Cc, Subject, etc.\r\n  File \".../lib/python2.7/site-packages/django/utils/datastructures.py\", line 85, in __getitem__\r\n    raise MultiValueDictKeyError(repr(key))\r\nMultiValueDictKeyError: \"'message-headers'\"\r\n```\r\n\r\nI would guess Mailgun somehow broke their API in more recent versions.  That's quite problematic in my case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/128", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/128/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/128/events", "html_url": "https://github.com/anymail/django-anymail/issues/128", "id": 367915917, "node_id": "MDU6SXNzdWUzNjc5MTU5MTc=", "number": 128, "title": "Mailgun silently discards attachments without filenames", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-08T19:06:01Z", "updated_at": "2018-10-12T01:00:54Z", "closed_at": "2018-10-11T23:51:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you send an attachment without a filename, Mailgun will silently ignore it. The message gets sent, but without that attachment.\r\n\r\nAnymail's Mailgun EmailBackend should raise an `AnymailUnsupportedFeature` exception if it detects an attachment without a filename. (Really, Mailgun's API should warn about this case, but because it doesn't, and because the behavior is unexpected and difficult to track down, Anymail should prevent it.)\r\n\r\n[Originally reported by @costela in [#125 comment](https://github.com/anymail/django-anymail/issues/125#issuecomment-427500525).]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/127", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/127/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/127/events", "html_url": "https://github.com/anymail/django-anymail/issues/127", "id": 367414858, "node_id": "MDU6SXNzdWUzNjc0MTQ4NTg=", "number": 127, "title": "Postmark integration tests failing", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-06T02:17:47Z", "updated_at": "2018-10-10T18:31:15Z", "closed_at": "2018-10-09T19:39:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "CI weekly build [failed](https://travis-ci.org/anymail/django-anymail/builds/437375434) on one of the Postmark integration tests. At first glance, it *might* be related to a change in Postmark API responses when using the POSTMARK_API_TEST test token (rather than a real API token).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/125", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/125/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/125/events", "html_url": "https://github.com/anymail/django-anymail/issues/125", "id": 363914608, "node_id": "MDU6SXNzdWUzNjM5MTQ2MDg=", "number": 125, "title": "Mailgun backend loses attachments with non-ASCII filenames", "user": {"login": "decibyte", "id": 224219, "node_id": "MDQ6VXNlcjIyNDIxOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/224219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decibyte", "html_url": "https://github.com/decibyte", "followers_url": "https://api.github.com/users/decibyte/followers", "following_url": "https://api.github.com/users/decibyte/following{/other_user}", "gists_url": "https://api.github.com/users/decibyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/decibyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decibyte/subscriptions", "organizations_url": "https://api.github.com/users/decibyte/orgs", "repos_url": "https://api.github.com/users/decibyte/repos", "events_url": "https://api.github.com/users/decibyte/events{/privacy}", "received_events_url": "https://api.github.com/users/decibyte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-26T08:34:08Z", "updated_at": "2018-10-12T01:02:06Z", "closed_at": "2018-10-10T22:07:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version: 4.2\r\n* ESP: Mailgun\r\n* Django: 1.11.8\r\n* Python: 3.5\r\n\r\nIt took me a while to narrow down the circumstances, but it seems that if an attachment has a file name longer than 64 bytes, it's lost. It's simply not part of the e-mail. Neither in my mailbox, nor visible in the Mailgun logs (the attachment list is empty).\r\n\r\nIt's not just the string length of the file name. If I use special characters (like `\u00e6\u00f8\u00e5`, which we happen to use a lot in Denmark), the allowed string length is shortened.\r\n\r\nInitially, I thought this was a Mailgun issue, but I've been in contact with their support, and they claim they don't have this limitation (they _do_ have a limit, but it's higher[1]). Also, if I send an e-mail with an attachment with a very long file name, based on [the `curl` example from their docs](https://documentation.mailgun.com/en/latest/api-sending.html#examples), the attachment is not lost.\r\n\r\nIf I send the e-mail using Django's built in SMTP backend, everything works fine with very long file names.\r\n\r\nOn the way, I thought special characters in general was the issue, but that's not the case:\r\n\r\n * The problem persists, even if I encode the file names with [`email.header.make_makeheader`](https://docs.python.org/3/library/email.header.html#email.header.make_header).\r\n * ASCII-only file names longer than 64 characters also fail.\r\n\r\nI've been digging around the source, hoping to find a way to fix it myself, but didn't have any luck. If someone can point me in the right direction, I'd love to provide a fix myself.\r\n\r\n[1] Quote from Mailgun support:\r\n\r\n> When sending attachments, the size limit is 25mb, so you will also want to verify that your attachment falls under that limit. Regarding the file name length, there can be an argument made for the limit being as high as 255 and as low as 78 depending on the environment. Even if we err on the side of caution and treat 78 as the max allowed, your filename length at 64 should still be acceptable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/124", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/124/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/124/events", "html_url": "https://github.com/anymail/django-anymail/issues/124", "id": 363274116, "node_id": "MDU6SXNzdWUzNjMyNzQxMTY=", "number": 124, "title": "ALLOWED_HOSTS setting", "user": {"login": "eriktelepovsky", "id": 2685808, "node_id": "MDQ6VXNlcjI2ODU4MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2685808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriktelepovsky", "html_url": "https://github.com/eriktelepovsky", "followers_url": "https://api.github.com/users/eriktelepovsky/followers", "following_url": "https://api.github.com/users/eriktelepovsky/following{/other_user}", "gists_url": "https://api.github.com/users/eriktelepovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriktelepovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriktelepovsky/subscriptions", "organizations_url": "https://api.github.com/users/eriktelepovsky/orgs", "repos_url": "https://api.github.com/users/eriktelepovsky/repos", "events_url": "https://api.github.com/users/eriktelepovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/eriktelepovsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-24T18:47:53Z", "updated_at": "2018-09-26T17:16:58Z", "closed_at": "2018-09-26T17:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. Can you help me? What should I set into ALLOWED_HOSTS Django setting to support mailgun webhooks, please? Any help is appreciated. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/123", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/123/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/123/events", "html_url": "https://github.com/anymail/django-anymail/issues/123", "id": 361860644, "node_id": "MDU6SXNzdWUzNjE4NjA2NDQ=", "number": 123, "title": "Update for upcoming SparkPost error reporting changes?", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007649, "node_id": "MDU6TGFiZWw0OTUwMDc2NDk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SparkPost", "name": "esp:SparkPost", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-19T17:57:47Z", "updated_at": "2018-10-12T00:19:01Z", "closed_at": "2018-10-12T00:19:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[**Update 2018-10-11:** No changes are required in Anymail. There are some *exceedingly unusual* cases where you may need to update your code: see [comment below](#issuecomment-429162614).]\r\n\r\nSparkPost has announced (apparently only by email?) changes in how errors are reported to the Transmissions API, taking effect on 2018-11-17. Some errors that are currently reported synchronously will be changed to asynchronous reporting. (So messages will appear to send successfully, and the errors will only be visible via webhooks or the SparkPost console. This is an approach used by many other ESPs.) And extended error codes are being removed from error messages.\r\n\r\nNeed to investigate how this might affect Anymail's SparkPost handling:\r\n\r\n* Verify updated SparkPost Transmissions error format is handled correctly by Anymail backend (and by underlying SparkPost python package)\r\n* Verify Anymail webhooks cover SparkPost \"Generation Failure\" events.\r\n\r\nExcerpt from the announcement email:\r\n\r\n<blockquote>\r\n... We are continuously looking for ways to further improve the reliability of our service, provide consistently low API response times and improve the user experience. To that end, there are three changes planned that relate to how we handle errors:\r\n\r\n* Move single recipient template validation and message generation to be asynchronous.\r\n* Move all inline template syntax validation to be asynchronous, affecting both single and multi-recipient transmissions.\r\n* Deprecate and remove the extended error codes.\r\n\r\nThese changes only affect the user experience for error cases and will not change the user experience for any successful (HTTP 200 response) API requests. The changes will take effect on **Nov 17, 2018** to give our customers time to prepare. \r\n\r\n#### Making single recipient transmissions asynchronous \r\n\r\nSparkPost will no longer perform synchronous template validation & message generation on single recipient transmissions. This means that the Transmissions API will no longer return a HTTP response of 4xx if there is a problem with the template syntax or substitution data. Instead, it will return a 200 response, and then a subsequent \u201cGeneration Failure\u201d webhook event that will provide details on the failure. These events will be available via webhooks or the Message Events API/UI. This behavior for single recipient transmissions will be the same as the current behavior for multi-recipient transmissions. \r\nThis is similar to changes earlier this year in which we moved single recipient suppression checks to be asynchronous. \r\n\r\n#### Making inline template syntax validation asynchronous \r\n\r\nThe second change to the Transmission API endpoint is that inline template syntax validation will no longer be performed synchronously. For both single and multi-recipient transmissions, the syntax validation will be done asynchronously, with a HTTP response of 4xx no longer returned for syntax error on inline templates. Instead, the API will return a 200 response, and then a subsequent \u201cGeneration Failure\u201d webhook event that will provide details on the failure. It is recommended that the template preview API is used before injecting with an inline template. \r\n\r\n#### Deprecating extended error codes for API Responses \r\n\r\nIn order to simplify the user experience, we are deprecating the API HTTP response with extended error codes. This will not affect the extended error codes that are returned via webhooks. These are descriptions and codes, in addition to the HTTP status and custom message, returned by some API endpoints including Transmissions, Templates, Sending Domains, Inbound Domains, Relay Webhooks, and Tracking Domains. These extra error fields add extra overhead and complexity to the client. We believe that the HTTP status code is usually sufficient with an optional error message when it adds necessary context to the client. \r\n</blockquote>\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/122", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/122/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/122/events", "html_url": "https://github.com/anymail/django-anymail/issues/122", "id": 357381867, "node_id": "MDU6SXNzdWUzNTczODE4Njc=", "number": 122, "title": "Support Postmark batch send and per-recipient merge_data", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}, {"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-05T20:03:14Z", "updated_at": "2018-09-07T18:14:16Z", "closed_at": "2018-09-07T00:24:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For most ESPs, Anymail supports [batch sending](https://anymail.readthedocs.io/en/stable/sending/templates/#batch-sending-with-merge-data). If `message.merge_data` is set, a separate copy of the message is sent to each recipient in the `to` list, potentially with per-recipient customizations (e.g., when combined with `template_id`).\r\n\r\nThe original release of Postmark's template APIs didn't support batch sending, and Anymail currently (v4.1) raises an unsupported feature error in the Postmark backend if a message's `merge_data` is set.\r\n\r\nPostmark appears to have [quietly](https://www.google.com/search?q=batchWithTemplates+site%3Ahttps%3A%2F%2Fpostmarkapp.com%2Fupdates&ie=UTF-8) added [/email/batchWithTemplates](https://postmarkapp.com/developer/api/templates-api#send-batch-with-templates) since the [original release](https://web.archive.org/web/20171007031648/https://postmarkapp.com/developer/api/templates-api). Anymail should use that API (and [/email/batch](https://postmarkapp.com/developer/api/email-api#send-batch-emails) for batch sends without a template) to implement batch sending for Postmark.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/121", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/121/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/121/events", "html_url": "https://github.com/anymail/django-anymail/issues/121", "id": 356282573, "node_id": "MDU6SXNzdWUzNTYyODI1NzM=", "number": 121, "title": "Postmark mail template not working", "user": {"login": "aldarund", "id": 571159, "node_id": "MDQ6VXNlcjU3MTE1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/571159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldarund", "html_url": "https://github.com/aldarund", "followers_url": "https://api.github.com/users/aldarund/followers", "following_url": "https://api.github.com/users/aldarund/following{/other_user}", "gists_url": "https://api.github.com/users/aldarund/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldarund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldarund/subscriptions", "organizations_url": "https://api.github.com/users/aldarund/orgs", "repos_url": "https://api.github.com/users/aldarund/repos", "events_url": "https://api.github.com/users/aldarund/events{/privacy}", "received_events_url": "https://api.github.com/users/aldarund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-02T13:28:36Z", "updated_at": "2018-09-07T18:14:51Z", "closed_at": "2018-09-05T19:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version 4.1\r\n* ESP (Mailgun, SendGrid, etc.) Postmark\r\n* Versions of Django, requests, python 2.1\r\n* Exact error message and/or stack trace\r\n```\r\nPostmark API response 422: Unprocessable Entity\r\n{\r\n  \"ErrorCode\": 1123,\r\n  \"Message\": \"Neither 'TextBody', 'HtmlBody', or 'Subject' may be specified when using a template for the email.\"\r\n}\r\n```\r\n```\r\n msg = AnymailMessage(subject=None, body=None, from_email=settings.DEFAULT_FROM_EMAIL,\r\n                             to=to)\r\n msg.merge_global_data = context\r\n msg.template_id = 123456\r\n msg.send()\r\n```\r\nThe problem is that django set body to '' even if None is passed\r\nhttps://github.com/django/django/blob/b9cf764be62e77b4777b3a75ec256f6209a57671/django/core/mail/message.py#L234\r\nBut postmark dont like even empty string and dont send such messages.\r\nSo the solution would be to set body to None in Postmark backend if template_id is set.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/120", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/120/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/120/events", "html_url": "https://github.com/anymail/django-anymail/issues/120", "id": 352626120, "node_id": "MDU6SXNzdWUzNTI2MjYxMjA=", "number": 120, "title": "Support for SendGrid new dynamic templates", "user": {"login": "juliomenendez", "id": 9697, "node_id": "MDQ6VXNlcjk2OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliomenendez", "html_url": "https://github.com/juliomenendez", "followers_url": "https://api.github.com/users/juliomenendez/followers", "following_url": "https://api.github.com/users/juliomenendez/following{/other_user}", "gists_url": "https://api.github.com/users/juliomenendez/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliomenendez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliomenendez/subscriptions", "organizations_url": "https://api.github.com/users/juliomenendez/orgs", "repos_url": "https://api.github.com/users/juliomenendez/repos", "events_url": "https://api.github.com/users/juliomenendez/events{/privacy}", "received_events_url": "https://api.github.com/users/juliomenendez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-21T16:50:54Z", "updated_at": "2018-08-28T03:46:59Z", "closed_at": "2018-08-25T01:22:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version: 4.0\r\n* ESP: SendGrid\r\n* Versions of Django, requests, python: Django 1.11.14, requests 2.18.4, Python 3.6.6\r\n* Exact error message and/or stack trace: SendGrid responds with a HTTP 400.\r\n\r\nBasically the merge_data is not used on Dynamic Templates. The context for the templates now needs to be defined in `personalizations.dynamic_template_data`. \r\nAPI documentation: https://sendgrid.com/docs/User_Guide/Transactional_Templates/how_to_send_an_email_with_transactional_templates.html#-Send-a-transactional-email\r\nsendgrid-python example: https://github.com/sendgrid/sendgrid-python/blob/master/use_cases/transational_templates.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/118", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/118/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/118/events", "html_url": "https://github.com/anymail/django-anymail/issues/118", "id": 345880474, "node_id": "MDU6SXNzdWUzNDU4ODA0NzQ=", "number": 118, "title": "Support new SparkPost A/B testing option", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 849255546, "node_id": "MDU6TGFiZWw4NDkyNTU1NDY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/blocked", "name": "blocked", "color": "d93f0b", "default": false, "description": "Waiting on an external dependency"}, {"id": 495007649, "node_id": "MDU6TGFiZWw0OTUwMDc2NDk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SparkPost", "name": "esp:SparkPost", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-30T18:31:33Z", "updated_at": "2019-02-24T19:40:27Z", "closed_at": "2019-02-24T19:40:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SparkPost has recently introduced [transactional A/B testing](https://www.sparkpost.com/docs/tech-resources/a-b-testing-sparkpost/), which automates comparing performance on transactional template variations.\r\n\r\nIf and when the [python-sparkpost](https://github.com/SparkPost/python-sparkpost) package is updated to support the new `ab_test_id` content option, it will become usable through Anymail's [`esp_extra`](https://anymail.readthedocs.io/en/stable/esps/sparkpost/#esp-extra-support) property.  (Until then, there's not really any way for Anymail to expose the feature, short of dropping python-sparkpost and writing directly to the SparkPost REST API.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/117", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/117/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/117/events", "html_url": "https://github.com/anymail/django-anymail/issues/117", "id": 345872497, "node_id": "MDU6SXNzdWUzNDU4NzI0OTc=", "number": 117, "title": "Support new Mailgun webhooks", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-30T18:12:18Z", "updated_at": "2018-08-19T19:54:12Z", "closed_at": "2018-08-14T19:45:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Mailgun has [recently introduced](https://www.mailgun.com/blog/same-api-new-tricks-get-event-notifications-just-in-time-with-webhooks) a new set of tracking webhooks, and has renamed the previous tracking webhooks as \"legacy\".\r\n\r\nAnymail should update to support Mailgun's new webhooks. (Until then, you'll need to choose the \"legacy\" option when configuring webhooks in the Mailgun control panel.)\r\n\r\nFor backwards compatibility, Anymail should continue to also accept the legacy webhook payload format.\r\n\r\nThe [new webhook payloads](https://documentation.mailgun.com/en/latest/user_manual.html#webhooks) use the same [data structure](https://documentation.mailgun.com/en/latest/api-events.html#event-structure) as Mailgun's event polling API, which should eliminate a lot of the oddities around the [legacy payloads](https://documentation.mailgun.com/en/latest/api-webhooks-deprecated.html#webhooks-parameters) (in particular, the complex logic to separate user metadata from Mailgun webhook data). Although the new payloads use the same `event` names as the legacy ones, the new payloads have separate `signature` and `event-data` sections, which can be used to differentiate. (The legacy payloads mix signature and token in at the payload root with other event parameters.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/116", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/116/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/116/events", "html_url": "https://github.com/anymail/django-anymail/issues/116", "id": 345864872, "node_id": "MDU6SXNzdWUzNDU4NjQ4NzI=", "number": 116, "title": "Document how to use new Mailgun EU region", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495008181, "node_id": "MDU6TGFiZWw0OTUwMDgxODE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/docs", "name": "docs", "color": "c5def5", "default": false, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-30T17:52:49Z", "updated_at": "2018-08-11T23:58:42Z", "closed_at": "2018-08-11T23:58:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Mailgun [has introduced](https://www.mailgun.com/blog/we-have-a-new-region-in-europe-yall) a new European region. Using it with Anymail should be as simple as providing the EU endpoint in Anymail's [`MAILGUN_API_URL`](https://anymail.readthedocs.io/en/stable/esps/mailgun/#std:setting-ANYMAIL_MAILGUN_API_URL) setting:\r\n\r\n```python\r\nANYMAIL = {\r\n    \"MAILGUN_API_KEY\": \"...\",\r\n    \"MAILGUN_API_URL\": \"https://api.eu.mailgun.net/v3\",\r\n    # ...\r\n}\r\n```\r\n\r\nShould update the Anymail docs to include this info.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/115", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/115/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/115/events", "html_url": "https://github.com/anymail/django-anymail/issues/115", "id": 343076363, "node_id": "MDU6SXNzdWUzNDMwNzYzNjM=", "number": 115, "title": "Amazon SES mangles non-ASCII message bodies if using open/click tracking", "user": {"login": "varche1", "id": 1057853, "node_id": "MDQ6VXNlcjEwNTc4NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1057853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varche1", "html_url": "https://github.com/varche1", "followers_url": "https://api.github.com/users/varche1/followers", "following_url": "https://api.github.com/users/varche1/following{/other_user}", "gists_url": "https://api.github.com/users/varche1/gists{/gist_id}", "starred_url": "https://api.github.com/users/varche1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varche1/subscriptions", "organizations_url": "https://api.github.com/users/varche1/orgs", "repos_url": "https://api.github.com/users/varche1/repos", "events_url": "https://api.github.com/users/varche1/events{/privacy}", "received_events_url": "https://api.github.com/users/varche1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 814278229, "node_id": "MDU6TGFiZWw4MTQyNzgyMjk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Amazon%20SES", "name": "esp:Amazon SES", "color": "d4c5f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-20T11:42:11Z", "updated_at": "2018-08-19T19:55:17Z", "closed_at": "2018-08-15T00:25:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI've got encoding problems for Amazon SES with SES Event Publishing for non-ASCII characters: \r\n![email1](https://user-images.githubusercontent.com/1057853/42999817-dbb600f2-8c27-11e8-8601-d1b6ce6a1be0.png)\r\n\r\nI found out that this problem only shows up when using `AMAZON_SES_CONFIGURATION_SET_NAME` (event tracking with SES Event Publishing)\r\n\r\nI also found out that the email content (`RawMessage` -> `Data`) is identical both when using `AMAZON_SES_CONFIGURATION_SET_NAME` and without it.\r\n\r\nThe problem is the way Amazon SES with SES Event Publishing treat with 'utf-8' encoding email content if `Content-Transfer-Encoding: 8bit`:\r\n```\r\nContent-Type: multipart/alternative;\r\n boundary=\"===============4882781876866556742==\"\r\nMIME-Version: 1.0\r\nSubject: Subject\r\nFrom: from@gmail.com\r\nTo: to@gmail.com\r\nDate: Fri, 20 Jul 2018 11:30:06 -0000\r\nMessage-ID: <20180720113006.12882.39747@localhost>\r\n\r\n--===============4882781876866556742==\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=\"utf-8\"\r\nContent-Transfer-Encoding: 8bit\r\n\r\n\u042d\u0442\u043e text body\r\n--===============4882781876866556742==\r\nMIME-Version: 1.0\r\nContent-Type: text/html; charset=\"utf-8\"\r\nContent-Transfer-Encoding: 8bit\r\n\r\n<html>\u042d\u0442\u043e html <b>body</b></html>\r\n--===============4882781876866556742==--\r\n```\r\n\r\n`Content-Transfer-Encoding: base64` works well, but how Anymail can use it?\r\n\r\nHow to reproduce:\r\n```\r\nfrom django.core.mail import send_mail, get_connection\r\nconnection = get_connection(\"anymail.backends.amazon_ses.EmailBackend\")\r\n\r\nsend_mail(\r\n    \"Subject\",\r\n    \"\u042d\u0442\u043e text body\",\r\n    \"from@gmail.com\",\r\n    [\"to@gmail.com\"],\r\n    html_message=\"<html>\u042d\u0442\u043e html <b>body</b></html>\",\r\n    connection=connection\r\n)\r\n```\r\n\r\nBy the way https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html use `Content-Transfer-Encoding: base64`\r\n\r\n* Anymail version: 3.0\r\n* ESP (Mailgun, SendGrid, etc.): Amazon SES\r\n* Versions of Django, requests, python: Django 1.10.8; requests 2.13.0; Python 2.7.12 \r\n* Exact error message and/or stack trace: -\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/114", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/114/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/114/events", "html_url": "https://github.com/anymail/django-anymail/issues/114", "id": 338678892, "node_id": "MDU6SXNzdWUzMzg2Nzg4OTI=", "number": 114, "title": "Support Postmark metadata", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-05T18:23:20Z", "updated_at": "2018-08-19T19:54:29Z", "closed_at": "2018-08-11T23:58:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Postmark has recently added support for [custom metadata](https://postmarkapp.com/blog/feature-announcement-custom-metadata-for-your-emails) in sent emails. Anymail should map Anymail's `metadata` to Postmark's metadata on send, and from Postmark's in tracking webhooks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/113", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/113/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/113/events", "html_url": "https://github.com/anymail/django-anymail/issues/113", "id": 335923015, "node_id": "MDU6SXNzdWUzMzU5MjMwMTU=", "number": 113, "title": "Mandrill configured, attempts to use Mailgun", "user": {"login": "astronouth7303", "id": 401438, "node_id": "MDQ6VXNlcjQwMTQzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/401438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astronouth7303", "html_url": "https://github.com/astronouth7303", "followers_url": "https://api.github.com/users/astronouth7303/followers", "following_url": "https://api.github.com/users/astronouth7303/following{/other_user}", "gists_url": "https://api.github.com/users/astronouth7303/gists{/gist_id}", "starred_url": "https://api.github.com/users/astronouth7303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astronouth7303/subscriptions", "organizations_url": "https://api.github.com/users/astronouth7303/orgs", "repos_url": "https://api.github.com/users/astronouth7303/repos", "events_url": "https://api.github.com/users/astronouth7303/events{/privacy}", "received_events_url": "https://api.github.com/users/astronouth7303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T17:35:22Z", "updated_at": "2018-06-27T01:07:48Z", "closed_at": "2018-06-27T01:07:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> from django.core.mail import send_mail\r\n>>> send_mail('Test', 'This is a test email', 'noreply@<redacted>', ['webmaster@astro73.com'], fail_silently=False)\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/anymail/utils.py\", line 366, in get_anymail_setting\r\n    return settings.ANYMAIL[setting]\r\nKeyError: 'MAILGUN_API_KEY'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/anymail/utils.py\", line 369, in get_anymail_setting\r\n    return getattr(settings, anymail_setting)\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/conf/__init__.py\", line 58, in __getattr__\r\n    val = getattr(self._wrapped, name)\r\nAttributeError: 'Settings' object has no attribute 'ANYMAIL_MAILGUN_API_KEY'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/mail/__init__.py\", line 54, in send_mail\r\n    fail_silently=fail_silently,\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/mail/__init__.py\", line 35, in get_connection\r\n    return klass(fail_silently=fail_silently, **kwds)\r\n  File \"/usr/local/lib/python3.5/dist-packages/anymail/backends/mailgun.py\", line 20, in __init__\r\n    self.api_key = get_anymail_setting('api_key', esp_name=esp_name, kwargs=kwargs, allow_bare=True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/anymail/utils.py\", line 381, in get_anymail_setting\r\n    raise AnymailConfigurationError(message)\r\nanymail.exceptions.AnymailConfigurationError: You must set ANYMAIL_MAILGUN_API_KEY or ANYMAIL = {'MAILGUN_API_KEY': ...} or MAILGUN_API_KEY in your Django settings\r\n>>> from django.conf import settings\r\n>>> settings.ANYMAIL\r\n{'MANDRILL_API_KEY': '<redacted>', 'WEBHOOK_SECRET': 'spam:eggs'}\r\n```\r\n\r\npip freeze\r\n```\r\nblinker==1.3\r\nbrotlipy==0.7.0\r\ncffi==1.11.5\r\nchardet==2.3.0\r\ncloud-init==18.2\r\ncommand-not-found==0.3\r\nconfigobj==5.0.6\r\ncroniter==0.3.8\r\ncryptography==1.2.3\r\ndefusedxml==0.5.0\r\nDjango==2.1b1\r\ndjango-allauth==0.36.0\r\ndjango-anymail==3.0\r\ndjango-nocaptcha-recaptcha==0.1.0\r\ngunicorn==19.8.1\r\nidna==2.0\r\nJinja2==2.8\r\njsonpatch==1.10\r\njsonpointer==1.9\r\nlanguage-selector==0.1\r\nMarkupSafe==0.23\r\nmsgpack-python==0.4.6\r\noauthlib==1.0.3\r\nprettytable==0.7.2\r\npsutil==3.4.2\r\npsycopg2==2.7.5\r\npyasn1==0.1.9\r\npycparser==2.18\r\npycrypto==2.6.1\r\npycurl==7.43.0\r\npygobject==3.20.0\r\nPyJWT==1.3.0\r\npyserial==3.0.1\r\npython-apt==1.1.0b1+ubuntu0.16.4.1\r\npython-dateutil==2.4.2\r\npython-debian==0.1.27\r\npython-systemd==231\r\npython3-openid==3.1.0\r\npytz==2014.10\r\nPyYAML==3.11\r\nrequests==2.9.1\r\nrequests-oauthlib==1.0.0\r\nsix==1.10.0\r\nssh-import-id==5.5\r\ntornado==4.2.1\r\nufw==0.35\r\nunattended-upgrades==0.1\r\nurllib3==1.13.1\r\nwhitenoise==3.3.1\r\n```\r\n\r\nPython 3.5.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/112", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/112/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/112/events", "html_url": "https://github.com/anymail/django-anymail/issues/112", "id": 333838745, "node_id": "MDU6SXNzdWUzMzM4Mzg3NDU=", "number": 112, "title": "Gmail blocks mail with inline images if sent from hostname ending in .com", "user": {"login": "mansonul", "id": 4104772, "node_id": "MDQ6VXNlcjQxMDQ3NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4104772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mansonul", "html_url": "https://github.com/mansonul", "followers_url": "https://api.github.com/users/mansonul/followers", "following_url": "https://api.github.com/users/mansonul/following{/other_user}", "gists_url": "https://api.github.com/users/mansonul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mansonul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mansonul/subscriptions", "organizations_url": "https://api.github.com/users/mansonul/orgs", "repos_url": "https://api.github.com/users/mansonul/repos", "events_url": "https://api.github.com/users/mansonul/events{/privacy}", "received_events_url": "https://api.github.com/users/mansonul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}, {"id": 646615837, "node_id": "MDU6TGFiZWw2NDY2MTU4Mzc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailjet", "name": "esp:Mailjet", "color": "d4c5f9", "default": false, "description": null}, {"id": 495008884, "node_id": "MDU6TGFiZWw0OTUwMDg4ODQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mandrill", "name": "esp:Mandrill", "color": "d4c5f9", "default": false, "description": null}, {"id": 495007649, "node_id": "MDU6TGFiZWw0OTUwMDc2NDk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SparkPost", "name": "esp:SparkPost", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-19T21:05:11Z", "updated_at": "2018-08-19T19:54:51Z", "closed_at": "2018-07-06T23:55:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version = 2.2\r\n* ESP (Mailgun, SendGrid, etc.) = Mailgun\r\n* Versions of Django, python = 1.11.13, 3.6\r\n\r\nI'm having problems sending mails to gmail accounts. If I use the attach_inline_image_file i get this from gmail:\r\n\r\nFailed: sender@mydomain.com \u2192 receiver@gmail.com 'Email subject Server response: 552 5.7.0 This message was blocked because its content presents a potential 5.7.0 security issue. Please visit 5.7.0 https://support.google.com/mail/?p=BlockedMessage to review our 5.7.0 message content and attachment content guidelines. b12-v6si932446qtq.229 - gsmtp\r\n\r\nI think this is happening because the image name looks like this \"20180619202303.24365.655.img@domain\" instead of \"pic1.jpg\". Is this normal? What am I doing wrong?\r\n\r\nThis is my .py file:\r\n\r\n```\r\n        message = AnymailMessage(\r\n            subject=subject,\r\n            body=body,\r\n            to=recipients\r\n        )\r\n\r\n        cid = attach_inline_image_file(\r\n           message,\r\n           os.path.join(settings.ROOT_DIR, \"/invitations/static/photos/2018-05-01.jpg\"),\r\n        )\r\n        context = get_invitation_context()\r\n        context['main_image'] = cid\r\n        context['body'] = body\r\n        template_html = render_to_string('invitations/invitation.html', context=context)\r\n        message.attach_alternative(template_html, \"text/html\")\r\n        message.mixed_subtype = 'related'\r\n        message.send()\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/111", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/111/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/111/events", "html_url": "https://github.com/anymail/django-anymail/issues/111", "id": 326290057, "node_id": "MDU6SXNzdWUzMjYyOTAwNTc=", "number": 111, "title": "Proposal: Dropping SendGrid *v2* legacy API support", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339159196, "node_id": "MDU6TGFiZWwzMzkxNTkxOTY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/community%20input%20needed", "name": "community input needed", "color": "fbca04", "default": false, "description": null}, {"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T20:53:16Z", "updated_at": "2018-05-30T21:37:12Z", "closed_at": "2018-05-30T21:37:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Anymail switched to use SendGrid's newer v3 API in February, 2017 (Anymail v0.8). But the older SendGrid v2 API remained available as an option.\r\n\r\nIn the interest of reducing maintenance overhead, I'm proposing dropping support for SendGrid v2 in a near-future release.\r\n\r\nIf you are using Anymail with SendGrid v2 and cannot switch to the default v3 API, please comment. (This affects you if your Django settings have `EMAIL_BACKEND = \"anymail.backends.sendgrid_v2.EmailBackend\"`.)\r\n\r\nIn particular, if you must use SENDGRID_USERNAME/SENDGRID_PASSWORD authentication, rather than SENDGRID_API_KEY as required by their v3 API, I'd like to better understand that use case before finalizing this decision.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/110", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/110/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/110/events", "html_url": "https://github.com/anymail/django-anymail/issues/110", "id": 326282358, "node_id": "MDU6SXNzdWUzMjYyODIzNTg=", "number": 110, "title": "Proposal: Ending Django 1.8, 1.9, 1.10 support", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339159196, "node_id": "MDU6TGFiZWwzMzkxNTkxOTY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/community%20input%20needed", "name": "community input needed", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T20:34:47Z", "updated_at": "2018-05-30T21:37:51Z", "closed_at": "2018-05-30T21:37:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm proposing dropping Django versions older than 1.11 from a near-future Anymail update. (Django's 1.8 long-term-support period ended earlier this year, and Django 1.9 and 1.10 have been unsupported for a while.)\r\n\r\nI would continue to release security fixes on the Anymail 3.x branch that supports Django 1.8, 1.9, and 1.10 through April, 2019. Also, if at all possible, Anymail 3.x would be patched if an ESP it supports makes a breaking change to their API.\r\n\r\nBut new Anymail features and new ESPs would only be available in Anymail 4.x with Django 1.11 or later.\r\n\r\nIf you're using Anymail with an older Django version and have any concerns about this, please comment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/108", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/108/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/108/events", "html_url": "https://github.com/anymail/django-anymail/issues/108", "id": 325815300, "node_id": "MDU6SXNzdWUzMjU4MTUzMDA=", "number": 108, "title": "SendGrid smtp-id not always matching anymail_status", "user": {"login": "joshkersey", "id": 28774, "node_id": "MDQ6VXNlcjI4Nzc0", "avatar_url": "https://avatars3.githubusercontent.com/u/28774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshkersey", "html_url": "https://github.com/joshkersey", "followers_url": "https://api.github.com/users/joshkersey/followers", "following_url": "https://api.github.com/users/joshkersey/following{/other_user}", "gists_url": "https://api.github.com/users/joshkersey/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshkersey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshkersey/subscriptions", "organizations_url": "https://api.github.com/users/joshkersey/orgs", "repos_url": "https://api.github.com/users/joshkersey/repos", "events_url": "https://api.github.com/users/joshkersey/events{/privacy}", "received_events_url": "https://api.github.com/users/joshkersey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-05-23T18:04:46Z", "updated_at": "2018-05-30T21:38:32Z", "closed_at": "2018-05-30T18:52:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ESP: SendGrid\r\ndjango-anymail: 2.2\r\nPython: 2.7\r\nDjango: 1.11.10\r\n\r\nJust after we make the `msg = AnymailMessage(**kwargs)` call we store the data from `msg.anymail_status` in our database for tracking. The issue we're seeing is that the SendGrid webhook will often times return POST data with a `message_id` and `esp_event['smtp-id`] that do not match the values Anymail generated for us.\r\n\r\nAs an example:\r\nWe send a message and receive an smtp-id of `\r\n<20180523175141.98405.51520@example.com>` in the `msg.anymail_status`.\r\nWhen the webhook communicates updates to us we find that the `message_id` for the same message is `<YTJPMXaQSY-KzuEUmXrDWg@ismtpd0025p1las1.sendgrid.net>` which means that we are unable to identify which message this belongs to.\r\n\r\nHere's the code that calls AnymailMessage:\r\n```python\r\ntext_message = render_to_string(templates['text'], context)\r\nhtml_message = render_to_string(templates['html'], context)\r\nmsg = AnymailMessage(\r\n    subject=templates['subject'],\r\n    body=text_message,\r\n    to=[user.email],\r\n)\r\nmsg.attach_alternative(html_message, \"text/html\")\r\nmsg.send()\r\n\r\n# store the anymail status data to our database for tracking via the webhook\r\nEmail().create_from_anymail(msg.anymail_status, Email.INVITATION)\r\n```\r\n\r\nThe `Email()` model holds the `create_from_anymail(anymail_status, event)` method where event is an optional custom tracker for the event triggering the email send (unrelated to anymail):\r\n```python\r\n@classmethod\r\ndef create_from_anymail(cls, anymail_status, event=None):\r\n    for recipient in anymail_status.recipients:\r\n        kwargs = {\r\n            'to_email': recipient,\r\n            'status': anymail_status.recipients[recipient].status,\r\n            'message_id': anymail_status.recipients[recipient].message_id,\r\n            'response': anymail_status.esp_response\r\n        }\r\n\r\n        if event:\r\n            kwargs['event'] = event\r\n\r\n        email = Email(**kwargs)\r\n        email.save()\r\n```\r\n\r\nFrom what I can gather from the SendGrid webhook documentation the `smtp-id` should be returned for every webhook POST and is `a unique ID attached to the message by the originating system`.\r\n\r\nI've also contacted SendGrid support but wanted to present the issue here in case anyone has seen something similar and may have ideas on how to get a consistent identifier from our system into SendGrid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/107", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/107/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/107/events", "html_url": "https://github.com/anymail/django-anymail/issues/107", "id": 323227903, "node_id": "MDU6SXNzdWUzMjMyMjc5MDM=", "number": 107, "title": "Support for Campaign Monitor API", "user": {"login": "meleksomai", "id": 1846037, "node_id": "MDQ6VXNlcjE4NDYwMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1846037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meleksomai", "html_url": "https://github.com/meleksomai", "followers_url": "https://api.github.com/users/meleksomai/followers", "following_url": "https://api.github.com/users/meleksomai/following{/other_user}", "gists_url": "https://api.github.com/users/meleksomai/gists{/gist_id}", "starred_url": "https://api.github.com/users/meleksomai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meleksomai/subscriptions", "organizations_url": "https://api.github.com/users/meleksomai/orgs", "repos_url": "https://api.github.com/users/meleksomai/repos", "events_url": "https://api.github.com/users/meleksomai/events{/privacy}", "received_events_url": "https://api.github.com/users/meleksomai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339159196, "node_id": "MDU6TGFiZWwzMzkxNTkxOTY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/community%20input%20needed", "name": "community input needed", "color": "fbca04", "default": false, "description": null}, {"id": 610750960, "node_id": "MDU6TGFiZWw2MTA3NTA5NjA=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/new%20ESP", "name": "new ESP", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-15T13:52:33Z", "updated_at": "2018-08-15T00:31:21Z", "closed_at": "2018-08-15T00:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI was wondering whether it is planned to add support to Campaign Monitor transactional API to Anymail. \r\n\r\nCampaign Monitor offers an API including a Python wrapper http://campaignmonitor.github.io/createsend-python/. Part of the API is to provide transactional services: https://www.campaignmonitor.com/api/transactional/ which should be compatible with Anymail functionalities.\r\n\r\nIs it possible? If so, how to proceed? \r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/106", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/106/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/106/events", "html_url": "https://github.com/anymail/django-anymail/issues/106", "id": 323226528, "node_id": "MDU6SXNzdWUzMjMyMjY1Mjg=", "number": 106, "title": "Mailjet webhook events fail when not grouped", "user": {"login": "prettyv", "id": 1702205, "node_id": "MDQ6VXNlcjE3MDIyMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1702205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prettyv", "html_url": "https://github.com/prettyv", "followers_url": "https://api.github.com/users/prettyv/followers", "following_url": "https://api.github.com/users/prettyv/following{/other_user}", "gists_url": "https://api.github.com/users/prettyv/gists{/gist_id}", "starred_url": "https://api.github.com/users/prettyv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prettyv/subscriptions", "organizations_url": "https://api.github.com/users/prettyv/orgs", "repos_url": "https://api.github.com/users/prettyv/repos", "events_url": "https://api.github.com/users/prettyv/events{/privacy}", "received_events_url": "https://api.github.com/users/prettyv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 646615837, "node_id": "MDU6TGFiZWw2NDY2MTU4Mzc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailjet", "name": "esp:Mailjet", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-15T13:49:10Z", "updated_at": "2018-05-30T21:38:50Z", "closed_at": "2018-05-15T19:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently (django-anymail v2.2) produces a TypeError when an event type is not configured to be grouped in Mailjet's event trigger settings. This is because the Mailjet webhook handling assumes the body to always be a JSON list containing all events although this is not the case when an event type is not marked to \"Group events\", which will send each event individually as a JSON dict.\r\nThis leads to ```TypeError: string indices must be integers``` in webhooks/mailjet.py:57 since ```esp_event``` is now a string (key of the event dict).\r\n\r\nI guess the reason it is currently implemented like this is that it seems like the official documentation doesn't actually consider this and just says ```All the events will be delivered to your webhook in a JSON array of event objects.``` (https://dev.mailjet.com/guides/#endpoint-url)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/105", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/105/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/105/events", "html_url": "https://github.com/anymail/django-anymail/issues/105", "id": 322759761, "node_id": "MDU6SXNzdWUzMjI3NTk3NjE=", "number": 105, "title": "TLS version for Mandrill", "user": {"login": "alex1vanchik", "id": 28433163, "node_id": "MDQ6VXNlcjI4NDMzMTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/28433163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex1vanchik", "html_url": "https://github.com/alex1vanchik", "followers_url": "https://api.github.com/users/alex1vanchik/followers", "following_url": "https://api.github.com/users/alex1vanchik/following{/other_user}", "gists_url": "https://api.github.com/users/alex1vanchik/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex1vanchik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex1vanchik/subscriptions", "organizations_url": "https://api.github.com/users/alex1vanchik/orgs", "repos_url": "https://api.github.com/users/alex1vanchik/repos", "events_url": "https://api.github.com/users/alex1vanchik/events{/privacy}", "received_events_url": "https://api.github.com/users/alex1vanchik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T10:32:44Z", "updated_at": "2018-05-15T15:31:08Z", "closed_at": "2018-05-15T15:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys! Recently received such a letter from MailChimp(Mandrill).\r\n<img width=\"681\" alt=\"skarmavbild 2018-05-14 kl 09 21 20\" src=\"https://user-images.githubusercontent.com/28433163/39992021-1351ff12-577a-11e8-9e78-211620d50818.png\">\r\nWe use django-anymail for mailing. Unfortunately could not find the answers to the questions in the anymail documentation or link on the community chat/forum. \r\nTherefore, we have such questions:\r\n1. Do anymail support TLS 1.2 for Mandrill?\r\n2. If not, Are you going to update the library before May 31, or should we start looking for another solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/104", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/104/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/104/events", "html_url": "https://github.com/anymail/django-anymail/issues/104", "id": 314846463, "node_id": "MDU6SXNzdWUzMTQ4NDY0NjM=", "number": 104, "title": "Test without optional packages", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-16T22:56:03Z", "updated_at": "2019-02-09T23:04:09Z", "closed_at": "2019-02-09T23:04:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, the tests install all optional dependencies (boto3, sparkpost), which can mask problems if some aren't truly being treated as optional. (See #103.)\r\n\r\nThe tests need to cover this. The most-correct approach would adding an ESP dimension to the test matrix, but that would involve 8 ESPs x 23 current Django/Python combos, which seems excessive, especially since only two ESPs currently have optional dependencies.\r\n\r\nA more pragmatic approach might be to just test missing optional dependencies on a few representative Django/Python combos, like we do now with RUN_LIVE_TESTS.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/103", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/103/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/103/events", "html_url": "https://github.com/anymail/django-anymail/issues/103", "id": 314776532, "node_id": "MDU6SXNzdWUzMTQ3NzY1MzI=", "number": 103, "title": "Including anymail.urls appears to require unconfigured backends", "user": {"login": "saschwarz", "id": 184171, "node_id": "MDQ6VXNlcjE4NDE3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/184171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saschwarz", "html_url": "https://github.com/saschwarz", "followers_url": "https://api.github.com/users/saschwarz/followers", "following_url": "https://api.github.com/users/saschwarz/following{/other_user}", "gists_url": "https://api.github.com/users/saschwarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/saschwarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saschwarz/subscriptions", "organizations_url": "https://api.github.com/users/saschwarz/orgs", "repos_url": "https://api.github.com/users/saschwarz/repos", "events_url": "https://api.github.com/users/saschwarz/events{/privacy}", "received_events_url": "https://api.github.com/users/saschwarz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-16T18:55:05Z", "updated_at": "2018-04-16T23:07:14Z", "closed_at": "2018-04-16T22:41:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just switching from SendGrid v3 API to Anymail and when I added the webhook path to my project's urls.py:\r\n\r\n```\r\nurlpatterns = [\r\n    path('api/v1/', include(router.urls)),\r\n    path('mail_webhook/', include('anymail.urls')),\r\n]\r\n```\r\nI get a traceback stating that I need boto for the Amazon backend.\r\n \r\n* Anymail version\r\n3.5.1\r\n* ESP (Mailgun, SendGrid, etc.)\r\nSendGrid\r\n* Versions of Django, requests, python\r\n2.0, ?, 3.6.3\r\n\r\n* Exact error message and/or stack trace\r\n```\r\n$ python ./manage.py migrate\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\anymail\\backends\\amazon_ses.py\", line 13, in <module>\r\n    import boto3\r\nModuleNotFoundError: No module named 'boto3'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 371, in execute_from_command_line\r\n    utility.execute()\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 365, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\base.py\", line 288, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\base.py\", line 332, in execute\r\n    self.check()\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\base.py\", line 364, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\commands\\migrate.py\", line 58, in _run_checks\r\n    issues.extend(super()._run_checks(**kwargs))\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\management\\base.py\", line 351, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\checks\\registry.py\", line 73, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 13, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 23, in check_resolver\r\n    return check_method()\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\urls\\resolvers.py\", line 397, in check\r\n    for pattern in self.url_patterns:\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\utils\\functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\urls\\resolvers.py\", line 536, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\utils\\functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\urls\\resolvers.py\", line 529, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"C:\\Users\\Me\\source\\repos\\s1\\Notification\\notification\\notification\\urls.py\", line 34, in <module>\r\n    path('mail_webhook/', include('anymail.urls')),\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\django\\urls\\conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\anymail\\urls.py\", line 3, in <module>\r\n    from .webhooks.amazon_ses import AmazonSESInboundWebhookView, AmazonSESTrackingWebhookView\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\anymail\\webhooks\\amazon_ses.py\", line 9, in <module>\r\n    from ..backends.amazon_ses import _get_anymail_boto3_params\r\n  File \"C:\\Users\\Me\\.virtualenvs\\notification-TRTs0IXw\\lib\\site-packages\\anymail\\backends\\amazon_ses.py\", line 17, in <module>\r\n    raise AnymailImproperlyInstalled(missing_package='boto3', backend='amazon_ses')\r\nanymail.exceptions.AnymailImproperlyInstalled: The boto3 package is required to use this backend, but isn't installed.\r\n(Be sure to use `pip install django-anymail[amazon_ses]` with your desired backends)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/102", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/102/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/102/events", "html_url": "https://github.com/anymail/django-anymail/issues/102", "id": 312817633, "node_id": "MDU6SXNzdWUzMTI4MTc2MzM=", "number": 102, "title": "Local development - webhooks", "user": {"login": "AuHau", "id": 6072250, "node_id": "MDQ6VXNlcjYwNzIyNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6072250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AuHau", "html_url": "https://github.com/AuHau", "followers_url": "https://api.github.com/users/AuHau/followers", "following_url": "https://api.github.com/users/AuHau/following{/other_user}", "gists_url": "https://api.github.com/users/AuHau/gists{/gist_id}", "starred_url": "https://api.github.com/users/AuHau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AuHau/subscriptions", "organizations_url": "https://api.github.com/users/AuHau/orgs", "repos_url": "https://api.github.com/users/AuHau/repos", "events_url": "https://api.github.com/users/AuHau/events{/privacy}", "received_events_url": "https://api.github.com/users/AuHau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-10T08:18:06Z", "updated_at": "2018-04-12T06:28:54Z", "closed_at": "2018-04-11T07:38:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nI am wondering if there is any easy way how to use Anymail during local development?\r\nI know about the Test backend, and generally I know for sending emails you can use some other backend, so the sending out emails is not the main part I am asking for. What I am wondering more is about testing the inbound webhooks, where it is bit cumbersome handling all the security related stuff.\r\n\r\nRight now, I am doing bit monkey-patching to ease my development, but yeah it is not the best thing to do, so I am wondering - is there some better way?\r\n\r\nWhat I am doing now:\r\n```\r\nif DEBUG:\r\n    def no_validation(*args, **kwargs):\r\n        pass\r\n\r\n    MailgunBaseWebhookView.validate_request = no_validation\r\n    AnymailBaseWebhookView.validate_request = no_validation\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/101", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/101/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/101/events", "html_url": "https://github.com/anymail/django-anymail/issues/101", "id": 311711234, "node_id": "MDU6SXNzdWUzMTE3MTEyMzQ=", "number": 101, "title": "Update docs for Postmark \"modular webhooks\"", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-05T17:59:36Z", "updated_at": "2018-04-12T00:25:08Z", "closed_at": "2018-04-06T22:04:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Postmark has introduced what they're calling \"[modular webhooks](https://postmarkapp.com/blog/feature-announcement-modular-webhooks).\" Anymail's existing Postmark webhooks work just fine with the changes, but the docs should be updated.\r\n\r\nFrom what I can see, the Postmark changes that could affect Anymail are:\r\n1. Postmark's webhook settings now has checkboxes to select which events you want to receive, rather than making you enter multiple URLs for the different event types. (Also, you can configure \"bounce\" separately from \"spam complaint\".)\r\n2. There's a new RecordType field in the webhook json payload, to identify the event type. (But the rest of the payload is unchanged, and no fields have been removed.)\r\n\r\nThe first change only affects Anymail's docs on setting up Postmark webhooks.\r\n\r\nThe second change could be used to simplify Anymail's code that figures out event type from the payload. (But the fields that code uses now are still there, and haven't changed, so it's not urgent to update.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/100", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/100/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/100/events", "html_url": "https://github.com/anymail/django-anymail/issues/100", "id": 311704660, "node_id": "MDU6SXNzdWUzMTE3MDQ2NjA=", "number": 100, "title": "Support SparkPost EU", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007649, "node_id": "MDU6TGFiZWw0OTUwMDc2NDk=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SparkPost", "name": "esp:SparkPost", "color": "d4c5f9", "default": false, "description": null}, {"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-05T17:38:45Z", "updated_at": "2018-04-12T00:25:19Z", "closed_at": "2018-04-06T20:00:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SparkPost has [announced SparkPost EU](https://www.sparkpost.com/blog/announcing-sparkpost-eu/), a version of their service hosted entirely in the European Union. Anymail should add a setting to allow using the EU service as an alternative to the US-based default.\r\n\r\nIt looks like this just involves pointing the SparkPost API at the EU [API endpoint](https://developers.sparkpost.com/api/index.html#header-api-endpoints). The `sparkpost.SparkPost` constructor has an undocumented [`base_uri` parameter](https://github.com/SparkPost/python-sparkpost/blob/v1.3.6/sparkpost/__init__.py#L18) that seems to allow this. \r\n\r\nThe new Anymail setting should probably be SPARKPOST_API_URL (rather than _URI), paralleling similar settings in other backends.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/99", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/99/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/99/events", "html_url": "https://github.com/anymail/django-anymail/issues/99", "id": 311058496, "node_id": "MDU6SXNzdWUzMTEwNTg0OTY=", "number": 99, "title": "Dropping support for Python 3.3", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 814277627, "node_id": "MDU6TGFiZWw4MTQyNzc2Mjc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/planned", "name": "planned", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-04-04T01:59:17Z", "updated_at": "2018-05-15T19:00:15Z", "closed_at": "2018-05-15T19:00:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm planning to stop testing Python 3.3 after the next Anymail release (v2.1).\r\n\r\nThe only version of Django that supported Python 3.3 was Django 1.8, which [ended extended support](https://www.djangoproject.com/download/) on April 1, 2018.\r\n\r\nI'm not immediately planning to drop Anymail support/testing for Django 1.8 on other Python versions, but Python 3.3 has a particularly problematic early release of the upgraded Python 3 email package. I can't imagine many people are using this combination, and tracking down oddities seems like a poor use of time. If you are using Django 1.8 on Python 3.3 with Anymail (or really anything having to do with email), you should upgrade to Python 3.4 or 3.5. Or downgrade to Python 2.7.\r\n\r\n(I'll leave this issue open for feedback until Anymail v2.1 is ready to release, in case I've underestimated the impact.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/98", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/98/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/98/events", "html_url": "https://github.com/anymail/django-anymail/issues/98", "id": 308287800, "node_id": "MDU6SXNzdWUzMDgyODc4MDA=", "number": 98, "title": "Inbound email receiver returns AnymailInvalidAddress error on Heroku + Python 2.7", "user": {"login": "rnevius", "id": 4516305, "node_id": "MDQ6VXNlcjQ1MTYzMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4516305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnevius", "html_url": "https://github.com/rnevius", "followers_url": "https://api.github.com/users/rnevius/followers", "following_url": "https://api.github.com/users/rnevius/following{/other_user}", "gists_url": "https://api.github.com/users/rnevius/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnevius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnevius/subscriptions", "organizations_url": "https://api.github.com/users/rnevius/orgs", "repos_url": "https://api.github.com/users/rnevius/repos", "events_url": "https://api.github.com/users/rnevius/events{/privacy}", "received_events_url": "https://api.github.com/users/rnevius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-24T18:38:18Z", "updated_at": "2018-03-26T21:45:04Z", "closed_at": "2018-03-26T21:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Project Info:\r\n-  Anymail 2.0\r\n-  ESP: Mailgun\r\n-  Django 1.8\r\n-  Python 2.7.14\r\n-  Heroku host\r\n\r\n## Stack Trace:\r\n```\r\nInternal Server Error: /admin/messages/webhooks/mailgun/inbound/\r\nTraceback (most recent call last):\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/utils/decorators.py\", line 34, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/utils/decorators.py\", line 30, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/webhooks/base.py\", line 109, in dispatch\r\n    return super(AnymailBaseWebhookView, self).dispatch(request, *args, **kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/generic/base.py\", line 89, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/webhooks/base.py\", line 126, in post\r\n    self.signal.send(sender=self.__class__, event=event, esp_name=esp_name)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/dispatch/dispatcher.py\", line 201, in send\r\n    response = receiver(signal=self, sender=sender, **named)\r\n  File \"/app/./urban_site/messages/views.py\", line 84, in handle_inbound\r\n    [agent.email]\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/mail/__init__.py\", line 62, in send_mail\r\n    return mail.send()\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/mail/message.py\", line 303, in send\r\n    return self.get_connection(fail_silently).send_messages([self])\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/base.py\", line 90, in send_messages\r\n    sent = self._send(message)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/base_requests.py\", line 58, in _send\r\n    return super(AnymailRequestsBackend, self)._send(message)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/base.py\", line 119, in _send\r\n    payload = self.build_message_payload(message, self.send_defaults)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/mailgun.py\", line 30, in build_message_payload\r\n    return MailgunPayload(message, defaults, self)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/mailgun.py\", line 71, in __init__\r\n    super(MailgunPayload, self).__init__(message, defaults, backend, auth=auth, *args, **kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/base_requests.py\", line 119, in __init__\r\n    super(RequestsPayload, self).__init__(message, defaults, backend)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/backends/base.py\", line 268, in __init__\r\n    value = converter(value)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/anymail/utils.py\", line 158, in parse_address_list\r\n    raise AnymailInvalidAddress(errmsg)\r\nAnymailInvalidAddress: Invalid email address '' parsed from ''.\r\n```\r\n\r\n## Relevant Code:\r\n```\r\n@receiver(inbound)\r\ndef handle_inbound(sender, event, esp_name, **kwargs):\r\n    message = event.message\r\n    from_email = message.from_email.addr_spec\r\n```\r\n\r\nI suspect this is an issue with parsing `addr_spec`, as doing `print(message.from_email)` returns a valid email in the form: `First Last <firstlast@outlook.com>` (also occurs from Gmail addresses). This issue doesn't occur when using ngrok locally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/94", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/94/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/94/events", "html_url": "https://github.com/anymail/django-anymail/issues/94", "id": 300056773, "node_id": "MDU6SXNzdWUzMDAwNTY3NzM=", "number": 94, "title": "Any way to mock?", "user": {"login": "benderTheCrime", "id": 7144031, "node_id": "MDQ6VXNlcjcxNDQwMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7144031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benderTheCrime", "html_url": "https://github.com/benderTheCrime", "followers_url": "https://api.github.com/users/benderTheCrime/followers", "following_url": "https://api.github.com/users/benderTheCrime/following{/other_user}", "gists_url": "https://api.github.com/users/benderTheCrime/gists{/gist_id}", "starred_url": "https://api.github.com/users/benderTheCrime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benderTheCrime/subscriptions", "organizations_url": "https://api.github.com/users/benderTheCrime/orgs", "repos_url": "https://api.github.com/users/benderTheCrime/repos", "events_url": "https://api.github.com/users/benderTheCrime/events{/privacy}", "received_events_url": "https://api.github.com/users/benderTheCrime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-25T20:11:54Z", "updated_at": "2018-02-26T17:31:21Z", "closed_at": "2018-02-25T20:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version: all of them\r\n* ESP (Mailgun, SendGrid, etc.): any of them\r\n\r\nIs there any way to mock emails for local development?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/92", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/92/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/92/events", "html_url": "https://github.com/anymail/django-anymail/issues/92", "id": 296593910, "node_id": "MDU6SXNzdWUyOTY1OTM5MTA=", "number": 92, "title": "Deprecation: 'async' and 'await' will become reserved keywords in Python 3.7", "user": {"login": "RignonNoel", "id": 12053720, "node_id": "MDQ6VXNlcjEyMDUzNzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/12053720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RignonNoel", "html_url": "https://github.com/RignonNoel", "followers_url": "https://api.github.com/users/RignonNoel/followers", "following_url": "https://api.github.com/users/RignonNoel/following{/other_user}", "gists_url": "https://api.github.com/users/RignonNoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/RignonNoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RignonNoel/subscriptions", "organizations_url": "https://api.github.com/users/RignonNoel/orgs", "repos_url": "https://api.github.com/users/RignonNoel/repos", "events_url": "https://api.github.com/users/RignonNoel/events{/privacy}", "received_events_url": "https://api.github.com/users/RignonNoel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-13T02:32:29Z", "updated_at": "2018-02-27T02:44:00Z", "closed_at": "2018-02-27T02:44:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just want to report a futur deprecation\r\n\r\n* Anymail version\r\nRelease 1.4\r\n\r\n* ESP (Mailgun, SendGrid, etc.)\r\nMandrill but it's a generic problem.\r\n\r\n* Versions of Django, requests, python\r\nPython 3.7\r\n\r\n* Exact error message and/or stack trace\r\n```\r\n[personal_path]/django-anymail/tests/test_mandrill_djrill_features.py:16: DeprecationWarning: 'async' and 'await' will become reserved keywords in Python 3.7\r\n  self.message.async = True\r\n```\r\n\r\n```\r\n[personal_path]/django-anymail/anymail/backends/mandrill.py:255: DeprecationWarning: 'async' and 'await' will become reserved keywords in Python 3.7\r\n  def set_async(self, async):\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/91", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/91/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/91/events", "html_url": "https://github.com/anymail/django-anymail/issues/91", "id": 294937129, "node_id": "MDU6SXNzdWUyOTQ5MzcxMjk=", "number": 91, "title": "Allow different `MAIL FROM` or `Return-Path` and `From` headers.", "user": {"login": "YPCrumble", "id": 12019216, "node_id": "MDQ6VXNlcjEyMDE5MjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12019216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YPCrumble", "html_url": "https://github.com/YPCrumble", "followers_url": "https://api.github.com/users/YPCrumble/followers", "following_url": "https://api.github.com/users/YPCrumble/following{/other_user}", "gists_url": "https://api.github.com/users/YPCrumble/gists{/gist_id}", "starred_url": "https://api.github.com/users/YPCrumble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YPCrumble/subscriptions", "organizations_url": "https://api.github.com/users/YPCrumble/orgs", "repos_url": "https://api.github.com/users/YPCrumble/repos", "events_url": "https://api.github.com/users/YPCrumble/events{/privacy}", "received_events_url": "https://api.github.com/users/YPCrumble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-02-06T22:32:10Z", "updated_at": "2018-02-27T18:25:14Z", "closed_at": "2018-02-27T02:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for writing this great library!\r\n\r\nI'm using Anymail 1.3, python-sparkpost 1.3.5, and Django 2.0.2. \r\n\r\nI've also raised this issue on https://github.com/SparkPost/python-sparkpost/issues/161 but I'm starting to think this issue is better suited to Django-Anymail.\r\n\r\nThe issue is in trying to create a bounce domain for emails. [Django's solution](https://code.djangoproject.com/ticket/9214) can be seen [here in the codebase](https://github.com/django/django/blob/a38ae914d89809aed6d79337b74a8b31b6d3849a/django/core/mail/message.py#L256). \r\n\r\nTo create a custom bounce domain, one puts the bounce domain in the `from_email` parameter, and a custom `From` header for the message's `From` address. This way you can send an email with a custom `Return-Path` header like mail@bounces.example.com and have the message's `From` header be something else like inbox@example.com. \r\n\r\nBecause this is a Django library, my suggestion is to follow Django's standard in checking for a custom `From` header before setting the `from_email`. This way one can switch to/from vanilla Django to Django-Anymail without having to rewrite EmailMultiAlternatives.\r\n\r\nHappy to create a PR if this makes sense/would be helpful?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/90", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/90/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/90/events", "html_url": "https://github.com/anymail/django-anymail/issues/90", "id": 294211519, "node_id": "MDU6SXNzdWUyOTQyMTE1MTk=", "number": 90, "title": "Document CVE Number, CVE-2018-6596", "user": {"login": "kitterma", "id": 7477762, "node_id": "MDQ6VXNlcjc0Nzc3NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7477762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitterma", "html_url": "https://github.com/kitterma", "followers_url": "https://api.github.com/users/kitterma/followers", "following_url": "https://api.github.com/users/kitterma/following{/other_user}", "gists_url": "https://api.github.com/users/kitterma/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitterma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitterma/subscriptions", "organizations_url": "https://api.github.com/users/kitterma/orgs", "repos_url": "https://api.github.com/users/kitterma/repos", "events_url": "https://api.github.com/users/kitterma/events{/privacy}", "received_events_url": "https://api.github.com/users/kitterma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T16:52:10Z", "updated_at": "2018-02-04T19:15:25Z", "closed_at": "2018-02-04T19:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The security issue addressed in 1.2.1 has been assigned a CVE number, CVE-2018-6596.\r\n\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-6596\r\n\r\nPlease document this in the information about the security issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/86", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/86/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/86/events", "html_url": "https://github.com/anymail/django-anymail/issues/86", "id": 291320324, "node_id": "MDU6SXNzdWUyOTEzMjAzMjQ=", "number": 86, "title": "Inbound and tracking endpoints for Mandrill need two separate webhook keys", "user": {"login": "jonathanbaugh", "id": 4481475, "node_id": "MDQ6VXNlcjQ0ODE0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4481475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanbaugh", "html_url": "https://github.com/jonathanbaugh", "followers_url": "https://api.github.com/users/jonathanbaugh/followers", "following_url": "https://api.github.com/users/jonathanbaugh/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanbaugh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanbaugh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanbaugh/subscriptions", "organizations_url": "https://api.github.com/users/jonathanbaugh/orgs", "repos_url": "https://api.github.com/users/jonathanbaugh/repos", "events_url": "https://api.github.com/users/jonathanbaugh/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanbaugh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495008884, "node_id": "MDU6TGFiZWw0OTUwMDg4ODQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mandrill", "name": "esp:Mandrill", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-24T18:54:04Z", "updated_at": "2018-02-02T20:51:39Z", "closed_at": "2018-02-02T18:38:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI'm working on switching our use of djrill over to anymail with Django 1.8 on python 2.7 (we're working on upgrading to 1.11 and djrill is one of the final packages to go). We handle a lot of inbound messages so, I'm very excited to see this feature coming along :-)\r\n\r\nOur current Mandrill setup has a single webhook which handles both tracking and inbound with a single key. As far as I can tell there is no way to have the same key between two different webhooks.\r\n\r\nThe anymail setup for the feature_inbound branch adds a second URL specifically for inbound and either tracking or inbound views will raise the following exception:\r\n\r\n```\r\nAnymailConfigurationError: You seem to have set Mandrill's *inbound* webhook URL to Anymail's Mandrill *tracking* webhook URL.\r\n```\r\n\r\nSo the problem is:\r\n* If we create a second webhook we would have a second key generated resulting in a signature error on one of the endpoints.\r\n* If we use a single endpoint we raise the configuration error.\r\n\r\nI'm considering adding a third signal and set of endpoints that handle any event type. I'm happy to submit a pull request for that but before I do it I want to check: is there already another solution in mind?\r\n\r\nThanks!\r\nJonathan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/85", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/85/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/85/events", "html_url": "https://github.com/anymail/django-anymail/issues/85", "id": 290968629, "node_id": "MDU6SXNzdWUyOTA5Njg2Mjk=", "number": 85, "title": "Console or dummy backend for testing", "user": {"login": "yourcelf", "id": 21318, "node_id": "MDQ6VXNlcjIxMzE4", "avatar_url": "https://avatars3.githubusercontent.com/u/21318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yourcelf", "html_url": "https://github.com/yourcelf", "followers_url": "https://api.github.com/users/yourcelf/followers", "following_url": "https://api.github.com/users/yourcelf/following{/other_user}", "gists_url": "https://api.github.com/users/yourcelf/gists{/gist_id}", "starred_url": "https://api.github.com/users/yourcelf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yourcelf/subscriptions", "organizations_url": "https://api.github.com/users/yourcelf/orgs", "repos_url": "https://api.github.com/users/yourcelf/repos", "events_url": "https://api.github.com/users/yourcelf/events{/privacy}", "received_events_url": "https://api.github.com/users/yourcelf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-23T19:43:50Z", "updated_at": "2018-02-02T20:50:09Z", "closed_at": "2018-01-28T20:27:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature request: Anymail provides several extensions to stock behavior such as setting `msg.anymail_status` after send,  and firing pre- and post-send signals, none of which happen when using  `django.core.mail.backends.console.EmailBackend`.  As a result, it's difficult to write integration tests for the behavior of signal handlers and status processing code.\r\n\r\nA dummy or console backend which at a minimum provides `anymail_status` after send and fires off appropriate pre/post send hooks would make testing code that leverages those features much easier.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/84", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/84/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/84/events", "html_url": "https://github.com/anymail/django-anymail/issues/84", "id": 290792469, "node_id": "MDU6SXNzdWUyOTA3OTI0Njk=", "number": 84, "title": "SendinBlue", "user": {"login": "sachiv", "id": 13590454, "node_id": "MDQ6VXNlcjEzNTkwNDU0", "avatar_url": "https://avatars1.githubusercontent.com/u/13590454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachiv", "html_url": "https://github.com/sachiv", "followers_url": "https://api.github.com/users/sachiv/followers", "following_url": "https://api.github.com/users/sachiv/following{/other_user}", "gists_url": "https://api.github.com/users/sachiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachiv/subscriptions", "organizations_url": "https://api.github.com/users/sachiv/orgs", "repos_url": "https://api.github.com/users/sachiv/repos", "events_url": "https://api.github.com/users/sachiv/events{/privacy}", "received_events_url": "https://api.github.com/users/sachiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 849239067, "node_id": "MDU6TGFiZWw4NDkyMzkwNjc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendinBlue", "name": "esp:SendinBlue", "color": "d4c5f9", "default": false, "description": ""}, {"id": 339175948, "node_id": "MDU6TGFiZWwzMzkxNzU5NDg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/in%20progress", "name": "in progress", "color": "bfe5bf", "default": false, "description": null}, {"id": 610750960, "node_id": "MDU6TGFiZWw2MTA3NTA5NjA=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/new%20ESP", "name": "new ESP", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-23T10:55:11Z", "updated_at": "2018-03-08T21:48:19Z", "closed_at": "2018-03-08T21:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add support for [SendinBlue](https://www.sendinblue.com/).\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/81", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/81/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/81/events", "html_url": "https://github.com/anymail/django-anymail/issues/81", "id": 289384754, "node_id": "MDU6SXNzdWUyODkzODQ3NTQ=", "number": 81, "title": "Upgrade to Mailjet Send API v3.1", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 849255546, "node_id": "MDU6TGFiZWw4NDkyNTU1NDY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/blocked", "name": "blocked", "color": "d93f0b", "default": false, "description": "Waiting on an external dependency"}, {"id": 646615837, "node_id": "MDU6TGFiZWw2NDY2MTU4Mzc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailjet", "name": "esp:Mailjet", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-17T19:28:14Z", "updated_at": "2018-03-08T20:15:39Z", "closed_at": "2018-03-08T20:15:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Mailjet has quietly released its [v3.1 API](https://dev.mailjet.com/guides/#send-api-v3-1). (Last public notice seems to be the [beta announcement](https://www.mailjet.com/blog/?tag=api).) \r\n\r\nThe new API is more logical than the old one, and fixes some problems requiring weird client workarounds\u2014notably, the double API calls currently required to send with a template's From address.\r\n\r\nAnymail should upgrade. This will be a breaking change for anyone using `esp_extra` with Mailjet.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/80", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/80/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/80/events", "html_url": "https://github.com/anymail/django-anymail/issues/80", "id": 289270080, "node_id": "MDU6SXNzdWUyODkyNzAwODA=", "number": 80, "title": "Timeouts for post_to_esp()", "user": {"login": "nuschk", "id": 5167117, "node_id": "MDQ6VXNlcjUxNjcxMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5167117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuschk", "html_url": "https://github.com/nuschk", "followers_url": "https://api.github.com/users/nuschk/followers", "following_url": "https://api.github.com/users/nuschk/following{/other_user}", "gists_url": "https://api.github.com/users/nuschk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuschk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuschk/subscriptions", "organizations_url": "https://api.github.com/users/nuschk/orgs", "repos_url": "https://api.github.com/users/nuschk/repos", "events_url": "https://api.github.com/users/nuschk/events{/privacy}", "received_events_url": "https://api.github.com/users/nuschk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-17T13:42:31Z", "updated_at": "2018-02-02T20:49:52Z", "closed_at": "2018-01-17T22:37:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "We recently had networking troubles which lead to certain (Sendgrid) SSL handshakes stalling forever. This lead all our mail sending workers to eventually stall and lock up all background tasks.\r\n\r\nUsually, for other HTTPS requests, we add a (generous) timeout (see http://docs.python-requests.org/en/master/user/quickstart/#timeouts). The timeout is chosen such that it only triggers in those rare, extreme circumstances. We mostly use 30 seconds, but Stripe, as another example, uses even 80 seconds (https://github.com/stripe/stripe-python/blob/f948b8b95b6df5b57c7444a05d6c83c8c5e6a0ac/stripe/http_client.py#L97).\r\n\r\nI think anymail should have a default timeout, too. Doesn't even have to be configurable, and the exception could be passed straight to user code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/79", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/79/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/79/events", "html_url": "https://github.com/anymail/django-anymail/issues/79", "id": 275171054, "node_id": "MDU6SXNzdWUyNzUxNzEwNTQ=", "number": 79, "title": "Asynchronously send emails by overriding EmailBackend?", "user": {"login": "mistalaba", "id": 738293, "node_id": "MDQ6VXNlcjczODI5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/738293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mistalaba", "html_url": "https://github.com/mistalaba", "followers_url": "https://api.github.com/users/mistalaba/followers", "following_url": "https://api.github.com/users/mistalaba/following{/other_user}", "gists_url": "https://api.github.com/users/mistalaba/gists{/gist_id}", "starred_url": "https://api.github.com/users/mistalaba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mistalaba/subscriptions", "organizations_url": "https://api.github.com/users/mistalaba/orgs", "repos_url": "https://api.github.com/users/mistalaba/repos", "events_url": "https://api.github.com/users/mistalaba/events{/privacy}", "received_events_url": "https://api.github.com/users/mistalaba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136478, "node_id": "MDU6TGFiZWwzMzkxMzY0Nzg=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-19T16:18:27Z", "updated_at": "2017-11-28T23:51:03Z", "closed_at": "2017-11-23T07:12:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nThanks for an excellent product!\r\n\r\nI had this idea to override the Emailbackend so that self.send_messages or self._send(message) would be handled by a Celery task instead. Has anyone done something similar or am I approaching this wrong?\r\n\r\nThank you, and sorry if this is not the proper place to ask a question. I would post this in a more appropriate place if I knew where.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/78", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/78/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/78/events", "html_url": "https://github.com/anymail/django-anymail/issues/78", "id": 270741023, "node_id": "MDU6SXNzdWUyNzA3NDEwMjM=", "number": 78, "title": "Postmark: add click tracking webhook", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007685, "node_id": "MDU6TGFiZWw0OTUwMDc2ODU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Postmark", "name": "esp:Postmark", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-02T17:30:43Z", "updated_at": "2017-11-02T18:48:13Z", "closed_at": "2017-11-02T18:48:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Postmark just added support for [click webhooks](https://postmarkapp.com/developer/webhooks/click-webhook). Anymail should add them to normalized tracking events.\r\n\r\n(Until then, Postmark clicks will show up in Anymail as \"unknown\" type tracking events.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/77", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/77/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/77/events", "html_url": "https://github.com/anymail/django-anymail/issues/77", "id": 268972875, "node_id": "MDU6SXNzdWUyNjg5NzI4NzU=", "number": 77, "title": "Mailgun: certain metadata keys can break tracking webhooks", "user": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-10-27T02:52:27Z", "updated_at": "2017-10-27T20:26:51Z", "closed_at": "2017-10-27T20:26:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Discovered while investigating #76]\r\n\r\nBecause of the way Mailgun merges user-variables into its webhook posts, using metadata keys that conflict with [Mailgun event parameters](http://mailgun-documentation.readthedocs.io/en/latest/user_manual.html#tracking-opens) can confuse Anymail's event parsing and lead to unexpected results. For example, if you send this message:\r\n\r\n```python\r\n    AnymailMessage(\r\n        # ...\r\n        to=[\"customer@example.com\"],\r\n        metadata={\"event\": \"holiday campaign\", \"recipient\": \"vip\"}\r\n    ).send()\r\n```\r\n\r\nThe the tracking handler will receive incorrect information for all tracking events (because \"event\" and \"recipient\" are Mailgun event parameters):\r\n\r\n```python\r\n    @receiver(tracking)\r\n    def handle_event(sender, event, esp_name, **kwargs):\r\n        # the event_type should be \"received\" or \"opened\", etc., but...\r\n        print(event.event_type)  # \"unknown\" (for every event about this message)\r\n        # the recipient should be \"customer@example.com\", but...\r\n        print(event.recipient)  # \"vip\"\r\n```\r\n\r\nIt looks like Mailgun supplies both its event parameter field and the user-variable field in the post data, so they're both available in Django's POST QueryDict:\r\n```python\r\n        print(event.esp_event.getlist('recipient'))  # [\"customer@example.com\", \"vip\"]\r\n```\r\nJust need to figure out how to reliably split Mailgun's event params from the metadata ones. (The merge order is not consistent between fields.)\r\n\r\nAffects all versions of Anymail through 1.0.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/76", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/76/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/76/events", "html_url": "https://github.com/anymail/django-anymail/issues/76", "id": 268668829, "node_id": "MDU6SXNzdWUyNjg2Njg4Mjk=", "number": 76, "title": "Mailgun: Metadata is not available in opened or clicked events", "user": {"login": "gertsteyn", "id": 8758010, "node_id": "MDQ6VXNlcjg3NTgwMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8758010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gertsteyn", "html_url": "https://github.com/gertsteyn", "followers_url": "https://api.github.com/users/gertsteyn/followers", "following_url": "https://api.github.com/users/gertsteyn/following{/other_user}", "gists_url": "https://api.github.com/users/gertsteyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/gertsteyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gertsteyn/subscriptions", "organizations_url": "https://api.github.com/users/gertsteyn/orgs", "repos_url": "https://api.github.com/users/gertsteyn/repos", "events_url": "https://api.github.com/users/gertsteyn/events{/privacy}", "received_events_url": "https://api.github.com/users/gertsteyn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "medmunds", "id": 639984, "node_id": "MDQ6VXNlcjYzOTk4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/639984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/medmunds", "html_url": "https://github.com/medmunds", "followers_url": "https://api.github.com/users/medmunds/followers", "following_url": "https://api.github.com/users/medmunds/following{/other_user}", "gists_url": "https://api.github.com/users/medmunds/gists{/gist_id}", "starred_url": "https://api.github.com/users/medmunds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/medmunds/subscriptions", "organizations_url": "https://api.github.com/users/medmunds/orgs", "repos_url": "https://api.github.com/users/medmunds/repos", "events_url": "https://api.github.com/users/medmunds/events{/privacy}", "received_events_url": "https://api.github.com/users/medmunds/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-26T08:21:59Z", "updated_at": "2017-10-27T20:26:51Z", "closed_at": "2017-10-27T20:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mailgun now strips the X-Mailgun-Variables header from the **message-headers** field for clicked/opened and possibly other events. (Strangely not for delivered)\r\n\r\nThere is now a **user-variables** dictionary that contains the meta data.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/75", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/75/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/75/events", "html_url": "https://github.com/anymail/django-anymail/issues/75", "id": 258362712, "node_id": "MDU6SXNzdWUyNTgzNjI3MTI=", "number": 75, "title": "Congratulations!", "user": {"login": "Danilka", "id": 195518, "node_id": "MDQ6VXNlcjE5NTUxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/195518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Danilka", "html_url": "https://github.com/Danilka", "followers_url": "https://api.github.com/users/Danilka/followers", "following_url": "https://api.github.com/users/Danilka/following{/other_user}", "gists_url": "https://api.github.com/users/Danilka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Danilka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Danilka/subscriptions", "organizations_url": "https://api.github.com/users/Danilka/orgs", "repos_url": "https://api.github.com/users/Danilka/repos", "events_url": "https://api.github.com/users/Danilka/events{/privacy}", "received_events_url": "https://api.github.com/users/Danilka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-18T03:27:48Z", "updated_at": "2017-09-18T17:31:35Z", "closed_at": "2017-09-18T17:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to take a moment and say thank you to everyone who made this project possible. Especially to Mike!\r\n\r\nCheers!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/74", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/74/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/74/events", "html_url": "https://github.com/anymail/django-anymail/issues/74", "id": 257277492, "node_id": "MDU6SXNzdWUyNTcyNzc0OTI=", "number": 74, "title": "Support for converting long type in metadata for SendGrid", "user": {"login": "briandestura", "id": 20831964, "node_id": "MDQ6VXNlcjIwODMxOTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/20831964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briandestura", "html_url": "https://github.com/briandestura", "followers_url": "https://api.github.com/users/briandestura/followers", "following_url": "https://api.github.com/users/briandestura/following{/other_user}", "gists_url": "https://api.github.com/users/briandestura/gists{/gist_id}", "starred_url": "https://api.github.com/users/briandestura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briandestura/subscriptions", "organizations_url": "https://api.github.com/users/briandestura/orgs", "repos_url": "https://api.github.com/users/briandestura/repos", "events_url": "https://api.github.com/users/briandestura/events{/privacy}", "received_events_url": "https://api.github.com/users/briandestura/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495007571, "node_id": "MDU6TGFiZWw0OTUwMDc1NzE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:SendGrid", "name": "esp:SendGrid", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-13T07:02:14Z", "updated_at": "2017-09-18T17:42:01Z", "closed_at": "2017-09-14T18:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reporting an error? It's helpful to know:\r\n\r\n* Anymail version - 0.11.1\r\n* ESP (Mailgun, SendGrid, etc.) - SendGrid\r\n* Versions of Django, requests, python - Django 1.8\r\n* Exact error message and/or stack trace\r\n\r\nIf you pass a metadata in the email that is detected by python as long, you get a 400 from the sendgrid API.  Sendgrid requires metadata to be string and it works fine if the type is detected as int or float, but doesn't work if its long. Casting those to int would solve the problem, but its better if it detects long and converts to string.\r\n```\r\n    def set_metadata(self, metadata):\r\n        # SendGrid requires custom_args values to be strings -- not integers.\r\n        # (And issues the cryptic error {\"field\": null, \"message\": \"Bad Request\", \"help\": null}\r\n        # if they're not.)\r\n        # We'll stringify ints and floats; anything else is the caller's responsibility.\r\n        self.data[\"custom_args\"] = {\r\n            k: str(v) if isinstance(v, (int, float)) else v\r\n            for k, v in metadata.items()\r\n        }\r\n```\r\n\r\n>> Add long in isinstance\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/73", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/73/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/73/events", "html_url": "https://github.com/anymail/django-anymail/issues/73", "id": 256525350, "node_id": "MDU6SXNzdWUyNTY1MjUzNTA=", "number": 73, "title": "Error reporting", "user": {"login": "fcpauldiaz", "id": 4523284, "node_id": "MDQ6VXNlcjQ1MjMyODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4523284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcpauldiaz", "html_url": "https://github.com/fcpauldiaz", "followers_url": "https://api.github.com/users/fcpauldiaz/followers", "following_url": "https://api.github.com/users/fcpauldiaz/following{/other_user}", "gists_url": "https://api.github.com/users/fcpauldiaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcpauldiaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcpauldiaz/subscriptions", "organizations_url": "https://api.github.com/users/fcpauldiaz/orgs", "repos_url": "https://api.github.com/users/fcpauldiaz/repos", "events_url": "https://api.github.com/users/fcpauldiaz/events{/privacy}", "received_events_url": "https://api.github.com/users/fcpauldiaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-10T17:24:45Z", "updated_at": "2017-09-15T07:32:18Z", "closed_at": "2017-09-10T17:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nHow do I configure anymail to send servers errors via email? I tried with Debug = False and with the Admin config but no luck\r\n```\r\nADMINS = [('John', 'john@example.com'), ('Mary', 'mary@example.com')]\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/71", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/71/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/71/events", "html_url": "https://github.com/anymail/django-anymail/issues/71", "id": 244764976, "node_id": "MDU6SXNzdWUyNDQ3NjQ5NzY=", "number": 71, "title": "mailjet configuration error", "user": {"login": "BlueRui", "id": 23182566, "node_id": "MDQ6VXNlcjIzMTgyNTY2", "avatar_url": "https://avatars3.githubusercontent.com/u/23182566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlueRui", "html_url": "https://github.com/BlueRui", "followers_url": "https://api.github.com/users/BlueRui/followers", "following_url": "https://api.github.com/users/BlueRui/following{/other_user}", "gists_url": "https://api.github.com/users/BlueRui/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlueRui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlueRui/subscriptions", "organizations_url": "https://api.github.com/users/BlueRui/orgs", "repos_url": "https://api.github.com/users/BlueRui/repos", "events_url": "https://api.github.com/users/BlueRui/events{/privacy}", "received_events_url": "https://api.github.com/users/BlueRui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495008181, "node_id": "MDU6TGFiZWw0OTUwMDgxODE=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/docs", "name": "docs", "color": "c5def5", "default": false, "description": null}, {"id": 646615837, "node_id": "MDU6TGFiZWw2NDY2MTU4Mzc=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailjet", "name": "esp:Mailjet", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-21T19:42:28Z", "updated_at": "2017-07-24T18:14:35Z", "closed_at": "2017-07-24T18:14:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Anymail version: v.10\r\n* ESP (Mailgun, SendGrid, etc.): MailJet\r\n\r\nI added the following with valid key in settings.py, but still got the error stating it is not set. I have no problem using MailGun.\r\nANYMAIL = {\r\n    \"MAILJET_API_KEY\": \"<your API key>\",\r\n    \"MAILJET_API_SECRET\": \"<your API secret>\",\r\n}\r\n\r\nException Type:  AnymailConfigurationError\r\nException Value: You must set ANYMAIL_MAILJET_SECRET_KEY or ANYMAIL = {'MAILJET_SECRET_KEY': ...} or MAILJET_SECRET_KEY in your Django settings\r\n\r\nSOLUTION:\r\nIt should be \"MAILJET_SECRET_KEY\" instead of \"MAILJET_API_SECRET\".\r\nThe doc gives \"MAILJET_API_SECRET\" which should be corrected.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/70", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/70/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/70/events", "html_url": "https://github.com/anymail/django-anymail/issues/70", "id": 241693421, "node_id": "MDU6SXNzdWUyNDE2OTM0MjE=", "number": 70, "title": "Handle non-int esp codes", "user": {"login": "tomfa", "id": 1502702, "node_id": "MDQ6VXNlcjE1MDI3MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1502702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomfa", "html_url": "https://github.com/tomfa", "followers_url": "https://api.github.com/users/tomfa/followers", "following_url": "https://api.github.com/users/tomfa/following{/other_user}", "gists_url": "https://api.github.com/users/tomfa/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomfa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomfa/subscriptions", "organizations_url": "https://api.github.com/users/tomfa/orgs", "repos_url": "https://api.github.com/users/tomfa/repos", "events_url": "https://api.github.com/users/tomfa/events{/privacy}", "received_events_url": "https://api.github.com/users/tomfa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-10T12:20:23Z", "updated_at": "2017-07-20T17:31:11Z", "closed_at": "2017-07-13T18:45:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems like there's an assumption that `esp_event['code']` are integers. They don't have to be. Below an error caused by a [550 5.1.1](https://www.massmailsoftware.com/smtp/550-5-1-1.php), due to a bogus email-address\r\n\r\n![esp 5 1 1](https://user-images.githubusercontent.com/1502702/28017481-ba599f3e-6579-11e7-810a-06886ba6e165.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/69", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/69/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/69/events", "html_url": "https://github.com/anymail/django-anymail/issues/69", "id": 239633033, "node_id": "MDU6SXNzdWUyMzk2MzMwMzM=", "number": 69, "title": "Missing or invalid basic auth in Anymail Mailgun webhook", "user": {"login": "pymarco", "id": 4700618, "node_id": "MDQ6VXNlcjQ3MDA2MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4700618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pymarco", "html_url": "https://github.com/pymarco", "followers_url": "https://api.github.com/users/pymarco/followers", "following_url": "https://api.github.com/users/pymarco/following{/other_user}", "gists_url": "https://api.github.com/users/pymarco/gists{/gist_id}", "starred_url": "https://api.github.com/users/pymarco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pymarco/subscriptions", "organizations_url": "https://api.github.com/users/pymarco/orgs", "repos_url": "https://api.github.com/users/pymarco/repos", "events_url": "https://api.github.com/users/pymarco/events{/privacy}", "received_events_url": "https://api.github.com/users/pymarco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-06-29T22:52:00Z", "updated_at": "2018-08-05T11:30:56Z", "closed_at": "2017-06-30T16:41:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for maintaining Anymail, it is really great so far.\r\n\r\nI am trying to receive a webhook from Mailgun but I get an error.\r\n\r\n    \"Missing or invalid basic auth in Anymail Mailgun webhook\"\r\n\r\n\r\nAnymail is configured correctly, and I have been sending email through Mailgun for about a week.\r\n\r\n    ANYMAIL = {\r\n        \"MAILGUN_API_KEY\": Env.value(\"MAILGUN_API_KEY\"),\r\n        \"MAILGUN_SENDER_DOMAIN\": Env.value(\"MAILGUN_SENDER_DOMAIN\"),\r\n        \"WEBHOOK_AUTHORIZATION\": Env.value(\"ANYMAIL_WEBHOOK_AUTHORIZATION\"),\r\n    }\r\n\r\nToday I added the \"WEBHOOK_AUTHORIZATION\" setting. Currently I am testing this feature on our dev environment. Therefore, the Mailgun sender domain is my Mailgun sandbox domain.\r\n\r\nI set the Mailgun \"Unsubscribes\" web hook to the url defined in the Anymail documentation.\r\n\r\n    https://secret1:secret2@dev.mysite.com/anymail/mailgun/tracking/\r\n\r\nAnd in my urls.py\r\n\r\n    url(\r\n        r'^anymail/',\r\n        include('anymail.urls')\r\n    ),\r\n\r\nWhen I receive an email and click the unsubscribe link, a POST is made to my server, but I get the error listed above.\r\n\r\n\r\nFor what it's worth, I am hosting my site on Webfaction using Apache.\r\n\r\n\r\nI found a nearly identical issue on Stackoverflow, but no answer provided. \r\nhttps://stackoverflow.com/questions/38620608/django-anymail-mailgun-webhook-no-http-authorization-in-meta\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/68", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/68/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/68/events", "html_url": "https://github.com/anymail/django-anymail/issues/68", "id": 237039694, "node_id": "MDU6SXNzdWUyMzcwMzk2OTQ=", "number": 68, "title": "1.0 Release Date ETA?", "user": {"login": "jhancia", "id": 18603118, "node_id": "MDQ6VXNlcjE4NjAzMTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/18603118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhancia", "html_url": "https://github.com/jhancia", "followers_url": "https://api.github.com/users/jhancia/followers", "following_url": "https://api.github.com/users/jhancia/following{/other_user}", "gists_url": "https://api.github.com/users/jhancia/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhancia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhancia/subscriptions", "organizations_url": "https://api.github.com/users/jhancia/orgs", "repos_url": "https://api.github.com/users/jhancia/repos", "events_url": "https://api.github.com/users/jhancia/events{/privacy}", "received_events_url": "https://api.github.com/users/jhancia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-19T22:15:57Z", "updated_at": "2017-09-18T00:39:20Z", "closed_at": "2017-09-18T00:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Appreciate this library very much and looking to use it in a new production site.  Any estimate for the 1.0 release date?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/67", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/67/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/67/events", "html_url": "https://github.com/anymail/django-anymail/issues/67", "id": 236104936, "node_id": "MDU6SXNzdWUyMzYxMDQ5MzY=", "number": 67, "title": "Set AnymailTrackingEvent.metadata to empty dict instead of None", "user": {"login": "lauritzen", "id": 230444, "node_id": "MDQ6VXNlcjIzMDQ0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/230444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lauritzen", "html_url": "https://github.com/lauritzen", "followers_url": "https://api.github.com/users/lauritzen/followers", "following_url": "https://api.github.com/users/lauritzen/following{/other_user}", "gists_url": "https://api.github.com/users/lauritzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/lauritzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lauritzen/subscriptions", "organizations_url": "https://api.github.com/users/lauritzen/orgs", "repos_url": "https://api.github.com/users/lauritzen/repos", "events_url": "https://api.github.com/users/lauritzen/events{/privacy}", "received_events_url": "https://api.github.com/users/lauritzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136475, "node_id": "MDU6TGFiZWwzMzkxMzY0NzU=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/feature/enhancement", "name": "feature/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T07:49:25Z", "updated_at": "2017-06-30T23:56:49Z", "closed_at": "2017-06-30T23:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "If there is no metadata attached a tracking event the metadata field is set to `None`. This is a bit inconvenient while handling tracking events as it introduces an extra conditional before accessing the datastructure:\r\n\r\n```\r\nif event.metadata:\r\n  value = event.metadata.get(key)\r\n```\r\n\r\nSetting `metadata = {}` instead removes the need for the conditional.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/65", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/65/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/65/events", "html_url": "https://github.com/anymail/django-anymail/issues/65", "id": 230514656, "node_id": "MDU6SXNzdWUyMzA1MTQ2NTY=", "number": 65, "title": "Support for MailJet", "user": {"login": "dhrp", "id": 2017300, "node_id": "MDQ6VXNlcjIwMTczMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2017300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhrp", "html_url": "https://github.com/dhrp", "followers_url": "https://api.github.com/users/dhrp/followers", "following_url": "https://api.github.com/users/dhrp/following{/other_user}", "gists_url": "https://api.github.com/users/dhrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhrp/subscriptions", "organizations_url": "https://api.github.com/users/dhrp/orgs", "repos_url": "https://api.github.com/users/dhrp/repos", "events_url": "https://api.github.com/users/dhrp/events{/privacy}", "received_events_url": "https://api.github.com/users/dhrp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 610750960, "node_id": "MDU6TGFiZWw2MTA3NTA5NjA=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/new%20ESP", "name": "new ESP", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-22T20:47:02Z", "updated_at": "2017-07-13T23:07:11Z", "closed_at": "2017-07-13T23:06:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see already a couple of other back-ends were requested, but I would love to see [mailjet](https://www.mailjet.com/) integrated. I think mailjet has at least one benefit over most, if not all, others, which is that the templating engine is full-featured and (reasonably) intuitive. On review sites is usually mentioned in the top 7 with transactional e-mail.\r\n\r\nI'll look into what it will take to make an implementation myself. -- I also know that [kidig/django-mailjet](https://github.com/kidig/django-mailjet) exists, but seems to miss features. I've been having a hard time settling on a choice (is mailjet reliable enough?) that I would prefer to be able to switch fast.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/64", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/64/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/64/events", "html_url": "https://github.com/anymail/django-anymail/issues/64", "id": 228952366, "node_id": "MDU6SXNzdWUyMjg5NTIzNjY=", "number": 64, "title": "Support for Mailchimp's Mandrill service", "user": {"login": "Skyross", "id": 3192973, "node_id": "MDQ6VXNlcjMxOTI5NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3192973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skyross", "html_url": "https://github.com/Skyross", "followers_url": "https://api.github.com/users/Skyross/followers", "following_url": "https://api.github.com/users/Skyross/following{/other_user}", "gists_url": "https://api.github.com/users/Skyross/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skyross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skyross/subscriptions", "organizations_url": "https://api.github.com/users/Skyross/orgs", "repos_url": "https://api.github.com/users/Skyross/repos", "events_url": "https://api.github.com/users/Skyross/events{/privacy}", "received_events_url": "https://api.github.com/users/Skyross/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-16T08:26:20Z", "updated_at": "2018-12-17T19:05:38Z", "closed_at": "2017-05-16T17:00:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be great to add support for Mandrill. Here is a basic usage of it [in official docs](https://mandrillapp.com/api/docs/messages.python.html). Anyway, I'm planning to add PR but I'm not sure about the time.\r\n\r\nThank you for package!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/63", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/63/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/63/events", "html_url": "https://github.com/anymail/django-anymail/issues/63", "id": 224854334, "node_id": "MDU6SXNzdWUyMjQ4NTQzMzQ=", "number": 63, "title": "Support for OSS Postal mail service", "user": {"login": "avelis", "id": 181597, "node_id": "MDQ6VXNlcjE4MTU5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/181597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avelis", "html_url": "https://github.com/avelis", "followers_url": "https://api.github.com/users/avelis/followers", "following_url": "https://api.github.com/users/avelis/following{/other_user}", "gists_url": "https://api.github.com/users/avelis/gists{/gist_id}", "starred_url": "https://api.github.com/users/avelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avelis/subscriptions", "organizations_url": "https://api.github.com/users/avelis/orgs", "repos_url": "https://api.github.com/users/avelis/repos", "events_url": "https://api.github.com/users/avelis/events{/privacy}", "received_events_url": "https://api.github.com/users/avelis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339159196, "node_id": "MDU6TGFiZWwzMzkxNTkxOTY=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/community%20input%20needed", "name": "community input needed", "color": "fbca04", "default": false, "description": null}, {"id": 610750960, "node_id": "MDU6TGFiZWw2MTA3NTA5NjA=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/new%20ESP", "name": "new ESP", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-27T17:16:51Z", "updated_at": "2017-09-18T17:40:26Z", "closed_at": "2017-09-18T17:40:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "[postal](https://github.com/atech/postal) recently was made available on Github as an OSS alternative to Mailgun & Sendgrid.\r\n\r\nSupporting a new mail service backend isn't a small undertaking and could have potential challenges. However, the idea sounds really cool in concept to see a full OSS stack for mail delivery available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/62", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/62/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/62/events", "html_url": "https://github.com/anymail/django-anymail/issues/62", "id": 224687357, "node_id": "MDU6SXNzdWUyMjQ2ODczNTc=", "number": 62, "title": "ValueError in MailgunTrackingWebhookView.esp_to_anymail_event ", "user": {"login": "klette", "id": 88143, "node_id": "MDQ6VXNlcjg4MTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/88143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klette", "html_url": "https://github.com/klette", "followers_url": "https://api.github.com/users/klette/followers", "following_url": "https://api.github.com/users/klette/following{/other_user}", "gists_url": "https://api.github.com/users/klette/gists{/gist_id}", "starred_url": "https://api.github.com/users/klette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klette/subscriptions", "organizations_url": "https://api.github.com/users/klette/orgs", "repos_url": "https://api.github.com/users/klette/repos", "events_url": "https://api.github.com/users/klette/events{/privacy}", "received_events_url": "https://api.github.com/users/klette/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339136473, "node_id": "MDU6TGFiZWwzMzkxMzY0NzM=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 495007514, "node_id": "MDU6TGFiZWw0OTUwMDc1MTQ=", "url": "https://api.github.com/repos/anymail/django-anymail/labels/esp:Mailgun", "name": "esp:Mailgun", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-27T06:49:03Z", "updated_at": "2017-05-22T18:11:13Z", "closed_at": "2017-05-22T18:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following `esp_event` from a Mailgun webhook:\r\n\r\n```python\r\n{\r\n'attachment-count': '1', \r\n'code': '5.1.1', \r\n'domain': 'mg.otovo.no', \r\n'error': 'smtp;550 5.1.1 RESOLVER.ADR.RecipNotFound; not found', \r\n'message-headers': '[[\"Received\", \"from drex02.felles.ds.nrk.no (2002:a043:8763::a043:8763) by MAEX02.felles.ds.nrk.no (2002:a043:8797::a043:8797) with Microsoft SMTP Server (TLS) id 15.0.1210.3; Wed, 26 Apr 2017 21:40:34 +0200\"], [\"Received\", \"from EUR02-VE1-obe.outbound.protection.outlook.com (213.199.154.48) by drex02.felle..., \r\n'message-id': 'xxx@mg.otovo.no', \r\n'tag': 'calculation', \r\n'token': 'exxx'\r\n}\r\n```\r\n\r\n`esp_to_anymail_event` fails with a `ValueError` trying to turn '5.1.1' into an int.\r\n\r\nStacktrace:\r\n\r\n```\r\nValueError: invalid literal for int() with base 10: '5.1.1'\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \"django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"django/utils/decorators.py\", line 63, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \"anymail/webhooks/base.py\", line 109, in dispatch\r\n    return super(AnymailBaseWebhookView, self).dispatch(request, *args, **kwargs)\r\n  File \"django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"anymail/webhooks/base.py\", line 123, in post\r\n    events = self.parse_events(request)\r\n  File \"anymail/webhooks/mailgun.py\", line 41, in parse_events\r\n    return [self.esp_to_anymail_event(request.POST)]\r\n  File \"anymail/webhooks/mailgun.py\", line 91, in esp_to_anymail_event\r\n    mta_status = int(esp_event['code'])\r\n```\r\n\r\nThis might be a mailgun bug as well :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/61", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/61/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/61/events", "html_url": "https://github.com/anymail/django-anymail/issues/61", "id": 223796168, "node_id": "MDU6SXNzdWUyMjM3OTYxNjg=", "number": 61, "title": "SSLError", "user": {"login": "alexislg2", "id": 7933080, "node_id": "MDQ6VXNlcjc5MzMwODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7933080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexislg2", "html_url": "https://github.com/alexislg2", "followers_url": "https://api.github.com/users/alexislg2/followers", "following_url": "https://api.github.com/users/alexislg2/following{/other_user}", "gists_url": "https://api.github.com/users/alexislg2/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexislg2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexislg2/subscriptions", "organizations_url": "https://api.github.com/users/alexislg2/orgs", "repos_url": "https://api.github.com/users/alexislg2/repos", "events_url": "https://api.github.com/users/alexislg2/events{/privacy}", "received_events_url": "https://api.github.com/users/alexislg2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-24T12:02:00Z", "updated_at": "2017-04-25T20:53:59Z", "closed_at": "2017-04-25T20:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am using anymail with mailgun for a year now and it has always been working perfectly. But for 48 hours now, I receive many error logs like this:\r\n\r\n> ERROR 2017-04-24 09:29:51,512 Error posting to https://api.mailgun.net/v3/example.com/messages:\r\n> SSLError: bad handshake: SysCallError(-1, 'Unexpected EOF')\r\n> Sending a message to XXX YYY <xxx.yyy@gmail.com> from AAA BBB <XXX@example.com>\r\n> Traceback (most recent call last):\r\n>   File \"./common/utils.py\", line 26, in run\r\n>     msg.send()\r\n>   File \"/usr/local/lib/python2.7/dist-packages/django/core/mail/message.py\", line 342, in send\r\n>     return self.get_connection(fail_silently).send_messages([self])\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base.py\", line 86, in send_messages\r\n>     sent = self._send(message)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base_requests.py\", line 56, in _send\r\n>     return super(AnymailRequestsBackend, self)._send(message)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base.py\", line 116, in _send\r\n>     response = self.post_to_esp(payload, message)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base_requests.py\", line 76, in post_to_esp\r\n>     raised_from=err, email_message=message, payload=payload)\r\n> AnymailRequestsAPIError: Error posting to https://api.mailgun.net/v3/example.com/messages:\r\n> SSLError: bad handshake: SysCallError(-1, 'Unexpected EOF')\r\n> Sending a message to XXX YYY <xxx.yyy@gmail.com> from AAA BBB <XXX@example.com>\r\n> ERROR 2017-04-24 10:37:58,929 Error posting to https://api.mailgun.net/v3/example.com/messages:\r\n> SSLError: bad handshake: SysCallError(-1, 'Unexpected EOF')\r\n> Sending a message toXXX YYY <xxx.yyy@gmail.com> from AAA BBB <XXX@example.com>\r\n> Traceback (most recent call last):\r\n>   File \"./common/utils.py\", line 26, in run\r\n>     msg.send()\r\n>   File \"/usr/local/lib/python2.7/dist-packages/django/core/mail/message.py\", line 342, in send\r\n>     return self.get_connection(fail_silently).send_messages([self])\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base.py\", line 86, in send_messages\r\n>     sent = self._send(message)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base_requests.py\", line 56, in _send\r\n>     return super(AnymailRequestsBackend, self)._send(message)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base.py\", line 116, in _send\r\n>     response = self.post_to_esp(payload, message)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/anymail/backends/base_requests.py\", line 76, in post_to_esp\r\n>     raised_from=err, email_message=message, payload=payload)\r\n> AnymailRequestsAPIError: Error posting to https://api.mailgun.net/v3/example.com/messages:\r\n> SSLError: bad handshake: SysCallError(-1, 'Unexpected EOF')\r\n> Sending a message to XXX YYY <xxx.yyy@gmail.com> from AAA BBB <XXX@example.com>\r\n\r\nIt looks like a SSL issue but I really do not understand why. This happens with arround 50% of the mails I send. It seems random\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/anymail/django-anymail/issues/60", "repository_url": "https://api.github.com/repos/anymail/django-anymail", "labels_url": "https://api.github.com/repos/anymail/django-anymail/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/anymail/django-anymail/issues/60/comments", "events_url": "https://api.github.com/repos/anymail/django-anymail/issues/60/events", "html_url": "https://github.com/anymail/django-anymail/issues/60", "id": 222178022, "node_id": "MDU6SXNzdWUyMjIxNzgwMjI=", "number": 60, "title": "Allow multiple emails in the from_email argument", "user": {"login": "avelis", "id": 181597, "node_id": "MDQ6VXNlcjE4MTU5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/181597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avelis", "html_url": "https://github.com/avelis", "followers_url": "https://api.github.com/users/avelis/followers", "following_url": "https://api.github.com/users/avelis/following{/other_user}", "gists_url": "https://api.github.com/users/avelis/gists{/gist_id}", "starred_url": "https://api.github.com/users/avelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avelis/subscriptions", "organizations_url": "https://api.github.com/users/avelis/orgs", "repos_url": "https://api.github.com/users/avelis/repos", "events_url": "https://api.github.com/users/avelis/events{/privacy}", "received_events_url": "https://api.github.com/users/avelis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-17T17:20:36Z", "updated_at": "2017-04-19T19:49:30Z", "closed_at": "2017-04-19T19:49:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [RFC-5322 Section 3.6.2](https://tools.ietf.org/html/rfc5322#section-3.6.2), the From can be a mailbox list and the Sender can be a mailbox. I tried to set the from_email as a list of emails but caught an `AnymailInvalidAddress` when calling the send method.\r\n\r\n```python\r\n>>> m = EmailMessage(to=['recipient@test.com'], from_email=['sender@test.com', 'from@test.com'], body='test', subject='test')\r\n>>> m.send()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/.../lib/python2.7/site-packages/django/core/mail/message.py\", line 292, in send\r\n    return self.get_connection(fail_silently).send_messages([self])\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/base.py\", line 88, in send_messages\r\n    sent = self._send(message)\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/base_requests.py\", line 56, in _send\r\n    return super(AnymailRequestsBackend, self)._send(message)\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/base.py\", line 117, in _send\r\n    payload = self.build_message_payload(message, self.send_defaults)\r\n  File \"/Users/andrewvelis/Documents/promoterapp/apps/emailrelay/backends.py\", line 8, in build_message_payload\r\n    return SendGridSMTPAPIMethodsPayload(message, defaults, self)\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/sendgrid_v2.py\", line 93, in __init__\r\n    *args, **kwargs)\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/base_requests.py\", line 116, in __init__\r\n    super(RequestsPayload, self).__init__(message, defaults, backend)\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/base.py\", line 265, in __init__\r\n    value = converter(value)\r\n  File \"/.../lib/python2.7/site-packages/anymail/backends/base.py\", line 304, in parsed_email\r\n    return ParsedEmail(address, self.message.encoding)  # (handles lazy address)\r\n  File \"/.../lib/python2.7/site-packages/anymail/utils.py\", line 144, in __init__\r\n    % (address, str(err)))\r\nAnymailInvalidAddress: Invalid email address format ['sender@test.com', 'from@test.com']: Multiple email addresses (parses as [('', ''), ('', u\"'sender@test.com'\"), ('', u\"'from@test.com'\"), ('', '')])\r\n```\r\n\r\nIt feels like a bug with django-anymail but I am open for discussion/education on how to achieve this.", "performed_via_github_app": null, "score": 1.0}]}