{"total_count": 27, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/avian2/jsonmerge/issues/45", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/45/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/45/events", "html_url": "https://github.com/avian2/jsonmerge/issues/45", "id": 534248531, "node_id": "MDU6SXNzdWU1MzQyNDg1MzE=", "number": 45, "title": "oneOf/anyOf of required incorrectly treated as branch", "user": {"login": "mrehder", "id": 12175335, "node_id": "MDQ6VXNlcjEyMTc1MzM1", "avatar_url": "https://avatars2.githubusercontent.com/u/12175335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrehder", "html_url": "https://github.com/mrehder", "followers_url": "https://api.github.com/users/mrehder/followers", "following_url": "https://api.github.com/users/mrehder/following{/other_user}", "gists_url": "https://api.github.com/users/mrehder/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrehder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrehder/subscriptions", "organizations_url": "https://api.github.com/users/mrehder/orgs", "repos_url": "https://api.github.com/users/mrehder/repos", "events_url": "https://api.github.com/users/mrehder/events{/privacy}", "received_events_url": "https://api.github.com/users/mrehder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-06T20:42:28Z", "updated_at": "2019-12-09T16:55:32Z", "closed_at": "2019-12-09T16:44:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "The below JSON Schema construct is purely about enforcement and not structure.\r\nThis implements a variant schema enforcement (in the below it says that either A&B must be present or A&C must be present).\r\nThis should be ignored for descent and not generate an error.\r\n\r\n{ \"type\" : \"object\",\r\n                    \"anyOf\" : \r\n                    [  { \"required\" : \r\n                        [ \"A\", \"B\" ] },\r\n                      { \"required\" : \r\n                        [ \"A\", \"C\" ] } ],", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/44", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/44/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/44/events", "html_url": "https://github.com/avian2/jsonmerge/issues/44", "id": 534207185, "node_id": "MDU6SXNzdWU1MzQyMDcxODU=", "number": 44, "title": "multiple idRef and ignoreId", "user": {"login": "mrehder", "id": 12175335, "node_id": "MDQ6VXNlcjEyMTc1MzM1", "avatar_url": "https://avatars2.githubusercontent.com/u/12175335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrehder", "html_url": "https://github.com/mrehder", "followers_url": "https://api.github.com/users/mrehder/followers", "following_url": "https://api.github.com/users/mrehder/following{/other_user}", "gists_url": "https://api.github.com/users/mrehder/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrehder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrehder/subscriptions", "organizations_url": "https://api.github.com/users/mrehder/orgs", "repos_url": "https://api.github.com/users/mrehder/repos", "events_url": "https://api.github.com/users/mrehder/events{/privacy}", "received_events_url": "https://api.github.com/users/mrehder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-06T19:00:59Z", "updated_at": "2020-01-12T18:05:13Z", "closed_at": "2020-01-12T18:05:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "support for multiple \"keys\" in an array seems to be missing.\r\nThis is required for some use-cases where more than one property is used as the \"key\" of the array.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/43", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/43/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/43/events", "html_url": "https://github.com/avian2/jsonmerge/issues/43", "id": 454163114, "node_id": "MDU6SXNzdWU0NTQxNjMxMTQ=", "number": 43, "title": "Support", "user": {"login": "SmartManoj", "id": 7231077, "node_id": "MDQ6VXNlcjcyMzEwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7231077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SmartManoj", "html_url": "https://github.com/SmartManoj", "followers_url": "https://api.github.com/users/SmartManoj/followers", "following_url": "https://api.github.com/users/SmartManoj/following{/other_user}", "gists_url": "https://api.github.com/users/SmartManoj/gists{/gist_id}", "starred_url": "https://api.github.com/users/SmartManoj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SmartManoj/subscriptions", "organizations_url": "https://api.github.com/users/SmartManoj/orgs", "repos_url": "https://api.github.com/users/SmartManoj/repos", "events_url": "https://api.github.com/users/SmartManoj/events{/privacy}", "received_events_url": "https://api.github.com/users/SmartManoj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-10T13:10:35Z", "updated_at": "2019-06-10T15:05:21Z", "closed_at": "2019-06-10T15:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is JsonMerge valid for [this](https://stackoverflow.com/questions/56510746/python-merge-nested-object-based-on-key) issue?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/42", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/42/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/42/events", "html_url": "https://github.com/avian2/jsonmerge/issues/42", "id": 454139594, "node_id": "MDU6SXNzdWU0NTQxMzk1OTQ=", "number": 42, "title": "Is it support uniqueItems in arrays?", "user": {"login": "SmartManoj", "id": 7231077, "node_id": "MDQ6VXNlcjcyMzEwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7231077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SmartManoj", "html_url": "https://github.com/SmartManoj", "followers_url": "https://api.github.com/users/SmartManoj/followers", "following_url": "https://api.github.com/users/SmartManoj/following{/other_user}", "gists_url": "https://api.github.com/users/SmartManoj/gists{/gist_id}", "starred_url": "https://api.github.com/users/SmartManoj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SmartManoj/subscriptions", "organizations_url": "https://api.github.com/users/SmartManoj/orgs", "repos_url": "https://api.github.com/users/SmartManoj/repos", "events_url": "https://api.github.com/users/SmartManoj/events{/privacy}", "received_events_url": "https://api.github.com/users/SmartManoj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-10T12:11:02Z", "updated_at": "2019-06-10T15:05:31Z", "closed_at": "2019-06-10T15:05:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nbase = {\r\n        \"foo\": 1,\r\n        \"bar\": [\"2\"]\r\n     }\r\n\r\n\r\nhead = {\r\n        \"bar\": [\"2\"],\r\n        \"baz\": \"Hello, world!\"\r\n    }\r\nschema = {  \r\n            \"properties\": {\r\n                \"bar\": {\r\n                    \"uniqueItems\": True,\r\n                    \"mergeStrategy\": \"append\",\r\n                }\r\n            }\r\n        }\r\n\r\nfrom jsonmerge import Merger\r\nfrom pprint import *\r\nmerger = Merger(schema)\r\nresult = merger.merge(base, head)\r\n\r\npprint(result, width=40)\r\n{'bar': ['2'],\r\n 'baz': 'Hello, world!',\r\n 'foo': 1}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/41", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/41/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/41/events", "html_url": "https://github.com/avian2/jsonmerge/issues/41", "id": 454130022, "node_id": "MDU6SXNzdWU0NTQxMzAwMjI=", "number": 41, "title": "Which tool would you recommend to create json schema ?", "user": {"login": "SmartManoj", "id": 7231077, "node_id": "MDQ6VXNlcjcyMzEwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7231077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SmartManoj", "html_url": "https://github.com/SmartManoj", "followers_url": "https://api.github.com/users/SmartManoj/followers", "following_url": "https://api.github.com/users/SmartManoj/following{/other_user}", "gists_url": "https://api.github.com/users/SmartManoj/gists{/gist_id}", "starred_url": "https://api.github.com/users/SmartManoj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SmartManoj/subscriptions", "organizations_url": "https://api.github.com/users/SmartManoj/orgs", "repos_url": "https://api.github.com/users/SmartManoj/repos", "events_url": "https://api.github.com/users/SmartManoj/events{/privacy}", "received_events_url": "https://api.github.com/users/SmartManoj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-10T11:43:31Z", "updated_at": "2019-06-10T15:06:13Z", "closed_at": "2019-06-10T15:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like https://www.liquid-technologies.com/online-json-to-schema-converter", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/40", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/40/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/40/events", "html_url": "https://github.com/avian2/jsonmerge/issues/40", "id": 444686389, "node_id": "MDU6SXNzdWU0NDQ2ODYzODk=", "number": 40, "title": "Merging on top of non-dictionaries fails", "user": {"login": "CommanderPrS", "id": 14830158, "node_id": "MDQ6VXNlcjE0ODMwMTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/14830158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CommanderPrS", "html_url": "https://github.com/CommanderPrS", "followers_url": "https://api.github.com/users/CommanderPrS/followers", "following_url": "https://api.github.com/users/CommanderPrS/following{/other_user}", "gists_url": "https://api.github.com/users/CommanderPrS/gists{/gist_id}", "starred_url": "https://api.github.com/users/CommanderPrS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CommanderPrS/subscriptions", "organizations_url": "https://api.github.com/users/CommanderPrS/orgs", "repos_url": "https://api.github.com/users/CommanderPrS/repos", "events_url": "https://api.github.com/users/CommanderPrS/events{/privacy}", "received_events_url": "https://api.github.com/users/CommanderPrS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-15T23:19:18Z", "updated_at": "2019-06-10T15:06:25Z", "closed_at": "2019-06-10T15:06:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the base JSON has some plain value, e.g. a string, for some key and the head JSON is trying to merge a dictionary for the same key, `jsonmerge.merge()` fails with the following error:\r\n\r\n```\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\__init__.py\", line 346, in merge\r\n    return merger.merge(base, head)\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\__init__.py\", line 301, in merge\r\n    return walk.descend(schema, base, head, meta).val\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\__init__.py\", line 78, in descend\r\n    rv = self.work(strategy, schema, *args, **opts)\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\__init__.py\", line 123, in work\r\n    rv = strategy.merge(self, base, head, schema, meta, objclass_menu=self.merger.objclass_menu, **kwargs)\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\strategies.py\", line 270, in merge\r\n    base[k] = walk.descend(subschema, base.get(k), v, meta)\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\__init__.py\", line 78, in descend\r\n    rv = self.work(strategy, schema, *args, **opts)\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\__init__.py\", line 123, in work\r\n    rv = strategy.merge(self, base, head, schema, meta, objclass_menu=self.merger.objclass_menu, **kwargs)\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\jsonmerge\\strategies.py\", line 243, in merge\r\n    raise BaseInstanceError(\"Base for an 'object' merge strategy is not an object\", base)\r\njsonmerge.exceptions.BaseInstanceError: Base for an 'object' merge strategy is not an object: #/std\r\n```\r\n\r\nThis seems wrong. If I am overwriting a plain value that is not a dictionary, the merge should simply throw away the value and keep the new dictionary. This is different than using the \"replace\" strategy blindly - the merge should still do a recursive merge of dictionaries. It is just in cases where the base is not a dictionary, it should just replace.\r\n\r\nThis is especially tricky if the two JSONs are coming from some user data. If someone makes a mistake in the base JSON, the merge fails, even though it should not. The code that merges does not really have a way to predict where this could happen, thus it can not provide merge strategy overwrites statically.\r\n\r\nIn case this matters, this happens with jsonmerge 1.6.0 on Windows with python 3.7.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/39", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/39/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/39/events", "html_url": "https://github.com/avian2/jsonmerge/issues/39", "id": 443495748, "node_id": "MDU6SXNzdWU0NDM0OTU3NDg=", "number": 39, "title": "jsonmerge fails assertion on nan float values", "user": {"login": "mwes", "id": 5033275, "node_id": "MDQ6VXNlcjUwMzMyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5033275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwes", "html_url": "https://github.com/mwes", "followers_url": "https://api.github.com/users/mwes/followers", "following_url": "https://api.github.com/users/mwes/following{/other_user}", "gists_url": "https://api.github.com/users/mwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwes/subscriptions", "organizations_url": "https://api.github.com/users/mwes/orgs", "repos_url": "https://api.github.com/users/mwes/repos", "events_url": "https://api.github.com/users/mwes/events{/privacy}", "received_events_url": "https://api.github.com/users/mwes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-13T16:37:03Z", "updated_at": "2019-05-15T11:46:59Z", "closed_at": "2019-05-15T08:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python's default JSON encoder allows for the encoding of extended values like nan, -inf, and inf. We have an external process that is recording float nan values as part of a measurement error. This is different from indicating that a value _was not recorded_, so we unfortunately can't just substitute null or None in this case.\r\n\r\nWhen running these values through jsonmerge, we hit an assertion failure as part of the resolution process. This is because python correctly interprets float('nan') == float('nan') to be false, so the assert fails: https://github.com/avian2/jsonmerge/blob/master/jsonmerge/__init__.py#L117 \r\n\r\nPer IEEE 754 - python does not allow nan float values to be considered equal.\r\n\r\nI would like to request an extension to the merge process that allows for the optional comparison of nan values and to consider them equal (e.g. math.isnan(base.val) == math.isnan(resolved). While not a normal/expected behavior, this is currently preventing us from using this (very useful!) library without improperly modifying our measurement data.\r\n\r\nI suggest this be allowable as a flag for callers to override the comparison logic to consider nan values equal. In our specific case, if we see two JSON documents with nan values for the same key, we do want to consider them equal (vs. hard fail on the assert).\r\n\r\nI would be happy to contribute to a PR on this and would be interested in hearing other thoughts on this. A simple test case to reproduce is below. Thanks!\r\n\r\n```\r\nfrom jsonmerge import merge\r\n\r\nbase = { \r\n    \"foo\": 1,\r\n    \"bar\": float('nan')\r\n}\r\n\r\nhead = { \r\n    \"foo\": 1,\r\n    \"bar\": float('nan')\r\n}\r\n\r\nresult = merge(base, head)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"json_merge_test.py\", line 13, in <module>\r\n    result = merge(base, head)\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 346, in merge\r\n    return merger.merge(base, head)\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 301, in merge\r\n    return walk.descend(schema, base, head, meta).val\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 78, in descend\r\n    rv = self.work(strategy, schema, *args, **opts)\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 123, in work\r\n    rv = strategy.merge(self, base, head, schema, meta, objclass_menu=self.merger.objclass_menu, **kwargs)\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/strategies.py\", line 270, in merge\r\n    base[k] = walk.descend(subschema, base.get(k), v, meta)\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 78, in descend\r\n    rv = self.work(strategy, schema, *args, **opts)\r\n  File \"py3/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 117, in work\r\n    assert base.val == resolved\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/38", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/38/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/38/events", "html_url": "https://github.com/avian2/jsonmerge/issues/38", "id": 416817642, "node_id": "MDU6SXNzdWU0MTY4MTc2NDI=", "number": 38, "title": "Update dependency to admit for jsonschema 3.0.1", "user": {"login": "ViktorHaag", "id": 5429477, "node_id": "MDQ6VXNlcjU0Mjk0Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5429477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ViktorHaag", "html_url": "https://github.com/ViktorHaag", "followers_url": "https://api.github.com/users/ViktorHaag/followers", "following_url": "https://api.github.com/users/ViktorHaag/following{/other_user}", "gists_url": "https://api.github.com/users/ViktorHaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/ViktorHaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ViktorHaag/subscriptions", "organizations_url": "https://api.github.com/users/ViktorHaag/orgs", "repos_url": "https://api.github.com/users/ViktorHaag/repos", "events_url": "https://api.github.com/users/ViktorHaag/events{/privacy}", "received_events_url": "https://api.github.com/users/ViktorHaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-04T14:07:30Z", "updated_at": "2019-03-14T12:08:10Z", "closed_at": "2019-03-14T09:22:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tests run clean with both Python 3.7 and Python 2.7 using jsonschema-3.0.1 and these packages in a virtual env:\r\n\r\n```\r\nattrs==19.1.0\r\ncoverage==4.5.2\r\nfunctools32==3.2.3.post2 (py27 only)\r\njsonmerge==1.5.2\r\njsonschema==3.0.1\r\npyrsistent==0.14.11\r\nsix==1.12.0\r\n```\r\n\r\nPlease consider moving the requirements forward to accommodate for jsonschema 3.0.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/37", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/37/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/37/events", "html_url": "https://github.com/avian2/jsonmerge/issues/37", "id": 416510447, "node_id": "MDU6SXNzdWU0MTY1MTA0NDc=", "number": 37, "title": "Overwrite head json field with base if head field is empty(\"\")", "user": {"login": "asingh3886", "id": 29313557, "node_id": "MDQ6VXNlcjI5MzEzNTU3", "avatar_url": "https://avatars1.githubusercontent.com/u/29313557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asingh3886", "html_url": "https://github.com/asingh3886", "followers_url": "https://api.github.com/users/asingh3886/followers", "following_url": "https://api.github.com/users/asingh3886/following{/other_user}", "gists_url": "https://api.github.com/users/asingh3886/gists{/gist_id}", "starred_url": "https://api.github.com/users/asingh3886/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asingh3886/subscriptions", "organizations_url": "https://api.github.com/users/asingh3886/orgs", "repos_url": "https://api.github.com/users/asingh3886/repos", "events_url": "https://api.github.com/users/asingh3886/events{/privacy}", "received_events_url": "https://api.github.com/users/asingh3886/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-03T12:27:51Z", "updated_at": "2019-04-11T09:24:29Z", "closed_at": "2019-04-11T09:24:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nThanks for developing this amazing utility.\r\nI am facing a issue, suppose my head json contains a empty field and base has value then it should use base one.\r\n\r\nExample:\r\n\r\nbase = {\r\n         \"foo\": \"4\",\r\n        \"bar\": [ \"one\" ],\r\n     }\r\n\r\nhead = {\r\n         \"foo\": \"\",\r\n         \"bar\": [ \"two\" ],\r\n         \"baz\": \"Hello, world!\"\r\n    }\r\n\r\nhere it always takes foo \"\", but i want if head has empty(\") field then it should consider from bases  i.e foo: \"4\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/36", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/36/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/36/events", "html_url": "https://github.com/avian2/jsonmerge/issues/36", "id": 372129822, "node_id": "MDU6SXNzdWUzNzIxMjk4MjI=", "number": 36, "title": "Merge fails if head has non-ascii key", "user": {"login": "Jenna1337", "id": 11368561, "node_id": "MDQ6VXNlcjExMzY4NTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/11368561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jenna1337", "html_url": "https://github.com/Jenna1337", "followers_url": "https://api.github.com/users/Jenna1337/followers", "following_url": "https://api.github.com/users/Jenna1337/following{/other_user}", "gists_url": "https://api.github.com/users/Jenna1337/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jenna1337/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jenna1337/subscriptions", "organizations_url": "https://api.github.com/users/Jenna1337/orgs", "repos_url": "https://api.github.com/users/Jenna1337/repos", "events_url": "https://api.github.com/users/Jenna1337/events{/privacy}", "received_events_url": "https://api.github.com/users/Jenna1337/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-19T21:59:37Z", "updated_at": "2018-10-21T07:42:55Z", "closed_at": "2018-10-21T07:42:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "`merge` throws \"UnicodeEncodeError\" a if the head has a key that contains a non-ascii character\r\n\r\nFor example, the following code gives the error `\"UnicodeEncodeError: 'ascii' codec can't encode character u'\\u20b9' in position 0: ordinal not in range(128)\"`:\r\n```python\r\nfrom jsonmerge import merge\r\nfrom pprint import pprint\r\nbase = {\r\n    u'\\u20AC': 'euro'\r\n}\r\nhead = {\r\n    u'\\u20b9': 'indian rupee'\r\n}\r\nresult = merge(base, head)\r\npprint(result)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/35", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/35/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/35/events", "html_url": "https://github.com/avian2/jsonmerge/issues/35", "id": 349926877, "node_id": "MDU6SXNzdWUzNDk5MjY4Nzc=", "number": 35, "title": "Add the possibility to disable logging", "user": {"login": "indent3d", "id": 40817334, "node_id": "MDQ6VXNlcjQwODE3MzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/40817334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indent3d", "html_url": "https://github.com/indent3d", "followers_url": "https://api.github.com/users/indent3d/followers", "following_url": "https://api.github.com/users/indent3d/following{/other_user}", "gists_url": "https://api.github.com/users/indent3d/gists{/gist_id}", "starred_url": "https://api.github.com/users/indent3d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indent3d/subscriptions", "organizations_url": "https://api.github.com/users/indent3d/orgs", "repos_url": "https://api.github.com/users/indent3d/repos", "events_url": "https://api.github.com/users/indent3d/events{/privacy}", "received_events_url": "https://api.github.com/users/indent3d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-13T08:07:32Z", "updated_at": "2018-09-11T07:13:58Z", "closed_at": "2018-09-11T07:13:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a couple hundreds of lines like : \r\n\r\n```\r\n__init__.py:46>DEBUG - descend:     schema #\r\n__init__.py:71>DEBUG - descend:     invoke strategy overwrite\r\n```\r\nwhile doing one of multiple json merging.\r\n\r\nCould you, please remove logger from `__init__.py` or make possible to turn it off from outer code.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/34", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/34/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/34/events", "html_url": "https://github.com/avian2/jsonmerge/issues/34", "id": 343808631, "node_id": "MDU6SXNzdWUzNDM4MDg2MzE=", "number": 34, "title": "Upgrade to latest jsonschema", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179361, "node_id": "MDU6TGFiZWwxMTcxNzkzNjE=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-23T21:49:56Z", "updated_at": "2019-02-28T04:58:26Z", "closed_at": "2019-01-29T09:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "jsonschema is currently on 3.0.0a1. jsonmerge uses 2.6.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/33", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/33/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/33/events", "html_url": "https://github.com/avian2/jsonmerge/issues/33", "id": 339257430, "node_id": "MDU6SXNzdWUzMzkyNTc0MzA=", "number": 33, "title": "Error when I use bracket in name", "user": {"login": "borisalmonacid", "id": 28852633, "node_id": "MDQ6VXNlcjI4ODUyNjMz", "avatar_url": "https://avatars0.githubusercontent.com/u/28852633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borisalmonacid", "html_url": "https://github.com/borisalmonacid", "followers_url": "https://api.github.com/users/borisalmonacid/followers", "following_url": "https://api.github.com/users/borisalmonacid/following{/other_user}", "gists_url": "https://api.github.com/users/borisalmonacid/gists{/gist_id}", "starred_url": "https://api.github.com/users/borisalmonacid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borisalmonacid/subscriptions", "organizations_url": "https://api.github.com/users/borisalmonacid/orgs", "repos_url": "https://api.github.com/users/borisalmonacid/repos", "events_url": "https://api.github.com/users/borisalmonacid/events{/privacy}", "received_events_url": "https://api.github.com/users/borisalmonacid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-08T21:01:25Z", "updated_at": "2018-08-12T17:24:24Z", "closed_at": "2018-08-12T17:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "------Error-----\r\nTraceback (most recent call last):\r\n  File \"mergejson.py\", line 32, in <module>\r\n    mergejson('CFP01_C2_TIME_10_otros.json', 'CFP01_C2_TIME_10.json', 'salida.json')\r\n  File \"mergejson.py\", line 23, in mergejson\r\n    result = merger.merge(data1, data2)\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 286, in merge\r\n    return walk.descend(schema, base, head, meta).val\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 78, in descend\r\n    rv = self.work(strategy, schema, *args, **opts)\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 123, in work\r\n    rv = strategy.merge(self, base, head, schema, meta, objclass_menu=self.merger.objclass_menu, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/strategies.py\", line 270, in merge\r\n    base[k] = walk.descend(subschema, base.get(k), v, meta)\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 78, in descend\r\n    rv = self.work(strategy, schema, *args, **opts)\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 123, in work\r\n    rv = strategy.merge(self, base, head, schema, meta, objclass_menu=self.merger.objclass_menu, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/jsonmerge/strategies.py\", line 114, in merge\r\n    raise HeadInstanceError(\"Head for an 'append' merge strategy is not an array\", head)\r\n**jsonmerge.exceptions.HeadInstanceError: Head for an 'append' merge strategy is not an array: #/[1]CFP01**\r\n\r\n------Data-----\r\n{**\"[1]CFP01**\":{\"BAT\":[{\"times\":[4],\"values\":[0.0]},{\"times\":[3],\"values\":[0.0]},{\"times\":[3],\"values\":[0.0]},{\"times\":[4],\"values\":[0.0]},{\"times\":[4],\"values\":[0.0]},{\"times\":[4],\"values\":[0.0]},{\"times\":[3],\"values\":[0.0]},{\"times\":[4,7],\"values\":[2.0,0.0]},{\"times\":[5],\"values\":[0.0]},{\"times\":[7],\"values\":.......\r\n\r\n------ Solution (manual)\r\nChange in the file {**\"[1]CFP01\"**:{\"BAT ... to ... {**\"CFP01\"**:{\"BAT ...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/30", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/30/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/30/events", "html_url": "https://github.com/avian2/jsonmerge/issues/30", "id": 305410351, "node_id": "MDU6SXNzdWUzMDU0MTAzNTE=", "number": 30, "title": "If object uses additionalProperties: false and an input document contains a rogue key, obscure exception is raised", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179361, "node_id": "MDU6TGFiZWwxMTcxNzkzNjE=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-15T04:17:28Z", "updated_at": "2018-05-01T13:17:08Z", "closed_at": "2018-05-01T13:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I fed a schema that uses \"additionalProperties\": false everywhere to a Merger. I then sent a bad document (because a key wasn't defined in properties:) to the Merger and got an AttributeError exception. Partial trace is below. It took me about an hour to figure out that my document was invalid. Great that I got an exception; not so good that the exception made no sense.\r\n\r\n```  File \"/Users/terris/venv/edc/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 54, in descend\r\n    rv = self.call_descender(descender, schema, *args)\r\n  File \"/Users/terris/venv/edc/lib/python3.6/site-packages/jsonmerge/__init__.py\", line 102, in call_descender\r\n    return descender.descend_instance(self, schema, base, head, meta)\r\n  File \"/Users/terris/venv/edc/lib/python3.6/site-packages/jsonmerge/descenders.py\", line 22, in descend_instance\r\n    ref = schema.val.get(\"$ref\")\r\nAttributeError: 'bool' object has no attribute 'get'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/28", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/28/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/28/events", "html_url": "https://github.com/avian2/jsonmerge/issues/28", "id": 225346310, "node_id": "MDU6SXNzdWUyMjUzNDYzMTA=", "number": 28, "title": "How do I use `\"mergeStrategy\": \"append\"` by default?", "user": {"login": "ahuff44", "id": 4911964, "node_id": "MDQ6VXNlcjQ5MTE5NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4911964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahuff44", "html_url": "https://github.com/ahuff44", "followers_url": "https://api.github.com/users/ahuff44/followers", "following_url": "https://api.github.com/users/ahuff44/following{/other_user}", "gists_url": "https://api.github.com/users/ahuff44/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahuff44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahuff44/subscriptions", "organizations_url": "https://api.github.com/users/ahuff44/orgs", "repos_url": "https://api.github.com/users/ahuff44/repos", "events_url": "https://api.github.com/users/ahuff44/events{/privacy}", "received_events_url": "https://api.github.com/users/ahuff44/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179361, "node_id": "MDU6TGFiZWwxMTcxNzkzNjE=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-30T18:51:37Z", "updated_at": "2017-05-15T13:55:18Z", "closed_at": "2017-05-15T13:55:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want the following assertion to pass:\r\n\r\n```python\r\nschema = ???\r\nbase = None\r\nbase = jsonmerge.merge(base, {\"a\": [\"1\"], \"b\": 3}, schema)\r\nbase = jsonmerge.merge(base, {\"a\": [\"2\"], \"b\": 4}, schema)\r\n\r\nassert base == {\"a\": [\"1\", \"2\"], b: 4}\r\n```\r\n\r\nI know that this is possible with \r\n```python\r\nschema = {\r\n  'properties': {\r\n    'a': {'mergeStrategy': 'append'},\r\n    'b': {'mergeStrategy': 'overwrite'}\r\n  }\r\n}\r\n```\r\nbut in my case, I trying to write a general system where the array key isn't necessarily a top-level key named \"a\"; I want to merge any and all arrays using `\"append\"` instead of `\"overwrite\"`.\r\n\r\nIs this possible somehow? Ideally I would be able to set `schema` like so: (this obviously does not currently work)\r\n```python\r\nschema = {\r\n  \"mergeStrategy\": {\r\n    \"typeMatch\": {\r\n      \"object\": \"objectMerge\",\r\n      \"array\": \"append\",\r\n      \"default\": \"overwrite\"\r\n    }\r\n  }\r\n} \r\n```\r\n\r\nIt seems like the best route would be to create a custom merge strategy, but I'm hoping there's an easier solution that I've overlooked\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/25", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/25/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/25/events", "html_url": "https://github.com/avian2/jsonmerge/issues/25", "id": 192835315, "node_id": "MDU6SXNzdWUxOTI4MzUzMTU=", "number": 25, "title": "How to merge ordered jsons (OrderedDicts)?", "user": {"login": "wjur", "id": 924886, "node_id": "MDQ6VXNlcjkyNDg4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/924886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjur", "html_url": "https://github.com/wjur", "followers_url": "https://api.github.com/users/wjur/followers", "following_url": "https://api.github.com/users/wjur/following{/other_user}", "gists_url": "https://api.github.com/users/wjur/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjur/subscriptions", "organizations_url": "https://api.github.com/users/wjur/orgs", "repos_url": "https://api.github.com/users/wjur/repos", "events_url": "https://api.github.com/users/wjur/events{/privacy}", "received_events_url": "https://api.github.com/users/wjur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179361, "node_id": "MDU6TGFiZWwxMTcxNzkzNjE=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-01T12:37:03Z", "updated_at": "2017-03-20T08:10:22Z", "closed_at": "2017-03-20T08:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I merge two ordered dict then the result is a dict. I know that order in json is not important, but we want the fields in our json file to be in a particular (for readability).\r\nAre OrderedDicts supported? Maybe I'm missing something. Is there any workaround for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/24", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/24/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/24/events", "html_url": "https://github.com/avian2/jsonmerge/issues/24", "id": 186876297, "node_id": "MDU6SXNzdWUxODY4NzYyOTc=", "number": 24, "title": "Feature request : unique merge strategy for lists", "user": {"login": "jggc", "id": 6208924, "node_id": "MDQ6VXNlcjYyMDg5MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6208924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jggc", "html_url": "https://github.com/jggc", "followers_url": "https://api.github.com/users/jggc/followers", "following_url": "https://api.github.com/users/jggc/following{/other_user}", "gists_url": "https://api.github.com/users/jggc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jggc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jggc/subscriptions", "organizations_url": "https://api.github.com/users/jggc/orgs", "repos_url": "https://api.github.com/users/jggc/repos", "events_url": "https://api.github.com/users/jggc/events{/privacy}", "received_events_url": "https://api.github.com/users/jggc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-02T18:00:45Z", "updated_at": "2016-11-03T20:00:51Z", "closed_at": "2016-11-03T20:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a use case similar to this one : \r\n\r\n```\r\nbase = {\r\n    \"foo\" : [1,2,3,999]\r\n}\r\n\r\nhead = {\r\n    \"foo\" : [2,4,5,999]\r\n}\r\n```\r\nAnd I'd like a result like this : \r\n```\r\n{\r\n    \"foo\" : [1,2,3,4,5,999]\r\n}\r\n```\r\nBut instead with the default strategy I get \r\n```\r\n{\r\n    \"foo\": [2, 4, 5, 999]\r\n}\r\n```\r\nAnd with append I get \r\n```\r\n{\r\n    'foo': [1, 2, 3, 999, 2, 4, 5, 999]\r\n}\r\n```\r\nWhich is the expected behavior in both cases, but doesn't fit my needs.\r\n\r\nThat kind of merge can be done in python like that : \r\n```\r\n> list1 = [1,2,3,999]\r\n> list2 = [2,4,5,999]\r\n> listMerge = list(set(list1 + list2))\r\n> listMerge\r\n[1, 2, 3, 4, 5, 999]\r\n```\r\nI guess the conversion to a set and then bat to a list is expensive but for my use case where I have under 10 elements in the merged list there is no visible performance cost.\r\n\r\nIf you think it's a good idea I will gladly implement it and do a pull request. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/22", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/22/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/22/events", "html_url": "https://github.com/avian2/jsonmerge/issues/22", "id": 163631542, "node_id": "MDU6SXNzdWUxNjM2MzE1NDI=", "number": 22, "title": "Json name/value pairs with forward slash", "user": {"login": "chseeling", "id": 11770369, "node_id": "MDQ6VXNlcjExNzcwMzY5", "avatar_url": "https://avatars2.githubusercontent.com/u/11770369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chseeling", "html_url": "https://github.com/chseeling", "followers_url": "https://api.github.com/users/chseeling/followers", "following_url": "https://api.github.com/users/chseeling/following{/other_user}", "gists_url": "https://api.github.com/users/chseeling/gists{/gist_id}", "starred_url": "https://api.github.com/users/chseeling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chseeling/subscriptions", "organizations_url": "https://api.github.com/users/chseeling/orgs", "repos_url": "https://api.github.com/users/chseeling/repos", "events_url": "https://api.github.com/users/chseeling/events{/privacy}", "received_events_url": "https://api.github.com/users/chseeling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-04T08:55:17Z", "updated_at": "2016-07-05T09:46:12Z", "closed_at": "2016-07-05T09:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used version jsonmerge-1.1.0 with name values pairs like {test: {\"MDT_c/kw/day\": 0}}\nbut in current version  a schema error is raised. It appears somethings has changed on how forward slashes are used or interpreted when there are nested objects.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/20", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/20/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/20/events", "html_url": "https://github.com/avian2/jsonmerge/issues/20", "id": 154476852, "node_id": "MDU6SXNzdWUxNTQ0NzY4NTI=", "number": 20, "title": "jsonschema 2.5.0 breaks Merger.get_schema()", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179359, "node_id": "MDU6TGFiZWwxMTcxNzkzNTk=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-12T13:02:28Z", "updated_at": "2017-10-27T12:38:39Z", "closed_at": "2017-05-12T14:40:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "`jsonschema` 2.5.0 introduced a LRU cache in the reference resolver:\n\nhttps://github.com/Julian/jsonschema/pull/203\n\nThis breaks `get_schema()` in some subtle ways, since we're modifying the schema while we're walking through it and dereferencing things. `RefResolver.resolving()` now sometimes returns outdated parts of the structure, which causes problems.\n\nA proper solution would be to build up a new schema in parallel while walking over the old one (which should be read-only), similar to how we do it for walking over instances. This is not a trivial change. Specifically, it's hard to properly retain cross-references in the new schema.\n\nRelated comments in the code (several parts regarding handling of references currently work more-or-less by luck):\n\nhttps://github.com/avian2/jsonmerge/blob/master/jsonmerge/strategies.py#L186\nhttps://github.com/avian2/jsonmerge/blob/master/tests/test_jsonmerge.py#L1248\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/18", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/18/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/18/events", "html_url": "https://github.com/avian2/jsonmerge/issues/18", "id": 97946122, "node_id": "MDU6SXNzdWU5Nzk0NjEyMg==", "number": 18, "title": "Order of merging", "user": {"login": "birdsarah", "id": 1796208, "node_id": "MDQ6VXNlcjE3OTYyMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1796208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birdsarah", "html_url": "https://github.com/birdsarah", "followers_url": "https://api.github.com/users/birdsarah/followers", "following_url": "https://api.github.com/users/birdsarah/following{/other_user}", "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}", "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions", "organizations_url": "https://api.github.com/users/birdsarah/orgs", "repos_url": "https://api.github.com/users/birdsarah/repos", "events_url": "https://api.github.com/users/birdsarah/events{/privacy}", "received_events_url": "https://api.github.com/users/birdsarah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-29T14:16:39Z", "updated_at": "2015-07-29T18:21:20Z", "closed_at": "2015-07-29T18:21:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @avian2, this is a question, as it's been a while since I used jsonmerge. What order does jsonmerge use to merge the documents. Obviously with versioning, some fields are more recent than others, how do we know what the latest is?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/17", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/17/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/17/events", "html_url": "https://github.com/avian2/jsonmerge/issues/17", "id": 67386000, "node_id": "MDU6SXNzdWU2NzM4NjAwMA==", "number": 17, "title": "Enhancement request? Merge objects in lists by default", "user": {"login": "raptortalons", "id": 11183359, "node_id": "MDQ6VXNlcjExMTgzMzU5", "avatar_url": "https://avatars1.githubusercontent.com/u/11183359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raptortalons", "html_url": "https://github.com/raptortalons", "followers_url": "https://api.github.com/users/raptortalons/followers", "following_url": "https://api.github.com/users/raptortalons/following{/other_user}", "gists_url": "https://api.github.com/users/raptortalons/gists{/gist_id}", "starred_url": "https://api.github.com/users/raptortalons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raptortalons/subscriptions", "organizations_url": "https://api.github.com/users/raptortalons/orgs", "repos_url": "https://api.github.com/users/raptortalons/repos", "events_url": "https://api.github.com/users/raptortalons/events{/privacy}", "received_events_url": "https://api.github.com/users/raptortalons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-09T15:25:35Z", "updated_at": "2015-04-10T07:41:11Z", "closed_at": "2015-04-10T07:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use this library but the default behavior of override for lists isn't appropriate for me. I'd expect if items in a list are objects than they be merged as well. The merge strategy solution seems like overkill for this case. It seems that generally this is a more reasonable behavior than the current default. Any chance the default behavior will be changed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/16", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/16/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/16/events", "html_url": "https://github.com/avian2/jsonmerge/issues/16", "id": 45291664, "node_id": "MDU6SXNzdWU0NTI5MTY2NA==", "number": 16, "title": "Include relevant JSON pointer in exception classes", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179361, "node_id": "MDU6TGFiZWwxMTcxNzkzNjE=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-08T20:21:40Z", "updated_at": "2018-01-31T17:35:33Z", "closed_at": "2018-01-31T17:35:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Now that we track where in the hierarchy we are with JSONValue, exception classes could report where exactly the error is.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/13", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/13/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/13/events", "html_url": "https://github.com/avian2/jsonmerge/issues/13", "id": 42886508, "node_id": "MDU6SXNzdWU0Mjg4NjUwOA==", "number": 13, "title": "Make WalkSchema.descend() smarter regarding references.", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179359, "node_id": "MDU6TGFiZWwxMTcxNzkzNTk=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-16T14:14:19Z", "updated_at": "2017-05-19T16:24:31Z", "closed_at": "2017-05-19T16:24:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently WalkSchema.descend() always dereferences a $ref and replaces it with a copy of the referenced object. This is not (always?) necessary.\n\nThis should remove the need for the ugly workaround in `arrayMergeById.get_schema()` (see #11)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/12", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/12/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/12/events", "html_url": "https://github.com/avian2/jsonmerge/issues/12", "id": 42886262, "node_id": "MDU6SXNzdWU0Mjg4NjI2Mg==", "number": 12, "title": "Add some logging at DEBUG level to ease debugging", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179361, "node_id": "MDU6TGFiZWwxMTcxNzkzNjE=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-16T14:12:22Z", "updated_at": "2014-10-08T20:19:26Z", "closed_at": "2014-10-08T20:19:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "`import logging`, etc. Mostly to see how subschemas are evaluated during `Walk.descend()`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/10", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/10/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/10/events", "html_url": "https://github.com/avian2/jsonmerge/issues/10", "id": 41844332, "node_id": "MDU6SXNzdWU0MTg0NDMzMg==", "number": 10, "title": "Better exception classes", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-03T17:44:37Z", "updated_at": "2014-09-06T20:35:51Z", "closed_at": "2014-09-06T20:35:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, `merge` and `get_schema` methods only throw `TypeError` if something is wrong. It would be better to have own exception classes (possibly derived from TypeError) for better diagnostics from the user standpoint.\n\nMaybe have `SchemaError`, `BaseInstanceError` and `HeadInstanceError`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/9", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/9/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/9/events", "html_url": "https://github.com/avian2/jsonmerge/issues/9", "id": 41843632, "node_id": "MDU6SXNzdWU0MTg0MzYzMg==", "number": 9, "title": "\"append\" strategy can produce invalid documents", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-03T17:38:11Z", "updated_at": "2014-09-10T19:56:13Z", "closed_at": "2014-09-10T19:56:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For instance, if schema sets `maxItems`, append does not honor that. Same thing with the `unique` keyword.\n\nThe broader question is: Should merge strategies inspect the schema at all (apart from what is necessary to determine the merge strategy) and adapt their behavior to it or should that be left to the user? Is it an error if the user sets \"append\" strategy for an array that will overflow `maxItems`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/avian2/jsonmerge/issues/1", "repository_url": "https://api.github.com/repos/avian2/jsonmerge", "labels_url": "https://api.github.com/repos/avian2/jsonmerge/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/avian2/jsonmerge/issues/1/comments", "events_url": "https://api.github.com/repos/avian2/jsonmerge/issues/1/events", "html_url": "https://github.com/avian2/jsonmerge/issues/1", "id": 38844595, "node_id": "MDU6SXNzdWUzODg0NDU5NQ==", "number": 1, "title": "Merger.get_schema() doesn't update references", "user": {"login": "avian2", "id": 1135442, "node_id": "MDQ6VXNlcjExMzU0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avian2", "html_url": "https://github.com/avian2", "followers_url": "https://api.github.com/users/avian2/followers", "following_url": "https://api.github.com/users/avian2/following{/other_user}", "gists_url": "https://api.github.com/users/avian2/gists{/gist_id}", "starred_url": "https://api.github.com/users/avian2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avian2/subscriptions", "organizations_url": "https://api.github.com/users/avian2/orgs", "repos_url": "https://api.github.com/users/avian2/repos", "events_url": "https://api.github.com/users/avian2/events{/privacy}", "received_events_url": "https://api.github.com/users/avian2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 117179359, "node_id": "MDU6TGFiZWwxMTcxNzkzNTk=", "url": "https://api.github.com/repos/avian2/jsonmerge/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-07-27T15:52:04Z", "updated_at": "2014-08-01T15:56:05Z", "closed_at": "2014-08-01T15:56:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "If schema objects get updated after passing through a $ref JSON reference, the generated schema has invalid references.\n", "performed_via_github_app": null, "score": 1.0}]}