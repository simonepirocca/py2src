{"total_count": 7, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jwodder/javaproperties/issues/8", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/8/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/8/events", "html_url": "https://github.com/jwodder/javaproperties/issues/8", "id": 574591851, "node_id": "MDU6SXNzdWU1NzQ1OTE4NTE=", "number": 8, "title": "Tests that dump timestamps fail due to timezone difference", "user": {"login": "bluca", "id": 782193, "node_id": "MDQ6VXNlcjc4MjE5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/782193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluca", "html_url": "https://github.com/bluca", "followers_url": "https://api.github.com/users/bluca/followers", "following_url": "https://api.github.com/users/bluca/following{/other_user}", "gists_url": "https://api.github.com/users/bluca/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluca/subscriptions", "organizations_url": "https://api.github.com/users/bluca/orgs", "repos_url": "https://api.github.com/users/bluca/repos", "events_url": "https://api.github.com/users/bluca/events{/privacy}", "received_events_url": "https://api.github.com/users/bluca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T11:10:19Z", "updated_at": "2020-03-03T11:20:47Z", "closed_at": "2020-03-03T11:20:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running the tests in GMT all the tests fail, for example:\r\n\r\n```\r\n_____________________ test_dump_timestamp[1473703254-#Mon Sep 12 14:00:54 EDT 2016\\nkey=value\\n] _____________________\r\n\r\nts = 1473703254, s = '#Mon Sep 12 14:00:54 EDT 2016\\nkey=value\\n'\r\n\r\n    @pytest.mark.parametrize('ts,s', [\r\n        (None, 'key=value\\n'),\r\n        (1473703254, '#Mon Sep 12 14:00:54 EDT 2016\\nkey=value\\n'),\r\n        (\r\n            datetime.fromtimestamp(1473703254),\r\n            '#Mon Sep 12 14:00:54 EDT 2016\\nkey=value\\n',\r\n        ),\r\n        (\r\n            datetime.fromtimestamp(1473703254, tzoffset('PDT', -25200)),\r\n            '#Mon Sep 12 11:00:54 PDT 2016\\nkey=value\\n',\r\n        ),\r\n    ])\r\n    def test_dump_timestamp(ts, s):\r\n>       assert dumps({\"key\": \"value\"}, timestamp=ts) == s\r\nE       AssertionError: assert '#Mon Sep 12 ...\\nkey=value\\n' == '#Mon Sep 12 1...\\nkey=value\\n'\r\nE         - #Mon Sep 12 19:00:54 BST 2016\r\nE         ?              ^       ^^\r\nE         + #Mon Sep 12 14:00:54 EDT 2016\r\nE         ?              ^       ^^\r\nE           key=value\r\n\r\ntest/test_dumps.py:84: AssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jwodder/javaproperties/issues/7", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/7/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/7/events", "html_url": "https://github.com/jwodder/javaproperties/issues/7", "id": 566940769, "node_id": "MDU6SXNzdWU1NjY5NDA3Njk=", "number": 7, "title": "ensure_ascii", "user": {"login": "adriangalera", "id": 2077258, "node_id": "MDQ6VXNlcjIwNzcyNTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2077258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriangalera", "html_url": "https://github.com/adriangalera", "followers_url": "https://api.github.com/users/adriangalera/followers", "following_url": "https://api.github.com/users/adriangalera/following{/other_user}", "gists_url": "https://api.github.com/users/adriangalera/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriangalera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriangalera/subscriptions", "organizations_url": "https://api.github.com/users/adriangalera/orgs", "repos_url": "https://api.github.com/users/adriangalera/repos", "events_url": "https://api.github.com/users/adriangalera/events{/privacy}", "received_events_url": "https://api.github.com/users/adriangalera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T14:44:49Z", "updated_at": "2020-02-28T16:18:53Z", "closed_at": "2020-02-28T16:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been using this library recently and I'm really missing the feature to print non-ascii tests.\r\n\r\nI know json library provide the option `ensure_ascii` to allow unicode characters.\r\n\r\nCould you consider adding this option to the library?\r\n\r\nI've found that if I use dump_xml or load_xml it works by playing around with encoding. So, please could you add the encoding option to dump or load ?\r\n\r\nThanks!\r\n\r\nExample:\r\n\r\n```python\r\nimport javaproperties\r\na = {\"key\":\"val\u00f2r\"}\r\njavaproperties.dumps(a)\r\n```\r\noutput: \r\n```\r\n#Tue Feb 18 15:43:21 CET 2020\r\nkey=val\\\\u00f2r\r\n```\r\nExpected output:\r\n```\r\n#Tue Feb 18 15:43:21 CET 2020\r\nkey=val\u00f2r\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jwodder/javaproperties/issues/6", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/6/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/6/events", "html_url": "https://github.com/jwodder/javaproperties/issues/6", "id": 500218040, "node_id": "MDU6SXNzdWU1MDAyMTgwNDA=", "number": 6, "title": "Support for multilevel dict", "user": {"login": "Hoijima", "id": 8148216, "node_id": "MDQ6VXNlcjgxNDgyMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8148216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hoijima", "html_url": "https://github.com/Hoijima", "followers_url": "https://api.github.com/users/Hoijima/followers", "following_url": "https://api.github.com/users/Hoijima/following{/other_user}", "gists_url": "https://api.github.com/users/Hoijima/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hoijima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hoijima/subscriptions", "organizations_url": "https://api.github.com/users/Hoijima/orgs", "repos_url": "https://api.github.com/users/Hoijima/repos", "events_url": "https://api.github.com/users/Hoijima/events{/privacy}", "received_events_url": "https://api.github.com/users/Hoijima/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-30T11:33:40Z", "updated_at": "2019-10-08T18:54:29Z", "closed_at": "2019-10-08T18:54:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi i wanted to write an ansible module using your lib, but stumbled to the issue that it for some reason doesn't support multilevel dict.\r\n\r\nexample:\r\n```\r\n\r\nproperties=(''' \r\n--- \r\naeron:\r\n  cluster:\r\n    dir: some/cool/text\r\n''')\r\n```\r\n```\r\n\r\n    return re.sub(r'[^\\x20-\\x7E]|[\\\\#!=:]', _esc, field)\r\n  File \"/usr/lib/python3.6/re.py\", line 191, in sub\r\n    return _compile(pattern, flags).sub(repl, string, count)\r\nTypeError: expected string or bytes-like object\r\n```\r\nand i'm just using this code\r\n```\r\n    import yaml\r\n    import javaproperties\r\n\r\n    p = yaml.load(properties)\r\n\r\n    print(javaproperties.dumps(p))\r\n```\r\n\r\nAm i doing something wrong here? Just didn't fund any hint in the doc's that it maybe unsupported", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jwodder/javaproperties/issues/5", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/5/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/5/events", "html_url": "https://github.com/jwodder/javaproperties/issues/5", "id": 430194449, "node_id": "MDU6SXNzdWU0MzAxOTQ0NDk=", "number": 5, "title": "Building fails with Python 3.x in a non-unicode environment", "user": {"login": "knobix", "id": 43905002, "node_id": "MDQ6VXNlcjQzOTA1MDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/43905002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knobix", "html_url": "https://github.com/knobix", "followers_url": "https://api.github.com/users/knobix/followers", "following_url": "https://api.github.com/users/knobix/following{/other_user}", "gists_url": "https://api.github.com/users/knobix/gists{/gist_id}", "starred_url": "https://api.github.com/users/knobix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knobix/subscriptions", "organizations_url": "https://api.github.com/users/knobix/orgs", "repos_url": "https://api.github.com/users/knobix/repos", "events_url": "https://api.github.com/users/knobix/events{/privacy}", "received_events_url": "https://api.github.com/users/knobix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-07T21:27:23Z", "updated_at": "2019-04-08T14:47:27Z", "closed_at": "2019-04-08T14:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**OS:** FreeBSD 11.2-RELEASE-p9 amd64/i386 (applies also for 12.0-RELEASE-p3)\r\n**Python version:** 3.6.8\r\n**javaproperties version:** 0.5.1\r\n\r\nThe Python package is created in a pristine environment that has only the Python runtime and the Package \"setuptools\" as a basic dependency set.\r\n\r\nBuilding the package fails with Python 3.x in a non-unicode environment (= LANG variable is not set) with:\r\n\r\n`# python3.6 setup.py build`\r\n`Traceback (most recent call last):`\r\n`  File \"setup.py\", line 6, in <module>`\r\n`    for line in fp:`\r\n`  File \"/usr/local/lib/python3.6/encodings/ascii.py\", line 26, in decode`\r\n`    return codecs.ascii_decode(input, self.errors)[0]`\r\n`UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 244: ordinal not in range(128)`\r\n\r\nA quick workaround for this issue is to add \"**fp.seek(256)**\" after the \"**with open [...]**\" statement to get past the unicode characters in _./javaproperties/__init__.py_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jwodder/javaproperties/issues/4", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/4/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/4/events", "html_url": "https://github.com/jwodder/javaproperties/issues/4", "id": 430193571, "node_id": "MDU6SXNzdWU0MzAxOTM1NzE=", "number": 4, "title": "six should be listed as dependeny in setup.py or requirements.txt", "user": {"login": "knobix", "id": 43905002, "node_id": "MDQ6VXNlcjQzOTA1MDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/43905002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knobix", "html_url": "https://github.com/knobix", "followers_url": "https://api.github.com/users/knobix/followers", "following_url": "https://api.github.com/users/knobix/following{/other_user}", "gists_url": "https://api.github.com/users/knobix/gists{/gist_id}", "starred_url": "https://api.github.com/users/knobix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knobix/subscriptions", "organizations_url": "https://api.github.com/users/knobix/orgs", "repos_url": "https://api.github.com/users/knobix/repos", "events_url": "https://api.github.com/users/knobix/events{/privacy}", "received_events_url": "https://api.github.com/users/knobix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-07T21:18:11Z", "updated_at": "2019-04-08T14:46:48Z", "closed_at": "2019-04-08T14:46:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**OS:** FreeBSD 11.2-RELEASE-p9 amd64/i386 (applies also for 12.0-RELEASE-p3)\r\n**Python version:** 2.7.16 (applies also for 3.6.8)\r\n**javaproperties version:** 0.5.1\r\n\r\nThe Python package is created in a pristine environment that has only the Python runtime and the Package \"setuptools\" as a basic dependency set.\r\n\r\nWhen importing \"javaproperties\" it fails with\r\n\r\n`>>> import javaproperties\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/javaproperties/__init__.py\", line 15, in <module>\r\n    from .propclass import Properties\r\n  File \"/usr/local/lib/python2.7/site-packages/javaproperties/propclass.py\", line 2, in <module>\r\n    from   six       import PY2, string_types\r\nImportError: No module named six`\r\n\r\nBy installing the six package the importing of \"javaproperties\" gives no more errors then.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jwodder/javaproperties/issues/3", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/3/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/3/events", "html_url": "https://github.com/jwodder/javaproperties/issues/3", "id": 383296177, "node_id": "MDU6SXNzdWUzODMyOTYxNzc=", "number": 3, "title": "Why escape colon and equals?", "user": {"login": "onlyanegg", "id": 7731128, "node_id": "MDQ6VXNlcjc3MzExMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7731128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onlyanegg", "html_url": "https://github.com/onlyanegg", "followers_url": "https://api.github.com/users/onlyanegg/followers", "following_url": "https://api.github.com/users/onlyanegg/following{/other_user}", "gists_url": "https://api.github.com/users/onlyanegg/gists{/gist_id}", "starred_url": "https://api.github.com/users/onlyanegg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onlyanegg/subscriptions", "organizations_url": "https://api.github.com/users/onlyanegg/orgs", "repos_url": "https://api.github.com/users/onlyanegg/repos", "events_url": "https://api.github.com/users/onlyanegg/events{/privacy}", "received_events_url": "https://api.github.com/users/onlyanegg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424400565, "node_id": "MDU6TGFiZWw0MjQ0MDA1NjU=", "url": "https://api.github.com/repos/jwodder/javaproperties/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jwodder", "id": 98207, "node_id": "MDQ6VXNlcjk4MjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/98207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwodder", "html_url": "https://github.com/jwodder", "followers_url": "https://api.github.com/users/jwodder/followers", "following_url": "https://api.github.com/users/jwodder/following{/other_user}", "gists_url": "https://api.github.com/users/jwodder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwodder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwodder/subscriptions", "organizations_url": "https://api.github.com/users/jwodder/orgs", "repos_url": "https://api.github.com/users/jwodder/repos", "events_url": "https://api.github.com/users/jwodder/events{/privacy}", "received_events_url": "https://api.github.com/users/jwodder/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jwodder", "id": 98207, "node_id": "MDQ6VXNlcjk4MjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/98207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwodder", "html_url": "https://github.com/jwodder", "followers_url": "https://api.github.com/users/jwodder/followers", "following_url": "https://api.github.com/users/jwodder/following{/other_user}", "gists_url": "https://api.github.com/users/jwodder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwodder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwodder/subscriptions", "organizations_url": "https://api.github.com/users/jwodder/orgs", "repos_url": "https://api.github.com/users/jwodder/repos", "events_url": "https://api.github.com/users/jwodder/events{/privacy}", "received_events_url": "https://api.github.com/users/jwodder/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-21T21:21:39Z", "updated_at": "2018-11-22T22:34:37Z", "closed_at": "2018-11-22T22:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I'm wondering why you chose to escape colons and equals signs. I've read through a [couple](https://en.wikipedia.org/wiki/.properties) [references](https://docs.oracle.com/cd/E23095_01/Platform.93/ATGProgGuide/html/s0204propertiesfileformat01.html), and haven't seen anything saying that it's required or even acceptable. Is it valid for properties files?\r\n\r\nThanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jwodder/javaproperties/issues/1", "repository_url": "https://api.github.com/repos/jwodder/javaproperties", "labels_url": "https://api.github.com/repos/jwodder/javaproperties/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jwodder/javaproperties/issues/1/comments", "events_url": "https://api.github.com/repos/jwodder/javaproperties/issues/1/events", "html_url": "https://github.com/jwodder/javaproperties/issues/1", "id": 212509684, "node_id": "MDU6SXNzdWUyMTI1MDk2ODQ=", "number": 1, "title": "Support for properties dict while retaining comments?", "user": {"login": "dimaspivak", "id": 6088908, "node_id": "MDQ6VXNlcjYwODg5MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6088908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaspivak", "html_url": "https://github.com/dimaspivak", "followers_url": "https://api.github.com/users/dimaspivak/followers", "following_url": "https://api.github.com/users/dimaspivak/following{/other_user}", "gists_url": "https://api.github.com/users/dimaspivak/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaspivak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaspivak/subscriptions", "organizations_url": "https://api.github.com/users/dimaspivak/orgs", "repos_url": "https://api.github.com/users/dimaspivak/repos", "events_url": "https://api.github.com/users/dimaspivak/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaspivak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jwodder", "id": 98207, "node_id": "MDQ6VXNlcjk4MjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/98207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwodder", "html_url": "https://github.com/jwodder", "followers_url": "https://api.github.com/users/jwodder/followers", "following_url": "https://api.github.com/users/jwodder/following{/other_user}", "gists_url": "https://api.github.com/users/jwodder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwodder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwodder/subscriptions", "organizations_url": "https://api.github.com/users/jwodder/orgs", "repos_url": "https://api.github.com/users/jwodder/repos", "events_url": "https://api.github.com/users/jwodder/events{/privacy}", "received_events_url": "https://api.github.com/users/jwodder/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jwodder", "id": 98207, "node_id": "MDQ6VXNlcjk4MjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/98207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwodder", "html_url": "https://github.com/jwodder", "followers_url": "https://api.github.com/users/jwodder/followers", "following_url": "https://api.github.com/users/jwodder/following{/other_user}", "gists_url": "https://api.github.com/users/jwodder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwodder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwodder/subscriptions", "organizations_url": "https://api.github.com/users/jwodder/orgs", "repos_url": "https://api.github.com/users/jwodder/repos", "events_url": "https://api.github.com/users/jwodder/events{/privacy}", "received_events_url": "https://api.github.com/users/jwodder/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-07T17:53:05Z", "updated_at": "2017-04-13T20:03:47Z", "closed_at": "2017-04-13T20:03:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nI've been looking for a full-featured library to handle Java properties and your implementation looks to be the most thorough on the internet, so +1 for that. :) My use case is that I want to be able to load a `.properties` file, change just a handful of lines, and then serialize it back to a file (while retaining comments, blank lines, etc.). I've discovered the low-level `parse` method which returns a generator of tuples, but is there an in-built way to create an object from a `.properties` file which has k-v lookup/modification along with the ability to serialize back to a file with comments? \r\n\r\nIf not, would you be open to a PR to add such support? I'd be happy to do it if you could give me guidance on how you'd prefer the design to look.", "performed_via_github_app": null, "score": 1.0}]}