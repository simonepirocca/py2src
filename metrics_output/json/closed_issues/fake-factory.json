{"total_count": 313, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/joke2k/faker/issues/1257", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1257/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1257/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1257/events", "html_url": "https://github.com/joke2k/faker/issues/1257", "id": 691620319, "node_id": "MDU6SXNzdWU2OTE2MjAzMTk=", "number": 1257, "title": "Generate random name based on a keyword using Faker python library", "user": {"login": "SyahirahWanMin", "id": 40919975, "node_id": "MDQ6VXNlcjQwOTE5OTc1", "avatar_url": "https://avatars2.githubusercontent.com/u/40919975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SyahirahWanMin", "html_url": "https://github.com/SyahirahWanMin", "followers_url": "https://api.github.com/users/SyahirahWanMin/followers", "following_url": "https://api.github.com/users/SyahirahWanMin/following{/other_user}", "gists_url": "https://api.github.com/users/SyahirahWanMin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SyahirahWanMin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SyahirahWanMin/subscriptions", "organizations_url": "https://api.github.com/users/SyahirahWanMin/orgs", "repos_url": "https://api.github.com/users/SyahirahWanMin/repos", "events_url": "https://api.github.com/users/SyahirahWanMin/events{/privacy}", "received_events_url": "https://api.github.com/users/SyahirahWanMin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-03T04:10:20Z", "updated_at": "2020-09-03T04:14:18Z", "closed_at": "2020-09-03T04:14:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1251", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1251/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1251/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1251/events", "html_url": "https://github.com/joke2k/faker/issues/1251", "id": 687700354, "node_id": "MDU6SXNzdWU2ODc3MDAzNTQ=", "number": 1251, "title": "Typo for German job description", "user": {"login": "datadominik", "id": 23156171, "node_id": "MDQ6VXNlcjIzMTU2MTcx", "avatar_url": "https://avatars0.githubusercontent.com/u/23156171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datadominik", "html_url": "https://github.com/datadominik", "followers_url": "https://api.github.com/users/datadominik/followers", "following_url": "https://api.github.com/users/datadominik/following{/other_user}", "gists_url": "https://api.github.com/users/datadominik/gists{/gist_id}", "starred_url": "https://api.github.com/users/datadominik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datadominik/subscriptions", "organizations_url": "https://api.github.com/users/datadominik/orgs", "repos_url": "https://api.github.com/users/datadominik/repos", "events_url": "https://api.github.com/users/datadominik/events{/privacy}", "received_events_url": "https://api.github.com/users/datadominik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-28T04:20:55Z", "updated_at": "2020-08-28T15:33:06Z", "closed_at": "2020-08-28T15:33:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: latest\r\n\r\nI found a small typo in the job provider using German as a target language. There is no such word as \"Forstwirst\", it's \"Forstwirt\". (https://www.duden.de/suchen/dudenonline/Forstwirt , link to a German dictionary)\r\n\r\n### Steps to reproduce\r\n\r\nYou can find the typo in line 27:\r\nhttps://github.com/joke2k/faker/blob/master/faker/providers/job/de_DE/__init__.py\r\n\r\n### Expected behavior\r\n\r\nShould be: Forstwirt\r\n\r\n### Actual behavior\r\n\r\nForstwir**s**t\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1246", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1246/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1246/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1246/events", "html_url": "https://github.com/joke2k/faker/issues/1246", "id": 678788915, "node_id": "MDU6SXNzdWU2Nzg3ODg5MTU=", "number": 1246, "title": "faker.json does not work", "user": {"login": "cyril36", "id": 16116562, "node_id": "MDQ6VXNlcjE2MTE2NTYy", "avatar_url": "https://avatars0.githubusercontent.com/u/16116562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyril36", "html_url": "https://github.com/cyril36", "followers_url": "https://api.github.com/users/cyril36/followers", "following_url": "https://api.github.com/users/cyril36/following{/other_user}", "gists_url": "https://api.github.com/users/cyril36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyril36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyril36/subscriptions", "organizations_url": "https://api.github.com/users/cyril36/orgs", "repos_url": "https://api.github.com/users/cyril36/repos", "events_url": "https://api.github.com/users/cyril36/events{/privacy}", "received_events_url": "https://api.github.com/users/cyril36/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-13T23:20:22Z", "updated_at": "2020-08-17T15:33:39Z", "closed_at": "2020-08-17T15:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: Faker==4.1.1\r\n* OS: Debian GNU/Linux 10 (buster)\r\nI can not use faker.json as documented in the following link :  \r\nhttps://faker.readthedocs.io/en/master/providers/faker.providers.misc.html#faker.providers.misc.Provider.json\r\nsuch as:\r\n`fake.json(data_columns=[('id', 'pyint', {'max_value':20})], num_rows=3)\r\n`\r\nI get the following error :   \r\nAttributeError: 'Generator' object has no attribute 'json'\r\n\r\n### Steps to reproduce\r\n\r\n1. step 1\r\ncode : \r\n```\r\nfrom django.test import TestCase\r\nimport factory\r\nfrom faker import Faker\r\nfrom faker.providers import misc\r\nfrom upload.factories.fileUpload import FileUploadFactory\r\nfrom django.core.files.uploadedfile import SimpleUploadedFile\r\n\r\nfake=Faker()\r\nfake.add_provider(misc)\r\n self.jpg_record = factory.django.FileField(from_path='upload/tests/image.jpg') #model.filefield\r\n self.good_metadata = fake.json(data_columns=[('id', 'pyint', {'max_value':20})], num_rows=3)#fake.json(data_columns=[('id', 'pyint'),('service','word')]) #model.jsonfield\r\ninstances = FileUploadFactory.create_batch(5,record=self.jpg_record,metadata=self.good_metadata)\r\nfor instance in instances:\r\n            self.assertEqual(\"instance\", instance,msg='{} , {} , {} , {}'.format(instance.pk,instance.owner,instance.metadata,instance.record))\r\n```\r\n    \r\n\r\n1. step 2\r\nexecute : python3 manage.py test\r\n\r\n### Expected behavior\r\n\r\nshould print my metadata field as a json object.\r\n\r\n### Actual behavior\r\nthe faker module does not generate the json value and exit with the following error : \r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/src/app/upload/tests/tests_models.py\", line 26, in setUp\r\n    self.good_metadata = fake.json(data_columns=[('id', 'pyint', {'max_value':20})], num_rows=3)#fake.json(data_columns=[('id', 'pyint'),('service','word')])\r\n  File \"/usr/local/lib/python3.8/site-packages/faker/proxy.py\", line 96, in __getattr__\r\n    return getattr(self._factories[0], attr)\r\nAttributeError: 'Generator' object has no attribute 'json'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1240", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1240/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1240/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1240/events", "html_url": "https://github.com/joke2k/faker/issues/1240", "id": 676671281, "node_id": "MDU6SXNzdWU2NzY2NzEyODE=", "number": 1240, "title": "Raise ValueError if some data don't exist for address provider?", "user": {"login": "mondeja", "id": 23049315, "node_id": "MDQ6VXNlcjIzMDQ5MzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/23049315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mondeja", "html_url": "https://github.com/mondeja", "followers_url": "https://api.github.com/users/mondeja/followers", "following_url": "https://api.github.com/users/mondeja/following{/other_user}", "gists_url": "https://api.github.com/users/mondeja/gists{/gist_id}", "starred_url": "https://api.github.com/users/mondeja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mondeja/subscriptions", "organizations_url": "https://api.github.com/users/mondeja/orgs", "repos_url": "https://api.github.com/users/mondeja/repos", "events_url": "https://api.github.com/users/mondeja/events{/privacy}", "received_events_url": "https://api.github.com/users/mondeja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-11T08:06:07Z", "updated_at": "2020-08-27T22:41:53Z", "closed_at": "2020-08-27T22:41:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n* OS: All\r\n\r\n`en_NZ` address provider does not have states, because in New Zealand there isn't states. In the current implementation, [the method `state` returns an empty string](https://github.com/joke2k/faker/blob/0dbb55eb3d2f59104abe3742ef184d713580abd4/faker/providers/address/en_NZ/__init__.py#L227-L229). I think that this is not a desired behaviour.\r\n\r\n### Steps to reproduce\r\n\r\n```python\r\n>>> from faker import Faker\r\n>>> from faker.providers import address\r\n>>>\r\n>>> fake = Faker(\"en_NZ\")\r\n>>> fake.add_provider(address)\r\n>>> fake.state()\r\n''\r\n```\r\n\r\n### Expected behavior\r\n\r\nWouldn't it be better to throw a `ValueError` exception or return `None` instead?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1234", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1234/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1234/events", "html_url": "https://github.com/joke2k/faker/issues/1234", "id": 675100950, "node_id": "MDU6SXNzdWU2NzUxMDA5NTA=", "number": 1234, "title": "French IBAN should be 27 char of length", "user": {"login": "r3gis3r", "id": 729574, "node_id": "MDQ6VXNlcjcyOTU3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/729574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r3gis3r", "html_url": "https://github.com/r3gis3r", "followers_url": "https://api.github.com/users/r3gis3r/followers", "following_url": "https://api.github.com/users/r3gis3r/following{/other_user}", "gists_url": "https://api.github.com/users/r3gis3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/r3gis3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r3gis3r/subscriptions", "organizations_url": "https://api.github.com/users/r3gis3r/orgs", "repos_url": "https://api.github.com/users/r3gis3r/repos", "events_url": "https://api.github.com/users/r3gis3r/events{/privacy}", "received_events_url": "https://api.github.com/users/r3gis3r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-07T15:46:10Z", "updated_at": "2020-08-10T16:00:10Z", "closed_at": "2020-08-10T16:00:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nimport faker\r\nfrom faker import Faker\r\nfake = Faker('fr_FR')\r\nfr_iban = fake.iban()\r\nfr_iban\r\n'FR96505438725498141631455686'\r\nlen(fr_iban)\r\n28\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\n```\r\n>>> len(fr_iban)\r\n27\r\n```\r\n\r\n[As stated on wikipedia in France row](https://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country)\r\n\r\n### Actual behavior\r\n\r\n```\r\n>>> len(fr_iban)\r\n28\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1233", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1233/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1233/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1233/events", "html_url": "https://github.com/joke2k/faker/issues/1233", "id": 674216260, "node_id": "MDU6SXNzdWU2NzQyMTYyNjA=", "number": 1233, "title": "Issues in fi_FI company_business_id method", "user": {"login": "malefice", "id": 7114869, "node_id": "MDQ6VXNlcjcxMTQ4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7114869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malefice", "html_url": "https://github.com/malefice", "followers_url": "https://api.github.com/users/malefice/followers", "following_url": "https://api.github.com/users/malefice/following{/other_user}", "gists_url": "https://api.github.com/users/malefice/gists{/gist_id}", "starred_url": "https://api.github.com/users/malefice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malefice/subscriptions", "organizations_url": "https://api.github.com/users/malefice/orgs", "repos_url": "https://api.github.com/users/malefice/repos", "events_url": "https://api.github.com/users/malefice/events{/privacy}", "received_events_url": "https://api.github.com/users/malefice/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1258505653, "node_id": "MDU6TGFiZWwxMjU4NTA1NjUz", "url": "https://api.github.com/repos/joke2k/faker/labels/help%20wanted", "name": "help wanted", "color": "5cf9cd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-06T10:44:35Z", "updated_at": "2020-08-10T16:05:49Z", "closed_at": "2020-08-10T16:05:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n* OS: Ubuntu 18.04.4 LTS\r\n\r\n### Steps to reproduce\r\n\r\nRun `python -c \"from faker import Faker; f = Faker('fi_FI'); Faker.seed(0); assert all(len(f.company_business_id()) == 9 for _ in range(100))\"` and you will get an `AssertionError`.\r\n\r\n\r\n### Expected behavior\r\n\r\nThere should be no `AssertionError` since we expect the ids to be exactly 9 characters.\r\n\r\n### Actual behavior\r\n\r\nUnfortunately, an `AssertionError` will be raised.\r\n\r\n### Analysis\r\n\r\n\r\nAs part of the test suite housekeeping I have been doing, I found out that the `fi_FI` company provider's `company_business_id` method produces invalid id's. There were other buggy provider methods (due to obvious typos) that I fixed in my branch, but this one is rather significant that I think should separately be tracked.\r\n\r\n The company ids should be 7 digits followed by a dash followed by a check digit, so there should be 9 characters, but the problem lies [here](https://github.com/joke2k/faker/blob/15c0f6e345f4c7b179232b92ecc699d89d611b5e/faker/providers/company/fi_FI/__init__.py#L33). When that line results in a 10 (remainder is 1), the id gets an extra digit. I checked [other](https://github.com/vkomulai/finnish-business-ids/blob/4486d71060cb31e21a553dcbd4293f35563aca8a/src/finnish-business-ids.ts#L58) [implementations](https://gist.github.com/lauriii/3cb3b32ad86c271ebc681012855ce529) that validate Finnish company id's, and they say that such id's are truly invalid.\r\n\r\nTo fix this, there has to be a check that will retry if the remainder ends up being 1. Also, the `fi_FI` provider method `company_vat` is also affected since it depends on `company_business_id`. It would be nice if someone who uses the `fi_FI` locale can weigh in to verify my findings as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1231", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1231/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1231/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1231/events", "html_url": "https://github.com/joke2k/faker/issues/1231", "id": 672847639, "node_id": "MDU6SXNzdWU2NzI4NDc2Mzk=", "number": 1231, "title": "Faker.Commerce provider is missing", "user": {"login": "DoubleHub", "id": 16857240, "node_id": "MDQ6VXNlcjE2ODU3MjQw", "avatar_url": "https://avatars1.githubusercontent.com/u/16857240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DoubleHub", "html_url": "https://github.com/DoubleHub", "followers_url": "https://api.github.com/users/DoubleHub/followers", "following_url": "https://api.github.com/users/DoubleHub/following{/other_user}", "gists_url": "https://api.github.com/users/DoubleHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/DoubleHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DoubleHub/subscriptions", "organizations_url": "https://api.github.com/users/DoubleHub/orgs", "repos_url": "https://api.github.com/users/DoubleHub/repos", "events_url": "https://api.github.com/users/DoubleHub/events{/privacy}", "received_events_url": "https://api.github.com/users/DoubleHub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-04T14:42:55Z", "updated_at": "2020-08-07T14:50:31Z", "closed_at": "2020-08-07T14:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n* OS: Ubuntu 18.04 Bionic Beaver\r\n\r\nWhile reading the documentation I've noticed that there is no Commerce provider (as seen [here](https://hexdocs.pm/faker/Faker.Commerce.html)). This provider would be pretty useful to implement as it allows the developer to generate fake product names, adjectives, etc...\r\n\r\n### Steps to reproduce\r\nThere are no steps to reproduce as this is a missing provider.\r\n\r\n### Expected behavior\r\nThe Commerce provider should be present.\r\n\r\n### Actual behavior\r\nThere is no Commerce provider.\r\n\r\nMaybe I didn't test it properly, and there's actually a Commerce provider hiding somewhere?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1228", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1228/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1228/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1228/events", "html_url": "https://github.com/joke2k/faker/issues/1228", "id": 667989308, "node_id": "MDU6SXNzdWU2Njc5ODkzMDg=", "number": 1228, "title": "Registering custom providers in the faker fixture", "user": {"login": "slabko", "id": 5012202, "node_id": "MDQ6VXNlcjUwMTIyMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5012202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slabko", "html_url": "https://github.com/slabko", "followers_url": "https://api.github.com/users/slabko/followers", "following_url": "https://api.github.com/users/slabko/following{/other_user}", "gists_url": "https://api.github.com/users/slabko/gists{/gist_id}", "starred_url": "https://api.github.com/users/slabko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slabko/subscriptions", "organizations_url": "https://api.github.com/users/slabko/orgs", "repos_url": "https://api.github.com/users/slabko/repos", "events_url": "https://api.github.com/users/slabko/events{/privacy}", "received_events_url": "https://api.github.com/users/slabko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T16:50:01Z", "updated_at": "2020-08-03T14:50:09Z", "closed_at": "2020-08-03T14:50:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n* OS: Ubuntu 20.04\r\n\r\nThis issue is not really a bug, but rather a feature request (or a question if missed the right way to do that)\r\n\r\nI have a suite of my own providers, which I would like to add to the `faker` fixture. However, looking around I didn't find any obvious way of doing so.\r\n\r\n### Steps to reproduce\r\n  1. Have a custom generator `project.tests.generators.DeviceGenerator` with an `arm_device` function\r\n  2. Create a test where I would like to create an `arm_device` using the `faker` fixture.\r\n\r\nFor example:\r\n```\r\ndef test_arm_device_architectures(faker):\r\n    device = faker.arm_device()\r\n    assert device_instruction_set(device) == 'risc' \r\n```\r\n\r\n### Expected behavior\r\n\r\nThere should be a clear way to add a custom providers (`DeviceGenerator` in my case) to the `faker` fixture.\r\n\r\n### Actual behavior\r\n\r\nThe documentation mentions creating custom providers and using the `faker` fixture but nothing about making them work together.\r\n\r\n### Personal thought\r\n\r\nI can create my own fixture with all the providers registered, but that doesn't seem to be the right way since faker is based on the idea of registering localizations and providers and using it straight away without any wrappers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1225", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1225/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1225/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1225/events", "html_url": "https://github.com/joke2k/faker/issues/1225", "id": 667166347, "node_id": "MDU6SXNzdWU2NjcxNjYzNDc=", "number": 1225, "title": "AttributeError: Invalid configuration for faker locale `en_IN`", "user": {"login": "Rajmehta123", "id": 22636443, "node_id": "MDQ6VXNlcjIyNjM2NDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/22636443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rajmehta123", "html_url": "https://github.com/Rajmehta123", "followers_url": "https://api.github.com/users/Rajmehta123/followers", "following_url": "https://api.github.com/users/Rajmehta123/following{/other_user}", "gists_url": "https://api.github.com/users/Rajmehta123/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rajmehta123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rajmehta123/subscriptions", "organizations_url": "https://api.github.com/users/Rajmehta123/orgs", "repos_url": "https://api.github.com/users/Rajmehta123/repos", "events_url": "https://api.github.com/users/Rajmehta123/events{/privacy}", "received_events_url": "https://api.github.com/users/Rajmehta123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-28T15:28:47Z", "updated_at": "2020-07-28T17:10:21Z", "closed_at": "2020-07-28T17:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.0.0\r\n* OS: Mac\r\n\r\nBrief summary of the issue goes here.\r\n\r\nError when I am trying to load en_IN locale\r\n`AttributeError: Invalid configuration for faker locale en_IN`\r\n\r\n### Steps to reproduce\r\n\r\n1. step 1 `pip install Faker`\r\n1. step 2 `from faker import Faker`\r\n1. step 3 `fake = Faker('en_IN')`\r\n\r\n### Expected behavior\r\n\r\nen_IN should be initialized\r\n\r\n### Actual behavior\r\n\r\n`AttributeError: Invalid configuration for faker locale en_IN`\r\n![image](https://user-images.githubusercontent.com/22636443/88686953-a1ce2d80-d0c5-11ea-8ab3-49c79100bd9c.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1224", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1224/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1224/events", "html_url": "https://github.com/joke2k/faker/issues/1224", "id": 667035491, "node_id": "MDU6SXNzdWU2NjcwMzU0OTE=", "number": 1224, "title": "this tool is very good ", "user": {"login": "kingsalman99", "id": 58569784, "node_id": "MDQ6VXNlcjU4NTY5Nzg0", "avatar_url": "https://avatars3.githubusercontent.com/u/58569784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingsalman99", "html_url": "https://github.com/kingsalman99", "followers_url": "https://api.github.com/users/kingsalman99/followers", "following_url": "https://api.github.com/users/kingsalman99/following{/other_user}", "gists_url": "https://api.github.com/users/kingsalman99/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingsalman99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingsalman99/subscriptions", "organizations_url": "https://api.github.com/users/kingsalman99/orgs", "repos_url": "https://api.github.com/users/kingsalman99/repos", "events_url": "https://api.github.com/users/kingsalman99/events{/privacy}", "received_events_url": "https://api.github.com/users/kingsalman99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T12:32:02Z", "updated_at": "2020-07-28T18:03:08Z", "closed_at": "2020-07-28T18:03:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello sir. \r\nthis tool is very good. but I can't use it.\r\n\r\nwhat is the command In cli. I am using termux\r\n\r\n\"i want to make bulk Fake addres with iban with country German\" \r\n\r\n\r\nthank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1219", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1219/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1219/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1219/events", "html_url": "https://github.com/joke2k/faker/issues/1219", "id": 663530959, "node_id": "MDU6SXNzdWU2NjM1MzA5NTk=", "number": 1219, "title": "Finnish IBAN should be 18 characters of length", "user": {"login": "ALMP-SallaH", "id": 55431887, "node_id": "MDQ6VXNlcjU1NDMxODg3", "avatar_url": "https://avatars1.githubusercontent.com/u/55431887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ALMP-SallaH", "html_url": "https://github.com/ALMP-SallaH", "followers_url": "https://api.github.com/users/ALMP-SallaH/followers", "following_url": "https://api.github.com/users/ALMP-SallaH/following{/other_user}", "gists_url": "https://api.github.com/users/ALMP-SallaH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ALMP-SallaH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ALMP-SallaH/subscriptions", "organizations_url": "https://api.github.com/users/ALMP-SallaH/orgs", "repos_url": "https://api.github.com/users/ALMP-SallaH/repos", "events_url": "https://api.github.com/users/ALMP-SallaH/events{/privacy}", "received_events_url": "https://api.github.com/users/ALMP-SallaH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T07:10:39Z", "updated_at": "2020-07-22T16:35:17Z", "closed_at": "2020-07-22T16:35:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n\r\nFinnish IBAN should be 18 characters of length. Currently returned Finnish IBAN has 20 characters.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nfrom faker import Faker\r\n>>> fake = Faker('fi_FI')\r\n>>> fin_iban = fake.iban()\r\n>>> fin_iban\r\n'FI807370583252728936'\r\n>>> len(fin_iban)\r\n20\r\n```\r\n\r\n### Expected behavior\r\n\r\n```\r\n>>> len(fin_iban)\r\n18\r\n```\r\n\r\n### Actual behavior\r\n\r\n```\r\n>>> len(fin_iban)\r\n20\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1214", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1214/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1214/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1214/events", "html_url": "https://github.com/joke2k/faker/issues/1214", "id": 656847035, "node_id": "MDU6SXNzdWU2NTY4NDcwMzU=", "number": 1214, "title": "future_date and past_date function doesn't handle tz_info properly", "user": {"login": "aellivon", "id": 30522649, "node_id": "MDQ6VXNlcjMwNTIyNjQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/30522649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aellivon", "html_url": "https://github.com/aellivon", "followers_url": "https://api.github.com/users/aellivon/followers", "following_url": "https://api.github.com/users/aellivon/following{/other_user}", "gists_url": "https://api.github.com/users/aellivon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aellivon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aellivon/subscriptions", "organizations_url": "https://api.github.com/users/aellivon/orgs", "repos_url": "https://api.github.com/users/aellivon/repos", "events_url": "https://api.github.com/users/aellivon/events{/privacy}", "received_events_url": "https://api.github.com/users/aellivon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-14T19:29:52Z", "updated_at": "2020-07-14T20:14:30Z", "closed_at": "2020-07-14T20:14:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.1.1\r\n* OS: Ubuntu 20.04 LTS\r\n\r\nThe future_date and past_date function accepts timezone parameter (tz_info) but even if it's passed with a valid timezone, it always produce a naive date time. \r\n\r\n### Steps to reproduce\r\n\r\nPast date\r\n1. fake.past_date(tzinfo=valid_timezone)\r\n\r\nFuture Date\r\n1. fake.future_date(tzinfo=valid_timezone)\r\n\r\n### Expected behavior\r\n\r\nThe result of the future date and past date should be a date that is timezone aware since we are passing a valid timezone\r\n\r\n### Actual behavior\r\n\r\nIt yields naive date even when it's passed with a valid_timzone\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1213", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1213/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1213/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1213/events", "html_url": "https://github.com/joke2k/faker/issues/1213", "id": 656400816, "node_id": "MDU6SXNzdWU2NTY0MDA4MTY=", "number": 1213, "title": "Faker.seed() has no effect when used in Docker", "user": {"login": "simonjcarr", "id": 1474382, "node_id": "MDQ6VXNlcjE0NzQzODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1474382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonjcarr", "html_url": "https://github.com/simonjcarr", "followers_url": "https://api.github.com/users/simonjcarr/followers", "following_url": "https://api.github.com/users/simonjcarr/following{/other_user}", "gists_url": "https://api.github.com/users/simonjcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonjcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonjcarr/subscriptions", "organizations_url": "https://api.github.com/users/simonjcarr/orgs", "repos_url": "https://api.github.com/users/simonjcarr/repos", "events_url": "https://api.github.com/users/simonjcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/simonjcarr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T07:42:03Z", "updated_at": "2020-07-14T07:46:03Z", "closed_at": "2020-07-14T07:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run the following python script at the command line I get the same results each time I run it, (which is what I want)\r\n\r\n```\r\nfrom faker import Faker\r\nfake = Faker()\r\nFaker.seed(1)\r\nprint(fake.first_name())\r\n```\r\nIf I run it 3 times I will get\r\n```\r\nSimon\r\nSimon\r\nSimon\r\n```\r\nI run the same code in Docker, the result is\r\n```\r\nMark\r\nLaura\r\nFay\r\n```\r\nI have heard that better results with Pythons random module can be got by running\r\n```\r\nfrom random import Random\r\nrandom = Random(55)\r\n#instead of\r\n#random.seed(55) \r\n```\r\n\r\nAnyone know how I can fix the Faker seed issue in Docker?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1212", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1212/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1212/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1212/events", "html_url": "https://github.com/joke2k/faker/issues/1212", "id": 655906113, "node_id": "MDU6SXNzdWU2NTU5MDYxMTM=", "number": 1212, "title": "`pyfloat` with `positive=True` and `max_value` produces unexpected results.", "user": {"login": "djpetti", "id": 7475340, "node_id": "MDQ6VXNlcjc0NzUzNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7475340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djpetti", "html_url": "https://github.com/djpetti", "followers_url": "https://api.github.com/users/djpetti/followers", "following_url": "https://api.github.com/users/djpetti/following{/other_user}", "gists_url": "https://api.github.com/users/djpetti/gists{/gist_id}", "starred_url": "https://api.github.com/users/djpetti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djpetti/subscriptions", "organizations_url": "https://api.github.com/users/djpetti/orgs", "repos_url": "https://api.github.com/users/djpetti/repos", "events_url": "https://api.github.com/users/djpetti/events{/privacy}", "received_events_url": "https://api.github.com/users/djpetti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-13T14:41:30Z", "updated_at": "2020-07-22T16:29:37Z", "closed_at": "2020-07-22T16:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: v4.0.3\r\n* OS: Mac OS\r\n\r\nWhen using the `pyfloat` provider with both `positive=True` and `max_value` set, it sometimes produces negative numbers.\r\n\r\n### Steps to reproduce\r\n\r\n```python\r\nfrom faker import Faker\r\n\r\nFaker.seed(100)\r\nfaker = Faker()\r\nprint(faker.pyfloat(positive=True, max_value=100.0))\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould print some number in (0, 100).\r\n\r\n### Actual behavior\r\n\r\nPrints `-1039.2931776`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1208", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1208/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1208/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1208/events", "html_url": "https://github.com/joke2k/faker/issues/1208", "id": 647396169, "node_id": "MDU6SXNzdWU2NDczOTYxNjk=", "number": 1208, "title": "Update python_requires in setup.py", "user": {"login": "andreymal", "id": 3236464, "node_id": "MDQ6VXNlcjMyMzY0NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreymal", "html_url": "https://github.com/andreymal", "followers_url": "https://api.github.com/users/andreymal/followers", "following_url": "https://api.github.com/users/andreymal/following{/other_user}", "gists_url": "https://api.github.com/users/andreymal/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreymal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreymal/subscriptions", "organizations_url": "https://api.github.com/users/andreymal/orgs", "repos_url": "https://api.github.com/users/andreymal/repos", "events_url": "https://api.github.com/users/andreymal/events{/privacy}", "received_events_url": "https://api.github.com/users/andreymal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-29T13:52:27Z", "updated_at": "2020-06-29T14:24:22Z", "closed_at": "2020-06-29T14:24:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/joke2k/faker/blob/146f205b942d15c95160df35d3e431624697d079/setup.py#L65", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1205", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1205/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1205/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1205/events", "html_url": "https://github.com/joke2k/faker/issues/1205", "id": 642257414, "node_id": "MDU6SXNzdWU2NDIyNTc0MTQ=", "number": 1205, "title": "Feature Request: Support nonbinary gender options in Person Provider", "user": {"login": "crd", "id": 152584, "node_id": "MDQ6VXNlcjE1MjU4NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/152584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crd", "html_url": "https://github.com/crd", "followers_url": "https://api.github.com/users/crd/followers", "following_url": "https://api.github.com/users/crd/following{/other_user}", "gists_url": "https://api.github.com/users/crd/gists{/gist_id}", "starred_url": "https://api.github.com/users/crd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crd/subscriptions", "organizations_url": "https://api.github.com/users/crd/orgs", "repos_url": "https://api.github.com/users/crd/repos", "events_url": "https://api.github.com/users/crd/events{/privacy}", "received_events_url": "https://api.github.com/users/crd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-19T23:12:43Z", "updated_at": "2020-06-21T18:58:28Z", "closed_at": "2020-06-21T18:58:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: < Faker 4.1.1\r\n* OS: All\r\n\r\nMany applications support more than a straightforward binary Male/Female gender selection and require adequate test data. Presently, Faker only supports Male and Female prefixes, suffixes, and names.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1188", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1188/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1188/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1188/events", "html_url": "https://github.com/joke2k/faker/issues/1188", "id": 626222968, "node_id": "MDU6SXNzdWU2MjYyMjI5Njg=", "number": 1188, "title": "Webargs email validation failed with Armenian company emails", "user": {"login": "mdantonio", "id": 12394806, "node_id": "MDQ6VXNlcjEyMzk0ODA2", "avatar_url": "https://avatars3.githubusercontent.com/u/12394806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdantonio", "html_url": "https://github.com/mdantonio", "followers_url": "https://api.github.com/users/mdantonio/followers", "following_url": "https://api.github.com/users/mdantonio/following{/other_user}", "gists_url": "https://api.github.com/users/mdantonio/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdantonio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdantonio/subscriptions", "organizations_url": "https://api.github.com/users/mdantonio/orgs", "repos_url": "https://api.github.com/users/mdantonio/repos", "events_url": "https://api.github.com/users/mdantonio/events{/privacy}", "received_events_url": "https://api.github.com/users/mdantonio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T05:19:07Z", "updated_at": "2020-05-31T14:34:29Z", "closed_at": "2020-05-31T14:34:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.1.0\r\n* OS: Linux/Ubuntu\r\n\r\nBrief summary of the issue goes here.\r\n\r\nCompany emails with hy_AM (Armenian) localization can contain a last_name company that is considered as invalid by Webargs/Marshmallow (email domains can not contain underscores). I verified that {{last_name}} is a token in the company name format (Is that suspicious? Is it a non-replaced token?)\r\n\r\n### Steps to reproduce\r\n\r\n1) create a Armenian Faker\r\n> fake = Faker('hy_AM')\r\n\r\n2) Produce a number of company_email\r\n> fake.company_email()\r\n'tsormotyansyowzanna@karamanowkyan.biz'\r\n> fake.company_email()\r\n'pvazigeghtsyan@last_name.com'\r\n\r\n\r\n### Expected behavior\r\n\r\nEmails should not contain @last_name domains\r\n\r\n### Actual behavior\r\n\r\nArmenian emails can contain @last_name domains. I tried with other locales and found no issues\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1183", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1183/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1183/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1183/events", "html_url": "https://github.com/joke2k/faker/issues/1183", "id": 620540121, "node_id": "MDU6SXNzdWU2MjA1NDAxMjE=", "number": 1183, "title": "Please support weighted choices", "user": {"login": "ex-nerd", "id": 154074, "node_id": "MDQ6VXNlcjE1NDA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/154074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ex-nerd", "html_url": "https://github.com/ex-nerd", "followers_url": "https://api.github.com/users/ex-nerd/followers", "following_url": "https://api.github.com/users/ex-nerd/following{/other_user}", "gists_url": "https://api.github.com/users/ex-nerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ex-nerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ex-nerd/subscriptions", "organizations_url": "https://api.github.com/users/ex-nerd/orgs", "repos_url": "https://api.github.com/users/ex-nerd/repos", "events_url": "https://api.github.com/users/ex-nerd/events{/privacy}", "received_events_url": "https://api.github.com/users/ex-nerd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-18T22:18:02Z", "updated_at": "2020-05-20T04:34:30Z", "closed_at": "2020-05-19T21:09:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since Python 3.6, [`random.choices`](https://docs.python.org/3/library/random.html#random.choices) has supported passing in weights for the choices, which would allow for more realistic generation of data sets like random languages (#1179).  It would be nice of `fake.random_elements` and its relations could be updated to support this.\r\n\r\nNote that this is different than the current dependency `random_elements` has on `OrderedDict` (I wonder if this dependency is still needed for python >= 3.6), which references probability values (relative to `1.0`) not simple weights (relative to other weight values).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1182", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1182/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1182/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1182/events", "html_url": "https://github.com/joke2k/faker/issues/1182", "id": 619438180, "node_id": "MDU6SXNzdWU2MTk0MzgxODA=", "number": 1182, "title": "Feature request: safe_domain_name()", "user": {"login": "ex-nerd", "id": 154074, "node_id": "MDQ6VXNlcjE1NDA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/154074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ex-nerd", "html_url": "https://github.com/ex-nerd", "followers_url": "https://api.github.com/users/ex-nerd/followers", "following_url": "https://api.github.com/users/ex-nerd/following{/other_user}", "gists_url": "https://api.github.com/users/ex-nerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ex-nerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ex-nerd/subscriptions", "organizations_url": "https://api.github.com/users/ex-nerd/orgs", "repos_url": "https://api.github.com/users/ex-nerd/repos", "events_url": "https://api.github.com/users/ex-nerd/events{/privacy}", "received_events_url": "https://api.github.com/users/ex-nerd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-16T10:28:43Z", "updated_at": "2020-07-08T14:58:29Z", "closed_at": "2020-07-08T14:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are methods for `safe_email()` but nothing that just returns the a  rfc6761 domain name for those cases where a user might want to provide a username generated off of other data (e.g. a faker-generated first/last name combo so it doesn't look weird that `George Smith` has an email address of `janedoe@example.com`).\r\n\r\nI know I can get this with `fake.random_element([\"example.com\", \"example.net\", \"example.org\"])` but it would be nice to have this built in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1179", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1179/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1179/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1179/events", "html_url": "https://github.com/joke2k/faker/issues/1179", "id": 617502463, "node_id": "MDU6SXNzdWU2MTc1MDI0NjM=", "number": 1179, "title": "New feature: language_name", "user": {"login": "ikhomutov", "id": 17610400, "node_id": "MDQ6VXNlcjE3NjEwNDAw", "avatar_url": "https://avatars3.githubusercontent.com/u/17610400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikhomutov", "html_url": "https://github.com/ikhomutov", "followers_url": "https://api.github.com/users/ikhomutov/followers", "following_url": "https://api.github.com/users/ikhomutov/following{/other_user}", "gists_url": "https://api.github.com/users/ikhomutov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikhomutov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikhomutov/subscriptions", "organizations_url": "https://api.github.com/users/ikhomutov/orgs", "repos_url": "https://api.github.com/users/ikhomutov/repos", "events_url": "https://api.github.com/users/ikhomutov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikhomutov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-13T14:35:25Z", "updated_at": "2020-06-02T19:17:35Z", "closed_at": "2020-06-02T19:17:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. I want to add a new method that would return random language name (e.g. English, Spanish, Dutch). I'm not sure where I should place this method. Initially I wanted to add this to BaseProvider near the language_code method, but this provider has no locale support.\r\nAny thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1177", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1177/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1177/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1177/events", "html_url": "https://github.com/joke2k/faker/issues/1177", "id": 616977514, "node_id": "MDU6SXNzdWU2MTY5Nzc1MTQ=", "number": 1177, "title": "Issue with latest faker version: AttributeError: 'list' object has no attribute 'replace'", "user": {"login": "mouradmourafiq", "id": 1261626, "node_id": "MDQ6VXNlcjEyNjE2MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mouradmourafiq", "html_url": "https://github.com/mouradmourafiq", "followers_url": "https://api.github.com/users/mouradmourafiq/followers", "following_url": "https://api.github.com/users/mouradmourafiq/following{/other_user}", "gists_url": "https://api.github.com/users/mouradmourafiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/mouradmourafiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mouradmourafiq/subscriptions", "organizations_url": "https://api.github.com/users/mouradmourafiq/orgs", "repos_url": "https://api.github.com/users/mouradmourafiq/repos", "events_url": "https://api.github.com/users/mouradmourafiq/events{/privacy}", "received_events_url": "https://api.github.com/users/mouradmourafiq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-12T21:37:52Z", "updated_at": "2020-07-31T10:26:07Z", "closed_at": "2020-07-30T09:15:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.1.0\r\n* OS: ubuntu\r\n\r\nTests that used to pass are now failing, the error:\r\n\r\n```\r\n>   lambda: ihook(item=item, **kwds),\r\n    when=when,\r\n            )\r\n\r\n/usr/local/lib/python3.7/site-packages/flaky/flaky_pytest_plugin.py:273:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/local/lib/python3.7/site-packages/faker/contrib/pytest/plugin.py:20: in _session_faker\r\n    return Faker(locale=locale)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'faker.factory.Factory'>, locale = ['en_US'], providers = None, generator = None, includes = [], config = {}\r\n\r\n    @classmethod\r\n    def create(cls, locale=None, providers=None, generator=None, includes=None, **config):\r\n        if includes is None:\r\n            includes = []\r\n\r\n        # fix locale to package name\r\n>       locale = locale.replace('-', '_') if locale else DEFAULT_LOCALE\r\nE       AttributeError: 'list' object has no attribute 'replace'\r\n\r\n/usr/local/lib/python3.7/site-packages/faker/factory.py:22: AttributeError\r\n``` \r\n\r\n### Steps to reproduce\r\nI just pinned faker to: `faker==4.0.3` and all tests are passing.\r\n\r\n### Expected behavior\r\n\r\nIt should work, similarly to the previous release.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1163", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1163/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1163/events", "html_url": "https://github.com/joke2k/faker/issues/1163", "id": 605810903, "node_id": "MDU6SXNzdWU2MDU4MTA5MDM=", "number": 1163, "title": "Why does faker.misc.uuid has `cast_to=str` by default? ", "user": {"login": "rodrigondec", "id": 3301060, "node_id": "MDQ6VXNlcjMzMDEwNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3301060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigondec", "html_url": "https://github.com/rodrigondec", "followers_url": "https://api.github.com/users/rodrigondec/followers", "following_url": "https://api.github.com/users/rodrigondec/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigondec/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigondec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigondec/subscriptions", "organizations_url": "https://api.github.com/users/rodrigondec/orgs", "repos_url": "https://api.github.com/users/rodrigondec/repos", "events_url": "https://api.github.com/users/rodrigondec/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigondec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T19:37:45Z", "updated_at": "2020-04-24T21:03:46Z", "closed_at": "2020-04-24T21:03:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# I'm willing to open PR\r\nshould this issue be accepted\r\n\r\n* Faker version: latest\r\n* OS: N/A\r\n\r\n`faker.misc.uuid` has a arg `cast_to` with `str` as default.  So the returned value is always string.\r\nhttps://github.com/joke2k/faker/blob/9f48a5c6a251b2b8d9f84f65472f946b85b9a923/faker/providers/misc/__init__.py#L95\r\n\r\nI want to have the `uuid.UUID` object returned. \r\n\r\nCalling with `cast_to=UUID` again raises a Error on UUID lib (of course it would). Since it's returned `UUID(UUID([...]))`from faker with this\r\n\r\n![image](https://user-images.githubusercontent.com/3301060/80141445-f1113900-857f-11ea-85a2-2252c74acd00.png)\r\n\r\nSo I would have to cast it like this `UUID(str(UUID([...])))` to be funcional.\r\n\r\n### Steps to reproduce\r\n\r\n1. `faker.uuid(cast_to=str)`\r\n1. `faker.uuid(cast_to=uuid.UUID)`\r\n\r\n### Expected behavior\r\nI should be able to call  `faker.uuid(cast_to=None)` and have the pure `UUID` object returned.\r\n\r\n### Actual behavior\r\nFaker forces object `UUID` to be cast.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1157", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1157/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1157/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1157/events", "html_url": "https://github.com/joke2k/faker/issues/1157", "id": 602426224, "node_id": "MDU6SXNzdWU2MDI0MjYyMjQ=", "number": 1157, "title": "Spanish locale", "user": {"login": "pablofm", "id": 3797014, "node_id": "MDQ6VXNlcjM3OTcwMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3797014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pablofm", "html_url": "https://github.com/pablofm", "followers_url": "https://api.github.com/users/pablofm/followers", "following_url": "https://api.github.com/users/pablofm/following{/other_user}", "gists_url": "https://api.github.com/users/pablofm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pablofm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pablofm/subscriptions", "organizations_url": "https://api.github.com/users/pablofm/orgs", "repos_url": "https://api.github.com/users/pablofm/repos", "events_url": "https://api.github.com/users/pablofm/events{/privacy}", "received_events_url": "https://api.github.com/users/pablofm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-18T10:16:10Z", "updated_at": "2020-04-23T16:23:16Z", "closed_at": "2020-04-23T16:23:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.0.3\r\n* OS: Ubuntu linux 18.04\r\n\r\nThe spanish provider includes some mistakes related with spanish phone numbers, assuming as valid some invalid phone numbers.  (Spanish numbers must start with 6, 7, 8 and 9(special numbers). It randomly offer different values)\r\n\r\n### Steps to reproduce\r\nRegular use\r\n\r\nBy the way I find some providers not offered that can be easily provided.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1153", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1153/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1153/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1153/events", "html_url": "https://github.com/joke2k/faker/issues/1153", "id": 598471672, "node_id": "MDU6SXNzdWU1OTg0NzE2NzI=", "number": 1153, "title": "random_number helper method does not behave as advertised", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-12T12:13:16Z", "updated_at": "2020-04-14T13:52:13Z", "closed_at": "2020-04-13T16:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: Faker 4.0.2\r\n* OS: macOS\r\n\r\nDocstring for `random_number` says:\r\n\r\n> Returns a random number with 1 digit (default, when digits==None),\r\n> a random number with 0 to given number of digits, or a random number\r\n> with given number to given number of digits (when ``fix_len==True``).\r\n\r\n...but returns an int with many digits (rather than 1) by default, and the `fix_len=False` default does not seem to work either - it always returns exactly the number of digits requested.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nIn [1]: from faker import Faker\r\n\r\nIn [2]: fake = Faker()\r\n\r\nIn [3]: fake.random_number()\r\nOut[3]: 546872285\r\n\r\nIn [43]: fake.random_number(digits=30)\r\nOut[43]: 390106228857719308559558465502\r\n\r\nIn [44]: fake.random_number(digits=30)\r\nOut[44]: 185723852041585261753662702190\r\n\r\nIn [45]: fake.random_number(digits=30)\r\nOut[45]: 823216888040689890638644594788\r\n\r\netc\r\n```\r\n\r\n### Expected behavior\r\n\r\n\"a random number with one digit\" by default (`digits=None`)\r\n\r\nor \"a random number with 0 to given number of digits\" (`fix_len=False`)\r\n\r\n### Actual behavior\r\n\r\nSee above", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1141", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1141/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1141/events", "html_url": "https://github.com/joke2k/faker/issues/1141", "id": 587317359, "node_id": "MDU6SXNzdWU1ODczMTczNTk=", "number": 1141, "title": "Missing implementation of no_NO license plates.", "user": {"login": "bjorskog", "id": 1363928, "node_id": "MDQ6VXNlcjEzNjM5Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1363928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorskog", "html_url": "https://github.com/bjorskog", "followers_url": "https://api.github.com/users/bjorskog/followers", "following_url": "https://api.github.com/users/bjorskog/following{/other_user}", "gists_url": "https://api.github.com/users/bjorskog/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorskog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorskog/subscriptions", "organizations_url": "https://api.github.com/users/bjorskog/orgs", "repos_url": "https://api.github.com/users/bjorskog/repos", "events_url": "https://api.github.com/users/bjorskog/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorskog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-24T22:26:49Z", "updated_at": "2020-04-20T14:57:30Z", "closed_at": "2020-04-20T14:57:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version:\r\n* OS:\r\n\r\nno_NO license plates are not implemeted.\r\n\r\n### Steps to reproduce\r\n\r\n### Expected behavior\r\n\r\nShould be of the form \r\n\r\n> AB 12345\r\n\r\n### Actual behavior\r\n#1140 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1133", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1133/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1133/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1133/events", "html_url": "https://github.com/joke2k/faker/issues/1133", "id": 584138738, "node_id": "MDU6SXNzdWU1ODQxMzg3Mzg=", "number": 1133, "title": "Add support for Indian Aadhaar numbers", "user": {"login": "curiousElf", "id": 3013867, "node_id": "MDQ6VXNlcjMwMTM4Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3013867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/curiousElf", "html_url": "https://github.com/curiousElf", "followers_url": "https://api.github.com/users/curiousElf/followers", "following_url": "https://api.github.com/users/curiousElf/following{/other_user}", "gists_url": "https://api.github.com/users/curiousElf/gists{/gist_id}", "starred_url": "https://api.github.com/users/curiousElf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/curiousElf/subscriptions", "organizations_url": "https://api.github.com/users/curiousElf/orgs", "repos_url": "https://api.github.com/users/curiousElf/repos", "events_url": "https://api.github.com/users/curiousElf/events{/privacy}", "received_events_url": "https://api.github.com/users/curiousElf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T03:33:49Z", "updated_at": "2020-03-19T03:50:22Z", "closed_at": "2020-03-19T03:50:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 4.0.2\r\n* OS: Ubuntu 18.04\r\n\r\nProposal to add support for Indian Aadhaar numbers. Aadhaar numbers are a 12 digit identifier for Indian residents which can be used for proving identity and for availing Government welfare benefits.\r\n\r\nOfficial website: https://uidai.gov.in/my-aadhaar/about-your-aadhaar.html\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1131", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1131/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1131/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1131/events", "html_url": "https://github.com/joke2k/faker/issues/1131", "id": 583500102, "node_id": "MDU6SXNzdWU1ODM1MDAxMDI=", "number": 1131, "title": "pydict(variable_nb_elements=False) returns dicts with varying number of elements", "user": {"login": "lima-tango", "id": 19208585, "node_id": "MDQ6VXNlcjE5MjA4NTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/19208585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lima-tango", "html_url": "https://github.com/lima-tango", "followers_url": "https://api.github.com/users/lima-tango/followers", "following_url": "https://api.github.com/users/lima-tango/following{/other_user}", "gists_url": "https://api.github.com/users/lima-tango/gists{/gist_id}", "starred_url": "https://api.github.com/users/lima-tango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lima-tango/subscriptions", "organizations_url": "https://api.github.com/users/lima-tango/orgs", "repos_url": "https://api.github.com/users/lima-tango/repos", "events_url": "https://api.github.com/users/lima-tango/events{/privacy}", "received_events_url": "https://api.github.com/users/lima-tango/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1258505653, "node_id": "MDU6TGFiZWwxMjU4NTA1NjUz", "url": "https://api.github.com/repos/joke2k/faker/labels/help%20wanted", "name": "help wanted", "color": "5cf9cd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-18T06:32:53Z", "updated_at": "2020-03-19T21:37:42Z", "closed_at": "2020-03-19T21:37:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.0.1\r\n* OS: OS X 10.15.3\r\n\r\npydict with `variable_nb_elements=False` still has varying number of elements.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nfrom faker import Faker\r\n\r\nfake = Faker()\r\n\r\nnb = 80\r\nfor _ in range(30):  # nb is large and the faker function is called 30 times to increase the probability of reproducing the bug.\r\n    fake_dict = fake.pydict(nb_elements=nb, variable_nb_elements=False)\r\n    nb_reality = len(fake_dict)\r\n    if nb_reality != nb:\r\n        print(nb_reality)\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe length of the dictionary should always be `nb`. \r\n\r\n### Actual behavior\r\n\r\nIt is often shorter as the keys are generated with [`self.generator.words(nb_elements)`](https://github.com/joke2k/faker/blob/master/faker/providers/python/__init__.py#L166). If the keys are not unique, the element is dropped.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1129", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1129/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1129/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1129/events", "html_url": "https://github.com/joke2k/faker/issues/1129", "id": 580879804, "node_id": "MDU6SXNzdWU1ODA4Nzk4MDQ=", "number": 1129, "title": "invalid pt_BR cellphone numbers being generated", "user": {"login": "flpStrri", "id": 13003392, "node_id": "MDQ6VXNlcjEzMDAzMzky", "avatar_url": "https://avatars0.githubusercontent.com/u/13003392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flpStrri", "html_url": "https://github.com/flpStrri", "followers_url": "https://api.github.com/users/flpStrri/followers", "following_url": "https://api.github.com/users/flpStrri/following{/other_user}", "gists_url": "https://api.github.com/users/flpStrri/gists{/gist_id}", "starred_url": "https://api.github.com/users/flpStrri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flpStrri/subscriptions", "organizations_url": "https://api.github.com/users/flpStrri/orgs", "repos_url": "https://api.github.com/users/flpStrri/repos", "events_url": "https://api.github.com/users/flpStrri/events{/privacy}", "received_events_url": "https://api.github.com/users/flpStrri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-13T21:53:25Z", "updated_at": "2020-03-18T21:22:07Z", "closed_at": "2020-03-18T21:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.0.2\r\n* OS: Ubuntu 16.04.6 LTS\r\n\r\nIf I got [MSISDN](https://en.wikipedia.org/wiki/MSISDN) right, and it is possible I did it wrong since I know nothing about telecom, they are just meant to cellphones and not landline phones. In Brazil cellphones started now to have a 9 in front of its digits. This was implemented by @rodrigondec on 941e06693ff8771d715d2f9f37d79a7f1b8fa8f4 but he added `5511########` on `msisdn_formats`.\r\n\r\nIf I got the mobile and not landline thing right all the following lines are generating invalid cellphone numbers:\r\n```\r\n'5511########',\r\n'5521########',\r\n'5531########',\r\n'5541########',\r\n'5551########',\r\n'5561########',\r\n'5571########',\r\n'5581########',\r\n'5584########',\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Instantiate faker: `faker = Faker()`\r\n2. call `len(faker.msisdn)`\r\n\r\n### Expected behavior\r\n\r\nThe length should always return 13 for pt_BR locales.\r\n\r\nFrom ANATEL, the telecom national agency in Brazil: https://www.anatel.gov.br/Portal/exibirPortalPaginaEspecial.do;jsessionid=4CF5489B6943AFF3E2BDA192CC1B5220.site1?org.apache.struts.taglib.html.TOKEN=bbe01b15d1c58d2f938580db5547cb8e&acao=carregaPasta&codItemCanal=1722&pastaSelecionada=2831\r\n> 1. Por que os n\u00fameros dos telefones celulares ter\u00e3o o nono d\u00edgito?\r\n> Os n\u00fameros dos telefones celulares est\u00e3o recebendo mais um d\u00edgito para atender \u00e0 crescente demanda pelo servi\u00e7o m\u00f3vel no Brasil(....)\r\n> 2. O nono d\u00edgito ser\u00e1 adicionado aos n\u00fameros de todo o Brasil?\r\n> O nono d\u00edgito ser\u00e1 implementado em todo o Pa\u00eds at\u00e9 o fim de 2016(...)\r\n\r\nTranslates to:\r\n1. Why the cell phone numbers will have a 9th digit?\r\nThe cell phone numbers are receiving one more digit to address the demand growth of mobile service in Brazil...\r\n2. The 9th digit will be added to all numbers in Brazil?\r\nThe 9th digit will be implemented in the whole country by the end of 2016...\r\n\r\n### Actual behavior\r\n\r\nthe length sometimes is 12\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1126", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1126/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1126/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1126/events", "html_url": "https://github.com/joke2k/faker/issues/1126", "id": 574677334, "node_id": "MDU6SXNzdWU1NzQ2NzczMzQ=", "number": 1126, "title": "CHANGELOG.rst has wrong years", "user": {"login": "itsdkey", "id": 26058315, "node_id": "MDQ6VXNlcjI2MDU4MzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/26058315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsdkey", "html_url": "https://github.com/itsdkey", "followers_url": "https://api.github.com/users/itsdkey/followers", "following_url": "https://api.github.com/users/itsdkey/following{/other_user}", "gists_url": "https://api.github.com/users/itsdkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsdkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsdkey/subscriptions", "organizations_url": "https://api.github.com/users/itsdkey/orgs", "repos_url": "https://api.github.com/users/itsdkey/repos", "events_url": "https://api.github.com/users/itsdkey/events{/privacy}", "received_events_url": "https://api.github.com/users/itsdkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T13:43:10Z", "updated_at": "2020-05-10T13:40:23Z", "closed_at": "2020-03-03T14:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: newest\r\n* OS: ubuntu\r\n\r\nThe years in CHANGELOG.rst do not coincide with release dates.\r\n\r\n![image](https://user-images.githubusercontent.com/26058315/75781319-3faf0d80-5d5d-11ea-8c7f-7d68fcf222c2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/26058315/75781342-4b023900-5d5d-11ea-8956-f14e5027ae0c.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1123", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1123/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1123/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1123/events", "html_url": "https://github.com/joke2k/faker/issues/1123", "id": 573076821, "node_id": "MDU6SXNzdWU1NzMwNzY4MjE=", "number": 1123, "title": "Faker is failing on 29th of February on the leap year", "user": {"login": "defigor", "id": 54189004, "node_id": "MDQ6VXNlcjU0MTg5MDA0", "avatar_url": "https://avatars3.githubusercontent.com/u/54189004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defigor", "html_url": "https://github.com/defigor", "followers_url": "https://api.github.com/users/defigor/followers", "following_url": "https://api.github.com/users/defigor/following{/other_user}", "gists_url": "https://api.github.com/users/defigor/gists{/gist_id}", "starred_url": "https://api.github.com/users/defigor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defigor/subscriptions", "organizations_url": "https://api.github.com/users/defigor/orgs", "repos_url": "https://api.github.com/users/defigor/repos", "events_url": "https://api.github.com/users/defigor/events{/privacy}", "received_events_url": "https://api.github.com/users/defigor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-29T00:16:52Z", "updated_at": "2020-03-02T15:15:16Z", "closed_at": "2020-03-02T15:15:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 4.0.1\r\n* OS: ubuntu 18.04\r\n\r\nCurrently, Faker fails to generate a date_of_birth on 29th of February on the leap year, due to the code in here:\r\nhttps://github.com/joke2k/faker/blob/master/faker/providers/date_time/__init__.py#L1999\r\n\r\n        start_date = now.replace(year=now.year - (maximum_age+1))\r\n        end_date = now.replace(year=now.year - minimum_age)\r\n\r\n### Steps to reproduce\r\n\r\nExecute a faker for date of birth on 29th of February\r\n\r\n### Expected behavior\r\n\r\nWorks as usual\r\n\r\n### Actual behavior\r\n\r\nRaises exception: ValueError: day is out of range for month\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1118", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1118/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1118/events", "html_url": "https://github.com/joke2k/faker/issues/1118", "id": 571392858, "node_id": "MDU6SXNzdWU1NzEzOTI4NTg=", "number": 1118, "title": "Faker missing french licence plate", "user": {"login": "clarissedescamps", "id": 35263417, "node_id": "MDQ6VXNlcjM1MjYzNDE3", "avatar_url": "https://avatars0.githubusercontent.com/u/35263417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarissedescamps", "html_url": "https://github.com/clarissedescamps", "followers_url": "https://api.github.com/users/clarissedescamps/followers", "following_url": "https://api.github.com/users/clarissedescamps/following{/other_user}", "gists_url": "https://api.github.com/users/clarissedescamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarissedescamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarissedescamps/subscriptions", "organizations_url": "https://api.github.com/users/clarissedescamps/orgs", "repos_url": "https://api.github.com/users/clarissedescamps/repos", "events_url": "https://api.github.com/users/clarissedescamps/events{/privacy}", "received_events_url": "https://api.github.com/users/clarissedescamps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T13:59:48Z", "updated_at": "2020-03-02T15:22:41Z", "closed_at": "2020-03-02T15:22:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that Faker was missing the implementation of French licence plates. \r\nI would interested in adding this new feature :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1114", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1114/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1114/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1114/events", "html_url": "https://github.com/joke2k/faker/issues/1114", "id": 571152418, "node_id": "MDU6SXNzdWU1NzExNTI0MTg=", "number": 1114, "title": "Fix simple typo: recomended -> recommended", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-26T08:30:19Z", "updated_at": "2020-02-26T15:15:27Z", "closed_at": "2020-02-26T15:15:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in tests/providers/test_person.py.\nShould read `recommended` rather than `recomended`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1099", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1099/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1099/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1099/events", "html_url": "https://github.com/joke2k/faker/issues/1099", "id": 546852001, "node_id": "MDU6SXNzdWU1NDY4NTIwMDE=", "number": 1099, "title": "Implementation of person id number for cs_CZ - Czech (rodn\u00e9 \u010d\u00edslo)", "user": {"login": "andrew-coxuatoinc", "id": 49172455, "node_id": "MDQ6VXNlcjQ5MTcyNDU1", "avatar_url": "https://avatars0.githubusercontent.com/u/49172455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-coxuatoinc", "html_url": "https://github.com/andrew-coxuatoinc", "followers_url": "https://api.github.com/users/andrew-coxuatoinc/followers", "following_url": "https://api.github.com/users/andrew-coxuatoinc/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-coxuatoinc/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-coxuatoinc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-coxuatoinc/subscriptions", "organizations_url": "https://api.github.com/users/andrew-coxuatoinc/orgs", "repos_url": "https://api.github.com/users/andrew-coxuatoinc/repos", "events_url": "https://api.github.com/users/andrew-coxuatoinc/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-coxuatoinc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T13:11:33Z", "updated_at": "2020-01-29T15:46:09Z", "closed_at": "2020-01-29T15:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you implement randomizer which will generate a proper person ID number (rodn\u00e9 \u010d\u00edslo) for Czech local?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1090", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1090/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1090/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1090/events", "html_url": "https://github.com/joke2k/faker/issues/1090", "id": 544130833, "node_id": "MDU6SXNzdWU1NDQxMzA4MzM=", "number": 1090, "title": "Changelog links are backwards", "user": {"login": "Ianleeclark", "id": 2055372, "node_id": "MDQ6VXNlcjIwNTUzNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2055372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ianleeclark", "html_url": "https://github.com/Ianleeclark", "followers_url": "https://api.github.com/users/Ianleeclark/followers", "following_url": "https://api.github.com/users/Ianleeclark/following{/other_user}", "gists_url": "https://api.github.com/users/Ianleeclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ianleeclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ianleeclark/subscriptions", "organizations_url": "https://api.github.com/users/Ianleeclark/orgs", "repos_url": "https://api.github.com/users/Ianleeclark/repos", "events_url": "https://api.github.com/users/Ianleeclark/events{/privacy}", "received_events_url": "https://api.github.com/users/Ianleeclark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1762154402, "node_id": "MDU6TGFiZWwxNzYyMTU0NDAy", "url": "https://api.github.com/repos/joke2k/faker/labels/documentation", "name": "documentation", "color": "f9d0c4", "default": true, "description": ""}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T08:53:20Z", "updated_at": "2020-01-03T21:55:56Z", "closed_at": "2020-01-03T21:55:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: >=2.0\r\n* OS:Ubuntu\r\n\r\n\r\nIn the changelog, you aren't able to see commits between tags due to the tags being in the opposite order in the URL. It should be https://github.com/joke2k/faker/compare/{FROM}...{TO}, but is instead https://github.com/joke2k/faker/compare/{TO}...{FROM}\r\n\r\nFor example: https://github.com/joke2k/faker/compare/v3.0.0...v2.0.5\r\n\r\n### Steps to reproduce\r\n\r\n1. Go to https://github.com/joke2k/faker/blob/master/CHANGELOG.rst\r\n2. Click any version's link after the affected version, and you'll be greeted with an empty changelog (e.g., https://github.com/joke2k/faker/compare/v2.0.0...v1.0.8)\r\n\r\n### Expected behavior\r\n\r\nYou should be able to see all commits between each tag.\r\n\r\n### Actual behavior\r\n\r\nYou see nothing.\r\n\r\n### Additional\r\n\r\nIf you manually swap the two tags in the URL or in the UI, you can see the commits.\r\n\r\nI'd be happy to submit a fix for this if this is, as I expect, unintended behavior.\r\n\r\nI don't expect this to be more than manually updating all affected changelog entries and (probably?) updating the bumpversion config.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1086", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1086/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1086/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1086/events", "html_url": "https://github.com/joke2k/faker/issues/1086", "id": 542674212, "node_id": "MDU6SXNzdWU1NDI2NzQyMTI=", "number": 1086, "title": "Can we have a \"non formatted\" postcode for pt_BR localization?", "user": {"login": "rn4n", "id": 3982052, "node_id": "MDQ6VXNlcjM5ODIwNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3982052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rn4n", "html_url": "https://github.com/rn4n", "followers_url": "https://api.github.com/users/rn4n/followers", "following_url": "https://api.github.com/users/rn4n/following{/other_user}", "gists_url": "https://api.github.com/users/rn4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/rn4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rn4n/subscriptions", "organizations_url": "https://api.github.com/users/rn4n/orgs", "repos_url": "https://api.github.com/users/rn4n/repos", "events_url": "https://api.github.com/users/rn4n/events{/privacy}", "received_events_url": "https://api.github.com/users/rn4n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124080, "node_id": "MDU6TGFiZWwxOTEyNDA4MA==", "url": "https://api.github.com/repos/joke2k/faker/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}, {"id": 78625199, "node_id": "MDU6TGFiZWw3ODYyNTE5OQ==", "url": "https://api.github.com/repos/joke2k/faker/labels/provider", "name": "provider", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-26T21:26:30Z", "updated_at": "2020-02-26T15:51:39Z", "closed_at": "2020-02-26T15:51:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 3.0.0\r\n* OS: Windows 10 pro (x64)\r\n\r\nI'm using Faker to generate postcode using the pt_BR localization. The example on [`address` section](https://faker.readthedocs.io/en/latest/locales/pt_BR.html#faker-providers-address) shows a numeric sequence containing 8 numbers and that was what I expect.\r\n\r\n```python\r\nfake.postcode()\r\n# '35285968'\r\n```\r\n\r\nAnyway, I'm getting some problems in my tests because the output of this function sometimes returns a formatted postcode. Example:\r\n\r\n```python\r\nfake.postcode()\r\n# '35285968'    -- cool :D\r\n\r\nfake.postcode()\r\n# '35285-968'    -- sad :(\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would like to generate postcode exactly hows the documentation says, just numbers, without any formatting. As a temporary solution, I'm using a `replace` to remove any `-` present, but I would like to have a cleaner solution using just Faker. Maybe this \"formatted\" version can be specified by an argument in the `postcode` function. \r\n\r\n### Actual behavior\r\n\r\nGetting a non deterministic postcode, I don't know which type of postalcode format I will get.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1085", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1085/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1085/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1085/events", "html_url": "https://github.com/joke2k/faker/issues/1085", "id": 541347938, "node_id": "MDU6SXNzdWU1NDEzNDc5Mzg=", "number": 1085, "title": "Generation of Country Phone Code", "user": {"login": "macejiko", "id": 5689244, "node_id": "MDQ6VXNlcjU2ODkyNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5689244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macejiko", "html_url": "https://github.com/macejiko", "followers_url": "https://api.github.com/users/macejiko/followers", "following_url": "https://api.github.com/users/macejiko/following{/other_user}", "gists_url": "https://api.github.com/users/macejiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/macejiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macejiko/subscriptions", "organizations_url": "https://api.github.com/users/macejiko/orgs", "repos_url": "https://api.github.com/users/macejiko/repos", "events_url": "https://api.github.com/users/macejiko/events{/privacy}", "received_events_url": "https://api.github.com/users/macejiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-21T17:03:00Z", "updated_at": "2020-02-26T15:53:36Z", "closed_at": "2020-02-26T15:53:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to generate random country phone prefix from here: https://en.wikipedia.org/wiki/List_of_country_calling_codes \r\nResult should be: +213, +350, +56 etc. \r\n\r\nIs there a way to do this? \r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1083", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1083/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1083/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1083/events", "html_url": "https://github.com/joke2k/faker/issues/1083", "id": 539160737, "node_id": "MDU6SXNzdWU1MzkxNjA3Mzc=", "number": 1083, "title": "Revamping the Documentation", "user": {"login": "malefice", "id": 7114869, "node_id": "MDQ6VXNlcjcxMTQ4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7114869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malefice", "html_url": "https://github.com/malefice", "followers_url": "https://api.github.com/users/malefice/followers", "following_url": "https://api.github.com/users/malefice/following{/other_user}", "gists_url": "https://api.github.com/users/malefice/gists{/gist_id}", "starred_url": "https://api.github.com/users/malefice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malefice/subscriptions", "organizations_url": "https://api.github.com/users/malefice/orgs", "repos_url": "https://api.github.com/users/malefice/repos", "events_url": "https://api.github.com/users/malefice/events{/privacy}", "received_events_url": "https://api.github.com/users/malefice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-12-17T16:01:38Z", "updated_at": "2020-03-31T15:20:34Z", "closed_at": "2020-03-31T15:20:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the current way the provider method documentation is generated, the result lacks details and examples that will showcase the flexibility and capability of each provider method. I mentioned in #1074 about the idea of using `sphinx.ext.autodoc` to generate docs, and I already have some ideas on how to implement this, but I want to hear some thoughts and get some feedback.\r\n\r\nSince `build_docs` already traverse through each `Provider` class and its methods, we can change `build_docs` to write something like this for each provider class. This will autogenerate docs from the individual docstrings (class level and method level). We can also use `sphinx.ext.viewcode` to put links to the source code. \r\n\r\n```\r\n.. autoclass:: {{provider_class}}\r\n   :members: {{comma_separated_list_of_provider_methods}}\r\n   :inherited-members:\r\n   :undoc-members:\r\n```\r\n\r\nAs for sample code, we can probably use the `autodoc-process-docstring` hook to parse through examples in the docstring, and basically do what `build_docs` currently already does when generating dummy samples. The huge difference is that in this case, we should be able to write as many examples as we want, and let the docs building process evaluate and prettify the output. Of course, it is easier said than done, but I think it is well worth the effort that will solve all documentation woes.\r\n\r\nOf course if we go ahead with this style, we will need to write good docstrings for all existing provider methods, and we will also require contributors to write good docstrings moving forward. As for docstrings, we will also have to set a certain standard on how they should be written, e.g. reST vs Google vs numPy, and the format of the examples so we can write the parser.\r\n\r\nAnyway thoughts and feedback?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1080", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1080/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1080/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1080/events", "html_url": "https://github.com/joke2k/faker/issues/1080", "id": 536931421, "node_id": "MDU6SXNzdWU1MzY5MzE0MjE=", "number": 1080, "title": "Any Upgrade documentation for 3.0", "user": {"login": "abumalick", "id": 8377185, "node_id": "MDQ6VXNlcjgzNzcxODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8377185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abumalick", "html_url": "https://github.com/abumalick", "followers_url": "https://api.github.com/users/abumalick/followers", "following_url": "https://api.github.com/users/abumalick/following{/other_user}", "gists_url": "https://api.github.com/users/abumalick/gists{/gist_id}", "starred_url": "https://api.github.com/users/abumalick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abumalick/subscriptions", "organizations_url": "https://api.github.com/users/abumalick/orgs", "repos_url": "https://api.github.com/users/abumalick/repos", "events_url": "https://api.github.com/users/abumalick/events{/privacy}", "received_events_url": "https://api.github.com/users/abumalick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T11:51:49Z", "updated_at": "2019-12-12T12:46:36Z", "closed_at": "2019-12-12T12:46:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 3.0\r\n* OS: macOS using docker\r\n\r\nBrief summary of the issue goes here.\r\n\r\n### Steps to reproduce\r\n\r\nUpgrade a project that is using faker 2 to 3\r\n\r\n### Expected behavior\r\n\r\nHave some documentation to how to migrate our code\r\n\r\n### Actual behavior\r\n\r\nI don't find any documentation to fix my 371 failing tests \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1074", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1074/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1074/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1074/events", "html_url": "https://github.com/joke2k/faker/issues/1074", "id": 534582559, "node_id": "MDU6SXNzdWU1MzQ1ODI1NTk=", "number": 1074, "title": "Faker.random_number raises exception randomly", "user": {"login": "bontaurean", "id": 24439607, "node_id": "MDQ6VXNlcjI0NDM5NjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/24439607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bontaurean", "html_url": "https://github.com/bontaurean", "followers_url": "https://api.github.com/users/bontaurean/followers", "following_url": "https://api.github.com/users/bontaurean/following{/other_user}", "gists_url": "https://api.github.com/users/bontaurean/gists{/gist_id}", "starred_url": "https://api.github.com/users/bontaurean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bontaurean/subscriptions", "organizations_url": "https://api.github.com/users/bontaurean/orgs", "repos_url": "https://api.github.com/users/bontaurean/repos", "events_url": "https://api.github.com/users/bontaurean/events{/privacy}", "received_events_url": "https://api.github.com/users/bontaurean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-08T18:43:03Z", "updated_at": "2020-01-14T15:24:45Z", "closed_at": "2020-01-14T15:24:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 3.0.0\r\n\r\nI advise you to document methods parameters and add some kind of validations.\r\n\r\n### Actual behavior\r\n```\r\n>>> fake.random_number(fix_len=True)\r\n44805\r\n>>> fake.random_number(fix_len=True)\r\n9543\r\n>>> fake.random_number(fix_len=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<stdin>\", line 1, in <listcomp>\r\n  File \"...site-packages/faker/providers/__init__.py\", line 157, in random_number\r\n    pow(10, digits - 1), pow(10, digits) - 1)\r\n  File \"/usr/lib/python3.7/random.py\", line 222, in randint\r\n    return self.randrange(a, b+1)\r\n  File \"/usr/lib/python3.7/random.py\", line 186, in randrange\r\n    raise ValueError(\"non-integer arg 1 for randrange()\")\r\nValueError: non-integer arg 1 for randrange()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1063", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1063/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1063/events", "html_url": "https://github.com/joke2k/faker/issues/1063", "id": 528112639, "node_id": "MDU6SXNzdWU1MjgxMTI2Mzk=", "number": 1063, "title": "Python 2.7 EOL plans (Leaving feedback is encouraged)", "user": {"login": "malefice", "id": 7114869, "node_id": "MDQ6VXNlcjcxMTQ4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7114869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malefice", "html_url": "https://github.com/malefice", "followers_url": "https://api.github.com/users/malefice/followers", "following_url": "https://api.github.com/users/malefice/following{/other_user}", "gists_url": "https://api.github.com/users/malefice/gists{/gist_id}", "starred_url": "https://api.github.com/users/malefice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malefice/subscriptions", "organizations_url": "https://api.github.com/users/malefice/orgs", "repos_url": "https://api.github.com/users/malefice/repos", "events_url": "https://api.github.com/users/malefice/events{/privacy}", "received_events_url": "https://api.github.com/users/malefice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-25T14:11:47Z", "updated_at": "2020-01-14T18:13:33Z", "closed_at": "2020-01-14T18:13:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a little over a month, the PSF will end support for Python 2. @fcurella, what do you intend to do with this project concerning Python 2 EOL? Do you plan to retain support for a certain duration after the EOL date?\r\n\r\nIn any case, I can help with making everything Python 3 only, but I think `Faker` should have at least one last \"semi-significant\", if not significant, release that is Python 2 compatible for the poor souls who are stuck with Python 2. Your thoughts? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1061", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1061/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1061/events", "html_url": "https://github.com/joke2k/faker/issues/1061", "id": 525709534, "node_id": "MDU6SXNzdWU1MjU3MDk1MzQ=", "number": 1061, "title": "FactoryBoy: TypeError with numeric types", "user": {"login": "zahessi", "id": 37830204, "node_id": "MDQ6VXNlcjM3ODMwMjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/37830204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zahessi", "html_url": "https://github.com/zahessi", "followers_url": "https://api.github.com/users/zahessi/followers", "following_url": "https://api.github.com/users/zahessi/following{/other_user}", "gists_url": "https://api.github.com/users/zahessi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zahessi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zahessi/subscriptions", "organizations_url": "https://api.github.com/users/zahessi/orgs", "repos_url": "https://api.github.com/users/zahessi/repos", "events_url": "https://api.github.com/users/zahessi/events{/privacy}", "received_events_url": "https://api.github.com/users/zahessi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-20T10:23:01Z", "updated_at": "2019-11-20T10:50:13Z", "closed_at": "2019-11-20T10:50:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: latest FactoryBoy dependency (at the time of writing it is Faker==0.9.1)\r\n* OS: Ubuntu 18.04\r\n\r\nBrief summary of the issue goes here.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a factory with any numeric type. For e.g. we have attribute\r\n```\r\namount = Faker(\"pydecimal\", left_digits=9, right_digits=3, positive=True, min_value=Decimal(10),  max_value=Decimal(100))\r\n```\r\n\r\n### Expected behaviour\r\n\r\n`amount` should be generated with respect to `min_value` and `max_value` attributes\r\n\r\n### Actual behaviour\r\n\r\n`TypeError` is raised.\r\n```\r\ndef format(self, formatter, *args, **kwargs):\r\n        \"\"\"\r\n        This is a secure way to make a fake from another Provider.\r\n        \"\"\"\r\n        # TODO: data export?\r\n>       return self.get_formatter(formatter)(*args, **kwargs)\r\nE       TypeError: pydecimal() got an unexpected keyword argument 'min_value'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1060", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1060/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1060/events", "html_url": "https://github.com/joke2k/faker/issues/1060", "id": 525053733, "node_id": "MDU6SXNzdWU1MjUwNTM3MzM=", "number": 1060, "title": "zipcode_in_state for NY returns only one result", "user": {"login": "arielkaluzhny", "id": 16669587, "node_id": "MDQ6VXNlcjE2NjY5NTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/16669587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielkaluzhny", "html_url": "https://github.com/arielkaluzhny", "followers_url": "https://api.github.com/users/arielkaluzhny/followers", "following_url": "https://api.github.com/users/arielkaluzhny/following{/other_user}", "gists_url": "https://api.github.com/users/arielkaluzhny/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielkaluzhny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielkaluzhny/subscriptions", "organizations_url": "https://api.github.com/users/arielkaluzhny/orgs", "repos_url": "https://api.github.com/users/arielkaluzhny/repos", "events_url": "https://api.github.com/users/arielkaluzhny/events{/privacy}", "received_events_url": "https://api.github.com/users/arielkaluzhny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-19T14:44:04Z", "updated_at": "2020-07-08T14:59:26Z", "closed_at": "2020-07-08T14:59:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 2.0.2\r\n* OS: macOS Mojave (version 10.14.6)\r\n\r\nBrief summary of the issue goes here.\r\n\r\n### Steps to reproduce\r\n```python\r\nimport faker\r\n\r\nfake = faker.Faker()\r\nfake.zipcode_in_state(\"NY\")\r\nfake.zipcode_in_state(\"NY\")\r\n```\r\n\r\n### Expected behavior\r\nResults from the two calls to `zipcode_in_state` should return two different zipcodes.\r\n\r\n### Actual behavior\r\n`zipcode_in_state(\"NY\")` always returns '06390'. (Other states return different zipcodes as expected)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1056", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1056/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1056/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1056/events", "html_url": "https://github.com/joke2k/faker/issues/1056", "id": 523392882, "node_id": "MDU6SXNzdWU1MjMzOTI4ODI=", "number": 1056, "title": "Company details to Russian provider", "user": {"login": "Dexes", "id": 4026287, "node_id": "MDQ6VXNlcjQwMjYyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4026287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dexes", "html_url": "https://github.com/Dexes", "followers_url": "https://api.github.com/users/Dexes/followers", "following_url": "https://api.github.com/users/Dexes/following{/other_user}", "gists_url": "https://api.github.com/users/Dexes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dexes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dexes/subscriptions", "organizations_url": "https://api.github.com/users/Dexes/orgs", "repos_url": "https://api.github.com/users/Dexes/repos", "events_url": "https://api.github.com/users/Dexes/events{/privacy}", "received_events_url": "https://api.github.com/users/Dexes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T10:39:31Z", "updated_at": "2019-11-19T18:38:08Z", "closed_at": "2019-11-19T18:38:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to add company details to Russian provider\r\nPR: #1054 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1051", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1051/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1051/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1051/events", "html_url": "https://github.com/joke2k/faker/issues/1051", "id": 521634698, "node_id": "MDU6SXNzdWU1MjE2MzQ2OTg=", "number": 1051, "title": "locale 'ar_Ps' provides wrong country code", "user": {"login": "loeti82", "id": 8694371, "node_id": "MDQ6VXNlcjg2OTQzNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8694371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loeti82", "html_url": "https://github.com/loeti82", "followers_url": "https://api.github.com/users/loeti82/followers", "following_url": "https://api.github.com/users/loeti82/following{/other_user}", "gists_url": "https://api.github.com/users/loeti82/gists{/gist_id}", "starred_url": "https://api.github.com/users/loeti82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loeti82/subscriptions", "organizations_url": "https://api.github.com/users/loeti82/orgs", "repos_url": "https://api.github.com/users/loeti82/repos", "events_url": "https://api.github.com/users/loeti82/events{/privacy}", "received_events_url": "https://api.github.com/users/loeti82/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 78625199, "node_id": "MDU6TGFiZWw3ODYyNTE5OQ==", "url": "https://api.github.com/repos/joke2k/faker/labels/provider", "name": "provider", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T15:50:58Z", "updated_at": "2019-12-30T15:17:01Z", "closed_at": "2019-12-30T15:17:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: Faker==2.0.3\r\n* OS: NAME=\"Ubuntu\", VERSION=\"18.04.3 LTS (Bionic Beaver)\"\r\n\r\nThe provider for locale ar_PS provides the telephone country code instead of the ISO country code.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nPython 2.7.15+ (default, Oct  7 2019, 17:39:04) \r\n[GCC 7.4.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from faker import Faker\r\n>>> from faker.providers import address\r\n>>> fake = Faker()\r\n>>> fake.add_provider(address)\r\n>>> print(fake.country_code())\r\nAT\r\n>>> fake = Faker('ar_PS')\r\n>>> print(fake.country_code())\r\n00972\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nCountry Code in Letters as defined here: https://www.iso.org/obp/ui/#iso:code:3166:PS\r\n\r\n### Actual behavior\r\n\r\nTelephone Country Code provided\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1048", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1048/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1048/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1048/events", "html_url": "https://github.com/joke2k/faker/issues/1048", "id": 521176868, "node_id": "MDU6SXNzdWU1MjExNzY4Njg=", "number": 1048, "title": "Empty range bug with pyfloat", "user": {"login": "jcardali", "id": 13664362, "node_id": "MDQ6VXNlcjEzNjY0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/13664362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcardali", "html_url": "https://github.com/jcardali", "followers_url": "https://api.github.com/users/jcardali/followers", "following_url": "https://api.github.com/users/jcardali/following{/other_user}", "gists_url": "https://api.github.com/users/jcardali/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcardali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcardali/subscriptions", "organizations_url": "https://api.github.com/users/jcardali/orgs", "repos_url": "https://api.github.com/users/jcardali/repos", "events_url": "https://api.github.com/users/jcardali/events{/privacy}", "received_events_url": "https://api.github.com/users/jcardali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-11T20:43:04Z", "updated_at": "2019-11-12T16:22:35Z", "closed_at": "2019-11-12T16:22:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 2.0.3\r\n* OS: macOS 10.14.6 (Mojave)\r\n\r\nCalling `pyfloat` with `min_value` or `max_value` can result in both being set to the same thing, and causing errors. May have been introduced by #995.\r\n\r\n### Steps to reproduce\r\n```\r\nfor _ in range(1000):\r\n    faker.pyfloat(max_value=9999)\r\n```\r\n\r\nYou may have to try this a few times, or increase the range\r\n\r\n### Expected behavior\r\n\r\nFaker should handle this gracefully\r\n\r\n### Actual behavior\r\n\r\n`ValueError: empty range for randrange() (9999,9999, 0)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1040", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1040/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1040/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1040/events", "html_url": "https://github.com/joke2k/faker/issues/1040", "id": 519218045, "node_id": "MDU6SXNzdWU1MTkyMTgwNDU=", "number": 1040, "title": "BBAN for en_GB too short", "user": {"login": "Necrathex", "id": 882407, "node_id": "MDQ6VXNlcjg4MjQwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/882407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Necrathex", "html_url": "https://github.com/Necrathex", "followers_url": "https://api.github.com/users/Necrathex/followers", "following_url": "https://api.github.com/users/Necrathex/following{/other_user}", "gists_url": "https://api.github.com/users/Necrathex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Necrathex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Necrathex/subscriptions", "organizations_url": "https://api.github.com/users/Necrathex/orgs", "repos_url": "https://api.github.com/users/Necrathex/repos", "events_url": "https://api.github.com/users/Necrathex/events{/privacy}", "received_events_url": "https://api.github.com/users/Necrathex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}, {"id": 1258505653, "node_id": "MDU6TGFiZWwxMjU4NTA1NjUz", "url": "https://api.github.com/repos/joke2k/faker/labels/help%20wanted", "name": "help wanted", "color": "5cf9cd", "default": true, "description": ""}, {"id": 78625199, "node_id": "MDU6TGFiZWw3ODYyNTE5OQ==", "url": "https://api.github.com/repos/joke2k/faker/labels/provider", "name": "provider", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T11:49:27Z", "updated_at": "2019-11-08T19:53:49Z", "closed_at": "2019-11-08T19:53:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: v2.0.3\r\n* OS: linux\r\n\r\nNumeric part of the en_GB BBAN needs to be 14 digits long, it currently only returns 13, failing further validation.\r\n\r\n### Steps to reproduce\r\n\r\nInvoke `fake.iban()` or `fake.bban()` with the en_GB locale, an IBAN or BBAN with 1 digit missing is returned.\r\n\r\n### Expected behavior\r\n\r\nGB ibans should be 22 chars long: https://www.xe.com/ibancalculator/sample/?ibancountry=united kingdom\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1035", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1035/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1035/events", "html_url": "https://github.com/joke2k/faker/issues/1035", "id": 516790207, "node_id": "MDU6SXNzdWU1MTY3OTAyMDc=", "number": 1035, "title": "suggestion: support for ja_JP at faker.providers.job", "user": {"login": "shmokmt", "id": 32533860, "node_id": "MDQ6VXNlcjMyNTMzODYw", "avatar_url": "https://avatars1.githubusercontent.com/u/32533860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmokmt", "html_url": "https://github.com/shmokmt", "followers_url": "https://api.github.com/users/shmokmt/followers", "following_url": "https://api.github.com/users/shmokmt/following{/other_user}", "gists_url": "https://api.github.com/users/shmokmt/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmokmt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmokmt/subscriptions", "organizations_url": "https://api.github.com/users/shmokmt/orgs", "repos_url": "https://api.github.com/users/shmokmt/repos", "events_url": "https://api.github.com/users/shmokmt/events{/privacy}", "received_events_url": "https://api.github.com/users/shmokmt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shmokmt", "id": 32533860, "node_id": "MDQ6VXNlcjMyNTMzODYw", "avatar_url": "https://avatars1.githubusercontent.com/u/32533860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmokmt", "html_url": "https://github.com/shmokmt", "followers_url": "https://api.github.com/users/shmokmt/followers", "following_url": "https://api.github.com/users/shmokmt/following{/other_user}", "gists_url": "https://api.github.com/users/shmokmt/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmokmt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmokmt/subscriptions", "organizations_url": "https://api.github.com/users/shmokmt/orgs", "repos_url": "https://api.github.com/users/shmokmt/repos", "events_url": "https://api.github.com/users/shmokmt/events{/privacy}", "received_events_url": "https://api.github.com/users/shmokmt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shmokmt", "id": 32533860, "node_id": "MDQ6VXNlcjMyNTMzODYw", "avatar_url": "https://avatars1.githubusercontent.com/u/32533860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmokmt", "html_url": "https://github.com/shmokmt", "followers_url": "https://api.github.com/users/shmokmt/followers", "following_url": "https://api.github.com/users/shmokmt/following{/other_user}", "gists_url": "https://api.github.com/users/shmokmt/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmokmt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmokmt/subscriptions", "organizations_url": "https://api.github.com/users/shmokmt/orgs", "repos_url": "https://api.github.com/users/shmokmt/repos", "events_url": "https://api.github.com/users/shmokmt/events{/privacy}", "received_events_url": "https://api.github.com/users/shmokmt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-03T07:05:50Z", "updated_at": "2019-11-05T16:16:39Z", "closed_at": "2019-11-05T16:16:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I checked items of ja_JP but they are not that perfect.\r\nFor example, `faker.providers.job` doesn't correspond.\r\nSo I'd like to send a PR which I make compatible with ja_JP.\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1013", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1013/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1013/events", "html_url": "https://github.com/joke2k/faker/issues/1013", "id": 506885220, "node_id": "MDU6SXNzdWU1MDY4ODUyMjA=", "number": 1013, "title": "Generate master card number invalid", "user": {"login": "magiskboy", "id": 13352088, "node_id": "MDQ6VXNlcjEzMzUyMDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/13352088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magiskboy", "html_url": "https://github.com/magiskboy", "followers_url": "https://api.github.com/users/magiskboy/followers", "following_url": "https://api.github.com/users/magiskboy/following{/other_user}", "gists_url": "https://api.github.com/users/magiskboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/magiskboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magiskboy/subscriptions", "organizations_url": "https://api.github.com/users/magiskboy/orgs", "repos_url": "https://api.github.com/users/magiskboy/repos", "events_url": "https://api.github.com/users/magiskboy/events{/privacy}", "received_events_url": "https://api.github.com/users/magiskboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "magiskboy", "id": 13352088, "node_id": "MDQ6VXNlcjEzMzUyMDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/13352088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magiskboy", "html_url": "https://github.com/magiskboy", "followers_url": "https://api.github.com/users/magiskboy/followers", "following_url": "https://api.github.com/users/magiskboy/following{/other_user}", "gists_url": "https://api.github.com/users/magiskboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/magiskboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magiskboy/subscriptions", "organizations_url": "https://api.github.com/users/magiskboy/orgs", "repos_url": "https://api.github.com/users/magiskboy/repos", "events_url": "https://api.github.com/users/magiskboy/events{/privacy}", "received_events_url": "https://api.github.com/users/magiskboy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "magiskboy", "id": 13352088, "node_id": "MDQ6VXNlcjEzMzUyMDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/13352088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magiskboy", "html_url": "https://github.com/magiskboy", "followers_url": "https://api.github.com/users/magiskboy/followers", "following_url": "https://api.github.com/users/magiskboy/following{/other_user}", "gists_url": "https://api.github.com/users/magiskboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/magiskboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magiskboy/subscriptions", "organizations_url": "https://api.github.com/users/magiskboy/orgs", "repos_url": "https://api.github.com/users/magiskboy/repos", "events_url": "https://api.github.com/users/magiskboy/events{/privacy}", "received_events_url": "https://api.github.com/users/magiskboy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-10-14T21:32:50Z", "updated_at": "2019-10-17T15:19:18Z", "closed_at": "2019-10-17T15:19:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 2.0.2\r\n* OS: MacOS\r\n\r\nI validate master card number with Faker prodvider but they don't match with regex ^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$\r\nIf number begin with 2, it is one of 4 group and they generate 2610440153652. But length of string is 16, not 13\r\n\r\n### Steps to reproduce\r\n\r\n1. value = fake.credit_card_number(card_type='mastercard')\r\n2. regex = r'^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$' \r\n3. ret = re.fullmatch(regex, value)\r\n\r\n### Expected behavior\r\n\r\nret is not None\r\n\r\n### Actual behavior\r\n\r\nret is None\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1005", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1005/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1005/events", "html_url": "https://github.com/joke2k/faker/issues/1005", "id": 502931328, "node_id": "MDU6SXNzdWU1MDI5MzEzMjg=", "number": 1005, "title": "Proposal for enhancement of Swedish SSN values (Pers ID, Org ID & MOMS (VAT) ID)", "user": {"login": "michjnich", "id": 29822151, "node_id": "MDQ6VXNlcjI5ODIyMTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/29822151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michjnich", "html_url": "https://github.com/michjnich", "followers_url": "https://api.github.com/users/michjnich/followers", "following_url": "https://api.github.com/users/michjnich/following{/other_user}", "gists_url": "https://api.github.com/users/michjnich/gists{/gist_id}", "starred_url": "https://api.github.com/users/michjnich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michjnich/subscriptions", "organizations_url": "https://api.github.com/users/michjnich/orgs", "repos_url": "https://api.github.com/users/michjnich/repos", "events_url": "https://api.github.com/users/michjnich/events{/privacy}", "received_events_url": "https://api.github.com/users/michjnich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "michjnich", "id": 29822151, "node_id": "MDQ6VXNlcjI5ODIyMTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/29822151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michjnich", "html_url": "https://github.com/michjnich", "followers_url": "https://api.github.com/users/michjnich/followers", "following_url": "https://api.github.com/users/michjnich/following{/other_user}", "gists_url": "https://api.github.com/users/michjnich/gists{/gist_id}", "starred_url": "https://api.github.com/users/michjnich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michjnich/subscriptions", "organizations_url": "https://api.github.com/users/michjnich/orgs", "repos_url": "https://api.github.com/users/michjnich/repos", "events_url": "https://api.github.com/users/michjnich/events{/privacy}", "received_events_url": "https://api.github.com/users/michjnich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michjnich", "id": 29822151, "node_id": "MDQ6VXNlcjI5ODIyMTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/29822151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michjnich", "html_url": "https://github.com/michjnich", "followers_url": "https://api.github.com/users/michjnich/followers", "following_url": "https://api.github.com/users/michjnich/following{/other_user}", "gists_url": "https://api.github.com/users/michjnich/gists{/gist_id}", "starred_url": "https://api.github.com/users/michjnich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michjnich/subscriptions", "organizations_url": "https://api.github.com/users/michjnich/orgs", "repos_url": "https://api.github.com/users/michjnich/repos", "events_url": "https://api.github.com/users/michjnich/events{/privacy}", "received_events_url": "https://api.github.com/users/michjnich/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-10-05T07:54:04Z", "updated_at": "2019-10-18T14:22:32Z", "closed_at": "2019-10-18T14:22:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 2.0.2\r\n* OS: *\r\n\r\nI'd like to expand and correct some of the behaviour for Swedish ssn and VAT numbers, and add an option to return an organisation ID. \r\n\r\nSome info on how these codes work in Sweden:\r\n\r\n1. **Personal number (SSN)** - the code for this is largely correct, but I would like to add a \"long=False\" parameter to the call. Default behaviour would remain the same, when set to true it would return a 12-digit SSN, which includes the century digits for the year. Most systems actually use the long version of the SSN and it would be handy to get this returned directly.\r\n\r\n2. **Organisation number** - the code for this is mostly the same as the pers ID (SSN), but the \"month\" part of the number is 20 or higher. When taking 12 digit versions these are usually prefixed with \"16\".\r\n\r\n3. **VAT number** (VAT is also called MOMS in Sweden) -  This number is not just a random sequence of numbers in Sweden. The organisation number is part of this. So the pattern is usually SEnnnnnnnnnnss, where n= org ID and s=sequence number (usually 01, unless you are a sole trader with multiple businesses)\r\n\r\n..See wikipedia under Sweden for more info: https://en.wikipedia.org/wiki/VAT_identification_number\r\n\r\n### Expected behavior\r\n\r\n**Pers ID:**\r\n1.  Request a Personal number without setting any params\r\n2.  The 10 digit personal number is returned as it is today. \r\n3.  Request a personal number setting \"long=True\"\r\n4.  A 12 digit personal number is returned, which passes Swedish validation checks. \r\n\r\n**Org ID:**\r\n1.  Request an org ID setting no params or setting \"long=False\"\r\n2.  A valid 10 digit org ID is returned (same checkdigit validation as for pers ID), which passes Swedish validation checks.\r\n3.  Request an org ID setting \"long=True\"\r\n4.  A valid 12 digit org ID is returned, which passes Swedish validation checks. \r\n\r\n**VAT numbers:**\r\n1.  Request a VAT number\r\n2.  The VAT number returned \r\n3.  The VAT number passes the validation that the first 10 digits after the \"SE\" are a valid org ID.\r\n\r\nNote: Implementation of Org ID could either be as a new function, or using the existing ssn function with a parameter to set \"org_id=True\". Whichever is preferable.\r\n\r\n### Actual behavior\r\n\r\n**Pers ID:** Cannot return a long pers ID with 12 digits\r\n**Org ID:** Not an option today\r\n**VAT number:** currently returns a random string of digits", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1001", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1001/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1001/events", "html_url": "https://github.com/joke2k/faker/issues/1001", "id": 499883101, "node_id": "MDU6SXNzdWU0OTk4ODMxMDE=", "number": 1001, "title": "Internet provider does not work", "user": {"login": "jkob", "id": 17872135, "node_id": "MDQ6VXNlcjE3ODcyMTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/17872135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkob", "html_url": "https://github.com/jkob", "followers_url": "https://api.github.com/users/jkob/followers", "following_url": "https://api.github.com/users/jkob/following{/other_user}", "gists_url": "https://api.github.com/users/jkob/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkob/subscriptions", "organizations_url": "https://api.github.com/users/jkob/orgs", "repos_url": "https://api.github.com/users/jkob/repos", "events_url": "https://api.github.com/users/jkob/events{/privacy}", "received_events_url": "https://api.github.com/users/jkob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-29T08:56:40Z", "updated_at": "2019-09-29T19:53:17Z", "closed_at": "2019-09-29T19:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 2.0.2\r\n* OS: Windows 10 Home\r\n\r\nInternet providers methods returns errors\r\n\r\n### Steps to reproduce\r\n>>> from faker import Faker\r\n>>> from faker.providers import internet\r\n>>> fake = Faker()\r\n>>> fake.add_provider(internet)\r\n>>> fake.username()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'Generator' object has no attribute 'username'\r\n\r\n### Expected behavior\r\n\r\nShould return a username\r\n\r\n### Actual behavior\r\n\r\nErrors", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/1000", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/1000/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/1000/events", "html_url": "https://github.com/joke2k/faker/issues/1000", "id": 499758919, "node_id": "MDU6SXNzdWU0OTk3NTg5MTk=", "number": 1000, "title": "I can't generate random data by passing a fake instance", "user": {"login": "zhaoyongjie", "id": 2016594, "node_id": "MDQ6VXNlcjIwMTY1OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2016594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoyongjie", "html_url": "https://github.com/zhaoyongjie", "followers_url": "https://api.github.com/users/zhaoyongjie/followers", "following_url": "https://api.github.com/users/zhaoyongjie/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoyongjie/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoyongjie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoyongjie/subscriptions", "organizations_url": "https://api.github.com/users/zhaoyongjie/orgs", "repos_url": "https://api.github.com/users/zhaoyongjie/repos", "events_url": "https://api.github.com/users/zhaoyongjie/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoyongjie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-28T11:19:51Z", "updated_at": "2020-08-13T14:11:20Z", "closed_at": "2020-08-13T14:11:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 2.0.1\r\n* OS: OSX 10.13.4\r\n\r\nI can't generate random data by passing a fake instance. for after code, generate same Name value.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nimport csv\r\n\r\nfrom faker import Faker\r\n\r\nfake = Faker()\r\n_meta = {\r\n    \"Name\": fake.name(),\r\n}\r\n\r\nwith open('trial', 'wt') as fd:\r\n    writer = csv.DictWriter(fd, fieldnames=_meta.keys())\r\n    writer.writeheader()\r\n    for i in range(100):\r\n        writer.writerow(_meta)\r\n\r\n```\r\n\r\n### Expected behavior\r\nGiven a way to pass random seeds\r\n\r\n### Actual behavior\r\nIn the student.csv\r\n```\r\nName\r\nPaul Johnson\r\nPaul Johnson\r\nPaul Johnson\r\nPaul Johnson\r\nPaul Johnson\r\nPaul Johnson\r\nPaul Johnson\r\n.....\r\n.....\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/996", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/996/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/996/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/996/events", "html_url": "https://github.com/joke2k/faker/issues/996", "id": 494120322, "node_id": "MDU6SXNzdWU0OTQxMjAzMjI=", "number": 996, "title": "`invalid_ssn` provider doesn't yield reproducible values with the same seed", "user": {"login": "luser", "id": 286001, "node_id": "MDQ6VXNlcjI4NjAwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/286001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luser", "html_url": "https://github.com/luser", "followers_url": "https://api.github.com/users/luser/followers", "following_url": "https://api.github.com/users/luser/following{/other_user}", "gists_url": "https://api.github.com/users/luser/gists{/gist_id}", "starred_url": "https://api.github.com/users/luser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luser/subscriptions", "organizations_url": "https://api.github.com/users/luser/orgs", "repos_url": "https://api.github.com/users/luser/repos", "events_url": "https://api.github.com/users/luser/events{/privacy}", "received_events_url": "https://api.github.com/users/luser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-16T15:25:05Z", "updated_at": "2019-09-18T13:27:35Z", "closed_at": "2019-09-18T13:27:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 2.0.1\r\n* OS: macOS 10.14.6\r\n\r\nThe `invalid_ssn` provider doesn't yield reproducible values when used with the same random seed. It's not immediately noticeable but it does show up if you generate a number of values.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nPython 3.7.2 (default, Aug 29 2019, 16:32:19) \r\n[Clang 10.0.1 (clang-1001.0.46.4)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from faker import Faker\r\n>>> f1 = Faker()\r\n>>> f2 = Faker()\r\n>>> f1.seed_instance(1); f2.seed_instance(1)\r\n<faker.generator.Generator object at 0x10e36dcf8>\r\n<faker.generator.Generator object at 0x10e286320>\r\n>>> f1.invalid_ssn()\r\n'137-97-0000'\r\n>>> f2.invalid_ssn()\r\n'137-97-0000'\r\n>>> [f1.invalid_ssn() for _ in range(1000)] == [f2.invalid_ssn() for _ in range(1000)]\r\nFalse\r\n>>> f1.seed_instance(1); f2.seed_instance(1)\r\n<faker.generator.Generator object at 0x10e36dcf8>\r\n<faker.generator.Generator object at 0x10e286320>\r\n>>> while True:\r\n...   a = f1.invalid_ssn()\r\n...   b = f2.invalid_ssn()\r\n...   if a != b:\r\n...     print(f\"{a} != {b}\")\r\n...     break\r\n... \r\n923-67-5200 != 923-69-5200\r\n```\r\n\r\n### Expected behavior\r\n\r\nWith the same seed `invalid_ssn` should yield the same series of values.\r\n\r\n### Actual behavior\r\n\r\nThe series of values differ.\r\n\r\nFrom briefly looking at the code I'd guess the problem is the use of `random.choice` here which would use the global RNG instead of the instance RNG:\r\nhttps://github.com/joke2k/faker/blob/cfffeb82086db9d8519c8db4f93b833316062629/faker/providers/ssn/en_US/__init__.py#L199 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/994", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/994/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/994/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/994/events", "html_url": "https://github.com/joke2k/faker/issues/994", "id": 490358858, "node_id": "MDU6SXNzdWU0OTAzNTg4NTg=", "number": 994, "title": "pyfloat producing values above max_value", "user": {"login": "fgs-dbudwin", "id": 14611316, "node_id": "MDQ6VXNlcjE0NjExMzE2", "avatar_url": "https://avatars3.githubusercontent.com/u/14611316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgs-dbudwin", "html_url": "https://github.com/fgs-dbudwin", "followers_url": "https://api.github.com/users/fgs-dbudwin/followers", "following_url": "https://api.github.com/users/fgs-dbudwin/following{/other_user}", "gists_url": "https://api.github.com/users/fgs-dbudwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgs-dbudwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgs-dbudwin/subscriptions", "organizations_url": "https://api.github.com/users/fgs-dbudwin/orgs", "repos_url": "https://api.github.com/users/fgs-dbudwin/repos", "events_url": "https://api.github.com/users/fgs-dbudwin/events{/privacy}", "received_events_url": "https://api.github.com/users/fgs-dbudwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-06T14:29:05Z", "updated_at": "2019-09-06T21:52:03Z", "closed_at": "2019-09-06T21:52:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 2.0.1\r\n* OS: Windows 10\r\n\r\nCalling `pyfloat` with the `max_value` set can produce values above `max_value` leading to issues.\r\n\r\n### Steps to reproduce\r\n\r\nRun my example code below.\r\n\r\n### Expected behavior\r\n\r\nGiven my following example, I would expect to _only_ see numbers in the range `1 <= x <= 2`.\r\n\r\n```\r\nfor _ in range(25):\r\n    print(faker.pyfloat(min_value=1, max_value=2))\r\n```\r\n\r\n### Actual behavior\r\n\r\nHowever, my example will produce values in the range `1 <= x < 3`.  This behavior is very confusing and unexpected.  Output I got from running my above example:\r\n\r\n```\r\n1.200055\r\n2.709\r\n2.319785\r\n2.773763416717\r\n1.521\r\n1.9\r\n2.52454\r\n2.91\r\n1.87016\r\n2.35457\r\n1.92215\r\n1.7\r\n2.461453\r\n1.922252943\r\n1.416632\r\n1.448\r\n2.0\r\n1.5\r\n2.31\r\n2.5114\r\n2.18\r\n1.8\r\n2.12503540581\r\n2.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/988", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/988/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/988/events", "html_url": "https://github.com/joke2k/faker/issues/988", "id": 483935888, "node_id": "MDU6SXNzdWU0ODM5MzU4ODg=", "number": 988, "title": "suggestion: pytimezone", "user": {"login": "OJFord", "id": 3946014, "node_id": "MDQ6VXNlcjM5NDYwMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3946014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OJFord", "html_url": "https://github.com/OJFord", "followers_url": "https://api.github.com/users/OJFord/followers", "following_url": "https://api.github.com/users/OJFord/following{/other_user}", "gists_url": "https://api.github.com/users/OJFord/gists{/gist_id}", "starred_url": "https://api.github.com/users/OJFord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OJFord/subscriptions", "organizations_url": "https://api.github.com/users/OJFord/orgs", "repos_url": "https://api.github.com/users/OJFord/repos", "events_url": "https://api.github.com/users/OJFord/events{/privacy}", "received_events_url": "https://api.github.com/users/OJFord/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124080, "node_id": "MDU6TGFiZWwxOTEyNDA4MA==", "url": "https://api.github.com/repos/joke2k/faker/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 78625199, "node_id": "MDU6TGFiZWw3ODYyNTE5OQ==", "url": "https://api.github.com/repos/joke2k/faker/labels/provider", "name": "provider", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-22T11:25:05Z", "updated_at": "2020-06-08T17:09:16Z", "closed_at": "2020-06-08T17:09:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In addition to the currently available [timezone](), it would be very useful* to have a similar python object faker, something like:\r\n```python\r\nimport pytz\r\n\r\nclass TheExistingPythonProvider:\r\n\r\n    def pytimezone(self, **kwargs):\r\n        return pytz.timezone(self.generator.timezone(**kwargs))\r\n```\r\n\r\nFor an example use-case, see:\r\n\r\n\\* FactoryBoy/factory_boy#643", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/981", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/981/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/981/events", "html_url": "https://github.com/joke2k/faker/issues/981", "id": 468410553, "node_id": "MDU6SXNzdWU0Njg0MTA1NTM=", "number": 981, "title": "The docs specify the wrong arguments for `pyint()`", "user": {"login": "blackrobot", "id": 85895, "node_id": "MDQ6VXNlcjg1ODk1", "avatar_url": "https://avatars1.githubusercontent.com/u/85895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackrobot", "html_url": "https://github.com/blackrobot", "followers_url": "https://api.github.com/users/blackrobot/followers", "following_url": "https://api.github.com/users/blackrobot/following{/other_user}", "gists_url": "https://api.github.com/users/blackrobot/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackrobot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackrobot/subscriptions", "organizations_url": "https://api.github.com/users/blackrobot/orgs", "repos_url": "https://api.github.com/users/blackrobot/repos", "events_url": "https://api.github.com/users/blackrobot/events{/privacy}", "received_events_url": "https://api.github.com/users/blackrobot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-16T02:07:30Z", "updated_at": "2019-11-14T16:27:14Z", "closed_at": "2019-11-14T16:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: v2.0.0\r\n* OS: Debian\r\n\r\nBefore the v1.0.8 release, the `pyint()` generator accepted the arguments `min` and `max`. The keywords for this method were changed in the v1.0.8 release to `min_value` and `max_value`.\r\n\r\nThe commit for this change is here:\r\nhttps://github.com/joke2k/faker/commit/16e164c45268a2e81f600a73fb479e864306dfff\r\n\r\n### Steps to reproduce\r\n\r\n1. Use `fake.pyint` example from docs: https://faker.readthedocs.io/en/master/providers/faker.providers.python.html\r\n\r\n```python\r\n>>> fake.pyint(min=0, max=9999, step=1)\r\nTypeError: pyint() got an unexpected keyword argument 'min'\r\n\r\n>>> fake.pyint(min_value=0, max_value=9999, step=1)\r\n1234\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/976", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/976/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/976/events", "html_url": "https://github.com/joke2k/faker/issues/976", "id": 461614559, "node_id": "MDU6SXNzdWU0NjE2MTQ1NTk=", "number": 976, "title": "How to change locale?", "user": {"login": "zd-project", "id": 11206745, "node_id": "MDQ6VXNlcjExMjA2NzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/11206745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zd-project", "html_url": "https://github.com/zd-project", "followers_url": "https://api.github.com/users/zd-project/followers", "following_url": "https://api.github.com/users/zd-project/following{/other_user}", "gists_url": "https://api.github.com/users/zd-project/gists{/gist_id}", "starred_url": "https://api.github.com/users/zd-project/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zd-project/subscriptions", "organizations_url": "https://api.github.com/users/zd-project/orgs", "repos_url": "https://api.github.com/users/zd-project/repos", "events_url": "https://api.github.com/users/zd-project/events{/privacy}", "received_events_url": "https://api.github.com/users/zd-project/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-27T15:59:17Z", "updated_at": "2019-12-04T15:35:36Z", "closed_at": "2019-12-04T15:35:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Faker version: 1.0.7\r\n\r\nI don't see an API exposed to change locale for a Faker object programatically. I'm wondering if it's possible to do so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/973", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/973/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/973/events", "html_url": "https://github.com/joke2k/faker/issues/973", "id": 459455226, "node_id": "MDU6SXNzdWU0NTk0NTUyMjY=", "number": 973, "title": "problem with importlib_metadata", "user": {"login": "torm89", "id": 5539323, "node_id": "MDQ6VXNlcjU1MzkzMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5539323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/torm89", "html_url": "https://github.com/torm89", "followers_url": "https://api.github.com/users/torm89/followers", "following_url": "https://api.github.com/users/torm89/following{/other_user}", "gists_url": "https://api.github.com/users/torm89/gists{/gist_id}", "starred_url": "https://api.github.com/users/torm89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/torm89/subscriptions", "organizations_url": "https://api.github.com/users/torm89/orgs", "repos_url": "https://api.github.com/users/torm89/repos", "events_url": "https://api.github.com/users/torm89/events{/privacy}", "received_events_url": "https://api.github.com/users/torm89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-22T09:11:52Z", "updated_at": "2019-07-12T20:21:51Z", "closed_at": "2019-07-12T20:21:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There has been a problem with tests in python3.5's windows environment. Setup.py can't build `importlib_metadata` package for source and because of that all `appveyor` test failed.\r\n\r\n### Steps to reproduce\r\n\r\n1. Run `appveyor` tests\r\n\r\n### Expected behavior\r\n\r\nAll tests should pass.\r\n\r\n### Actual behavior\r\n\r\nTests for python3.5 in windows environment fail.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/970", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/970/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/970/events", "html_url": "https://github.com/joke2k/faker/issues/970", "id": 457894044, "node_id": "MDU6SXNzdWU0NTc4OTQwNDQ=", "number": 970, "title": "Overly restrictive freezegun and random2 dependencies", "user": {"login": "timokau", "id": 3799330, "node_id": "MDQ6VXNlcjM3OTkzMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3799330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timokau", "html_url": "https://github.com/timokau", "followers_url": "https://api.github.com/users/timokau/followers", "following_url": "https://api.github.com/users/timokau/following{/other_user}", "gists_url": "https://api.github.com/users/timokau/gists{/gist_id}", "starred_url": "https://api.github.com/users/timokau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timokau/subscriptions", "organizations_url": "https://api.github.com/users/timokau/orgs", "repos_url": "https://api.github.com/users/timokau/repos", "events_url": "https://api.github.com/users/timokau/events{/privacy}", "received_events_url": "https://api.github.com/users/timokau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-19T09:07:39Z", "updated_at": "2019-07-12T14:46:55Z", "closed_at": "2019-07-12T14:46:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently freezegun and random2 are pinned to exact versions:\r\n\r\nhttps://github.com/joke2k/faker/blob/c412d56e6a8f3681cfa1b75ef6ed47bc9798825d/setup.py#L77\r\nhttps://github.com/joke2k/faker/blob/c412d56e6a8f3681cfa1b75ef6ed47bc9798825d/setup.py#L78\r\n\r\nIs there any reason for that? Would there really be problems with `freezegun` 0.3.12? This kind of version pinning is hard to match for distribution packagers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/969", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/969/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/969/events", "html_url": "https://github.com/joke2k/faker/issues/969", "id": 457749566, "node_id": "MDU6SXNzdWU0NTc3NDk1NjY=", "number": 969, "title": "A way to take unique values from a list on demand", "user": {"login": "x-yuri", "id": 730588, "node_id": "MDQ6VXNlcjczMDU4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/730588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x-yuri", "html_url": "https://github.com/x-yuri", "followers_url": "https://api.github.com/users/x-yuri/followers", "following_url": "https://api.github.com/users/x-yuri/following{/other_user}", "gists_url": "https://api.github.com/users/x-yuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/x-yuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x-yuri/subscriptions", "organizations_url": "https://api.github.com/users/x-yuri/orgs", "repos_url": "https://api.github.com/users/x-yuri/repos", "events_url": "https://api.github.com/users/x-yuri/events{/privacy}", "received_events_url": "https://api.github.com/users/x-yuri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-19T00:14:00Z", "updated_at": "2019-06-19T17:02:33Z", "closed_at": "2019-06-19T17:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Actually, this is a question. Hopefully that's okay.\r\n\r\nI'd like to do on back end as I've done on front end. There I have a method that returns unique names. For that it has a list that is populated and shuffled before each test.\r\n\r\nI could probably get away with `random_sample()`, but I'd like to retrieve values on demand. Adding state to the fake (provider) is probably not a good idea. Although not sure why. I'm going to post a solution probably on the morrow, but if you've got any suggestions, you're welcome.\r\n\r\nOn a side note, there's a [typing error][1]:\r\n\r\n> Returns a list of random unique elements **for** the specified length.\r\n\r\n[1]: https://github.com/joke2k/faker/blob/c412d56e6a8f3681cfa1b75ef6ed47bc9798825d/faker/providers/__init__.py#L245", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/967", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/967/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/967/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/967/events", "html_url": "https://github.com/joke2k/faker/issues/967", "id": 453832714, "node_id": "MDU6SXNzdWU0NTM4MzI3MTQ=", "number": 967, "title": "Missing logic for generating Mexican SSN", "user": {"login": "edgarrmondragon", "id": 16805946, "node_id": "MDQ6VXNlcjE2ODA1OTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/16805946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarrmondragon", "html_url": "https://github.com/edgarrmondragon", "followers_url": "https://api.github.com/users/edgarrmondragon/followers", "following_url": "https://api.github.com/users/edgarrmondragon/following{/other_user}", "gists_url": "https://api.github.com/users/edgarrmondragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarrmondragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarrmondragon/subscriptions", "organizations_url": "https://api.github.com/users/edgarrmondragon/orgs", "repos_url": "https://api.github.com/users/edgarrmondragon/repos", "events_url": "https://api.github.com/users/edgarrmondragon/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarrmondragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-08T20:28:49Z", "updated_at": "2019-07-12T14:47:55Z", "closed_at": "2019-07-12T14:47:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The format for the Mexican SSN should be 11 digits:\r\n\r\n* The first two digits represent the office where the person was registered.\r\n* The next two digits are the year when the person was registered to social security.\r\n* The next two digits are the year of birth for the person.\r\n* The next four digits are a sequential number assigned by the registration office.\r\n* The last digit is a checksum.\r\n\r\n### Steps to reproduce\r\n\r\n```python\r\nfrom faker import Faker\r\nfake = Faker('es_MX')\r\nprint(fake.ssn()  # 105-90-6991)\r\n```\r\nThe [docs](https://faker.readthedocs.io/en/master/locales/es_MX.html#faker-providers-ssn) reflect this error.\r\n\r\n### Expected behavior\r\n\r\nThe SSN for locale `\"es_MX\"` should follow the format described above.\r\n\r\n```python\r\nfrom faker import Faker\r\nfake = Faker('es_MX')\r\nprint(fake.ssn()  # 92919084431)\r\n```\r\n\r\n### Actual behavior\r\n\r\nThe SSN format for `\"es_MX\"` is currently `'##-##-####'`.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/961", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/961/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/961/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/961/events", "html_url": "https://github.com/joke2k/faker/issues/961", "id": 447281725, "node_id": "MDU6SXNzdWU0NDcyODE3MjU=", "number": 961, "title": "No function to return an invalid US format SSN.", "user": {"login": "darrylwhiting", "id": 8332233, "node_id": "MDQ6VXNlcjgzMzIyMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrylwhiting", "html_url": "https://github.com/darrylwhiting", "followers_url": "https://api.github.com/users/darrylwhiting/followers", "following_url": "https://api.github.com/users/darrylwhiting/following{/other_user}", "gists_url": "https://api.github.com/users/darrylwhiting/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrylwhiting/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrylwhiting/subscriptions", "organizations_url": "https://api.github.com/users/darrylwhiting/orgs", "repos_url": "https://api.github.com/users/darrylwhiting/repos", "events_url": "https://api.github.com/users/darrylwhiting/events{/privacy}", "received_events_url": "https://api.github.com/users/darrylwhiting/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T18:29:35Z", "updated_at": "2019-11-11T16:35:38Z", "closed_at": "2019-11-11T16:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: v0.8.17+\r\n* OS: N/A\r\n\r\nWhen an invalid en_US format SSN is desired, there is no function to return an invalid en_US format SSN.\r\n\r\n### Steps to reproduce\r\n\r\n1. N/A\r\n\r\n### Expected behavior\r\n\r\nAlong with generating valid United States' EIN, ITIN, and SSNs, there should be a function to generate an invalid US format SSN, which is also not a valid ITIN. An invalid SSN assist teams with negative testing for applications or code which consume en_US format SSNs.\r\n\r\n### Actual behavior\r\n\r\nNo function for returning an invalid en_US format SSN is available.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/960", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/960/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/960/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/960/events", "html_url": "https://github.com/joke2k/faker/issues/960", "id": 446253341, "node_id": "MDU6SXNzdWU0NDYyNTMzNDE=", "number": 960, "title": "TestPyfloat failed", "user": {"login": "torm89", "id": 5539323, "node_id": "MDQ6VXNlcjU1MzkzMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5539323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/torm89", "html_url": "https://github.com/torm89", "followers_url": "https://api.github.com/users/torm89/followers", "following_url": "https://api.github.com/users/torm89/following{/other_user}", "gists_url": "https://api.github.com/users/torm89/gists{/gist_id}", "starred_url": "https://api.github.com/users/torm89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/torm89/subscriptions", "organizations_url": "https://api.github.com/users/torm89/orgs", "repos_url": "https://api.github.com/users/torm89/repos", "events_url": "https://api.github.com/users/torm89/events{/privacy}", "received_events_url": "https://api.github.com/users/torm89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-20T18:33:42Z", "updated_at": "2019-05-25T13:43:14Z", "closed_at": "2019-05-25T13:43:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Faker version: 1.0.7\r\n* OS: ubuntu 16.04\r\n\r\nI want to add a new features to a fake (`pesel` from `faker.providers.person.pl_PL.Provider`). I can't do that because `tests.providers.test_python.TestPyfloat` failed.\r\n\r\n```\r\n__________________ TestPyfloat.test_right_digits ___________________________\r\n\r\nself = <tests.providers.test_python.TestPyfloat testMethod=test_right_digits>\r\n\r\n    def test_right_digits(self):\r\n        expected_right_digits = 10\r\n    \r\n        result = self.factory.pyfloat(right_digits=expected_right_digits)\r\n    \r\n        right_digits = len(str(result).split('.')[1])\r\n    \r\n>       self.assertGreaterEqual(expected_right_digits, right_digits)\r\nE       AssertionError: 10 not greater than or equal to 15\r\n\r\ntests/providers/test_python.py:63: AssertionError\r\n```\r\n\r\nnew version of pesel function:\r\n```python\r\n    def pesel(self, date_of_birth=None, sex=None):\r\n        \"\"\"\r\n        Returns 11 characters of Universal Electronic System for Registration of the Population.\r\n        Polish: Powszechny Elektroniczny System Ewidencji Ludno\u015bci.\r\n\r\n        PESEL has 11 digits which identifies just one person.\r\n        Month: if person was born in 1900-2000, december is 12. If person was born > 2000, we have to add 20 to month,\r\n        so december is 32.\r\n        Person id: last digit identifies person's sex. Even for females, odd for males.\r\n\r\n        https://en.wikipedia.org/wiki/PESEL\r\n        \"\"\"\r\n        if date_of_birth is None:\r\n            date_of_birth = self.generator.date_of_birth()\r\n\r\n        pesel_date = '{year}{month:02d}{day:02d}'.format(\r\n            year=date_of_birth.year, day=date_of_birth.day,\r\n            month=date_of_birth.month if date_of_birth.year < 2000 else date_of_birth.month + 20)\r\n        pesel_date = pesel_date[2:]\r\n\r\n        pesel_seria = self.random_int(1, 999)\r\n        if sex == 'M':\r\n            pesel_sex = self.random_int(1, 9, 2)\r\n        elif sex == 'F':\r\n            pesel_sex = self.random_int(0, 8, 2)\r\n        else:\r\n            pesel_sex = self.random_int(0, 9)\r\n\r\n        pesel = '{date}{seria:03d}{sex}'.format(date=pesel_date, seria=pesel_seria, sex=pesel_sex)\r\n        pesel += str(generate_pesel_checksum_value(pesel))\r\n\r\n        return pesel\r\n```\r\n\r\ntests:\r\n```python\r\n    def test_pesel_number_length(self):\r\n        assert len(self.factory.pesel()) == 11\r\n        assert len(self.factory.pesel(datetime.date(1959, 12, 1))) == 11\r\n        assert len(self.factory.pesel(sex='F')) == 11\r\n        assert len(self.factory.pesel(datetime.date.today(), 'M')) == 11\r\n\r\n    def test_pesel_number_female(self):\r\n        for i in range(12):\r\n            assert int(self.factory.pesel(datetime.date(1989, 1, 12), 'F')[9]) % 2 == 0\r\n\r\n    def test_pesel_number_male(self):\r\n        for i in range(12):\r\n            assert int(self.factory.pesel(datetime.date(1959, 11, 22), 'M')[9]) % 2 == 1\r\n\r\n    def test_pesel_number_born_before_2000(self):\r\n        date = datetime.date(1979, 6, 2)\r\n        assert date.strftime('%y%m%d') == self.factory.pesel(date)[:6]\r\n\r\n        date = datetime.date(1999, 1, 29)\r\n        assert date.strftime('%y%m%d') == self.factory.pesel(date)[:6]\r\n\r\n    def test_pesel_number_born_after_2000(self):\r\n        date = datetime.date(2000, 3, 12)\r\n        pesel = self.factory.pesel(date)\r\n        assert date.strftime('%y%d') == pesel[:2] + pesel[4:6]\r\n        assert date.month + 20 == int(pesel[2:4])\r\n\r\n        date = datetime.date(2011, 12, 3)\r\n        pesel = self.factory.pesel(date)\r\n        assert date.strftime('%y%d') == pesel[:2] + pesel[4:6]\r\n        assert date.month + 20 == int(pesel[2:4])\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. download branch `pesel_new_features` from my fork `git@github.com:tomaszrycz/faker.git`\r\n2. runs tests\r\n\r\n### Expected behavior\r\n\r\nAll tests should pass.\r\n\r\n### Actual behavior\r\n\r\nThe test_right_digits failed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/953", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/953/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/953/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/953/events", "html_url": "https://github.com/joke2k/faker/issues/953", "id": 442552339, "node_id": "MDU6SXNzdWU0NDI1NTIzMzk=", "number": 953, "title": "CHANGELOG.rst - nothing for version 1.0.6", "user": {"login": "uri-rodberg", "id": 12808124, "node_id": "MDQ6VXNlcjEyODA4MTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/12808124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uri-rodberg", "html_url": "https://github.com/uri-rodberg", "followers_url": "https://api.github.com/users/uri-rodberg/followers", "following_url": "https://api.github.com/users/uri-rodberg/following{/other_user}", "gists_url": "https://api.github.com/users/uri-rodberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/uri-rodberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uri-rodberg/subscriptions", "organizations_url": "https://api.github.com/users/uri-rodberg/orgs", "repos_url": "https://api.github.com/users/uri-rodberg/repos", "events_url": "https://api.github.com/users/uri-rodberg/events{/privacy}", "received_events_url": "https://api.github.com/users/uri-rodberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-10T06:04:48Z", "updated_at": "2019-05-10T14:50:24Z", "closed_at": "2019-05-10T14:50:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "What are the changes in version 1.0.6?\r\n\r\n- I didn't find anything in CHANGELOG.rst", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/952", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/952/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/952/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/952/events", "html_url": "https://github.com/joke2k/faker/issues/952", "id": 441682707, "node_id": "MDU6SXNzdWU0NDE2ODI3MDc=", "number": 952, "title": "v1.0.6 is not in PyPi", "user": {"login": "pietariheinovincit", "id": 47523868, "node_id": "MDQ6VXNlcjQ3NTIzODY4", "avatar_url": "https://avatars2.githubusercontent.com/u/47523868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietariheinovincit", "html_url": "https://github.com/pietariheinovincit", "followers_url": "https://api.github.com/users/pietariheinovincit/followers", "following_url": "https://api.github.com/users/pietariheinovincit/following{/other_user}", "gists_url": "https://api.github.com/users/pietariheinovincit/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietariheinovincit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietariheinovincit/subscriptions", "organizations_url": "https://api.github.com/users/pietariheinovincit/orgs", "repos_url": "https://api.github.com/users/pietariheinovincit/repos", "events_url": "https://api.github.com/users/pietariheinovincit/events{/privacy}", "received_events_url": "https://api.github.com/users/pietariheinovincit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T11:17:04Z", "updated_at": "2019-05-09T05:24:06Z", "closed_at": "2019-05-09T05:24:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that the latest update has not been released in PyPi: https://pypi.org/project/Faker/#history", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/949", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/949/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/949/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/949/events", "html_url": "https://github.com/joke2k/faker/issues/949", "id": 437370805, "node_id": "MDU6SXNzdWU0MzczNzA4MDU=", "number": 949, "title": "Faker.timezone() produced timezones that can't be handled by Pytz", "user": {"login": "blairg23", "id": 6225764, "node_id": "MDQ6VXNlcjYyMjU3NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6225764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blairg23", "html_url": "https://github.com/blairg23", "followers_url": "https://api.github.com/users/blairg23/followers", "following_url": "https://api.github.com/users/blairg23/following{/other_user}", "gists_url": "https://api.github.com/users/blairg23/gists{/gist_id}", "starred_url": "https://api.github.com/users/blairg23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blairg23/subscriptions", "organizations_url": "https://api.github.com/users/blairg23/orgs", "repos_url": "https://api.github.com/users/blairg23/repos", "events_url": "https://api.github.com/users/blairg23/events{/privacy}", "received_events_url": "https://api.github.com/users/blairg23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 410774206, "node_id": "MDU6TGFiZWw0MTA3NzQyMDY=", "url": "https://api.github.com/repos/joke2k/faker/labels/waiting%20on%20feedback", "name": "waiting on feedback", "color": "FF8000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-25T19:54:51Z", "updated_at": "2019-04-26T19:08:34Z", "closed_at": "2019-04-26T19:08:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Brief summary of the issue goes here.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nIn [1]: import pytz                                                                                  \r\n\r\nIn [2]: from faker import Faker\r\n\r\nIn [3]: fake = Faker()\r\n\r\nIn [4]: timezone = fake.timezone()\r\n\r\nIn [5]: pytz_timezone = pytz.timezone(timezone)\r\n\r\n---------------------------------------------------------------------------\r\nUnknownTimeZoneError                      Traceback (most recent call last)\r\n<ipython-input-2-d744b31c47ff> in <module>\r\n----> 1 pytz.timezone('Asia/Shangri-La')\r\n\r\n~/.virtualenvs/tomis/lib/python3.6/site-packages/pytz/__init__.py in timezone(zone)\r\n    179                 fp.close()\r\n    180         else:\r\n--> 181             raise UnknownTimeZoneError(zone)\r\n    182 \r\n    183     return _tzinfo_cache[zone]\r\n\r\nUnknownTimeZoneError: 'Asia/Shangri-La'\r\n```\r\n\r\n### Expected behavior\r\n\r\nPytz should be able to handle the faked timezone.\r\n\r\n### Actual behavior\r\n\r\nPytz was not able to handle the faked timezone because it wasn't a real timezone.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/946", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/946/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/946/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/946/events", "html_url": "https://github.com/joke2k/faker/issues/946", "id": 435493001, "node_id": "MDU6SXNzdWU0MzU0OTMwMDE=", "number": 946, "title": "image_placeholder_services contains dead service", "user": {"login": "Monstrofil", "id": 8678392, "node_id": "MDQ6VXNlcjg2NzgzOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8678392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Monstrofil", "html_url": "https://github.com/Monstrofil", "followers_url": "https://api.github.com/users/Monstrofil/followers", "following_url": "https://api.github.com/users/Monstrofil/following{/other_user}", "gists_url": "https://api.github.com/users/Monstrofil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Monstrofil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Monstrofil/subscriptions", "organizations_url": "https://api.github.com/users/Monstrofil/orgs", "repos_url": "https://api.github.com/users/Monstrofil/repos", "events_url": "https://api.github.com/users/Monstrofil/events{/privacy}", "received_events_url": "https://api.github.com/users/Monstrofil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-21T09:40:22Z", "updated_at": "2019-04-22T14:24:44Z", "closed_at": "2019-04-22T14:24:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like https://placeholdit.imgix.net/ does not work anymore, I propose to remove it.\r\n\r\n### Steps to reproduce\r\n\r\n1. use fake.image_url()\r\n2. sometimes you get url like https://placeholdit.imgix.net/~text?txtsize=55&txt=320x320&w=320&h=32\r\n\r\n\r\n### Expected behavior\r\n\r\nUrl must be valid\r\n\r\n### Actual behavior\r\n\r\nLink does not work\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/945", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/945/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/945/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/945/events", "html_url": "https://github.com/joke2k/faker/issues/945", "id": 434632726, "node_id": "MDU6SXNzdWU0MzQ2MzI3MjY=", "number": 945, "title": "The doc shows no arguments for `pyint()`", "user": {"login": "ThibaultLemaire", "id": 21345269, "node_id": "MDQ6VXNlcjIxMzQ1MjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/21345269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibaultLemaire", "html_url": "https://github.com/ThibaultLemaire", "followers_url": "https://api.github.com/users/ThibaultLemaire/followers", "following_url": "https://api.github.com/users/ThibaultLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/ThibaultLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibaultLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibaultLemaire/subscriptions", "organizations_url": "https://api.github.com/users/ThibaultLemaire/orgs", "repos_url": "https://api.github.com/users/ThibaultLemaire/repos", "events_url": "https://api.github.com/users/ThibaultLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibaultLemaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-18T07:41:17Z", "updated_at": "2019-04-18T20:55:32Z", "closed_at": "2019-04-18T20:55:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use faker to generate integers for testing so I can seed it for reproducibility. But when reading the doc, there is no mention of parameters to the `pyint()` generator. At first I took it as gospel truth that `pyint()` takes no arguments, grumbled, then went ahead and used `random.randint()`. But then I went back and thought \"that's impossible: there must be at least a `min` and `max` argument to that generator\". And looking at the source, indeed there is. So I think the doc should be updated for idiots like me.\r\n\r\n### Steps to reproduce\r\n\r\n1. [Open the doc](https://faker.readthedocs.io/en/master/providers/faker.providers.python.html)\r\n1. read the `fake.pyint()` example\r\n\r\n### Expected behaviour\r\n\r\nShould be\r\n\r\n``` python\r\npyint(min=0, max=9999, step=1)\r\n# 7882\r\n```\r\n\r\n### Actual behaviour\r\n``` python\r\npyint()\r\n# 7882\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/944", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/944/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/944/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/944/events", "html_url": "https://github.com/joke2k/faker/issues/944", "id": 433426187, "node_id": "MDU6SXNzdWU0MzM0MjYxODc=", "number": 944, "title": "Inconsistency in unix_time handling start and end time parameters", "user": {"login": "navtej", "id": 261261, "node_id": "MDQ6VXNlcjI2MTI2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/261261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/navtej", "html_url": "https://github.com/navtej", "followers_url": "https://api.github.com/users/navtej/followers", "following_url": "https://api.github.com/users/navtej/following{/other_user}", "gists_url": "https://api.github.com/users/navtej/gists{/gist_id}", "starred_url": "https://api.github.com/users/navtej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/navtej/subscriptions", "organizations_url": "https://api.github.com/users/navtej/orgs", "repos_url": "https://api.github.com/users/navtej/repos", "events_url": "https://api.github.com/users/navtej/events{/privacy}", "received_events_url": "https://api.github.com/users/navtej/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}, {"id": 1258505653, "node_id": "MDU6TGFiZWwxMjU4NTA1NjUz", "url": "https://api.github.com/repos/joke2k/faker/labels/help%20wanted", "name": "help wanted", "color": "5cf9cd", "default": true, "description": ""}, {"id": 410774206, "node_id": "MDU6TGFiZWw0MTA3NzQyMDY=", "url": "https://api.github.com/repos/joke2k/faker/labels/waiting%20on%20feedback", "name": "waiting on feedback", "color": "FF8000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-15T18:46:18Z", "updated_at": "2019-07-15T14:45:16Z", "closed_at": "2019-07-15T14:16:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nThere is an inconsistency the way Faker handles `unix_time()` when parameter `start_datetime` is provided as 'now'. `start_datetime` is parsed using class method `_parse_start_datetime` \r\nhttps://github.com/joke2k/faker/blob/6db5503cf070c0b09da8e98cd662c10230cea22f/faker/providers/date_time/__init__.py#L1374\r\n\r\nwhich is eventually parsed by `_parse_date_time`, which can take argument 'now'. When 'now' is the provided,  `datetime.now` , which will use local time,\r\nhttps://github.com/joke2k/faker/blob/6db5503cf070c0b09da8e98cd662c10230cea22f/faker/providers/date_time/__init__.py#L1525\r\n\r\nHowever, end time parameter is parsed by `_parse_end_datetime`, which uses `time.time()`. `time.time()` returns time since epoc ie it is utc timestamp. \r\nhttps://github.com/joke2k/faker/blob/6db5503cf070c0b09da8e98cd662c10230cea22f/faker/providers/date_time/__init__.py#L1477\r\n\r\non machines with negetive time offset, faker will run into problems because of this inconsistancy. Example\r\n```\r\n>>> import faker\r\n>>> f = faker.Faker()\r\n>>> f.unix_time(start_datetime='-6h')\r\n1555352053\r\n>>> f.unix_time(start_datetime='now')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/dist-packages/faker/providers/date_time/__init__.py\", line 1376, in unix_time\r\n    return self.generator.random.randint(start_datetime, end_datetime)\r\n  File \"/usr/lib/python3.7/random.py\", line 222, in randint\r\n    return self.randrange(a, b+1)\r\n  File \"/usr/lib/python3.7/random.py\", line 200, in randrange\r\n    raise ValueError(\"empty range for randrange() (%d,%d, %d)\" % (istart, istop, width))\r\n*ValueError: empty range for randrange() (1555373558,1555353759, -19799)*\r\n>>>\r\n\r\n```\r\n\r\nPerhaps 'now' should be `utcnow` here\r\nhttps://github.com/joke2k/faker/blob/6db5503cf070c0b09da8e98cd662c10230cea22f/faker/providers/date_time/__init__.py#L1525", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/942", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/942/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/942/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/942/events", "html_url": "https://github.com/joke2k/faker/issues/942", "id": 432880388, "node_id": "MDU6SXNzdWU0MzI4ODAzODg=", "number": 942, "title": "Unable to import Faker", "user": {"login": "anbhimi", "id": 24322522, "node_id": "MDQ6VXNlcjI0MzIyNTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/24322522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anbhimi", "html_url": "https://github.com/anbhimi", "followers_url": "https://api.github.com/users/anbhimi/followers", "following_url": "https://api.github.com/users/anbhimi/following{/other_user}", "gists_url": "https://api.github.com/users/anbhimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anbhimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anbhimi/subscriptions", "organizations_url": "https://api.github.com/users/anbhimi/orgs", "repos_url": "https://api.github.com/users/anbhimi/repos", "events_url": "https://api.github.com/users/anbhimi/events{/privacy}", "received_events_url": "https://api.github.com/users/anbhimi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 410774206, "node_id": "MDU6TGFiZWw0MTA3NzQyMDY=", "url": "https://api.github.com/repos/joke2k/faker/labels/waiting%20on%20feedback", "name": "waiting on feedback", "color": "FF8000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-13T18:06:26Z", "updated_at": "2019-04-23T18:16:58Z", "closed_at": "2019-04-23T18:16:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed Faker Package using pip command in Ubuntu. But I was not able to import Faker and use it in code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/935", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/935/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/935/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/935/events", "html_url": "https://github.com/joke2k/faker/issues/935", "id": 431304189, "node_id": "MDU6SXNzdWU0MzEzMDQxODk=", "number": 935, "title": "android ios User-Agent", "user": {"login": "LooEv", "id": 15908616, "node_id": "MDQ6VXNlcjE1OTA4NjE2", "avatar_url": "https://avatars1.githubusercontent.com/u/15908616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooEv", "html_url": "https://github.com/LooEv", "followers_url": "https://api.github.com/users/LooEv/followers", "following_url": "https://api.github.com/users/LooEv/following{/other_user}", "gists_url": "https://api.github.com/users/LooEv/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooEv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooEv/subscriptions", "organizations_url": "https://api.github.com/users/LooEv/orgs", "repos_url": "https://api.github.com/users/LooEv/repos", "events_url": "https://api.github.com/users/LooEv/events{/privacy}", "received_events_url": "https://api.github.com/users/LooEv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-10T04:57:06Z", "updated_at": "2019-11-14T16:27:27Z", "closed_at": "2019-11-14T16:27:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "can you add  some  user-agents of android and ios?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/931", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/931/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/931/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/931/events", "html_url": "https://github.com/joke2k/faker/issues/931", "id": 423471828, "node_id": "MDU6SXNzdWU0MjM0NzE4Mjg=", "number": 931, "title": "pl_PL tasks - a lot of things to add", "user": {"login": "adwojak", "id": 37385217, "node_id": "MDQ6VXNlcjM3Mzg1MjE3", "avatar_url": "https://avatars0.githubusercontent.com/u/37385217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adwojak", "html_url": "https://github.com/adwojak", "followers_url": "https://api.github.com/users/adwojak/followers", "following_url": "https://api.github.com/users/adwojak/following{/other_user}", "gists_url": "https://api.github.com/users/adwojak/gists{/gist_id}", "starred_url": "https://api.github.com/users/adwojak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adwojak/subscriptions", "organizations_url": "https://api.github.com/users/adwojak/orgs", "repos_url": "https://api.github.com/users/adwojak/repos", "events_url": "https://api.github.com/users/adwojak/events{/privacy}", "received_events_url": "https://api.github.com/users/adwojak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-20T21:04:44Z", "updated_at": "2019-07-12T20:20:24Z", "closed_at": "2019-07-12T20:20:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using faker quite often, but there is some missing functionalities for pl_PL, like e.g. PESEL generator (Polish id for every person), car plates or some more. \r\n\r\nCan I contribute on my own branch (e.g. pl-PL-features or something), to add missing functionalities?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/929", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/929/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/929/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/929/events", "html_url": "https://github.com/joke2k/faker/issues/929", "id": 423127425, "node_id": "MDU6SXNzdWU0MjMxMjc0MjU=", "number": 929, "title": "Support for companies for the nl_NL locale", "user": {"login": "MathynS", "id": 26479691, "node_id": "MDQ6VXNlcjI2NDc5Njkx", "avatar_url": "https://avatars2.githubusercontent.com/u/26479691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MathynS", "html_url": "https://github.com/MathynS", "followers_url": "https://api.github.com/users/MathynS/followers", "following_url": "https://api.github.com/users/MathynS/following{/other_user}", "gists_url": "https://api.github.com/users/MathynS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MathynS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MathynS/subscriptions", "organizations_url": "https://api.github.com/users/MathynS/orgs", "repos_url": "https://api.github.com/users/MathynS/repos", "events_url": "https://api.github.com/users/MathynS/events{/privacy}", "received_events_url": "https://api.github.com/users/MathynS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-20T08:36:29Z", "updated_at": "2019-03-21T15:13:48Z", "closed_at": "2019-03-21T15:13:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently using faker in a project and would love to use Dutch company namers.\r\nI already made changes to do this and would like to commit these.\r\nCan you make a branch avaiable for me so I can ask for a merge request?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/921", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/921/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/921/events", "html_url": "https://github.com/joke2k/faker/issues/921", "id": 419435997, "node_id": "MDU6SXNzdWU0MTk0MzU5OTc=", "number": 921, "title": "TestDateTime.test_date_this_period fails on 32bit", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-11T12:08:03Z", "updated_at": "2019-03-11T15:12:08Z", "closed_at": "2019-03-11T15:12:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n[  180s] ______________________ TestDateTime.test_date_this_period ______________________\r\n[  180s] \r\n[  180s] self = <tests.providers.test_date_time.TestDateTime testMethod=test_date_this_period>\r\n[  180s] \r\n[  180s]     def test_date_this_period(self):\r\n[  180s]         # test century\r\n[  180s]         assert self.factory.date_this_century(after_today=False) <= date.today()\r\n[  180s] >       assert self.factory.date_this_century(before_today=False, after_today=True) >= date.today()\r\n[  180s] \r\n[  180s] tests/providers/test_date_time.py:319: \r\n[  180s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[  180s] faker/providers/date_time/__init__.py:1818: in date_this_century\r\n[  180s]     return self.date_between_dates(today, next_century_start)\r\n[  180s] faker/providers/date_time/__init__.py:1680: in date_between_dates\r\n[  180s]     return self.date_time_between_dates(date_start, date_end).date()\r\n[  180s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[  180s] \r\n[  180s] self = <faker.providers.date_time.en_US.Provider object at 0xb5b7a80c>\r\n[  180s] datetime_start = date(2019, 3, 11), datetime_end = date(2100, 1, 1)\r\n[  180s] tzinfo = None\r\n[  180s] \r\n[  180s]     def date_time_between_dates(\r\n[  180s]             self,\r\n[  180s]             datetime_start=None,\r\n[  180s]             datetime_end=None,\r\n[  180s]             tzinfo=None):\r\n[  180s]         \"\"\"\r\n[  180s]         Takes two DateTime objects and returns a random datetime between the two\r\n[  180s]         given datetimes.\r\n[  180s]         Accepts DateTime objects.\r\n[  180s]     \r\n[  180s]         :param datetime_start: DateTime\r\n[  180s]         :param datetime_end: DateTime\r\n[  180s]         :param tzinfo: timezone, instance of datetime.tzinfo subclass\r\n[  180s]         :example DateTime('1999-02-02 11:42:52')\r\n[  180s]         :return DateTime\r\n[  180s]         \"\"\"\r\n[  180s]         if datetime_start is None:\r\n[  180s]             datetime_start = datetime.now(tzinfo)\r\n[  180s]     \r\n[  180s]         if datetime_end is None:\r\n[  180s]             datetime_end = datetime.now(tzinfo)\r\n[  180s]     \r\n[  180s]         timestamp = self.generator.random.randint(\r\n[  180s]             datetime_to_timestamp(datetime_start),\r\n[  180s]             datetime_to_timestamp(datetime_end),\r\n[  180s]         )\r\n[  180s]         if tzinfo is None:\r\n[  180s] >           pick = datetime.fromtimestamp(timestamp, tzlocal())\r\n[  180s] E           ValueError: timestamp out of range for platform time_t\r\n```\r\n\r\nAs 32bit counter expires within this century we overflow the timer storage there. As such tests using this should skip there, or alternatively different means to store these values should be used:\r\n\r\nFollowing tests all fail with the same:\r\n* TestDateTime.test_date_time_this_period_with_tzinfo\r\n* TestDateTime.test_date_time_this_period\r\n* TestDateTime.test_date_this_period", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/918", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/918/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/918/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/918/events", "html_url": "https://github.com/joke2k/faker/issues/918", "id": 418765422, "node_id": "MDU6SXNzdWU0MTg3NjU0MjI=", "number": 918, "title": "Brazilian RG (identity card)", "user": {"login": "davizucon", "id": 6062914, "node_id": "MDQ6VXNlcjYwNjI5MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6062914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davizucon", "html_url": "https://github.com/davizucon", "followers_url": "https://api.github.com/users/davizucon/followers", "following_url": "https://api.github.com/users/davizucon/following{/other_user}", "gists_url": "https://api.github.com/users/davizucon/gists{/gist_id}", "starred_url": "https://api.github.com/users/davizucon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davizucon/subscriptions", "organizations_url": "https://api.github.com/users/davizucon/orgs", "repos_url": "https://api.github.com/users/davizucon/repos", "events_url": "https://api.github.com/users/davizucon/events{/privacy}", "received_events_url": "https://api.github.com/users/davizucon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-08T12:21:23Z", "updated_at": "2019-03-08T17:19:11Z", "closed_at": "2019-03-08T17:19:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add Generator to Brazilian RG (identity card)\r\n\r\n### Steps to reproduce\r\nfake = Faker('pt_Br')\r\nfake.rg()\r\n\r\n### Expected behavior\r\nreturn like this rules:\r\nhttps://www.ngmatematica.com/2014/02/como-determinar-o-digito-verificador-do.html\r\n8 digits + 1 checksum digit\r\n### Actual behavior\r\nNew feature\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/912", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/912/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/912/events", "html_url": "https://github.com/joke2k/faker/issues/912", "id": 410669975, "node_id": "MDU6SXNzdWU0MTA2Njk5NzU=", "number": 912, "title": "Tests fail on 32bit platforms", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1258505653, "node_id": "MDU6TGFiZWwxMjU4NTA1NjUz", "url": "https://api.github.com/repos/joke2k/faker/labels/help%20wanted", "name": "help wanted", "color": "5cf9cd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-02-15T09:08:59Z", "updated_at": "2019-03-12T09:30:28Z", "closed_at": "2019-03-11T18:38:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running tests on 32bit platform the time check actually overflows :)\r\n\r\n### Steps to reproduce\r\n\r\nRun tests on 32bit platform\r\n\r\n### Expected behavior\r\n\r\nTests pass\r\n\r\n### Actual behavior\r\n\r\nTest fail, see full build log: \r\n[faker.txt](https://github.com/joke2k/faker/files/2868550/faker.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/909", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/909/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/909/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/909/events", "html_url": "https://github.com/joke2k/faker/issues/909", "id": 409197156, "node_id": "MDU6SXNzdWU0MDkxOTcxNTY=", "number": 909, "title": "Date between month implementation", "user": {"login": "anneclairebrld", "id": 15171634, "node_id": "MDQ6VXNlcjE1MTcxNjM0", "avatar_url": "https://avatars0.githubusercontent.com/u/15171634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anneclairebrld", "html_url": "https://github.com/anneclairebrld", "followers_url": "https://api.github.com/users/anneclairebrld/followers", "following_url": "https://api.github.com/users/anneclairebrld/following{/other_user}", "gists_url": "https://api.github.com/users/anneclairebrld/gists{/gist_id}", "starred_url": "https://api.github.com/users/anneclairebrld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anneclairebrld/subscriptions", "organizations_url": "https://api.github.com/users/anneclairebrld/orgs", "repos_url": "https://api.github.com/users/anneclairebrld/repos", "events_url": "https://api.github.com/users/anneclairebrld/events{/privacy}", "received_events_url": "https://api.github.com/users/anneclairebrld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124080, "node_id": "MDU6TGFiZWwxOTEyNDA4MA==", "url": "https://api.github.com/repos/joke2k/faker/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-12T09:23:01Z", "updated_at": "2019-03-18T14:38:25Z", "closed_at": "2019-03-18T14:38:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Missing implementation of months for the date_time provider. Additionally, it would be good to add information regarding the acronyms used (5y = 5 years, 5m = 5 minutes (this is very confusing => thought it was months and had to go into source code to understand that months are not actually implemented)). \r\n\r\n### Steps to reproduce\r\nfaker.date_between(start_date = \"-5M\", end_date = \"today\")\r\n\r\n### Expected behaviour\r\n\r\nproduce fake date between the time given\r\n\r\n### Actual behaviour\r\nError.\r\n\r\nIt would also be good to add the option to change the pattern of the returned date (e.g. pattern = '%d,%m,%y') to the function. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/906", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/906/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/906/events", "html_url": "https://github.com/joke2k/faker/issues/906", "id": 407159029, "node_id": "MDU6SXNzdWU0MDcxNTkwMjk=", "number": 906, "title": "Can't produce a time_delta with a maximum value", "user": {"login": "riconnon", "id": 1963938, "node_id": "MDQ6VXNlcjE5NjM5Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1963938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riconnon", "html_url": "https://github.com/riconnon", "followers_url": "https://api.github.com/users/riconnon/followers", "following_url": "https://api.github.com/users/riconnon/following{/other_user}", "gists_url": "https://api.github.com/users/riconnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/riconnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riconnon/subscriptions", "organizations_url": "https://api.github.com/users/riconnon/orgs", "repos_url": "https://api.github.com/users/riconnon/repos", "events_url": "https://api.github.com/users/riconnon/events{/privacy}", "received_events_url": "https://api.github.com/users/riconnon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-06T10:04:37Z", "updated_at": "2019-02-06T17:47:59Z", "closed_at": "2019-02-06T17:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using time_delta from the date_time provider it doesn't seem possible to provide a maximum value.\r\nThe provider takes an `end_datetime` parameter but what it does with that is beyond me, certainly not what I'd expect.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n>>> from faker import Faker\r\n>>> from datetime import timedelta\r\n>>> Faker().time_delta(end_datetime=timedelta(minutes=60))\r\ndatetime.timedelta(days=5892, seconds=74879)\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'd expect to receive a `datetime.timedelta` with a value no greater than 60 minutes.\r\n\r\n### Actual behavior\r\n\r\nI receive a `datetime.timedelta` with seemingly unbounded value.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/899", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/899/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/899/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/899/events", "html_url": "https://github.com/joke2k/faker/issues/899", "id": 403003204, "node_id": "MDU6SXNzdWU0MDMwMDMyMDQ=", "number": 899, "title": "'Generator' object has no attribute 'locale' when calling user_agent()", "user": {"login": "Mattwmaster58", "id": 26337069, "node_id": "MDQ6VXNlcjI2MzM3MDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/26337069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mattwmaster58", "html_url": "https://github.com/Mattwmaster58", "followers_url": "https://api.github.com/users/Mattwmaster58/followers", "following_url": "https://api.github.com/users/Mattwmaster58/following{/other_user}", "gists_url": "https://api.github.com/users/Mattwmaster58/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mattwmaster58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mattwmaster58/subscriptions", "organizations_url": "https://api.github.com/users/Mattwmaster58/orgs", "repos_url": "https://api.github.com/users/Mattwmaster58/repos", "events_url": "https://api.github.com/users/Mattwmaster58/events{/privacy}", "received_events_url": "https://api.github.com/users/Mattwmaster58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 78625199, "node_id": "MDU6TGFiZWw3ODYyNTE5OQ==", "url": "https://api.github.com/repos/joke2k/faker/labels/provider", "name": "provider", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-25T04:39:20Z", "updated_at": "2019-01-25T18:07:18Z", "closed_at": "2019-01-25T18:07:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The user_agent method intermittently will fail with the message `AttributeError: 'Generator' object has no attribute 'locale'`\r\n\r\n### Steps to reproduce\r\n#### Systems bug has been reproduced on\r\nPython: Python 3.7.0 & 3.7.1\r\nFaker version: git and pypi 1.0.2 both tested.\r\nPlatform: Windows 10x64 & Arch Linux 4.20.0-arch1-1-ARCH\r\n\r\n```\r\nfor _ in range(10):\r\n     Faker(providers=['faker.providers.user_agent', \r\n                      'faker.providers.date_time']).user_agent()\r\n```\r\nManually specifed `locale` has no effect. The snippet below is effectively the same in the case of this bug as the one above:\r\n```\r\nfor _ in range(10):\r\n     Faker(providers=['faker.providers.user_agent', \r\n                      'faker.providers.date_time'], locale='en_US').user_agent()\r\n```\r\n### Expected behavior\r\n\r\n`user_agent()` should work 100% of the time.\r\n\r\n### Actual behavior\r\n\r\nA error is raised with the following traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3265, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-319-5c64504eb0d2>\", line 1, in <module>\r\n    Faker(providers=['faker.providers.user_agent', 'faker.providers.date_time', 'faker.providers.internet']).user_agent()\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\faker\\providers\\user_agent\\__init__.py\", line 34, in user_agent\r\n    return getattr(self, name)()\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\faker\\providers\\user_agent\\__init__.py\", line 114, in safari/firefox/opera\r\n    locale = self.generator.locale().replace('_', '-')\r\nAttributeError: 'Generator' object has no attribute 'locale'\r\n```\r\n\r\nNote: only occurs in `firefox`,`safari`, and `opera`. Am I missing a provider to import?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/891", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/891/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/891/events", "html_url": "https://github.com/joke2k/faker/issues/891", "id": 398759043, "node_id": "MDU6SXNzdWUzOTg3NTkwNDM=", "number": 891, "title": "packing with pyinstaller problems", "user": {"login": "vin7ent", "id": 15901062, "node_id": "MDQ6VXNlcjE1OTAxMDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/15901062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vin7ent", "html_url": "https://github.com/vin7ent", "followers_url": "https://api.github.com/users/vin7ent/followers", "following_url": "https://api.github.com/users/vin7ent/following{/other_user}", "gists_url": "https://api.github.com/users/vin7ent/gists{/gist_id}", "starred_url": "https://api.github.com/users/vin7ent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vin7ent/subscriptions", "organizations_url": "https://api.github.com/users/vin7ent/orgs", "repos_url": "https://api.github.com/users/vin7ent/repos", "events_url": "https://api.github.com/users/vin7ent/events{/privacy}", "received_events_url": "https://api.github.com/users/vin7ent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1258505653, "node_id": "MDU6TGFiZWwxMjU4NTA1NjUz", "url": "https://api.github.com/repos/joke2k/faker/labels/help%20wanted", "name": "help wanted", "color": "5cf9cd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-01-14T06:06:49Z", "updated_at": "2019-03-19T15:38:34Z", "closed_at": "2019-03-19T15:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use pyinstaller to  pack the file to exe, it turns out the problem:\r\nImportError: No module named providers.\r\n\r\nThen I added the hidden imports parameters, errors changes to\r\nInvalid configuration for faker locale 'en_US'\r\n\r\nSo how to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/889", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/889/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/889/events", "html_url": "https://github.com/joke2k/faker/issues/889", "id": 398378761, "node_id": "MDU6SXNzdWUzOTgzNzg3NjE=", "number": 889, "title": "fake.local_latlng Error", "user": {"login": "perezba", "id": 36057377, "node_id": "MDQ6VXNlcjM2MDU3Mzc3", "avatar_url": "https://avatars0.githubusercontent.com/u/36057377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perezba", "html_url": "https://github.com/perezba", "followers_url": "https://api.github.com/users/perezba/followers", "following_url": "https://api.github.com/users/perezba/following{/other_user}", "gists_url": "https://api.github.com/users/perezba/gists{/gist_id}", "starred_url": "https://api.github.com/users/perezba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perezba/subscriptions", "organizations_url": "https://api.github.com/users/perezba/orgs", "repos_url": "https://api.github.com/users/perezba/repos", "events_url": "https://api.github.com/users/perezba/events{/privacy}", "received_events_url": "https://api.github.com/users/perezba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 410774206, "node_id": "MDU6TGFiZWw0MTA3NzQyMDY=", "url": "https://api.github.com/repos/joke2k/faker/labels/waiting%20on%20feedback", "name": "waiting on feedback", "color": "FF8000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-11T17:15:42Z", "updated_at": "2019-01-11T18:19:26Z", "closed_at": "2019-01-11T18:19:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Summary: \r\nI am new to github and faker. I am trying to use faker.providers.geo to generate lat and longs bounded by specific country / locale. \r\nFollowing the examples listed in the documentation: https://faker.readthedocs.io/en/stable/providers/faker.providers.geo.html\r\n\r\n### Steps to reproduce\r\n\r\n1. I am using Ananconda Jupyter Python 3\r\n\r\n2. I tried the following code: \r\n```\r\nfrom faker import Faker\r\nfake = Faker()\r\nfake.address()\r\n```\r\nReturning the following successfully: \r\n```\r\n#'72630 Snow Cove\\nTeresaport, WI 67917'\r\n```\r\n3. `fake.local_latlng(country_code=\"US\", coords_only=False)`\r\n\r\n### Expected behavior\r\n```\r\nfake.local_latlng(country_code=\"US\", coords_only=False)\r\n\r\n('40.57788', '-73.95958', 'Brighton Beach', 'US', 'America/New_York')\r\n```\r\n### Actual behavior\r\n\r\n```\r\nfake.local_latlng(country_code=\"US\", coords_only=False)\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-21-b9116cccd1c9> in <module>()\r\n----> 1 fake.local_latlng(country_code=\"US\", coords_only=False)\r\n\r\nAttributeError: 'Generator' object has no attribute 'local_latlng'\r\n```\r\n\r\nThank you!\r\n\r\nBrian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/875", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/875/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/875/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/875/events", "html_url": "https://github.com/joke2k/faker/issues/875", "id": 387003606, "node_id": "MDU6SXNzdWUzODcwMDM2MDY=", "number": 875, "title": "Wrong class in localization text of README.rst", "user": {"login": "jocassid", "id": 5742458, "node_id": "MDQ6VXNlcjU3NDI0NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5742458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jocassid", "html_url": "https://github.com/jocassid", "followers_url": "https://api.github.com/users/jocassid/followers", "following_url": "https://api.github.com/users/jocassid/following{/other_user}", "gists_url": "https://api.github.com/users/jocassid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jocassid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jocassid/subscriptions", "organizations_url": "https://api.github.com/users/jocassid/orgs", "repos_url": "https://api.github.com/users/jocassid/repos", "events_url": "https://api.github.com/users/jocassid/events{/privacy}", "received_events_url": "https://api.github.com/users/jocassid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-03T21:01:07Z", "updated_at": "2019-01-08T16:00:39Z", "closed_at": "2019-01-08T16:00:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In README.rst the text under the Localization says faker.Factory, but the code example uses faker.Faker\r\n\r\n### Steps to reproduce\r\n\r\n1. Read localization section of README.rst\r\n\r\n### Expected behavior\r\n\r\nshould read faker.Faker\r\n\r\n### Actual behavior\r\n\r\nreads faker.Factory\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/873", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/873/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/873/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/873/events", "html_url": "https://github.com/joke2k/faker/issues/873", "id": 385274319, "node_id": "MDU6SXNzdWUzODUyNzQzMTk=", "number": 873, "title": "How to use custom phone formats", "user": {"login": "shmidtelson", "id": 6944443, "node_id": "MDQ6VXNlcjY5NDQ0NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6944443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmidtelson", "html_url": "https://github.com/shmidtelson", "followers_url": "https://api.github.com/users/shmidtelson/followers", "following_url": "https://api.github.com/users/shmidtelson/following{/other_user}", "gists_url": "https://api.github.com/users/shmidtelson/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmidtelson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmidtelson/subscriptions", "organizations_url": "https://api.github.com/users/shmidtelson/orgs", "repos_url": "https://api.github.com/users/shmidtelson/repos", "events_url": "https://api.github.com/users/shmidtelson/events{/privacy}", "received_events_url": "https://api.github.com/users/shmidtelson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-28T13:44:22Z", "updated_at": "2019-05-28T11:00:44Z", "closed_at": "2019-05-28T11:00:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "f.phone_number()\r\n\r\nf.formats ??\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/870", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/870/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/870/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/870/events", "html_url": "https://github.com/joke2k/faker/issues/870", "id": 381338314, "node_id": "MDU6SXNzdWUzODEzMzgzMTQ=", "number": 870, "title": "Enables min and max values for pydecimal", "user": {"login": "Lrcezimbra", "id": 7042915, "node_id": "MDQ6VXNlcjcwNDI5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7042915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lrcezimbra", "html_url": "https://github.com/Lrcezimbra", "followers_url": "https://api.github.com/users/Lrcezimbra/followers", "following_url": "https://api.github.com/users/Lrcezimbra/following{/other_user}", "gists_url": "https://api.github.com/users/Lrcezimbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lrcezimbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lrcezimbra/subscriptions", "organizations_url": "https://api.github.com/users/Lrcezimbra/orgs", "repos_url": "https://api.github.com/users/Lrcezimbra/repos", "events_url": "https://api.github.com/users/Lrcezimbra/events{/privacy}", "received_events_url": "https://api.github.com/users/Lrcezimbra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124080, "node_id": "MDU6TGFiZWwxOTEyNDA4MA==", "url": "https://api.github.com/repos/joke2k/faker/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}, {"id": 78625199, "node_id": "MDU6TGFiZWw3ODYyNTE5OQ==", "url": "https://api.github.com/repos/joke2k/faker/labels/provider", "name": "provider", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T21:03:51Z", "updated_at": "2019-03-13T14:46:51Z", "closed_at": "2019-03-13T14:46:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently is not possible to set min or max values to `pydecimal` or `pyfloat`. It would be nice if we could pass these parameters.\r\n\r\nIf it makes senses I can open a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/864", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/864/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/864/events", "html_url": "https://github.com/joke2k/faker/issues/864", "id": 375928168, "node_id": "MDU6SXNzdWUzNzU5MjgxNjg=", "number": 864, "title": "Method .vat_id() is not working as documented", "user": {"login": "mindflayer", "id": 527325, "node_id": "MDQ6VXNlcjUyNzMyNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/527325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindflayer", "html_url": "https://github.com/mindflayer", "followers_url": "https://api.github.com/users/mindflayer/followers", "following_url": "https://api.github.com/users/mindflayer/following{/other_user}", "gists_url": "https://api.github.com/users/mindflayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindflayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindflayer/subscriptions", "organizations_url": "https://api.github.com/users/mindflayer/orgs", "repos_url": "https://api.github.com/users/mindflayer/repos", "events_url": "https://api.github.com/users/mindflayer/events{/privacy}", "received_events_url": "https://api.github.com/users/mindflayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T11:59:58Z", "updated_at": "2018-10-31T15:04:55Z", "closed_at": "2018-10-31T15:04:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I mentiond in the title, `.vat_id()` is not working properly\r\n\r\nWhat I get from the lib:\r\n```>>> import faker\r\n>>> f = faker.Faker(locale='it_IT')\r\n>>> f.vat_id()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'Generator' object has no attribute 'vat_id'\r\n>>> f = faker.Faker(locale='en_GB')\r\n>>> f.vat_id()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'Generator' object has no attribute 'vat_id'\r\n```\r\n\r\nWhat the documentation says:\r\n```\r\n# https://faker.readthedocs.io/en/latest/locales/it_IT.html#faker-providers-ssn\r\nfake.vat_id()\r\n# 'IT32863982442'\r\n# https://faker.readthedocs.io/en/latest/locales/en_GB.html#faker-providers-ssn\r\nfake.vat_id()\r\n# 'GBHA571'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/860", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/860/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/860/events", "html_url": "https://github.com/joke2k/faker/issues/860", "id": 375483008, "node_id": "MDU6SXNzdWUzNzU0ODMwMDg=", "number": 860, "title": "fake.uuid4() doesn't return a version 4 UUID", "user": {"login": "ThibaultLemaire", "id": 21345269, "node_id": "MDQ6VXNlcjIxMzQ1MjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/21345269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibaultLemaire", "html_url": "https://github.com/ThibaultLemaire", "followers_url": "https://api.github.com/users/ThibaultLemaire/followers", "following_url": "https://api.github.com/users/ThibaultLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/ThibaultLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibaultLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibaultLemaire/subscriptions", "organizations_url": "https://api.github.com/users/ThibaultLemaire/orgs", "repos_url": "https://api.github.com/users/ThibaultLemaire/repos", "events_url": "https://api.github.com/users/ThibaultLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibaultLemaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-30T13:15:57Z", "updated_at": "2018-11-05T19:48:14Z", "closed_at": "2018-11-05T19:48:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "[A UUID should have 4bits indicating its version](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format). Meaning a [uuid4 isn't 128 bits of entropy, but only 122](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)).\r\n\r\nThe current implementation of `uuid4` returns a truly random UUID, so if any code is checking the version number of the UUID it would fail.\r\n\r\nfor reference, here is the [current offending code](https://github.com/joke2k/faker/blob/d26db45eebb9dcd02eb73099bb98b660f0e03aad/faker/providers/misc/__init__.py#L138), and here is the [cpython implementation for `uuid4`](https://github.com/python/cpython/blob/54752533b2ed1c898ffe5ec2e795c6910ee46a39/Lib/uuid.py#L757).\r\n\r\nLuckily, the fix is trivial:\r\n\r\n``` diff\r\n- UUID(int= ... )\r\n+ UUID(int= ... , version=4)\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n``` python\r\nfrom faker import Faker\r\nfake = Faker()\r\nfake.seed(1)\r\nuuid = fake.uuid4()\r\nuuid\r\n# 'cd613e30-d8f1-6adf-91b7-584a2265b1f5'\r\n```\r\n\r\n### Expected behavior\r\n\r\n``` python\r\nuuid[14] == '4'\r\n```\r\n\r\nThe digit at this position should indicate the version of the uuid, in our case `4`.\r\n\r\n### Actual behavior\r\n\r\n``` python\r\nuuid[14] == '6'\r\n```\r\n\r\n\r\nPS: Apparently nobody needed this so far, otherwise I wouldn't be the one to report this. I actually only noticed when looking at the source code. (Who checks version numbers anyway?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/858", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/858/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/858/events", "html_url": "https://github.com/joke2k/faker/issues/858", "id": 374964247, "node_id": "MDU6SXNzdWUzNzQ5NjQyNDc=", "number": 858, "title": "uuid4 should return UUID instead of str", "user": {"login": "ThibaultLemaire", "id": 21345269, "node_id": "MDQ6VXNlcjIxMzQ1MjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/21345269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibaultLemaire", "html_url": "https://github.com/ThibaultLemaire", "followers_url": "https://api.github.com/users/ThibaultLemaire/followers", "following_url": "https://api.github.com/users/ThibaultLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/ThibaultLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibaultLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibaultLemaire/subscriptions", "organizations_url": "https://api.github.com/users/ThibaultLemaire/orgs", "repos_url": "https://api.github.com/users/ThibaultLemaire/repos", "events_url": "https://api.github.com/users/ThibaultLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibaultLemaire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124080, "node_id": "MDU6TGFiZWwxOTEyNDA4MA==", "url": "https://api.github.com/repos/joke2k/faker/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-29T11:07:59Z", "updated_at": "2018-11-05T16:54:10Z", "closed_at": "2018-11-05T16:54:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "__Context__: I'm using faker in combination with [FactoryBoy](https://github.com/FactoryBoy/factory_boy) to test [Django](https://www.djangoproject.com/) models. I have this test to make sure some data dict generated from model data is JSON-serializable. The test passed, but not the code in production. (`Object of type UUID is not JSON serializable`).\r\n\r\nNow, of course the fix to the offending code is simple:\r\n\r\n``` diff\r\n- data['uuid'] = model.uuid\r\n+ data['uuid'] = str(model.uuid)\r\n```\r\n\r\nbut the problem is two-fold:\r\n\r\n1. __The fact that `uuid4` returns `str` is confusing__. I didn't pay attention and couldn't test properly.\r\n2. __There is no provider for actual `UUID` objects__. I can understand if some people want strings that are in fact uuid representations, after all that's [how AutoFixture generates strings](https://github.com/AutoFixture/AutoFixture/wiki/Cheat-Sheet#completely-autogenerated-string) (Autofixture does approximately the same job as faker, but for C#). But there should be a provider for true `UUID`s as well.\r\n\r\n### Steps to reproduce\r\n\r\n1. Call `fake.uuid4()`\r\n\r\n### Expected behavior\r\n\r\n`fake.uuid4()` should return an `UUID` object\r\n\r\n### Actual behavior\r\n\r\n`fake.uuid4()` returns a `str`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/857", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/857/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/857/events", "html_url": "https://github.com/joke2k/faker/issues/857", "id": 374784100, "node_id": "MDU6SXNzdWUzNzQ3ODQxMDA=", "number": 857, "title": "Provider for coordinates over land", "user": {"login": "shacker", "id": 102694, "node_id": "MDQ6VXNlcjEwMjY5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/102694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shacker", "html_url": "https://github.com/shacker", "followers_url": "https://api.github.com/users/shacker/followers", "following_url": "https://api.github.com/users/shacker/following{/other_user}", "gists_url": "https://api.github.com/users/shacker/gists{/gist_id}", "starred_url": "https://api.github.com/users/shacker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shacker/subscriptions", "organizations_url": "https://api.github.com/users/shacker/orgs", "repos_url": "https://api.github.com/users/shacker/repos", "events_url": "https://api.github.com/users/shacker/events{/privacy}", "received_events_url": "https://api.github.com/users/shacker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-28T18:34:38Z", "updated_at": "2018-11-12T18:08:41Z", "closed_at": "2018-11-12T18:08:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am willing to make a pull request, but want to get your input first.\r\n\r\nProblem: Earth is mostly covered with water. Therefore, choosing coordinates at random results in the majority of them not being on land. Maps produced from locations faked with the current coordinate providers in faker are not very useful.\r\n\r\nProposal: Create a new provider that instead pulls from a list of lat/long coords known to be over land.\r\n\r\nI have this working locally, using the first 500 cities from the list [here](http://gael-varoquaux.info/misc/gps-coordinates-for-the-worlds-major-cities.html).\r\n\r\nQuestions:\r\n\r\n- Are you interested in including this new provider in faker?\r\n\r\n- Since this has to be a data set, and is not language-specific, where is the best place to store a long list of tuples in the repo? Should I just include them directly in a new method in `faker/providers/__init__.py` ? Or reference a supporting data file elsewhere in the repo (and if so, where?)\r\n\r\n- How many locations should it include? 500 OK? Or more like 100?\r\n\r\n- Can I use the data from the link above, which was scraped by that person's python script? Or should I hand-pick the locations myself? Or use some other more open-source set?\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/845", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/845/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/845/events", "html_url": "https://github.com/joke2k/faker/issues/845", "id": 372081399, "node_id": "MDU6SXNzdWUzNzIwODEzOTk=", "number": 845, "title": "ipv4 faker very slow", "user": {"login": "cript0nauta", "id": 1222362, "node_id": "MDQ6VXNlcjEyMjIzNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1222362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cript0nauta", "html_url": "https://github.com/cript0nauta", "followers_url": "https://api.github.com/users/cript0nauta/followers", "following_url": "https://api.github.com/users/cript0nauta/following{/other_user}", "gists_url": "https://api.github.com/users/cript0nauta/gists{/gist_id}", "starred_url": "https://api.github.com/users/cript0nauta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cript0nauta/subscriptions", "organizations_url": "https://api.github.com/users/cript0nauta/orgs", "repos_url": "https://api.github.com/users/cript0nauta/repos", "events_url": "https://api.github.com/users/cript0nauta/events{/privacy}", "received_events_url": "https://api.github.com/users/cript0nauta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-19T19:10:26Z", "updated_at": "2019-11-07T20:01:49Z", "closed_at": "2019-11-07T20:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! We updated from Faker 0.9.0 to 0.9.2 and noticed our tests speed decreased by 5X. We tracked the bug to the changes in the ipv4 faker done in commit 3b847f48bbfc33aed3e86cffcedbcfd1c0cccec5\r\n\r\n### Steps to reproduce\r\n\r\n1. checkout to commit 3b847f48bbfc33aed3e86cffcedbcfd1c0cccec5\r\n1. run the following: `time python -c 'import faker; fake = faker.Faker(); [fake.ipv4() for _ in range(100)]'`\r\n1. Check its output to see it was slow. in my laptop it took about 6 seconds.\r\n1. Run `git checkout HEAD~1` to go to a working commit\r\n1. Run the command of step 2 again and it will work much faster (in my case it took 0.4 seconds)\r\n\r\n### Expected behavior\r\n\r\nGenerating ivp4 addresses should be fast\r\n\r\n### Actual behavior\r\n\r\nGenerating ipv4 addresses is slow\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/844", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/844/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/844/events", "html_url": "https://github.com/joke2k/faker/issues/844", "id": 371667530, "node_id": "MDU6SXNzdWUzNzE2Njc1MzA=", "number": 844, "title": "How to write external provider with locale support?", "user": {"login": "mastacheata", "id": 716261, "node_id": "MDQ6VXNlcjcxNjI2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/716261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastacheata", "html_url": "https://github.com/mastacheata", "followers_url": "https://api.github.com/users/mastacheata/followers", "following_url": "https://api.github.com/users/mastacheata/following{/other_user}", "gists_url": "https://api.github.com/users/mastacheata/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastacheata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastacheata/subscriptions", "organizations_url": "https://api.github.com/users/mastacheata/orgs", "repos_url": "https://api.github.com/users/mastacheata/repos", "events_url": "https://api.github.com/users/mastacheata/events{/privacy}", "received_events_url": "https://api.github.com/users/mastacheata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T19:02:01Z", "updated_at": "2018-10-23T15:23:20Z", "closed_at": "2018-10-23T15:23:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Brief summary of the issue goes here.\r\n\r\n### Steps to reproduce\r\n\r\n1. Build an external provider package\r\n2. Set the locale for Faker\r\n3. Generate a fake using your own provider\r\n\r\n### Expected behavior\r\n\r\nThe output should adjust depending on the locale\r\n\r\n### Actual behavior\r\n\r\nOnly the default output is produced, the localized subclasses are completely ignored\r\n\r\n### See also\r\nI've tried to build some european tax IDs (and German tax numbers) into an external package:\r\nhttps://github.com/mastacheata/faker_tax\r\n\r\nThe test for the danish locale fails all but the first testcase in the test. (i.e.: The length is not 10, and the prefix is not DK)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/832", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/832/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/832/events", "html_url": "https://github.com/joke2k/faker/issues/832", "id": 368099094, "node_id": "MDU6SXNzdWUzNjgwOTkwOTQ=", "number": 832, "title": "Documentation of utilities like random_choices", "user": {"login": "denizdogan", "id": 50928, "node_id": "MDQ6VXNlcjUwOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/50928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denizdogan", "html_url": "https://github.com/denizdogan", "followers_url": "https://api.github.com/users/denizdogan/followers", "following_url": "https://api.github.com/users/denizdogan/following{/other_user}", "gists_url": "https://api.github.com/users/denizdogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/denizdogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denizdogan/subscriptions", "organizations_url": "https://api.github.com/users/denizdogan/orgs", "repos_url": "https://api.github.com/users/denizdogan/repos", "events_url": "https://api.github.com/users/denizdogan/events{/privacy}", "received_events_url": "https://api.github.com/users/denizdogan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "malefice", "id": 7114869, "node_id": "MDQ6VXNlcjcxMTQ4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7114869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malefice", "html_url": "https://github.com/malefice", "followers_url": "https://api.github.com/users/malefice/followers", "following_url": "https://api.github.com/users/malefice/following{/other_user}", "gists_url": "https://api.github.com/users/malefice/gists{/gist_id}", "starred_url": "https://api.github.com/users/malefice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malefice/subscriptions", "organizations_url": "https://api.github.com/users/malefice/orgs", "repos_url": "https://api.github.com/users/malefice/repos", "events_url": "https://api.github.com/users/malefice/events{/privacy}", "received_events_url": "https://api.github.com/users/malefice/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "malefice", "id": 7114869, "node_id": "MDQ6VXNlcjcxMTQ4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7114869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malefice", "html_url": "https://github.com/malefice", "followers_url": "https://api.github.com/users/malefice/followers", "following_url": "https://api.github.com/users/malefice/following{/other_user}", "gists_url": "https://api.github.com/users/malefice/gists{/gist_id}", "starred_url": "https://api.github.com/users/malefice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malefice/subscriptions", "organizations_url": "https://api.github.com/users/malefice/orgs", "repos_url": "https://api.github.com/users/malefice/repos", "events_url": "https://api.github.com/users/malefice/events{/privacy}", "received_events_url": "https://api.github.com/users/malefice/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-09T08:38:09Z", "updated_at": "2019-11-07T16:05:17Z", "closed_at": "2019-11-07T16:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any online documentation of the utility functions like random_choices? I always end up looking at the source code when I forget what they're named.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/820", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/820/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/820/events", "html_url": "https://github.com/joke2k/faker/issues/820", "id": 360901208, "node_id": "MDU6SXNzdWUzNjA5MDEyMDg=", "number": 820, "title": "Add flake8 to the CI", "user": {"login": "fcurella", "id": 89607, "node_id": "MDQ6VXNlcjg5NjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/89607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcurella", "html_url": "https://github.com/fcurella", "followers_url": "https://api.github.com/users/fcurella/followers", "following_url": "https://api.github.com/users/fcurella/following{/other_user}", "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions", "organizations_url": "https://api.github.com/users/fcurella/orgs", "repos_url": "https://api.github.com/users/fcurella/repos", "events_url": "https://api.github.com/users/fcurella/events{/privacy}", "received_events_url": "https://api.github.com/users/fcurella/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-17T14:39:56Z", "updated_at": "2018-10-12T17:02:06Z", "closed_at": "2018-10-12T17:02:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Configuration must have:\r\n* https://pypi.org/project/flake8-commas/ \r\n* https://pypi.org/project/flake8-comprehensions/\r\n\r\nI'd also like to flag visual indentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/813", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/813/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/813/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/813/events", "html_url": "https://github.com/joke2k/faker/issues/813", "id": 359187020, "node_id": "MDU6SXNzdWUzNTkxODcwMjA=", "number": 813, "title": "pyfloat, pydecimal cannot be negative when left_digits=0", "user": {"login": "IamJeffG", "id": 2002703, "node_id": "MDQ6VXNlcjIwMDI3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2002703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IamJeffG", "html_url": "https://github.com/IamJeffG", "followers_url": "https://api.github.com/users/IamJeffG/followers", "following_url": "https://api.github.com/users/IamJeffG/following{/other_user}", "gists_url": "https://api.github.com/users/IamJeffG/gists{/gist_id}", "starred_url": "https://api.github.com/users/IamJeffG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IamJeffG/subscriptions", "organizations_url": "https://api.github.com/users/IamJeffG/orgs", "repos_url": "https://api.github.com/users/IamJeffG/repos", "events_url": "https://api.github.com/users/IamJeffG/events{/privacy}", "received_events_url": "https://api.github.com/users/IamJeffG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124078, "node_id": "MDU6TGFiZWwxOTEyNDA3OA==", "url": "https://api.github.com/repos/joke2k/faker/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-11T19:21:52Z", "updated_at": "2019-05-14T14:39:15Z", "closed_at": "2019-05-14T14:39:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to fake random floats in the range `(-1, 1)`.  Currently, `pyfloat` and `pydecimal` will never be negative as long as `left_digits=0`, even if `positive=False`.\r\n\r\nThis seems to be because [the `sign` (-1, 1) is multiplied by only the left digits](https://github.com/joke2k/faker/blob/6e32e07/faker/providers/python/__init__.py#L62) (which in this case is 0, canceling out the `sign`), rather than by the entire numeric value.\r\n\r\n### Steps to reproduce\r\n\r\n```python\r\n>>> import faker\r\n>>> fake = faker.Faker()\r\n>>> any(fake.pyfloat(left_digits=0, positive=False) < 0 for _ in range(10000))\r\nFalse\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'd expect approximately half of the floats to be negative, when `positive` is not `True`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/811", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/811/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/811/events", "html_url": "https://github.com/joke2k/faker/issues/811", "id": 358773644, "node_id": "MDU6SXNzdWUzNTg3NzM2NDQ=", "number": 811, "title": "No Polish (pl-PL) company suffixes", "user": {"login": "twkrol", "id": 377245, "node_id": "MDQ6VXNlcjM3NzI0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/377245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twkrol", "html_url": "https://github.com/twkrol", "followers_url": "https://api.github.com/users/twkrol/followers", "following_url": "https://api.github.com/users/twkrol/following{/other_user}", "gists_url": "https://api.github.com/users/twkrol/gists{/gist_id}", "starred_url": "https://api.github.com/users/twkrol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twkrol/subscriptions", "organizations_url": "https://api.github.com/users/twkrol/orgs", "repos_url": "https://api.github.com/users/twkrol/repos", "events_url": "https://api.github.com/users/twkrol/events{/privacy}", "received_events_url": "https://api.github.com/users/twkrol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-10T20:05:47Z", "updated_at": "2018-09-19T14:58:52Z", "closed_at": "2018-09-19T14:58:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are specific Polish company suffixes not present in pl-PL module for company provider.\r\n\r\n### Steps to reproduce\r\n1. Open file faker/providers/company/pl_PL/__init__.py\r\n2. Search for class Provider(CompanyProvider)\r\n3. Find there is no company_suffixes definition tuple\r\n\r\n### Expected behavior\r\n\r\nThere should be Poland's specific company_suffixes definition tuple\r\n\r\n### Actual behavior\r\n\r\nDefault english company_suffixes are generated\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/806", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/806/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/806/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/806/events", "html_url": "https://github.com/joke2k/faker/issues/806", "id": 356610822, "node_id": "MDU6SXNzdWUzNTY2MTA4MjI=", "number": 806, "title": "Multiple Faker instances are not independent (due to shared random state)", "user": {"login": "maxalbert", "id": 2692805, "node_id": "MDQ6VXNlcjI2OTI4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2692805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxalbert", "html_url": "https://github.com/maxalbert", "followers_url": "https://api.github.com/users/maxalbert/followers", "following_url": "https://api.github.com/users/maxalbert/following{/other_user}", "gists_url": "https://api.github.com/users/maxalbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxalbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxalbert/subscriptions", "organizations_url": "https://api.github.com/users/maxalbert/orgs", "repos_url": "https://api.github.com/users/maxalbert/repos", "events_url": "https://api.github.com/users/maxalbert/events{/privacy}", "received_events_url": "https://api.github.com/users/maxalbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T23:03:36Z", "updated_at": "2018-09-03T23:23:48Z", "closed_at": "2018-09-03T23:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for an awesome module and all your hard work on it! :)\r\n\r\nMy issue: I'd like to create multiple Faker instances which do not share state and behave independently. In particular, when resetting them with the same seed they should produce the same output.\r\n\r\n### Steps to reproduce\r\n\r\n```python\r\nfrom faker import Faker\r\n\r\nfake1 = Faker()\r\nfake2 = Faker()\r\n\r\nfake1.seed(12345)\r\nfake2.seed(12345)\r\n\r\nprint([fake1.name() for _ in range(5)])\r\nprint([fake2.name() for _ in range(5)])\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe two instances `fake1` and `fake2` should produce the same output:\r\n```\r\n['Adam Bryan', 'Jacob Lee', 'Candice Martinez', 'Justin Thompson', 'Heather Rubio']\r\n['Adam Bryan', 'Jacob Lee', 'Candice Martinez', 'Justin Thompson', 'Heather Rubio']\r\n```\r\n\r\n### Actual behavior\r\n\r\nCurrently `fake1` and `fake2` produce different output:\r\n```\r\n['Adam Bryan', 'Jacob Lee', 'Candice Martinez', 'Justin Thompson', 'Heather Rubio']\r\n['William Jenkins', 'Brittany Ball', 'Glenn Johnson', 'Walter Irwin', 'April Bentley']\r\n```\r\nThe reason is that internally they share the same random instance:\r\n```\r\n>>> fake1.random is fake2.random\r\nTrue\r\n```\r\nTherefore the output produced by `fake2` in the code example above is simply a continuation of what would have been produced by `fake1`.\r\n\r\nThe documentation says: \"By default all generators share the same instance of `random.Random` [...]`\"\r\n\r\nIt would be sufficient for my purposes to pass separate custom instances of `random.Random` to `fake1` and `fake2`. However, I could not find any information on how to do this (apologies if I missed something obvious).\r\n\r\nIs this currently possible? If not, would it be possible to implement it?\r\n\r\nMany thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/804", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/804/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/804/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/804/events", "html_url": "https://github.com/joke2k/faker/issues/804", "id": 354049689, "node_id": "MDU6SXNzdWUzNTQwNDk2ODk=", "number": 804, "title": "Commandline faker can't import community providers", "user": {"login": "crd", "id": 152584, "node_id": "MDQ6VXNlcjE1MjU4NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/152584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crd", "html_url": "https://github.com/crd", "followers_url": "https://api.github.com/users/crd/followers", "following_url": "https://api.github.com/users/crd/following{/other_user}", "gists_url": "https://api.github.com/users/crd/gists{/gist_id}", "starred_url": "https://api.github.com/users/crd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crd/subscriptions", "organizations_url": "https://api.github.com/users/crd/orgs", "repos_url": "https://api.github.com/users/crd/repos", "events_url": "https://api.github.com/users/crd/events{/privacy}", "received_events_url": "https://api.github.com/users/crd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-08-25T23:01:48Z", "updated_at": "2018-09-22T14:23:17Z", "closed_at": "2018-09-22T14:23:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See below, where I try to invoke `foo` from `mymodule` included with tests here: https://github.com/joke2k/faker/tree/master/tests/mymodule\r\n\r\n### Steps to reproduce\r\n\r\n```bash\r\n$ faker --version\r\nfaker 0.9.0\r\n$ cd workspaces/contrib/faker\r\n$ ls tests/mymodule/en_US\r\n__init__.py\r\n$ faker foo -i tests.mymodule.en_US\r\nTraceback (most recent call last):\r\n  File \"/Users/user/.pyenv/versions/3.6.6/bin/faker\", line 11, in <module>\r\n    load_entry_point('Faker==0.9.0', 'console_scripts', 'faker')()\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/site-packages/Faker-0.9.0-py3.6.egg/faker/cli.py\", line 282, in execute_from_command_line\r\n    command.execute()\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/site-packages/Faker-0.9.0-py3.6.egg/faker/cli.py\", line 264, in execute\r\n    includes=arguments.include\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/site-packages/Faker-0.9.0-py3.6.egg/faker/cli.py\", line 71, in print_doc\r\n    fake = Faker(locale=lang, includes=includes)\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/site-packages/Faker-0.9.0-py3.6.egg/faker/factory.py\", line 58, in create\r\n    prov_cls, lang_found = cls._get_provider_class(prov_name, locale)\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/site-packages/Faker-0.9.0-py3.6.egg/faker/factory.py\", line 69, in _get_provider_class\r\n    provider_class = cls._find_provider_class(provider, locale)\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/site-packages/Faker-0.9.0-py3.6.egg/faker/factory.py\", line 92, in _find_provider_class\r\n    provider_module = import_module(provider_path)\r\n  File \"/Users/user/.pyenv/versions/3.6.6/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 941, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 941, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'tests'\r\n```\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n`foo` from the external module `mymodule` should be invoked.\r\n\r\n### Actual behavior\r\n\r\n`ModuleNotFoundError`\r\n\r\nWhile I'm at it, I should call out that the mechanism for providing a path to the module to be imported (path delimited with periods) is very weird. While refactoring this I'd recommend updating the command as `-i path/to/module/directory/`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/803", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/803/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/803/events", "html_url": "https://github.com/joke2k/faker/issues/803", "id": 353723683, "node_id": "MDU6SXNzdWUzNTM3MjM2ODM=", "number": 803, "title": "Public IP blocks used with ipv4_public encompass reserved address namespaces", "user": {"login": "maticomp", "id": 135164, "node_id": "MDQ6VXNlcjEzNTE2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/135164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maticomp", "html_url": "https://github.com/maticomp", "followers_url": "https://api.github.com/users/maticomp/followers", "following_url": "https://api.github.com/users/maticomp/following{/other_user}", "gists_url": "https://api.github.com/users/maticomp/gists{/gist_id}", "starred_url": "https://api.github.com/users/maticomp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maticomp/subscriptions", "organizations_url": "https://api.github.com/users/maticomp/orgs", "repos_url": "https://api.github.com/users/maticomp/repos", "events_url": "https://api.github.com/users/maticomp/events{/privacy}", "received_events_url": "https://api.github.com/users/maticomp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-08-24T10:08:33Z", "updated_at": "2018-09-13T17:05:38Z", "closed_at": "2018-09-13T17:05:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `ipv4_public` faker generates IP addresses from public blocks, excluding private blocks configured in `IPV4_PUBLIC_NETS` and `IPV4_PRIVATE_NET_BLOCKS`, however it often results in addresses coming from reserved spaces.\r\n\r\nOne example is 192.0.0.145, or in general 192.0.0.0/24 addresses from reserved space, per https://en.wikipedia.org/wiki/Reserved_IP_addresses\r\n\r\nThis clashes with many popular libraries checking whether IP is public and routable such as `django-ipware`.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n>>> startswith = False\r\n>>> while not startswith:\r\n...   ip = fake.ipv4_public()\r\n...   if ip.startswith('192.0.0'):\r\n...     startswith = True\r\n...     print(ip)\r\n...\r\n192.0.0.145\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo address starting with `192.0.0` generated\r\n\r\n### Actual behavior\r\n\r\n`192.0.0.145` comes up often.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/801", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/801/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/801/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/801/events", "html_url": "https://github.com/joke2k/faker/issues/801", "id": 352288080, "node_id": "MDU6SXNzdWUzNTIyODgwODA=", "number": 801, "title": "Proposed new feature: Generate fake credit scores associated with various common models", "user": {"login": "crd", "id": 152584, "node_id": "MDQ6VXNlcjE1MjU4NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/152584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crd", "html_url": "https://github.com/crd", "followers_url": "https://api.github.com/users/crd/followers", "following_url": "https://api.github.com/users/crd/following{/other_user}", "gists_url": "https://api.github.com/users/crd/gists{/gist_id}", "starred_url": "https://api.github.com/users/crd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crd/subscriptions", "organizations_url": "https://api.github.com/users/crd/orgs", "repos_url": "https://api.github.com/users/crd/repos", "events_url": "https://api.github.com/users/crd/events{/privacy}", "received_events_url": "https://api.github.com/users/crd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-20T20:39:54Z", "updated_at": "2018-08-22T14:48:50Z", "closed_at": "2018-08-22T14:48:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`FICO Score 8`, `Equifax Beacon 5.0`, `Experian/Fair Isaac Risk Model V2SM`, and `TransUnion FICO Risk Score, Classic 04` are good candidates. Future expansion could include industry-specific models.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/800", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/800/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/800/events", "html_url": "https://github.com/joke2k/faker/issues/800", "id": 351669612, "node_id": "MDU6SXNzdWUzNTE2Njk2MTI=", "number": 800, "title": "State Abbreviations for en_US have too many", "user": {"login": "stephenross", "id": 15091571, "node_id": "MDQ6VXNlcjE1MDkxNTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/15091571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenross", "html_url": "https://github.com/stephenross", "followers_url": "https://api.github.com/users/stephenross/followers", "following_url": "https://api.github.com/users/stephenross/following{/other_user}", "gists_url": "https://api.github.com/users/stephenross/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenross/subscriptions", "organizations_url": "https://api.github.com/users/stephenross/orgs", "repos_url": "https://api.github.com/users/stephenross/repos", "events_url": "https://api.github.com/users/stephenross/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenross/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19124080, "node_id": "MDU6TGFiZWwxOTEyNDA4MA==", "url": "https://api.github.com/repos/joke2k/faker/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1027498169, "node_id": "MDU6TGFiZWwxMDI3NDk4MTY5", "url": "https://api.github.com/repos/joke2k/faker/labels/good%20first%20issue", "name": "good first issue", "color": "bfe3fc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-17T17:04:10Z", "updated_at": "2018-09-12T20:54:42Z", "closed_at": "2018-09-12T20:54:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The output of the state provider in address only outputs the 50 states, but the state_abbr has 59 potential outputs\r\n\r\n### Steps to reproduce\r\n\r\nGenerate a value using the state_abbr provider\r\n\r\n### Expected behavior\r\n\r\nThe value should be one of the 50 US states abbreviations\r\n\r\n### Actual behavior\r\n\r\nThe value is one of the 50 US states, Washington DC (DC), American Samoa (AS), Micronesia (FM), Guam (GU), Marshall Islands (MH), Northern Marianas (MP), Palau (PW), Puerto Rico (PR), and Virgin Isles (VI). It appears the list was pulled from sources such as https://www.factmonster.com/us/postal-information/state-abbreviations-and-state-postal-codes that list every possible postal state abbreviation. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/796", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/796/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/796/events", "html_url": "https://github.com/joke2k/faker/issues/796", "id": 349351645, "node_id": "MDU6SXNzdWUzNDkzNTE2NDU=", "number": 796, "title": "test_identical_age_range: set tzinfo when generating date-of-birth", "user": {"login": "Kelledin", "id": 11402500, "node_id": "MDQ6VXNlcjExNDAyNTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/11402500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kelledin", "html_url": "https://github.com/Kelledin", "followers_url": "https://api.github.com/users/Kelledin/followers", "following_url": "https://api.github.com/users/Kelledin/following{/other_user}", "gists_url": "https://api.github.com/users/Kelledin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kelledin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kelledin/subscriptions", "organizations_url": "https://api.github.com/users/Kelledin/orgs", "repos_url": "https://api.github.com/users/Kelledin/repos", "events_url": "https://api.github.com/users/Kelledin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kelledin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-10T02:11:58Z", "updated_at": "2018-08-10T15:05:18Z", "closed_at": "2018-08-10T15:05:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The test_identical_age_range unit-test can fail in 0.8.17, depending on the timezone and time-of-day.  This problem was introduced in https://github.com/joke2k/faker/commit/6c83a263a589c031ef68244fa81d21c03c620100 ; pull request is coming soon.\r\n\r\n### Steps to reproduce\r\n\r\n1. Wait until a time of day such that the date in UTC is one day ahead of your local date.  This naturally depends on your timezone being behind UTC.  I'm in US/Central timezone (a.k.a. GMT-5:00/GMT-6:00 depending on time of year) so waiting until after 7:00 PM is about right.\r\n2. Run the unit tests (python setup.py test)\r\n\r\n### Expected behavior\r\n\r\nUnit tests should pass.\r\n\r\n### Actual behavior\r\n\r\nFor me, test_identical_age_range reliably fails at least once out of the 100 repetitions, because it accidentally generates an exactly 6-year-old DoB.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/faker/issues/795", "repository_url": "https://api.github.com/repos/joke2k/faker", "labels_url": "https://api.github.com/repos/joke2k/faker/issues/795/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/faker/issues/795/comments", "events_url": "https://api.github.com/repos/joke2k/faker/issues/795/events", "html_url": "https://github.com/joke2k/faker/issues/795", "id": 348139972, "node_id": "MDU6SXNzdWUzNDgxMzk5NzI=", "number": 795, "title": "Negative pydecimal", "user": {"login": "JacobM903", "id": 15970797, "node_id": "MDQ6VXNlcjE1OTcwNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/15970797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JacobM903", "html_url": "https://github.com/JacobM903", "followers_url": "https://api.github.com/users/JacobM903/followers", "following_url": "https://api.github.com/users/JacobM903/following{/other_user}", "gists_url": "https://api.github.com/users/JacobM903/gists{/gist_id}", "starred_url": "https://api.github.com/users/JacobM903/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JacobM903/subscriptions", "organizations_url": "https://api.github.com/users/JacobM903/orgs", "repos_url": "https://api.github.com/users/JacobM903/repos", "events_url": "https://api.github.com/users/JacobM903/events{/privacy}", "received_events_url": "https://api.github.com/users/JacobM903/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-07T02:07:17Z", "updated_at": "2018-08-07T02:10:57Z", "closed_at": "2018-08-07T02:10:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should be able to enforce a pydecimal or pyfloat to be negative the same way it can be enforced to be positive", "performed_via_github_app": null, "score": 1.0}]}