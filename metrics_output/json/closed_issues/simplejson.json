{"total_count": 153, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/simplejson/simplejson/issues/265", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/265/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/265/events", "html_url": "https://github.com/simplejson/simplejson/issues/265", "id": 660301724, "node_id": "MDU6SXNzdWU2NjAzMDE3MjQ=", "number": 265, "title": "Feature request: JSON5 support", "user": {"login": "dcoles", "id": 1007415, "node_id": "MDQ6VXNlcjEwMDc0MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1007415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcoles", "html_url": "https://github.com/dcoles", "followers_url": "https://api.github.com/users/dcoles/followers", "following_url": "https://api.github.com/users/dcoles/following{/other_user}", "gists_url": "https://api.github.com/users/dcoles/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcoles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcoles/subscriptions", "organizations_url": "https://api.github.com/users/dcoles/orgs", "repos_url": "https://api.github.com/users/dcoles/repos", "events_url": "https://api.github.com/users/dcoles/events{/privacy}", "received_events_url": "https://api.github.com/users/dcoles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-18T18:27:32Z", "updated_at": "2020-07-18T19:20:01Z", "closed_at": "2020-07-18T19:20:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the [JSON5 webpage](https://json5.org/):\r\n> The JSON5 Data Interchange Format (JSON5) is a superset of JSON that aims to alleviate some of the limitations of JSON by expanding its syntax to include some productions from ECMAScript 5.1.\r\n\r\n**Short example**\r\n```json5\r\n{\r\n  // comments\r\n  unquoted: 'and you can quote me on that',\r\n  singleQuotes: 'I can use \"double quotes\" here',\r\n  lineBreaks: \"Look, Mom! \\\r\nNo \\\\n's!\",\r\n  hexadecimal: 0xdecaf,\r\n  leadingDecimalPoint: .8675309, andTrailing: 8675309.,\r\n  positiveSign: +1,\r\n  trailingComma: 'in objects', andIn: ['arrays',],\r\n  \"backwardsCompatible\": \"with JSON\",\r\n}\r\n```\r\n\r\n**Why:** JSON is frequently used as a configuration file format, but suffers from multiple limitations (lack of comments, strict comma rules, single form of quoting) that make it painful for humans to read, write and maintain. Other configuration file formats exist ([YAML](https://yaml.org/), [TOML](https://toml.io/), etc.), but JSON remains one of the most portable and widely accepted format.\r\n\r\nAs JSON5 is a strict superset of JSON, this doesn't introduce any incompatibilities in reading existing JSON files and follow the [principle of \"Be conservative in what you send, be liberal in what you accept\"](https://en.wikipedia.org/wiki/Robustness_principle).\r\n\r\nAs the [official JSON library in Python](https://docs.python.org/3/library/json.html), simplejson has the advantage of a wide user base, maturity and trust. Further there are significant advantages for Python's JSON and JSON5 support to share a single code-base (reduced maintenance, compatibility, security/code quality, code reuse, etc.)\r\n\r\n**Why not**: simplejson has always positioned itself as \"a simple, fast, complete, correct and extensible\" JSON encoder/decoder. Supporting JSON5 may introduce substantial complexity and maintenance burden, especially if the industry standardises on another form of JSON superset.\r\n\r\nIf this is the case, this issue would be used to explain why support is out-of-scope for simplejson.\r\n\r\n**Why not \u2026 library?**\r\n\r\nSeveral Python JSON5 libraries already exist ([dpranke/pyjson5](https://github.com/dpranke/pyjson5), [Kijewski/pyjson5](https://github.com/Kijewski/pyjson5)), but have limitations such as [slowness](https://github.com/dpranke/pyjson5#known-issues), lack of support for [PyPy](https://github.com/Kijewski/pyjson5#compatibility) or dependencies that would prevent inclusion in the Python Standard Library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/263", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/263/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/263/events", "html_url": "https://github.com/simplejson/simplejson/issues/263", "id": 650385667, "node_id": "MDU6SXNzdWU2NTAzODU2Njc=", "number": 263, "title": "Wheel support for aarch64", "user": {"login": "odidev", "id": 40816837, "node_id": "MDQ6VXNlcjQwODE2ODM3", "avatar_url": "https://avatars2.githubusercontent.com/u/40816837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odidev", "html_url": "https://github.com/odidev", "followers_url": "https://api.github.com/users/odidev/followers", "following_url": "https://api.github.com/users/odidev/following{/other_user}", "gists_url": "https://api.github.com/users/odidev/gists{/gist_id}", "starred_url": "https://api.github.com/users/odidev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odidev/subscriptions", "organizations_url": "https://api.github.com/users/odidev/orgs", "repos_url": "https://api.github.com/users/odidev/repos", "events_url": "https://api.github.com/users/odidev/events{/privacy}", "received_events_url": "https://api.github.com/users/odidev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-03T06:54:22Z", "updated_at": "2020-07-16T15:39:52Z", "closed_at": "2020-07-16T15:39:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Summary**\r\nInstalling simplejson on aarch64 via pip using command \"pip3 install simplejson\" tries to build wheel from source code\r\n\r\n**Problem description**\r\nsimplejson don't have wheel for aarch64 on PyPI repository. So, while installing simplejson via pip on aarch64, pip builds wheel for same resulting in it takes more time to install simplejson. Making wheel available for aarch64 will benefit aarch64 users by minimizing simplejson installation time.\r\n\r\n**Expected Output**\r\nPip should be able to download simplejson wheel from PyPI repository rather than building it from source code.\r\n\r\n@simplejson-team, please let me know if I can help you building wheel/uploading to PyPI repository. I am curious to make simplejson wheel available for aarch64. It will be a great opportunity for me to work with you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/262", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/262/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/262/events", "html_url": "https://github.com/simplejson/simplejson/issues/262", "id": 608810055, "node_id": "MDU6SXNzdWU2MDg4MTAwNTU=", "number": 262, "title": "Bug: use_decimal does not convert numbers without . to Decimal", "user": {"login": "mathiasrabe", "id": 703790, "node_id": "MDQ6VXNlcjcwMzc5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/703790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathiasrabe", "html_url": "https://github.com/mathiasrabe", "followers_url": "https://api.github.com/users/mathiasrabe/followers", "following_url": "https://api.github.com/users/mathiasrabe/following{/other_user}", "gists_url": "https://api.github.com/users/mathiasrabe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathiasrabe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathiasrabe/subscriptions", "organizations_url": "https://api.github.com/users/mathiasrabe/orgs", "repos_url": "https://api.github.com/users/mathiasrabe/repos", "events_url": "https://api.github.com/users/mathiasrabe/events{/privacy}", "received_events_url": "https://api.github.com/users/mathiasrabe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T06:26:23Z", "updated_at": "2020-04-29T13:35:18Z", "closed_at": "2020-04-29T13:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using simplejson 3.17.0. I found the following bug (or is it intended?):\r\n\r\nMy json-file looks like this:\r\n\r\n```\r\n{\r\n  \"one\": 1.0,\r\n  \"two\": 2\r\n}\r\n```\r\n\r\nAnd my python script like this:\r\n\r\n```\r\nimport simplejson as json\r\n\r\nfilepath = \"some.json\"\r\n\r\nwith open(filepath, 'r') as infile:\r\n    dictionary = json.load(infile, use_decimal=True)\r\n    print(dictionary)\r\n```\r\n\r\nI will get this:\r\n\r\n`{'one': Decimal('1.0'), 'two': 2}`\r\n\r\nBut I expected this:\r\n\r\n`{'one': Decimal('1.0'), 'two': Decimal('2.0')}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/259", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/259/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/259/events", "html_url": "https://github.com/simplejson/simplejson/issues/259", "id": 527228015, "node_id": "MDU6SXNzdWU1MjcyMjgwMTU=", "number": 259, "title": "Segmentation fault (core dumped)", "user": {"login": "Mettfisto", "id": 40398336, "node_id": "MDQ6VXNlcjQwMzk4MzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/40398336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mettfisto", "html_url": "https://github.com/Mettfisto", "followers_url": "https://api.github.com/users/Mettfisto/followers", "following_url": "https://api.github.com/users/Mettfisto/following{/other_user}", "gists_url": "https://api.github.com/users/Mettfisto/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mettfisto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mettfisto/subscriptions", "organizations_url": "https://api.github.com/users/Mettfisto/orgs", "repos_url": "https://api.github.com/users/Mettfisto/repos", "events_url": "https://api.github.com/users/Mettfisto/events{/privacy}", "received_events_url": "https://api.github.com/users/Mettfisto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-22T14:26:45Z", "updated_at": "2019-11-22T17:07:18Z", "closed_at": "2019-11-22T17:07:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to install it twice or update simplejson via\r\n\"pip3 install simplejson --upgrade\" or \"pip3 install simplejson\" , this error appears.\r\nTried on Ubuntu 18.04 LTS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/258", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/258/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/258/events", "html_url": "https://github.com/simplejson/simplejson/issues/258", "id": 523004150, "node_id": "MDU6SXNzdWU1MjMwMDQxNTA=", "number": 258, "title": "Officially support Python 3.7+", "user": {"login": "shaib", "id": 129187, "node_id": "MDQ6VXNlcjEyOTE4Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/129187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaib", "html_url": "https://github.com/shaib", "followers_url": "https://api.github.com/users/shaib/followers", "following_url": "https://api.github.com/users/shaib/following{/other_user}", "gists_url": "https://api.github.com/users/shaib/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaib/subscriptions", "organizations_url": "https://api.github.com/users/shaib/orgs", "repos_url": "https://api.github.com/users/shaib/repos", "events_url": "https://api.github.com/users/shaib/events{/privacy}", "received_events_url": "https://api.github.com/users/shaib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-14T17:33:32Z", "updated_at": "2019-11-18T06:45:50Z", "closed_at": "2019-11-18T06:45:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issues #238 and #240 explain that the 3.16.1 release was rolled back because of #237; there was a problem with linux wheels, and since that was the only new feature, the release was just rolled back.\r\n\r\nExcept that there was another little feature in 3.16.1, and that was official support (and automatic tests) for Python 3.7.\r\n\r\nWould you consider releasing a 3.16.x supporting the newer Pythons without the wheels? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/253", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/253/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/253/events", "html_url": "https://github.com/simplejson/simplejson/issues/253", "id": 475594550, "node_id": "MDU6SXNzdWU0NzU1OTQ1NTA=", "number": 253, "title": "Cannot stop simplejson converting bytes to str", "user": {"login": "lukehinds", "id": 7058938, "node_id": "MDQ6VXNlcjcwNTg5Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7058938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukehinds", "html_url": "https://github.com/lukehinds", "followers_url": "https://api.github.com/users/lukehinds/followers", "following_url": "https://api.github.com/users/lukehinds/following{/other_user}", "gists_url": "https://api.github.com/users/lukehinds/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukehinds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukehinds/subscriptions", "organizations_url": "https://api.github.com/users/lukehinds/orgs", "repos_url": "https://api.github.com/users/lukehinds/repos", "events_url": "https://api.github.com/users/lukehinds/events{/privacy}", "received_events_url": "https://api.github.com/users/lukehinds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T10:10:22Z", "updated_at": "2019-08-01T15:03:00Z", "closed_at": "2019-08-01T15:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to have simplejson not convert a dict from `bytes` to `str` when loading (if that is possible). \r\n\r\nFrom reading the docs I assumed `encoding=None` would achieve this, but that results in `Object of type bytes is not JSON serializable`\r\n\r\ntest code:\r\n\r\n```\r\ntry:\r\n    import simplejson as json\r\nexcept ImportError:\r\n    print(\"Not loaded!\")\r\n    exit()\r\n\r\nmy_str = b'{\"foo\": 42}'\r\n\r\nprint('my_str:', type(my_str))\r\nprint('my_str:', my_str)\r\n\r\ndumped_str = json.dumps(my_str, encoding='utf-8')\r\n\r\nprint('dumped_str:', type(load_my_str))\r\nprint('dumped_str:', load_my_str)\r\n```\r\n\r\n```\r\npython3 test.py \r\nmy_str: <class 'bytes'>\r\nmy_str: b'{\"foo\": 42}'\r\ndumped_str: <class 'str'>\r\ndumped_str: \"{\\\"foo\\\": 42}\"\r\n```\r\n\r\n```\r\nload_my_str = json.dumps(my_str)\r\n```\r\n\r\n```\r\npython3 test.py \r\nmy_str: <class 'bytes'>\r\nmy_str: b'{\"foo\": 42}'\r\ndumped_str: <class 'str'>\r\ndumped_str: \"{\\\"foo\\\": 42}\"\r\n```\r\n\r\n```\r\nload_my_str = json.dumps(my_str, encoding=None)\r\n```\r\n\r\n```\r\nmy_str: <class 'bytes'>\r\nmy_str: b'{\"foo\": 42}'\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 13, in <module>\r\n    dumped_str = json.dumps(my_str, encoding=None)\r\n  File \"/home/luke/.local/lib/python3.7/site-packages/simplejson/__init__.py\", line 399, in dumps\r\n    **kw).encode(obj)\r\n  File \"/home/luke/.local/lib/python3.7/site-packages/simplejson/encoder.py\", line 296, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/home/luke/.local/lib/python3.7/site-packages/simplejson/encoder.py\", line 378, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/home/luke/.local/lib/python3.7/site-packages/simplejson/encoder.py\", line 273, in default\r\n    o.__class__.__name__)\r\nTypeError: Object of type bytes is not JSON serializable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/252", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/252/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/252/events", "html_url": "https://github.com/simplejson/simplejson/issues/252", "id": 474823648, "node_id": "MDU6SXNzdWU0NzQ4MjM2NDg=", "number": 252, "title": "Change documentation to Python 3", "user": {"login": "tigerhawkvok", "id": 165937, "node_id": "MDQ6VXNlcjE2NTkzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/165937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigerhawkvok", "html_url": "https://github.com/tigerhawkvok", "followers_url": "https://api.github.com/users/tigerhawkvok/followers", "following_url": "https://api.github.com/users/tigerhawkvok/following{/other_user}", "gists_url": "https://api.github.com/users/tigerhawkvok/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigerhawkvok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigerhawkvok/subscriptions", "organizations_url": "https://api.github.com/users/tigerhawkvok/orgs", "repos_url": "https://api.github.com/users/tigerhawkvok/repos", "events_url": "https://api.github.com/users/tigerhawkvok/events{/privacy}", "received_events_url": "https://api.github.com/users/tigerhawkvok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-30T21:13:14Z", "updated_at": "2019-11-18T06:46:11Z", "closed_at": "2019-11-18T06:46:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given that Python 2 is EOL-ing in less than six months, the documentation shouldn't be Py2 centric.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/251", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/251/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/251/events", "html_url": "https://github.com/simplejson/simplejson/issues/251", "id": 467755738, "node_id": "MDU6SXNzdWU0Njc3NTU3Mzg=", "number": 251, "title": "Save to CSV?", "user": {"login": "leopheard", "id": 40130895, "node_id": "MDQ6VXNlcjQwMTMwODk1", "avatar_url": "https://avatars3.githubusercontent.com/u/40130895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leopheard", "html_url": "https://github.com/leopheard", "followers_url": "https://api.github.com/users/leopheard/followers", "following_url": "https://api.github.com/users/leopheard/following{/other_user}", "gists_url": "https://api.github.com/users/leopheard/gists{/gist_id}", "starred_url": "https://api.github.com/users/leopheard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leopheard/subscriptions", "organizations_url": "https://api.github.com/users/leopheard/orgs", "repos_url": "https://api.github.com/users/leopheard/repos", "events_url": "https://api.github.com/users/leopheard/events{/privacy}", "received_events_url": "https://api.github.com/users/leopheard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-13T19:03:30Z", "updated_at": "2019-07-15T02:35:13Z", "closed_at": "2019-07-15T02:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nHow do I print the output of code with simplejson into a .CSV file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/250", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/250/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/250/events", "html_url": "https://github.com/simplejson/simplejson/issues/250", "id": 456193249, "node_id": "MDU6SXNzdWU0NTYxOTMyNDk=", "number": 250, "title": "Tidelift funding opportunity", "user": {"login": "aclark4life", "id": 72164, "node_id": "MDQ6VXNlcjcyMTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/72164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aclark4life", "html_url": "https://github.com/aclark4life", "followers_url": "https://api.github.com/users/aclark4life/followers", "following_url": "https://api.github.com/users/aclark4life/following{/other_user}", "gists_url": "https://api.github.com/users/aclark4life/gists{/gist_id}", "starred_url": "https://api.github.com/users/aclark4life/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aclark4life/subscriptions", "organizations_url": "https://api.github.com/users/aclark4life/orgs", "repos_url": "https://api.github.com/users/aclark4life/repos", "events_url": "https://api.github.com/users/aclark4life/events{/privacy}", "received_events_url": "https://api.github.com/users/aclark4life/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T11:12:55Z", "updated_at": "2019-11-18T06:46:27Z", "closed_at": "2019-11-18T06:46:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Bob, any interest in funding from Tidelift?\r\n\r\n- https://tidelift.com/lifter/search/pypi/simplejson\r\n\r\nBased on my experience with Pillow, they can make it fairly easy for either you to get funding for you or divide it up amongst you & your contributors \u2026\r\n\r\nJust FYI,\r\n\r\nAlex", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/249", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/249/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/249/events", "html_url": "https://github.com/simplejson/simplejson/issues/249", "id": 442852514, "node_id": "MDU6SXNzdWU0NDI4NTI1MTQ=", "number": 249, "title": "float 1.e-5 can't be interpreted / Error with REGEXP and floats!!!!", "user": {"login": "rspadim", "id": 2468782, "node_id": "MDQ6VXNlcjI0Njg3ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2468782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspadim", "html_url": "https://github.com/rspadim", "followers_url": "https://api.github.com/users/rspadim/followers", "following_url": "https://api.github.com/users/rspadim/following{/other_user}", "gists_url": "https://api.github.com/users/rspadim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspadim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspadim/subscriptions", "organizations_url": "https://api.github.com/users/rspadim/orgs", "repos_url": "https://api.github.com/users/rspadim/repos", "events_url": "https://api.github.com/users/rspadim/events{/privacy}", "received_events_url": "https://api.github.com/users/rspadim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-10T18:56:10Z", "updated_at": "2019-05-10T20:41:57Z", "closed_at": "2019-05-10T19:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/simplejson/simplejson/blob/master/simplejson/scanner.py#L16\r\nthis json can't be interpreted\r\n---\r\nERRORS:\r\njson.loads(\"1.e-1\")\r\njson.loads(\"1.e-01\")\r\njson.loads(\"1.e-001\")\r\n\r\nOK:\r\njson.loads(\"1.0e-1\")\r\n---\r\nthe problem:    1. without 0 after it should be considered a number (javascript do it right)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/248", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/248/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/248/events", "html_url": "https://github.com/simplejson/simplejson/issues/248", "id": 434854935, "node_id": "MDU6SXNzdWU0MzQ4NTQ5MzU=", "number": 248, "title": "Disable C Extension", "user": {"login": "coler-j", "id": 7839615, "node_id": "MDQ6VXNlcjc4Mzk2MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7839615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coler-j", "html_url": "https://github.com/coler-j", "followers_url": "https://api.github.com/users/coler-j/followers", "following_url": "https://api.github.com/users/coler-j/following{/other_user}", "gists_url": "https://api.github.com/users/coler-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/coler-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coler-j/subscriptions", "organizations_url": "https://api.github.com/users/coler-j/orgs", "repos_url": "https://api.github.com/users/coler-j/repos", "events_url": "https://api.github.com/users/coler-j/events{/privacy}", "received_events_url": "https://api.github.com/users/coler-j/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T16:27:17Z", "updated_at": "2019-04-18T21:11:59Z", "closed_at": "2019-04-18T21:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do you disable the C Extension? I am having build issues on windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/245", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/245/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/245/events", "html_url": "https://github.com/simplejson/simplejson/issues/245", "id": 423982560, "node_id": "MDU6SXNzdWU0MjM5ODI1NjA=", "number": 245, "title": "Installing simplejson twice crashes", "user": {"login": "dankegel", "id": 170976, "node_id": "MDQ6VXNlcjE3MDk3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/170976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dankegel", "html_url": "https://github.com/dankegel", "followers_url": "https://api.github.com/users/dankegel/followers", "following_url": "https://api.github.com/users/dankegel/following{/other_user}", "gists_url": "https://api.github.com/users/dankegel/gists{/gist_id}", "starred_url": "https://api.github.com/users/dankegel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dankegel/subscriptions", "organizations_url": "https://api.github.com/users/dankegel/orgs", "repos_url": "https://api.github.com/users/dankegel/repos", "events_url": "https://api.github.com/users/dankegel/events{/privacy}", "received_events_url": "https://api.github.com/users/dankegel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-21T23:19:01Z", "updated_at": "2019-03-23T23:50:39Z", "closed_at": "2019-03-22T01:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like #114 was real?  \r\n\r\nSee also https://bugs.python.org/issue27542 which has the same stack backtrace as I'm seeing.\r\nHere's a reliable way to reproduce it: just run 'pip install simplejson' twice on a fresh ubuntu 18.04 system.\r\n\r\n```\r\n$ lxc launch ubuntu:18.04 snafu\r\n$ lxc exec snafu bash\r\n# apt update\r\n# apt install python-pip\r\n# su ubuntu\r\n$ cd\r\n$ pip --version\r\npip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)\r\n$ pip install simplejson\r\n$ pip install simplejson\r\nSegmentation fault (core dumped)\r\n```\r\nThe problem does not occur with the ubuntu 19.04 daily build, which has a much newer version of pip (18.1) and a somewhat newer version of python (2.7.16 vs. 2.7.15rc1).\r\n\r\nIt also does not happen with pip 19.0.3 (installed by uninstalling python-pip, then running python get-pip.py --user) on ubuntu 18.04.  So it does seem like a pip bug.  But... is there something simplejson is doing to tickle that bug?   Very few packages have this problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/243", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/243/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/243/events", "html_url": "https://github.com/simplejson/simplejson/issues/243", "id": 406354314, "node_id": "MDU6SXNzdWU0MDYzNTQzMTQ=", "number": 243, "title": "Unable to connect to json server deployed in AWS", "user": {"login": "yevsh", "id": 24428652, "node_id": "MDQ6VXNlcjI0NDI4NjUy", "avatar_url": "https://avatars1.githubusercontent.com/u/24428652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yevsh", "html_url": "https://github.com/yevsh", "followers_url": "https://api.github.com/users/yevsh/followers", "following_url": "https://api.github.com/users/yevsh/following{/other_user}", "gists_url": "https://api.github.com/users/yevsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yevsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yevsh/subscriptions", "organizations_url": "https://api.github.com/users/yevsh/orgs", "repos_url": "https://api.github.com/users/yevsh/repos", "events_url": "https://api.github.com/users/yevsh/events{/privacy}", "received_events_url": "https://api.github.com/users/yevsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-04T14:28:29Z", "updated_at": "2019-02-04T17:06:43Z", "closed_at": "2019-02-04T17:06:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "json server is deployed in AWS,\r\nGrafana runs locally on my pc.\r\n\r\nWhen I try to create Datasource and add url getting\r\nHTTP Error Bad Gateway\r\n\r\nurl is accessable from postman and returns OK.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/242", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/242/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/242/events", "html_url": "https://github.com/simplejson/simplejson/issues/242", "id": 405112035, "node_id": "MDU6SXNzdWU0MDUxMTIwMzU=", "number": 242, "title": "security issues as reported by 'bandit'", "user": {"login": "saobao913", "id": 40909959, "node_id": "MDQ6VXNlcjQwOTA5OTU5", "avatar_url": "https://avatars3.githubusercontent.com/u/40909959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saobao913", "html_url": "https://github.com/saobao913", "followers_url": "https://api.github.com/users/saobao913/followers", "following_url": "https://api.github.com/users/saobao913/following{/other_user}", "gists_url": "https://api.github.com/users/saobao913/gists{/gist_id}", "starred_url": "https://api.github.com/users/saobao913/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saobao913/subscriptions", "organizations_url": "https://api.github.com/users/saobao913/orgs", "repos_url": "https://api.github.com/users/saobao913/repos", "events_url": "https://api.github.com/users/saobao913/events{/privacy}", "received_events_url": "https://api.github.com/users/saobao913/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-31T07:18:06Z", "updated_at": "2019-01-31T07:45:46Z", "closed_at": "2019-01-31T07:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "simplejson-3.16.0\r\n\r\n\r\n\r\n[main]\tINFO\tprofile include tests: None\r\n[main]\tINFO\tprofile exclude tests: None\r\n[main]\tINFO\tcli include tests: None\r\n[main]\tINFO\tcli exclude tests: None\r\n[main]\tINFO\trunning on Python 3.6.7\r\nRun started:2019-01-31 07:16:33.106337\r\n\r\nTest results:\r\n>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.\r\n   Severity: Medium   Confidence: High\r\n   Location: simplejson-3.16.0/scripts/artifacts.py:12\r\n   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen\r\n11\tdef get_json(url):\r\n12\t    return json.loads(urlopen(url).read().decode('utf-8'))\r\n13\t\r\n\r\n--------------------------------------------------\r\n\r\nCode scanned:\r\n\tTotal lines of code: 1930\r\n\tTotal lines skipped (#nosec): 0\r\n\r\nRun metrics:\r\n\tTotal issues (by severity):\r\n\t\tUndefined: 0.0\r\n\t\tLow: 10.0\r\n\t\tMedium: 1.0\r\n\t\tHigh: 0.0\r\n\tTotal issues (by confidence):\r\n\t\tUndefined: 0.0\r\n\t\tLow: 0.0\r\n\t\tMedium: 0.0\r\n\t\tHigh: 11.0\r\nFiles skipped (0):\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/241", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/241/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/241/events", "html_url": "https://github.com/simplejson/simplejson/issues/241", "id": 377157556, "node_id": "MDU6SXNzdWUzNzcxNTc1NTY=", "number": 241, "title": "Test failures with Python 3.6 and 3.7 (simplejson.tests.test_tool.TestTool)", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-04T14:21:28Z", "updated_at": "2018-11-04T20:06:29Z", "closed_at": "2018-11-04T17:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nFAIL: test_infile_outfile (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/simplejson-3.16.0/simplejson/tests/test_tool.py\", line 104, in test_infile_outfile\r\n    self.runTool(args=[infile_name, outfile_name]),\r\n  File \"/build/simplejson-3.16.0/simplejson/tests/test_tool.py\", line 73, in runTool\r\n    self.assertEqual(strip_python_stderr(err), ''.encode())\r\nAssertionError: b\"/nix/store/b888dk7a2fbs1br06h996wyifbsir[239 chars]on 3\" != b''\r\n\r\n======================================================================\r\nFAIL: test_infile_stdout (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/simplejson-3.16.0/simplejson/tests/test_tool.py\", line 88, in test_infile_stdout\r\n    self.runTool(args=[infile_name]),\r\n  File \"/build/simplejson-3.16.0/simplejson/tests/test_tool.py\", line 73, in runTool\r\n    self.assertEqual(strip_python_stderr(err), ''.encode())\r\nAssertionError: b\"/nix/store/b888dk7a2fbs1br06h996wyifbsir[239 chars]on 3\" != b''\r\n\r\n======================================================================\r\nFAIL: test_stdin_stdout (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/simplejson-3.16.0/simplejson/tests/test_tool.py\", line 79, in test_stdin_stdout\r\n    self.runTool(data=self.data.encode()),\r\n  File \"/build/simplejson-3.16.0/simplejson/tests/test_tool.py\", line 73, in runTool\r\n    self.assertEqual(strip_python_stderr(err), ''.encode())\r\nAssertionError: b\"/nix/store/b888dk7a2fbs1br06h996wyifbsir[239 chars]on 3\" != b''\r\n\r\n----------------------------------------------------------------------\r\nRan 144 tests in 2.081s\r\n```\r\n\r\nFull log: https://nix-cache.s3.amazonaws.com/log/6vrfcwyxvgiy0yq15xalgli7v16f603f-python3.7-simplejson-3.16.0.drv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/240", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/240/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/240/events", "html_url": "https://github.com/simplejson/simplejson/issues/240", "id": 371456006, "node_id": "MDU6SXNzdWUzNzE0NTYwMDY=", "number": 240, "title": "Release v3.16.1 on PyPI", "user": {"login": "pfirpfel", "id": 621371, "node_id": "MDQ6VXNlcjYyMTM3MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/621371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfirpfel", "html_url": "https://github.com/pfirpfel", "followers_url": "https://api.github.com/users/pfirpfel/followers", "following_url": "https://api.github.com/users/pfirpfel/following{/other_user}", "gists_url": "https://api.github.com/users/pfirpfel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfirpfel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfirpfel/subscriptions", "organizations_url": "https://api.github.com/users/pfirpfel/orgs", "repos_url": "https://api.github.com/users/pfirpfel/repos", "events_url": "https://api.github.com/users/pfirpfel/events{/privacy}", "received_events_url": "https://api.github.com/users/pfirpfel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T10:08:38Z", "updated_at": "2018-10-18T13:45:57Z", "closed_at": "2018-10-18T13:45:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "simplejson is still on v3.16.0 on PyPI:\r\nhttps://pypi.org/project/simplejson/#history\r\n\r\nCould you make a release for v3.16.1 on PyPI please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/238", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/238/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/238/events", "html_url": "https://github.com/simplejson/simplejson/issues/238", "id": 359171261, "node_id": "MDU6SXNzdWUzNTkxNzEyNjE=", "number": 238, "title": "Version 3.16.1 is not available in pypi", "user": {"login": "euresti", "id": 1081858, "node_id": "MDQ6VXNlcjEwODE4NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1081858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euresti", "html_url": "https://github.com/euresti", "followers_url": "https://api.github.com/users/euresti/followers", "following_url": "https://api.github.com/users/euresti/following{/other_user}", "gists_url": "https://api.github.com/users/euresti/gists{/gist_id}", "starred_url": "https://api.github.com/users/euresti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euresti/subscriptions", "organizations_url": "https://api.github.com/users/euresti/orgs", "repos_url": "https://api.github.com/users/euresti/repos", "events_url": "https://api.github.com/users/euresti/events{/privacy}", "received_events_url": "https://api.github.com/users/euresti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-11T18:41:35Z", "updated_at": "2018-09-11T19:12:06Z", "closed_at": "2018-09-11T19:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at: https://pypi.org/project/simplejson/\r\n\r\n![image](https://user-images.githubusercontent.com/1081858/45380406-7ae0de00-b5b7-11e8-8b1a-1cfa994a1c74.png)\r\n\r\n```\r\n$ pip install simplejson==3.16.1\r\nCollecting simplejson==3.16.1\r\n  Could not find a version that satisfies the requirement simplejson==3.16.1 (from versions: 1.1, 1.3, 1.4, 1.5, 1.6, 1.7, 1.7.1, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.8, 1.8.1, 1.9, 1.9.1, 1.9.2, 1.9.3, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8, 2.0.9, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.2.0, 2.2.1, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.4.0, 2.5.0, 2.5.1, 2.5.2, 2.6.0, 2.6.1, 2.6.2, 3.0.0, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.0.8, 3.0.9, 3.1.0, 3.1.2, 3.1.3, 3.2.0, 3.3.0, 3.3.1, 3.3.2, 3.3.3, 3.4.0, 3.4.1, 3.5.0, 3.5.1, 3.5.2, 3.5.3, 3.6.0, 3.6.1, 3.6.2, 3.6.3, 3.6.4, 3.6.5, 3.7.0, 3.7.1, 3.7.2, 3.7.3, 3.8.0, 3.8.1, 3.8.2, 3.9.0, 3.10.0, 3.11.1, 3.12.0, 3.13.0, 3.13.2, 3.14.0, 3.15.0, 3.16.0)\r\nNo matching distribution found for simplejson==3.16.1\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/237", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/237/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/237/events", "html_url": "https://github.com/simplejson/simplejson/issues/237", "id": 358319014, "node_id": "MDU6SXNzdWUzNTgzMTkwMTQ=", "number": 237, "title": "simplejson-3.16.1-cp27-cp27m-manylinux1_x86_64.whl is not a supported wheel on this platform", "user": {"login": "isstabb", "id": 6967489, "node_id": "MDQ6VXNlcjY5Njc0ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6967489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isstabb", "html_url": "https://github.com/isstabb", "followers_url": "https://api.github.com/users/isstabb/followers", "following_url": "https://api.github.com/users/isstabb/following{/other_user}", "gists_url": "https://api.github.com/users/isstabb/gists{/gist_id}", "starred_url": "https://api.github.com/users/isstabb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isstabb/subscriptions", "organizations_url": "https://api.github.com/users/isstabb/orgs", "repos_url": "https://api.github.com/users/isstabb/repos", "events_url": "https://api.github.com/users/isstabb/events{/privacy}", "received_events_url": "https://api.github.com/users/isstabb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-08T18:46:55Z", "updated_at": "2018-10-11T18:42:17Z", "closed_at": "2018-09-08T20:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install simplejson==3.16.1 fails on CentOS 6.8.\r\n\r\n```\r\nbash-4.1# uname -or\r\n2.6.32-696.6.3.el6.x86_64 GNU/Linux\r\nbash-4.1# rpm --query centos-release\r\ncentos-release-6-8.el6.centos.12.3.x86_64\r\n```\r\n\r\n```\r\nsimplejson-3.16.1-cp27-cp27m-manylinux1_x86_64.whl is not a supported wheel on this platform.\r\nException information:\r\nTraceback (most recent call last):\r\n  File \"/opt/venv/lib/python2.7/site-packages/pip/basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"/opt/venv/lib/python2.7/site-packages/pip/commands/install.py\", line 312, in run\r\n    wheel_cache\r\n  File \"/opt/venv/lib/python2.7/site-packages/pip/basecommand.py\", line 297, in populate_requirement_set\r\n    requirement_set.add_requirement(req)\r\n  File \"/opt/venv/lib/python2.7/site-packages/pip/req/req_set.py\", line 245, in add_requirement\r\n    wheel.filename\r\nInstallationError: simplejson-3.16.1-cp27-cp27m-manylinux1_x86_64.whl is not a supported wheel on this platform.\r\n/\r\n```\r\n\r\nSeems probably related to https://github.com/simplejson/simplejson/pull/231", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/232", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/232/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/232/events", "html_url": "https://github.com/simplejson/simplejson/issues/232", "id": 356679931, "node_id": "MDU6SXNzdWUzNTY2Nzk5MzE=", "number": 232, "title": "Running setup.py install for simplejson ... error on python3.7.0", "user": {"login": "alirezaimi", "id": 1029949, "node_id": "MDQ6VXNlcjEwMjk5NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1029949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alirezaimi", "html_url": "https://github.com/alirezaimi", "followers_url": "https://api.github.com/users/alirezaimi/followers", "following_url": "https://api.github.com/users/alirezaimi/following{/other_user}", "gists_url": "https://api.github.com/users/alirezaimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alirezaimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alirezaimi/subscriptions", "organizations_url": "https://api.github.com/users/alirezaimi/orgs", "repos_url": "https://api.github.com/users/alirezaimi/repos", "events_url": "https://api.github.com/users/alirezaimi/events{/privacy}", "received_events_url": "https://api.github.com/users/alirezaimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-04T07:12:26Z", "updated_at": "2018-09-04T11:01:34Z", "closed_at": "2018-09-04T11:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI want to install simplejson lib for Python 3.7.0 64bit and this is i've got :\r\n\r\n\tPS C:\\> pip install simplejson\r\n\tCollecting simplejson\r\n\t  Using cached https://files.pythonhosted.org/packages/e3/24/c35fb1c1c315fc0fffe61ea00d3f88e85469004713dab488dee4f35b0af\r\n\tf/simplejson-3.16.0.tar.gz\r\n\tInstalling collected packages: simplejson\r\n\t  Running setup.py install for simplejson ... error\r\n\t\tComplete output from command c:\\python\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\dvp7\\\\AppD\r\n\tata\\\\Local\\\\Temp\\\\1\\\\pip-install-59fej34i\\\\simplejson\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read\r\n\t().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\dvp7\\AppData\\Local\\T\r\n\temp\\1\\pip-record-qklmgunh\\install-record.txt --single-version-externally-managed --compile:\r\n\t\trunning install\r\n\t\trunning build\r\n\t\trunning build_py\r\n\t\tcreating build\r\n\t\tcreating build\\lib.win-amd64-3.7\r\n\t\tcreating build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\compat.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\decoder.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\encoder.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\errors.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\ordered_dict.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\raw_json.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\scanner.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\tool.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcopying simplejson\\__init__.py -> build\\lib.win-amd64-3.7\\simplejson\r\n\t\tcreating build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_bigint_as_string.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_bitsize_int_as_string.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_check_circular.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_decimal.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_decode.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_default.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_dump.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_encode_basestring_ascii.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_encode_for_html.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_errors.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_fail.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_float.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_for_json.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_indent.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_item_sort_key.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_iterable.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_namedtuple.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_pass1.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_pass2.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_pass3.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_raw_json.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_recursion.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_scanstring.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_separators.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_speedups.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_str_subclass.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_subclass.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_tool.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_tuple.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\test_unicode.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\tcopying simplejson\\tests\\__init__.py -> build\\lib.win-amd64-3.7\\simplejson\\tests\r\n\t\trunning build_ext\r\n\t\tbuilding 'simplejson._speedups' extension\r\n\t\terror: [WinError 3] The system cannot find the path specified: 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.\r\n\t0\\\\VC\\\\PlatformSDK\\\\lib'\r\n\r\n\t\t----------------------------------------\r\n\tCommand \"c:\\python\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\dvp7\\\\AppData\\\\Local\\\\Temp\\\\1\\\\pip\r\n\t-install-59fej34i\\\\simplejson\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n')\r\n\t;f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\dvp7\\AppData\\Local\\Temp\\1\\pip-record-qklmgun\r\n\th\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in C:\\Users\\dvp7\\AppData\\Lo\r\n\tcal\\Temp\\1\\pip-install-59fej34i\\simplejson\\\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/229", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/229/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/229/events", "html_url": "https://github.com/simplejson/simplejson/issues/229", "id": 350797587, "node_id": "MDU6SXNzdWUzNTA3OTc1ODc=", "number": 229, "title": "I want 2 translate this index.rst from English to Chinese ,do u agree?", "user": {"login": "Bitllion", "id": 39736583, "node_id": "MDQ6VXNlcjM5NzM2NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/39736583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bitllion", "html_url": "https://github.com/Bitllion", "followers_url": "https://api.github.com/users/Bitllion/followers", "following_url": "https://api.github.com/users/Bitllion/following{/other_user}", "gists_url": "https://api.github.com/users/Bitllion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bitllion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bitllion/subscriptions", "organizations_url": "https://api.github.com/users/Bitllion/orgs", "repos_url": "https://api.github.com/users/Bitllion/repos", "events_url": "https://api.github.com/users/Bitllion/events{/privacy}", "received_events_url": "https://api.github.com/users/Bitllion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-15T12:50:38Z", "updated_at": "2018-08-15T13:02:37Z", "closed_at": "2018-08-15T13:02:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/228", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/228/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/228/events", "html_url": "https://github.com/simplejson/simplejson/issues/228", "id": 350248731, "node_id": "MDU6SXNzdWUzNTAyNDg3MzE=", "number": 228, "title": "simplejson.dumps default param not working !", "user": {"login": "toplinuxsir", "id": 1111353, "node_id": "MDQ6VXNlcjExMTEzNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1111353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toplinuxsir", "html_url": "https://github.com/toplinuxsir", "followers_url": "https://api.github.com/users/toplinuxsir/followers", "following_url": "https://api.github.com/users/toplinuxsir/following{/other_user}", "gists_url": "https://api.github.com/users/toplinuxsir/gists{/gist_id}", "starred_url": "https://api.github.com/users/toplinuxsir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toplinuxsir/subscriptions", "organizations_url": "https://api.github.com/users/toplinuxsir/orgs", "repos_url": "https://api.github.com/users/toplinuxsir/repos", "events_url": "https://api.github.com/users/toplinuxsir/events{/privacy}", "received_events_url": "https://api.github.com/users/toplinuxsir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-14T01:24:55Z", "updated_at": "2018-08-15T16:09:51Z", "closed_at": "2018-08-15T16:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef df_func(obj):\r\n    print(type(obj))\r\n    return str(obj)\r\n\r\n\r\nsimplejson.dumps(dict(x=1, y=2, c=\"hello\"), default=df_func)\r\n```\r\n\r\nthe df_func not called when dumps ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/227", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/227/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/227/events", "html_url": "https://github.com/simplejson/simplejson/issues/227", "id": 337756132, "node_id": "MDU6SXNzdWUzMzc3NTYxMzI=", "number": 227, "title": "segfault installing on python3.7", "user": {"login": "h4ck3rm1k3", "id": 34903, "node_id": "MDQ6VXNlcjM0OTAz", "avatar_url": "https://avatars2.githubusercontent.com/u/34903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h4ck3rm1k3", "html_url": "https://github.com/h4ck3rm1k3", "followers_url": "https://api.github.com/users/h4ck3rm1k3/followers", "following_url": "https://api.github.com/users/h4ck3rm1k3/following{/other_user}", "gists_url": "https://api.github.com/users/h4ck3rm1k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/h4ck3rm1k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h4ck3rm1k3/subscriptions", "organizations_url": "https://api.github.com/users/h4ck3rm1k3/orgs", "repos_url": "https://api.github.com/users/h4ck3rm1k3/repos", "events_url": "https://api.github.com/users/h4ck3rm1k3/events{/privacy}", "received_events_url": "https://api.github.com/users/h4ck3rm1k3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-03T06:00:38Z", "updated_at": "2018-07-03T07:51:04Z", "closed_at": "2018-07-03T06:08:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "python3.7 -m pip install simplejson\r\n```\r\nCollecting simplejson\r\nInstalling collected packages: simplejson\r\nSuccessfully installed simplejson-3.16.0\r\nSegmentation fault\r\n```\r\n\r\nSee bug report on debian for details \r\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=902835\r\n\r\nIt might be because  Py_Initialize() is not being called, see https://docs.python.org/3.7/whatsnew/3.7.html\r\n\"\"\"\r\nChanges to the startup sequence and the management of dynamic memory allocators mean that the long documented requirement to call Py_Initialize() before calling most C API functions is now relied on more heavily, and failing to abide by it may lead to segfaults in embedding applications. See the Porting to Python 3.7 section in this document and the Before Python Initialization section in the C API documentation for more details.\r\n\"\"\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/226", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/226/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/226/events", "html_url": "https://github.com/simplejson/simplejson/issues/226", "id": 337568135, "node_id": "MDU6SXNzdWUzMzc1NjgxMzU=", "number": 226, "title": "simplejson.scanner.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "user": {"login": "Allan-Nava", "id": 22498435, "node_id": "MDQ6VXNlcjIyNDk4NDM1", "avatar_url": "https://avatars3.githubusercontent.com/u/22498435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Allan-Nava", "html_url": "https://github.com/Allan-Nava", "followers_url": "https://api.github.com/users/Allan-Nava/followers", "following_url": "https://api.github.com/users/Allan-Nava/following{/other_user}", "gists_url": "https://api.github.com/users/Allan-Nava/gists{/gist_id}", "starred_url": "https://api.github.com/users/Allan-Nava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Allan-Nava/subscriptions", "organizations_url": "https://api.github.com/users/Allan-Nava/orgs", "repos_url": "https://api.github.com/users/Allan-Nava/repos", "events_url": "https://api.github.com/users/Allan-Nava/events{/privacy}", "received_events_url": "https://api.github.com/users/Allan-Nava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-02T15:37:09Z", "updated_at": "2018-07-02T15:45:10Z", "closed_at": "2018-07-02T15:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I add Authorization Bearer to my request, I have this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py\", line 249, in _legacy_get_response\r\n    response = self._get_response(request)\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/viewsets.py\", line 103, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/views.py\", line 483, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/views.py\", line 443, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/views.py\", line 471, in dispatch\r\n    self.initial(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/views.py\", line 388, in initial\r\n    self.perform_authentication(request)\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/views.py\", line 314, in perform_authentication\r\n    request.user\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/request.py\", line 222, in user\r\n    self._authenticate()\r\n  File \"/usr/local/lib/python3.5/dist-packages/rest_framework/request.py\", line 375, in _authenticate\r\n    user_auth_tuple = authenticator.authenticate(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/oidc_auth/authentication.py\", line 47, in authenticate\r\n    userinfo = self.get_userinfo(bearer_token)\r\n  File \"/usr/local/lib/python3.5/dist-packages/oidc_auth/util.py\", line 40, in wrapped\r\n    cached_value = fn(this, *args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/oidc_auth/authentication.py\", line 74, in get_userinfo\r\n    response = requests.get(self.oidc_config['userinfo_endpoint'],\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/usr/local/lib/python3.5/dist-packages/oidc_auth/authentication.py\", line 35, in oidc_config\r\n    return requests.get(api_settings.OIDC_ENDPOINT + '/.well-known/openid-configuration', verify=default_ssl_check).json()\r\n  File \"/usr/local/lib/python3.5/dist-packages/requests/models.py\", line 892, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/simplejson/__init__.py\", line 516, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/simplejson/decoder.py\", line 370, in decode\r\n    obj, end = self.raw_decode(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/simplejson/decoder.py\", line 400, in raw_decode\r\n    return self.scan_once(s, idx=_w(s, idx).end())\r\nsimplejson.scanner.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/223", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/223/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/223/events", "html_url": "https://github.com/simplejson/simplejson/issues/223", "id": 331870044, "node_id": "MDU6SXNzdWUzMzE4NzAwNDQ=", "number": 223, "title": "Duplicate symbol", "user": {"login": "hateom", "id": 7631245, "node_id": "MDQ6VXNlcjc2MzEyNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7631245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hateom", "html_url": "https://github.com/hateom", "followers_url": "https://api.github.com/users/hateom/followers", "following_url": "https://api.github.com/users/hateom/following{/other_user}", "gists_url": "https://api.github.com/users/hateom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hateom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hateom/subscriptions", "organizations_url": "https://api.github.com/users/hateom/orgs", "repos_url": "https://api.github.com/users/hateom/repos", "events_url": "https://api.github.com/users/hateom/events{/privacy}", "received_events_url": "https://api.github.com/users/hateom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-13T07:16:19Z", "updated_at": "2018-06-13T07:34:11Z", "closed_at": "2018-06-13T07:34:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using simpleJSON in my project and I call some of the functions from 2 separate cpp files.\r\nFor some reason I get the linking issues: \r\n\r\nduplicate symbol __ZN4json5ArrayEv in: [...]\r\nduplicate symbol __ZN4json6ObjectEv in: [...]\r\nduplicate symbol __ZN4jsonlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_4JSONE in: [...]\r\nduplicate symbol __ZN4json4JSON4LoadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE in: [...]\r\n\r\nIf I use it only in one cpp file it's OK.\r\nWhat's the problem?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/221", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/221/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/221/events", "html_url": "https://github.com/simplejson/simplejson/issues/221", "id": 328945706, "node_id": "MDU6SXNzdWUzMjg5NDU3MDY=", "number": 221, "title": "Documentation CSS", "user": {"login": "yoooooooooooooooooooooooo", "id": 38874621, "node_id": "MDQ6VXNlcjM4ODc0NjIx", "avatar_url": "https://avatars3.githubusercontent.com/u/38874621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoooooooooooooooooooooooo", "html_url": "https://github.com/yoooooooooooooooooooooooo", "followers_url": "https://api.github.com/users/yoooooooooooooooooooooooo/followers", "following_url": "https://api.github.com/users/yoooooooooooooooooooooooo/following{/other_user}", "gists_url": "https://api.github.com/users/yoooooooooooooooooooooooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoooooooooooooooooooooooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoooooooooooooooooooooooo/subscriptions", "organizations_url": "https://api.github.com/users/yoooooooooooooooooooooooo/orgs", "repos_url": "https://api.github.com/users/yoooooooooooooooooooooooo/repos", "events_url": "https://api.github.com/users/yoooooooooooooooooooooooo/events{/privacy}", "received_events_url": "https://api.github.com/users/yoooooooooooooooooooooooo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-04T07:54:26Z", "updated_at": "2018-06-04T22:36:55Z", "closed_at": "2018-06-04T22:36:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use `./scripts/make_docs.py` the HTML is not well formatted. It looks like it's missing some CSS styles. How can I fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/218", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/218/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/218/events", "html_url": "https://github.com/simplejson/simplejson/issues/218", "id": 317541102, "node_id": "MDU6SXNzdWUzMTc1NDExMDI=", "number": 218, "title": "Difference between implementations in handling bytes with overridden decode().", "user": {"login": "serhiy-storchaka", "id": 3659035, "node_id": "MDQ6VXNlcjM2NTkwMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3659035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serhiy-storchaka", "html_url": "https://github.com/serhiy-storchaka", "followers_url": "https://api.github.com/users/serhiy-storchaka/followers", "following_url": "https://api.github.com/users/serhiy-storchaka/following{/other_user}", "gists_url": "https://api.github.com/users/serhiy-storchaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/serhiy-storchaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serhiy-storchaka/subscriptions", "organizations_url": "https://api.github.com/users/serhiy-storchaka/orgs", "repos_url": "https://api.github.com/users/serhiy-storchaka/repos", "events_url": "https://api.github.com/users/serhiy-storchaka/events{/privacy}", "received_events_url": "https://api.github.com/users/serhiy-storchaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-25T09:09:40Z", "updated_at": "2018-05-14T20:10:28Z", "closed_at": "2018-05-14T20:10:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When serialize or deserialize `bytes` objects in Python 3 or non-ASCII `str` in Python 2, the Python and the C implementations give different results if these objects have overridden the `decode()` method. The Python implementation calls the `decode()` method for converting to unicode. The C implementation directly decodes the bytes content using the specified encoding.\r\n\r\nThis is similar to #185, but overridden `decode()` is a more rare case than overridden `__str__()`.\r\n\r\nThere are two options:\r\n\r\n* Always call the `decode()` method. This will slowdown and may complicate the C implementation.\r\n* Always bypass the `decode()` method (using `text_type(x, encoding)` instead of `x.decode(encoding)` in Python code).\r\n\r\nI prefer the latter option, but maybe there is a value of the former option.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/213", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/213/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/213/events", "html_url": "https://github.com/simplejson/simplejson/issues/213", "id": 317269274, "node_id": "MDU6SXNzdWUzMTcyNjkyNzQ=", "number": 213, "title": "Dump dictionary with binary values", "user": {"login": "grynko", "id": 4919570, "node_id": "MDQ6VXNlcjQ5MTk1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4919570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grynko", "html_url": "https://github.com/grynko", "followers_url": "https://api.github.com/users/grynko/followers", "following_url": "https://api.github.com/users/grynko/following{/other_user}", "gists_url": "https://api.github.com/users/grynko/gists{/gist_id}", "starred_url": "https://api.github.com/users/grynko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grynko/subscriptions", "organizations_url": "https://api.github.com/users/grynko/orgs", "repos_url": "https://api.github.com/users/grynko/repos", "events_url": "https://api.github.com/users/grynko/events{/privacy}", "received_events_url": "https://api.github.com/users/grynko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-24T15:05:25Z", "updated_at": "2018-04-24T23:01:24Z", "closed_at": "2018-04-24T23:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys!\r\nI had to switch from standard json library to simplejson, so I have an issue.\r\n\r\nI have dictionaries whose values may be binary image data. Ideal solution is to encode such values using base64 during the dump:\r\n\r\n```python\r\nimport json\r\n\r\ndef encoder(obj):\r\n    if isinstance(obj, bytes):\r\n        return base64.b64encode(obj).decode('ascii')\r\n    raise TypeError()\r\n\r\nd = {\"key\": b\"\\xff\"}\r\njson.dumps(d, default=encoder)\r\n```\r\nAfter the switch, the same code fails with `UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte\r\n`\r\nI tried to solve the issue different ways, including subclassing `simplejson.JSONEncoder` but with no luck.\r\n\r\nIt seems the library tries to decode each value that may be string, including `bytes` into string with specified encoding (`utf-8` by default) and I couldn't switch this off.\r\n\r\nAs for me, simplejson should call `default` before trying to decode the value itself.\r\n\r\nI will highly appreciate any suggestions on this.\r\n\r\nThanks.\r\n\r\nP.S. I'm using Python 3.6.3 and simplejson v3.11.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/209", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/209/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/209/events", "html_url": "https://github.com/simplejson/simplejson/issues/209", "id": 308382973, "node_id": "MDU6SXNzdWUzMDgzODI5NzM=", "number": 209, "title": "simple question", "user": {"login": "orange-tsai", "id": 12297371, "node_id": "MDQ6VXNlcjEyMjk3Mzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/12297371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orange-tsai", "html_url": "https://github.com/orange-tsai", "followers_url": "https://api.github.com/users/orange-tsai/followers", "following_url": "https://api.github.com/users/orange-tsai/following{/other_user}", "gists_url": "https://api.github.com/users/orange-tsai/gists{/gist_id}", "starred_url": "https://api.github.com/users/orange-tsai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orange-tsai/subscriptions", "organizations_url": "https://api.github.com/users/orange-tsai/orgs", "repos_url": "https://api.github.com/users/orange-tsai/repos", "events_url": "https://api.github.com/users/orange-tsai/events{/privacy}", "received_events_url": "https://api.github.com/users/orange-tsai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-25T20:32:25Z", "updated_at": "2018-03-26T05:31:52Z", "closed_at": "2018-03-26T05:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "You have an api key in travis.yml, is that really ok? \r\n\r\n> secure: QiadMGAmtPw+Ut7LWqa3U/tImPIgiPH79mM9o8DGBckcacp9HkDYvCGuOjs5hZbCBBuQ6IAkikotS8iCSwHey1GK9jSDbpgKvVGiACdp8HNhitY8V/S3e1UukDlMeu+Q7vCJtynSGX0BJuiOQB8ZQyQ2HEZ7kMQgTLCEO1Uljhc=", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/208", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/208/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/208/events", "html_url": "https://github.com/simplejson/simplejson/issues/208", "id": 308089586, "node_id": "MDU6SXNzdWUzMDgwODk1ODY=", "number": 208, "title": "`dumps` unnecessarily copies strings, without C extensions (or with ensure_ascii=False)", "user": {"login": "richvdh", "id": 1389908, "node_id": "MDQ6VXNlcjEzODk5MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1389908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richvdh", "html_url": "https://github.com/richvdh", "followers_url": "https://api.github.com/users/richvdh/followers", "following_url": "https://api.github.com/users/richvdh/following{/other_user}", "gists_url": "https://api.github.com/users/richvdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/richvdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richvdh/subscriptions", "organizations_url": "https://api.github.com/users/richvdh/orgs", "repos_url": "https://api.github.com/users/richvdh/repos", "events_url": "https://api.github.com/users/richvdh/events{/privacy}", "received_events_url": "https://api.github.com/users/richvdh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-23T16:07:18Z", "updated_at": "2018-03-28T07:40:17Z", "closed_at": "2018-03-27T23:04:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The fix introduced in https://github.com/simplejson/simplejson/commit/d78256146d2831e3a7080b7212d7edb90bc2d611 to work around #144 essentially means, for Python 2, that all strings are copied before serialisation - which is a significant performance overhead.\r\n\r\nTo explain, consider https://github.com/simplejson/simplejson/blob/d53d0c6/simplejson/encoder.py#L55 and https://github.com/simplejson/simplejson/blob/master/simplejson/encoder.py#L77, each of which is:\r\n\r\n```\r\n        if type(s) not in string_types:\r\n```\r\n\r\n `string_types` is `(basestring,)` on Python 2, whereas most strings are either `str` or `unicode`, so the condition fails.\r\n\r\nI'm pretty sure this wasn't the intention of that patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/206", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/206/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/206/events", "html_url": "https://github.com/simplejson/simplejson/issues/206", "id": 308084233, "node_id": "MDU6SXNzdWUzMDgwODQyMzM=", "number": 206, "title": "encoding of `\\u2028` and `\\u2029` inconsistent with `json` with ensure_ascii=False", "user": {"login": "richvdh", "id": 1389908, "node_id": "MDQ6VXNlcjEzODk5MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1389908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richvdh", "html_url": "https://github.com/richvdh", "followers_url": "https://api.github.com/users/richvdh/followers", "following_url": "https://api.github.com/users/richvdh/following{/other_user}", "gists_url": "https://api.github.com/users/richvdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/richvdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richvdh/subscriptions", "organizations_url": "https://api.github.com/users/richvdh/orgs", "repos_url": "https://api.github.com/users/richvdh/repos", "events_url": "https://api.github.com/users/richvdh/events{/privacy}", "received_events_url": "https://api.github.com/users/richvdh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-23T15:53:21Z", "updated_at": "2018-04-02T17:40:48Z", "closed_at": "2018-04-02T17:40:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you set `ensure_ascii=False`, the standard `json` module leaves `\\u2028` and `\\u2029` (line separator and paragraph separator) as their unicode characters; simplejson encodes them as `\\u` escapes:\r\n\r\n```\r\n>>> json.dumps([u\"\\u2028\"], ensure_ascii=False).encode('utf-8')\r\nb'[\"\\xe2\\x80\\xa8\"]'\r\n>>> simplejson.dumps([u\"\\u2028\"], ensure_ascii=False).encode('utf-8')\r\nb'[\"\\\\u2028\"]'\r\n```\r\n\r\n(Tested on python 2.7.12 and 3.5.2, against simplejson 3.12.3)\r\n\r\nOf course the `\\u` escape is a valid encoding of these characters, but for various reasons I'm after the unencoded version. At the very least, the inconsistency with stock json is surprising.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/204", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/204/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/204/events", "html_url": "https://github.com/simplejson/simplejson/issues/204", "id": 296131737, "node_id": "MDU6SXNzdWUyOTYxMzE3Mzc=", "number": 204, "title": "Trouble interpreting raw json code provided by webpages/files", "user": {"login": "nielstron", "id": 20638630, "node_id": "MDQ6VXNlcjIwNjM4NjMw", "avatar_url": "https://avatars0.githubusercontent.com/u/20638630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nielstron", "html_url": "https://github.com/nielstron", "followers_url": "https://api.github.com/users/nielstron/followers", "following_url": "https://api.github.com/users/nielstron/following{/other_user}", "gists_url": "https://api.github.com/users/nielstron/gists{/gist_id}", "starred_url": "https://api.github.com/users/nielstron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nielstron/subscriptions", "organizations_url": "https://api.github.com/users/nielstron/orgs", "repos_url": "https://api.github.com/users/nielstron/repos", "events_url": "https://api.github.com/users/nielstron/events{/privacy}", "received_events_url": "https://api.github.com/users/nielstron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-10T20:35:37Z", "updated_at": "2018-02-11T01:38:07Z", "closed_at": "2018-02-10T21:06:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having a look at for example `https://api.duckduckgo.com/?q=artificial%20intelligence&format=json&pretty=1` one quickly recognizes that in the section\r\n\r\n```\r\n{\r\n   \"Entity\" : \"\",\r\n   \"Heading\" : \"Artificial intelligence\",\r\n   \"AbstractText\" : \"Artificial intelligence is intelligence demonstrated by machines, in contrast to the natural intelligence displayed by humans and other animals. In computer science AI research is defined as the study of \\\"intelligent agents\\\": any device that perceives its environment and takes actions that maximize its chance of successfully achie...\r\n```\r\n\r\nthere is a `\\\"` inside the value field. This is quickly parsed by python as a single `\"` and leads to errors (because for json the field/value ends there). On the official APIs side there is no problem. \r\n\r\nThus the string retreived from the url/file read in via json.load should be treated as a [raw string](https://docs.python.org/2.0/ref/strings.html). Otherwise this leads to the problem of an empty value field in the resulting json parsed dictionary which should not be intended:\r\n```\r\n>>> r = urllib2.urlopen('https://api.duckduckgo.com/?q=artificial%20intelligence&format=json&pretty=1')\r\n>>> a = json.load(r)\r\n>>> a.get('AbstractText')\r\nu''\r\n>>> a\r\n{u'Redirect': u'', u'Definition': u'', u'DefinitionSource': u'', u'AbstractURL': u'https://en.wikipedia.org/wiki/Artificial_intelligence_(disambiguation)', u'AbstractSource': u'Wikipedia', u'Abstract': u'', u'Image': u'', u'DefinitionURL': u'', u'Results': [], u'Heading': u'Artificial intelligence', u'Infobox': u'', u'Entity': u'', u'RelatedTopics': [{u'Text': u'Artificial intelligence Artificial intellige....\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/201", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/201/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/201/events", "html_url": "https://github.com/simplejson/simplejson/issues/201", "id": 289482372, "node_id": "MDU6SXNzdWUyODk0ODIzNzI=", "number": 201, "title": "Latest cp27m version of simplejson on PyPi for OS X is 3.8.2", "user": {"login": "riannucci", "id": 133821, "node_id": "MDQ6VXNlcjEzMzgyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/133821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riannucci", "html_url": "https://github.com/riannucci", "followers_url": "https://api.github.com/users/riannucci/followers", "following_url": "https://api.github.com/users/riannucci/following{/other_user}", "gists_url": "https://api.github.com/users/riannucci/gists{/gist_id}", "starred_url": "https://api.github.com/users/riannucci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riannucci/subscriptions", "organizations_url": "https://api.github.com/users/riannucci/orgs", "repos_url": "https://api.github.com/users/riannucci/repos", "events_url": "https://api.github.com/users/riannucci/events{/privacy}", "received_events_url": "https://api.github.com/users/riannucci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-18T02:24:10Z", "updated_at": "2018-09-03T15:48:28Z", "closed_at": "2018-09-03T15:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure why... 3.13.2 is available for cp27mu, but not cp27m. Curiously the python3 wheels are all built for cp3*m.\r\n\r\nI can't figure out what's causing the abi mismatch :/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/200", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/200/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/200/events", "html_url": "https://github.com/simplejson/simplejson/issues/200", "id": 287750935, "node_id": "MDU6SXNzdWUyODc3NTA5MzU=", "number": 200, "title": "JSONDecoder hooks enhacement", "user": {"login": "Adirio", "id": 522770, "node_id": "MDQ6VXNlcjUyMjc3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/522770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adirio", "html_url": "https://github.com/Adirio", "followers_url": "https://api.github.com/users/Adirio/followers", "following_url": "https://api.github.com/users/Adirio/following{/other_user}", "gists_url": "https://api.github.com/users/Adirio/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adirio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adirio/subscriptions", "organizations_url": "https://api.github.com/users/Adirio/orgs", "repos_url": "https://api.github.com/users/Adirio/repos", "events_url": "https://api.github.com/users/Adirio/events{/privacy}", "received_events_url": "https://api.github.com/users/Adirio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-11T11:20:34Z", "updated_at": "2018-01-12T18:22:59Z", "closed_at": "2018-01-11T18:14:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "As described in the [Python's standard library issue number 29992](https://bugs.python.org/issue29992), the JSONDecoder parameters are not offering a full parsing capability:\r\n\r\n> Though the `JSONDecoder` already has all the hooks internally to allow for a custom `parse_string` (https://github.com/python/cpython/blob/master/Lib/json/decoder.py#L330), this currently is not exposed in the constructor `JSONDecoder.__init__`.\r\n>\r\n> It would be nice to expose it. Currently, I need to do hack it: https://gist.github.com/oberstet/fa8b8e04b8d532912bd616d9db65101a\r\n\r\nThis can be extended to `parse_array` (e.g. using `tuple` instead of `list`) or even `parse_key` which would be used on JSON object key strings (e.g. `datetime.datetime.utcfromtimestamp` if your keys are timestamps, quite common in databases). This last one is achievable through the `object_hook` and `object_pairs_hook` parameters but it would be way less eficient as the `dict` would already be constructed with the `str` keys and you would need to start `pop`-ing and inserting new items while it could have been done at parse time.\r\n\r\nThe [last comment](https://bugs.python.org/issue29992#msg309763) offered a patch to add this params. The C accelerated version of it has not been developed yet, as it is not taking into account the new `JSONDecoder` attributes (it wasn't taking some of the old attributes either, that's why the `py_make_scanner` function needs to be used).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/198", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/198/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/198/events", "html_url": "https://github.com/simplejson/simplejson/issues/198", "id": 278720377, "node_id": "MDU6SXNzdWUyNzg3MjAzNzc=", "number": 198, "title": "\"classifiers\" should be a list", "user": {"login": "serhiy-storchaka", "id": 3659035, "node_id": "MDQ6VXNlcjM2NTkwMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3659035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serhiy-storchaka", "html_url": "https://github.com/serhiy-storchaka", "followers_url": "https://api.github.com/users/serhiy-storchaka/followers", "following_url": "https://api.github.com/users/serhiy-storchaka/following{/other_user}", "gists_url": "https://api.github.com/users/serhiy-storchaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/serhiy-storchaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serhiy-storchaka/subscriptions", "organizations_url": "https://api.github.com/users/serhiy-storchaka/orgs", "repos_url": "https://api.github.com/users/serhiy-storchaka/repos", "events_url": "https://api.github.com/users/serhiy-storchaka/events{/privacy}", "received_events_url": "https://api.github.com/users/serhiy-storchaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T21:45:01Z", "updated_at": "2017-12-10T20:31:43Z", "closed_at": "2017-12-10T20:31:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The *classifiers* argument of `setup()` in `setup.py` should be a list. Currently it is a result of `filter()`, i.e. a list in Python 2, but an iterator in Python 3. Maybe there are other incompatibilities with Python 3.\r\n\r\nThis will cause a problem in Python 3.7. See [bpo-19610](https://bugs.python.org/issue19610) for details.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/196", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/196/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/196/events", "html_url": "https://github.com/simplejson/simplejson/issues/196", "id": 276764420, "node_id": "MDU6SXNzdWUyNzY3NjQ0MjA=", "number": 196, "title": "How to use \"optional C extension\"", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-25T17:18:07Z", "updated_at": "2017-11-27T18:43:48Z", "closed_at": "2017-11-27T18:43:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed simplejson via \"pip install simplejson\"\r\n\r\nHow do I ensure that the optional C extensions were built successfully and are actually being used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/195", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/195/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/195/events", "html_url": "https://github.com/simplejson/simplejson/issues/195", "id": 276549284, "node_id": "MDU6SXNzdWUyNzY1NDkyODQ=", "number": 195, "title": "speedups", "user": {"login": "markoh1", "id": 33544396, "node_id": "MDQ6VXNlcjMzNTQ0Mzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/33544396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markoh1", "html_url": "https://github.com/markoh1", "followers_url": "https://api.github.com/users/markoh1/followers", "following_url": "https://api.github.com/users/markoh1/following{/other_user}", "gists_url": "https://api.github.com/users/markoh1/gists{/gist_id}", "starred_url": "https://api.github.com/users/markoh1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markoh1/subscriptions", "organizations_url": "https://api.github.com/users/markoh1/orgs", "repos_url": "https://api.github.com/users/markoh1/repos", "events_url": "https://api.github.com/users/markoh1/events{/privacy}", "received_events_url": "https://api.github.com/users/markoh1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-24T08:47:49Z", "updated_at": "2017-11-24T16:17:06Z", "closed_at": "2017-11-24T16:17:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "C extension could not be compiled  (error: \u2018unicode\u2019 undeclared). I have tested this on several platforms. The log below is from Ubuntu 17.10.\r\n\r\n```\r\nroot@ubuntu:# easy_install simplejson\r\nSearching for simplejson\r\nReading https://pypi.python.org/simple/simplejson/\r\nDownloading https://pypi.python.org/packages/e3/9e/c8a71272ef5677d5abc2e9889ca946912b72a46504392972d6c40bc6ea5c/simplejson-3.13.0.tar.gz#md5=549403ccc1e95e44b9ab3da3c91c10c5\r\nBest match: simplejson 3.13.0\r\nProcessing simplejson-3.13.0.tar.gz\r\nWriting /tmp/easy_install-nW6uk1/simplejson-3.13.0/setup.cfg\r\nRunning simplejson-3.13.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-nW6uk1/simplejson-3.13.0/egg-dist-tmp-Isr9VQ\r\nIn file included from /usr/include/python2.7/Python.h:80:0,\r\n                 from simplejson/_speedups.c:2:\r\nsimplejson/_speedups.c: In function \u2018encoder_encode_string\u2019:\r\nsimplejson/_speedups.c:2824:27: error: \u2018unicode\u2019 undeclared (first use in this function); did you mean \u2018encoded\u2019?\r\n         !JSON_ASCII_Check(unicode) &&\r\n                           ^\r\n/usr/include/python2.7/object.h:659:36: note: in definition of macro \u2018PyType_HasFeature\u2019\r\n #define PyType_HasFeature(t,f)  (((t)->tp_flags & (f)) != 0)\r\n                                    ^\r\n/usr/include/python2.7/stringobject.h:59:18: note: in expansion of macro \u2018PyType_FastSubclass\u2019\r\n                  PyType_FastSubclass(Py_TYPE(op), Py_TPFLAGS_STRING_SUBCLASS)\r\n                  ^~~~~~~~~~~~~~~~~~~\r\n/usr/include/python2.7/stringobject.h:59:38: note: in expansion of macro \u2018Py_TYPE\u2019\r\n                  PyType_FastSubclass(Py_TYPE(op), Py_TPFLAGS_STRING_SUBCLASS)\r\n                                      ^~~~~~~\r\nsimplejson/_speedups.c:33:26: note: in expansion of macro \u2018PyString_Check\u2019\r\n #define JSON_ASCII_Check PyString_Check\r\n                          ^~~~~~~~~~~~~~\r\nsimplejson/_speedups.c:2824:10: note: in expansion of macro \u2018JSON_ASCII_Check\u2019\r\n         !JSON_ASCII_Check(unicode) &&\r\n          ^~~~~~~~~~~~~~~~\r\nsimplejson/_speedups.c:2824:27: note: each undeclared identifier is reported only once for each function it appears in\r\n         !JSON_ASCII_Check(unicode) &&\r\n                           ^\r\n/usr/include/python2.7/object.h:659:36: note: in definition of macro \u2018PyType_HasFeature\u2019\r\n #define PyType_HasFeature(t,f)  (((t)->tp_flags & (f)) != 0)\r\n                                    ^\r\n/usr/include/python2.7/stringobject.h:59:18: note: in expansion of macro \u2018PyType_FastSubclass\u2019\r\n                  PyType_FastSubclass(Py_TYPE(op), Py_TPFLAGS_STRING_SUBCLASS)\r\n                  ^~~~~~~~~~~~~~~~~~~\r\n/usr/include/python2.7/stringobject.h:59:38: note: in expansion of macro \u2018Py_TYPE\u2019\r\n                  PyType_FastSubclass(Py_TYPE(op), Py_TPFLAGS_STRING_SUBCLASS)\r\n                                      ^~~~~~~\r\nsimplejson/_speedups.c:33:26: note: in expansion of macro \u2018PyString_Check\u2019\r\n #define JSON_ASCII_Check PyString_Check\r\n                          ^~~~~~~~~~~~~~\r\nsimplejson/_speedups.c:2824:10: note: in expansion of macro \u2018JSON_ASCII_Check\u2019\r\n         !JSON_ASCII_Check(unicode) &&\r\n          ^~~~~~~~~~~~~~~~\r\n***************************************************************************\r\nWARNING: The C extension could not be compiled, speedups are not enabled.\r\nFailure information, if any, is above.\r\nI'm retrying the build without the C extension now.\r\n***************************************************************************\r\nzip_safe flag not set; analyzing archive contents...\r\nsimplejson.tests.__init__: module references __file__\r\n***************************************************************************\r\nWARNING: The C extension could not be compiled, speedups are not enabled.\r\nPlain-Python installation succeeded.\r\n***************************************************************************\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/193", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/193/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/193/events", "html_url": "https://github.com/simplejson/simplejson/issues/193", "id": 276534795, "node_id": "MDU6SXNzdWUyNzY1MzQ3OTU=", "number": 193, "title": "speedups fail to compile on Python 2.7", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-24T07:29:33Z", "updated_at": "2017-11-24T16:16:51Z", "closed_at": "2017-11-24T16:16:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is a new error in 3.12.1 and still present in 3.13.0:\r\n\r\n```\r\nbuilding 'simplejson._speedups' extension\r\ngcc -pthread -DNDEBUG -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python2.7 -c simplejson/_speedups.c -o build/temp.linux-x86_64-2.7/simplejson/_speedups.o\r\nIn file included from /usr/include/python2.7/Python.h:80:0,\r\n                 from simplejson/_speedups.c:2:\r\nsimplejson/_speedups.c: In function \u2018encoder_encode_string\u2019:\r\nsimplejson/_speedups.c:2824:27: error: \u2018unicode\u2019 undeclared (first use in this function); did you mean \u2018encoded\u2019?\r\n         !JSON_ASCII_Check(unicode) &&\r\n                           ^\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/192", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/192/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/192/events", "html_url": "https://github.com/simplejson/simplejson/issues/192", "id": 274555991, "node_id": "MDU6SXNzdWUyNzQ1NTU5OTE=", "number": 192, "title": "Not able to extract key:value from json data using python", "user": {"login": "rishi-pal", "id": 33282235, "node_id": "MDQ6VXNlcjMzMjgyMjM1", "avatar_url": "https://avatars2.githubusercontent.com/u/33282235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rishi-pal", "html_url": "https://github.com/rishi-pal", "followers_url": "https://api.github.com/users/rishi-pal/followers", "following_url": "https://api.github.com/users/rishi-pal/following{/other_user}", "gists_url": "https://api.github.com/users/rishi-pal/gists{/gist_id}", "starred_url": "https://api.github.com/users/rishi-pal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rishi-pal/subscriptions", "organizations_url": "https://api.github.com/users/rishi-pal/orgs", "repos_url": "https://api.github.com/users/rishi-pal/repos", "events_url": "https://api.github.com/users/rishi-pal/events{/privacy}", "received_events_url": "https://api.github.com/users/rishi-pal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-16T15:26:59Z", "updated_at": "2017-11-17T07:33:38Z", "closed_at": "2017-11-16T15:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am able to get whole json data but not able to get specific key:values from json data (url). Have someone seen this issue ?\r\nCode :\r\n===============\r\nimport urllib, json\r\nimport requests\r\nfrom requests.auth import HTTPBasicAuth\r\nurl = requests.get('http://ac-infinibox10.com/api/rest/pools', auth=HTTPBasicAuth('test', 'test'))\r\ndata = url.json()\r\n=====================\r\nprint(data)       ###### this works \r\n\r\nprint (data['id'])    ###### this does not works \r\n\r\n>>> print (data[\"id\"])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nKeyError: 'id'\r\n>>> print (data[\"id\"][0])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nKeyError: 'id'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/190", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/190/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/190/events", "html_url": "https://github.com/simplejson/simplejson/issues/190", "id": 272886720, "node_id": "MDU6SXNzdWUyNzI4ODY3MjA=", "number": 190, "title": "loads method now produces unicode string", "user": {"login": "markoh1", "id": 33544396, "node_id": "MDQ6VXNlcjMzNTQ0Mzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/33544396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markoh1", "html_url": "https://github.com/markoh1", "followers_url": "https://api.github.com/users/markoh1/followers", "following_url": "https://api.github.com/users/markoh1/following{/other_user}", "gists_url": "https://api.github.com/users/markoh1/gists{/gist_id}", "starred_url": "https://api.github.com/users/markoh1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markoh1/subscriptions", "organizations_url": "https://api.github.com/users/markoh1/orgs", "repos_url": "https://api.github.com/users/markoh1/repos", "events_url": "https://api.github.com/users/markoh1/events{/privacy}", "received_events_url": "https://api.github.com/users/markoh1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-10T10:27:25Z", "updated_at": "2017-11-23T21:38:43Z", "closed_at": "2017-11-23T21:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "loads method now produces unicode strings. Is this change intentional?\r\n\r\nBefore 3.12:\r\n\r\n```\r\nPython 2.7.14 (default, Sep 27 2017, 05:42:32)\r\n[GCC 6.4.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import simplejson as json\r\n>>> json.loads('{\"a\":1}')\r\n{'a': 1}\r\n```\r\n\r\nVer. 3.12:\r\n\r\n```\r\n>>> import simplejson as json\r\n>>> json.loads('{\"a\":1}')\r\n{u'a': 1}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/189", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/189/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/189/events", "html_url": "https://github.com/simplejson/simplejson/issues/189", "id": 272216805, "node_id": "MDU6SXNzdWUyNzIyMTY4MDU=", "number": 189, "title": "Precompiled wheels for Python 3.6", "user": {"login": "stakemura", "id": 1152138, "node_id": "MDQ6VXNlcjExNTIxMzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1152138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stakemura", "html_url": "https://github.com/stakemura", "followers_url": "https://api.github.com/users/stakemura/followers", "following_url": "https://api.github.com/users/stakemura/following{/other_user}", "gists_url": "https://api.github.com/users/stakemura/gists{/gist_id}", "starred_url": "https://api.github.com/users/stakemura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stakemura/subscriptions", "organizations_url": "https://api.github.com/users/stakemura/orgs", "repos_url": "https://api.github.com/users/stakemura/repos", "events_url": "https://api.github.com/users/stakemura/events{/privacy}", "received_events_url": "https://api.github.com/users/stakemura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-08T14:25:07Z", "updated_at": "2017-11-24T03:00:08Z", "closed_at": "2017-11-24T03:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very helpful to have binary wheel packages for Python 3.6 on UNIX / Windows platform.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/185", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/185/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/185/events", "html_url": "https://github.com/simplejson/simplejson/issues/185", "id": 271413277, "node_id": "MDU6SXNzdWUyNzE0MTMyNzc=", "number": 185, "title": "String enums broke in 3.12.0", "user": {"login": "WeirdCarrotMonster", "id": 935751, "node_id": "MDQ6VXNlcjkzNTc1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/935751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeirdCarrotMonster", "html_url": "https://github.com/WeirdCarrotMonster", "followers_url": "https://api.github.com/users/WeirdCarrotMonster/followers", "following_url": "https://api.github.com/users/WeirdCarrotMonster/following{/other_user}", "gists_url": "https://api.github.com/users/WeirdCarrotMonster/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeirdCarrotMonster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeirdCarrotMonster/subscriptions", "organizations_url": "https://api.github.com/users/WeirdCarrotMonster/orgs", "repos_url": "https://api.github.com/users/WeirdCarrotMonster/repos", "events_url": "https://api.github.com/users/WeirdCarrotMonster/events{/privacy}", "received_events_url": "https://api.github.com/users/WeirdCarrotMonster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-06T09:46:09Z", "updated_at": "2017-11-23T21:52:07Z", "closed_at": "2017-11-23T21:52:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom enum import Enum\r\n\r\nclass A(str, Enum):\r\n    A = \"a\"\r\n    B = \"b\"\r\n```\r\n\r\nwith simplejson 3.11.1\r\n\r\n```python\r\n>>> import simplejson\r\n>>> simplejson.dumps(A.A)\r\n'\"a\"'\r\n```\r\n\r\nwith simplejson 3.12.0\r\n```python\r\n>>> import simplejson\r\n>>> simplejson.dumps(A.A)\r\n'\"A.A\"'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/184", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/184/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/184/events", "html_url": "https://github.com/simplejson/simplejson/issues/184", "id": 271139368, "node_id": "MDU6SXNzdWUyNzExMzkzNjg=", "number": 184, "title": "Threaded use of simplejson does not work if thread is run during an import", "user": {"login": "jus-x", "id": 31927803, "node_id": "MDQ6VXNlcjMxOTI3ODAz", "avatar_url": "https://avatars2.githubusercontent.com/u/31927803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jus-x", "html_url": "https://github.com/jus-x", "followers_url": "https://api.github.com/users/jus-x/followers", "following_url": "https://api.github.com/users/jus-x/following{/other_user}", "gists_url": "https://api.github.com/users/jus-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/jus-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jus-x/subscriptions", "organizations_url": "https://api.github.com/users/jus-x/orgs", "repos_url": "https://api.github.com/users/jus-x/repos", "events_url": "https://api.github.com/users/jus-x/events{/privacy}", "received_events_url": "https://api.github.com/users/jus-x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-03T22:51:39Z", "updated_at": "2017-11-05T18:28:46Z", "closed_at": "2017-11-05T18:28:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce:\r\n\r\n1. Create a file testfile.py:\r\n\r\n```\r\nimport simplejson\r\nimport threading\r\n\r\nclass worker(threading.Thread):\r\n def run(self):\r\n  simplejson.dumps({})\r\n\r\nw = worker()\r\nw.start()\r\nw.join()\r\n\r\nprint 'Worker finished'\r\n```\r\n\r\n2. Run the file\r\n\r\n> $ python test.py\r\n> Worker finished\r\n\r\nThe output will be as expected\r\n\r\n3. Create a file import_testfile.py:\r\n`import testfile`\r\n\r\n4. Run import_testfile.py\r\n> $ python import_testfile.py\r\n> \r\n\r\nI've tested the issue for version **3.11.1** and **3.8.1**. The issue does **not** occur for version **3.8.1**\r\n\r\nI am running python 2.7.12 on OSX El Capitan.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/183", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/183/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/183/events", "html_url": "https://github.com/simplejson/simplejson/issues/183", "id": 264004815, "node_id": "MDU6SXNzdWUyNjQwMDQ4MTU=", "number": 183, "title": "change import to relative, so installation outside of site-packages works", "user": {"login": "nmz787", "id": 1129286, "node_id": "MDQ6VXNlcjExMjkyODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1129286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmz787", "html_url": "https://github.com/nmz787", "followers_url": "https://api.github.com/users/nmz787/followers", "following_url": "https://api.github.com/users/nmz787/following{/other_user}", "gists_url": "https://api.github.com/users/nmz787/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmz787/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmz787/subscriptions", "organizations_url": "https://api.github.com/users/nmz787/orgs", "repos_url": "https://api.github.com/users/nmz787/repos", "events_url": "https://api.github.com/users/nmz787/events{/privacy}", "received_events_url": "https://api.github.com/users/nmz787/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-09T19:41:56Z", "updated_at": "2017-10-09T19:46:19Z", "closed_at": "2017-10-09T19:46:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed simplejson with PIP, then moved the package into my project's 'thirdparty' folder so my users don't need to install extra packages on their system once they download my code (these systems won't have PIP available, at least not reliably)\r\n\r\nAfter changing my project code to import simplejson from my new location, I found this line had to be made a relative import, since my 'thirdparty' folder is not on the PATH:\r\nhttps://github.com/simplejson/simplejson/blob/db2a216a858e8fd2cbfd53ac52c7972e5d3b3c5a/simplejson/encoder.py#L17\r\n\r\njust changed to:\r\n`from .decoder import PosInf`\r\n\r\nI could also add my 'thirdparty' folder to my PYTHONPATH at run-time, but thought to avoid it. \r\nPlease let me know if you think one way or the other is better.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/182", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/182/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/182/events", "html_url": "https://github.com/simplejson/simplejson/issues/182", "id": 260908509, "node_id": "MDU6SXNzdWUyNjA5MDg1MDk=", "number": 182, "title": "UnicodeDecodeError when install simplejson under python 3.6.0", "user": {"login": "Ducatel", "id": 1184332, "node_id": "MDQ6VXNlcjExODQzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1184332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ducatel", "html_url": "https://github.com/Ducatel", "followers_url": "https://api.github.com/users/Ducatel/followers", "following_url": "https://api.github.com/users/Ducatel/following{/other_user}", "gists_url": "https://api.github.com/users/Ducatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ducatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ducatel/subscriptions", "organizations_url": "https://api.github.com/users/Ducatel/orgs", "repos_url": "https://api.github.com/users/Ducatel/repos", "events_url": "https://api.github.com/users/Ducatel/events{/privacy}", "received_events_url": "https://api.github.com/users/Ducatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-27T09:34:44Z", "updated_at": "2017-10-04T13:51:00Z", "closed_at": "2017-10-04T13:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nThere is a UnicodeDecodeError  exception when I try to install simplejson.\r\n\r\n## Error stack\r\n```\r\n(project_virtual_env) J:\\....\\project>pip install simplejson\r\nCollecting simplejson\r\n  Using cached simplejson-3.11.1.tar.gz\r\nInstalling collected packages: simplejson\r\n  Running setup.py install for simplejson ... error\r\nException:\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\compat\\__init__.py\", line 73, in console_to_str\r\n    return s.decode(sys.__stdout__.encoding)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe9 in position 66: invalid continuation byte\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\commands\\install.py\", line 342, in run\r\n    prefix=options.prefix_path,\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\req\\req_set.py\", line 784, in install\r\n    **kwargs\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\req\\req_install.py\", line 878, in install\r\n    spinner=spinner,\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\utils\\__init__.py\", line 676, in call_subprocess\r\n    line = console_to_str(proc.stdout.readline())\r\n  File \"c:\\users\\me\\appdata\\local\\temp\\project_virtual_env\\lib\\site-packages\\pip\\compat\\__init__.py\", line 75, in console_to_str\r\n    return s.decode('utf_8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xe9 in position 66: invalid continuation byte\r\n```\r\n\r\n## Step to reproduce\r\n```\r\nSET VIRTUAL_ENV_PATH=%TEMP%\\project_virtual_env\r\nJ:\\....\\project>python.exe -m venv \"%VIRTUAL_ENV_PATH%\"\r\nJ:\\....\\project>\"%VIRTUAL_ENV_PATH%\\Scripts\\activate.bat\"  \"%VIRTUAL_ENV_PATH%\\pyvenv.cfg\"\r\nJ:\\....\\project>pip install simplejson\r\n```\r\n\r\n## Extra info\r\n\r\n* Python x64 3.6.0\r\n* Pip 9.0.1\r\n* Windows 10 x64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/178", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/178/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/178/events", "html_url": "https://github.com/simplejson/simplejson/issues/178", "id": 237105350, "node_id": "MDU6SXNzdWUyMzcxMDUzNTA=", "number": 178, "title": "Missing Git tag for 3.11.1 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-20T06:30:06Z", "updated_at": "2017-06-20T14:11:23Z", "closed_at": "2017-06-20T14:11:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/177", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/177/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/177/events", "html_url": "https://github.com/simplejson/simplejson/issues/177", "id": 236983523, "node_id": "MDU6SXNzdWUyMzY5ODM1MjM=", "number": 177, "title": "Upload 3.11.0 to PyPI", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-19T18:43:18Z", "updated_at": "2017-06-19T20:13:19Z", "closed_at": "2017-06-19T20:13:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trough pyup I received an upgrade notice for simplejson to 3.11, however pip isntall fails as 3.11 is not uploaded to PyPI.\r\n\r\nPyPI: https://pypi.python.org/pypi/simplejson/3.11.0 --> 404\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/173", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/173/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/173/events", "html_url": "https://github.com/simplejson/simplejson/issues/173", "id": 236931111, "node_id": "MDU6SXNzdWUyMzY5MzExMTE=", "number": 173, "title": "item_sort_key always uses itemgetter in 3.11", "user": {"login": "doozr", "id": 1052926, "node_id": "MDQ6VXNlcjEwNTI5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1052926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doozr", "html_url": "https://github.com/doozr", "followers_url": "https://api.github.com/users/doozr/followers", "following_url": "https://api.github.com/users/doozr/following{/other_user}", "gists_url": "https://api.github.com/users/doozr/gists{/gist_id}", "starred_url": "https://api.github.com/users/doozr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doozr/subscriptions", "organizations_url": "https://api.github.com/users/doozr/orgs", "repos_url": "https://api.github.com/users/doozr/repos", "events_url": "https://api.github.com/users/doozr/events{/privacy}", "received_events_url": "https://api.github.com/users/doozr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-06-19T15:32:28Z", "updated_at": "2017-06-19T18:42:45Z", "closed_at": "2017-06-19T18:42:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got a strange bug when upgrading 3.10.0 to 3.11.0 via pip.\r\n\r\nA test started failing that used a custom sort function via `item_sort_key`. It seems that setting this kwarg has the effect of enabling sorting using the default `itemgetter` in 3.11.0.\r\n\r\nThis occurs when using the C encoder implementation.\r\n\r\nPython is 2.7.11 on Ubuntu 16.04.\r\n\r\nUsing this code:\r\n\r\n    import simplejson\r\n\r\n    def sortit(x):\r\n      return x[1]\r\n\r\n    a = {\r\n      \"c\": \"3\",\r\n      \"b\": \"1\",\r\n      \"a\": \"2\"\r\n    }\r\n\r\n    print simplejson.dumps(a, item_sort_key=sortit)\r\n\r\nOn 3.10.0:\r\n\r\n    $ python test.py\r\n    {\"b\": \"1\", \"c\": \"2\", \"a\": \"3\"}\r\n\r\nAnd on 3.11.0:\r\n\r\n    $ python test.py\r\n    {\"a\": \"2\", \"b\": \"1\", \"c\": \"3\"}\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/167", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/167/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/167/events", "html_url": "https://github.com/simplejson/simplejson/issues/167", "id": 227065312, "node_id": "MDU6SXNzdWUyMjcwNjUzMTI=", "number": 167, "title": "Results of PyObject_IsTrue() are not checked", "user": {"login": "serhiy-storchaka", "id": 3659035, "node_id": "MDQ6VXNlcjM2NTkwMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3659035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serhiy-storchaka", "html_url": "https://github.com/serhiy-storchaka", "followers_url": "https://api.github.com/users/serhiy-storchaka/followers", "following_url": "https://api.github.com/users/serhiy-storchaka/following{/other_user}", "gists_url": "https://api.github.com/users/serhiy-storchaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/serhiy-storchaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serhiy-storchaka/subscriptions", "organizations_url": "https://api.github.com/users/serhiy-storchaka/orgs", "repos_url": "https://api.github.com/users/serhiy-storchaka/repos", "events_url": "https://api.github.com/users/serhiy-storchaka/events{/privacy}", "received_events_url": "https://api.github.com/users/serhiy-storchaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-08T14:31:34Z", "updated_at": "2017-05-20T19:21:48Z", "closed_at": "2017-05-20T19:21:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Results of PyObject_IsTrue() are not always checked on error. This can cause a core dump in debug build of Python 3.\r\n```\r\n>>> class BadBool:\r\n...     def __bool__(self):\r\n...         1/0\r\n...     __nonzero__ = __bool__\r\n... \r\n>>> import simplejson\r\n>>> simplejson.loads('\"abc\"', strict=BadBool())\r\nFatal Python error: a function returned a result with an error set\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 3, in __bool__\r\nZeroDivisionError: division by zero\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nSystemError: <simplejson._speedups.Scanner object at 0xb6eb35d4> returned a result with an error set\r\n\r\nCurrent thread 0xb7514940 (most recent call first):\r\n  File \"/home/serhiy/.local/lib/python3.7/site-packages/simplejson/decoder.py\", line 404 in raw_decode\r\n  File \"/home/serhiy/.local/lib/python3.7/site-packages/simplejson/decoder.py\", line 374 in decode\r\n  File \"/home/serhiy/.local/lib/python3.7/site-packages/simplejson/__init__.py\", line 533 in loads\r\n  File \"<stdin>\", line 1 in <module>\r\nAborted (core dumped)\r\n```\r\nIn release build and on Python 2 this can cause mystical bugs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/165", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/165/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/165/events", "html_url": "https://github.com/simplejson/simplejson/issues/165", "id": 226570497, "node_id": "MDU6SXNzdWUyMjY1NzA0OTc=", "number": 165, "title": "Problem with misusing `__init__` methods of _speedups.c objects", "user": {"login": "serhiy-storchaka", "id": 3659035, "node_id": "MDQ6VXNlcjM2NTkwMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3659035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serhiy-storchaka", "html_url": "https://github.com/serhiy-storchaka", "followers_url": "https://api.github.com/users/serhiy-storchaka/followers", "following_url": "https://api.github.com/users/serhiy-storchaka/following{/other_user}", "gists_url": "https://api.github.com/users/serhiy-storchaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/serhiy-storchaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serhiy-storchaka/subscriptions", "organizations_url": "https://api.github.com/users/serhiy-storchaka/orgs", "repos_url": "https://api.github.com/users/serhiy-storchaka/repos", "events_url": "https://api.github.com/users/serhiy-storchaka/events{/privacy}", "received_events_url": "https://api.github.com/users/serhiy-storchaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-05T13:18:47Z", "updated_at": "2017-05-18T15:02:38Z", "closed_at": "2017-05-18T15:02:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Repeated calling `__init__` method of scanner or encoder objects from `_speedups.c` causes memory leaks. Using scanner or encoder objects created with `__new__`, without calling `__init__`, causes a core dump. See CPython issue: http://bugs.python.org/issue30243. I think the solution of this issue is applicable to simplejson.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/163", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/163/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/163/events", "html_url": "https://github.com/simplejson/simplejson/issues/163", "id": 224727527, "node_id": "MDU6SXNzdWUyMjQ3Mjc1Mjc=", "number": 163, "title": "Fuzz testing simplejson", "user": {"login": "ssbr", "id": 356788, "node_id": "MDQ6VXNlcjM1Njc4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/356788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbr", "html_url": "https://github.com/ssbr", "followers_url": "https://api.github.com/users/ssbr/followers", "following_url": "https://api.github.com/users/ssbr/following{/other_user}", "gists_url": "https://api.github.com/users/ssbr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbr/subscriptions", "organizations_url": "https://api.github.com/users/ssbr/orgs", "repos_url": "https://api.github.com/users/ssbr/repos", "events_url": "https://api.github.com/users/ssbr/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-27T09:38:14Z", "updated_at": "2018-06-28T22:46:01Z", "closed_at": "2018-06-28T22:46:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/google/oss-fuzz\r\n\r\nI'd like to add fuzz tests for simplejson's `_speedups` extension module, either to oss-fuzz directly, or to simplejson to be imported by oss-fuzz. See [Ideal Integration](https://github.com/google/oss-fuzz/blob/master/docs/ideal_integration.md). The idea is to test for possible crashes / memory safety issues in current and future versions of the code. (Admitting, however, that it's simple and unlikely to have problems).\r\n\r\nDoes this sound like a good plan?\r\n\r\n\r\nThe way a fuzz test works is it's a C library that exports `int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)`, and gets linked with the fuzz binary which calls it with a random string. I have a draft fuzz test which embeds CPython, imports simplejson, and runs loads on the random string.\r\n\r\nI have a few questions before I can turn this into a real PR:\r\n\r\n* What would be the best (least likely to break) way to check that `_speedups` is enabled? There's little point to fuzzing Python code.\r\n* Would it be reasonable to add the fuzz test to `simplejson` itself, rather than oss-fuzz? This would mean it could be tested as part of the unit tests, and would be less likely to get broken someday. (Not entirely sure about how to integrate it with the tests yet -- in principle, should be able to add an extension module that just gets called with \"{}\" for testing purposes.)\r\n* Who / what email(s) should I list as the contact for fuzz results if a security issue is found? (They have to be [connected to a google account](https://support.google.com/accounts/answer/176347?hl=en) for [reasons](https://github.com/google/oss-fuzz/blob/master/docs/faq.md#why-do-you-require-an-e-mail-associated-with-a-google-account)).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/161", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/161/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/161/events", "html_url": "https://github.com/simplejson/simplejson/issues/161", "id": 222985972, "node_id": "MDU6SXNzdWUyMjI5ODU5NzI=", "number": 161, "title": "Typo in the doc for loads", "user": {"login": "bmampaey", "id": 3693702, "node_id": "MDQ6VXNlcjM2OTM3MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3693702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmampaey", "html_url": "https://github.com/bmampaey", "followers_url": "https://api.github.com/users/bmampaey/followers", "following_url": "https://api.github.com/users/bmampaey/following{/other_user}", "gists_url": "https://api.github.com/users/bmampaey/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmampaey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmampaey/subscriptions", "organizations_url": "https://api.github.com/users/bmampaey/orgs", "repos_url": "https://api.github.com/users/bmampaey/repos", "events_url": "https://api.github.com/users/bmampaey/events{/privacy}", "received_events_url": "https://api.github.com/users/bmampaey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-20T08:20:47Z", "updated_at": "2017-05-08T15:39:06Z", "closed_at": "2017-05-08T15:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The function loads take a string s as first parameter, but the doc says that it takes fp\r\n\r\nfunction:: load**s(fp**, encoding='utf-8', cls=None, object_hook=None, \\\r\n                    parse_float=None, parse_int=None, \\\r\n                    parse_constant=None, object_pairs_hook=None, \\\r\n                    use_decimal=None, **kw)\r\n\r\n   Deserialize *s* (a :class:`str` or :class:`unicode` instance containing a JSON\r\n   document) to a Python object. :exc:`JSONDecodeError` will be\r\n   raised if the given JSON document is not valid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/160", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/160/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/160/events", "html_url": "https://github.com/simplejson/simplejson/issues/160", "id": 212341486, "node_id": "MDU6SXNzdWUyMTIzNDE0ODY=", "number": 160, "title": "Sometime, null reference exception occurs in Escape(System.String aText) of JSONNode", "user": {"login": "twkim913", "id": 11250813, "node_id": "MDQ6VXNlcjExMjUwODEz", "avatar_url": "https://avatars3.githubusercontent.com/u/11250813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twkim913", "html_url": "https://github.com/twkim913", "followers_url": "https://api.github.com/users/twkim913/followers", "following_url": "https://api.github.com/users/twkim913/following{/other_user}", "gists_url": "https://api.github.com/users/twkim913/gists{/gist_id}", "starred_url": "https://api.github.com/users/twkim913/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twkim913/subscriptions", "organizations_url": "https://api.github.com/users/twkim913/orgs", "repos_url": "https://api.github.com/users/twkim913/repos", "events_url": "https://api.github.com/users/twkim913/events{/privacy}", "received_events_url": "https://api.github.com/users/twkim913/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-07T06:21:46Z", "updated_at": "2017-03-07T16:08:34Z", "closed_at": "2017-03-07T16:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Well, I'm using simple json in Unity to save and load user data.\r\nIt has been a sound tool till now.\r\nAnd I found a problem today.\r\nSometime (And it's reproducible), when I call ToString() of JSONClass , a null string goes into Escape(System.String aText) of JSONNode.\r\nAnd it crashes inside it with null reference exception. (So my game stops on loading scene)\r\nIs this intended process or should this fixed with null check?\r\n\r\nBelow is the log of the crash\r\n\r\nNullReferenceException: Object reference not set to an instance of an object\r\n                                            at SimpleJSON.JSONNode.Escape (System.String aText) [0x00000] in <filename unknown>:0 \r\n                                            at SimpleJSON.JSONData.ToString () [0x00000] in <filename unknown>:0 \r\n                                            at SimpleJSON.JSONClass.ToString () [0x00000] in <filename unknown>:0 \r\n                                            at SimpleJSON.JSONClass.ToString () [0x00000] in <filename unknown>:0 \r\n                                            at UserManager.SaveUserData () [0x00000] in <filename unknown>:0 \r\n\r\nSorry if my writing was bit messy, this is my first writing on github. (if this can be an excuse)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/155", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/155/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/155/events", "html_url": "https://github.com/simplejson/simplejson/issues/155", "id": 201513104, "node_id": "MDU6SXNzdWUyMDE1MTMxMDQ=", "number": 155, "title": "Type annotations", "user": {"login": "vidstige", "id": 655605, "node_id": "MDQ6VXNlcjY1NTYwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/655605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vidstige", "html_url": "https://github.com/vidstige", "followers_url": "https://api.github.com/users/vidstige/followers", "following_url": "https://api.github.com/users/vidstige/following{/other_user}", "gists_url": "https://api.github.com/users/vidstige/gists{/gist_id}", "starred_url": "https://api.github.com/users/vidstige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vidstige/subscriptions", "organizations_url": "https://api.github.com/users/vidstige/orgs", "repos_url": "https://api.github.com/users/vidstige/repos", "events_url": "https://api.github.com/users/vidstige/events{/privacy}", "received_events_url": "https://api.github.com/users/vidstige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-18T08:58:59Z", "updated_at": "2017-01-19T05:42:46Z", "closed_at": "2017-01-19T05:42:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "To get a better developer experience, let's add python3 type annotations\r\n\r\n```python3\r\ndef loads(s: str) -> dict:\r\n  return dict()\r\n```\r\n\r\nThis will allow tools such as IDEas and linters to work better.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/150", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/150/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/150/events", "html_url": "https://github.com/simplejson/simplejson/issues/150", "id": 198101206, "node_id": "MDU6SXNzdWUxOTgxMDEyMDY=", "number": 150, "title": "Where to find the c_make_encoder code?", "user": {"login": "zhangqunshi", "id": 1841330, "node_id": "MDQ6VXNlcjE4NDEzMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1841330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangqunshi", "html_url": "https://github.com/zhangqunshi", "followers_url": "https://api.github.com/users/zhangqunshi/followers", "following_url": "https://api.github.com/users/zhangqunshi/following{/other_user}", "gists_url": "https://api.github.com/users/zhangqunshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangqunshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangqunshi/subscriptions", "organizations_url": "https://api.github.com/users/zhangqunshi/orgs", "repos_url": "https://api.github.com/users/zhangqunshi/repos", "events_url": "https://api.github.com/users/zhangqunshi/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangqunshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-30T03:49:02Z", "updated_at": "2017-01-03T05:36:27Z", "closed_at": "2016-12-31T19:30:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI want to add a init parameter 'emptystr' for JSONEncoder, the purpose of the parameter is to convert the None to empty string, not the 'null'. But i cannot find code of 'c_make_encoder' \r\n```\r\ntry:\r\n    from _json import make_encoder as c_make_encoder\r\nexcept ImportError:\r\n    c_make_encoder = None\r\n```\r\nAnybody knows where is the C code?\r\n\r\nThanks,\r\nKris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/148", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/148/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/148/events", "html_url": "https://github.com/simplejson/simplejson/issues/148", "id": 189846009, "node_id": "MDU6SXNzdWUxODk4NDYwMDk=", "number": 148, "title": "How does tests run on OS without os.fork()?", "user": {"login": "fedor4ever", "id": 5883442, "node_id": "MDQ6VXNlcjU4ODM0NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5883442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedor4ever", "html_url": "https://github.com/fedor4ever", "followers_url": "https://api.github.com/users/fedor4ever/followers", "following_url": "https://api.github.com/users/fedor4ever/following{/other_user}", "gists_url": "https://api.github.com/users/fedor4ever/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedor4ever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedor4ever/subscriptions", "organizations_url": "https://api.github.com/users/fedor4ever/orgs", "repos_url": "https://api.github.com/users/fedor4ever/repos", "events_url": "https://api.github.com/users/fedor4ever/events{/privacy}", "received_events_url": "https://api.github.com/users/fedor4ever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-16T21:10:40Z", "updated_at": "2016-11-16T23:24:11Z", "closed_at": "2016-11-16T23:24:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I want run full test suite.\r\n\r\nI modify `__init__.py` in tests folder and run tests via test_sjson.py on phone. [My fork](https://github.com/fedor4ever/simplejson)\r\nSome test failed because Symbian doesn't support fork mechanics. How important are these tests?\r\n\r\nAfter test ends I saw in python console \"C Extension not aviable\" 4 times. Not in log file.\r\nI build _speedups.pyd for PyS60 2.0.0(Symbian port based on 2.5.4 CPython). I can import it.\r\n\r\nHere test results:\r\n........................................................................................................EEE................................................\r\n======================================================================\r\nERROR: test_infile_outfile (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 90, in test_infile_outfile\r\n    self.runTool(args=[infile.name, outfile.name]),\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 62, in runTool\r\n    stdout=subprocess.PIPE)\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 594, in __init__\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 1017, in _execute_child\r\nAttributeError: 'module' object has no attribute 'fork'\r\n\r\n======================================================================\r\nERROR: test_infile_stdout (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 78, in test_infile_stdout\r\n    self.runTool(args=[infile.name]),\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 62, in runTool\r\n    stdout=subprocess.PIPE)\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 594, in __init__\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 1017, in _execute_child\r\nAttributeError: 'module' object has no attribute 'fork'\r\n\r\n======================================================================\r\nERROR: test_stdin_stdout (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 70, in test_stdin_stdout\r\n    self.runTool(data=self.data.encode()),\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 62, in runTool\r\n    stdout=subprocess.PIPE)\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 594, in __init__\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 1017, in _execute_child\r\nAttributeError: 'module' object has no attribute 'fork'\r\n\r\n======================================================================\r\nERROR: test_infile_outfile (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 90, in test_infile_outfile\r\n    self.runTool(args=[infile.name, outfile.name]),\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 62, in runTool\r\n    stdout=subprocess.PIPE)\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 594, in __init__\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 1017, in _execute_child\r\nAttributeError: 'module' object has no attribute 'fork'\r\n\r\n======================================================================\r\nERROR: test_infile_stdout (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 78, in test_infile_stdout\r\n    self.runTool(args=[infile.name]),\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 62, in runTool\r\n    stdout=subprocess.PIPE)\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 594, in __init__\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 1017, in _execute_child\r\nAttributeError: 'module' object has no attribute 'fork'\r\n\r\n======================================================================\r\nERROR: test_stdin_stdout (simplejson.tests.test_tool.TestTool)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 70, in test_stdin_stdout\r\n    self.runTool(data=self.data.encode()),\r\n  File \"c:\\resource\\python25\\simplejson\\tests\\test_tool.py\", line 62, in runTool\r\n    stdout=subprocess.PIPE)\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 594, in __init__\r\n  File \"scriptshell_dir_043026\\subprocess.py\", line 1017, in _execute_child\r\nAttributeError: 'module' object has no attribute 'fork'\r\n\r\n----------------------------------------------------------------------\r\nRan 254 tests in 126.596s\r\n\r\nFAILED (errors=6)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/147", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/147/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/147/events", "html_url": "https://github.com/simplejson/simplejson/issues/147", "id": 184550574, "node_id": "MDU6SXNzdWUxODQ1NTA1NzQ=", "number": 147, "title": "Don't publish os x tarball as source code", "user": {"login": "skeenan947", "id": 4419319, "node_id": "MDQ6VXNlcjQ0MTkzMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4419319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skeenan947", "html_url": "https://github.com/skeenan947", "followers_url": "https://api.github.com/users/skeenan947/followers", "following_url": "https://api.github.com/users/skeenan947/following{/other_user}", "gists_url": "https://api.github.com/users/skeenan947/gists{/gist_id}", "starred_url": "https://api.github.com/users/skeenan947/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skeenan947/subscriptions", "organizations_url": "https://api.github.com/users/skeenan947/orgs", "repos_url": "https://api.github.com/users/skeenan947/repos", "events_url": "https://api.github.com/users/skeenan947/events{/privacy}", "received_events_url": "https://api.github.com/users/skeenan947/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-21T19:24:12Z", "updated_at": "2016-10-21T23:47:14Z", "closed_at": "2016-10-21T23:45:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "With 3.9.0, pip is pulling down simplejson-3.9.0.macosx-10.10-x86_64.tar.gz instead of the actual source, which causes the install to fail.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/145", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/145/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/145/events", "html_url": "https://github.com/simplejson/simplejson/issues/145", "id": 175946359, "node_id": "MDU6SXNzdWUxNzU5NDYzNTk=", "number": 145, "title": " getting memory error while trying to do dumps even for a very small data", "user": {"login": "viveksoundrapandi", "id": 1433567, "node_id": "MDQ6VXNlcjE0MzM1Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1433567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viveksoundrapandi", "html_url": "https://github.com/viveksoundrapandi", "followers_url": "https://api.github.com/users/viveksoundrapandi/followers", "following_url": "https://api.github.com/users/viveksoundrapandi/following{/other_user}", "gists_url": "https://api.github.com/users/viveksoundrapandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/viveksoundrapandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viveksoundrapandi/subscriptions", "organizations_url": "https://api.github.com/users/viveksoundrapandi/orgs", "repos_url": "https://api.github.com/users/viveksoundrapandi/repos", "events_url": "https://api.github.com/users/viveksoundrapandi/events{/privacy}", "received_events_url": "https://api.github.com/users/viveksoundrapandi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-09T07:35:33Z", "updated_at": "2016-10-21T03:37:20Z", "closed_at": "2016-10-21T03:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "client_data_extension_req = simplejson.dumps(client_data_extension_req)\n  File \"/usr/local/lib/python2.7/site-packages/simplejson/**init**.py\", line 380, in dumps\n    return _default_encoder.encode(obj)\n  File \"/usr/local/lib/python2.7/site-packages/simplejson/encoder.py\", line 269, in encode\n    return encode_basestring_ascii(o)\nMemoryError\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/144", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/144/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/144/events", "html_url": "https://github.com/simplejson/simplejson/issues/144", "id": 174780773, "node_id": "MDU6SXNzdWUxNzQ3ODA3NzM=", "number": 144, "title": "simplejson.dumps(markupsafe.Markup('string with \"quotes\"')) breaks without C extensions", "user": {"login": "ThiefMaster", "id": 179599, "node_id": "MDQ6VXNlcjE3OTU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThiefMaster", "html_url": "https://github.com/ThiefMaster", "followers_url": "https://api.github.com/users/ThiefMaster/followers", "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}", "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions", "organizations_url": "https://api.github.com/users/ThiefMaster/orgs", "repos_url": "https://api.github.com/users/ThiefMaster/repos", "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/ThiefMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-02T15:02:42Z", "updated_at": "2016-10-21T10:22:22Z", "closed_at": "2016-10-21T10:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[adrian@blackhole:/tmp/test]> pip install markupsafe simplejson\nCollecting markupsafe\nCollecting simplejson\nInstalling collected packages: markupsafe, simplejson\nSuccessfully installed markupsafe-0.23 simplejson-3.8.2\n\n[adrian@blackhole:/tmp/test]> python\nPython 2.7.10 (default, Nov 18 2015, 14:51:52)\n[GCC 4.9.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from markupsafe import Markup\n>>> from simplejson import dumps\n>>> print dumps(Markup('<a href=\"/foo\">test</a>'))\n\"<a href=\\\"/foo\\\">test</a>\"\n\n[adrian@blackhole:/tmp/test]> rm lib/python2.7/site-packages/simplejson/_speedups.so\n[adrian@blackhole:/tmp/test]> python\nPython 2.7.10 (default, Nov 18 2015, 14:51:52)\n[GCC 4.9.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from markupsafe import Markup\n>>> from simplejson import dumps\n>>> print dumps(Markup('<a href=\"/foo\">test</a>'))\n\"<a href=\\&#34;/foo\\&#34;>test</a>\"\n```\n\nThe version that's not using the C extensions returns broken JSON when serializing `Markup` objects containing double quotes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/140", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/140/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/140/events", "html_url": "https://github.com/simplejson/simplejson/issues/140", "id": 163291982, "node_id": "MDU6SXNzdWUxNjMyOTE5ODI=", "number": 140, "title": "Simplejson what version do i need for zgemma", "user": {"login": "Zgerman", "id": 20233425, "node_id": "MDQ6VXNlcjIwMjMzNDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/20233425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zgerman", "html_url": "https://github.com/Zgerman", "followers_url": "https://api.github.com/users/Zgerman/followers", "following_url": "https://api.github.com/users/Zgerman/following{/other_user}", "gists_url": "https://api.github.com/users/Zgerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zgerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zgerman/subscriptions", "organizations_url": "https://api.github.com/users/Zgerman/orgs", "repos_url": "https://api.github.com/users/Zgerman/repos", "events_url": "https://api.github.com/users/Zgerman/events{/privacy}", "received_events_url": "https://api.github.com/users/Zgerman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-30T23:56:44Z", "updated_at": "2016-07-01T00:53:16Z", "closed_at": "2016-07-01T00:53:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "hHi i got a zgemma box with vix image i want to install simplejson what file do i need as there are so many thank you\n\nFile    Type    Py Version  Uploaded on Size\nsimplejson-3.8.2-cp27-cp27m-macosx_10_9_x86_64.whl (md5, pgp)   Python Wheel    cp27    2016-02-15  65KB\nsimplejson-3.8.2-cp27-cp27m-win32.whl (md5, pgp)    Python Wheel    cp27    2016-02-15  63KB\nsimplejson-3.8.2-cp27-cp27m-win_amd64.whl (md5, pgp)    Python Wheel    cp27    2016-02-15  64KB\nsimplejson-3.8.2-cp33-none-win32.whl (md5, pgp) Python Wheel    cp33    2016-02-15  62KB\nsimplejson-3.8.2-cp33-none-win_amd64.whl (md5, pgp) Python Wheel    cp33    2016-02-15  63KB\nsimplejson-3.8.2-cp34-cp34m-win32.whl (md5, pgp)    Python Wheel    cp34    2016-02-15  62KB\nsimplejson-3.8.2-cp34-cp34m-win_amd64.whl (md5, pgp)    Python Wheel    cp34    2016-02-15  63KB\nsimplejson-3.8.2-cp35-cp35m-macosx_10_9_x86_64.whl (md5, pgp)   Python Wheel    cp35    2016-02-15  65KB\nsimplejson-3.8.2-cp35-cp35m-win32.whl (md5, pgp)    Python Wheel    cp35    2016-02-15  63KB\nsimplejson-3.8.2-cp35-cp35m-win_amd64.whl (md5, pgp)    Python Wheel    cp35    2016-02-15  65KB\nsimplejson-3.8.2.tar.gz (md5, pgp)  Source      2016-02-15  74KB\nsimplejson-3.8.2.win-amd64-py2.7.exe (md5, pgp) MS Windows installer    2.7 2016-02-15  282KB\nsimplejson-3.8.2.win-amd64-py3.3.exe (md5, pgp) MS Windows installer    3.3 2016-02-15  279KB\nsimplejson-3.8.2.win-amd64-py3.4.exe (md5, pgp) MS Windows installer    3.4 2016-02-15  279KB\nsimplejson-3.8.2.win-amd64-py3.5.exe (md5, pgp) MS Windows installer    3.5 2016-02-15  198KB\nsimplejson-3.8.2.win32-py2.7.exe (md5, pgp) MS Windows installer    2.7 2016-02-15  254KB\nsimplejson-3.8.2.win32-py3.3.exe (md5, pgp) MS Windows installer    3.3 2016-02-15  248KB\nsimplejson-3.8.2.win32-py3.4.exe (md5, pgp) MS Windows installer    3.4 2016-02-15  248KB\nsimplejson-3.8.2.win32-py3.5.exe (md5, pgp) MS Windows installer    3.5 2016-02-15  189KB\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/139", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/139/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/139/events", "html_url": "https://github.com/simplejson/simplejson/issues/139", "id": 158474855, "node_id": "MDU6SXNzdWUxNTg0NzQ4NTU=", "number": 139, "title": "UnicodeDecodeError despite using ensure_ascii=False ", "user": {"login": "john-savveo", "id": 1954452, "node_id": "MDQ6VXNlcjE5NTQ0NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1954452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-savveo", "html_url": "https://github.com/john-savveo", "followers_url": "https://api.github.com/users/john-savveo/followers", "following_url": "https://api.github.com/users/john-savveo/following{/other_user}", "gists_url": "https://api.github.com/users/john-savveo/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-savveo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-savveo/subscriptions", "organizations_url": "https://api.github.com/users/john-savveo/orgs", "repos_url": "https://api.github.com/users/john-savveo/repos", "events_url": "https://api.github.com/users/john-savveo/events{/privacy}", "received_events_url": "https://api.github.com/users/john-savveo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-03T23:53:47Z", "updated_at": "2016-06-04T00:02:59Z", "closed_at": "2016-06-04T00:02:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran across a difference in how the standard json module and simplejson handles a specific str with \"ensure_ascii=False\".\n\nWith the standard json module, there is no UnicodeDecodeError.\n\nWith simplejson there is a UnicodeDecodeError.\n\nThe str in question is \"\\xe3\", which is not a valid UTF-8 or UTF-16 string.  \n\nPlease see the example below:\n\n```\n$ python\nPython 2.6.6 (r266:84292, Oct 16 2014, 16:53:15)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.51)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import json\n>>> import simplejson\n>>> simplejson.__version__\n'3.8.2'\n>>> s=\"\\xe3\"\n>>> s\n'\\xe3'\n>>> json.dumps(s,ensure_ascii=False)\n'\"\\xe3\"'\n>>> simplejson.dumps(s,ensure_ascii=False)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/jwiederhold/.pyenv/versions/arcviz_2.6/lib/python2.6/site-packages/simplejson/__init__.py\", line 397, in dumps\n    **kw).encode(obj)\n  File \"/Users/jwiederhold/.pyenv/versions/arcviz_2.6/lib/python2.6/site-packages/simplejson/encoder.py\", line 271, in encode\n    return encode_basestring(o)\n  File \"/Users/jwiederhold/.pyenv/versions/arcviz_2.6/lib/python2.6/site-packages/simplejson/encoder.py\", line 51, in encode_basestring\n    s = s.decode('utf-8')\n  File \"/Users/jwiederhold/.pyenv/versions/arcviz_2.6/lib/python2.6/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xe3 in position 0: unexpected end of data\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/138", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/138/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/138/events", "html_url": "https://github.com/simplejson/simplejson/issues/138", "id": 157623018, "node_id": "MDU6SXNzdWUxNTc2MjMwMTg=", "number": 138, "title": "Unable to pip install --upgrade simplejson under cygwin", "user": {"login": "kgeo", "id": 1777085, "node_id": "MDQ6VXNlcjE3NzcwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1777085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kgeo", "html_url": "https://github.com/kgeo", "followers_url": "https://api.github.com/users/kgeo/followers", "following_url": "https://api.github.com/users/kgeo/following{/other_user}", "gists_url": "https://api.github.com/users/kgeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kgeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kgeo/subscriptions", "organizations_url": "https://api.github.com/users/kgeo/orgs", "repos_url": "https://api.github.com/users/kgeo/repos", "events_url": "https://api.github.com/users/kgeo/events{/privacy}", "received_events_url": "https://api.github.com/users/kgeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-31T09:04:41Z", "updated_at": "2016-10-28T10:21:17Z", "closed_at": "2016-10-28T10:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed the latest cygwin (64bit) under Windows 10 today, which comes with simplejson 3.6.5 in its packages. I want to use the Google API Python Client. pip installing that, loads and updates a bunch of packages, but crashes when trying to upgrade simplejson. I can isolate that as follows:\n\n```\n$ pip install --upgrade simplejson\nCollecting simplejson\n  Using cached simplejson-3.8.2.tar.gz\nInstalling collected packages: simplejson\n  Found existing installation: simplejson 3.6.5\n    Uninstalling simplejson-3.6.5:\n      Successfully uninstalled simplejson-3.6.5\n      1 [main] python2.7 7452 child_info_fork::abort: unable to map C:\\cygwin64\\lib\\python2.7\\site-packages\\simplejson\\_speedups.dll, Win32 error 126\n    Error [Errno 11] Resource temporarily unavailable while executing command /usr/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-_nSo9B/simplejson/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-yReBDw-record/install-record.txt --single-version-externally-managed --compile\n  Running setup.py install for simplejson ... error\n  Rolling back uninstall of simplejson\nException:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/pip/basecommand.py\", line 215, in main\n    status = self.run(options, args)\n  File \"/usr/lib/python2.7/site-packages/pip/commands/install.py\", line 317, in run\n    prefix=options.prefix_path,\n  File \"/usr/lib/python2.7/site-packages/pip/req/req_set.py\", line 742, in install\n    **kwargs\n  File \"/usr/lib/python2.7/site-packages/pip/req/req_install.py\", line 880, in install\n    spinner=spinner,\n  File \"/usr/lib/python2.7/site-packages/pip/utils/__init__.py\", line 678, in call_subprocess\n    cwd=cwd, env=env)\n  File \"/usr/lib/python2.7/subprocess.py\", line 710, in __init__\n    errread, errwrite)\n  File \"/usr/lib/python2.7/subprocess.py\", line 1231, in _execute_child\n    self.pid = os.fork()\nOSError: [Errno 11] Resource temporarily unavailable\n```\n\nIt might have to do with the backslashes in `C:\\cygwin64\\lib\\python2.7\\site-packages\\simplejson\\_speedups.dll`, but I am not sure. The fle exists and is at that particular path.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/136", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/136/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/136/events", "html_url": "https://github.com/simplejson/simplejson/issues/136", "id": 153883870, "node_id": "MDU6SXNzdWUxNTM4ODM4NzA=", "number": 136, "title": "Deserialze list ios", "user": {"login": "amccorma", "id": 7855498, "node_id": "MDQ6VXNlcjc4NTU0OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7855498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amccorma", "html_url": "https://github.com/amccorma", "followers_url": "https://api.github.com/users/amccorma/followers", "following_url": "https://api.github.com/users/amccorma/following{/other_user}", "gists_url": "https://api.github.com/users/amccorma/gists{/gist_id}", "starred_url": "https://api.github.com/users/amccorma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amccorma/subscriptions", "organizations_url": "https://api.github.com/users/amccorma/orgs", "repos_url": "https://api.github.com/users/amccorma/repos", "events_url": "https://api.github.com/users/amccorma/events{/privacy}", "received_events_url": "https://api.github.com/users/amccorma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-09T22:25:10Z", "updated_at": "2016-05-10T00:59:39Z", "closed_at": "2016-05-10T00:59:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "iOS xamarin C#\n\nWill not deseralize a list of objects. I traced the code in the debugger to the point where it assigns the list to the property.  Setter.value.value ()  the objects are correct but returns a null list.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/133", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/133/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/133/events", "html_url": "https://github.com/simplejson/simplejson/issues/133", "id": 129367441, "node_id": "MDU6SXNzdWUxMjkzNjc0NDE=", "number": 133, "title": "Make JSON number serialization compatible with ES6 (and V8)", "user": {"login": "cyberphone", "id": 8044211, "node_id": "MDQ6VXNlcjgwNDQyMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8044211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberphone", "html_url": "https://github.com/cyberphone", "followers_url": "https://api.github.com/users/cyberphone/followers", "following_url": "https://api.github.com/users/cyberphone/following{/other_user}", "gists_url": "https://api.github.com/users/cyberphone/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberphone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberphone/subscriptions", "organizations_url": "https://api.github.com/users/cyberphone/orgs", "repos_url": "https://api.github.com/users/cyberphone/repos", "events_url": "https://api.github.com/users/cyberphone/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberphone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-28T07:32:33Z", "updated_at": "2016-01-30T18:46:24Z", "closed_at": "2016-01-28T10:19:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://bugs.python.org/issue26229\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/132", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/132/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/132/events", "html_url": "https://github.com/simplejson/simplejson/issues/132", "id": 123992895, "node_id": "MDU6SXNzdWUxMjM5OTI4OTU=", "number": 132, "title": "TypeError: __init__() got an unexpected keyword argument 'use_decimal'", "user": {"login": "oneTimePad", "id": 11430814, "node_id": "MDQ6VXNlcjExNDMwODE0", "avatar_url": "https://avatars2.githubusercontent.com/u/11430814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oneTimePad", "html_url": "https://github.com/oneTimePad", "followers_url": "https://api.github.com/users/oneTimePad/followers", "following_url": "https://api.github.com/users/oneTimePad/following{/other_user}", "gists_url": "https://api.github.com/users/oneTimePad/gists{/gist_id}", "starred_url": "https://api.github.com/users/oneTimePad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oneTimePad/subscriptions", "organizations_url": "https://api.github.com/users/oneTimePad/orgs", "repos_url": "https://api.github.com/users/oneTimePad/repos", "events_url": "https://api.github.com/users/oneTimePad/events{/privacy}", "received_events_url": "https://api.github.com/users/oneTimePad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-27T19:11:37Z", "updated_at": "2016-04-09T07:57:16Z", "closed_at": "2016-04-09T07:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I read in the docs that the \"use_decimal\" keyword is supported in the current version. However I still get this error when running simplejson with Django1.9 on python3.4. I have the latest version from here.\n\n  return HttpResponse(simplejson.dumps(targetData,use_decimal=True),'application/json')\n  File \"/usr/lib/python3.4/json/**init**.py\", line 237, in dumps\n    **kw).encode(obj)\nTypeError: **init**() got an unexpected keyword argument 'use_decimal'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/131", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/131/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/131/events", "html_url": "https://github.com/simplejson/simplejson/issues/131", "id": 122305220, "node_id": "MDU6SXNzdWUxMjIzMDUyMjA=", "number": 131, "title": "Signed floats without zero before decimal point not decoded", "user": {"login": "JorjMcKie", "id": 8290722, "node_id": "MDQ6VXNlcjgyOTA3MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8290722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JorjMcKie", "html_url": "https://github.com/JorjMcKie", "followers_url": "https://api.github.com/users/JorjMcKie/followers", "following_url": "https://api.github.com/users/JorjMcKie/following{/other_user}", "gists_url": "https://api.github.com/users/JorjMcKie/gists{/gist_id}", "starred_url": "https://api.github.com/users/JorjMcKie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JorjMcKie/subscriptions", "organizations_url": "https://api.github.com/users/JorjMcKie/orgs", "repos_url": "https://api.github.com/users/JorjMcKie/repos", "events_url": "https://api.github.com/users/JorjMcKie/events{/privacy}", "received_events_url": "https://api.github.com/users/JorjMcKie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-15T16:05:14Z", "updated_at": "2015-12-15T19:34:00Z", "closed_at": "2015-12-15T16:11:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "A valid float-convertible Python string will not be decoded correctly if the sign is immediately followed by decimal point:\n\n```\nC:\\>python\nPython 2.7.9 (default, Dec 10 2014, 12:24:55) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> a='-.123'\n>>> float(a)\n-0.123\n```\n\n**But:**\n\n```\n>>> import simplejson\n>>> simplejson.loads(a)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\Python27\\lib\\site-packages\\simplejson\\__init__.py\", line 516, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\Python27\\lib\\site-packages\\simplejson\\decoder.py\", line 370, in decode\n    obj, end = self.raw_decode(s)\n  File \"C:\\Python27\\lib\\site-packages\\simplejson\\decoder.py\", line 400, in raw_decode\n    return self.scan_once(s, idx=_w(s, idx).end())\nsimplejson.scanner.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/129", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/129/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/129/events", "html_url": "https://github.com/simplejson/simplejson/issues/129", "id": 115533207, "node_id": "MDU6SXNzdWUxMTU1MzMyMDc=", "number": 129, "title": "error __init__() got an unexpected keyword argument 'iterable_as_array'", "user": {"login": "sam-thecoder", "id": 15666437, "node_id": "MDQ6VXNlcjE1NjY2NDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/15666437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-thecoder", "html_url": "https://github.com/sam-thecoder", "followers_url": "https://api.github.com/users/sam-thecoder/followers", "following_url": "https://api.github.com/users/sam-thecoder/following{/other_user}", "gists_url": "https://api.github.com/users/sam-thecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-thecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-thecoder/subscriptions", "organizations_url": "https://api.github.com/users/sam-thecoder/orgs", "repos_url": "https://api.github.com/users/sam-thecoder/repos", "events_url": "https://api.github.com/users/sam-thecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-thecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-06T16:03:36Z", "updated_at": "2015-11-09T16:22:30Z", "closed_at": "2015-11-06T18:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've upgraded all the django apps and on my website and djangorestframework which serves data to a mobile app crashed. The issue seems to end at simplejson http://stackoverflow.com/questions/33562605/django-rest-framework-simplejson-error-init-got-an-unexpected-keyword-argu\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/128", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/128/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/128/events", "html_url": "https://github.com/simplejson/simplejson/issues/128", "id": 113368149, "node_id": "MDU6SXNzdWUxMTMzNjgxNDk=", "number": 128, "title": "simplejson generates invalid json with iterable_as_array and indent is set", "user": {"login": "ffix", "id": 1624866, "node_id": "MDQ6VXNlcjE2MjQ4NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1624866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffix", "html_url": "https://github.com/ffix", "followers_url": "https://api.github.com/users/ffix/followers", "following_url": "https://api.github.com/users/ffix/following{/other_user}", "gists_url": "https://api.github.com/users/ffix/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffix/subscriptions", "organizations_url": "https://api.github.com/users/ffix/orgs", "repos_url": "https://api.github.com/users/ffix/repos", "events_url": "https://api.github.com/users/ffix/events{/privacy}", "received_events_url": "https://api.github.com/users/ffix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-26T14:28:17Z", "updated_at": "2015-10-27T15:33:01Z", "closed_at": "2015-10-27T15:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found a strange issue with iterable_as_array=True, indent=any_integer_value and empty iterable.\n\nIt's easy to reproduce:\n\n```\nIn [1]: from simplejson import dumps\n\nIn [2]: x=(i for i in [])\n\nIn [3]: dumps(x, iterable_as_array=True, indent=2)\nOut[3]: '\\n]'\n```\n\nYes, it's newline and right square bracket.\n\nThere is no issue without indent option:\n\n```\nIn [6]: dumps(x, iterable_as_array=True)\nOut[6]: '[]'\n```\n\nI'm using latest version of simplejson (3.8.0) with python 3.5.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/127", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/127/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/127/events", "html_url": "https://github.com/simplejson/simplejson/issues/127", "id": 112403820, "node_id": "MDU6SXNzdWUxMTI0MDM4MjA=", "number": 127, "title": "Encoding Issue for \u00f1.", "user": {"login": "gddc", "id": 2123835, "node_id": "MDQ6VXNlcjIxMjM4MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2123835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gddc", "html_url": "https://github.com/gddc", "followers_url": "https://api.github.com/users/gddc/followers", "following_url": "https://api.github.com/users/gddc/following{/other_user}", "gists_url": "https://api.github.com/users/gddc/gists{/gist_id}", "starred_url": "https://api.github.com/users/gddc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gddc/subscriptions", "organizations_url": "https://api.github.com/users/gddc/orgs", "repos_url": "https://api.github.com/users/gddc/repos", "events_url": "https://api.github.com/users/gddc/events{/privacy}", "received_events_url": "https://api.github.com/users/gddc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-20T16:06:46Z", "updated_at": "2015-10-20T16:14:24Z", "closed_at": "2015-10-20T16:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to encounter incorrect encoding for accented characters such as \u00f1.  I believe the correct encoding for this character should be `\\u00F1` but it is being encoded as `\\uFFF1`.  When it is later decoded by another language the character does not display properly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/126", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/126/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/126/events", "html_url": "https://github.com/simplejson/simplejson/issues/126", "id": 112127322, "node_id": "MDU6SXNzdWUxMTIxMjczMjI=", "number": 126, "title": "Pip wheel", "user": {"login": "Yuav", "id": 1322650, "node_id": "MDQ6VXNlcjEzMjI2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1322650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yuav", "html_url": "https://github.com/Yuav", "followers_url": "https://api.github.com/users/Yuav/followers", "following_url": "https://api.github.com/users/Yuav/following{/other_user}", "gists_url": "https://api.github.com/users/Yuav/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yuav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yuav/subscriptions", "organizations_url": "https://api.github.com/users/Yuav/orgs", "repos_url": "https://api.github.com/users/Yuav/repos", "events_url": "https://api.github.com/users/Yuav/events{/privacy}", "received_events_url": "https://api.github.com/users/Yuav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-19T11:40:56Z", "updated_at": "2015-10-19T14:23:03Z", "closed_at": "2015-10-19T14:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please consider publishing a wheel to PyPI for faster installs\n\nhttp://pythonwheels.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/125", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/125/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/125/events", "html_url": "https://github.com/simplejson/simplejson/issues/125", "id": 111175704, "node_id": "MDU6SXNzdWUxMTExNzU3MDQ=", "number": 125, "title": "embed JSON within JSON without load/dump steps", "user": {"login": "wardi", "id": 153258, "node_id": "MDQ6VXNlcjE1MzI1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/153258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wardi", "html_url": "https://github.com/wardi", "followers_url": "https://api.github.com/users/wardi/followers", "following_url": "https://api.github.com/users/wardi/following{/other_user}", "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}", "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wardi/subscriptions", "organizations_url": "https://api.github.com/users/wardi/orgs", "repos_url": "https://api.github.com/users/wardi/repos", "events_url": "https://api.github.com/users/wardi/events{/privacy}", "received_events_url": "https://api.github.com/users/wardi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-13T13:06:01Z", "updated_at": "2016-10-28T09:25:56Z", "closed_at": "2016-10-28T09:25:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a JSON-based API that is often returning cached blocks of JSON as part of its responses. The majority of the the time generating responses for users was spent dumping large blocks of JSON into Python dicts, lists etc. only to immediately load them as part of a JSON response. To improve its performance I've written a [terrible hack](https://github.com/ckan/ckan/blob/7a6e8e768f2c16fce48f122b11e510d9b8f240ca/ckan/lib/lazyjson.py#L39-L59). Since #118 was fixed my terrible hack no longer works.\n\nInstead of making my hack even worse, I would like to submit a change to simplejson that would let me hook the `_iterencode` step to produce my own raw JSON as part of the encoded result. Would you accept such a change, and how would you like to see it done?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/124", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/124/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/124/events", "html_url": "https://github.com/simplejson/simplejson/issues/124", "id": 109584931, "node_id": "MDU6SXNzdWUxMDk1ODQ5MzE=", "number": 124, "title": "Why is subclassing JSONEncoder no longer recommended?", "user": {"login": "sprin", "id": 1452117, "node_id": "MDQ6VXNlcjE0NTIxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1452117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprin", "html_url": "https://github.com/sprin", "followers_url": "https://api.github.com/users/sprin/followers", "following_url": "https://api.github.com/users/sprin/following{/other_user}", "gists_url": "https://api.github.com/users/sprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprin/subscriptions", "organizations_url": "https://api.github.com/users/sprin/orgs", "repos_url": "https://api.github.com/users/sprin/repos", "events_url": "https://api.github.com/users/sprin/events{/privacy}", "received_events_url": "https://api.github.com/users/sprin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-02T22:47:08Z", "updated_at": "2015-10-04T21:24:24Z", "closed_at": "2015-10-03T06:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs for [`JSONEncoder.default`](https://simplejson.readthedocs.org/en/latest/#simplejson.JSONEncoder.default) say:\n\n> Subclassing is not recommended. You should implement this as a function and pass it to the default kwarg of dumps(). This is faster and more portable than subclassing.\n\nWhy is using the `default` kwarg faster/more portable?\n\nWhat is the recommended way of implementing the strategy pattern for custom JSON encoders if subclasses of `JSONEncoder` are not recommended?\n\nThanks for simplejson!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/122", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/122/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/122/events", "html_url": "https://github.com/simplejson/simplejson/issues/122", "id": 101483019, "node_id": "MDU6SXNzdWUxMDE0ODMwMTk=", "number": 122, "title": "wheels for simplejson", "user": {"login": "srkunze", "id": 1389648, "node_id": "MDQ6VXNlcjEzODk2NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1389648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srkunze", "html_url": "https://github.com/srkunze", "followers_url": "https://api.github.com/users/srkunze/followers", "following_url": "https://api.github.com/users/srkunze/following{/other_user}", "gists_url": "https://api.github.com/users/srkunze/gists{/gist_id}", "starred_url": "https://api.github.com/users/srkunze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srkunze/subscriptions", "organizations_url": "https://api.github.com/users/srkunze/orgs", "repos_url": "https://api.github.com/users/srkunze/repos", "events_url": "https://api.github.com/users/srkunze/events{/privacy}", "received_events_url": "https://api.github.com/users/srkunze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-08-17T18:36:26Z", "updated_at": "2016-07-12T22:46:52Z", "closed_at": "2015-08-17T20:18:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you provide wheels for simplejson?\n\nhttp://pythonwheels.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/120", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/120/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/120/events", "html_url": "https://github.com/simplejson/simplejson/issues/120", "id": 90706127, "node_id": "MDU6SXNzdWU5MDcwNjEyNw==", "number": 120, "title": "simplejson 3.7.3 won't install on cygwin", "user": {"login": "furlongm", "id": 114803, "node_id": "MDQ6VXNlcjExNDgwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/114803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/furlongm", "html_url": "https://github.com/furlongm", "followers_url": "https://api.github.com/users/furlongm/followers", "following_url": "https://api.github.com/users/furlongm/following{/other_user}", "gists_url": "https://api.github.com/users/furlongm/gists{/gist_id}", "starred_url": "https://api.github.com/users/furlongm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/furlongm/subscriptions", "organizations_url": "https://api.github.com/users/furlongm/orgs", "repos_url": "https://api.github.com/users/furlongm/repos", "events_url": "https://api.github.com/users/furlongm/events{/privacy}", "received_events_url": "https://api.github.com/users/furlongm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-24T15:18:08Z", "updated_at": "2015-06-24T17:20:24Z", "closed_at": "2015-06-24T17:18:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This happens every time with 3.7.3. No issue with 3.6.5.\n\n```\nCollecting simplejson==3.7.3\n  Using cached simplejson-3.7.3.tar.gz\nInstalling collected packages: simplejson\n  Found existing installation: simplejson 3.6.5\n    Uninstalling simplejson-3.6.5:\n      Successfully uninstalled simplejson-3.6.5\n  Running setup.py install for simplejson\n      0 [main] python2.7 5044 child_info_fork::abort: unable to map C:\\cygwin\\lib\\python2.7\\site-packages\\simplejson\\_speedups.dll, Win32 error 126\n    Error [Errno 11] Resource temporarily unavailable while executing command /usr/bin/python2.7 -c \"import setuptools, tokenize;__file__='/tmp/pip-build-MYU23f/simplejson/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-w0K0LP-record/install-record.txt --single-version-externally-managed --compile\n  Rolling back uninstall of simplejson\nException:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/pip/basecommand.py\", line 223, in main\n    status = self.run(options, args)\n  File \"/usr/lib/python2.7/site-packages/pip/commands/install.py\", line 297, in run\n    root=options.root_path,\n  File \"/usr/lib/python2.7/site-packages/pip/req/req_set.py\", line 622, in install\n    **kwargs\n  File \"/usr/lib/python2.7/site-packages/pip/req/req_install.py\", line 857, in install\n    show_stdout=False,\n  File \"/usr/lib/python2.7/site-packages/pip/utils/__init__.py\", line 701, in call_subprocess\n    cwd=cwd, env=env)\n  File \"/usr/lib/python2.7/subprocess.py\", line 710, in __init__\n    errread, errwrite)\n  File \"/usr/lib/python2.7/subprocess.py\", line 1231, in _execute_child\n    self.pid = os.fork()\nOSError: [Errno 11] Resource temporarily unavailable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/118", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/118/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/118/events", "html_url": "https://github.com/simplejson/simplejson/issues/118", "id": 77707417, "node_id": "MDU6SXNzdWU3NzcwNzQxNw==", "number": 118, "title": "Cant JSON serialize sqlalchemy.util.langhelpers.symbol", "user": {"login": "kshep", "id": 19683, "node_id": "MDQ6VXNlcjE5Njgz", "avatar_url": "https://avatars1.githubusercontent.com/u/19683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kshep", "html_url": "https://github.com/kshep", "followers_url": "https://api.github.com/users/kshep/followers", "following_url": "https://api.github.com/users/kshep/following{/other_user}", "gists_url": "https://api.github.com/users/kshep/gists{/gist_id}", "starred_url": "https://api.github.com/users/kshep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kshep/subscriptions", "organizations_url": "https://api.github.com/users/kshep/orgs", "repos_url": "https://api.github.com/users/kshep/repos", "events_url": "https://api.github.com/users/kshep/events{/privacy}", "received_events_url": "https://api.github.com/users/kshep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-05-18T15:50:04Z", "updated_at": "2015-05-28T08:46:57Z", "closed_at": "2015-05-18T19:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've also logged this as a SQLAlchemy issue here: https://bitbucket.org/zzzeek/sqlalchemy/issue/3422/cant-json-serialize\n\nbut reporting it here per @zzzeek's comment on that issue.\n\n---\n\nStarting with version SQLAlchemy 0.9.0, simplejson sees util.symbol objects as integers, causing it to generate invalid JSON.\n\nWe're trying to serialize stack traces and function arguments as JSON, and although we've defined a custom JSONEncoder default() method to handle non-standard data types, we're getting invalid JSON like:\n\n```\n...\n\"args\": [\n    \"<sqlalchemy.orm.attributes.ScalarAttributeImpl object at 0x4966090>\",\n    \"<sqlalchemy.orm.state.InstanceState object at 0x52ca650>\",\n    \"{'_data': {'follower_count': None, 'followers': None, 'following': None, 'locale': u'zh_hans', 'region': None, 'timezone': u'Africa/Cairo', 'utc_offset': Decimal('2.0')}, '_modified': {'locale': u'zh_hans'}, '_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x52ca650>, 'locale': u'zh_hans'}\",\n    symbol('PASSIVE_OFF')\n],\n...\n```\n\n...because while our custom default() method handles data types simplejson doesn't recognize, it thinks \"symbol('PASSIVE_OFF')\" is an int, and dumps the raw value into the JSON.\n\nTo reproduce (using python 2.7.6, sqlalchemy 1.0.4, simplejson 3.6.5):\n\n```\nPython 2.7.6 (default, Sep  9 2014, 15:04:36)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sqlalchemy as sa\n>>> import json\n>>> sym = sa.util.symbol(\"PASSIVE_OFF\")\n>>> data = ['str1', 123, sym]\n>>> print json.JSONEncoder().encode(data)\n[\"str1\", 123, symbol('PASSIVE_OFF')]\n>>> print sym\nsymbol('PASSIVE_OFF')\n>>> type(sym)\n<class 'sqlalchemy.util.langhelpers.symbol'>\n>>> isinstance(sym,int)\nTrue\n```\n\nPython 3 handles this slightly differently: rather than \"symbol('PASSIVE_OFF')\" in the JSON, we see integers like -4343837943729882877 in the output of encode().\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/117", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/117/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/117/events", "html_url": "https://github.com/simplejson/simplejson/issues/117", "id": 75815459, "node_id": "MDU6SXNzdWU3NTgxNTQ1OQ==", "number": 117, "title": "When running tests via nose I get ImportError", "user": {"login": "comatory", "id": 5990424, "node_id": "MDQ6VXNlcjU5OTA0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5990424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comatory", "html_url": "https://github.com/comatory", "followers_url": "https://api.github.com/users/comatory/followers", "following_url": "https://api.github.com/users/comatory/following{/other_user}", "gists_url": "https://api.github.com/users/comatory/gists{/gist_id}", "starred_url": "https://api.github.com/users/comatory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comatory/subscriptions", "organizations_url": "https://api.github.com/users/comatory/orgs", "repos_url": "https://api.github.com/users/comatory/repos", "events_url": "https://api.github.com/users/comatory/events{/privacy}", "received_events_url": "https://api.github.com/users/comatory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-13T02:27:29Z", "updated_at": "2015-05-13T05:52:46Z", "closed_at": "2015-05-13T05:52:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "My app uses simplejson, everything is running in virtualenv and the app works fine, even individual modules but whenever I try to test everything using nose I get:\n\n`ImportError: No module named simplejson`\n\nI'm using OS X 10.9.5, I get error when installing via `pip` and also when installing from source.\n\n`Running setup.py install for simplejson\n    building 'simplejson._speedups' extension\n    cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c simplejson/_speedups.c -o build/temp.macosx-10.9-intel-2.7/simplejson/_speedups.o\n    simplejson/_speedups.c:2640:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]\n            int int_as_string_bitcount_val = PyLong_AsLong(int_as_string_bitcount);\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    1 warning generated.\n    cc -bundle -undefined dynamic_lookup -arch x86_64 -arch i386 -Wl,-F. build/temp.macosx-10.9-intel-2.7/simplejson/_speedups.o -o build/lib.macosx-10.9-intel-2.7/simplejson/_speedups.so`\n\nLooks like there is no issue on Fedore 21 VM, even when installing from `pip`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/114", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/114/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/114/events", "html_url": "https://github.com/simplejson/simplejson/issues/114", "id": 55025654, "node_id": "MDU6SXNzdWU1NTAyNTY1NA==", "number": 114, "title": "pip wheel segfaults after simplejson is installed", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2015-01-21T14:30:56Z", "updated_at": "2018-05-02T17:20:14Z", "closed_at": "2015-08-12T16:37:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "This only happens after simplejson is installed so I'm logging the issue here.\n\nThe backtrace is a bit skimpy, but unfortunately this doesn't reproduce with python-dbg.\n\nNeither it does reproduce if I compile a custom 2.7.9 Python. Everyone should be using that, but alas, Ubuntu's LTS release comes with 2.7.3, unlikely many people will have 2.7.9 :cry: \n\n```\nionel@minibox:~$ pip --version\npip 6.0.6 from /usr/local/lib/python2.7/dist-packages (python 2.7)\n\nionel@minibox:~$ easy_install --version\nsetuptools 11.3.1\n\nionel@minibox:~$ python --version\nPython 2.7.3\n\nionel@minibox:~$ lsb\nlsblk        lsb_release\n\nionel@minibox:~$ lsb_release\nNo LSB modules are available.\n\nionel@minibox:~$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 12.04.5 LTS\nRelease:        12.04\nCodename:       precise\n\nionel@minibox:~$ pip wheel --wheel-dir=. simplejson\nCollecting simplejson\n  Using cached simplejson-3.6.5.tar.gz\nBuilding wheels for collected packages: simplejson\n  Running setup.py bdist_wheel for simplejson\n  Destination directory: /home/ionel\nSuccessfully built simplejson\n\nionel@minibox:~$ rm -rf .ve\nvirtualenv .ve --system-site-packages\nNew python executable in .ve/bin/python\nInstalling setuptools, pip...done.\n\nionel@minibox:~$ .ve/bin/pip install -I simplejson-3.6.5-cp27-none-linux_x86_64.whl\nProcessing ./simplejson-3.6.5-cp27-none-linux_x86_64.whl\nInstalling collected packages: simplejson\nSuccessfully installed simplejson-3.6.5\n\nionel@minibox:~$ .ve/bin/pip install -I simplejson-3.6.5-cp27-none-linux_x86_64.whl\nProcessing ./simplejson-3.6.5-cp27-none-linux_x86_64.whl\nInstalling collected packages: simplejson\nSuccessfully installed simplejson-3.6.5\nSegmentation fault (core dumped)\n\nionel@minibox:~$ LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so .ve/bin/pip install -I simplejson-3.6.5-cp27-none-linux_x86_64.whl\nProcessing ./simplejson-3.6.5-cp27-none-linux_x86_64.whl\nInstalling collected packages: simplejson\n\nSuccessfully installed simplejson-3.6.5\n*** Segmentation fault\nRegister dump:\n\n RAX: 0000000000000000   RBX: 00007f57897ee4e0   RCX: 0000000001ed4f00\n RDX: 0000000001ed4f18   RSI: 0000000000000000   RDI: 00007f57897ee4e0\n RBP: 0000000000555de0   R8 : 00000000024c2190   R9 : 0000000002486840\n R10: 0000000000000008   R11: 0000000000000206   R12: 000000000000000f\n R13: 00007f57897ee4e0   R14: 0000000000000000   R15: 0000000000000002\n RSP: 00007fffaf78abd0\n\n RIP: 0000000000555de8   EFLAGS: 00010206\n\n CS: 0033   FS: 0000   GS: 0000\n\n Trap: 0000000e   Error: 00000004   OldMask: 00000000   CR2: 000000a9\n\n FPUCW: 0000037f   FPUSW: 00000000   TAG: 00000000\n RIP: 00000000   RDP: 00000000\n\n ST(0) 0000 0000000000000000   ST(1) 0000 0000000000000000\n ST(2) 0000 0000000000000000   ST(3) 0000 0000000000000000\n ST(4) 0000 0000000000000000   ST(5) 0000 0000000000000000\n ST(6) 0000 0000000000000000   ST(7) 0000 0000000000000000\n mxcsr: 1fa0\n XMM0:  00000000000000000000000000000000 XMM1:  00000000000000000000000000000000\n XMM2:  00000000000000000000000000000000 XMM3:  00000000000000000000000000000000\n XMM4:  00000000000000000000000000000000 XMM5:  00000000000000000000000000000000\n XMM6:  00000000000000000000000000000000 XMM7:  00000000000000000000000000000000\n XMM8:  00000000000000000000000000000000 XMM9:  00000000000000000000000000000000\n XMM10: 00000000000000000000000000000000 XMM11: 00000000000000000000000000000000\n XMM12: 00000000000000000000000000000000 XMM13: 00000000000000000000000000000000\n XMM14: 00000000000000000000000000000000 XMM15: 00000000000000000000000000000000\n\nBacktrace:\n/home/ionel/.ve/bin/python[0x555de8]\n/home/ionel/.ve/bin/python[0x554666]\n/home/ionel/.ve/bin/python[0x539045]\n/home/ionel/.ve/bin/python(Py_Finalize+0x1ec)[0x4f62fc]\n/home/ionel/.ve/bin/python(Py_Exit+0x8)[0x4f6768]\n/home/ionel/.ve/bin/python[0x4f689c]\n/home/ionel/.ve/bin/python(PyRun_SimpleFileExFlags+0x3fe)[0x4c14be]\n/home/ionel/.ve/bin/python(Py_Main+0x87f)[0x4c754f]\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed)[0x7f578afcc76d]\n/home/ionel/.ve/bin/python[0x41ba41]\n\nMemory map:\n\n00400000-00672000 r-xp 00000000 08:01 6829994                            /home/ionel/.ve/bin/python\n00871000-00872000 r--p 00271000 08:01 6829994                            /home/ionel/.ve/bin/python\n00872000-008db000 rw-p 00272000 08:01 6829994                            /home/ionel/.ve/bin/python\n008db000-008ed000 rw-p 00000000 00:00 0\n01703000-02643000 rw-p 00000000 00:00 0                                  [heap]\n7f578897b000-7f5788988000 r-xp 00000000 08:01 6043731                    /usr/lib/python2.7/lib-dynload/_elementtree.so\n7f5788988000-7f5788b87000 ---p 0000d000 08:01 6043731                    /usr/lib/python2.7/lib-dynload/_elementtree.so\n7f5788b87000-7f5788b88000 r--p 0000c000 08:01 6043731                    /usr/lib/python2.7/lib-dynload/_elementtree.so\n7f5788b88000-7f5788b89000 rw-p 0000d000 08:01 6043731                    /usr/lib/python2.7/lib-dynload/_elementtree.so\n7f5788b89000-7f5788b98000 r-xp 00000000 08:01 524293                     /lib/x86_64-linux-gnu/libbz2.so.1.0.4\n7f5788b98000-7f5788d97000 ---p 0000f000 08:01 524293                     /lib/x86_64-linux-gnu/libbz2.so.1.0.4\n7f5788d97000-7f5788d98000 r--p 0000e000 08:01 524293                     /lib/x86_64-linux-gnu/libbz2.so.1.0.4\n7f5788d98000-7f5788d99000 rw-p 0000f000 08:01 524293                     /lib/x86_64-linux-gnu/libbz2.so.1.0.4\n7f5788d99000-7f5788da0000 r-xp 00000000 08:01 6043736                    /usr/lib/python2.7/lib-dynload/bz2.so\n7f5788da0000-7f5788f9f000 ---p 00007000 08:01 6043736                    /usr/lib/python2.7/lib-dynload/bz2.so\n7f5788f9f000-7f5788fa0000 r--p 00006000 08:01 6043736                    /usr/lib/python2.7/lib-dynload/bz2.so\n7f5788fa0000-7f5788fa2000 rw-p 00007000 08:01 6043736                    /usr/lib/python2.7/lib-dynload/bz2.so\n7f5788fa2000-7f5788fa8000 r-xp 00000000 08:01 6043759                    /usr/lib/python2.7/lib-dynload/_csv.so\n7f5788fa8000-7f57891a7000 ---p 00006000 08:01 6043759                    /usr/lib/python2.7/lib-dynload/_csv.so\n7f57891a7000-7f57891a8000 r--p 00005000 08:01 6043759                    /usr/lib/python2.7/lib-dynload/_csv.so\n7f57891a8000-7f57891aa000 rw-p 00006000 08:01 6043759                    /usr/lib/python2.7/lib-dynload/_csv.so\n7f57891aa000-7f57891d1000 r-xp 00000000 08:01 524520                     /lib/x86_64-linux-gnu/libexpat.so.1.5.2\n7f57891d1000-7f57893d1000 ---p 00027000 08:01 524520                     /lib/x86_64-linux-gnu/libexpat.so.1.5.2\n7f57893d1000-7f57893d3000 r--p 00027000 08:01 524520                     /lib/x86_64-linux-gnu/libexpat.so.1.5.2\n7f57893d3000-7f57893d4000 rw-p 00029000 08:01 524520                     /lib/x86_64-linux-gnu/libexpat.so.1.5.2\n7f57893d4000-7f57893e2000 r-xp 00000000 08:01 6043761                    /usr/lib/python2.7/lib-dynload/pyexpat.so\n7f57893e2000-7f57895e1000 ---p 0000e000 08:01 6043761                    /usr/lib/python2.7/lib-dynload/pyexpat.so\n7f57895e1000-7f57895e2000 r--p 0000d000 08:01 6043761                    /usr/lib/python2.7/lib-dynload/pyexpat.so\n7f57895e2000-7f57895e4000 rw-p 0000e000 08:01 6043761                    /usr/lib/python2.7/lib-dynload/pyexpat.so\n7f57895e4000-7f57895ee000 r-xp 00000000 08:01 6830780                    /home/ionel/.ve/lib/python2.7/site-packages/simplejson/_speedups.so\n7f57895ee000-7f57897ed000 ---p 0000a000 08:01 6830780                    /home/ionel/.ve/lib/python2.7/site-packages/simplejson/_speedups.so\n7f57897ed000-7f57897ee000 r--p 00009000 08:01 6830780                    /home/ionel/.ve/lib/python2.7/site-packages/simplejson/_speedups.so\n7f57897ee000-7f57897ef000 rw-p 0000a000 08:01 6830780                    /home/ionel/.ve/lib/python2.7/site-packages/simplejson/_speedups.so\n7f57897ef000-7f57897f3000 r-xp 00000000 08:01 559770                     /lib/x86_64-linux-gnu/libuuid.so.1.3.0\n7f57897f3000-7f57899f2000 ---p 00004000 08:01 559770                     /lib/x86_64-linux-gnu/libuuid.so.1.3.0\n7f57899f2000-7f57899f3000 r--p 00003000 08:01 559770                     /lib/x86_64-linux-gnu/libuuid.so.1.3.0\n7f57899f3000-7f57899f4000 rw-p 00004000 08:01 559770                     /lib/x86_64-linux-gnu/libuuid.so.1.3.0\n7f57899f4000-7f57899ff000 r-xp 00000000 08:01 6043756                    /usr/lib/python2.7/lib-dynload/_json.so\n7f57899ff000-7f5789bfe000 ---p 0000b000 08:01 6043756                    /usr/lib/python2.7/lib-dynload/_json.so\n7f5789bfe000-7f5789bff000 r--p 0000a000 08:01 6043756                    /usr/lib/python2.7/lib-dynload/_json.so\n7f5789bff000-7f5789c00000 rw-p 0000b000 08:01 6043756                    /usr/lib/python2.7/lib-dynload/_json.so\n7f5789c00000-7f5789c04000 r-xp 00000000 08:01 6043742                    /usr/lib/python2.7/lib-dynload/termios.so\n7f5789c04000-7f5789e03000 ---p 00004000 08:01 6043742                    /usr/lib/python2.7/lib-dynload/termios.so\n7f5789e03000-7f5789e04000 r--p 00003000 08:01 6043742                    /usr/lib/python2.7/lib-dynload/termios.so\n7f5789e04000-7f5789e06000 rw-p 00004000 08:01 6043742                    /usr/lib/python2.7/lib-dynload/termios.so\n7f5789e06000-7f578a0cf000 r--p 00000000 08:01 6035410                    /usr/lib/locale/locale-archive\n7f578a0cf000-7f578a0e2000 r-xp 00000000 08:01 6043735                    /usr/lib/python2.7/lib-dynload/parser.so\n7f578a0e2000-7f578a2e1000 ---p 00013000 08:01 6043735                    /usr/lib/python2.7/lib-dynload/parser.so\n7f578a2e1000-7f578a2e2000 r--p 00012000 08:01 6043735                    /usr/lib/python2.7/lib-dynload/parser.so\n7f578a2e2000-7f578a2e3000 rw-p 00013000 08:01 6043735                    /usr/lib/python2.7/lib-dynload/parser.so\n7f578a2e3000-7f578a2f7000 r-xp 00000000 08:01 6043764                    /usr/lib/python2.7/lib-dynload/datetime.so\n7f578a2f7000-7f578a4f6000 ---p 00014000 08:01 6043764                    /usr/lib/python2.7/lib-dynload/datetime.so\n7f578a4f6000-7f578a4f7000 r--p 00013000 08:01 6043764                    /usr/lib/python2.7/lib-dynload/datetime.so\n7f578a4f7000-7f578a4fb000 rw-p 00014000 08:01 6043764                    /usr/lib/python2.7/lib-dynload/datetime.so\n7f578a4fb000-7f578a51a000 r-xp 00000000 08:01 6043753                    /usr/lib/python2.7/lib-dynload/_io.so\n7f578a51a000-7f578a719000 ---p 0001f000 08:01 6043753                    /usr/lib/python2.7/lib-dynload/_io.so\n7f578a719000-7f578a71a000 r--p 0001e000 08:01 6043753                    /usr/lib/python2.7/lib-dynload/_io.so\n7f578a71a000-7f578a723000 rw-p 0001f000 08:01 6043753                    /usr/lib/python2.7/lib-dynload/_io.so\n7f578a723000-7f578a764000 rw-p 00000000 00:00 0\n7f578a764000-7f578a785000 r-xp 00000000 08:01 6043762                    /usr/lib/python2.7/lib-dynload/_ctypes.so\n7f578a785000-7f578a984000 ---p 00021000 08:01 6043762                    /usr/lib/python2.7/lib-dynload/_ctypes.so\n7f578a984000-7f578a985000 r--p 00020000 08:01 6043762                    /usr/lib/python2.7/lib-dynload/_ctypes.so\n7f578a985000-7f578a989000 rw-p 00021000 08:01 6043762                    /usr/lib/python2.7/lib-dynload/_ctypes.so\n7f578a989000-7f578ab90000 rw-p 00000000 00:00 0\n7f578ab90000-7f578ab93000 r-xp 00000000 08:01 6043740                    /usr/lib/python2.7/lib-dynload/_heapq.so\n7f578ab93000-7f578ad92000 ---p 00003000 08:01 6043740                    /usr/lib/python2.7/lib-dynload/_heapq.so\n7f578ad92000-7f578ad93000 r--p 00002000 08:01 6043740                    /usr/lib/python2.7/lib-dynload/_heapq.so\n7f578ad93000-7f578ad95000 rw-p 00003000 08:01 6043740                    /usr/lib/python2.7/lib-dynload/_heapq.so\n7f578ad95000-7f578adaa000 r-xp 00000000 08:01 524332                     /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f578adaa000-7f578afa9000 ---p 00015000 08:01 524332                     /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f578afa9000-7f578afaa000 r--p 00014000 08:01 524332                     /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f578afaa000-7f578afab000 rw-p 00015000 08:01 524332                     /lib/x86_64-linux-gnu/libgcc_s.so.1\n7f578afab000-7f578b160000 r-xp 00000000 08:01 572001                     /lib/x86_64-linux-gnu/libc-2.15.so\n7f578b160000-7f578b35f000 ---p 001b5000 08:01 572001                     /lib/x86_64-linux-gnu/libc-2.15.so\n7f578b35f000-7f578b363000 r--p 001b4000 08:01 572001                     /lib/x86_64-linux-gnu/libc-2.15.so\n7f578b363000-7f578b365000 rw-p 001b8000 08:01 572001                     /lib/x86_64-linux-gnu/libc-2.15.so\n7f578b365000-7f578b36a000 rw-p 00000000 00:00 0\n7f578b36a000-7f578b465000 r-xp 00000000 08:01 572018                     /lib/x86_64-linux-gnu/libm-2.15.so\n7f578b465000-7f578b664000 ---p 000fb000 08:01 572018                     /lib/x86_64-linux-gnu/libm-2.15.so\n7f578b664000-7f578b665000 r--p 000fa000 08:01 572018                     /lib/x86_64-linux-gnu/libm-2.15.so\n7f578b665000-7f578b666000 rw-p 000fb000 08:01 572018                     /lib/x86_64-linux-gnu/libm-2.15.so\n7f578b666000-7f578b67c000 r-xp 00000000 08:01 524517                     /lib/x86_64-linux-gnu/libz.so.1.2.3.4\n7f578b67c000-7f578b87b000 ---p 00016000 08:01 524517                     /lib/x86_64-linux-gnu/libz.so.1.2.3.4\n7f578b87b000-7f578b87c000 r--p 00015000 08:01 524517                     /lib/x86_64-linux-gnu/libz.so.1.2.3.4\n7f578b87c000-7f578b87d000 rw-p 00016000 08:01 524517                     /lib/x86_64-linux-gnu/libz.so.1.2.3.4\n7f578b87d000-7f578ba2f000 r-xp 00000000 08:01 527949                     /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n7f578ba2f000-7f578bc2e000 ---p 001b2000 08:01 527949                     /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n7f578bc2e000-7f578bc49000 r--p 001b1000 08:01 527949                     /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n7f578bc49000-7f578bc54000 rw-p 001cc000 08:01 527949                     /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n7f578bc54000-7f578bc58000 rw-p 00000000 00:00 0\n7f578bc58000-7f578bcac000 r-xp 00000000 08:01 527944                     /lib/x86_64-linux-gnu/libssl.so.1.0.0\n7f578bcac000-7f578beac000 ---p 00054000 08:01 527944                     /lib/x86_64-linux-gnu/libssl.so.1.0.0\n7f578beac000-7f578beaf000 r--p 00054000 08:01 527944                     /lib/x86_64-linux-gnu/libssl.so.1.0.0\n7f578beaf000-7f578beb6000 rw-p 00057000 08:01 527944                     /lib/x86_64-linux-gnu/libssl.so.1.0.0\n7f578beb6000-7f578beb8000 r-xp 00000000 08:01 572024                     /lib/x86_64-linux-gnu/libutil-2.15.so\n7f578beb8000-7f578c0b7000 ---p 00002000 08:01 572024                     /lib/x86_64-linux-gnu/libutil-2.15.so\n7f578c0b7000-7f578c0b8000 r--p 00001000 08:01 572024                     /lib/x86_64-linux-gnu/libutil-2.15.so\n7f578c0b8000-7f578c0b9000 rw-p 00002000 08:01 572024                     /lib/x86_64-linux-gnu/libutil-2.15.so\n7f578c0b9000-7f578c0bb000 r-xp 00000000 08:01 572029                     /lib/x86_64-linux-gnu/libdl-2.15.so\n7f578c0bb000-7f578c2bb000 ---p 00002000 08:01 572029                     /lib/x86_64-linux-gnu/libdl-2.15.so\n7f578c2bb000-7f578c2bc000 r--p 00002000 08:01 572029                     /lib/x86_64-linux-gnu/libdl-2.15.so\n7f578c2bc000-7f578c2bd000 rw-p 00003000 08:01 572029                     /lib/x86_64-linux-gnu/libdl-2.15.so\n7f578c2bd000-7f578c2d5000 r-xp 00000000 08:01 571994                     /lib/x86_64-linux-gnu/libpthread-2.15.so\n7f578c2d5000-7f578c4d4000 ---p 00018000 08:01 571994                     /lib/x86_64-linux-gnu/libpthread-2.15.so\n7f578c4d4000-7f578c4d5000 r--p 00017000 08:01 571994                     /lib/x86_64-linux-gnu/libpthread-2.15.so\n7f578c4d5000-7f578c4d6000 rw-p 00018000 08:01 571994                     /lib/x86_64-linux-gnu/libpthread-2.15.so\n7f578c4d6000-7f578c4da000 rw-p 00000000 00:00 0\n7f578c4da000-7f578c4de000 r-xp 00000000 08:01 572025                     /lib/x86_64-linux-gnu/libSegFault.so\n7f578c4de000-7f578c6dd000 ---p 00004000 08:01 572025                     /lib/x86_64-linux-gnu/libSegFault.so\n7f578c6dd000-7f578c6de000 r--p 00003000 08:01 572025                     /lib/x86_64-linux-gnu/libSegFault.so\n7f578c6de000-7f578c6df000 rw-p 00004000 08:01 572025                     /lib/x86_64-linux-gnu/libSegFault.so\n7f578c6df000-7f578c701000 r-xp 00000000 08:01 571993                     /lib/x86_64-linux-gnu/ld-2.15.so\n7f578c734000-7f578c838000 rw-p 00000000 00:00 0\n7f578c869000-7f578c8f1000 rw-p 00000000 00:00 0\n7f578c8fd000-7f578c8fe000 rw-p 00000000 00:00 0\n7f578c8fe000-7f578c8ff000 rwxp 00000000 00:00 0\n7f578c8ff000-7f578c901000 rw-p 00000000 00:00 0\n7f578c901000-7f578c902000 r--p 00022000 08:01 571993                     /lib/x86_64-linux-gnu/ld-2.15.so\n7f578c902000-7f578c904000 rw-p 00023000 08:01 571993                     /lib/x86_64-linux-gnu/ld-2.15.so\n7fffaf757000-7fffaf78c000 rw-p 00000000 00:00 0                          [stack]\n7fffaf7fe000-7fffaf800000 r-xp 00000000 00:00 0                          [vdso]\nffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]\nSegmentation fault (core dumped)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/113", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/113/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/113/events", "html_url": "https://github.com/simplejson/simplejson/issues/113", "id": 53929586, "node_id": "MDU6SXNzdWU1MzkyOTU4Ng==", "number": 113, "title": "Hjson", "user": {"login": "laktak", "id": 959858, "node_id": "MDQ6VXNlcjk1OTg1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/959858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laktak", "html_url": "https://github.com/laktak", "followers_url": "https://api.github.com/users/laktak/followers", "following_url": "https://api.github.com/users/laktak/following{/other_user}", "gists_url": "https://api.github.com/users/laktak/gists{/gist_id}", "starred_url": "https://api.github.com/users/laktak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laktak/subscriptions", "organizations_url": "https://api.github.com/users/laktak/orgs", "repos_url": "https://api.github.com/users/laktak/repos", "events_url": "https://api.github.com/users/laktak/events{/privacy}", "received_events_url": "https://api.github.com/users/laktak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-09T23:35:27Z", "updated_at": "2015-01-10T04:31:01Z", "closed_at": "2015-01-10T04:31:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just wanted to thank you for simplejson! I used it as a base for a [Hjson](https://github.com/laktak/hjson-py) implementation.\n\nI'm relatively new to Python but I was surprised how easy it was to port the project. Your well documented code helped a lot, thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/112", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/112/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/112/events", "html_url": "https://github.com/simplejson/simplejson/issues/112", "id": 52897486, "node_id": "MDU6SXNzdWU1Mjg5NzQ4Ng==", "number": 112, "title": "Problem with decimal values", "user": {"login": "Suvitruf", "id": 1946939, "node_id": "MDQ6VXNlcjE5NDY5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1946939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Suvitruf", "html_url": "https://github.com/Suvitruf", "followers_url": "https://api.github.com/users/Suvitruf/followers", "following_url": "https://api.github.com/users/Suvitruf/following{/other_user}", "gists_url": "https://api.github.com/users/Suvitruf/gists{/gist_id}", "starred_url": "https://api.github.com/users/Suvitruf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Suvitruf/subscriptions", "organizations_url": "https://api.github.com/users/Suvitruf/orgs", "repos_url": "https://api.github.com/users/Suvitruf/repos", "events_url": "https://api.github.com/users/Suvitruf/events{/privacy}", "received_events_url": "https://api.github.com/users/Suvitruf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-26T12:10:28Z", "updated_at": "2014-12-26T12:14:11Z", "closed_at": "2014-12-26T12:14:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to add `int` to `JSONClass`.\n\nFor example i need json : `{\"attr\" : 4}`\n\n```\nJSONClass cl = new JSONClass();\n```\n\nI tried this:\n\n```\ncl[\"attr\"].AsInt = 4;\n```\n\nAnd this:\n\n```\ncl[\"attr\"] = new JSONData(4);\n```\n\nAnd any other cases. Anyway i get `{\"attr\" : \"4\"}` where `4` is string.\n\nHow can i add `int` to it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/111", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/111/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/111/events", "html_url": "https://github.com/simplejson/simplejson/issues/111", "id": 51174841, "node_id": "MDU6SXNzdWU1MTE3NDg0MQ==", "number": 111, "title": "allow errors='' as keyword argument in dumps() or loads()", "user": {"login": "kelvintaywl", "id": 2164346, "node_id": "MDQ6VXNlcjIxNjQzNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2164346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kelvintaywl", "html_url": "https://github.com/kelvintaywl", "followers_url": "https://api.github.com/users/kelvintaywl/followers", "following_url": "https://api.github.com/users/kelvintaywl/following{/other_user}", "gists_url": "https://api.github.com/users/kelvintaywl/gists{/gist_id}", "starred_url": "https://api.github.com/users/kelvintaywl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kelvintaywl/subscriptions", "organizations_url": "https://api.github.com/users/kelvintaywl/orgs", "repos_url": "https://api.github.com/users/kelvintaywl/repos", "events_url": "https://api.github.com/users/kelvintaywl/events{/privacy}", "received_events_url": "https://api.github.com/users/kelvintaywl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-06T07:32:30Z", "updated_at": "2015-10-27T15:36:12Z", "closed_at": "2015-10-27T15:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nfirst of all, great work on this library! I love the ease of using it and cant thank this library enough.\n\nI was however, wondering that it would be great if simplejson.dumps() or simplejson.loads() allows user to specify encoding/decoding handling by `errors='ignore'` or `errors='replace'` keyword arguments? this would be nice, as it's just like how `decode('utf-8', errors='replace')` or `encode('utf-8', errors='replace')` can be issued\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/109", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/109/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/109/events", "html_url": "https://github.com/simplejson/simplejson/issues/109", "id": 46705204, "node_id": "MDU6SXNzdWU0NjcwNTIwNA==", "number": 109, "title": "Memory leak occurs when failing to encode a dict using _speedups", "user": {"login": "kbussell", "id": 18281, "node_id": "MDQ6VXNlcjE4Mjgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbussell", "html_url": "https://github.com/kbussell", "followers_url": "https://api.github.com/users/kbussell/followers", "following_url": "https://api.github.com/users/kbussell/following{/other_user}", "gists_url": "https://api.github.com/users/kbussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbussell/subscriptions", "organizations_url": "https://api.github.com/users/kbussell/orgs", "repos_url": "https://api.github.com/users/kbussell/repos", "events_url": "https://api.github.com/users/kbussell/events{/privacy}", "received_events_url": "https://api.github.com/users/kbussell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-24T05:19:45Z", "updated_at": "2014-10-24T15:12:17Z", "closed_at": "2014-10-24T15:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `encoder_listencode_dict`, if it bails out due to failing to encode an item for example:\n\n``` python\nimport datetime\nimport simplejson\n\nsimplejson.dumps({'bad': datetime.datetime.now()})\n```\n\nMemory gets leaked. There's a while loop which reads items into `*item`, but if the loop bails out, there's no corresponding decref call.\n\nIt looks like the problem stems back from https://github.com/simplejson/simplejson/commit/db980b6827239e264cf9626e2c4a7947d4f746f2, line 2329. In that change, there should have been an extra `Py_XDECREF` call instead of changing it from `*item` to `*items`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/106", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/106/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/106/events", "html_url": "https://github.com/simplejson/simplejson/issues/106", "id": 43823986, "node_id": "MDU6SXNzdWU0MzgyMzk4Ng==", "number": 106, "title": "simplejson.dump with sort_keys=True doesn't sort keys", "user": {"login": "tobiowo", "id": 1762224, "node_id": "MDQ6VXNlcjE3NjIyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiowo", "html_url": "https://github.com/tobiowo", "followers_url": "https://api.github.com/users/tobiowo/followers", "following_url": "https://api.github.com/users/tobiowo/following{/other_user}", "gists_url": "https://api.github.com/users/tobiowo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiowo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiowo/subscriptions", "organizations_url": "https://api.github.com/users/tobiowo/orgs", "repos_url": "https://api.github.com/users/tobiowo/repos", "events_url": "https://api.github.com/users/tobiowo/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiowo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-24T22:46:04Z", "updated_at": "2014-09-29T21:19:01Z", "closed_at": "2014-09-29T21:19:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nimport sys, simplejson, json\np = dict(t=1,d=2,f=3,h=4,u=5)\nsimplejson.dump(p, sys.stdout, sort_keys=True)\njson.dump(p, sys.stdout, sort_keys=True)\n```\n\nreturns\n\n```\n{\"h\": 4, \"f\": 3, \"u\": 5, \"t\": 1, \"d\": 2}\n{\"d\": 2, \"f\": 3, \"h\": 4, \"t\": 1, \"u\": 5}\n```\n\nsimplejson.dumps(p, sort_keys=True) correctly sorts the keys\nTested on version 3.6.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/105", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/105/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/105/events", "html_url": "https://github.com/simplejson/simplejson/issues/105", "id": 41162087, "node_id": "MDU6SXNzdWU0MTE2MjA4Nw==", "number": 105, "title": "Switch to use str() instead of repr() when dumping floats", "user": {"login": "esanzgar", "id": 8555781, "node_id": "MDQ6VXNlcjg1NTU3ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8555781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esanzgar", "html_url": "https://github.com/esanzgar", "followers_url": "https://api.github.com/users/esanzgar/followers", "following_url": "https://api.github.com/users/esanzgar/following{/other_user}", "gists_url": "https://api.github.com/users/esanzgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/esanzgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esanzgar/subscriptions", "organizations_url": "https://api.github.com/users/esanzgar/orgs", "repos_url": "https://api.github.com/users/esanzgar/repos", "events_url": "https://api.github.com/users/esanzgar/events{/privacy}", "received_events_url": "https://api.github.com/users/esanzgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-26T11:36:25Z", "updated_at": "2014-08-26T16:12:28Z", "closed_at": "2014-08-26T14:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Representation of floats have changed in python 3.0 (backported up to python 2.7) \nhttp://bugs.python.org/issue1580\nhttps://docs.python.org/3.5/whatsnew/2.7.html#python-3-1-features\n\nHowever, I have to use python version 2.6 were repr of floats produces this output:\n\nPython 2.6:\n\n> > > repr(1.1)\n> > > '1.1000000000000001'\n> > > str(1.1)\n> > > '1.1'\n\nPython 2.7:\n\n> > > repr(1.1)\n> > > '1.1'\n> > > str(1.1)\n> > > '1.1'\n\nTo avoid this formatting effect I  have to use_decimal=True while loading  JSONS, however this slows down very significative the loading and dumping.\n\nCould a switch be added so str() or another custom function (rounding, truncation, etc.) could be used instead?\n\nThanks,\n\nEduardo\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/103", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/103/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/103/events", "html_url": "https://github.com/simplejson/simplejson/issues/103", "id": 40441019, "node_id": "MDU6SXNzdWU0MDQ0MTAxOQ==", "number": 103, "title": "The choice for lack of dict key encoding should be documented", "user": {"login": "pjrobertson", "id": 150431, "node_id": "MDQ6VXNlcjE1MDQzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/150431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjrobertson", "html_url": "https://github.com/pjrobertson", "followers_url": "https://api.github.com/users/pjrobertson/followers", "following_url": "https://api.github.com/users/pjrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/pjrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjrobertson/subscriptions", "organizations_url": "https://api.github.com/users/pjrobertson/orgs", "repos_url": "https://api.github.com/users/pjrobertson/repos", "events_url": "https://api.github.com/users/pjrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/pjrobertson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-17T19:15:17Z", "updated_at": "2014-08-18T20:03:28Z", "closed_at": "2014-08-18T20:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "#100 gives a really good outline as to _why_ you can't do something like:\n\n``` python\njson.dumps({<MyObject: Cool Thing> : 'string'}, cls=EvenWithACustomEncoder)\n```\n\nI think this fact (And the arguments against it) should be in the docs.\n\nI'm sorry I can't provide any suggested wording or other ideas at this time. At the least, a sentence like this would suffice:\n\n\"There is no way to encode custom objects when they are used as dict keys, the reasons are explained here: <link to issue #100>\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/102", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/102/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/102/events", "html_url": "https://github.com/simplejson/simplejson/issues/102", "id": 38777800, "node_id": "MDU6SXNzdWUzODc3NzgwMA==", "number": 102, "title": "docs bug: JSON is not a strict subset of JavaScript", "user": {"login": "cvrebert", "id": 419884, "node_id": "MDQ6VXNlcjQxOTg4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/419884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvrebert", "html_url": "https://github.com/cvrebert", "followers_url": "https://api.github.com/users/cvrebert/followers", "following_url": "https://api.github.com/users/cvrebert/following{/other_user}", "gists_url": "https://api.github.com/users/cvrebert/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvrebert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvrebert/subscriptions", "organizations_url": "https://api.github.com/users/cvrebert/orgs", "repos_url": "https://api.github.com/users/cvrebert/repos", "events_url": "https://api.github.com/users/cvrebert/events{/privacy}", "received_events_url": "https://api.github.com/users/cvrebert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-07-25T23:02:19Z", "updated_at": "2014-08-11T00:34:14Z", "closed_at": "2014-08-10T03:06:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs currently state:\n\n> JSON (JavaScript Object Notation) `<http://json.org>` is a subset of JavaScript syntax (ECMA-262 3rd edition)\n\nPer [the errata to RFC 7159](http://www.rfc-editor.org/errata_search.php?rfc=7159), which references http://timelessrepo.com/json-isnt-a-javascript-subset , this isn't strictly accurate.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/100", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/100/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/100/events", "html_url": "https://github.com/simplejson/simplejson/issues/100", "id": 37588337, "node_id": "MDU6SXNzdWUzNzU4ODMzNw==", "number": 100, "title": "Access to _stringify_key (dictionary key encoding/decoding)?", "user": {"login": "JBaldachino", "id": 1201076, "node_id": "MDQ6VXNlcjEyMDEwNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1201076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JBaldachino", "html_url": "https://github.com/JBaldachino", "followers_url": "https://api.github.com/users/JBaldachino/followers", "following_url": "https://api.github.com/users/JBaldachino/following{/other_user}", "gists_url": "https://api.github.com/users/JBaldachino/gists{/gist_id}", "starred_url": "https://api.github.com/users/JBaldachino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JBaldachino/subscriptions", "organizations_url": "https://api.github.com/users/JBaldachino/orgs", "repos_url": "https://api.github.com/users/JBaldachino/repos", "events_url": "https://api.github.com/users/JBaldachino/events{/privacy}", "received_events_url": "https://api.github.com/users/JBaldachino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-07-10T18:01:42Z", "updated_at": "2016-03-03T12:06:29Z", "closed_at": "2014-07-11T05:03:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are a lot of \"hooks\" built into the encoding/decoding process for the _values_ of the dictionary you are converting to/from JSON.\n\nThere are none for the _keys_ of said dictionary.  There are numerous ways to handle custom objects' encode/decode behavior: custom Encoders, `default=func`, `for_json` method. \n\nHowever, these are not applied to the _keys_ of the dictionary. \n\nReviewing the source, I see a rather similar process being used on the keys that is used to process the values:\n\nhttps://github.com/simplejson/simplejson/blob/master/simplejson/encoder.py#L490\n\n``` py\n    def _stringify_key(key):\n        if isinstance(key, string_types): # pragma: no cover\n            pass\n        elif isinstance(key, binary_type):\n            key = key.decode(_encoding)\n        elif isinstance(key, float):\n            key = _floatstr(key)\n        elif key is True:\n            key = 'true'\n        elif key is False:\n            key = 'false'\n        elif key is None:\n            key = 'null'\n        elif isinstance(key, integer_types):\n            key = str(key)\n        elif _use_decimal and isinstance(key, Decimal):\n            key = str(key)\n        elif _skipkeys:\n            key = None\n        else:\n            raise TypeError(\"key \" + repr(key) + \" is not a string\")\n        return key\n```\n\nA custom \"hook\" is built in here for the `Decimal` class, which is great, but why do we treat this class as special?  Is there a reason we could not expose this conversion process to extension, as we do in `default=`?  \n\nUnfortunately, this function is buried inside another, much larger function, and there's no trivial way to swap it out, so I'm faced with some sloppy options if I want to encode a dictionary like:\n\n`{MyObject('Something'): 10}`\n\nUpon a very light review, it seems this could be implemented in a similar manner as the `default=` kwarg argument.  I understand there may be performance concerns, but I suppose I don't see them as any different than those opened up by the `default=` kwarg.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/99", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/99/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/99/events", "html_url": "https://github.com/simplejson/simplejson/issues/99", "id": 36731881, "node_id": "MDU6SXNzdWUzNjczMTg4MQ==", "number": 99, "title": "feature-request: escape single-quotes on dumps ?", "user": {"login": "jvanasco", "id": 204779, "node_id": "MDQ6VXNlcjIwNDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanasco", "html_url": "https://github.com/jvanasco", "followers_url": "https://api.github.com/users/jvanasco/followers", "following_url": "https://api.github.com/users/jvanasco/following{/other_user}", "gists_url": "https://api.github.com/users/jvanasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanasco/subscriptions", "organizations_url": "https://api.github.com/users/jvanasco/orgs", "repos_url": "https://api.github.com/users/jvanasco/repos", "events_url": "https://api.github.com/users/jvanasco/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanasco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-28T19:37:02Z", "updated_at": "2014-06-28T20:11:34Z", "closed_at": "2014-06-28T20:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently got bit by an edge case (that surprisingly didn't happen sooner)\n\nHere is my Python object:\n\n```\nexample = {\n    \"hello\" : \"\"\"This is an example object I am using some 'single quotes' and \"double quotes\".\"\"\"\n}\n```\n\nThe output of simplejson is this perfectly formed JSON string:\n\n```\nencoded = json.dumps(example)\nprint encoded\n{\"hello\": \"This is an example object I am using some 'single quotes' and \\\"double quotes\\\".\"}\n```\n\nBut there is a problem with this `dumps` output -- as a raw string, it isn't very compatible with javascript -- the single-quotes break it :\n\n```\nvar example = '{\"hello\": \"This is an example object I am using some 'single quotes' and \\\"double quotes\\\".\"}';\n```\n\nSo in order to work with this in javascript, we need to further encode it.  However, doing so results in a twice-escaped string:\n\n```\nencoded = json.dumps(example).encode('string-escape')\nprint encoded\n{\"hello\": \"This is an example object I am using some \\'single quotes\\' and \\\\\"double quotes\\\\\".\"}\n```\n\nIt would be incredibly convenient if simplejson supported an argument to escape single-quotes as well :\n\n```\nencoded = json.dumps(example, escape_single_quotes=True)\nprint encoded\n{\"hello\": \"This is an example object I am using some \\'single quotes\\' and \\\"double quotes\\\".\"}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/98", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/98/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/98/events", "html_url": "https://github.com/simplejson/simplejson/issues/98", "id": 36389559, "node_id": "MDU6SXNzdWUzNjM4OTU1OQ==", "number": 98, "title": "Incorrect handling of negative offsets in scan_once", "user": {"login": "thoger", "id": 4051912, "node_id": "MDQ6VXNlcjQwNTE5MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4051912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoger", "html_url": "https://github.com/thoger", "followers_url": "https://api.github.com/users/thoger/followers", "following_url": "https://api.github.com/users/thoger/following{/other_user}", "gists_url": "https://api.github.com/users/thoger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoger/subscriptions", "organizations_url": "https://api.github.com/users/thoger/orgs", "repos_url": "https://api.github.com/users/thoger/repos", "events_url": "https://api.github.com/users/thoger/events{/privacy}", "received_events_url": "https://api.github.com/users/thoger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-24T14:33:42Z", "updated_at": "2014-06-24T18:57:23Z", "closed_at": "2014-06-24T18:57:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The problem was reported as security issue for the `simplejson` version that is part of the Python standard library, see:\n\nhttp://bugs.python.org/issue21529\nhttps://hackerone.com/reports/12297\n\nThe test case using `raw_decode` does not work with recent `simplejson` versions because of commit 0fb0aea.  However, I could reproduce the issue with version 3.2.0 by using `scan_once` directly instead of `raw_decode`.  I haven't tried more recent version, sorry, quick code inspection suggests they should still be affected.\n\nI realize that `scan_once` is not a documented API, and hence this issue, if only triggerable via it, may not be considered an issue for `simplejson`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/91", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/91/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/91/events", "html_url": "https://github.com/simplejson/simplejson/issues/91", "id": 30669245, "node_id": "MDU6SXNzdWUzMDY2OTI0NQ==", "number": 91, "title": "bdist_egg", "user": {"login": "grzn", "id": 175126, "node_id": "MDQ6VXNlcjE3NTEyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/175126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grzn", "html_url": "https://github.com/grzn", "followers_url": "https://api.github.com/users/grzn/followers", "following_url": "https://api.github.com/users/grzn/following{/other_user}", "gists_url": "https://api.github.com/users/grzn/gists{/gist_id}", "starred_url": "https://api.github.com/users/grzn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grzn/subscriptions", "organizations_url": "https://api.github.com/users/grzn/orgs", "repos_url": "https://api.github.com/users/grzn/repos", "events_url": "https://api.github.com/users/grzn/events{/privacy}", "received_events_url": "https://api.github.com/users/grzn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-02T08:48:13Z", "updated_at": "2014-04-02T18:19:57Z", "closed_at": "2014-04-02T18:19:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "try to import stuff from setuptools and if ImportError then import from distutils\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/90", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/90/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/90/events", "html_url": "https://github.com/simplejson/simplejson/issues/90", "id": 29744318, "node_id": "MDU6SXNzdWUyOTc0NDMxOA==", "number": 90, "title": "Create \"dict_class\" parameter to change what class is used to store JSON objects", "user": {"login": "AaronOpfer", "id": 1189089, "node_id": "MDQ6VXNlcjExODkwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1189089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AaronOpfer", "html_url": "https://github.com/AaronOpfer", "followers_url": "https://api.github.com/users/AaronOpfer/followers", "following_url": "https://api.github.com/users/AaronOpfer/following{/other_user}", "gists_url": "https://api.github.com/users/AaronOpfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/AaronOpfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AaronOpfer/subscriptions", "organizations_url": "https://api.github.com/users/AaronOpfer/orgs", "repos_url": "https://api.github.com/users/AaronOpfer/repos", "events_url": "https://api.github.com/users/AaronOpfer/events{/privacy}", "received_events_url": "https://api.github.com/users/AaronOpfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-19T15:50:20Z", "updated_at": "2014-03-19T16:23:01Z", "closed_at": "2014-03-19T16:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let me describe our problem first: our company develops forms by representing their structure in JSON. We make changes to this JSON structure typically by hand, with human editors. Humans like ordering things in any old order. They are not rigid and always compliant like computers are, so sometimes a dict's keys are not in alphabetical order. Not a big deal.\n\nHowever, we also occasionally use automation to seek out and make pinpoint changes to particular parts of these files, especially when refactoring. We have been using Python for this purpose, and simplejson. We've had a few problems.\n\nRight now, simplejson's dumps(loads(x)) is not always == x. This can be because we strip out formatting information like indentation from string x. _But, the main problem is that dictionary keys can be read out of a dict in any arbitrary order._ This creates monster diffs that are zero-sum: no actual effective difference to the previous state.\n\nTo fix this, I had been using an object_hook to convert the incoming dicts to OrderedDicts, and then I sort the keys in the OrderedDict, since the original sorting order was already lost. This has a very severe flaw though: humans. We like to edit keys however we want, not necessarily list them in alphabetical order. So we again return to the problem where we have large diffs that \"correct\" humans for writing the files how they wanted. Needless to say, large do-nothing patches are awful when you're trying to create a code-reviewable patch.\n\nobject_hook is simply inadequate for what we want: stable order of dictionary keys when reading and writing JSON files. I created a local version of simple_json that lets me provide a \"dict_class\" parameter. By using this parameter to override what class is used for dictionaries, I can ensure that keys stay in the order they were inserted in.\n\nI have provided a diff in order to demonstrate the relative ease at which I accomplished this (although w/o touching the _speedups.c):\n\n```\ndiff --git a/simplejson/decoder.py b/simplejson/decoder.py\nindex 38cb027..9735e87 100644\n--- a/simplejson/decoder.py\n+++ b/simplejson/decoder.py\n@@ -140,7 +140,7 @@ WHITESPACE = re.compile(r'[ \\t\\n\\r]*', FLAGS)\n WHITESPACE_STR = ' \\t\\n\\r'\n\n def JSONObject(state, encoding, strict, scan_once, object_hook,\n-        object_pairs_hook, memo=None,\n+        object_pairs_hook, memo=None, dict_class=dict,\n         _w=WHITESPACE.match, _ws=WHITESPACE_STR):\n     (s, end) = state\n     # Backwards compatibility\n@@ -161,7 +161,7 @@ def JSONObject(state, encoding, strict, scan_once, object_hook,\n             if object_pairs_hook is not None:\n                 result = object_pairs_hook(pairs)\n                 return result, end + 1\n-            pairs = {}\n+            pairs = dict_class()\n             if object_hook is not None:\n                 pairs = object_hook(pairs)\n             return pairs, end + 1\n@@ -228,7 +228,7 @@ def JSONObject(state, encoding, strict, scan_once, object_hook,\n     if object_pairs_hook is not None:\n         result = object_pairs_hook(pairs)\n         return result, end\n-    pairs = dict(pairs)\n+    pairs = dict_class(pairs)\n     if object_hook is not None:\n         pairs = object_hook(pairs)\n     return pairs, end\n@@ -301,7 +301,7 @@ class JSONDecoder(object):\n\n     def __init__(self, encoding=None, object_hook=None, parse_float=None,\n             parse_int=None, parse_constant=None, strict=True,\n-            object_pairs_hook=None):\n+            object_pairs_hook=None, dict_class=dict):\n         \"\"\"\n         *encoding* determines the encoding used to interpret any\n         :class:`str` objects decoded by this instance (``'utf-8'`` by\n@@ -349,6 +349,7 @@ class JSONDecoder(object):\n             encoding = DEFAULT_ENCODING\n         self.encoding = encoding\n         self.object_hook = object_hook\n+        self.dict_class = dict_class\n         self.object_pairs_hook = object_pairs_hook\n         self.parse_float = parse_float or float\n         self.parse_int = parse_int or int\ndiff --git a/simplejson/scanner.py b/simplejson/scanner.py\nindex b7918b3..81a75d9 100644\n--- a/simplejson/scanner.py\n+++ b/simplejson/scanner.py\n@@ -76,6 +76,7 @@ def py_make_scanner(context):\n     parse_int = context.parse_int\n     parse_constant = context.parse_constant\n     object_hook = context.object_hook\n+    dict_class = context.dict_class\n     object_pairs_hook = context.object_pairs_hook\n     memo = context.memo\n\n@@ -90,7 +91,7 @@ def py_make_scanner(context):\n             return parse_string(string, idx + 1, encoding, strict)\n         elif nextchar == '{':\n             return parse_object((string, idx + 1), encoding, strict,\n-                _scan_once, object_hook, object_pairs_hook, memo)\n+                _scan_once, object_hook, object_pairs_hook, memo, dict_class=dict_class)\n         elif nextchar == '[':\n             return parse_array((string, idx + 1), _scan_once)\n         elif nextchar == 'n' and string[idx:idx + 4] == 'null':\n```\n\nIt might seem as though this is nearly the only possible use case for this. It's basically a slightly different object_hook, with the benefit being that you don't lose ordering information, and the disadvantage being having to use an entire class to accomplish the task instead of a function. However, I am not a big fan of maintaining out-of-tree patches thanks to the nightmares it can bring and I think I made a decently strong case here for something like this to exist. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/88", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/88/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/88/events", "html_url": "https://github.com/simplejson/simplejson/issues/88", "id": 28225632, "node_id": "MDU6SXNzdWUyODIyNTYzMg==", "number": 88, "title": "TypeError: can't use a string pattern on a bytes-like object", "user": {"login": "asnr", "id": 3961287, "node_id": "MDQ6VXNlcjM5NjEyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3961287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asnr", "html_url": "https://github.com/asnr", "followers_url": "https://api.github.com/users/asnr/followers", "following_url": "https://api.github.com/users/asnr/following{/other_user}", "gists_url": "https://api.github.com/users/asnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/asnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asnr/subscriptions", "organizations_url": "https://api.github.com/users/asnr/orgs", "repos_url": "https://api.github.com/users/asnr/repos", "events_url": "https://api.github.com/users/asnr/events{/privacy}", "received_events_url": "https://api.github.com/users/asnr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-25T06:28:59Z", "updated_at": "2014-02-25T06:56:26Z", "closed_at": "2014-02-25T06:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling simplejson on the following throws a TypeError. I ended up using http://jsonformatter.curiousconcept.com/ to format the json (this is only a snippet, the original file is 65KB).\n\n{\n\"unicode\":\"r\",          \"data\":\":360d490Jb10F0f70M0xb50G0q50N00ea:10ea40l0ra00S060ia60q:a30l710Eb10e20N80k50Vb60f30H90k30Ja20p30hb0o0N80b20Db0m70B0x80Eb0l10C0r00Fb0f00C0f80Db0Y0O10E0Tb70B0E30E0Eb90I:50R10hb60H10h50N60ua0H:a70e720Ba10D0Yc\",\n\"advance\":10300\n}\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/87", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/87/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/87/events", "html_url": "https://github.com/simplejson/simplejson/issues/87", "id": 27632292, "node_id": "MDU6SXNzdWUyNzYzMjI5Mg==", "number": 87, "title": "Test failures with Python 3.4 and enabled warnings", "user": {"login": "Arfrever", "id": 656294, "node_id": "MDQ6VXNlcjY1NjI5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/656294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arfrever", "html_url": "https://github.com/Arfrever", "followers_url": "https://api.github.com/users/Arfrever/followers", "following_url": "https://api.github.com/users/Arfrever/following{/other_user}", "gists_url": "https://api.github.com/users/Arfrever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arfrever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arfrever/subscriptions", "organizations_url": "https://api.github.com/users/Arfrever/orgs", "repos_url": "https://api.github.com/users/Arfrever/repos", "events_url": "https://api.github.com/users/Arfrever/events{/privacy}", "received_events_url": "https://api.github.com/users/Arfrever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-14T22:45:24Z", "updated_at": "2014-02-15T00:17:17Z", "closed_at": "2014-02-15T00:17:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When warnings are enabled (using e.g. `PYTHONWARNINGS=\"d\"` environmental variable), then 3 tests fail with Python 3.4.\n\n```\n$ PYTHONPATH=\"build/lib.linux-x86_64-3.4\" PYTHONWARNINGS=\"d\" python3.4 simplejson/tests/__init__.py\n/usr/lib64/python3.4/imp.py:32: PendingDeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\n  PendingDeprecationWarning)\n................................../tmp/simplejson/simplejson/tests/test_errors.py:48: DeprecationWarning: Please use assertEqual instead.\n  self.assertEquals(err.msg, e.msg)\n/tmp/simplejson/simplejson/tests/test_errors.py:49: DeprecationWarning: Please use assertEqual instead.\n  self.assertEquals(err.doc, e.doc)\n/tmp/simplejson/simplejson/tests/test_errors.py:50: DeprecationWarning: Please use assertEqual instead.\n  self.assertEquals(err.pos, e.pos)\n/tmp/simplejson/simplejson/tests/test_errors.py:51: DeprecationWarning: Please use assertEqual instead.\n  self.assertEquals(err.end, e.end)\n............................................................FFF..............s\n======================================================================\nFAIL: test_infile_outfile (simplejson.tests.test_tool.TestTool)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/simplejson/simplejson/tests/test_tool.py\", line 90, in test_infile_outfile\n    self.runTool(args=[infile.name, outfile.name]),\n  File \"/tmp/simplejson/simplejson/tests/test_tool.py\", line 64, in runTool\n    self.assertEqual(strip_python_stderr(err), ''.encode())\nAssertionError: b\"/usr/lib64/python3.4/imp.py:32: PendingD[149 chars]ing)\" != b''\n\n======================================================================\nFAIL: test_infile_stdout (simplejson.tests.test_tool.TestTool)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/simplejson/simplejson/tests/test_tool.py\", line 78, in test_infile_stdout\n    self.runTool(args=[infile.name]),\n  File \"/tmp/simplejson/simplejson/tests/test_tool.py\", line 64, in runTool\n    self.assertEqual(strip_python_stderr(err), ''.encode())\nAssertionError: b\"/usr/lib64/python3.4/imp.py:32: PendingD[149 chars]ing)\" != b''\n\n======================================================================\nFAIL: test_stdin_stdout (simplejson.tests.test_tool.TestTool)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/simplejson/simplejson/tests/test_tool.py\", line 70, in test_stdin_stdout\n    self.runTool(data=self.data.encode()),\n  File \"/tmp/simplejson/simplejson/tests/test_tool.py\", line 64, in runTool\n    self.assertEqual(strip_python_stderr(err), ''.encode())\nAssertionError: b\"/usr/lib64/python3.4/imp.py:32: PendingD[149 chars]ing)\" != b''\n\n----------------------------------------------------------------------\nRan 112 tests in 3.650s\n\nFAILED (failures=3, skipped=1)\n```\n\nFix for failures:\n\n```\n--- simplejson/compat.py\n+++ simplejson/compat.py\n@@ -20,7 +20,10 @@\n\n else:\n     PY3 = True\n-    from imp import reload as reload_module\n+    if sys.version_info[:2] >= (3, 4):\n+        from importlib import reload as reload_module\n+    else:\n+        from imp import reload as reload_module\n     import codecs\n     def b(s):\n         return codecs.latin_1_encode(s)[0]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/86", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/86/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/86/events", "html_url": "https://github.com/simplejson/simplejson/issues/86", "id": 27482724, "node_id": "MDU6SXNzdWUyNzQ4MjcyNA==", "number": 86, "title": "Add support for `datetime`", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2014-02-13T00:01:47Z", "updated_at": "2014-03-14T17:12:18Z", "closed_at": "2014-03-14T17:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should `simplejson` support `datetime` objects?  If so then what is the natural encoding?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/84", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/84/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/84/events", "html_url": "https://github.com/simplejson/simplejson/issues/84", "id": 22484850, "node_id": "MDU6SXNzdWUyMjQ4NDg1MA==", "number": 84, "title": "simplejson.loads('\"\"') of empty string results in u''", "user": {"login": "mmeisinger", "id": 252106, "node_id": "MDQ6VXNlcjI1MjEwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/252106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmeisinger", "html_url": "https://github.com/mmeisinger", "followers_url": "https://api.github.com/users/mmeisinger/followers", "following_url": "https://api.github.com/users/mmeisinger/following{/other_user}", "gists_url": "https://api.github.com/users/mmeisinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmeisinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmeisinger/subscriptions", "organizations_url": "https://api.github.com/users/mmeisinger/orgs", "repos_url": "https://api.github.com/users/mmeisinger/repos", "events_url": "https://api.github.com/users/mmeisinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mmeisinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-11T23:03:26Z", "updated_at": "2013-11-11T23:46:53Z", "closed_at": "2013-11-11T23:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the 3.x versions, simplejson exposes this behavior for empty strings (also within collections):\nsimplejson.loads('\"\"')\nu''\nsimplejson.loads(u'\"\"')\nu''\nAnd the following for non-empty strings:\nsimplejson.loads('\"abc\"')\n'abc'\nsimplejson.loads(u'\"abc\"')\nu'abc'\nNote: Version 2.6.2 produces:\nsimplejson.loads('\"\"')\n''\n\nIs this expected behavior or a bug? It seems to violate the str-in-str-out and unicode-in-unicode-out behavior documented for loads().\n\nIf expected, is there a way to avoid this? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/83", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/83/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/83/events", "html_url": "https://github.com/simplejson/simplejson/issues/83", "id": 22374743, "node_id": "MDU6SXNzdWUyMjM3NDc0Mw==", "number": 83, "title": "more complex pretty-printing behavior?", "user": {"login": "novas0x2a", "id": 9639, "node_id": "MDQ6VXNlcjk2Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/9639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novas0x2a", "html_url": "https://github.com/novas0x2a", "followers_url": "https://api.github.com/users/novas0x2a/followers", "following_url": "https://api.github.com/users/novas0x2a/following{/other_user}", "gists_url": "https://api.github.com/users/novas0x2a/gists{/gist_id}", "starred_url": "https://api.github.com/users/novas0x2a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novas0x2a/subscriptions", "organizations_url": "https://api.github.com/users/novas0x2a/orgs", "repos_url": "https://api.github.com/users/novas0x2a/repos", "events_url": "https://api.github.com/users/novas0x2a/events{/privacy}", "received_events_url": "https://api.github.com/users/novas0x2a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-09T01:15:56Z", "updated_at": "2013-11-09T08:40:42Z", "closed_at": "2013-11-09T08:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a feeler to see whether you'd be interested in more complex pretty-printing behavior (I ask because I don't have code yet, but if you're categorically against it, I probably won't write it. Obviously, even if you like the idea, the performance impact and implementation matter, too).\n\nThis is an example of the kind of difference I'm most interested in:\n\n```\n{\n    \"key boilerplate should be aligned\":  {\n        \"alpha\":   {},\n        \"bravo\":   {},\n        \"charlie\": {}\n    },\n    \"short arrays should be on one line\": {\n        \"short\":   [ \"a\", \"b\", \"c\" ],\n        \"toolong\": [\n            \"this string element is\",\n            \"really long\",\n            \"much too long for a single line\"\n        ]\n    }\n}\n```\n\nWhat this shows is \n    1) keys padded with spaces (after the : before the {) so all of them at the same level have their boilerplate aligned \n    2) arrays whose serialization results in a linelength less than a specified value do not have a linebreak inserted after the [\n\nObviously, both of these cases require block-wise serialization because they need readahead- are you opposed to that? This would probably take the form of a JSONEncoder subclass that would (hopefully) reuse most of the _iterencode infrastructure. (That's why I'd be aiming for inclusion, it can live out of tree but I'd basically be using a bunch of private simplejson functionality to implement it)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/81", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/81/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/81/events", "html_url": "https://github.com/simplejson/simplejson/issues/81", "id": 21886947, "node_id": "MDU6SXNzdWUyMTg4Njk0Nw==", "number": 81, "title": "Documentation inconsistency on decoded strings", "user": {"login": "JuhaS", "id": 919180, "node_id": "MDQ6VXNlcjkxOTE4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/919180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JuhaS", "html_url": "https://github.com/JuhaS", "followers_url": "https://api.github.com/users/JuhaS/followers", "following_url": "https://api.github.com/users/JuhaS/following{/other_user}", "gists_url": "https://api.github.com/users/JuhaS/gists{/gist_id}", "starred_url": "https://api.github.com/users/JuhaS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JuhaS/subscriptions", "organizations_url": "https://api.github.com/users/JuhaS/orgs", "repos_url": "https://api.github.com/users/JuhaS/repos", "events_url": "https://api.github.com/users/JuhaS/events{/privacy}", "received_events_url": "https://api.github.com/users/JuhaS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-10-31T10:15:47Z", "updated_at": "2013-10-31T10:33:44Z", "closed_at": "2013-10-31T10:33:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Decoding strings with only ascii characters results in str objects. However there is a table that hints that json strings are decoded to unicode objects. That table should include str.\n- [Link to the table](http://simplejson.readthedocs.org/en/latest/#simplejson.JSONDecoder). \n- Quote about the related optimization: \n  > If s is a str then decoded JSON strings that contain only ASCII characters may be parsed as str for performance and memory reasons.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/80", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/80/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/80/events", "html_url": "https://github.com/simplejson/simplejson/issues/80", "id": 21196390, "node_id": "MDU6SXNzdWUyMTE5NjM5MA==", "number": 80, "title": "Pure python and c-speedup versions return different results", "user": {"login": "tom24", "id": 4780852, "node_id": "MDQ6VXNlcjQ3ODA4NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4780852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tom24", "html_url": "https://github.com/tom24", "followers_url": "https://api.github.com/users/tom24/followers", "following_url": "https://api.github.com/users/tom24/following{/other_user}", "gists_url": "https://api.github.com/users/tom24/gists{/gist_id}", "starred_url": "https://api.github.com/users/tom24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tom24/subscriptions", "organizations_url": "https://api.github.com/users/tom24/orgs", "repos_url": "https://api.github.com/users/tom24/repos", "events_url": "https://api.github.com/users/tom24/events{/privacy}", "received_events_url": "https://api.github.com/users/tom24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-10-18T01:45:15Z", "updated_at": "2013-10-18T05:15:26Z", "closed_at": "2013-10-18T02:25:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > import simplejson as json\n> > > json.loads('\"foo\"')\n> > > 'foo'\n> > > json._toggle_speedups(False)\n> > > json.loads('\"foo\"')\n> > > u'foo'\n\nAbove is done on version with speedups compiled in (default for me on ubuntu).  The second result is the only possible when speedups are not installed. Eg, pip install without python-dev.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/79", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/79/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/79/events", "html_url": "https://github.com/simplejson/simplejson/issues/79", "id": 20912721, "node_id": "MDU6SXNzdWUyMDkxMjcyMQ==", "number": 79, "title": "feature support to validate & fix error", "user": {"login": "simbha", "id": 3720334, "node_id": "MDQ6VXNlcjM3MjAzMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3720334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simbha", "html_url": "https://github.com/simbha", "followers_url": "https://api.github.com/users/simbha/followers", "following_url": "https://api.github.com/users/simbha/following{/other_user}", "gists_url": "https://api.github.com/users/simbha/gists{/gist_id}", "starred_url": "https://api.github.com/users/simbha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simbha/subscriptions", "organizations_url": "https://api.github.com/users/simbha/orgs", "repos_url": "https://api.github.com/users/simbha/repos", "events_url": "https://api.github.com/users/simbha/events{/privacy}", "received_events_url": "https://api.github.com/users/simbha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-12T15:41:50Z", "updated_at": "2013-10-12T16:11:35Z", "closed_at": "2013-10-12T16:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "An option to Validate a JSON file & fix errors if any.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/76", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/76/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/76/events", "html_url": "https://github.com/simplejson/simplejson/issues/76", "id": 18496636, "node_id": "MDU6SXNzdWUxODQ5NjYzNg==", "number": 76, "title": "The namedtuple_as_object=True default in simplejson.dumps breaks compatibility", "user": {"login": "vitaly-krugl", "id": 1441066, "node_id": "MDQ6VXNlcjE0NDEwNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1441066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitaly-krugl", "html_url": "https://github.com/vitaly-krugl", "followers_url": "https://api.github.com/users/vitaly-krugl/followers", "following_url": "https://api.github.com/users/vitaly-krugl/following{/other_user}", "gists_url": "https://api.github.com/users/vitaly-krugl/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitaly-krugl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitaly-krugl/subscriptions", "organizations_url": "https://api.github.com/users/vitaly-krugl/orgs", "repos_url": "https://api.github.com/users/vitaly-krugl/repos", "events_url": "https://api.github.com/users/vitaly-krugl/events{/privacy}", "received_events_url": "https://api.github.com/users/vitaly-krugl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-23T22:51:03Z", "updated_at": "2013-08-24T00:04:09Z", "closed_at": "2013-08-23T23:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "My production code broke after updating to the latest version of simplejson - v3.3.0. I am using simplejson as a substitute for the built-in json module in code that runs in jython. I traced the issue to the new default parameter in simplejson.dumps: namedtuple_as_object=True.\n\nThe built-in json module and the _older_ version of simplejson both encoded namedtuples as lists, but the latest version of simplejson now encodes it as a dict by default, thus breaking compatibility with the built-in json module as well as breaking backward compatibility with the older simplejson implementations.\n\nThe new behavior needs to be added in a way so as not to break API compatibility; thus, if this new behavior is exposed via simplejson.dumps, then it would be appropriate to add it with the default of namedtuple_as_object=False in order to preserve backward compatibility and not break existing apps.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/75", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/75/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/75/events", "html_url": "https://github.com/simplejson/simplejson/issues/75", "id": 17366583, "node_id": "MDU6SXNzdWUxNzM2NjU4Mw==", "number": 75, "title": "Strings are deserialized as bytestrings instead of unicode objects", "user": {"login": "maxnoel", "id": 1538011, "node_id": "MDQ6VXNlcjE1MzgwMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1538011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxnoel", "html_url": "https://github.com/maxnoel", "followers_url": "https://api.github.com/users/maxnoel/followers", "following_url": "https://api.github.com/users/maxnoel/following{/other_user}", "gists_url": "https://api.github.com/users/maxnoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxnoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxnoel/subscriptions", "organizations_url": "https://api.github.com/users/maxnoel/orgs", "repos_url": "https://api.github.com/users/maxnoel/repos", "events_url": "https://api.github.com/users/maxnoel/events{/privacy}", "received_events_url": "https://api.github.com/users/maxnoel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-29T22:09:22Z", "updated_at": "2013-07-29T22:27:26Z", "closed_at": "2013-07-29T22:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using simplejson 3.3.0 and Python 2.7.3, the JSON string type is deserialized as a Python bytestring when no non-ASCII characters are present:\n\n```\n# Source bytestrings all use UTF-8\n>>> simplejson.loads('\"foo\"')\n'foo'\n>>> simplejson.loads('{\"foo\": \"bar\"}')\n{'foo': 'bar'}\n\n# Unicode objects are correctly produced in the presence of non-ASCII chars\n>>> simplejson.loads('{\"foo\": \"b\u00e9b\u00e9\"}')\n{'foo': u'b\\xe9b\\xe9'}\n```\n\nThe Python stdlib's json module, in comparison, correctly deserializes everything as unicode objects:\n\n```\n>>> json.loads('\"foo\"')\nu'foo'\n>>> json.loads('{\"foo\": \"b\u00e9b\u00e9\"}')\n{u'foo': u'b\\xe9b\\xe9'}\n>>> json.loads('{\"foo\": \"bar\"}')\n{u'foo': u'bar'}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/simplejson/simplejson/issues/74", "repository_url": "https://api.github.com/repos/simplejson/simplejson", "labels_url": "https://api.github.com/repos/simplejson/simplejson/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/simplejson/simplejson/issues/74/comments", "events_url": "https://api.github.com/repos/simplejson/simplejson/issues/74/events", "html_url": "https://github.com/simplejson/simplejson/issues/74", "id": 17345052, "node_id": "MDU6SXNzdWUxNzM0NTA1Mg==", "number": 74, "title": "Python 3 support is broken", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-29T15:28:47Z", "updated_at": "2013-07-29T15:49:58Z", "closed_at": "2013-07-29T15:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "See http://hydra.nixos.org/build/5597512/nixlog/1/raw\n", "performed_via_github_app": null, "score": 1.0}]}