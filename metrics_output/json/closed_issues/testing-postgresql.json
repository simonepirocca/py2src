{"total_count": 10, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/31", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/31/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/31/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/31", "id": 463750895, "node_id": "MDU6SXNzdWU0NjM3NTA4OTU=", "number": 31, "title": "Why can't I perform engine.connect() operation ?", "user": {"login": "ashukid", "id": 19229289, "node_id": "MDQ6VXNlcjE5MjI5Mjg5", "avatar_url": "https://avatars3.githubusercontent.com/u/19229289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashukid", "html_url": "https://github.com/ashukid", "followers_url": "https://api.github.com/users/ashukid/followers", "following_url": "https://api.github.com/users/ashukid/following{/other_user}", "gists_url": "https://api.github.com/users/ashukid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashukid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashukid/subscriptions", "organizations_url": "https://api.github.com/users/ashukid/orgs", "repos_url": "https://api.github.com/users/ashukid/repos", "events_url": "https://api.github.com/users/ashukid/events{/privacy}", "received_events_url": "https://api.github.com/users/ashukid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T13:23:25Z", "updated_at": "2019-07-03T13:28:11Z", "closed_at": "2019-07-03T13:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried using this for testing posgresql database. The engine creating part is working fine and I can execute commands directly using `engine.execute()`.\r\n\r\nBut when I try using - `conn = engine.connect()` I get the error - `terminating connection due to administrator command`\r\n\r\n![Screenshot from 2019-07-03 18-51-44](https://user-images.githubusercontent.com/19229289/60595017-cf15b280-9dc3-11e9-929a-32937a059717.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/28", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/28/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/28/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/28", "id": 405831687, "node_id": "MDU6SXNzdWU0MDU4MzE2ODc=", "number": 28, "title": "pg8000 No Longer Supports Python2.", "user": {"login": "big-mac-slice", "id": 44780029, "node_id": "MDQ6VXNlcjQ0NzgwMDI5", "avatar_url": "https://avatars2.githubusercontent.com/u/44780029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/big-mac-slice", "html_url": "https://github.com/big-mac-slice", "followers_url": "https://api.github.com/users/big-mac-slice/followers", "following_url": "https://api.github.com/users/big-mac-slice/following{/other_user}", "gists_url": "https://api.github.com/users/big-mac-slice/gists{/gist_id}", "starred_url": "https://api.github.com/users/big-mac-slice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/big-mac-slice/subscriptions", "organizations_url": "https://api.github.com/users/big-mac-slice/orgs", "repos_url": "https://api.github.com/users/big-mac-slice/repos", "events_url": "https://api.github.com/users/big-mac-slice/events{/privacy}", "received_events_url": "https://api.github.com/users/big-mac-slice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-01T19:00:06Z", "updated_at": "2019-02-12T15:43:08Z", "closed_at": "2019-02-12T15:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like the 1.13.0 release of pg8000 drops support of python2.7 which is being picked up by the requirement of `pg8000 >= 1.10`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/13", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/13/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/13/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/13", "id": 174436921, "node_id": "MDU6SXNzdWUxNzQ0MzY5MjE=", "number": 13, "title": "postgresql bin path discovery", "user": {"login": "ju2wheels", "id": 396211, "node_id": "MDQ6VXNlcjM5NjIxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/396211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ju2wheels", "html_url": "https://github.com/ju2wheels", "followers_url": "https://api.github.com/users/ju2wheels/followers", "following_url": "https://api.github.com/users/ju2wheels/following{/other_user}", "gists_url": "https://api.github.com/users/ju2wheels/gists{/gist_id}", "starred_url": "https://api.github.com/users/ju2wheels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ju2wheels/subscriptions", "organizations_url": "https://api.github.com/users/ju2wheels/orgs", "repos_url": "https://api.github.com/users/ju2wheels/repos", "events_url": "https://api.github.com/users/ju2wheels/events{/privacy}", "received_events_url": "https://api.github.com/users/ju2wheels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-01T05:00:42Z", "updated_at": "2017-05-22T21:04:25Z", "closed_at": "2017-05-22T21:04:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, im submitting a PR to add RHEL/CentOS path but opening an issue because I think it would be good to reconsider how this implemented.\n\nRight now its searching a bunch of paths for the postgresql binaries, but as you are already seeing hard coding these paths is not a good idea because it can vary.\n\nOn top of the bin dir being in different places, if you take the approach of \"lets search for the first bin dir we can find\", then we as testers have no control over which postgresql version gets used.\n\nYour current implementation kind of makes the assumption that theres only one postgresql version per system which is not always true. For example, im working in CentOS 7 and if I install postgresql from the standard RHEL repo its at 9.2. However, I need to use 9.5 for testing because it has newer features I need, so I add the postgresql yum repo and install 9.5 (this can be done along side 9.2 without having to uninstall it). Now if I have both installed, how do I tell testing.postgresql which to choose?\n\nI have submitted the patch in the current style but I would recommend it be changed in the future to use os.environ['PATH'] instead so we can just put the path to the postgresql bin dir that we want into the beginning  of our PATH and you dont have to search for the directory, you just always execute the version found first in PATH.\n\nI havent read through all the code but if its not only the bin dir we need then maybe have it look for PG_HOME env var or something if you also need the other postgresql folders relative to this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/11", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/11/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/11/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/11", "id": 134384001, "node_id": "MDU6SXNzdWUxMzQzODQwMDE=", "number": 11, "title": "PostgreSQL Semaphore exhaustion", "user": {"login": "DavidCookBrite", "id": 16768531, "node_id": "MDQ6VXNlcjE2NzY4NTMx", "avatar_url": "https://avatars3.githubusercontent.com/u/16768531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidCookBrite", "html_url": "https://github.com/DavidCookBrite", "followers_url": "https://api.github.com/users/DavidCookBrite/followers", "following_url": "https://api.github.com/users/DavidCookBrite/following{/other_user}", "gists_url": "https://api.github.com/users/DavidCookBrite/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidCookBrite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidCookBrite/subscriptions", "organizations_url": "https://api.github.com/users/DavidCookBrite/orgs", "repos_url": "https://api.github.com/users/DavidCookBrite/repos", "events_url": "https://api.github.com/users/DavidCookBrite/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidCookBrite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-17T19:57:43Z", "updated_at": "2020-02-22T21:50:49Z", "closed_at": "2016-08-20T06:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use testing.postgresql in our automated tests that fire-up a local instance of PostgreSQL using `initdb` and then run our schema creation and data seeding tasks.\n\nFor the past few months we've been getting test failures due with this error:\n\n> initdb failed: 'FATAL:  could not create semaphores: No space left on device\n> DETAIL:  Failed system call was semget(1, 17, 03600).\n> HINT:  This error does _not_ mean that you have run out of disk space.  It occurs when either the system limit for the maximum number of semaphore sets (SEMMNI), or the system wide maximum number of semaphores (SEMMNS), would be exceeded.  You need to raise the respective kernel parameter.  Alternatively, reduce PostgreSQL's consumption of semaphores by reducing its max_connections parameter.\n> The PostgreSQL documentation contains more information about configuring your system for PostgreSQL.\n> child process exited with exit code 1\n> initdb: removing contents of data directory \"/tmp/tmpctGr9I/data\"\n\nThese tests run on an Amazon EC2 instance running Amazon Linux 2015.09 x64. Here's the output from `ipcs -ls` showing semaphore configuration:\n\n> [ec2-user@ip-127-0-0-1 etc]$ ipcs -ls\n> ------ Semaphore Limits --------\n> max number of arrays = 128\n> max semaphores per array = 250\n> max semaphores system wide = 32000\n> max ops per semop call = 32\n> semaphore max value = 32767\n> [ec2-user@ip-127-0-0-1 etc]$\n\nWe see the same issue on both Mac OS X with PostgreSQL 9.4 as well as on our Amazon EC2 instances running PostgreSQL 9.3. PostgreSQL is installed via `yum` on the EC2 instances via our build script, and `brew` on Mac.\n\nWe're unsure if it's a bug in PostgreSQL or testing.postgresql, but we thought we'd start here.\n\nWe're currently using testing.postgresql 1.1.2 (we're in the process of upgrading to the latest version - it is currently incompatible with our builds).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/9", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/9/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/9/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/9", "id": 128507229, "node_id": "MDU6SXNzdWUxMjg1MDcyMjk=", "number": 9, "title": "trailing postgres cluster", "user": {"login": "kardaj", "id": 8066362, "node_id": "MDQ6VXNlcjgwNjYzNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8066362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kardaj", "html_url": "https://github.com/kardaj", "followers_url": "https://api.github.com/users/kardaj/followers", "following_url": "https://api.github.com/users/kardaj/following{/other_user}", "gists_url": "https://api.github.com/users/kardaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kardaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kardaj/subscriptions", "organizations_url": "https://api.github.com/users/kardaj/orgs", "repos_url": "https://api.github.com/users/kardaj/repos", "events_url": "https://api.github.com/users/kardaj/events{/privacy}", "received_events_url": "https://api.github.com/users/kardaj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-25T10:37:44Z", "updated_at": "2016-02-11T12:51:19Z", "closed_at": "2016-02-11T12:51:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm using the following snippet to run my tests.\n\n``` python\nimport unittest\nimport testing.postgresql\n\n\nclass MyTestCase(unittest.TestCase):\n\n    @classmethod\n    def setUpClass(self):\n        self.postgresql = testing.postgresql.Postgresql()\n\n    @classmethod\n    def tearDownClass(self):\n        self.postgresql.stop()\n```\n\nThe problem I'm currently having is that the testing postgres cluster doesn't shutdown if my test run into an Error. Is there a way to avoid this? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/8", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/8/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/8/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/8", "id": 126913777, "node_id": "MDU6SXNzdWUxMjY5MTM3Nzc=", "number": 8, "title": "client encoding", "user": {"login": "nbonnotte", "id": 9929982, "node_id": "MDQ6VXNlcjk5Mjk5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbonnotte", "html_url": "https://github.com/nbonnotte", "followers_url": "https://api.github.com/users/nbonnotte/followers", "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}", "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions", "organizations_url": "https://api.github.com/users/nbonnotte/orgs", "repos_url": "https://api.github.com/users/nbonnotte/repos", "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}", "received_events_url": "https://api.github.com/users/nbonnotte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 212480680, "node_id": "MDU6TGFiZWwyMTI0ODA2ODA=", "url": "https://api.github.com/repos/tk0miya/testing.postgresql/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-15T17:05:50Z", "updated_at": "2016-02-05T17:27:31Z", "closed_at": "2016-02-05T17:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I specify what the default client encoding should be?\n\nI have tests that fail on a Jenkins server because the client encoding is `SQLASCII` instead of `UTF8`...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/6", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/6/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/6/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/6", "id": 118833343, "node_id": "MDU6SXNzdWUxMTg4MzMzNDM=", "number": 6, "title": "Cache result of initdb", "user": {"login": "rutsky", "id": 46573, "node_id": "MDQ6VXNlcjQ2NTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/46573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rutsky", "html_url": "https://github.com/rutsky", "followers_url": "https://api.github.com/users/rutsky/followers", "following_url": "https://api.github.com/users/rutsky/following{/other_user}", "gists_url": "https://api.github.com/users/rutsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rutsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rutsky/subscriptions", "organizations_url": "https://api.github.com/users/rutsky/orgs", "repos_url": "https://api.github.com/users/rutsky/repos", "events_url": "https://api.github.com/users/rutsky/events{/privacy}", "received_events_url": "https://api.github.com/users/rutsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-25T13:09:37Z", "updated_at": "2015-12-16T14:26:57Z", "closed_at": "2015-12-16T14:26:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Ubuntu 14.04 with PostgreSQL 9.3 database initialization with initdb is the slowest part of testing.postgresql: it takes around 2.5 seconds to create data directory with default contents.\n\nWhile it's possible to create PG data directory outside of testing.postgresql, cache it, copy for each test and pass to `testing.postgresql.Postgresql` with `copy_data_from` argument, it's a lot of work and requires to reimplementing of some of the testing.postgresql functionality (e.g. search of `initdb` utility).\n\nI propose to implement caching of `initdb` result inside PostgreSQL and use it by default.\n\nThis can be done pretty straightforward and I can prepare PR for this issue if you think my approach is satisfactory:\n1. Add dependency for library that provides API to work with user cache directory (e.g. [appdirs](https://pypi.python.org/pypi/appdirs)). Cache directory will be used for caching initdb result. Cache should be verioned by initdb version (`initdb -V`) and by testing.postgresql version.\n2. Add option to `testing.postgresql.Postgresql` to disable cache. e.g. `cache=False`.\n   In `testing.postgresql.Postgresql` if cache is enabled: check if cache for the current version of initdb+testing.postgresql exists, if no, create it and fill it with `initdb`; copy cached directory content to a temporary PG data directory.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/3", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/3/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/3/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/3", "id": 100078154, "node_id": "MDU6SXNzdWUxMDAwNzgxNTQ=", "number": 3, "title": "'NoneType' object has no attribute 'path' in Postgresql.__del__", "user": {"login": "nbonnotte", "id": 9929982, "node_id": "MDQ6VXNlcjk5Mjk5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbonnotte", "html_url": "https://github.com/nbonnotte", "followers_url": "https://api.github.com/users/nbonnotte/followers", "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}", "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions", "organizations_url": "https://api.github.com/users/nbonnotte/orgs", "repos_url": "https://api.github.com/users/nbonnotte/repos", "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}", "received_events_url": "https://api.github.com/users/nbonnotte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-10T14:20:06Z", "updated_at": "2015-08-22T04:00:05Z", "closed_at": "2015-08-21T02:55:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great package! It works very well.\n\nI just wanted to let you know: at the end of my tests, even the successful ones, I always get the message:\n\n```\nException AttributeError: \"'NoneType' object has no attribute 'path'\" in <bound method Postgresql.__del__ of <testing.postgresql.Postgresql object at 0x7f656550a4d0>> ignored\n```\n\nAm I doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/2", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/2/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/2/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/2", "id": 96085204, "node_id": "MDU6SXNzdWU5NjA4NTIwNA==", "number": 2, "title": "Plans for supporting Windows?", "user": {"login": "jamesnunn", "id": 2095017, "node_id": "MDQ6VXNlcjIwOTUwMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2095017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesnunn", "html_url": "https://github.com/jamesnunn", "followers_url": "https://api.github.com/users/jamesnunn/followers", "following_url": "https://api.github.com/users/jamesnunn/following{/other_user}", "gists_url": "https://api.github.com/users/jamesnunn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesnunn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesnunn/subscriptions", "organizations_url": "https://api.github.com/users/jamesnunn/orgs", "repos_url": "https://api.github.com/users/jamesnunn/repos", "events_url": "https://api.github.com/users/jamesnunn/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesnunn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-20T15:09:31Z", "updated_at": "2015-11-20T19:10:20Z", "closed_at": "2015-07-21T02:13:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I notice that there are no references to search paths for Windows - is this planned?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/1", "repository_url": "https://api.github.com/repos/tk0miya/testing.postgresql", "labels_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/1/comments", "events_url": "https://api.github.com/repos/tk0miya/testing.postgresql/issues/1/events", "html_url": "https://github.com/tk0miya/testing.postgresql/issues/1", "id": 88712303, "node_id": "MDU6SXNzdWU4ODcxMjMwMw==", "number": 1, "title": "What data format does copy_data_from expect?", "user": {"login": "jimfulton", "id": 772727, "node_id": "MDQ6VXNlcjc3MjcyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/772727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimfulton", "html_url": "https://github.com/jimfulton", "followers_url": "https://api.github.com/users/jimfulton/followers", "following_url": "https://api.github.com/users/jimfulton/following{/other_user}", "gists_url": "https://api.github.com/users/jimfulton/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimfulton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimfulton/subscriptions", "organizations_url": "https://api.github.com/users/jimfulton/orgs", "repos_url": "https://api.github.com/users/jimfulton/repos", "events_url": "https://api.github.com/users/jimfulton/events{/privacy}", "received_events_url": "https://api.github.com/users/jimfulton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-16T12:27:15Z", "updated_at": "2018-10-29T11:54:27Z", "closed_at": "2015-06-27T15:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried referencing a tablespace directory containing a single database and that failed:\n\n```\n>>> pg = testing.postgresql.Postgresql(copy_data_from='/aledade-test-data')\npg = testing.postgresql.Postgresql(copy_data_from='/aledade-test-data')\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/Users/jim/.buildout/eggs/testing.postgresql-1.2.0-py3.4.egg/testing/postgresql.py\", line 69, in __init__\n    self.setup()\n  File \"/Users/jim/.buildout/eggs/testing.postgresql-1.2.0-py3.4.egg/testing/postgresql.py\", line 132, in setup\n    raise RuntimeError(\"initdb failed: %r\" % err)\nRuntimeError: initdb failed: b'initdb: directory \"/var/folders/vl/jn0sr3ds7h9b1zs9_lts29s00000gp/T/tmp1n_17su_/data\" exists but is not empty\\nIf you want to create a new database system, either remove or empty\\nthe directory \"/var/folders/vl/jn0sr3ds7h9b1zs9_lts29s00000gp/T/tmp1n_17su_/data\" or run initdb\\nwith an argument other than \"/var/folders/vl/jn0sr3ds7h9b1zs9_lts29s00000gp/T/tmp1n_17su_/data\".\\n'\n```\n", "performed_via_github_app": null, "score": 1.0}]}