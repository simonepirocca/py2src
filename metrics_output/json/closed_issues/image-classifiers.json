{"total_count": 29, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/qubvel/classification_models/issues/55", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/55/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/55/events", "html_url": "https://github.com/qubvel/classification_models/issues/55", "id": 653793228, "node_id": "MDU6SXNzdWU2NTM3OTMyMjg=", "number": 55, "title": "[Solve]Encounter ValueError: Shapes (512,) and (3,) are incompatible while loading pre-trained weight", "user": {"login": "ytliang97", "id": 18035692, "node_id": "MDQ6VXNlcjE4MDM1Njky", "avatar_url": "https://avatars1.githubusercontent.com/u/18035692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytliang97", "html_url": "https://github.com/ytliang97", "followers_url": "https://api.github.com/users/ytliang97/followers", "following_url": "https://api.github.com/users/ytliang97/following{/other_user}", "gists_url": "https://api.github.com/users/ytliang97/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytliang97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytliang97/subscriptions", "organizations_url": "https://api.github.com/users/ytliang97/orgs", "repos_url": "https://api.github.com/users/ytliang97/repos", "events_url": "https://api.github.com/users/ytliang97/events{/privacy}", "received_events_url": "https://api.github.com/users/ytliang97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T06:13:38Z", "updated_at": "2020-07-11T02:56:02Z", "closed_at": "2020-07-11T02:54:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ntensorflow version: 1.12.3\r\n```\r\n\r\nHello, thank you for sharing your code.\r\n\r\nThe thing is, I encounter some error when I try to load pre-trained weight.\r\n\r\nI use `resnet34` backbone. \r\n\r\nModel worked well before I loaded weight from your WEIGHTS_COLLECTION.\r\n\r\n\r\nThe following is the code. It can run directly.\r\n```python\r\n\r\nimport tensorflow as tf\r\nfrom tensorflow.keras import layers, models\r\nfrom tensorflow.keras import utils as keras_utils\r\n\r\nimg_input = layers.Input(shape=(512, 512, 3), name='data')\r\nx = layers.BatchNormalization(name='bn_data', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': False})(img_input)\r\nx = layers.ZeroPadding2D(padding=(3,3))(x)\r\nx = layers.Conv2D(64, (7,7), strides=(2,2), name='conv0', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\nx = layers.BatchNormalization(name='bn0', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\nx = layers.Activation('relu', name='relu0')(x)\r\nx = layers.ZeroPadding2D(padding=(1,1))(x)\r\nx = layers.MaxPooling2D((3,3), strides=(2,2), padding='valid', name='pooling0')(x)\r\n\r\nif True:\r\n#(stage, rep) = [(0, 3), (1, 4), (2, 6), (3, 3)]\r\n# stage = 0, block = 0\r\n#x = ResidualBlock(64, 0, 0, strides=(1,1), cut='post', attention=Attention)(x)\r\n    shortcut = layers.Conv2D(64, (1,1), name='stage1_unit1_sc', strides=(1,1), **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n    x = layers.BatchNormalization(name='stage1_unit1_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage1_unit1_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(64, (3,3), strides=(1,1), name='stage1_unit1_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage1_unit1_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage1_unit1_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(64, (3,3), name='stage1_unit1_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 0, block = 1\r\n#x = ResidualBlock(64, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage1_unit2_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage1_unit2_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(64, (3,3), strides=(1,1), name='stage1_unit2_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage1_unit2_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage1_unit2_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(64, (3,3), name='stage1_unit2_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 0, block = 2\r\n#x = ResidualBlock(64, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage1_unit3_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage1_unit3_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(64, (3,3), strides=(1,1), name='stage1_unit3_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage1_unit3_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage1_unit3_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(64, (3,3), name='stage1_unit3_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 1, block = 0\r\n# x = ResidualBlock(128, stage, block, strides=(2, 2), cut='post', attention=Attention)(x)\r\n    shortcut = layers.Conv2D(128, (1,1), name='stage2_unit1_sc', strides=(2,2), **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n    x = layers.BatchNormalization(name='stage2_unit1_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit1_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), strides=(2,2), name='stage2_unit1_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage2_unit1_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit1_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), name='stage2_unit1_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n# stage = 1, block = 1\r\n# x = ResidualBlock(128, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage2_unit2_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit2_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), strides=(1,1), name='stage2_unit2_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage2_unit2_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit2_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), name='stage2_unit2_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 1, block = 2\r\n# x = ResidualBlock(128, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage2_unit3_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit3_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), strides=(1,1), name='stage2_unit3_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage2_unit3_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit3_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), name='stage2_unit3_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 1, block = 3\r\n# x = ResidualBlock(128, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage2_unit4_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit4_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), strides=(1,1), name='stage2_unit4_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage2_unit4_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage2_unit4_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(128, (3,3), name='stage2_unit4_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 0\r\n# x = ResidualBlock(256, stage, block, strides=(2, 2), cut='post', attention=Attention)(x)\r\n    shortcut = layers.Conv2D(256, (1,1), name='stage3_unit1_sc', strides=(2,2), **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n    x = layers.BatchNormalization(name='stage3_unit1_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit1_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), strides=(2,2), name='stage3_unit1_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage3_unit1_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit1_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), name='stage3_unit1_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 1\r\n# x = ResidualBlock(256, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage3_unit2_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit2_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), strides=(1,1), name='stage3_unit2_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage3_unit2_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit2_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), name='stage3_unit2_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 2\r\n# x = ResidualBlock(256, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage3_unit3_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit3_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), strides=(1,1), name='stage3_unit3_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage3_unit3_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit3_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), name='stage3_unit3_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 3\r\n# x = ResidualBlock(256, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage3_unit4_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit4_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), strides=(1,1), name='stage3_unit4_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage3_unit4_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit4_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), name='stage3_unit4_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 4\r\n# x = ResidualBlock(256, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage3_unit5_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit5_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), strides=(1,1), name='stage3_unit5_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage3_unit5_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit5_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), name='stage3_unit5_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 5\r\n# x = ResidualBlock(256, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage3_unit6_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit6_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), strides=(1,1), name='stage3_unit6_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage3_unit6_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage3_unit6_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(256, (3,3), name='stage3_unit6_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 3, block = 0\r\n# x = ResidualBlock(512, stage, block, strides=(2, 2), cut='post', attention=Attention)(x)\r\n    shortcut = layers.Conv2D(512, (1,1), name='stage4_unit1_sc', strides=(2,2), **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n    x = layers.BatchNormalization(name='stage4_unit1_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage4_unit1_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(512, (3,3), strides=(2,2), name='stage4_unit1_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage4_unit1_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage4_unit1_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(512, (3,3), name='stage4_unit1_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 3, block = 1\r\n# x = ResidualBlock(512, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage4_unit2_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage4_unit2_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(512, (3,3), strides=(1,1), name='stage4_unit2_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage4_unit2_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage4_unit2_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(512, (3,3), name='stage4_unit2_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\n# stage = 2, block = 2\r\n# x = ResidualBlock(512, stage, block, strides=(1, 1), cut='pre', attention=Attention)(x)\r\n    sortcut = x\r\n    x = layers.BatchNormalization(name='stage4_unit3_bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage4_unit3_relu1')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(512, (3,3), strides=(1,1), name='stage4_unit3_conv1', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.BatchNormalization(name='stage4_unit3_bn2', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\n    x = layers.Activation('relu', name='stage4_unit3_relu2')(x)\r\n    x = layers.ZeroPadding2D(padding=(1,1))(x)\r\n    x = layers.Conv2D(512, (3,3), name='stage4_unit3_conv2', **{'kernel_initializer': 'he_uniform', 'use_bias': False, 'padding': 'valid'})(x)\r\n\r\n    x = layers.Add()([x, shortcut])\r\n\r\nx = layers.BatchNormalization(name='bn1', **{'axis': 1, 'momentum': 0.99, 'epsilon': 2e-5, 'center': True, 'scale': True})(x)\r\nx = layers.Activation('relu', name='relu1')(x)\r\n\r\nbackbone = models.Model(inputs=img_input, outputs=x)\r\n\r\n\r\nprint(backbone.summary())\r\n\r\nprint(backbone.input)\r\nprint(backbone.output)\r\n#print(backbone.get_layer(name='stage4_unit1_relu1').output)\r\n\r\nprint(backbone.layers[-1])\r\n\r\n# load weight\r\nWEIGHTS_COLLECTION = [\r\n    # ResNet34\r\n    {\r\n        'model': 'resnet34',\r\n        'dataset': 'imagenet',\r\n        'classes': 1000,\r\n        'include_top': True,\r\n        'url': 'https://github.com/qubvel/classification_models/releases/download/0.0.1/resnet34_imagenet_1000.h5',\r\n        'name': 'resnet34_imagenet_1000.h5',\r\n        'md5': '2ac8277412f65e5d047f255bcbd10383',\r\n    },\r\n\r\n    {\r\n        'model': 'resnet34',\r\n        'dataset': 'imagenet',\r\n        'classes': 1000,\r\n        'include_top': False,\r\n        'url': 'https://github.com/qubvel/classification_models/releases/download/0.0.1/resnet34_imagenet_1000_no_top.h5',\r\n        'name': 'resnet34_imagenet_1000_no_top.h5',\r\n        'md5': '8caaa0ad39d927cb8ba5385bf945d582',\r\n    }\r\n]\r\nw = list(filter(lambda x: x['model'] == 'resnet34', WEIGHTS_COLLECTION))\r\nw = list(filter(lambda x: x['dataset'] == 'imagenet', w))\r\nw = list(filter(lambda x: x['include_top'] == False, w))\r\nprint(w)\r\n\r\nweights = w[0]\r\n\r\nweights_path = keras_utils.get_file(\r\n    weights['name'],\r\n    weights['url'],\r\n    cache_subdir='modelssssss',\r\n    md5_hash=weights['md5']\r\n)\r\n\r\nbackbone.load_weights(weights_path)\r\n```\r\n\r\nand I got the information:\r\n```\r\n__________________________________________________________________________________________________\r\nLayer (type)                    Output Shape         Param #     Connected to\r\n==================================================================================================\r\n** IGNORE LAYER\r\n==================================================================================================\r\nTotal params: 21,281,856\r\nTrainable params: 21,276,544\r\nNon-trainable params: 5,312\r\n__________________________________________________________________________________________________\r\nNone\r\nTensor(\"data:0\", shape=(?, 512, 512, 3), dtype=float32)\r\nTensor(\"relu1/Relu:0\", shape=(?, 16, 16, 512), dtype=float32)\r\n<tensorflow.python.keras.layers.core.Activation object at 0x1281255c0>\r\n[{'model': 'resnet34', 'dataset': 'imagenet', 'classes': 1000, 'include_top': False, 'url': 'https://github.com/qubvel/classification_models/releases/download/0.0.1/resnet34_imagenet_1000_no_top.h5', 'name': 'resnet34_imagenet_1000_no_top.h5', 'md5': '8caaa0ad39d927cb8ba5385bf945d582'}]\r\nTraceback (most recent call last):\r\n  File \"flatten_model_of_resnet34_unet.py\", line 307, in <module>\r\n    backbone.load_weights(weights_path)\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 1544, in load_weights\r\n    saving.load_weights_from_hdf5_group(f, self.layers)\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 806, in load_weights_from_hdf5_group\r\n    K.batch_set_value(weight_value_tuples)\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/keras/backend.py\", line 2779, in batch_set_value\r\n    assign_op = x.assign(assign_placeholder)\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 951, in assign\r\n    self._shape.assert_is_compatible_with(value_tensor.shape)\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 848, in assert_is_compatible_with\r\n    raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\r\nValueError: Shapes (512,) and (3,) are incompatible\r\n```\r\nI have changed input shape with (256, 256, 3), (224, 224, 3), (512, 512, 3), (512, 512, 1), but it doesn't work.\r\nAnd I already google for a while, but I still don't know how to solve this problem.\r\n\r\nCould anyone give me advice? Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/49", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/49/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/49/events", "html_url": "https://github.com/qubvel/classification_models/issues/49", "id": 602740185, "node_id": "MDU6SXNzdWU2MDI3NDAxODU=", "number": 49, "title": "How could I get a softmax output of these models?", "user": {"login": "graveszhang", "id": 32793462, "node_id": "MDQ6VXNlcjMyNzkzNDYy", "avatar_url": "https://avatars2.githubusercontent.com/u/32793462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graveszhang", "html_url": "https://github.com/graveszhang", "followers_url": "https://api.github.com/users/graveszhang/followers", "following_url": "https://api.github.com/users/graveszhang/following{/other_user}", "gists_url": "https://api.github.com/users/graveszhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/graveszhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graveszhang/subscriptions", "organizations_url": "https://api.github.com/users/graveszhang/orgs", "repos_url": "https://api.github.com/users/graveszhang/repos", "events_url": "https://api.github.com/users/graveszhang/events{/privacy}", "received_events_url": "https://api.github.com/users/graveszhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T15:13:16Z", "updated_at": "2020-04-19T15:19:39Z", "closed_at": "2020-04-19T15:19:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this case i don't want the prediction class so that I add `include_top = False` inside the model. I want a softmax layer at the end of the network, and get the output of specified size. Any code to help please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/45", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/45/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/45/events", "html_url": "https://github.com/qubvel/classification_models/issues/45", "id": 564057785, "node_id": "MDU6SXNzdWU1NjQwNTc3ODU=", "number": 45, "title": "Expected Range for Inputs (also for segmentation models)", "user": {"login": "gkaissis", "id": 48105485, "node_id": "MDQ6VXNlcjQ4MTA1NDg1", "avatar_url": "https://avatars2.githubusercontent.com/u/48105485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkaissis", "html_url": "https://github.com/gkaissis", "followers_url": "https://api.github.com/users/gkaissis/followers", "following_url": "https://api.github.com/users/gkaissis/following{/other_user}", "gists_url": "https://api.github.com/users/gkaissis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkaissis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkaissis/subscriptions", "organizations_url": "https://api.github.com/users/gkaissis/orgs", "repos_url": "https://api.github.com/users/gkaissis/repos", "events_url": "https://api.github.com/users/gkaissis/events{/privacy}", "received_events_url": "https://api.github.com/users/gkaissis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T14:59:38Z", "updated_at": "2020-02-12T15:21:58Z", "closed_at": "2020-02-12T15:21:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the tutorial it seems like all preprocessing functions for pretrained models expect 8 bit RGB images in the range 0-255. From what I understand, this is also true for all pretrained models in segmentation_models. Can you please confirm that this is the case for **all** models in **both** libraries?  \r\n\r\n#37 confirms this for ResNets\r\n\r\nThank you very much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/43", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/43/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/43/events", "html_url": "https://github.com/qubvel/classification_models/issues/43", "id": 543971890, "node_id": "MDU6SXNzdWU1NDM5NzE4OTA=", "number": 43, "title": "About the SE blocks in SE-Net", "user": {"login": "RifqiAW", "id": 11531966, "node_id": "MDQ6VXNlcjExNTMxOTY2", "avatar_url": "https://avatars2.githubusercontent.com/u/11531966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RifqiAW", "html_url": "https://github.com/RifqiAW", "followers_url": "https://api.github.com/users/RifqiAW/followers", "following_url": "https://api.github.com/users/RifqiAW/following{/other_user}", "gists_url": "https://api.github.com/users/RifqiAW/gists{/gist_id}", "starred_url": "https://api.github.com/users/RifqiAW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RifqiAW/subscriptions", "organizations_url": "https://api.github.com/users/RifqiAW/orgs", "repos_url": "https://api.github.com/users/RifqiAW/repos", "events_url": "https://api.github.com/users/RifqiAW/events{/privacy}", "received_events_url": "https://api.github.com/users/RifqiAW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-30T18:33:11Z", "updated_at": "2019-12-30T21:40:13Z", "closed_at": "2019-12-30T21:38:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "May I ask the reason why you opted to use conv layers instead of dense layers like in the paper(or at least that's what I think the paper used)? Actually, I have tried both and using conv layers yields better results altho not by much so I'm wandering if it's just fluke like they're actually about the same or there are some good reasons behind it.\r\n\r\nEdit: After thinking about it again, I suppose there's really no difference between using 1x1 convolutions and fully connected layers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/39", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/39/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/39/events", "html_url": "https://github.com/qubvel/classification_models/issues/39", "id": 510174618, "node_id": "MDU6SXNzdWU1MTAxNzQ2MTg=", "number": 39, "title": "SENet models aren't calling get_source_inputs()", "user": {"login": "fernandocamargoti", "id": 3669312, "node_id": "MDQ6VXNlcjM2NjkzMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3669312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fernandocamargoti", "html_url": "https://github.com/fernandocamargoti", "followers_url": "https://api.github.com/users/fernandocamargoti/followers", "following_url": "https://api.github.com/users/fernandocamargoti/following{/other_user}", "gists_url": "https://api.github.com/users/fernandocamargoti/gists{/gist_id}", "starred_url": "https://api.github.com/users/fernandocamargoti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fernandocamargoti/subscriptions", "organizations_url": "https://api.github.com/users/fernandocamargoti/orgs", "repos_url": "https://api.github.com/users/fernandocamargoti/repos", "events_url": "https://api.github.com/users/fernandocamargoti/events{/privacy}", "received_events_url": "https://api.github.com/users/fernandocamargoti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T18:11:29Z", "updated_at": "2020-05-01T11:28:06Z", "closed_at": "2020-05-01T11:28:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Before the pretrained model, I'm setting some layers and I'm passing that last of these layers' output as input_tensor. It works fine with every model, except the SENet ones. After further investigation, I noticed that it's not calling get_source_inputs() like the others.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/37", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/37/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/37/events", "html_url": "https://github.com/qubvel/classification_models/issues/37", "id": 502353013, "node_id": "MDU6SXNzdWU1MDIzNTMwMTM=", "number": 37, "title": "About preprocessing", "user": {"login": "JoeyTPChou", "id": 36133839, "node_id": "MDQ6VXNlcjM2MTMzODM5", "avatar_url": "https://avatars3.githubusercontent.com/u/36133839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoeyTPChou", "html_url": "https://github.com/JoeyTPChou", "followers_url": "https://api.github.com/users/JoeyTPChou/followers", "following_url": "https://api.github.com/users/JoeyTPChou/following{/other_user}", "gists_url": "https://api.github.com/users/JoeyTPChou/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoeyTPChou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoeyTPChou/subscriptions", "organizations_url": "https://api.github.com/users/JoeyTPChou/orgs", "repos_url": "https://api.github.com/users/JoeyTPChou/repos", "events_url": "https://api.github.com/users/JoeyTPChou/events{/privacy}", "received_events_url": "https://api.github.com/users/JoeyTPChou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-03T23:48:57Z", "updated_at": "2019-10-04T15:14:41Z", "closed_at": "2019-10-04T09:35:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nThis repo is fantastic!\r\n\r\nI have questions about the preprocessing part. I only saw 'return x' in the preprocess_input in resnet.py. Is that true for all the resnet pretrained models?\r\n\r\nAlso, for the input tensor, does it expect 'RGB' or 'BGR'? \r\n\r\nThanks!\r\nJoey", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/36", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/36/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/36/events", "html_url": "https://github.com/qubvel/classification_models/issues/36", "id": 501212348, "node_id": "MDU6SXNzdWU1MDEyMTIzNDg=", "number": 36, "title": "ImportError: No module named classification_models.keras", "user": {"login": "matak07", "id": 46290437, "node_id": "MDQ6VXNlcjQ2MjkwNDM3", "avatar_url": "https://avatars3.githubusercontent.com/u/46290437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matak07", "html_url": "https://github.com/matak07", "followers_url": "https://api.github.com/users/matak07/followers", "following_url": "https://api.github.com/users/matak07/following{/other_user}", "gists_url": "https://api.github.com/users/matak07/gists{/gist_id}", "starred_url": "https://api.github.com/users/matak07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matak07/subscriptions", "organizations_url": "https://api.github.com/users/matak07/orgs", "repos_url": "https://api.github.com/users/matak07/repos", "events_url": "https://api.github.com/users/matak07/events{/privacy}", "received_events_url": "https://api.github.com/users/matak07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T00:34:48Z", "updated_at": "2019-10-04T09:35:49Z", "closed_at": "2019-10-04T09:35:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to import classification_models.keras for using ResNet18, I am getting an ImportError as:\r\nfrom classification_models.tfkeras import Classifiers\r\nImportError: No module named classification_models.tfkeras\r\n\r\nI am using Ubuntu 16.04 OS with Python3.5, Keras 2.2.4, Keras-applications 1.0.8 and Tensorflow 1.13.1.\r\nPlease advise as I am unable to figure out why the error.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/35", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/35/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/35/events", "html_url": "https://github.com/qubvel/classification_models/issues/35", "id": 499193069, "node_id": "MDU6SXNzdWU0OTkxOTMwNjk=", "number": 35, "title": "should use `from tensorflow import keras as tfkeras`", "user": {"login": "GitYCC", "id": 17831637, "node_id": "MDQ6VXNlcjE3ODMxNjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/17831637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GitYCC", "html_url": "https://github.com/GitYCC", "followers_url": "https://api.github.com/users/GitYCC/followers", "following_url": "https://api.github.com/users/GitYCC/following{/other_user}", "gists_url": "https://api.github.com/users/GitYCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/GitYCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GitYCC/subscriptions", "organizations_url": "https://api.github.com/users/GitYCC/orgs", "repos_url": "https://api.github.com/users/GitYCC/repos", "events_url": "https://api.github.com/users/GitYCC/events{/privacy}", "received_events_url": "https://api.github.com/users/GitYCC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-27T01:55:52Z", "updated_at": "2019-10-04T09:36:56Z", "closed_at": "2019-10-04T09:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use `tensorflow==1.5.0`, \r\nthis line (https://github.com/qubvel/classification_models/blob/master/classification_models/tfkeras.py#L1)\r\nwould be failed.\r\n\r\nAnd I revised this line to `from tensorflow import keras as tfkeras` and then it works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/33", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/33/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/33/events", "html_url": "https://github.com/qubvel/classification_models/issues/33", "id": 487978223, "node_id": "MDU6SXNzdWU0ODc5NzgyMjM=", "number": 33, "title": "Unable to finetune: not a Checkpointable", "user": {"login": "chutongz", "id": 30098450, "node_id": "MDQ6VXNlcjMwMDk4NDUw", "avatar_url": "https://avatars2.githubusercontent.com/u/30098450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chutongz", "html_url": "https://github.com/chutongz", "followers_url": "https://api.github.com/users/chutongz/followers", "following_url": "https://api.github.com/users/chutongz/following{/other_user}", "gists_url": "https://api.github.com/users/chutongz/gists{/gist_id}", "starred_url": "https://api.github.com/users/chutongz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chutongz/subscriptions", "organizations_url": "https://api.github.com/users/chutongz/orgs", "repos_url": "https://api.github.com/users/chutongz/repos", "events_url": "https://api.github.com/users/chutongz/events{/privacy}", "received_events_url": "https://api.github.com/users/chutongz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-02T03:36:06Z", "updated_at": "2019-09-02T04:04:36Z", "closed_at": "2019-09-02T04:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the great repo!\r\n\r\nNow I am having problem when I want to finetune with ResNet50 model and weight.\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"classifier.py\", line 56, in <module>\r\n    model = keras.models.Model(inputs=[base_model.input], outputs=output)\r\n  File \"/home/zhangchutong/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py\", line 121, in __init__\r\n    super(Model, self).__init__(*args, **kwargs)\r\n  File \"/home/zhangchutong/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 80, in __init__\r\n    self._init_graph_network(*args, **kwargs)\r\n  File \"/home/zhangchutong/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/checkpointable/base.py\", line 474, in _method_wrapper\r\n    method(self, *args, **kwargs)\r\n  File \"/home/zhangchutong/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 274, in _init_graph_network\r\n    self._track_layers(layers)\r\n  File \"/home/zhangchutong/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 370, in _track_layers\r\n    layer, name='layer-%d' % layer_index, overwrite=True)\r\n  File \"/home/zhangchutong/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/checkpointable/base.py\", line 720, in _track_checkpointable\r\n    \"Checkpointable.\") % (type(checkpointable),))\r\n\r\nTypeError: Checkpointable._track_checkpointable() passed type <class 'keras.engine.input_layer.InputLayer'>, not a Checkpointable.\r\n```\r\n\r\nI searched on the internet, some people said it might be the incompatible between tensorflow and keras but I only import keras in my code. So confusing...\r\n\r\npython version: 3.6\r\ntensorflow version: 1.12.0\r\nkeras version: 2.2.4\r\n\r\nAnd here is my code:\r\n```\r\nimport keras\r\nfrom skimage.io import imread\r\nfrom skimage.transform import resize\r\nfrom classification_models.keras import Classifiers\r\nfrom util.transform import *\r\nfrom keras.layers import Flatten, Dense, Dropout, BatchNormalization\r\n\r\ncheckpoint_path = 'resnet50_classifier'\r\nResNet50, preprocess_input = Classifiers.get('resnet50')\r\n\r\n# some data preprocessing .....\r\n\r\nbase_model = ResNet50(input_shape=(224,224,3), weights='imagenet', include_top=False)\r\nx = Flatten()(base_model.output)\r\nx = Dense(4096, activation='relu')(x)\r\nx = Dropout(0.5)(x)\r\nx = BatchNormalization()(x)\r\noutput = Dense(n_classes, activation='softmax')(x)\r\nmodel = keras.models.Model(inputs=[base_model.input], outputs=output)\r\n\r\ncp_callback = tf.keras.callbacks.ModelCheckpoint(checkpoint_path,\r\n                                                 save_weights_only=True, \r\n                                                 verbose=1)\r\nmodel.compile(optimizer='SGD', loss='categorical_crossentropy', metrics=['accuracy'])\r\nmodel.fit_generator(generate_arrays_from_file(train_file, batch_size=batch_size),\r\n            samples_per_epoch=(train_num/batch_size) *batch_size, nb_epoch=10, max_q_size=100, verbose=1, nb_worker=1, callbacks=[cp_callback])\r\n```\r\nAny help is appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/29", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/29/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/29/events", "html_url": "https://github.com/qubvel/classification_models/issues/29", "id": 456704660, "node_id": "MDU6SXNzdWU0NTY3MDQ2NjA=", "number": 29, "title": "can not use the ResNet18 models", "user": {"login": "wanghuajia", "id": 35687444, "node_id": "MDQ6VXNlcjM1Njg3NDQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/35687444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanghuajia", "html_url": "https://github.com/wanghuajia", "followers_url": "https://api.github.com/users/wanghuajia/followers", "following_url": "https://api.github.com/users/wanghuajia/following{/other_user}", "gists_url": "https://api.github.com/users/wanghuajia/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanghuajia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanghuajia/subscriptions", "organizations_url": "https://api.github.com/users/wanghuajia/orgs", "repos_url": "https://api.github.com/users/wanghuajia/repos", "events_url": "https://api.github.com/users/wanghuajia/events{/privacy}", "received_events_url": "https://api.github.com/users/wanghuajia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-17T01:20:43Z", "updated_at": "2019-10-04T09:40:03Z", "closed_at": "2019-10-04T09:40:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, there is a error in model.fit_generator when I load the pretrained model to fine-tune the whole the model.\r\n\r\nInternalError: cuDNN launch failure : input shape ([32,224,224,3])\r\n\t [[Node: resnet18/bn_data/FusedBatchNorm = FusedBatchNorm[T=DT_FLOAT, data_format=\"NHWC\", epsilon=2e-05, is_training=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](_arg_resnet18_input_0_3/_1271, resnet18/bn_data/Const, bn_data/beta/read, resnet18/stage4_unit2_bn1/Const, resnet18/stage4_unit2_bn1/Const)]]\r\n\t [[Node: metrics/acc/Mean/_1359 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_6505_metrics/acc/Mean\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nCaused by op 'resnet18/bn_data/FusedBatchNorm', defined at:\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/spyder/utils/ipython/start_kernel.py\", line 269, in <module>\r\n    main()\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/spyder/utils/ipython/start_kernel.py\", line 265, in main\r\n    kernel.start()\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/ipykernel/kernelapp.py\", line 486, in start\r\n    self.io_loop.start()\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tornado/platform/asyncio.py\", line 127, in start\r\n    self.asyncio_loop.run_forever()\r\n  File \"/root/anaconda3/lib/python3.6/asyncio/base_events.py\", line 427, in run_forever\r\n    self._run_once()\r\n  File \"/root/anaconda3/lib/python3.6/asyncio/base_events.py\", line 1440, in _run_once\r\n    handle._run()\r\n  File \"/root/anaconda3/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tornado/platform/asyncio.py\", line 117, in _handle_events\r\n    handler_func(fileobj, events)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tornado/stack_context.py\", line 276, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 450, in _handle_events\r\n    self._handle_recv()\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 480, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 432, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tornado/stack_context.py\", line 276, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 233, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/ipykernel/ipkernel.py\", line 208, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/ipykernel/zmqshell.py\", line 537, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2662, in run_cell\r\n    raw_cell, store_history, silent, shell_futures)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2785, in _run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2909, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-409fd4cc68d7>\", line 1, in <module>\r\n    runfile('/cptjack/totem/huajia/0614/resnet18_me.py', wdir='/cptjack/totem/huajia/0614')\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/spyder/utils/site/sitecustomize.py\", line 705, in runfile\r\n    execfile(filename, namespace)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/spyder/utils/site/sitecustomize.py\", line 102, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n  File \"/cptjack/totem/huajia/0614/resnet18_me.py\", line 54, in <module>\r\n    top_model.add(base)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/engine/sequential.py\", line 166, in add\r\n    layer(x)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/engine/base_layer.py\", line 460, in __call__\r\n    output = self.call(inputs, **kwargs)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/engine/network.py\", line 573, in call\r\n    output_tensors, _, _ = self.run_internal_graph(inputs, masks)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/engine/network.py\", line 730, in run_internal_graph\r\n    output_tensors = to_list(layer.call(computed_tensor, **kwargs))\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/layers/normalization.py\", line 183, in call\r\n    epsilon=self.epsilon)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1841, in normalize_batch_in_training\r\n    epsilon=epsilon)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1816, in _fused_normalize_batch_in_training\r\n    data_format=tf_data_format)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_impl.py\", line 904, in fused_batch_norm\r\n    name=name)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 3416, in _fused_batch_norm\r\n    is_training=is_training, name=name)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n    op_def=op_def)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInternalError (see above for traceback): cuDNN launch failure : input shape ([32,224,224,3])\r\n\t [[Node: resnet18/bn_data/FusedBatchNorm = FusedBatchNorm[T=DT_FLOAT, data_format=\"NHWC\", epsilon=2e-05, is_training=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](_arg_resnet18_input_0_3/_1271, resnet18/bn_data/Const, bn_data/beta/read, resnet18/stage4_unit2_bn1/Const, resnet18/stage4_unit2_bn1/Const)]]\r\n\t [[Node: metrics/acc/Mean/_1359 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_6505_metrics/acc/Mean\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/28", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/28/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/28/events", "html_url": "https://github.com/qubvel/classification_models/issues/28", "id": 450727439, "node_id": "MDU6SXNzdWU0NTA3Mjc0Mzk=", "number": 28, "title": "Resnet models", "user": {"login": "tinalegre", "id": 4451569, "node_id": "MDQ6VXNlcjQ0NTE1Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4451569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinalegre", "html_url": "https://github.com/tinalegre", "followers_url": "https://api.github.com/users/tinalegre/followers", "following_url": "https://api.github.com/users/tinalegre/following{/other_user}", "gists_url": "https://api.github.com/users/tinalegre/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinalegre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinalegre/subscriptions", "organizations_url": "https://api.github.com/users/tinalegre/orgs", "repos_url": "https://api.github.com/users/tinalegre/repos", "events_url": "https://api.github.com/users/tinalegre/events{/privacy}", "received_events_url": "https://api.github.com/users/tinalegre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-31T10:23:21Z", "updated_at": "2019-10-04T09:41:53Z", "closed_at": "2019-10-04T09:41:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks that your own RestNet implementation is based on Resnet Version 2 (Preact / BN->Relu->Conv). Could you  please also consider adding ResNet Version 1 (code + pre-trained weights)? I'm unfortunately limited on GPU resources and can't therefore do a full train in imagenet, etc. I know that keras-applications has both V1/V2, but I find that your toolbox is better organized.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/27", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/27/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/27/events", "html_url": "https://github.com/qubvel/classification_models/issues/27", "id": 445258699, "node_id": "MDU6SXNzdWU0NDUyNTg2OTk=", "number": 27, "title": "Can you calculate the probability of a category?", "user": {"login": "Minxiangliu", "id": 30144428, "node_id": "MDQ6VXNlcjMwMTQ0NDI4", "avatar_url": "https://avatars1.githubusercontent.com/u/30144428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Minxiangliu", "html_url": "https://github.com/Minxiangliu", "followers_url": "https://api.github.com/users/Minxiangliu/followers", "following_url": "https://api.github.com/users/Minxiangliu/following{/other_user}", "gists_url": "https://api.github.com/users/Minxiangliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Minxiangliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Minxiangliu/subscriptions", "organizations_url": "https://api.github.com/users/Minxiangliu/orgs", "repos_url": "https://api.github.com/users/Minxiangliu/repos", "events_url": "https://api.github.com/users/Minxiangliu/events{/privacy}", "received_events_url": "https://api.github.com/users/Minxiangliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-17T04:24:16Z", "updated_at": "2019-07-31T11:26:42Z", "closed_at": "2019-07-31T11:26:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I successfully train the network following to your method.\r\nBut I want to use a calculation probability similar to `predict_proba` method.\r\nDo you have any idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/26", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/26/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/26/events", "html_url": "https://github.com/qubvel/classification_models/issues/26", "id": 443961154, "node_id": "MDU6SXNzdWU0NDM5NjExNTQ=", "number": 26, "title": "Couldn't download ResNet50 for imagenet", "user": {"login": "Xiaocong6", "id": 44869509, "node_id": "MDQ6VXNlcjQ0ODY5NTA5", "avatar_url": "https://avatars2.githubusercontent.com/u/44869509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiaocong6", "html_url": "https://github.com/Xiaocong6", "followers_url": "https://api.github.com/users/Xiaocong6/followers", "following_url": "https://api.github.com/users/Xiaocong6/following{/other_user}", "gists_url": "https://api.github.com/users/Xiaocong6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiaocong6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiaocong6/subscriptions", "organizations_url": "https://api.github.com/users/Xiaocong6/orgs", "repos_url": "https://api.github.com/users/Xiaocong6/repos", "events_url": "https://api.github.com/users/Xiaocong6/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiaocong6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-14T14:50:56Z", "updated_at": "2019-05-15T07:41:13Z", "closed_at": "2019-05-15T07:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have a trouble. I'm in great need of your assistance. \r\nI couldn't download the pretrained model for ResNet50 from \"https://github.com/qubvel/classification_models/releases/download/0.0.1/resnet50_imagenet_1000_no_top.h5\".\r\nIt will terminate when I download it to more than 30MB.\r\nIn linux, It prompts such an error \u201cConnection reset by peer\u201d\r\nIn windows, I downloaded it in the browser and it prompts \"Failed - has been banned\".\r\nI have tried many times and failed. How can I download the file-resnet50_imagenet_1000_no_top.h5?\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/25", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/25/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/25/events", "html_url": "https://github.com/qubvel/classification_models/issues/25", "id": 443405942, "node_id": "MDU6SXNzdWU0NDM0MDU5NDI=", "number": 25, "title": "Should I do any pre-processing for Resnet34? ", "user": {"login": "EvanAlbee", "id": 48401883, "node_id": "MDQ6VXNlcjQ4NDAxODgz", "avatar_url": "https://avatars0.githubusercontent.com/u/48401883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanAlbee", "html_url": "https://github.com/EvanAlbee", "followers_url": "https://api.github.com/users/EvanAlbee/followers", "following_url": "https://api.github.com/users/EvanAlbee/following{/other_user}", "gists_url": "https://api.github.com/users/EvanAlbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanAlbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanAlbee/subscriptions", "organizations_url": "https://api.github.com/users/EvanAlbee/orgs", "repos_url": "https://api.github.com/users/EvanAlbee/repos", "events_url": "https://api.github.com/users/EvanAlbee/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanAlbee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-13T13:42:39Z", "updated_at": "2019-05-23T14:01:22Z", "closed_at": "2019-05-23T13:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI have a question for you \r\n\r\nShould I  do any pre processing to my input data?\r\n\r\nIs the channel order   RGB? \r\n\r\nThanks ! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/24", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/24/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/24/events", "html_url": "https://github.com/qubvel/classification_models/issues/24", "id": 440633925, "node_id": "MDU6SXNzdWU0NDA2MzM5MjU=", "number": 24, "title": "SE-Resnet 101 pretrained models in Mxnet?", "user": {"login": "Magic-chao", "id": 38711069, "node_id": "MDQ6VXNlcjM4NzExMDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/38711069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Magic-chao", "html_url": "https://github.com/Magic-chao", "followers_url": "https://api.github.com/users/Magic-chao/followers", "following_url": "https://api.github.com/users/Magic-chao/following{/other_user}", "gists_url": "https://api.github.com/users/Magic-chao/gists{/gist_id}", "starred_url": "https://api.github.com/users/Magic-chao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Magic-chao/subscriptions", "organizations_url": "https://api.github.com/users/Magic-chao/orgs", "repos_url": "https://api.github.com/users/Magic-chao/repos", "events_url": "https://api.github.com/users/Magic-chao/events{/privacy}", "received_events_url": "https://api.github.com/users/Magic-chao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-06T10:26:19Z", "updated_at": "2019-05-23T13:59:29Z", "closed_at": "2019-05-23T13:59:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have try MMdnn to convert pretrained model in [pytorch](https://github.com/Cadene/pretrained-models.pytorch/blob/master/pretrainedmodels/models/senet.py) and [keras](https://github.com/qubvel/classification_models/blob/ca4888745266cee2da1384259e9fd4c065dcf5bd/classification_models/weights.py#L219) you provided but failed! When and Where can I find the SE-Resnet101 pretrained model in mxnet version\uff1fThank you\uff01", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/23", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/23/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/23/events", "html_url": "https://github.com/qubvel/classification_models/issues/23", "id": 440116243, "node_id": "MDU6SXNzdWU0NDAxMTYyNDM=", "number": 23, "title": "use with fit_generator in keras ?", "user": {"login": "amapic", "id": 9041636, "node_id": "MDQ6VXNlcjkwNDE2MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9041636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amapic", "html_url": "https://github.com/amapic", "followers_url": "https://api.github.com/users/amapic/followers", "following_url": "https://api.github.com/users/amapic/following{/other_user}", "gists_url": "https://api.github.com/users/amapic/gists{/gist_id}", "starred_url": "https://api.github.com/users/amapic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amapic/subscriptions", "organizations_url": "https://api.github.com/users/amapic/orgs", "repos_url": "https://api.github.com/users/amapic/repos", "events_url": "https://api.github.com/users/amapic/events{/privacy}", "received_events_url": "https://api.github.com/users/amapic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-03T16:08:37Z", "updated_at": "2019-05-04T10:54:50Z", "closed_at": "2019-05-04T10:54:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThanks for your code. I actually can't manage to make it work. Is it possible to use it with fit_generator in keras ? I got this error: \r\nvalueError: Cannot feed value of shape (32, 45) for Tensor 'relu1_target:0', which has shape '(?, ?, ?, ?)'\r\n(Batch 32, 45 classes)\r\nIt may comes from the fact that i didn't use the preprocess function. Do you know how to handle it with fit_generator ? (if it's easy for you)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/22", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/22/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/22/events", "html_url": "https://github.com/qubvel/classification_models/issues/22", "id": 437034706, "node_id": "MDU6SXNzdWU0MzcwMzQ3MDY=", "number": 22, "title": "Update model link in weights.py", "user": {"login": "praveng", "id": 7613321, "node_id": "MDQ6VXNlcjc2MTMzMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7613321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/praveng", "html_url": "https://github.com/praveng", "followers_url": "https://api.github.com/users/praveng/followers", "following_url": "https://api.github.com/users/praveng/following{/other_user}", "gists_url": "https://api.github.com/users/praveng/gists{/gist_id}", "starred_url": "https://api.github.com/users/praveng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/praveng/subscriptions", "organizations_url": "https://api.github.com/users/praveng/orgs", "repos_url": "https://api.github.com/users/praveng/repos", "events_url": "https://api.github.com/users/praveng/events{/privacy}", "received_events_url": "https://api.github.com/users/praveng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T06:48:52Z", "updated_at": "2019-04-25T12:49:11Z", "closed_at": "2019-04-25T12:47:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you mind updating the link in weights.py  from https://github.com/qubvel/classification_models/releases/download/0.0.1/resnet50_places365_11586.h5\r\n\r\nto \r\n\r\nhttps://github.com/qubvel/classification_models/releases/download/0.0.1/resnet50_imagenet_11586.h5 \r\n\r\nAlso, do you know where I could find the corresponding labels for the classes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/21", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/21/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/21/events", "html_url": "https://github.com/qubvel/classification_models/issues/21", "id": 434323231, "node_id": "MDU6SXNzdWU0MzQzMjMyMzE=", "number": 21, "title": "how to train it from scratch on imagenet ? Could you give a demo about it? ", "user": {"login": "E12dward", "id": 31305837, "node_id": "MDQ6VXNlcjMxMzA1ODM3", "avatar_url": "https://avatars2.githubusercontent.com/u/31305837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/E12dward", "html_url": "https://github.com/E12dward", "followers_url": "https://api.github.com/users/E12dward/followers", "following_url": "https://api.github.com/users/E12dward/following{/other_user}", "gists_url": "https://api.github.com/users/E12dward/gists{/gist_id}", "starred_url": "https://api.github.com/users/E12dward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/E12dward/subscriptions", "organizations_url": "https://api.github.com/users/E12dward/orgs", "repos_url": "https://api.github.com/users/E12dward/repos", "events_url": "https://api.github.com/users/E12dward/events{/privacy}", "received_events_url": "https://api.github.com/users/E12dward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-17T14:44:12Z", "updated_at": "2019-10-04T09:41:11Z", "closed_at": "2019-10-04T09:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/18", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/18/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/18/events", "html_url": "https://github.com/qubvel/classification_models/issues/18", "id": 424732773, "node_id": "MDU6SXNzdWU0MjQ3MzI3NzM=", "number": 18, "title": "pip distribution version still have  builder input_tensor error.", "user": {"login": "aliray", "id": 3334669, "node_id": "MDQ6VXNlcjMzMzQ2Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3334669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliray", "html_url": "https://github.com/aliray", "followers_url": "https://api.github.com/users/aliray/followers", "following_url": "https://api.github.com/users/aliray/following{/other_user}", "gists_url": "https://api.github.com/users/aliray/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliray/subscriptions", "organizations_url": "https://api.github.com/users/aliray/orgs", "repos_url": "https://api.github.com/users/aliray/repos", "events_url": "https://api.github.com/users/aliray/events{/privacy}", "received_events_url": "https://api.github.com/users/aliray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T05:44:39Z", "updated_at": "2019-04-18T10:19:48Z", "closed_at": "2019-04-18T10:19:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip distribution version still have senet builder input_tensor error,need to be updated", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/17", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/17/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/17/events", "html_url": "https://github.com/qubvel/classification_models/issues/17", "id": 423589582, "node_id": "MDU6SXNzdWU0MjM1ODk1ODI=", "number": 17, "title": "Typo", "user": {"login": "NotSmall", "id": 31509216, "node_id": "MDQ6VXNlcjMxNTA5MjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/31509216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotSmall", "html_url": "https://github.com/NotSmall", "followers_url": "https://api.github.com/users/NotSmall/followers", "following_url": "https://api.github.com/users/NotSmall/following{/other_user}", "gists_url": "https://api.github.com/users/NotSmall/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotSmall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotSmall/subscriptions", "organizations_url": "https://api.github.com/users/NotSmall/orgs", "repos_url": "https://api.github.com/users/NotSmall/repos", "events_url": "https://api.github.com/users/NotSmall/events{/privacy}", "received_events_url": "https://api.github.com/users/NotSmall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T06:42:25Z", "updated_at": "2019-03-22T19:22:50Z", "closed_at": "2019-03-22T19:22:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example in readme\r\n\r\n'' from skimage.transfrom import resize ''\r\ntransfrom should be transform", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/16", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/16/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/16/events", "html_url": "https://github.com/qubvel/classification_models/issues/16", "id": 422309406, "node_id": "MDU6SXNzdWU0MjIzMDk0MDY=", "number": 16, "title": "AttributeError: 'Activation' object has no attribute 'outbound_nodes'", "user": {"login": "aaryapatel007", "id": 30631425, "node_id": "MDQ6VXNlcjMwNjMxNDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/30631425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaryapatel007", "html_url": "https://github.com/aaryapatel007", "followers_url": "https://api.github.com/users/aaryapatel007/followers", "following_url": "https://api.github.com/users/aaryapatel007/following{/other_user}", "gists_url": "https://api.github.com/users/aaryapatel007/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaryapatel007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaryapatel007/subscriptions", "organizations_url": "https://api.github.com/users/aaryapatel007/orgs", "repos_url": "https://api.github.com/users/aaryapatel007/repos", "events_url": "https://api.github.com/users/aaryapatel007/events{/privacy}", "received_events_url": "https://api.github.com/users/aaryapatel007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-18T16:18:12Z", "updated_at": "2019-08-06T21:53:05Z", "closed_at": "2019-05-23T13:59:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "TF version: 1.13.1\r\nKeras version== 2.2.4\r\nimage-classifiers==0.2.0\r\n```\r\nfrom tensorflow.python.keras.layers import Dense, Dropout, Flatten, Activation, Input, BatchNormalization, Add, GlobalAveragePooling2D,AveragePooling2D,GlobalMaxPooling2D,concatenate\r\nfrom tensorflow.python.keras.models import Model,load_model\r\ndef resnext_model(input_shape,batch_size = 512):\r\n  base_model = SEResNeXt50(input_shape=input_shape,weights='imagenet',include_top = False)\r\n  x = base_model.output\r\n  out1 = GlobalMaxPooling2D()(x)\r\n  out2 = GlobalAveragePooling2D()(x)\r\n  out3 = Flatten()(x)\r\n  out = concatenate([out1,out2,out3])\r\n  out = BatchNormalization(epsilon = 1e-5)(out)\r\n  out = Dropout(0.4)(out)\r\n  fc = Dense(512,activation = 'relu')(out)\r\n  fc = BatchNormalization(epsilon = 1e-5)(fc)\r\n  fc = Dropout(0.3)(fc)\r\n  fc = Dense(256,activation = 'relu')(fc)\r\n  fc = BatchNormalization(epsilon = 1e-5)(fc)\r\n  fc = Dropout(0.3)(fc)\r\n  X = Dense(1, activation='sigmoid', kernel_initializer='glorot_uniform', bias_initializer='zeros')(fc)\r\n  model =  Model(inputs=base_model.input, outputs=X)\r\n  #model.compile(optimizer=tf.keras.optimizers.Adam(lr = 0.0001), loss=tf.keras.losses.binary_crossentropy, metrics=['acc'])\r\n  return model\r\n```\r\nWorks fine when importing layers directly from keras.\r\nBut I want to train my model on Cloud TPU, so importing layers and model from tensorflow.\r\nGetting the following error.\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-6-8f1104681c92> in <module>()\r\n----> 1 res_model = resnext_model((96,96,3))\r\n      2 print(res_model.summary())\r\n\r\n<ipython-input-5-230de8cde50c> in resnext_model(input_shape, batch_size)\r\n      3   x = base_model.output\r\n      4 \r\n----> 5   out1 = GlobalMaxPooling2D()(x)\r\n      6   out2 = GlobalAveragePooling2D()(x)\r\n      7   out3 = Flatten()(x)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)\r\n    582           if base_layer_utils.have_all_keras_metadata(inputs):\r\n    583             inputs, outputs = self._set_connectivity_metadata_(\r\n--> 584                 inputs, outputs, args, kwargs)\r\n    585           if hasattr(self, '_set_inputs') and not self.inputs:\r\n    586             # Subclassed network: explicitly set metadata normally set by\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in _set_connectivity_metadata_(self, inputs, outputs, args, kwargs)\r\n   1414     kwargs.pop('mask', None)  # `mask` should not be serialized.\r\n   1415     self._add_inbound_node(\r\n-> 1416         input_tensors=inputs, output_tensors=outputs, arguments=kwargs)\r\n   1417     return inputs, outputs\r\n   1418 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in _add_inbound_node(self, input_tensors, output_tensors, arguments)\r\n   1522         input_tensors=input_tensors,\r\n   1523         output_tensors=output_tensors,\r\n-> 1524         arguments=arguments)\r\n   1525 \r\n   1526     # Update tensor history metadata.\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in __init__(self, outbound_layer, inbound_layers, node_indices, tensor_indices, input_tensors, output_tensors, arguments)\r\n   1740         # For compatibility with external Keras, we use the deprecated\r\n   1741         # accessor here.\r\n-> 1742         layer.outbound_nodes.append(self)\r\n   1743     # For compatibility with external Keras, we use the deprecated\r\n   1744     # accessor here.\r\n\r\nAttributeError: 'Activation' object has no attribute 'outbound_nodes'\r\n```\r\nGot the same error with SEResNet, ResNeXt as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/14", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/14/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/14/events", "html_url": "https://github.com/qubvel/classification_models/issues/14", "id": 418015228, "node_id": "MDU6SXNzdWU0MTgwMTUyMjg=", "number": 14, "title": "Link to resnet50_places365_11586.h5 is down", "user": {"login": "praveng", "id": 7613321, "node_id": "MDQ6VXNlcjc2MTMzMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7613321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/praveng", "html_url": "https://github.com/praveng", "followers_url": "https://api.github.com/users/praveng/followers", "following_url": "https://api.github.com/users/praveng/following{/other_user}", "gists_url": "https://api.github.com/users/praveng/gists{/gist_id}", "starred_url": "https://api.github.com/users/praveng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/praveng/subscriptions", "organizations_url": "https://api.github.com/users/praveng/orgs", "repos_url": "https://api.github.com/users/praveng/repos", "events_url": "https://api.github.com/users/praveng/events{/privacy}", "received_events_url": "https://api.github.com/users/praveng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-06T21:23:04Z", "updated_at": "2019-03-20T08:54:36Z", "closed_at": "2019-03-20T08:54:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The link to this file seems to be down at the moment:\r\n\r\nhttps://github.com/qubvel/classification_models/releases/download/0.0.1/resnet50_places365_11586.h5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/13", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/13/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/13/events", "html_url": "https://github.com/qubvel/classification_models/issues/13", "id": 408856406, "node_id": "MDU6SXNzdWU0MDg4NTY0MDY=", "number": 13, "title": "Edit model fine tuning example", "user": {"login": "AlfTetzlaff", "id": 31385097, "node_id": "MDQ6VXNlcjMxMzg1MDk3", "avatar_url": "https://avatars3.githubusercontent.com/u/31385097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlfTetzlaff", "html_url": "https://github.com/AlfTetzlaff", "followers_url": "https://api.github.com/users/AlfTetzlaff/followers", "following_url": "https://api.github.com/users/AlfTetzlaff/following{/other_user}", "gists_url": "https://api.github.com/users/AlfTetzlaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlfTetzlaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlfTetzlaff/subscriptions", "organizations_url": "https://api.github.com/users/AlfTetzlaff/orgs", "repos_url": "https://api.github.com/users/AlfTetzlaff/repos", "events_url": "https://api.github.com/users/AlfTetzlaff/events{/privacy}", "received_events_url": "https://api.github.com/users/AlfTetzlaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-11T16:10:13Z", "updated_at": "2019-02-11T17:10:12Z", "closed_at": "2019-02-11T16:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I suggest that you change the model fine tuning example in two points:\r\n1) Change AveragePooling2D to GlobalAveragePooling2D\r\n2) Add a softmax layer. I was so retarded to try to optimize a model without for two hours.\r\nThanks :D", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/11", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/11/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/11/events", "html_url": "https://github.com/qubvel/classification_models/issues/11", "id": 402278393, "node_id": "MDU6SXNzdWU0MDIyNzgzOTM=", "number": 11, "title": "how can i change input_shape to train a new network?", "user": {"login": "Be997398715", "id": 40139193, "node_id": "MDQ6VXNlcjQwMTM5MTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/40139193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Be997398715", "html_url": "https://github.com/Be997398715", "followers_url": "https://api.github.com/users/Be997398715/followers", "following_url": "https://api.github.com/users/Be997398715/following{/other_user}", "gists_url": "https://api.github.com/users/Be997398715/gists{/gist_id}", "starred_url": "https://api.github.com/users/Be997398715/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Be997398715/subscriptions", "organizations_url": "https://api.github.com/users/Be997398715/orgs", "repos_url": "https://api.github.com/users/Be997398715/repos", "events_url": "https://api.github.com/users/Be997398715/events{/privacy}", "received_events_url": "https://api.github.com/users/Be997398715/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-23T14:57:04Z", "updated_at": "2019-01-23T15:00:35Z", "closed_at": "2019-01-23T15:00:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use SeNet154 to transfer a new network, but  i got error like 'Negative dimension size caused by subtracting 7 from 4 for 'average_pooling2'. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/6", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/6/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/6/events", "html_url": "https://github.com/qubvel/classification_models/issues/6", "id": 394444795, "node_id": "MDU6SXNzdWUzOTQ0NDQ3OTU=", "number": 6, "title": "input images for ResNet", "user": {"login": "RicSpd", "id": 46091334, "node_id": "MDQ6VXNlcjQ2MDkxMzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/46091334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RicSpd", "html_url": "https://github.com/RicSpd", "followers_url": "https://api.github.com/users/RicSpd/followers", "following_url": "https://api.github.com/users/RicSpd/following{/other_user}", "gists_url": "https://api.github.com/users/RicSpd/gists{/gist_id}", "starred_url": "https://api.github.com/users/RicSpd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RicSpd/subscriptions", "organizations_url": "https://api.github.com/users/RicSpd/orgs", "repos_url": "https://api.github.com/users/RicSpd/repos", "events_url": "https://api.github.com/users/RicSpd/events{/privacy}", "received_events_url": "https://api.github.com/users/RicSpd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-27T17:04:23Z", "updated_at": "2019-05-13T16:16:13Z", "closed_at": "2018-12-27T21:18:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi qubvel, thanks for your great repo.\r\n\r\nI would like to ask a question, just to clarify the ideas I have in mind. If I understood correctly your code and the previous issues, the ResNet models you define in _models.py_ and their corresponding weights are trained using data in [0, 255] range and coded as BGR, correct?\r\n\r\nTherefore, if I import an image in RGB using `img = imread(...)`, I don't need to rescale it into [0,1] range but I need to \"transpose\" it using your function `img = preprocess_input(img, BGRTranspose = True)` and then use the ResNet model, am I right?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/5", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/5/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/5/events", "html_url": "https://github.com/qubvel/classification_models/issues/5", "id": 378458860, "node_id": "MDU6SXNzdWUzNzg0NTg4NjA=", "number": 5, "title": "4 channel", "user": {"login": "MinuteswithMetrics", "id": 25371067, "node_id": "MDQ6VXNlcjI1MzcxMDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/25371067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MinuteswithMetrics", "html_url": "https://github.com/MinuteswithMetrics", "followers_url": "https://api.github.com/users/MinuteswithMetrics/followers", "following_url": "https://api.github.com/users/MinuteswithMetrics/following{/other_user}", "gists_url": "https://api.github.com/users/MinuteswithMetrics/gists{/gist_id}", "starred_url": "https://api.github.com/users/MinuteswithMetrics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MinuteswithMetrics/subscriptions", "organizations_url": "https://api.github.com/users/MinuteswithMetrics/orgs", "repos_url": "https://api.github.com/users/MinuteswithMetrics/repos", "events_url": "https://api.github.com/users/MinuteswithMetrics/events{/privacy}", "received_events_url": "https://api.github.com/users/MinuteswithMetrics/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-07T20:36:26Z", "updated_at": "2018-11-26T08:10:31Z", "closed_at": "2018-11-26T08:10:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks again for the wonderful library! This is very helpful and I  learned a lot by studying your code. Is it possible to edit the code from (height,width, 3) to (height,width, 4)? If so were can I update the code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/4", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/4/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/4/events", "html_url": "https://github.com/qubvel/classification_models/issues/4", "id": 375362079, "node_id": "MDU6SXNzdWUzNzUzNjIwNzk=", "number": 4, "title": "Is it really BGR?", "user": {"login": "see--", "id": 11165293, "node_id": "MDQ6VXNlcjExMTY1Mjkz", "avatar_url": "https://avatars2.githubusercontent.com/u/11165293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/see--", "html_url": "https://github.com/see--", "followers_url": "https://api.github.com/users/see--/followers", "following_url": "https://api.github.com/users/see--/following{/other_user}", "gists_url": "https://api.github.com/users/see--/gists{/gist_id}", "starred_url": "https://api.github.com/users/see--/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/see--/subscriptions", "organizations_url": "https://api.github.com/users/see--/orgs", "repos_url": "https://api.github.com/users/see--/repos", "events_url": "https://api.github.com/users/see--/events{/privacy}", "received_events_url": "https://api.github.com/users/see--/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T07:56:35Z", "updated_at": "2018-10-30T09:45:52Z", "closed_at": "2018-10-30T09:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello qubvel,\r\nthanks for the great repo. Are you sure about the preprocessing for resnets (i.e. using BGR)? I get better results when I use RGB:\r\n```\r\nimport numpy as np\r\nfrom skimage.io import imread\r\nfrom keras.applications.imagenet_utils import decode_predictions\r\n\r\nfrom classification_models.classification_models import ResNet18\r\nfrom classification_models.classification_models.resnet import preprocess_input\r\n\r\n# read and prepare image\r\nimg_rgb = imread('imgs/tests/Lion.jpg')\r\n\r\nfor order in ['rgb', 'bgr']:\r\n  print(\"Order: \", order.upper())\r\n  x = preprocess_input(img_rgb, size=(224, 224), BGRTranspose=order == 'bgr')\r\n  x = np.expand_dims(x, 0)\r\n\r\n  # load model\r\n  model = ResNet18(input_shape=(224, 224, 3), weights='imagenet', classes=1000)\r\n\r\n  # processing image\r\n  y = model.predict(x)\r\n\r\n  # result\r\n  print(decode_predictions(y))\r\n```\r\nOutput:\r\n```\r\nOrder:  RGB\r\n[[('n02129165', 'lion', 0.9629949), ('n02115913', 'dhole', 0.01578529), ('n02112137', 'chow', 0.0087916795), ('n02114855', 'coyote', 0.0038442488), ('n02114712', 'red_wolf', 0.0014433597)]]\r\nOrder:  BGR\r\n[[('n02129165', 'lion', 0.3915644), ('n02112137', 'chow', 0.10712016), ('n02114855', 'coyote', 0.09258213), ('n02114367', 'timber_wolf', 0.08412136), ('n02091467', 'Norwegian_elkhound', 0.027228368)]]\r\n```\r\n\r\n![lion](https://user-images.githubusercontent.com/11165293/47703504-c8c1ac00-dc20-11e8-8f1d-3932ecf5ca70.jpg)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/3", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/3/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/3/events", "html_url": "https://github.com/qubvel/classification_models/issues/3", "id": 371765489, "node_id": "MDU6SXNzdWUzNzE3NjU0ODk=", "number": 3, "title": "resnext.preprocessing.py", "user": {"login": "stillwaterman", "id": 20119289, "node_id": "MDQ6VXNlcjIwMTE5Mjg5", "avatar_url": "https://avatars0.githubusercontent.com/u/20119289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stillwaterman", "html_url": "https://github.com/stillwaterman", "followers_url": "https://api.github.com/users/stillwaterman/followers", "following_url": "https://api.github.com/users/stillwaterman/following{/other_user}", "gists_url": "https://api.github.com/users/stillwaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/stillwaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stillwaterman/subscriptions", "organizations_url": "https://api.github.com/users/stillwaterman/orgs", "repos_url": "https://api.github.com/users/stillwaterman/repos", "events_url": "https://api.github.com/users/stillwaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/stillwaterman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-19T00:43:51Z", "updated_at": "2018-10-19T07:51:41Z", "closed_at": "2018-10-19T07:51:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, is pre-trained weights of resnext trained by RGB images? or BGR images? Because I didn't see the option 'BGRTranspose' in resnext.preprocessing.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/qubvel/classification_models/issues/1", "repository_url": "https://api.github.com/repos/qubvel/classification_models", "labels_url": "https://api.github.com/repos/qubvel/classification_models/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/qubvel/classification_models/issues/1/comments", "events_url": "https://api.github.com/repos/qubvel/classification_models/issues/1/events", "html_url": "https://github.com/qubvel/classification_models/issues/1", "id": 358959602, "node_id": "MDU6SXNzdWUzNTg5NTk2MDI=", "number": 1, "title": "resnet.preprocessing.py", "user": {"login": "GodsDusk", "id": 13726533, "node_id": "MDQ6VXNlcjEzNzI2NTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/13726533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GodsDusk", "html_url": "https://github.com/GodsDusk", "followers_url": "https://api.github.com/users/GodsDusk/followers", "following_url": "https://api.github.com/users/GodsDusk/following{/other_user}", "gists_url": "https://api.github.com/users/GodsDusk/gists{/gist_id}", "starred_url": "https://api.github.com/users/GodsDusk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GodsDusk/subscriptions", "organizations_url": "https://api.github.com/users/GodsDusk/orgs", "repos_url": "https://api.github.com/users/GodsDusk/repos", "events_url": "https://api.github.com/users/GodsDusk/events{/privacy}", "received_events_url": "https://api.github.com/users/GodsDusk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-11T09:22:11Z", "updated_at": "2018-09-11T18:45:49Z", "closed_at": "2018-09-11T18:45:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi\r\nI saw the code of preprocessing.py that\r\n`x = resize(x, size) * 255`\r\nwhen read a image use skiamge, the range of pixel is in [0, 255], so you multiply 255 means pretrained model are trained in [0, 65025] ? ", "performed_via_github_app": null, "score": 1.0}]}