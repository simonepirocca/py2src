{"total_count": 39, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/druid-io/pydruid/issues/228", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/228/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/228/events", "html_url": "https://github.com/druid-io/pydruid/issues/228", "id": 640659964, "node_id": "MDU6SXNzdWU2NDA2NTk5NjQ=", "number": 228, "title": "AttributeError: module 'urllib' has no attribute 'error'", "user": {"login": "yingbo", "id": 109221, "node_id": "MDQ6VXNlcjEwOTIyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/109221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yingbo", "html_url": "https://github.com/yingbo", "followers_url": "https://api.github.com/users/yingbo/followers", "following_url": "https://api.github.com/users/yingbo/following{/other_user}", "gists_url": "https://api.github.com/users/yingbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/yingbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yingbo/subscriptions", "organizations_url": "https://api.github.com/users/yingbo/orgs", "repos_url": "https://api.github.com/users/yingbo/repos", "events_url": "https://api.github.com/users/yingbo/events{/privacy}", "received_events_url": "https://api.github.com/users/yingbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-17T18:40:32Z", "updated_at": "2020-08-12T18:54:53Z", "closed_at": "2020-08-12T18:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error:\r\n\r\nAttributeError: module 'urllib' has no attribute 'error'\r\n\r\nI think in the client.py we should `import urllib.request` other than `import urllib`, in python 3.7 and python 3.8 at least, but I'm not sure how to fix it to make it works on all python versions. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/223", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/223/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/223/events", "html_url": "https://github.com/druid-io/pydruid/issues/223", "id": 637475793, "node_id": "MDU6SXNzdWU2Mzc0NzU3OTM=", "number": 223, "title": "module 'pydruid.client' has no attribute 'time_boundary' and 'segment_metadata'", "user": {"login": "Keyrainn", "id": 18519104, "node_id": "MDQ6VXNlcjE4NTE5MTA0", "avatar_url": "https://avatars2.githubusercontent.com/u/18519104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keyrainn", "html_url": "https://github.com/Keyrainn", "followers_url": "https://api.github.com/users/Keyrainn/followers", "following_url": "https://api.github.com/users/Keyrainn/following{/other_user}", "gists_url": "https://api.github.com/users/Keyrainn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keyrainn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keyrainn/subscriptions", "organizations_url": "https://api.github.com/users/Keyrainn/orgs", "repos_url": "https://api.github.com/users/Keyrainn/repos", "events_url": "https://api.github.com/users/Keyrainn/events{/privacy}", "received_events_url": "https://api.github.com/users/Keyrainn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T04:31:26Z", "updated_at": "2020-06-12T06:49:10Z", "closed_at": "2020-06-12T06:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "pydruid vesion : 0.6.0\r\nI'm following the example from [pydruid documentation](https://pythonhosted.org/pydruid/#module-pydruid.client) example. Seems like the `segment_metadata` and `time_boundary` module returns `AttributeError: module 'pydruid.client' has no attribute` error.\r\n\r\nFYI these are the imports that i use :\r\n\r\n`from pydruid.utils.postaggregator import *\r\nfrom pydruid.utils.aggregators import *\r\nfrom pydruid.query import QueryBuilder\r\nfrom pydruid.utils.filters import *\r\nfrom pydruid.client import *\r\nfrom pylab import plt\r\nfrom pydruid import *`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/222", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/222/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/222/events", "html_url": "https://github.com/druid-io/pydruid/issues/222", "id": 637238663, "node_id": "MDU6SXNzdWU2MzcyMzg2NjM=", "number": 222, "title": "Cannot import pydruid after pip installation", "user": {"login": "timarmate-ga", "id": 59570292, "node_id": "MDQ6VXNlcjU5NTcwMjky", "avatar_url": "https://avatars1.githubusercontent.com/u/59570292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timarmate-ga", "html_url": "https://github.com/timarmate-ga", "followers_url": "https://api.github.com/users/timarmate-ga/followers", "following_url": "https://api.github.com/users/timarmate-ga/following{/other_user}", "gists_url": "https://api.github.com/users/timarmate-ga/gists{/gist_id}", "starred_url": "https://api.github.com/users/timarmate-ga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timarmate-ga/subscriptions", "organizations_url": "https://api.github.com/users/timarmate-ga/orgs", "repos_url": "https://api.github.com/users/timarmate-ga/repos", "events_url": "https://api.github.com/users/timarmate-ga/events{/privacy}", "received_events_url": "https://api.github.com/users/timarmate-ga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T18:38:19Z", "updated_at": "2020-06-12T08:56:13Z", "closed_at": "2020-06-12T06:48:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot import pydruid after a seemingly successful pip installation.\r\n\r\nYou can reproduce it simply using docker:\r\n\r\ncontents of Dockerfile:\r\n```\r\nFROM python:3.6.6\r\nRUN pip install pydruid\r\n```\r\n\r\nbuild the container:\r\n```\r\n$ docker build -t pydruid-install-error-env .\r\n```\r\n\r\nThe output on my machine:\r\n```\r\nStep 1/2 : FROM python:3.6.6\r\n ---> 8256ec07b2ad\r\nStep 2/2 : RUN pip install pydruid\r\n ---> Running in cd3b88c4d7ac\r\nCollecting pydruid\r\n  Downloading https://files.pythonhosted.org/packages/81/a9/dc295a5b492fcf5df957dc74bd963214052c3322a75f71f53a4ab3145713/pydruid-0.6.0.tar.gz\r\nCollecting requests (from pydruid)\r\n  Downloading https://files.pythonhosted.org/packages/1a/70/1935c770cb3be6e3a8b78ced23d7e0f3b187f5cbfab4749523ed65d7c9b1/requests-2.23.0-py2.py3-none-any.whl (58kB)\r\nCollecting certifi>=2017.4.17 (from requests->pydruid)\r\n  Downloading https://files.pythonhosted.org/packages/98/99/def511020aa8f663d4a2cfaa38467539e864799289ff354569e339e375b1/certifi-2020.4.5.2-py2.py3-none-any.whl (157kB)\r\nCollecting idna<3,>=2.5 (from requests->pydruid)\r\n  Downloading https://files.pythonhosted.org/packages/89/e3/afebe61c546d18fb1709a61bee788254b40e736cff7271c7de5de2dc4128/idna-2.9-py2.py3-none-any.whl (58kB)\r\nCollecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests->pydruid)\r\n  Downloading https://files.pythonhosted.org/packages/e1/e5/df302e8017440f111c11cc41a6b432838672f5a70aa29227bf58149dc72f/urllib3-1.25.9-py2.py3-none-any.whl (126kB)\r\nCollecting chardet<4,>=3.0.2 (from requests->pydruid)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nBuilding wheels for collected packages: pydruid\r\n  Running setup.py bdist_wheel for pydruid: started\r\n  Running setup.py bdist_wheel for pydruid: finished with status 'done'\r\n  Stored in directory: /root/.cache/pip/wheels/d8/dd/c0/cc2b341c34151f692318d4401427d0f94fa5198794b9164af8\r\nSuccessfully built pydruid\r\nInstalling collected packages: certifi, idna, urllib3, chardet, requests, pydruid\r\nSuccessfully installed certifi-2020.4.5.2 chardet-3.0.4 idna-2.9 pydruid-0.6.0 requests-2.23.0 urllib3-1.25.9\r\nYou are using pip version 18.1, however version 20.2b1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\nRemoving intermediate container cd3b88c4d7ac\r\n ---> d21a64f46594\r\nSuccessfully built d21a64f46594\r\nSuccessfully tagged pydruid-install-error-env:latest\r\n```\r\n\r\n... and you can run the container and try to import pydruid:\r\n\r\n```\r\n$ docker run -it --rm --name pydruid-install-error-container pydruid-install-error-env python -c 'import pydruid'\r\n```\r\n\r\nOutputting:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'pydruid'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/220", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/220/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/220/events", "html_url": "https://github.com/druid-io/pydruid/issues/220", "id": 634728980, "node_id": "MDU6SXNzdWU2MzQ3Mjg5ODA=", "number": 220, "title": "[0.6.0] Module not found error", "user": {"login": "Diliz", "id": 5158949, "node_id": "MDQ6VXNlcjUxNTg5NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5158949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diliz", "html_url": "https://github.com/Diliz", "followers_url": "https://api.github.com/users/Diliz/followers", "following_url": "https://api.github.com/users/Diliz/following{/other_user}", "gists_url": "https://api.github.com/users/Diliz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diliz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diliz/subscriptions", "organizations_url": "https://api.github.com/users/Diliz/orgs", "repos_url": "https://api.github.com/users/Diliz/repos", "events_url": "https://api.github.com/users/Diliz/events{/privacy}", "received_events_url": "https://api.github.com/users/Diliz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-08T15:41:24Z", "updated_at": "2020-06-12T07:08:36Z", "closed_at": "2020-06-11T15:57:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nSaw there was a lot of modifications, even if small ones, in the last version bump, it seems the module can't be imported with a simple `import pydruid`, nor a `from pydruid.client import *`.\r\n\r\nI got this error when trying to do so: `ModuleNotFoundError: No module named 'pydruid'`\r\n\r\nIt seems related to this commit: https://github.com/druid-io/pydruid/commit/f09b7afe61679536bb16b347a58ea8b4e510c1d6#diff-2eeaed663bd0d25b7e608891384b7298R26\r\n\r\nIn a new environment, just do:\r\n```\r\npip install pydruid\r\necho \"import pydruid\" > script.py\r\npython script.py\r\n```\r\n\r\nUsed python 3.6.8 to have this error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/214", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/214/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/214/events", "html_url": "https://github.com/druid-io/pydruid/issues/214", "id": 625561069, "node_id": "MDU6SXNzdWU2MjU1NjEwNjk=", "number": 214, "title": "Upload version 0.5.10 to PyPI", "user": {"login": "srecheandia", "id": 13778749, "node_id": "MDQ6VXNlcjEzNzc4NzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/13778749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srecheandia", "html_url": "https://github.com/srecheandia", "followers_url": "https://api.github.com/users/srecheandia/followers", "following_url": "https://api.github.com/users/srecheandia/following{/other_user}", "gists_url": "https://api.github.com/users/srecheandia/gists{/gist_id}", "starred_url": "https://api.github.com/users/srecheandia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srecheandia/subscriptions", "organizations_url": "https://api.github.com/users/srecheandia/orgs", "repos_url": "https://api.github.com/users/srecheandia/repos", "events_url": "https://api.github.com/users/srecheandia/events{/privacy}", "received_events_url": "https://api.github.com/users/srecheandia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-27T10:08:48Z", "updated_at": "2020-06-12T06:49:24Z", "closed_at": "2020-06-12T06:49:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to upload latest version [0.5.10](https://github.com/druid-io/pydruid/releases/tag/0.5.10) from 20th April to PyPI? \r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/211", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/211/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/211/events", "html_url": "https://github.com/druid-io/pydruid/issues/211", "id": 606060606, "node_id": "MDU6SXNzdWU2MDYwNjA2MDY=", "number": 211, "title": "Apply black", "user": {"login": "SongYunSeop", "id": 11675853, "node_id": "MDQ6VXNlcjExNjc1ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/11675853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SongYunSeop", "html_url": "https://github.com/SongYunSeop", "followers_url": "https://api.github.com/users/SongYunSeop/followers", "following_url": "https://api.github.com/users/SongYunSeop/following{/other_user}", "gists_url": "https://api.github.com/users/SongYunSeop/gists{/gist_id}", "starred_url": "https://api.github.com/users/SongYunSeop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SongYunSeop/subscriptions", "organizations_url": "https://api.github.com/users/SongYunSeop/orgs", "repos_url": "https://api.github.com/users/SongYunSeop/repos", "events_url": "https://api.github.com/users/SongYunSeop/events{/privacy}", "received_events_url": "https://api.github.com/users/SongYunSeop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-24T05:53:42Z", "updated_at": "2020-05-25T23:01:25Z", "closed_at": "2020-05-25T23:01:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Issued by https://github.com/druid-io/pydruid/pull/209#discussion_r412621355\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/205", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/205/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/205/events", "html_url": "https://github.com/druid-io/pydruid/issues/205", "id": 599388049, "node_id": "MDU6SXNzdWU1OTkzODgwNDk=", "number": 205, "title": "Missing params Key in SCAN Query", "user": {"login": "JustFeng", "id": 10377945, "node_id": "MDQ6VXNlcjEwMzc3OTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/10377945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustFeng", "html_url": "https://github.com/JustFeng", "followers_url": "https://api.github.com/users/JustFeng/followers", "following_url": "https://api.github.com/users/JustFeng/following{/other_user}", "gists_url": "https://api.github.com/users/JustFeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustFeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustFeng/subscriptions", "organizations_url": "https://api.github.com/users/JustFeng/orgs", "repos_url": "https://api.github.com/users/JustFeng/repos", "events_url": "https://api.github.com/users/JustFeng/events{/privacy}", "received_events_url": "https://api.github.com/users/JustFeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-14T08:24:25Z", "updated_at": "2020-05-15T18:54:23Z", "closed_at": "2020-05-15T18:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "druid/processing/src/main/java/org/apache/druid/query/scan/ScanQuery.java \r\nscan query has a param named 'order' is invalid in pydruid scan()method\r\nDruid is support this query param in non-legacy scan query mode \r\n\r\nplease add 'order' in  pydruid query Query scan valid_parts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/204", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/204/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/204/events", "html_url": "https://github.com/druid-io/pydruid/issues/204", "id": 595672692, "node_id": "MDU6SXNzdWU1OTU2NzI2OTI=", "number": 204, "title": "Add Scan queries to query module as Select has been removed in Druid 0.17.0", "user": {"login": "denisesenguel", "id": 17010657, "node_id": "MDQ6VXNlcjE3MDEwNjU3", "avatar_url": "https://avatars2.githubusercontent.com/u/17010657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisesenguel", "html_url": "https://github.com/denisesenguel", "followers_url": "https://api.github.com/users/denisesenguel/followers", "following_url": "https://api.github.com/users/denisesenguel/following{/other_user}", "gists_url": "https://api.github.com/users/denisesenguel/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisesenguel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisesenguel/subscriptions", "organizations_url": "https://api.github.com/users/denisesenguel/orgs", "repos_url": "https://api.github.com/users/denisesenguel/repos", "events_url": "https://api.github.com/users/denisesenguel/events{/privacy}", "received_events_url": "https://api.github.com/users/denisesenguel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T08:01:21Z", "updated_at": "2020-04-07T15:08:50Z", "closed_at": "2020-04-07T15:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "As Select queries have finally been replaced entirely by Scan queries in the new Druid version 0.17.0 https://github.com/apache/druid/releases/tag/druid-0.17.0 \r\n\r\nthere currently is no way in PyDruid to simply query rows without pre-aggregation, so Scan queries should be added and a deprecation warning returned when running a Select query!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/202", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/202/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/202/events", "html_url": "https://github.com/druid-io/pydruid/issues/202", "id": 594888107, "node_id": "MDU6SXNzdWU1OTQ4ODgxMDc=", "number": 202, "title": "Add Having Type dimSelector, filter", "user": {"login": "SongYunSeop", "id": 11675853, "node_id": "MDQ6VXNlcjExNjc1ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/11675853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SongYunSeop", "html_url": "https://github.com/SongYunSeop", "followers_url": "https://api.github.com/users/SongYunSeop/followers", "following_url": "https://api.github.com/users/SongYunSeop/following{/other_user}", "gists_url": "https://api.github.com/users/SongYunSeop/gists{/gist_id}", "starred_url": "https://api.github.com/users/SongYunSeop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SongYunSeop/subscriptions", "organizations_url": "https://api.github.com/users/SongYunSeop/orgs", "repos_url": "https://api.github.com/users/SongYunSeop/repos", "events_url": "https://api.github.com/users/SongYunSeop/events{/privacy}", "received_events_url": "https://api.github.com/users/SongYunSeop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T07:56:53Z", "updated_at": "2020-04-21T01:47:14Z", "closed_at": "2020-04-21T01:47:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to add to having type `dimSelector` and `filter`.\r\n\r\n- dimSelector\r\n\r\n```\r\n{\r\n    \"queryType\": \"groupBy\",\r\n    \"dataSource\": \"sample_datasource\",\r\n    ...\r\n    \"having\":\r\n       {\r\n            \"type\": \"dimSelector\",\r\n            \"dimension\": \"<dimension>\",\r\n            \"value\": <dimension_value>\r\n        }\r\n}\r\n```\r\n\r\n- filter \r\n\r\n```\r\n{\r\n    \"queryType\": \"groupBy\",\r\n    \"dataSource\": \"sample_datasource\",\r\n    ...\r\n    \"having\":\r\n        {\r\n            \"type\" : \"filter\",\r\n            \"filter\" : <any Druid query filter>\r\n        }\r\n}\r\n```\r\n\r\nAnd I could create pull request about that.\r\n\r\nRef\r\n- https://druid.apache.org/docs/latest/querying/having.html#dimension-selector-filter\r\n- https://druid.apache.org/docs/latest/querying/having.html#query-filters", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/198", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/198/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/198/events", "html_url": "https://github.com/druid-io/pydruid/issues/198", "id": 581107576, "node_id": "MDU6SXNzdWU1ODExMDc1NzY=", "number": 198, "title": "Pydruid 0.5.9 installation fails on Python 3.7 (with pytest ??)", "user": {"login": "potiuk", "id": 595491, "node_id": "MDQ6VXNlcjU5NTQ5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/595491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/potiuk", "html_url": "https://github.com/potiuk", "followers_url": "https://api.github.com/users/potiuk/followers", "following_url": "https://api.github.com/users/potiuk/following{/other_user}", "gists_url": "https://api.github.com/users/potiuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/potiuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/potiuk/subscriptions", "organizations_url": "https://api.github.com/users/potiuk/orgs", "repos_url": "https://api.github.com/users/potiuk/repos", "events_url": "https://api.github.com/users/potiuk/events{/privacy}", "received_events_url": "https://api.github.com/users/potiuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-14T08:32:52Z", "updated_at": "2020-07-24T09:15:55Z", "closed_at": "2020-06-05T19:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When we try to install released yesterday pydruid 0.5.9 on python 3.7 during our CI pipeline it fails to install. Looks like it is somewhow related to pytest runner (I guess some pytest dependency in druid moved from setup-requires to install-requires maybe?)\r\n\r\nExample here: https://travis-ci.org/github/apache/airflow/jobs/662274100?utm_medium=notification&utm_source=github_status\r\n\r\n```\r\nCollecting pydruid>=0.4.1 (from apache-airflow[devel_ci])\r\n  Downloading https://files.pythonhosted.org/packages/ef/0d/f670f42882dd6a6c9626af2473c57ae28def715864ed4f1bec26cf1b4632/pydruid-0.5.9.tar.gz (5.9MB)\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-n5xrjft0/pydruid/setup.py\", line 51, in <module>\r\n        \"Programming Language :: Python :: 3.7\",\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/__init__.py\", line 143, in setup\r\n        _install_setup_requires(attrs)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/__init__.py\", line 138, in _install_setup_requires\r\n        dist.fetch_build_eggs(dist.setup_requires)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/dist.py\", line 687, in fetch_build_eggs\r\n        replace_conflicting=True,\r\n      File \"/usr/local/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 783, in resolve\r\n        replace_conflicting=replace_conflicting\r\n      File \"/usr/local/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1066, in best_match\r\n        return self.obtain(req, installer)\r\n      File \"/usr/local/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1078, in obtain\r\n        return installer(requirement)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/dist.py\", line 743, in fetch_build_egg\r\n        return fetch_build_egg(self, req)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/installer.py\", line 133, in fetch_build_egg\r\n        wheel.install_as_egg(dist_location)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/wheel.py\", line 103, in install_as_egg\r\n        self._install_as_egg(destination_eggdir, zf)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/wheel.py\", line 111, in _install_as_egg\r\n        self._convert_metadata(zf, destination_eggdir, dist_info, egg_info)\r\n      File \"/usr/local/lib/python3.7/site-packages/setuptools/wheel.py\", line 132, in _convert_metadata\r\n        os.mkdir(destination_eggdir)\r\n    FileExistsError: [Errno 17] File exists: '/tmp/pip-install-n5xrjft0/pydruid/.eggs/pytest_runner-5.2-py3.7.egg' \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/194", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/194/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/194/events", "html_url": "https://github.com/druid-io/pydruid/issues/194", "id": 565997080, "node_id": "MDU6SXNzdWU1NjU5OTcwODA=", "number": 194, "title": "Question: Is it possible to work with timezones?", "user": {"login": "tomas-kucera", "id": 19922766, "node_id": "MDQ6VXNlcjE5OTIyNzY2", "avatar_url": "https://avatars0.githubusercontent.com/u/19922766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomas-kucera", "html_url": "https://github.com/tomas-kucera", "followers_url": "https://api.github.com/users/tomas-kucera/followers", "following_url": "https://api.github.com/users/tomas-kucera/following{/other_user}", "gists_url": "https://api.github.com/users/tomas-kucera/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomas-kucera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomas-kucera/subscriptions", "organizations_url": "https://api.github.com/users/tomas-kucera/orgs", "repos_url": "https://api.github.com/users/tomas-kucera/repos", "events_url": "https://api.github.com/users/tomas-kucera/events{/privacy}", "received_events_url": "https://api.github.com/users/tomas-kucera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-17T00:21:22Z", "updated_at": "2020-02-17T19:11:29Z", "closed_at": "2020-02-17T18:53:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, looking for a way to work with timezones. All timestamps are in UTC timezone. Running this query:\r\n```\r\nts = query.timeseries(\r\ndatasource='events',\r\ngranularity={'type': 'period', 'period': 'P1D'},\r\nintervals='1901-01-01T00:00:00-09:00/2101-01-01T00:00:00-09:00',\r\naggregations={'reqs': count('*')},\r\nfilter=Dimension('event_type') == 'request')\r\n```\r\n\r\nResult:\r\n```\r\n       reqs                 timestamp\r\n0      7273  2019-11-01T00:00:00.000Z\r\n1      4009  2019-11-02T00:00:00.000Z\r\n2      5271  2019-11-03T00:00:00.000Z\r\n3      4793  2019-11-04T00:00:00.000Z\r\n4      3051  2019-11-05T00:00:00.000Z\r\n..      ...                       ...\r\n102  458187  2020-02-11T00:00:00.000Z\r\n103  419327  2020-02-12T00:00:00.000Z\r\n104  400851  2020-02-13T00:00:00.000Z\r\n105  518169  2020-02-14T00:00:00.000Z\r\n106  326337  2020-02-15T00:00:00.000Z\r\n```\r\n\r\nThe counts are for UTC TZ, but I would like to get the following record counts in another TZ, such as America/Los Angeles (-08:00) TZ.\r\n\r\nDoing it on the result is OK when doing it on a full dataset but as soon as I would specify a filter for for example a few days only, then for the first and the last days I get incorrect results.\r\n\r\nSo I am looking for a way to specify the filter in a different TZ and get the correct results. The filter setting in my example shows the TZ setting, which is actually ignored.\r\n\r\nAny idea? Thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/181", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/181/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/181/events", "html_url": "https://github.com/druid-io/pydruid/issues/181", "id": 512868745, "node_id": "MDU6SXNzdWU1MTI4Njg3NDU=", "number": 181, "title": "query granularity doesn't allow to set origin", "user": {"login": "sdev-code", "id": 38848412, "node_id": "MDQ6VXNlcjM4ODQ4NDEy", "avatar_url": "https://avatars2.githubusercontent.com/u/38848412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdev-code", "html_url": "https://github.com/sdev-code", "followers_url": "https://api.github.com/users/sdev-code/followers", "following_url": "https://api.github.com/users/sdev-code/following{/other_user}", "gists_url": "https://api.github.com/users/sdev-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdev-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdev-code/subscriptions", "organizations_url": "https://api.github.com/users/sdev-code/orgs", "repos_url": "https://api.github.com/users/sdev-code/repos", "events_url": "https://api.github.com/users/sdev-code/events{/privacy}", "received_events_url": "https://api.github.com/users/sdev-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-26T18:24:51Z", "updated_at": "2019-10-26T20:52:25Z", "closed_at": "2019-10-26T20:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "[druid documentation reference](https://druid.apache.org/docs/latest/querying/granularities.html)\r\nQuery granularity doesn't allow to set origin as it only takes a string as value. \r\n\r\nexample:\r\n```\r\ngroup = client.groupby(\r\n              datasource='twitterstream',\r\n         -- granularity='week', \r\n        ++ granularity={\"type\": \"week\", \"origin\":\"1970-01-04T00:00:00\"}\r\n              intervals='2019-09-29/2019-09-12',\r\n              dimensions=[\"user_name\", \"reply_to_name\"],\r\n              filter=~(Dimension(\"reply_to_name\") == \"Not A Reply\"),\r\n              aggregations={\"count\": doublesum(\"count\")},\r\n              context={\"timeout\": 1000}\r\n              limit_spec={\r\n                  \"type\": \"default\",\r\n                  \"limit\": 50,\r\n                  \"columns\" : [\"count\"]\r\n              }\r\n        )\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/175", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/175/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/175/events", "html_url": "https://github.com/druid-io/pydruid/issues/175", "id": 479454060, "node_id": "MDU6SXNzdWU0Nzk0NTQwNjA=", "number": 175, "title": "Support for only lower bound", "user": {"login": "JiHyeongSeo", "id": 29847262, "node_id": "MDQ6VXNlcjI5ODQ3MjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/29847262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiHyeongSeo", "html_url": "https://github.com/JiHyeongSeo", "followers_url": "https://api.github.com/users/JiHyeongSeo/followers", "following_url": "https://api.github.com/users/JiHyeongSeo/following{/other_user}", "gists_url": "https://api.github.com/users/JiHyeongSeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiHyeongSeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiHyeongSeo/subscriptions", "organizations_url": "https://api.github.com/users/JiHyeongSeo/orgs", "repos_url": "https://api.github.com/users/JiHyeongSeo/repos", "events_url": "https://api.github.com/users/JiHyeongSeo/events{/privacy}", "received_events_url": "https://api.github.com/users/JiHyeongSeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-12T03:29:41Z", "updated_at": "2019-08-13T01:50:27Z", "closed_at": "2019-08-13T01:50:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "group = query.groupby(\r\n    datasource='datasource',\r\n    granularity='hour',\r\n    intervals='2019-08-01/2019-08-07',\r\n    dimensions=[\"dimensionl\"],\r\n    filter=((Dimension(\"id\") == 122) & (Bound(Dimension(\"seconds\"), 0, alphaNumeric=True))),\r\n    aggregations={\"count\": doublesum(\"count\")}\r\n)\r\n\r\nwhen I run above code, type error raise like this\r\n`TypeError: __init__() missing 1 required positional argument: 'upper'`\r\n\r\nBut, in druid documentation (https://druid.apache.org/docs/latest/querying/filters.html)\r\n`Likewise, this filter expresses age >= 18 json { \"type\": \"bound\", \"dimension\": \"age\", \"lower\": \"18\" , \"ordering\": \"numeric\" }` \r\nabove expression is correct.\r\n\r\nI think only lower bound expression should be supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/169", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/169/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/169/events", "html_url": "https://github.com/druid-io/pydruid/issues/169", "id": 455362636, "node_id": "MDU6SXNzdWU0NTUzNjI2MzY=", "number": 169, "title": "DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working", "user": {"login": "rchossein", "id": 46491999, "node_id": "MDQ6VXNlcjQ2NDkxOTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/46491999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchossein", "html_url": "https://github.com/rchossein", "followers_url": "https://api.github.com/users/rchossein/followers", "following_url": "https://api.github.com/users/rchossein/following{/other_user}", "gists_url": "https://api.github.com/users/rchossein/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchossein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchossein/subscriptions", "organizations_url": "https://api.github.com/users/rchossein/orgs", "repos_url": "https://api.github.com/users/rchossein/repos", "events_url": "https://api.github.com/users/rchossein/events{/privacy}", "received_events_url": "https://api.github.com/users/rchossein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T18:32:30Z", "updated_at": "2020-06-07T04:31:13Z", "closed_at": "2020-06-07T04:31:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the warning I'm getting when doing unit testing (with pytest) for my module. \r\n\r\n\r\n```\r\n.../lib/python3.7/site-packages/pydruid/query.py:28   DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n\r\n\r\n    class Query(collections.MutableSequence):\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/162", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/162/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/162/events", "html_url": "https://github.com/druid-io/pydruid/issues/162", "id": 444026544, "node_id": "MDU6SXNzdWU0NDQwMjY1NDQ=", "number": 162, "title": "Allow use of the Tornado curl_httpclient implementation", "user": {"login": "wjdecorte", "id": 17787180, "node_id": "MDQ6VXNlcjE3Nzg3MTgw", "avatar_url": "https://avatars1.githubusercontent.com/u/17787180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjdecorte", "html_url": "https://github.com/wjdecorte", "followers_url": "https://api.github.com/users/wjdecorte/followers", "following_url": "https://api.github.com/users/wjdecorte/following{/other_user}", "gists_url": "https://api.github.com/users/wjdecorte/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjdecorte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjdecorte/subscriptions", "organizations_url": "https://api.github.com/users/wjdecorte/orgs", "repos_url": "https://api.github.com/users/wjdecorte/repos", "events_url": "https://api.github.com/users/wjdecorte/events{/privacy}", "received_events_url": "https://api.github.com/users/wjdecorte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-14T17:03:37Z", "updated_at": "2019-07-09T11:35:42Z", "closed_at": "2019-07-09T11:35:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently PyDruid uses the default tornado simple_httpclient implementation which the ability to change to the curl_httpclient which could be faster.  It would be great if an optional parameter could be set to change the implementation of the http client from the default.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/151", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/151/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/151/events", "html_url": "https://github.com/druid-io/pydruid/issues/151", "id": 417137727, "node_id": "MDU6SXNzdWU0MTcxMzc3Mjc=", "number": 151, "title": "Lack of description for empty result set causes SQLAlchemy exception", "user": {"login": "john-bodley", "id": 4567245, "node_id": "MDQ6VXNlcjQ1NjcyNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4567245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-bodley", "html_url": "https://github.com/john-bodley", "followers_url": "https://api.github.com/users/john-bodley/followers", "following_url": "https://api.github.com/users/john-bodley/following{/other_user}", "gists_url": "https://api.github.com/users/john-bodley/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-bodley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-bodley/subscriptions", "organizations_url": "https://api.github.com/users/john-bodley/orgs", "repos_url": "https://api.github.com/users/john-bodley/repos", "events_url": "https://api.github.com/users/john-bodley/events{/privacy}", "received_events_url": "https://api.github.com/users/john-bodley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-03-05T06:25:27Z", "updated_at": "2019-05-29T16:06:01Z", "closed_at": "2019-03-15T00:49:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SQLAlchemy throws an `AttributeError` when fetching from a [ResultProxy](https://docs.sqlalchemy.org/en/latest/core/connections.html#sqlalchemy.engine.ResultProxy) when the underlying Druid query results in an empty result set, e.g. no rows, as the proxy is prematurely closed, i.e., \r\n```\r\n>>> from sqlalchemy.engine import create_engine\r\n\r\n>>> engine = create_engine('druid://localhost:8082/druid/v2/sql')\r\n>>> result = engine.execute(\"SELECT SUM(x) FROM foo WHERE bar IS NULL\")\r\n>>> result.fetchall()\r\n...\r\nAttributeError: 'NoneType' object has no attribute 'fetchall'\r\n```\r\nThe reason the ResultProxy is closed is because `cursor.description` is [`None`](https://github.com/sqlalchemy/sqlalchemy/blob/66e88d30a86fc37e2eaf7367e988ced3834e3250/lib/sqlalchemy/engine/result.py#L879). This results in `result.cursor` being `None` which is why the exception is thrown. \r\n\r\nIt seems that other dialects have a description irrespective of whether there are rows and hence don't suffer from the same issue. Note I'm uncertain whether there's even a viable solution as the Druid SQL REST API doesn't provide this information for an empty result set, \r\n```\r\n> cat query.json\r\n{\"query\": \"SELECT SUM(x) FROM foo WHERE bar IS NULL\"}\r\n\r\n> curl -XPOST -H 'Content-Type: application/json' http://localhost:8082/druid/v2/sql/ -d @query.json\r\n[]\r\n```\r\n\r\nNote I know one can circumvent this issue by using a raw connection, however this example illustrates the behavior that Pandas uses for reading SQL.\r\n\r\nto: @betodealmeida @mistercrunch ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/135", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/135/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/135/events", "html_url": "https://github.com/druid-io/pydruid/issues/135", "id": 342719097, "node_id": "MDU6SXNzdWUzNDI3MTkwOTc=", "number": 135, "title": "SubQueries Support", "user": {"login": "pantlavanya", "id": 10964914, "node_id": "MDQ6VXNlcjEwOTY0OTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/10964914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pantlavanya", "html_url": "https://github.com/pantlavanya", "followers_url": "https://api.github.com/users/pantlavanya/followers", "following_url": "https://api.github.com/users/pantlavanya/following{/other_user}", "gists_url": "https://api.github.com/users/pantlavanya/gists{/gist_id}", "starred_url": "https://api.github.com/users/pantlavanya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pantlavanya/subscriptions", "organizations_url": "https://api.github.com/users/pantlavanya/orgs", "repos_url": "https://api.github.com/users/pantlavanya/repos", "events_url": "https://api.github.com/users/pantlavanya/events{/privacy}", "received_events_url": "https://api.github.com/users/pantlavanya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-07-19T13:03:31Z", "updated_at": "2020-05-25T19:50:48Z", "closed_at": "2020-05-25T19:50:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello All,\r\n\r\nHow i can generate subqueries using pydruid because datasource field only take either str or list?\r\n\"\"\" ValueError: Datasource definition not valid. Must be string or list of strings \"\"\"\r\n\r\nBelow is the sample query. On which I am passing query output of 1st query to another query as datasource.\r\n```\r\n{\r\n  \"queryType\": \"groupBy\",\r\n  \"dataSource\":{\r\n    \"type\": \"query\",\r\n    \"query\": {\r\n      \"queryType\": \"groupBy\",\r\n      \"dataSource\": \"druid_source\",\r\n      \"granularity\": {\"type\": \"period\", \"period\": \"P1M\"},\r\n      \"dimensions\": [\"source_dim\"],\r\n      \"aggregations\": [\r\n        { \"type\": \"doubleMax\", \"name\": \"value\", \"fieldName\": \"stream_value\" }\r\n      ],\r\n      \"intervals\": [ \"2012-01-01T00:00:00.000/2020-01-03T00:00:00.000\" ]\r\n    }\r\n  },\r\n  \"granularity\": \"hour\",\r\n  \"dimensions\": [\"source_dim\"],\r\n  \"aggregations\": [\r\n    { \"type\": \"longSum\", \"name\": \"outerquerryvalue\", \"fieldName\": \"value\" }\r\n  ],\r\n  \"intervals\": [ \"2012-01-01T00:00:00.000/2020-01-03T00:00:00.000\" ]\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/134", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/134/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/134/events", "html_url": "https://github.com/druid-io/pydruid/issues/134", "id": 336579475, "node_id": "MDU6SXNzdWUzMzY1Nzk0NzU=", "number": 134, "title": "Can't load plugin sqlalchemy.dialects:druid", "user": {"login": "jmcorreia", "id": 11615737, "node_id": "MDQ6VXNlcjExNjE1NzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/11615737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmcorreia", "html_url": "https://github.com/jmcorreia", "followers_url": "https://api.github.com/users/jmcorreia/followers", "following_url": "https://api.github.com/users/jmcorreia/following{/other_user}", "gists_url": "https://api.github.com/users/jmcorreia/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmcorreia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmcorreia/subscriptions", "organizations_url": "https://api.github.com/users/jmcorreia/orgs", "repos_url": "https://api.github.com/users/jmcorreia/repos", "events_url": "https://api.github.com/users/jmcorreia/events{/privacy}", "received_events_url": "https://api.github.com/users/jmcorreia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-28T11:20:06Z", "updated_at": "2018-11-28T06:02:45Z", "closed_at": "2018-11-28T06:02:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all!\r\nI'm trying to create a datasource in superset, using pydruid. I can use pydruid cli successfully, but when I try to create a superset datasource, pointing to druid I'm getting this error: \"Can't load plugin sqlalchemy.dialects:druid\".\r\n\r\nAny idea how to solve this?\r\n\r\nBest regards.\r\n\r\nSuperset version\r\n0.15.0 integrated with hadoop\r\n\r\nExpected results\r\nIntegrate Druid with SQL lab\r\n\r\nActual results\r\nUnable to integrate Druid with SQL lab\r\n\r\nSteps to reproduce\r\nInstall pydruid and try to create a database using this plugin", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/104", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/104/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/104/events", "html_url": "https://github.com/druid-io/pydruid/issues/104", "id": 279764673, "node_id": "MDU6SXNzdWUyNzk3NjQ2NzM=", "number": 104, "title": "Support for dimensionspecs", "user": {"login": "jeremyborg", "id": 5235537, "node_id": "MDQ6VXNlcjUyMzU1Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5235537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyborg", "html_url": "https://github.com/jeremyborg", "followers_url": "https://api.github.com/users/jeremyborg/followers", "following_url": "https://api.github.com/users/jeremyborg/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyborg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyborg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyborg/subscriptions", "organizations_url": "https://api.github.com/users/jeremyborg/orgs", "repos_url": "https://api.github.com/users/jeremyborg/repos", "events_url": "https://api.github.com/users/jeremyborg/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyborg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-06T14:06:20Z", "updated_at": "2017-12-12T14:27:03Z", "closed_at": "2017-12-12T14:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some string data which contains numerical values. I would like to convert this data from string to long, so that I would be able to perform aggregations such as Min, Sum etc. As the link below suggests, druid allows you to perform this conversion by specifying a dimensionspec. Is this functionality supported in pydruid?\r\n\r\nhttp://druid.io/docs/latest/querying/dimensionspecs.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/99", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/99/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/99/events", "html_url": "https://github.com/druid-io/pydruid/issues/99", "id": 249314566, "node_id": "MDU6SXNzdWUyNDkzMTQ1NjY=", "number": 99, "title": "ThetasketchEstimate not working on Python2.7", "user": {"login": "dylwylie", "id": 3107079, "node_id": "MDQ6VXNlcjMxMDcwNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3107079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylwylie", "html_url": "https://github.com/dylwylie", "followers_url": "https://api.github.com/users/dylwylie/followers", "following_url": "https://api.github.com/users/dylwylie/following{/other_user}", "gists_url": "https://api.github.com/users/dylwylie/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylwylie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylwylie/subscriptions", "organizations_url": "https://api.github.com/users/dylwylie/orgs", "repos_url": "https://api.github.com/users/dylwylie/repos", "events_url": "https://api.github.com/users/dylwylie/events{/privacy}", "received_events_url": "https://api.github.com/users/dylwylie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-10T11:21:30Z", "updated_at": "2018-01-29T05:16:26Z", "closed_at": "2018-01-29T05:16:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When unit tests are run on Python2.7 \r\n\r\nTestPostAggregators.test_build_thetapostaggregator fails with \r\n\r\n```\r\nE       AssertionError: assert [{'field': <p...tchEstimate'}] == [{'field': {'f...tchEstimate'}]\r\nE         At index 0 diff: {'field': <pydruid.utils.postaggregator.ThetaSketch instance at 0x1116e9ea8>, 'type': 'thetaSketchEstimate', 'name': 'pag1'} != {'field': {'fieldName': 'theta1', 'type': 'fieldAccess'}, 'type': 'thetaSketchEstimate', 'name': 'pag1'}\r\n```\r\n\r\nIt looks like the object is being used in the dictionary rather than the object's post_aggregator. Will drop a PR to fix.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/91", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/91/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/91/events", "html_url": "https://github.com/druid-io/pydruid/issues/91", "id": 237070803, "node_id": "MDU6SXNzdWUyMzcwNzA4MDM=", "number": 91, "title": "name 'Dimension' is not defined", "user": {"login": "samratisking", "id": 28923784, "node_id": "MDQ6VXNlcjI4OTIzNzg0", "avatar_url": "https://avatars2.githubusercontent.com/u/28923784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samratisking", "html_url": "https://github.com/samratisking", "followers_url": "https://api.github.com/users/samratisking/followers", "following_url": "https://api.github.com/users/samratisking/following{/other_user}", "gists_url": "https://api.github.com/users/samratisking/gists{/gist_id}", "starred_url": "https://api.github.com/users/samratisking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samratisking/subscriptions", "organizations_url": "https://api.github.com/users/samratisking/orgs", "repos_url": "https://api.github.com/users/samratisking/repos", "events_url": "https://api.github.com/users/samratisking/events{/privacy}", "received_events_url": "https://api.github.com/users/samratisking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-20T01:53:55Z", "updated_at": "2020-06-11T07:48:49Z", "closed_at": "2017-09-28T05:47:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying pydruid for the first time on python 2.7, with wikipedia data source.\r\nHowever I am getting the following error when trying to execute the following query in python.\r\n\r\n`top_langs = query.topn(\r\n    datasource = \"wikipedia\",\r\n    granularity = \"all\",\r\n    intervals = \"2013-06-01T00:00/2020-01-01T00\",\r\n    dimension = \"channel\",\r\n    filter = Dimension(\"namespace\") == \"article\",\r\n    aggregations = {\"edit_count\": longsum(\"count\")},\r\n    metric = \"edit_count\",\r\n    threshold = 4\r\n)\r\n\r\nprint top_langs  # Do this if you want to see the raw JSON`\r\n\r\n\r\n\r\n`NameError                                 Traceback (most recent call last)\r\n<ipython-input-61-e369039c2e3f> in <module>()\r\n      4     intervals = \"2013-06-01T00:00/2020-01-01T00\",\r\n      5     dimension = \"channel\",\r\n----> 6     filter = Dimension(\"namespace\") == \"article\",\r\n      7     aggregations = {\"edit_count\": longsum(\"count\")},\r\n      8     metric = \"edit_count\",\r\n\r\nNameError: name 'Dimension' is not defined`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/89", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/89/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/89/events", "html_url": "https://github.com/druid-io/pydruid/issues/89", "id": 231441178, "node_id": "MDU6SXNzdWUyMzE0NDExNzg=", "number": 89, "title": "PyDruid 0.3.2?", "user": {"login": "joshwalters", "id": 1214370, "node_id": "MDQ6VXNlcjEyMTQzNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1214370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshwalters", "html_url": "https://github.com/joshwalters", "followers_url": "https://api.github.com/users/joshwalters/followers", "following_url": "https://api.github.com/users/joshwalters/following{/other_user}", "gists_url": "https://api.github.com/users/joshwalters/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshwalters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshwalters/subscriptions", "organizations_url": "https://api.github.com/users/joshwalters/orgs", "repos_url": "https://api.github.com/users/joshwalters/repos", "events_url": "https://api.github.com/users/joshwalters/events{/privacy}", "received_events_url": "https://api.github.com/users/joshwalters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-25T19:53:10Z", "updated_at": "2017-05-30T21:20:50Z", "closed_at": "2017-05-30T21:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the merge of https://github.com/druid-io/pydruid/pull/72 we now have the ability to perform theta sketch operations. This functionality is needed in [Superset](https://github.com/airbnb/superset), but we need a new PyDruid pip package to be pushed so that we can use this new feature.\r\n\r\nIs there a release process / timeline to get a new package pushed? Is there anything I can do to help? My understand is that the `setup.py` script needs to be modified to list `0.3.2` and a git tag is added for that version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/85", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/85/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/85/events", "html_url": "https://github.com/druid-io/pydruid/issues/85", "id": 228477707, "node_id": "MDU6SXNzdWUyMjg0Nzc3MDc=", "number": 85, "title": "Support for 'interval' filter.", "user": {"login": "var23rav", "id": 7958115, "node_id": "MDQ6VXNlcjc5NTgxMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7958115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/var23rav", "html_url": "https://github.com/var23rav", "followers_url": "https://api.github.com/users/var23rav/followers", "following_url": "https://api.github.com/users/var23rav/following{/other_user}", "gists_url": "https://api.github.com/users/var23rav/gists{/gist_id}", "starred_url": "https://api.github.com/users/var23rav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/var23rav/subscriptions", "organizations_url": "https://api.github.com/users/var23rav/orgs", "repos_url": "https://api.github.com/users/var23rav/repos", "events_url": "https://api.github.com/users/var23rav/events{/privacy}", "received_events_url": "https://api.github.com/users/var23rav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-13T14:44:28Z", "updated_at": "2017-09-17T18:28:54Z", "closed_at": "2017-09-17T18:28:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is there any 'Interval Filter' available ?**\r\n\r\nI couldn't find it in **\"type\" : \"interval\"** in [filter](https://github.com/druid-io/pydruid/blob/master/pydruid/utils/filters.py) code.\r\n\r\nFiltering on a set of ISO 8601 intervals:\r\n\r\n```\r\n{\r\n    \"type\" : \"interval\",\r\n    \"dimension\" : \"__time\",\r\n    \"intervals\" : [\r\n      \"2014-10-01T00:00:00.000Z/2014-10-07T00:00:00.000Z\",\r\n      \"2014-11-15T00:00:00.000Z/2014-11-16T00:00:00.000Z\"\r\n    ]\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/83", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/83/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/83/events", "html_url": "https://github.com/druid-io/pydruid/issues/83", "id": 219710245, "node_id": "MDU6SXNzdWUyMTk3MTAyNDU=", "number": 83, "title": "Custom duration granularities?", "user": {"login": "azymnis", "id": 207127, "node_id": "MDQ6VXNlcjIwNzEyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/207127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azymnis", "html_url": "https://github.com/azymnis", "followers_url": "https://api.github.com/users/azymnis/followers", "following_url": "https://api.github.com/users/azymnis/following{/other_user}", "gists_url": "https://api.github.com/users/azymnis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azymnis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azymnis/subscriptions", "organizations_url": "https://api.github.com/users/azymnis/orgs", "repos_url": "https://api.github.com/users/azymnis/repos", "events_url": "https://api.github.com/users/azymnis/events{/privacy}", "received_events_url": "https://api.github.com/users/azymnis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-05T20:48:34Z", "updated_at": "2017-04-06T16:15:04Z", "closed_at": "2017-04-06T16:15:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Based on what I read in the [docs](http://druid.io/docs/latest/querying/granularities.html), Druid supports custom granularities like this:\r\n\r\n```\r\n{\"type\": \"duration\", \"duration\": 7200000}\r\n```\r\n\r\nIs there support for that in PyDruid?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/81", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/81/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/81/events", "html_url": "https://github.com/druid-io/pydruid/issues/81", "id": 216162752, "node_id": "MDU6SXNzdWUyMTYxNjI3NTI=", "number": 81, "title": "PyDruid Installation Error??", "user": {"login": "philos22", "id": 9687659, "node_id": "MDQ6VXNlcjk2ODc2NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9687659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philos22", "html_url": "https://github.com/philos22", "followers_url": "https://api.github.com/users/philos22/followers", "following_url": "https://api.github.com/users/philos22/following{/other_user}", "gists_url": "https://api.github.com/users/philos22/gists{/gist_id}", "starred_url": "https://api.github.com/users/philos22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philos22/subscriptions", "organizations_url": "https://api.github.com/users/philos22/orgs", "repos_url": "https://api.github.com/users/philos22/repos", "events_url": "https://api.github.com/users/philos22/events{/privacy}", "received_events_url": "https://api.github.com/users/philos22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-22T18:17:44Z", "updated_at": "2017-04-12T17:57:05Z", "closed_at": "2017-04-12T17:57:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "this comes up after running pip install pydruid:\r\n\r\n  Running setup.py egg_info for package pydruid\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 14, in ?\r\n      File \"/home/ctsai/build/pydruid/setup.py\", line 30, in ?\r\n        tests_require=['pytest', 'six', 'mock'],\r\n      File \"/usr/lib64/python2.4/distutils/core.py\", line 110, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/dist.py\", line 219, in __init__\r\n        self.fetch_build_eggs(attrs.pop('setup_requires'))\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/dist.py\", line 242, in fetch_build_eggs\r\n        for dist in working_set.resolve(\r\n      File \"/usr/lib/python2.4/site-packages/pkg_resources.py\", line 481, in resolve\r\n        dist = best[req.key] = env.best_match(req, self, installer)\r\n      File \"/usr/lib/python2.4/site-packages/pkg_resources.py\", line 717, in best_match\r\n        return self.obtain(req, installer) # try and download/install\r\n      File \"/usr/lib/python2.4/site-packages/pkg_resources.py\", line 729, in obtain\r\n        return installer(requirement)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/dist.py\", line 286, in fetch_build_egg\r\n        return cmd.easy_install(req)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 446, in easy_install\r\n        return self.install_item(spec, dist.location, tmpdir, deps)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 471, in install_item\r\n        dists = self.install_eggs(spec, download, tmpdir)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 655, in install_eggs\r\n        return self.build_and_install(setup_script, setup_base)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 930, in build_and_install\r\n        self.run_setup(setup_script, setup_base, args)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 919, in run_setup\r\n        run_setup(setup_script, args)\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/sandbox.py\", line 26, in run_setup\r\n        DirectorySandbox(setup_dir).run(\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/sandbox.py\", line 63, in run\r\n        return func()\r\n      File \"/usr/lib/python2.4/site-packages/setuptools/sandbox.py\", line 29, in <lambda>\r\n        {'__file__':setup_script, '__name__':'__main__'}\r\n      File \"setup.py\", line 9\r\n        with io.open('README.rst', encoding='utf-8') as readme:\r\n              ^\r\n    SyntaxError: invalid syntax\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n\r\n  File \"<string>\", line 14, in ?\r\n\r\n  File \"/home/ctsai/build/pydruid/setup.py\", line 30, in ?\r\n\r\n    tests_require=['pytest', 'six', 'mock'],\r\n\r\n  File \"/usr/lib64/python2.4/distutils/core.py\", line 110, in setup\r\n\r\n    _setup_distribution = dist = klass(attrs)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/dist.py\", line 219, in __init__\r\n\r\n    self.fetch_build_eggs(attrs.pop('setup_requires'))\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/dist.py\", line 242, in fetch_build_eggs\r\n\r\n    for dist in working_set.resolve(\r\n\r\n  File \"/usr/lib/python2.4/site-packages/pkg_resources.py\", line 481, in resolve\r\n\r\n    dist = best[req.key] = env.best_match(req, self, installer)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/pkg_resources.py\", line 717, in best_match\r\n\r\n    return self.obtain(req, installer) # try and download/install\r\n\r\n  File \"/usr/lib/python2.4/site-packages/pkg_resources.py\", line 729, in obtain\r\n\r\n    return installer(requirement)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/dist.py\", line 286, in fetch_build_egg\r\n\r\n    return cmd.easy_install(req)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 446, in easy_install\r\n\r\n    return self.install_item(spec, dist.location, tmpdir, deps)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 471, in install_item\r\n\r\n    dists = self.install_eggs(spec, download, tmpdir)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 655, in install_eggs\r\n\r\n    return self.build_and_install(setup_script, setup_base)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 930, in build_and_install\r\n\r\n    self.run_setup(setup_script, setup_base, args)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/command/easy_install.py\", line 919, in run_setup\r\n\r\n    run_setup(setup_script, args)\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/sandbox.py\", line 26, in run_setup\r\n\r\n    DirectorySandbox(setup_dir).run(\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/sandbox.py\", line 63, in run\r\n\r\n    return func()\r\n\r\n  File \"/usr/lib/python2.4/site-packages/setuptools/sandbox.py\", line 29, in <lambda>\r\n\r\n    {'__file__':setup_script, '__name__':'__main__'}\r\n\r\n  File \"setup.py\", line 9\r\n\r\n    with io.open('README.rst', encoding='utf-8') as readme:\r\n\r\n          ^\r\n\r\nSyntaxError: invalid syntax\r\n\r\n----------------------------------------\r\nCommand python setup.py egg_info failed with error code 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/78", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/78/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/78/events", "html_url": "https://github.com/druid-io/pydruid/issues/78", "id": 215587809, "node_id": "MDU6SXNzdWUyMTU1ODc4MDk=", "number": 78, "title": "Query Filter Or Syntax?", "user": {"login": "philos22", "id": 9687659, "node_id": "MDQ6VXNlcjk2ODc2NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9687659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philos22", "html_url": "https://github.com/philos22", "followers_url": "https://api.github.com/users/philos22/followers", "following_url": "https://api.github.com/users/philos22/following{/other_user}", "gists_url": "https://api.github.com/users/philos22/gists{/gist_id}", "starred_url": "https://api.github.com/users/philos22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philos22/subscriptions", "organizations_url": "https://api.github.com/users/philos22/orgs", "repos_url": "https://api.github.com/users/philos22/repos", "events_url": "https://api.github.com/users/philos22/events{/privacy}", "received_events_url": "https://api.github.com/users/philos22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-20T23:39:18Z", "updated_at": "2017-03-21T23:00:43Z", "closed_at": "2017-03-21T23:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "what is the syntax for OR conditions in the filter argument?\r\n\r\neg. filter = (Dimension('A')=='val1') & ((Dimension('B')=='val2')#  | (Dimension('C')=='val3'))\r\n\r\nThis doesn't seem to work, leads to error:\r\n\r\n`File \"./pydruid_query.py\", line 150, in <module>`\r\n`gfl2 = group_last2.export_tsv('group_last2_result.tsv')`\r\n`File \"/usr/lib/python2.6/site-packages/pydruid/query.py\", line 99, in export_tsv`\r\n`header = list(self.result[0]['event'].keys())`\r\n`IndexError: list index out of range`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/75", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/75/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/75/events", "html_url": "https://github.com/druid-io/pydruid/issues/75", "id": 202500959, "node_id": "MDU6SXNzdWUyMDI1MDA5NTk=", "number": 75, "title": "insert data into druid using python code", "user": {"login": "aakashkag", "id": 10579939, "node_id": "MDQ6VXNlcjEwNTc5OTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/10579939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aakashkag", "html_url": "https://github.com/aakashkag", "followers_url": "https://api.github.com/users/aakashkag/followers", "following_url": "https://api.github.com/users/aakashkag/following{/other_user}", "gists_url": "https://api.github.com/users/aakashkag/gists{/gist_id}", "starred_url": "https://api.github.com/users/aakashkag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aakashkag/subscriptions", "organizations_url": "https://api.github.com/users/aakashkag/orgs", "repos_url": "https://api.github.com/users/aakashkag/repos", "events_url": "https://api.github.com/users/aakashkag/events{/privacy}", "received_events_url": "https://api.github.com/users/aakashkag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-23T10:49:21Z", "updated_at": "2017-01-23T15:10:22Z", "closed_at": "2017-01-23T15:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "how we can insert data into druid using python code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/65", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/65/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/65/events", "html_url": "https://github.com/druid-io/pydruid/issues/65", "id": 183354654, "node_id": "MDU6SXNzdWUxODMzNTQ2NTQ=", "number": 65, "title": "Version bump", "user": {"login": "se7entyse7en", "id": 5599208, "node_id": "MDQ6VXNlcjU1OTkyMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/se7entyse7en", "html_url": "https://github.com/se7entyse7en", "followers_url": "https://api.github.com/users/se7entyse7en/followers", "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}", "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}", "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions", "organizations_url": "https://api.github.com/users/se7entyse7en/orgs", "repos_url": "https://api.github.com/users/se7entyse7en/repos", "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}", "received_events_url": "https://api.github.com/users/se7entyse7en/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-17T08:28:37Z", "updated_at": "2016-12-22T23:06:59Z", "closed_at": "2016-12-22T23:06:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possibile to bump a new version (maybe `0.3.1`) including the in filter support?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/64", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/64/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/64/events", "html_url": "https://github.com/druid-io/pydruid/issues/64", "id": 177497467, "node_id": "MDU6SXNzdWUxNzc0OTc0Njc=", "number": 64, "title": "Is it possible to support merge property in segment metadata query?", "user": {"login": "noppanit", "id": 638379, "node_id": "MDQ6VXNlcjYzODM3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/638379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noppanit", "html_url": "https://github.com/noppanit", "followers_url": "https://api.github.com/users/noppanit/followers", "following_url": "https://api.github.com/users/noppanit/following{/other_user}", "gists_url": "https://api.github.com/users/noppanit/gists{/gist_id}", "starred_url": "https://api.github.com/users/noppanit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noppanit/subscriptions", "organizations_url": "https://api.github.com/users/noppanit/orgs", "repos_url": "https://api.github.com/users/noppanit/repos", "events_url": "https://api.github.com/users/noppanit/events{/privacy}", "received_events_url": "https://api.github.com/users/noppanit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-16T19:04:01Z", "updated_at": "2017-02-25T13:42:33Z", "closed_at": "2017-02-25T13:42:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to support `merge` in `segment_metadata? \n\nhttps://github.com/druid-io/pydruid/blob/f9645c9eaa7848410c08a13079b67f4450d2b642/pydruid/query.py#L336\n\nIf yes, I can make a PR. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/63", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/63/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/63/events", "html_url": "https://github.com/druid-io/pydruid/issues/63", "id": 174964425, "node_id": "MDU6SXNzdWUxNzQ5NjQ0MjU=", "number": 63, "title": "Asynchronous client is not working", "user": {"login": "mghosh4", "id": 2450944, "node_id": "MDQ6VXNlcjI0NTA5NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2450944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mghosh4", "html_url": "https://github.com/mghosh4", "followers_url": "https://api.github.com/users/mghosh4/followers", "following_url": "https://api.github.com/users/mghosh4/following{/other_user}", "gists_url": "https://api.github.com/users/mghosh4/gists{/gist_id}", "starred_url": "https://api.github.com/users/mghosh4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mghosh4/subscriptions", "organizations_url": "https://api.github.com/users/mghosh4/orgs", "repos_url": "https://api.github.com/users/mghosh4/repos", "events_url": "https://api.github.com/users/mghosh4/events{/privacy}", "received_events_url": "https://api.github.com/users/mghosh4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-04T19:06:31Z", "updated_at": "2016-10-30T22:22:53Z", "closed_at": "2016-10-30T22:22:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried running the pydruid async client. It does not work. The issue is that it uses AsyncHttpClient from tornado which is the interface. Instead we should be using one of the implementation, SimpleHttpAsyncClient or CurlAsyncHTTPClient. The latter is better as described in this link http://www.tornadoweb.org/en/stable/httpclient.html#module-tornado.simple_httpclient. I have made this one line fix and can create a patch if it is fine by everyone.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/42", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/42/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/42/events", "html_url": "https://github.com/druid-io/pydruid/issues/42", "id": 134853742, "node_id": "MDU6SXNzdWUxMzQ4NTM3NDI=", "number": 42, "title": "Query construction results in nested filters instead of an array", "user": {"login": "giorgosera", "id": 752207, "node_id": "MDQ6VXNlcjc1MjIwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/752207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giorgosera", "html_url": "https://github.com/giorgosera", "followers_url": "https://api.github.com/users/giorgosera/followers", "following_url": "https://api.github.com/users/giorgosera/following{/other_user}", "gists_url": "https://api.github.com/users/giorgosera/gists{/gist_id}", "starred_url": "https://api.github.com/users/giorgosera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giorgosera/subscriptions", "organizations_url": "https://api.github.com/users/giorgosera/orgs", "repos_url": "https://api.github.com/users/giorgosera/repos", "events_url": "https://api.github.com/users/giorgosera/events{/privacy}", "received_events_url": "https://api.github.com/users/giorgosera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-19T12:24:05Z", "updated_at": "2016-03-10T17:56:47Z", "closed_at": "2016-03-10T17:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run the following query\n\n```\nselected_apps = ((dr.Dimension('appId') == 0) | (dr.Dimension('appId') == 1) | (dr.Dimension('appId') == 2))\n\nquery = druid.topn(datasource='sessions', granularity='all', intervals='2016-02-05/P7D', filter=selected_apps, aggregations={'sessions': dr.longsum('sessions')}, dimension='appId', metric='sessions')\n```\n\nLooking at the actual constructed query I get:\n\n```\n{\n    \"metric\": \"sessions\",\u00b7\n    \"aggregations\": [\n        {\n            \"fieldName\": \"sessions\",\u00b7\n            \"type\": \"longSum\",\u00b7\n            \"name\": \"sessions\"\n        }\n    ],\u00b7\n    \"dimension\": \"appId\",\u00b7\n    \"filter\": {\n        \"fields\": [\n            {\n                \"fields\": [\n                    {\n                        \"type\": \"selector\",\u00b7\n                        \"dimension\": \"appId\",\u00b7\n                        \"value\": 0\n                    },\u00b7\n                    {\n                        \"type\": \"selector\",\u00b7\n                        \"dimension\": \"appId\",\u00b7\n                        \"value\": 1\n                    }\n                ],\u00b7\n                \"type\": \"or\"\n            },\u00b7\n            {\n                \"type\": \"selector\",\u00b7\n                \"dimension\": \"appId\",\u00b7\n                \"value\": 2\n            }\n        ],\u00b7\n        \"type\": \"or\"\n    },\u00b7\n    \"intervals\": \"2016-02-05/P7D\",\u00b7\n    \"dataSource\": \"sessions\",\u00b7\n    \"granularity\": \"all\",\u00b7\n    \"queryType\": \"topN\"\n}\n```\n\nInside the filter object I was expecting the fields array to contain all selectors at the same level and not nested. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/31", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/31/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/31/events", "html_url": "https://github.com/druid-io/pydruid/issues/31", "id": 105419946, "node_id": "MDU6SXNzdWUxMDU0MTk5NDY=", "number": 31, "title": "Tests unittest vs py.test ", "user": {"login": "se7entyse7en", "id": 5599208, "node_id": "MDQ6VXNlcjU1OTkyMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/se7entyse7en", "html_url": "https://github.com/se7entyse7en", "followers_url": "https://api.github.com/users/se7entyse7en/followers", "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}", "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}", "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions", "organizations_url": "https://api.github.com/users/se7entyse7en/orgs", "repos_url": "https://api.github.com/users/se7entyse7en/repos", "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}", "received_events_url": "https://api.github.com/users/se7entyse7en/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-08T16:32:45Z", "updated_at": "2015-09-30T15:46:00Z", "closed_at": "2015-09-30T15:46:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason for which has been choosen `py.test` instead of the built-in `unittest` for testing? I would like to add some tests and I honestly don't know `py.test`, but `unittest` seems compatible. Can I write them without using `py.test`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/30", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/30/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/30/events", "html_url": "https://github.com/druid-io/pydruid/issues/30", "id": 105186409, "node_id": "MDU6SXNzdWUxMDUxODY0MDk=", "number": 30, "title": "Exception when `filter=None`", "user": {"login": "se7entyse7en", "id": 5599208, "node_id": "MDQ6VXNlcjU1OTkyMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/se7entyse7en", "html_url": "https://github.com/se7entyse7en", "followers_url": "https://api.github.com/users/se7entyse7en/followers", "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}", "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}", "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions", "organizations_url": "https://api.github.com/users/se7entyse7en/orgs", "repos_url": "https://api.github.com/users/se7entyse7en/repos", "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}", "received_events_url": "https://api.github.com/users/se7entyse7en/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-07T10:00:09Z", "updated_at": "2016-12-14T21:21:15Z", "closed_at": "2016-12-14T21:21:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When building query if `filter=None` then an exception occurs:\n\n```\nFile \"/Users/se7entyse7en/Envs/viralize-web/lib/python2.7/site-packages/pydruid/utils/filters.py\", line 61, in build_filter\n    return filter_obj.filter['filter']\n AttributeError: 'NoneType' object has no attribute 'filter'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/29", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/29/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/29/events", "html_url": "https://github.com/druid-io/pydruid/issues/29", "id": 104684380, "node_id": "MDU6SXNzdWUxMDQ2ODQzODA=", "number": 29, "title": "`PyDruid` not extending `object`", "user": {"login": "se7entyse7en", "id": 5599208, "node_id": "MDQ6VXNlcjU1OTkyMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/se7entyse7en", "html_url": "https://github.com/se7entyse7en", "followers_url": "https://api.github.com/users/se7entyse7en/followers", "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}", "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}", "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions", "organizations_url": "https://api.github.com/users/se7entyse7en/orgs", "repos_url": "https://api.github.com/users/se7entyse7en/repos", "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}", "received_events_url": "https://api.github.com/users/se7entyse7en/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-03T12:49:38Z", "updated_at": "2016-03-18T18:41:33Z", "closed_at": "2016-03-18T18:41:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason why `PyDruid` class is not extending `object`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/27", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/27/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/27/events", "html_url": "https://github.com/druid-io/pydruid/issues/27", "id": 104650894, "node_id": "MDU6SXNzdWUxMDQ2NTA4OTQ=", "number": 27, "title": "Support for 'filtered' aggregator", "user": {"login": "se7entyse7en", "id": 5599208, "node_id": "MDQ6VXNlcjU1OTkyMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5599208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/se7entyse7en", "html_url": "https://github.com/se7entyse7en", "followers_url": "https://api.github.com/users/se7entyse7en/followers", "following_url": "https://api.github.com/users/se7entyse7en/following{/other_user}", "gists_url": "https://api.github.com/users/se7entyse7en/gists{/gist_id}", "starred_url": "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/se7entyse7en/subscriptions", "organizations_url": "https://api.github.com/users/se7entyse7en/orgs", "repos_url": "https://api.github.com/users/se7entyse7en/repos", "events_url": "https://api.github.com/users/se7entyse7en/events{/privacy}", "received_events_url": "https://api.github.com/users/se7entyse7en/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-03T09:01:20Z", "updated_at": "2015-09-22T05:19:14Z", "closed_at": "2015-09-22T05:19:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, am I wrong or there's no support for \"filtered\" aggregation?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/26", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/26/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/26/events", "html_url": "https://github.com/druid-io/pydruid/issues/26", "id": 97445357, "node_id": "MDU6SXNzdWU5NzQ0NTM1Nw==", "number": 26, "title": "Re-upload version 0.2.1 to pypi", "user": {"login": "fizyk", "id": 229393, "node_id": "MDQ6VXNlcjIyOTM5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/229393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizyk", "html_url": "https://github.com/fizyk", "followers_url": "https://api.github.com/users/fizyk/followers", "following_url": "https://api.github.com/users/fizyk/following{/other_user}", "gists_url": "https://api.github.com/users/fizyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizyk/subscriptions", "organizations_url": "https://api.github.com/users/fizyk/orgs", "repos_url": "https://api.github.com/users/fizyk/repos", "events_url": "https://api.github.com/users/fizyk/events{/privacy}", "received_events_url": "https://api.github.com/users/fizyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-07-27T11:49:36Z", "updated_at": "2015-07-28T19:04:26Z", "closed_at": "2015-07-27T18:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like releasing new version, you guys have removed 0.2.1 from pypi.\n\nI'd ask you to re-upload that as we've have a strict dependency upgrade policy, and our requirements are locked against specific version of packages, including pydruid.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/25", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/25/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/25/events", "html_url": "https://github.com/druid-io/pydruid/issues/25", "id": 96625280, "node_id": "MDU6SXNzdWU5NjYyNTI4MA==", "number": 25, "title": "Release to pypi ", "user": {"login": "drcrallen", "id": 8213081, "node_id": "MDQ6VXNlcjgyMTMwODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8213081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drcrallen", "html_url": "https://github.com/drcrallen", "followers_url": "https://api.github.com/users/drcrallen/followers", "following_url": "https://api.github.com/users/drcrallen/following{/other_user}", "gists_url": "https://api.github.com/users/drcrallen/gists{/gist_id}", "starred_url": "https://api.github.com/users/drcrallen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drcrallen/subscriptions", "organizations_url": "https://api.github.com/users/drcrallen/orgs", "repos_url": "https://api.github.com/users/drcrallen/repos", "events_url": "https://api.github.com/users/drcrallen/events{/privacy}", "received_events_url": "https://api.github.com/users/drcrallen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "xvrl", "id": 815147, "node_id": "MDQ6VXNlcjgxNTE0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/815147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xvrl", "html_url": "https://github.com/xvrl", "followers_url": "https://api.github.com/users/xvrl/followers", "following_url": "https://api.github.com/users/xvrl/following{/other_user}", "gists_url": "https://api.github.com/users/xvrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/xvrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xvrl/subscriptions", "organizations_url": "https://api.github.com/users/xvrl/orgs", "repos_url": "https://api.github.com/users/xvrl/repos", "events_url": "https://api.github.com/users/xvrl/events{/privacy}", "received_events_url": "https://api.github.com/users/xvrl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xvrl", "id": 815147, "node_id": "MDQ6VXNlcjgxNTE0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/815147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xvrl", "html_url": "https://github.com/xvrl", "followers_url": "https://api.github.com/users/xvrl/followers", "following_url": "https://api.github.com/users/xvrl/following{/other_user}", "gists_url": "https://api.github.com/users/xvrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/xvrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xvrl/subscriptions", "organizations_url": "https://api.github.com/users/xvrl/orgs", "repos_url": "https://api.github.com/users/xvrl/repos", "events_url": "https://api.github.com/users/xvrl/events{/privacy}", "received_events_url": "https://api.github.com/users/xvrl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-07-22T17:44:34Z", "updated_at": "2015-07-24T23:20:29Z", "closed_at": "2015-07-24T23:20:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/23", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/23/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/23/events", "html_url": "https://github.com/druid-io/pydruid/issues/23", "id": 90303867, "node_id": "MDU6SXNzdWU5MDMwMzg2Nw==", "number": 23, "title": "Versions issues", "user": {"login": "drorata", "id": 2905978, "node_id": "MDQ6VXNlcjI5MDU5Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2905978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drorata", "html_url": "https://github.com/drorata", "followers_url": "https://api.github.com/users/drorata/followers", "following_url": "https://api.github.com/users/drorata/following{/other_user}", "gists_url": "https://api.github.com/users/drorata/gists{/gist_id}", "starred_url": "https://api.github.com/users/drorata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drorata/subscriptions", "organizations_url": "https://api.github.com/users/drorata/orgs", "repos_url": "https://api.github.com/users/drorata/repos", "events_url": "https://api.github.com/users/drorata/events{/privacy}", "received_events_url": "https://api.github.com/users/drorata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-23T06:42:23Z", "updated_at": "2015-07-27T18:09:41Z", "closed_at": "2015-07-27T18:09:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the github master branch corresponds to version 0.2 but on pypi you can find version 0.2.1. Is this intended? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/druid-io/pydruid/issues/4", "repository_url": "https://api.github.com/repos/druid-io/pydruid", "labels_url": "https://api.github.com/repos/druid-io/pydruid/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/druid-io/pydruid/issues/4/comments", "events_url": "https://api.github.com/repos/druid-io/pydruid/issues/4/events", "html_url": "https://github.com/druid-io/pydruid/issues/4", "id": 23830155, "node_id": "MDU6SXNzdWUyMzgzMDE1NQ==", "number": 4, "title": "misleading error message", "user": {"login": "jstrunk", "id": 85002, "node_id": "MDQ6VXNlcjg1MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/85002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstrunk", "html_url": "https://github.com/jstrunk", "followers_url": "https://api.github.com/users/jstrunk/followers", "following_url": "https://api.github.com/users/jstrunk/following{/other_user}", "gists_url": "https://api.github.com/users/jstrunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstrunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstrunk/subscriptions", "organizations_url": "https://api.github.com/users/jstrunk/orgs", "repos_url": "https://api.github.com/users/jstrunk/repos", "events_url": "https://api.github.com/users/jstrunk/events{/privacy}", "received_events_url": "https://api.github.com/users/jstrunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-06T00:44:00Z", "updated_at": "2013-12-06T19:05:02Z", "closed_at": "2013-12-06T19:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Deep,\n\nI was trying out a groupby query on metrics. pyDruid told me I had a malformed query, but when I run the generated query through curl it works.\n\n```\nimport pydruid.client\nimport datetime\n\nbard_url = 'http://x.x.x.x:8080/'\nendpoint = 'druid/v2/?pretty'\nquery = pydruid.client.pyDruid(bard_url,endpoint)\n\ndataSource = 'mmx_metrics'\nfilters = (pydruid.client.Dimension(\"metric\") == \"query/time\") & (pydruid.client.Dimension(\"service\") == \"druid/prod/bard\")\nintervals = [datetime.datetime.utcnow().isoformat() + '/PT5M']\n\nfoo = query.groupBy(dataSource=dataSource, intervals=intervals, granularity=\"minute\", dimensions=['host','service'], aggregations = {\"count\": pydruid.client.doubleSum(\"count\")}, filter=filters)\n```\n\nGives me: \n\n```\n---------------------------------------------------------------------------\nIOError                                   Traceback (most recent call last)\n<ipython-input-11-9d231bdb8e44> in <module>()\n----> 1 foo = query.groupBy(dataSource=dataSource, intervals=intervals, granularity=\"minute\", dimensions=['host','service'], aggregations = {\"count\": pydruid.client.doubleSum(\"count\")}, filter=filters)\n\n/usr/lib/python2.7/site-packages/pyDruid-0.1.7-py2.7.egg/pydruid/client.pyc in groupBy(self, **args)\n    157                 self.query_dict = query_dict\n    158                 self.query_type = 'groupby'\n--> 159                 return self.post(query_dict)\n    160 \n    161         def segmentMetadata(self, **args):\n\n/usr/lib/python2.7/site-packages/pyDruid-0.1.7-py2.7.egg/pydruid/client.pyc in post(self, query)\n     47                         res.close()\n     48                 except urllib2.HTTPError, e:\n---> 49                         raise IOError('Malformed query: \\n {0}'.format(json.dumps(self.query_dict, indent = 4)))\n     50                 else:\n     51                         self.result = self.parse()\n\nIOError: Malformed query: \n {\n    \"dimensions\": [\n        \"host\",\n        \"service\"\n    ],\n    \"aggregations\": [\n        {\n            \"type\": \"doubleSum\",\n            \"fieldName\": \"count\",\n            \"name\": \"count\"\n        }\n    ],\n    \"filter\": {\n        \"fields\": [\n            {\n                \"type\": \"selector\",\n                \"dimension\": \"metric\",\n                \"value\": \"query/time\"\n            },\n            {\n                \"type\": \"selector\",\n                \"dimension\": \"service\",\n                \"value\": \"druid/prod/bard\"\n            }\n        ],\n        \"type\": \"and\"\n    },\n    \"intervals\": [\n        \"2013-12-06T00:38:38.760172/PT5M\"\n    ],\n    \"dataSource\": \"mmx_metrics\",\n    \"granularity\": \"minute\",\n    \"queryType\": \"groupBy\"\n}\n```\n\nI put the generated query into /tmp/query.druid and ran the following:\n\n```\ncurl -X POST \"http://x.x.x.x:8080/druid/v2/?pretty\" -H 'content-type: application/json' -d @/tmp/query.druid\n```\n\nIt returned the results I expected.\n\nI saw this with both the pip installed version and the git version.\n\n-Jeff\n", "performed_via_github_app": null, "score": 1.0}]}