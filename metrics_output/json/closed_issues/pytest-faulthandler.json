{"total_count": 16, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/38", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/38/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/38/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/38", "id": 655207741, "node_id": "MDU6SXNzdWU2NTUyMDc3NDE=", "number": 38, "title": "The readme should not point to the dead link https://faulthandler.readthedocs.io/", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-11T13:21:28Z", "updated_at": "2020-07-11T15:07:11Z", "closed_at": "2020-07-11T15:07:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Maybe link to https://docs.pytest.org/en/stable/usage.html#fault-handler instead? It's currently hard to find the proper pointers w/o googling.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/36", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/36/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/36/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/36", "id": 464383435, "node_id": "MDU6SXNzdWU0NjQzODM0MzU=", "number": 36, "title": "Please release dummy 2.0 package", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-04T20:05:21Z", "updated_at": "2019-07-04T20:41:18Z", "closed_at": "2019-07-04T20:41:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI think it would be cool if you could release a 2.0 package that is just a dummy package that simply depends on pytest>5.0.\r\n\r\nThis would help downstream transition to pytest 5.0 without explicitly depending on it.\r\n\r\nThanks!\r\n\r\nMark\r\n\r\nhttps://github.com/scikit-image/scikit-image/issues/3986", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/35", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/35/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/35/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/35", "id": 462822376, "node_id": "MDU6SXNzdWU0NjI4MjIzNzY=", "number": 35, "title": "pytest --faulthandler-timeout does not work with pytest 5.0.0", "user": {"login": "pablogsal", "id": 11718525, "node_id": "MDQ6VXNlcjExNzE4NTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/11718525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pablogsal", "html_url": "https://github.com/pablogsal", "followers_url": "https://api.github.com/users/pablogsal/followers", "following_url": "https://api.github.com/users/pablogsal/following{/other_user}", "gists_url": "https://api.github.com/users/pablogsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pablogsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pablogsal/subscriptions", "organizations_url": "https://api.github.com/users/pablogsal/orgs", "repos_url": "https://api.github.com/users/pablogsal/repos", "events_url": "https://api.github.com/users/pablogsal/events{/privacy}", "received_events_url": "https://api.github.com/users/pablogsal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 182550713, "node_id": "MDU6TGFiZWwxODI1NTA3MTM=", "url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-01T17:13:30Z", "updated_at": "2019-07-03T18:36:30Z", "closed_at": "2019-07-03T18:36:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "After `pytest-faulthandler` was integrated into the core of pytest 5.0.0 only the ini-option `faulthandler_timeout` is available, but this shadows the usage of `faulthandler-timeout`:\r\n\r\n```\r\n\u276f python -m pytest --faulthandler_timeout=10\r\n/Users/pgalindo3/.local/share/virtualenvs/venv-TdjqqweH/lib/python3.7/site-packages/_pytest/config/__init__.py:297: PytestConfigWarning: pytest-faulthandler plugin has been merged into the core, please remove it from your requirements.\r\n  name.replace(\"_\", \"-\")\r\nERROR: usage: pytest.py [options] [file_or_dir] [file_or_dir] [...]\r\npytest.py: error: unrecognized arguments: --faulthandler_timeout=10\r\n  inifile: /Users/pgalindo/github/venv/tox.ini\r\n  rootdir: /Users/pgalindo/github/venv\r\n```\r\n\r\nIf this should be an issue on https://github.com/pytest-dev/pytest I can close this and reopen one ther e :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/34", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/34/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/34/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/34", "id": 459410038, "node_id": "MDU6SXNzdWU0NTk0MTAwMzg=", "number": 34, "title": "Feature Request: Defining timeout via pytest.ini variable", "user": {"login": "2xB", "id": 31772910, "node_id": "MDQ6VXNlcjMxNzcyOTEw", "avatar_url": "https://avatars3.githubusercontent.com/u/31772910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2xB", "html_url": "https://github.com/2xB", "followers_url": "https://api.github.com/users/2xB/followers", "following_url": "https://api.github.com/users/2xB/following{/other_user}", "gists_url": "https://api.github.com/users/2xB/gists{/gist_id}", "starred_url": "https://api.github.com/users/2xB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2xB/subscriptions", "organizations_url": "https://api.github.com/users/2xB/orgs", "repos_url": "https://api.github.com/users/2xB/repos", "events_url": "https://api.github.com/users/2xB/events{/privacy}", "received_events_url": "https://api.github.com/users/2xB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 182550706, "node_id": "MDU6TGFiZWwxODI1NTA3MDY=", "url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-22T00:06:03Z", "updated_at": "2019-06-30T22:36:48Z", "closed_at": "2019-06-24T23:01:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, thank you for this lightweight package! In the following, I'd like to suggest a small feature.\r\n\r\n## Suggestion\r\nAdd a faulthandler-timeout variable to the pytest.ini parser.\r\n\r\n## Explanation\r\nCurrently, it seems as if it is not possible to specify a faulthandler timeout in a pytest.ini file in a way that it also works without having pytest-faulthandler installed. With a custom variable, this should be trivial.\r\n\r\n---\r\n\r\nNote that something similar to this suggestion is already implemented by pytest-timeout, so that might give a good blueprint.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/32", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/32/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/32/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/32", "id": 450549359, "node_id": "MDU6SXNzdWU0NTA1NDkzNTk=", "number": 32, "title": "--faulthandler-timeout on Windows/Py27 CI runs blows up", "user": {"login": "j9ac9k", "id": 646398, "node_id": "MDQ6VXNlcjY0NjM5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/646398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j9ac9k", "html_url": "https://github.com/j9ac9k", "followers_url": "https://api.github.com/users/j9ac9k/followers", "following_url": "https://api.github.com/users/j9ac9k/following{/other_user}", "gists_url": "https://api.github.com/users/j9ac9k/gists{/gist_id}", "starred_url": "https://api.github.com/users/j9ac9k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j9ac9k/subscriptions", "organizations_url": "https://api.github.com/users/j9ac9k/orgs", "repos_url": "https://api.github.com/users/j9ac9k/repos", "events_url": "https://api.github.com/users/j9ac9k/events{/privacy}", "received_events_url": "https://api.github.com/users/j9ac9k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 182550703, "node_id": "MDU6TGFiZWwxODI1NTA3MDM=", "url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-30T23:28:06Z", "updated_at": "2019-05-31T01:07:22Z", "closed_at": "2019-05-31T00:56:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue seems to be identical to #8, was thinking . about commenting there but given that was 4 years ago, I thought I would open my own issue.\r\n\r\nOn azure-pipelines I . call pytest in the following fashion\r\n\r\n```\r\n      python -m pytest -sv \\\r\n        --junitxml=junit/test-results.xml \\\r\n        --cov pyqtgraph --cov-report=xml --cov-report=html \\\r\n        --faulthandler-timeout=60\r\n```\r\n\r\nWhen I make this call on my Windows/Python2.7 runs I get the following error:\r\n\r\n```\r\n========================== Starting Command Output ===========================\r\n[command]\"C:\\Program Files\\Git\\bin\\bash.exe\" --noprofile --norc /d/a/_temp/a5488e34-446c-41fb-9365-433e149de497.sh\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\_pytest\\main.py\", line 201, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 668, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pluggy\\hooks.py\", line 311, in call_historic\r\nINTERNALERROR>     res = self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pluggy\\callers.py\", line 81, in get_result\r\nINTERNALERROR>     _reraise(*ex)  # noqa\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"C:\\Miniconda\\envs\\test-environment-2.7\\lib\\site-packages\\pytest_faulthandler.py\", line 40, in pytest_configure\r\nINTERNALERROR>     config.warn(code='C1', message=message)\r\nINTERNALERROR> AttributeError: 'Config' object has no attribute 'warn'\r\n##[error]Bash exited with code '3'.\r\n```\r\n\r\nFor all the other python/OS configurations besides PyQt4/PySide1 - Windows - Python2.7 it runs just fine.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/31", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/31/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/31/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/31", "id": 312674131, "node_id": "MDU6SXNzdWUzMTI2NzQxMzE=", "number": 31, "title": "Troubles with setuptools_scm", "user": {"login": "frenzymadness", "id": 5688939, "node_id": "MDQ6VXNlcjU2ODg5Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5688939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frenzymadness", "html_url": "https://github.com/frenzymadness", "followers_url": "https://api.github.com/users/frenzymadness/followers", "following_url": "https://api.github.com/users/frenzymadness/following{/other_user}", "gists_url": "https://api.github.com/users/frenzymadness/gists{/gist_id}", "starred_url": "https://api.github.com/users/frenzymadness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frenzymadness/subscriptions", "organizations_url": "https://api.github.com/users/frenzymadness/orgs", "repos_url": "https://api.github.com/users/frenzymadness/repos", "events_url": "https://api.github.com/users/frenzymadness/events{/privacy}", "received_events_url": "https://api.github.com/users/frenzymadness/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 182550713, "node_id": "MDU6TGFiZWwxODI1NTA3MTM=", "url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-09T20:24:05Z", "updated_at": "2018-04-09T21:19:26Z", "closed_at": "2018-04-09T21:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nBecause pytest-faulthandler uses setuptools_scm to determine package version, it's impossible to build pytest-faulthandler from source tarball downloaded from Github or PyPI.\r\n\r\nAll tries end with this error:\r\n```\r\nLookupError: setuptools-scm was unable to detect version for '/home/lbalhar/Packages/python-pytest-faulthandler/pytest-faulthandler-1.5.0'.\r\n```\r\nIf I understand how setuptools_scm works, it needs `.git` folder or `PKG-INFO` file to determine package version but tarballs from Github and PyPI don't contain these metadata.\r\nIt's obvious why `.git` folder isn't part of mentioned tarballs but it's strange why PyPI tarball doesn't contain `PKG-INFO` file when it's created automatically by `python setup.py sdist` (tested). Are you using this command to create a source tarball for PyPI?\r\n\r\nI don't know if it's a good idea to add `PKG-INFO` file directly to this project but pytest, for example, has one. Probably simplest solution here is to recreate PyPI tarball with sdist command and check whether it contains `PKG-INFO` file.\r\n\r\nWhat do you think about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/28", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/28/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/28/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/28", "id": 308375965, "node_id": "MDU6SXNzdWUzMDgzNzU5NjU=", "number": 28, "title": "PyPy support", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-25T19:06:22Z", "updated_at": "2018-03-26T11:47:27Z", "closed_at": "2018-03-26T11:47:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Installation with pip currently fails because PyPy has faulthandler included:\r\n\r\n```\r\nProcessing /home/lazka/Desktop/xxx/pytest-faulthandler\r\nRequirement already satisfied: pytest>=2.6 in /home/lazka/Desktop/pypyvenv/site-packages (from pytest-faulthandler==1.4.2.dev1+g3c4eec3)\r\nCollecting faulthandler (from pytest-faulthandler==1.4.2.dev1+g3c4eec3)\r\n  Using cached https://files.pythonhosted.org/packages/ce/8b/24cfaae65452373863a3dd6e45db7767024b5b03bd44bafc079c7de202fc/faulthandler-3.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    ERROR: faulthandler is written for CPython, it doesn't work on PyPy\r\n    faulthandler builtin PyPy since PyPy 5.5: use pypy -X faulthandler\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-xXctbf/faulthandler/\r\n```\r\n\r\nIt would be nice if it wouldn't require the faulthandler package with pypy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/22", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/22/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/22/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/22", "id": 247374637, "node_id": "MDU6SXNzdWUyNDczNzQ2Mzc=", "number": 22, "title": "Seems to break with pytest 3.2", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-02T12:37:34Z", "updated_at": "2017-11-10T22:53:11Z", "closed_at": "2017-11-10T22:53:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/_pytest/main.py\", line 106, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/_pytest/config.py\", line 923, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 750, in call_historic\r\nINTERNALERROR>     self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/jenkins/Work/miniconda/envs/_ben10-linux64-py27/lib/python2.7/site-packages/pytest_faulthandler.py\", line 24, in pytest_configure\r\nINTERNALERROR>     stderr_fd_copy = os.dup(sys.stderr.fileno())\r\nINTERNALERROR> UnsupportedOperation: fileno\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/19", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/19/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/19/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/19", "id": 189740891, "node_id": "MDU6SXNzdWUxODk3NDA4OTE=", "number": 19, "title": "'ChannelFileWrite' object has no attribute 'fileno'", "user": {"login": "mhils", "id": 1019198, "node_id": "MDQ6VXNlcjEwMTkxOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1019198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhils", "html_url": "https://github.com/mhils", "followers_url": "https://api.github.com/users/mhils/followers", "following_url": "https://api.github.com/users/mhils/following{/other_user}", "gists_url": "https://api.github.com/users/mhils/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhils/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhils/subscriptions", "organizations_url": "https://api.github.com/users/mhils/orgs", "repos_url": "https://api.github.com/users/mhils/repos", "events_url": "https://api.github.com/users/mhils/events{/privacy}", "received_events_url": "https://api.github.com/users/mhils/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-16T15:37:22Z", "updated_at": "2016-11-16T19:08:27Z", "closed_at": "2016-11-16T19:08:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm running into issues when having both pytest-faulthandler and python-xdist installed:\r\n\r\n```\r\n(venv) C:\\Users\\user\\git\\mitmproxy>py.test -f\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\_pytest\\main.py\", line 92, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\_pytest\\config.py\", line 859, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 750, in call_historic\r\nINTERNALERROR>     self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\pytest_faulthandler.py\", line 23, in pytest_configure\r\nINTERNALERROR>     stderr_fd_copy = os.dup(sys.stderr.fileno())\r\nINTERNALERROR> AttributeError: 'ChannelFileWrite' object has no attribute 'fileno'\r\n############################# waiting for changes #############################\r\n### Watching:   C:\\Users\\user\\git\\mitmproxy\r\n\r\n\r\n(venv) C:\\Users\\user\\git\\mitmproxy>pip uninstall pytest-faulthandler\r\n[...]\r\n\r\n(venv) C:\\Users\\user\\git\\mitmproxy>py.test -f\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.5.2, pytest-3.0.3, py-1.4.31, pluggy-0.4.0\r\nrootdir: C:\\Users\\user\\git\\mitmproxy, inifile: setup.cfg\r\nplugins: xdist-1.15.0, timeout-1.0.0, cov-2.4.0\r\n```\r\n\r\nAny hints on how this can be fixed? :smiley:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/14", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/14/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/14/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/14", "id": 122517112, "node_id": "MDU6SXNzdWUxMjI1MTcxMTI=", "number": 14, "title": "use pytest_exception_interact hook", "user": {"login": "flub", "id": 146720, "node_id": "MDQ6VXNlcjE0NjcyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/146720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flub", "html_url": "https://github.com/flub", "followers_url": "https://api.github.com/users/flub/followers", "following_url": "https://api.github.com/users/flub/following{/other_user}", "gists_url": "https://api.github.com/users/flub/gists{/gist_id}", "starred_url": "https://api.github.com/users/flub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flub/subscriptions", "organizations_url": "https://api.github.com/users/flub/orgs", "repos_url": "https://api.github.com/users/flub/repos", "events_url": "https://api.github.com/users/flub/events{/privacy}", "received_events_url": "https://api.github.com/users/flub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-16T14:36:54Z", "updated_at": "2015-12-16T16:33:49Z", "closed_at": "2015-12-16T16:33:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "pytest-timeout also uses this hook:\n\n```\n@pytest.hookimpl(tryfirst=True)\ndef pytest_exception_interact(node):\n    timeout_teardown(node)\n```\n\nI imagine pytest-faulthandler would want to cancel it's timeout as well for this hook.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/12", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/12/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/12/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/12", "id": 118336370, "node_id": "MDU6SXNzdWUxMTgzMzYzNzA=", "number": 12, "title": "Stop timeout when debugger is invoked", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-23T08:19:23Z", "updated_at": "2015-11-26T17:57:56Z", "closed_at": "2015-11-26T17:57:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When having a `import pdb; pdb.set_trace()` somewhere to debug something, the timeout still continues to run.\n\nIf pytest exposes hooks for that (I didn't check yet), I think the timeout should be stopped there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/11", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/11/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/11/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/11", "id": 117385616, "node_id": "MDU6SXNzdWUxMTczODU2MTY=", "number": 11, "title": "1.1.0 commit & tag missing from git", "user": {"login": "mindw", "id": 578872, "node_id": "MDQ6VXNlcjU3ODg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/578872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindw", "html_url": "https://github.com/mindw", "followers_url": "https://api.github.com/users/mindw/followers", "following_url": "https://api.github.com/users/mindw/following{/other_user}", "gists_url": "https://api.github.com/users/mindw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindw/subscriptions", "organizations_url": "https://api.github.com/users/mindw/orgs", "repos_url": "https://api.github.com/users/mindw/repos", "events_url": "https://api.github.com/users/mindw/events{/privacy}", "received_events_url": "https://api.github.com/users/mindw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-17T15:56:29Z", "updated_at": "2015-11-17T20:04:01Z", "closed_at": "2015-11-17T20:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/9", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/9/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/9/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/9", "id": 110237675, "node_id": "MDU6SXNzdWUxMTAyMzc2NzU=", "number": 9, "title": "Expose faulthandler.register", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-07T14:28:30Z", "updated_at": "2015-10-08T13:04:28Z", "closed_at": "2015-10-08T12:52:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[faulthandler.register](https://docs.python.org/3.4/library/faulthandler.html#faulthandler.register) is quite useful (and also doesn't exist on Windows, unfortunately) - it allows a user to send a signal to the process to show the traceback.\n\nI think it should be exposed by `pytest-faulthandler` as well, with a `--faulthandler-signal=SIGUSR1` argument (for example).\n\nIt then does `getattr(signal, faulthandler_signal)` and `getattr(signal, 'SIG' + faulthandler_signal)` (with `signal` being the signal module) to find out which signal the user meant. The second variant is useful as leaving off the `SIG` is an usual thing to do (e.g. when using `kill`, that works as well).\n\nThen it calls `faulthandler.register` to register output to the duplicated stdout and `faulthandler.unregister` when cleaning up.\n\nI can work on this at some point in the future, but if you feel like, please go ahead! :smile: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/8", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/8/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/8/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/8", "id": 110152486, "node_id": "MDU6SXNzdWUxMTAxNTI0ODY=", "number": 8, "title": "Handling --faulthandler-timeout on a mixed OS CI", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-07T05:00:43Z", "updated_at": "2015-11-12T06:54:15Z", "closed_at": "2015-11-12T06:54:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I just wanted to add `--faulthandler-timeout 20` to my `tox.ini`, but that broke my tests on Windows as it's not supported there.\n\nWhat's the best way to solve this? The two things I can think of is adding a `--faulthandler-maybe-timeout` or so which gets ignored on Windows (rather than being an error), or adding some hook to my `conftest.py` which adds the option if not on Windows (but `pytest_cmdline_preparse` which sounded appropriate is deprecated).\n\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/5", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/5/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/5/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/5", "id": 105964332, "node_id": "MDU6SXNzdWUxMDU5NjQzMzI=", "number": 5, "title": "Add support for dumping stack after a timeout", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-11T08:18:27Z", "updated_at": "2015-09-18T12:42:51Z", "closed_at": "2015-09-18T12:42:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I currently have a test which hangs on Windows sometimes, and I have no idea why - so I thought about adding something to pytest-faulthandler which essentially does this:\n- Add an argument `--faulthandler-timeout 60` or so - the traceback will be dumped after that many seconds.\n- Before each test, call `faulthandler.dump_traceback_later(timeout)`\n- After each test, call `faulthandler.cancel_dump_traceback_later()`\n\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/3", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/3/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-faulthandler/issues/3/events", "html_url": "https://github.com/pytest-dev/pytest-faulthandler/issues/3", "id": 70612349, "node_id": "MDU6SXNzdWU3MDYxMjM0OQ==", "number": 3, "title": "Make sure faulthandler displays crashes even after pytest is shutting down", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-24T07:27:58Z", "updated_at": "2015-04-24T07:44:39Z", "closed_at": "2015-04-24T07:44:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Crashes might happen during garbage collection of objects, well past the point `pytest_unconfigure` was called and pytest has even returned control to `__main__`.\n", "performed_via_github_app": null, "score": 1.0}]}