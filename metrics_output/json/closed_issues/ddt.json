{"total_count": 29, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/datadriventests/ddt/issues/88", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/88/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/88/events", "html_url": "https://github.com/datadriventests/ddt/issues/88", "id": 623388774, "node_id": "MDU6SXNzdWU2MjMzODg3NzQ=", "number": 88, "title": "1.4.1: test suite is failing", "user": {"login": "kloczek", "id": 31284574, "node_id": "MDQ6VXNlcjMxMjg0NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/31284574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kloczek", "html_url": "https://github.com/kloczek", "followers_url": "https://api.github.com/users/kloczek/followers", "following_url": "https://api.github.com/users/kloczek/following{/other_user}", "gists_url": "https://api.github.com/users/kloczek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kloczek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kloczek/subscriptions", "organizations_url": "https://api.github.com/users/kloczek/orgs", "repos_url": "https://api.github.com/users/kloczek/repos", "events_url": "https://api.github.com/users/kloczek/events{/privacy}", "received_events_url": "https://api.github.com/users/kloczek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-22T17:57:23Z", "updated_at": "2020-05-24T06:12:48Z", "closed_at": "2020-05-24T06:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n+ cd ddt-1.4.1\r\n+ PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-ddt-1.4.1-2.fc33.x86_64/usr/lib/python3.8/site-packages\r\n+ nosetests --verbose\r\ntest_dicts_extracted_into_kwargs_1 (test.test_example.FooTestCase) ... ok\r\ntest_dicts_extracted_into_kwargs_2 (test.test_example.FooTestCase) ... ok\r\nMissing args with value {0} and {1} ... ok\r\nMissing args with value {0} and {1} ... ok\r\nMissing args with value {0} and {1} ... ok\r\nMissing args with value {0} and {1} ... ok\r\nMissing kargs with value {value} {value2} ... ok\r\nMissing kargs with value {value} {value2} ... ok\r\nMissing kargs with value {value} {value2} ... ok\r\nMissing kargs with value {value} {value2} ... ok\r\ntest_file_data_json_dict_1_unsorted_list ... ok\r\ntest_file_data_json_dict_2_sorted_list ... ok\r\ntest_file_data_json_dict_dict_1_positive_integer_range ... ok\r\ntest_file_data_json_dict_dict_2_negative_integer_range ... ok\r\ntest_file_data_json_dict_dict_3_positive_real_range ... ok\r\ntest_file_data_json_dict_dict_4_negative_real_range ... ok\r\ntest_file_data_json_list_1_Hello ... ok\r\ntest_file_data_json_list_2_Goodbye ... ok\r\ntest_file_data_yaml_dict_1_unsorted_list ... ok\r\ntest_file_data_yaml_dict_2_sorted_list ... ok\r\ntest_file_data_yaml_dict_dict_1_positive_integer_range ... ok\r\ntest_file_data_yaml_dict_dict_2_negative_integer_range ... ok\r\ntest_file_data_yaml_dict_dict_3_positive_real_range ... ok\r\ntest_file_data_yaml_dict_dict_4_negative_real_range ... ok\r\ntest_file_data_yaml_list_1_Hello ... ok\r\ntest_file_data_yaml_list_2_Goodbye ... ok\r\ntest_greater_1_test_2_greater_than_1 (test.test_example.FooTestCase) ... ok\r\ntest_greater_2_test_10_greater_than_5 (test.test_example.FooTestCase) ... ok\r\nTest docstring 1 ... ok\r\nTest docstring 2 ... ok\r\ntest_larger_than_two_1_3 (test.test_example.FooTestCase) ... ok\r\ntest_larger_than_two_2_4 (test.test_example.FooTestCase) ... ok\r\ntest_larger_than_two_3_12 (test.test_example.FooTestCase) ... ok\r\ntest_larger_than_two_4_23 (test.test_example.FooTestCase) ... ok\r\nLarger than two with value 3 ... ok\r\nLarger than two with value 4 ... ok\r\nLarger than two with value 12 ... ok\r\nLarger than two with value 23 ... ok\r\ntest_list_extracted_into_arguments_1__3__2_ (test.test_example.FooTestCase) ... ok\r\ntest_list_extracted_into_arguments_2__4__3_ (test.test_example.FooTestCase) ... ok\r\ntest_list_extracted_into_arguments_3__5__3_ (test.test_example.FooTestCase) ... ok\r\nExtract into args with first value 3 and second value 2 ... ok\r\nExtract into args with first value 4 and second value 3 ... ok\r\nExtract into args with first value 5 and second value 3 ... ok\r\ntest_not_larger_than_two_1_1 (test.test_example.FooTestCase) ... ok\r\ntest_not_larger_than_two_2__3 (test.test_example.FooTestCase) ... ok\r\ntest_not_larger_than_two_3_2 (test.test_example.FooTestCase) ... ok\r\ntest_not_larger_than_two_4_0 (test.test_example.FooTestCase) ... ok\r\ntest_tuples_extracted_into_arguments_1__3__2_ (test.test_example.FooTestCase) ... ok\r\ntest_tuples_extracted_into_arguments_2__4__3_ (test.test_example.FooTestCase) ... ok\r\ntest_tuples_extracted_into_arguments_3__5__3_ (test.test_example.FooTestCase) ... ok\r\ntest_undecorated (test.test_example.FooTestCase) ... ok\r\ntest_unicode_1_ascii (test.test_example.FooTestCase) ... ok\r\ntest_unicode_2_non_ascii__ (test.test_example.FooTestCase) ... ok\r\ntest_custom_yaml_loader_10_python_float ... ok\r\ntest_custom_yaml_loader_1_bool ... ok\r\ntest_custom_yaml_loader_2_str ... ok\r\ntest_custom_yaml_loader_3_int ... ok\r\ntest_custom_yaml_loader_4_float ... ok\r\ntest_custom_yaml_loader_5_python_list ... ok\r\ntest_custom_yaml_loader_6_python_dict ... ok\r\ntest_custom_yaml_loader_7_my_class ... ok\r\ntest_custom_yaml_loader_8_python_str ... ok\r\ntest_custom_yaml_loader_9_python_int ... ok\r\nFailure: TypeError (Cannot extend enumerations) ... ERROR\r\nTest the ``data`` method decorator ... ok\r\nTest the ``file_data`` method decorator ... ok\r\nTest the ``ddt`` class decorator ... ok\r\nTest the ``ddt`` class decorator with ``INDEX_ONLY`` test name format ... ok\r\nTest the ``ddt`` class decorator with ``DEFAULT`` test name format ... ok\r\nTest that the ``file_data`` decorator creates two tests ... ok\r\nTest that ``file_data`` creates tests with the correct name ... ok\r\nTest that data is fed to the decorated tests ... ok\r\nTest that data is fed to the decorated tests from a file ... ok\r\nTest that a ValueError is raised when JSON file is missing ... ok\r\nTest that a ValueError is raised when YAML file is missing ... ok\r\nTest the ``__name__`` attribute handling of ``data`` items with ``ddt`` ... ok\r\nTest the ``__doc__`` attribute handling of ``data`` items with ``ddt`` ... ok\r\nTest that unicode strings are converted to function names correctly ... ok\r\nTest not using value if non-trivial arguments ... ok\r\nTest that data is fed to the decorated tests ... ok\r\nTest that YAML files containing python tags throw no exception if an ... ok\r\nTest that YAML files are not loaded if YAML is not installed. ... ok\r\n\r\n======================================================================\r\nERROR: Failure: TypeError (Cannot extend enumerations)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3.8/site-packages/nose/loader.py\", line 522, in makeTest\r\n    return self._makeTest(obj, parent)\r\n  File \"/usr/lib/python3.8/site-packages/nose/loader.py\", line 567, in _makeTest\r\n    obj = transplant_class(obj, parent.__name__)\r\n  File \"/usr/lib/python3.8/site-packages/nose/util.py\", line 642, in transplant_class\r\n    class C(cls):\r\n  File \"/usr/lib64/python3.8/enum.py\", line 124, in __prepare__\r\n    member_type, first_enum = metacls._get_mixins_(bases)\r\n  File \"/usr/lib64/python3.8/enum.py\", line 502, in _get_mixins_\r\n    raise TypeError(\"Cannot extend enumerations\")\r\nTypeError: Cannot extend enumerations\r\n\r\n----------------------------------------------------------------------\r\nRan 83 tests in 0.122s\r\n\r\nFAILED (errors=1)\r\nerror: Bad exit status from /var/tmp/rpm-tmp.Doogsq (%check)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/83", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/83/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/83/events", "html_url": "https://github.com/datadriventests/ddt/issues/83", "id": 613969406, "node_id": "MDU6SXNzdWU2MTM5Njk0MDY=", "number": 83, "title": "New release causes error on import", "user": {"login": "mtreinish", "id": 2447371, "node_id": "MDQ6VXNlcjI0NDczNzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2447371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtreinish", "html_url": "https://github.com/mtreinish", "followers_url": "https://api.github.com/users/mtreinish/followers", "following_url": "https://api.github.com/users/mtreinish/following{/other_user}", "gists_url": "https://api.github.com/users/mtreinish/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtreinish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtreinish/subscriptions", "organizations_url": "https://api.github.com/users/mtreinish/orgs", "repos_url": "https://api.github.com/users/mtreinish/repos", "events_url": "https://api.github.com/users/mtreinish/events{/privacy}", "received_events_url": "https://api.github.com/users/mtreinish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1126948046, "node_id": "MDU6TGFiZWwxMTI2OTQ4MDQ2", "url": "https://api.github.com/repos/datadriventests/ddt/labels/bug", "name": "bug", "color": "99221a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-05-07T11:06:53Z", "updated_at": "2020-05-15T02:49:46Z", "closed_at": "2020-05-15T02:49:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running test suites locally with the new 1.4.0 release a traceback is raised on import because of the use `nose`. For example:\r\n\r\n```\r\nFailed to import test module: test.python\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/3.7.7/x64/lib/python3.7/unittest/loader.py\", line 470, in _find_test_path\r\n    package = self._get_module_from_name(name)\r\n  File \"/opt/hostedtoolcache/Python/3.7.7/x64/lib/python3.7/unittest/loader.py\", line 377, in _get_module_from_name\r\n    __import__(name)\r\n  File \"/home/vsts/work/1/s/test/__init__.py\", line 17, in <module>\r\n    from ddt import data, unpack\r\n  File \"/opt/hostedtoolcache/Python/3.7.7/x64/lib/python3.7/site-packages/ddt.py\", line 15, in <module>\r\n    from nose.tools import nottest\r\nModuleNotFoundError: No module named 'nose'\r\n```\r\n\r\nThis is in a stdlib unittest test suite. `nose` is not listed in the requirements list for the new ddt package on pypi so this causes a failure since nose will not necessarily be installed. That being said nose is an inactive project and the first section in their docs suggest not using it: https://nose.readthedocs.io/en/latest/#note-to-users so it might be better to remove this import.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/80", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/80/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/80/events", "html_url": "https://github.com/datadriventests/ddt/issues/80", "id": 596984283, "node_id": "MDU6SXNzdWU1OTY5ODQyODM=", "number": 80, "title": "Index only test names", "user": {"login": "zorchan", "id": 56849432, "node_id": "MDQ6VXNlcjU2ODQ5NDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/56849432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zorchan", "html_url": "https://github.com/zorchan", "followers_url": "https://api.github.com/users/zorchan/followers", "following_url": "https://api.github.com/users/zorchan/following{/other_user}", "gists_url": "https://api.github.com/users/zorchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/zorchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zorchan/subscriptions", "organizations_url": "https://api.github.com/users/zorchan/orgs", "repos_url": "https://api.github.com/users/zorchan/repos", "events_url": "https://api.github.com/users/zorchan/events{/privacy}", "received_events_url": "https://api.github.com/users/zorchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T02:54:29Z", "updated_at": "2020-05-07T02:24:56Z", "closed_at": "2020-05-07T02:24:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, in case I would like to just use the index for a test name (which is the code path when `is_trivial()` returns False), what would be the suggested way to do that?\r\n\r\nIs the proposal from this issue https://github.com/datadriventests/ddt/issues/47 in the right direction?  (i.e. using kwargs)\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/67", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/67/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/67/events", "html_url": "https://github.com/datadriventests/ddt/issues/67", "id": 394833302, "node_id": "MDU6SXNzdWUzOTQ4MzMzMDI=", "number": 67, "title": "tuple() -> empty tuple ... ok", "user": {"login": "fondamenti-dev", "id": 43293215, "node_id": "MDQ6VXNlcjQzMjkzMjE1", "avatar_url": "https://avatars3.githubusercontent.com/u/43293215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fondamenti-dev", "html_url": "https://github.com/fondamenti-dev", "followers_url": "https://api.github.com/users/fondamenti-dev/followers", "following_url": "https://api.github.com/users/fondamenti-dev/following{/other_user}", "gists_url": "https://api.github.com/users/fondamenti-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/fondamenti-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fondamenti-dev/subscriptions", "organizations_url": "https://api.github.com/users/fondamenti-dev/orgs", "repos_url": "https://api.github.com/users/fondamenti-dev/repos", "events_url": "https://api.github.com/users/fondamenti-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/fondamenti-dev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1126948046, "node_id": "MDU6TGFiZWwxMTI2OTQ4MDQ2", "url": "https://api.github.com/repos/datadriventests/ddt/labels/bug", "name": "bug", "color": "99221a", "default": true, "description": ""}, {"id": 1182812833, "node_id": "MDU6TGFiZWwxMTgyODEyODMz", "url": "https://api.github.com/repos/datadriventests/ddt/labels/duplicate", "name": "duplicate", "color": "5470bf", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/datadriventests/ddt/milestones/1", "html_url": "https://github.com/datadriventests/ddt/milestone/1", "labels_url": "https://api.github.com/repos/datadriventests/ddt/milestones/1/labels", "id": 3820174, "node_id": "MDk6TWlsZXN0b25lMzgyMDE3NA==", "number": 1, "title": "1.2.1", "description": "", "creator": {"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2018-11-14T05:23:30Z", "updated_at": "2019-02-24T07:29:27Z", "due_on": null, "closed_at": "2019-02-24T07:29:27Z"}, "comments": 2, "created_at": "2018-12-29T23:37:41Z", "updated_at": "2019-02-24T07:28:56Z", "closed_at": "2019-02-24T07:28:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use ddt and @unpack I get the message\r\n\"tuple() -> empty tuple ... ok\"\r\nIs there a way to avoid it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/65", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/65/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/65/events", "html_url": "https://github.com/datadriventests/ddt/issues/65", "id": 353036366, "node_id": "MDU6SXNzdWUzNTMwMzYzNjY=", "number": 65, "title": "Generation of test case names fails in v1.2.0", "user": {"login": "jdiazdelrio", "id": 31512704, "node_id": "MDQ6VXNlcjMxNTEyNzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/31512704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdiazdelrio", "html_url": "https://github.com/jdiazdelrio", "followers_url": "https://api.github.com/users/jdiazdelrio/followers", "following_url": "https://api.github.com/users/jdiazdelrio/following{/other_user}", "gists_url": "https://api.github.com/users/jdiazdelrio/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdiazdelrio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdiazdelrio/subscriptions", "organizations_url": "https://api.github.com/users/jdiazdelrio/orgs", "repos_url": "https://api.github.com/users/jdiazdelrio/repos", "events_url": "https://api.github.com/users/jdiazdelrio/events{/privacy}", "received_events_url": "https://api.github.com/users/jdiazdelrio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1126948046, "node_id": "MDU6TGFiZWwxMTI2OTQ4MDQ2", "url": "https://api.github.com/repos/datadriventests/ddt/labels/bug", "name": "bug", "color": "99221a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/datadriventests/ddt/milestones/1", "html_url": "https://github.com/datadriventests/ddt/milestone/1", "labels_url": "https://api.github.com/repos/datadriventests/ddt/milestones/1/labels", "id": 3820174, "node_id": "MDk6TWlsZXN0b25lMzgyMDE3NA==", "number": 1, "title": "1.2.1", "description": "", "creator": {"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2018-11-14T05:23:30Z", "updated_at": "2019-02-24T07:29:27Z", "due_on": null, "closed_at": "2019-02-24T07:29:27Z"}, "comments": 7, "created_at": "2018-08-22T16:43:14Z", "updated_at": "2019-02-24T11:19:51Z", "closed_at": "2019-02-24T07:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\ntoday, I have upgraded my DDT package to **v1.2.0** from **v1.1.3** and I have hit an issue when trying to run:\r\n\r\n> nosetests -v test_convert.py\r\n\r\n**In version 1.1.3** I used to get:\r\n\r\n> test_01_format_code_1 (test_convert.TestConvert) ... ok\r\n\r\nwhile with **version 1.2.0** I get:\r\n\r\n> dict() -> new empty dictionary ... ok\r\n\r\nI am using python v3.5.6 on a virtual environment. The test case looks like:\r\n\r\n```\r\nimport unittest\r\nfrom ddt import ddt, data, unpack\r\n\r\n@ddt\r\nclass TestConvert(unittest.TestCase):\r\n\r\n      @data({'title': 'Case 1: Nothing to do',\r\n             'str_in': 'Hello world.',\r\n             'str_out': 'Hello world.'})\r\n      @unpack\r\n      def test_01_format_code(self, title, str_in, str_out)\r\n            # [ my code ]\r\n            pass\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/64", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/64/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/64/events", "html_url": "https://github.com/datadriventests/ddt/issues/64", "id": 351640411, "node_id": "MDU6SXNzdWUzNTE2NDA0MTE=", "number": 64, "title": "function ddt ", "user": {"login": "avvw", "id": 12420546, "node_id": "MDQ6VXNlcjEyNDIwNTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/12420546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avvw", "html_url": "https://github.com/avvw", "followers_url": "https://api.github.com/users/avvw/followers", "following_url": "https://api.github.com/users/avvw/following{/other_user}", "gists_url": "https://api.github.com/users/avvw/gists{/gist_id}", "starred_url": "https://api.github.com/users/avvw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avvw/subscriptions", "organizations_url": "https://api.github.com/users/avvw/orgs", "repos_url": "https://api.github.com/users/avvw/repos", "events_url": "https://api.github.com/users/avvw/events{/privacy}", "received_events_url": "https://api.github.com/users/avvw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1126948046, "node_id": "MDU6TGFiZWwxMTI2OTQ4MDQ2", "url": "https://api.github.com/repos/datadriventests/ddt/labels/bug", "name": "bug", "color": "99221a", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datadriventests/ddt/milestones/1", "html_url": "https://github.com/datadriventests/ddt/milestone/1", "labels_url": "https://api.github.com/repos/datadriventests/ddt/milestones/1/labels", "id": 3820174, "node_id": "MDk6TWlsZXN0b25lMzgyMDE3NA==", "number": 1, "title": "1.2.1", "description": "", "creator": {"login": "wswld", "id": 2890146, "node_id": "MDQ6VXNlcjI4OTAxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2890146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswld", "html_url": "https://github.com/wswld", "followers_url": "https://api.github.com/users/wswld/followers", "following_url": "https://api.github.com/users/wswld/following{/other_user}", "gists_url": "https://api.github.com/users/wswld/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswld/subscriptions", "organizations_url": "https://api.github.com/users/wswld/orgs", "repos_url": "https://api.github.com/users/wswld/repos", "events_url": "https://api.github.com/users/wswld/events{/privacy}", "received_events_url": "https://api.github.com/users/wswld/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2018-11-14T05:23:30Z", "updated_at": "2019-02-24T07:29:27Z", "due_on": null, "closed_at": "2019-02-24T07:29:27Z"}, "comments": 2, "created_at": "2018-08-17T15:32:52Z", "updated_at": "2019-02-24T07:09:42Z", "closed_at": "2019-02-24T07:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "function ddt    test_docstring = getattr(v, \"__doc__\", None)\uff0c\r\nwhen  v has attribte\uff0c return __doc__ of  v    So that desc of report  is __doc__ of v\uff08list  tuple dict\uff09 ,not __doc__ of  testing function", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/60", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/60/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/60/events", "html_url": "https://github.com/datadriventests/ddt/issues/60", "id": 313251163, "node_id": "MDU6SXNzdWUzMTMyNTExNjM=", "number": 60, "title": "Is it possible to nest @data?", "user": {"login": "xaruman", "id": 24607720, "node_id": "MDQ6VXNlcjI0NjA3NzIw", "avatar_url": "https://avatars2.githubusercontent.com/u/24607720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xaruman", "html_url": "https://github.com/xaruman", "followers_url": "https://api.github.com/users/xaruman/followers", "following_url": "https://api.github.com/users/xaruman/following{/other_user}", "gists_url": "https://api.github.com/users/xaruman/gists{/gist_id}", "starred_url": "https://api.github.com/users/xaruman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xaruman/subscriptions", "organizations_url": "https://api.github.com/users/xaruman/orgs", "repos_url": "https://api.github.com/users/xaruman/repos", "events_url": "https://api.github.com/users/xaruman/events{/privacy}", "received_events_url": "https://api.github.com/users/xaruman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-11T09:50:29Z", "updated_at": "2018-04-11T10:04:55Z", "closed_at": "2018-04-11T10:04:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI'm in the need of having nested data in my current tests. So basically I was looking for a way to nest \"for\" iteration over provided @data. Is this possible? how? \r\nI could create a for in my test itself, but I would lose proper test map in statistics. I could create a better log system to being able to distinguish among which specific test failed, but if it's possible to nest @data, that would help me a lot.\r\n\r\nThanks a lot for you help and attention.\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/59", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/59/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/59/events", "html_url": "https://github.com/datadriventests/ddt/issues/59", "id": 302804105, "node_id": "MDU6SXNzdWUzMDI4MDQxMDU=", "number": 59, "title": "Looking for a project maintainer", "user": {"login": "txels", "id": 874958, "node_id": "MDQ6VXNlcjg3NDk1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/874958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txels", "html_url": "https://github.com/txels", "followers_url": "https://api.github.com/users/txels/followers", "following_url": "https://api.github.com/users/txels/following{/other_user}", "gists_url": "https://api.github.com/users/txels/gists{/gist_id}", "starred_url": "https://api.github.com/users/txels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txels/subscriptions", "organizations_url": "https://api.github.com/users/txels/orgs", "repos_url": "https://api.github.com/users/txels/repos", "events_url": "https://api.github.com/users/txels/events{/privacy}", "received_events_url": "https://api.github.com/users/txels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 858188315, "node_id": "MDU6TGFiZWw4NTgxODgzMTU=", "url": "https://api.github.com/repos/datadriventests/ddt/labels/help-wanted", "name": "help-wanted", "color": "0e8a16", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-03-06T17:56:02Z", "updated_at": "2018-09-11T21:29:56Z", "closed_at": "2018-04-11T22:30:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I am officially dropping support for `ddt`. It's had its time, but now that I've transitioned to using py.test in my projects, it brings me no value and no longer use it.\r\n\r\nIf you however still see value in it and would like to step up as a maintainer, let me know and we'll manage a transfer of ownership.\r\n\r\nPlease comment on this issue if you're interested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/55", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/55/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/55/events", "html_url": "https://github.com/datadriventests/ddt/issues/55", "id": 266432310, "node_id": "MDU6SXNzdWUyNjY0MzIzMTA=", "number": 55, "title": "I add more than 10 data in ddt.data(), but it excuted in wrong order.", "user": {"login": "YingRuoyuan", "id": 10540065, "node_id": "MDQ6VXNlcjEwNTQwMDY1", "avatar_url": "https://avatars2.githubusercontent.com/u/10540065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YingRuoyuan", "html_url": "https://github.com/YingRuoyuan", "followers_url": "https://api.github.com/users/YingRuoyuan/followers", "following_url": "https://api.github.com/users/YingRuoyuan/following{/other_user}", "gists_url": "https://api.github.com/users/YingRuoyuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YingRuoyuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YingRuoyuan/subscriptions", "organizations_url": "https://api.github.com/users/YingRuoyuan/orgs", "repos_url": "https://api.github.com/users/YingRuoyuan/repos", "events_url": "https://api.github.com/users/YingRuoyuan/events{/privacy}", "received_events_url": "https://api.github.com/users/YingRuoyuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-18T09:58:16Z", "updated_at": "2018-04-11T22:21:32Z", "closed_at": "2018-04-11T22:21:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n# coding:utf-8\r\nimport ddt\r\nimport unittest\r\n\r\n@ddt.ddt\r\nclass Test(unittest.TestCase):\r\n    def setUp(self):\r\n        print(\"Start!\")\r\n \r\n    def tearDown(self):\r\n        print(\"end!\")\r\n\r\n    @ddt.data(1,2,3,4,5,6,7,8,9,10,11,12)\r\n    def test_ddt10(self, data):\r\n        print(data)\r\n\r\nif __name__ == \"__main__\":\r\n    unittest.main()\r\n```\r\nwhen I run this script, it returns \uff1a\r\n```python\r\nStart!\r\n10\r\nend!\r\n.Start!\r\n11\r\nend!\r\n.Start!\r\n12\r\nend!\r\n.Start!\r\n1\r\nend!\r\n.Start!\r\n2\r\nend!\r\n.Start!\r\n3\r\nend!\r\n.Start!\r\n4\r\nend!\r\n.Start!\r\n5\r\nend!\r\n.Start!\r\n6\r\nend!\r\n.Start!\r\n7\r\nend!\r\n.Start!\r\n8\r\nend!\r\n.Start!\r\n9\r\nend!\r\n```\r\nI wanna the data excute with the normal order. Could you help to resolve this issue? thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/52", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/52/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/52/events", "html_url": "https://github.com/datadriventests/ddt/issues/52", "id": 246188333, "node_id": "MDU6SXNzdWUyNDYxODgzMzM=", "number": 52, "title": "Mock objects and DDT. Just question ", "user": {"login": "dmytrostriletskyi", "id": 22666467, "node_id": "MDQ6VXNlcjIyNjY2NDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/22666467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmytrostriletskyi", "html_url": "https://github.com/dmytrostriletskyi", "followers_url": "https://api.github.com/users/dmytrostriletskyi/followers", "following_url": "https://api.github.com/users/dmytrostriletskyi/following{/other_user}", "gists_url": "https://api.github.com/users/dmytrostriletskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmytrostriletskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmytrostriletskyi/subscriptions", "organizations_url": "https://api.github.com/users/dmytrostriletskyi/orgs", "repos_url": "https://api.github.com/users/dmytrostriletskyi/repos", "events_url": "https://api.github.com/users/dmytrostriletskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/dmytrostriletskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-27T22:31:36Z", "updated_at": "2018-04-06T17:20:50Z", "closed_at": "2017-07-30T23:07:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do I have clean ways to use [mock patch](https://docs.python.org/3/library/unittest.mock.html#the-patchers) with `DDT` (with `@data` or smth else)? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/50", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/50/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/50/events", "html_url": "https://github.com/datadriventests/ddt/issues/50", "id": 243903211, "node_id": "MDU6SXNzdWUyNDM5MDMyMTE=", "number": 50, "title": "Error pushing new branch", "user": {"login": "palakpsheth", "id": 13122115, "node_id": "MDQ6VXNlcjEzMTIyMTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13122115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palakpsheth", "html_url": "https://github.com/palakpsheth", "followers_url": "https://api.github.com/users/palakpsheth/followers", "following_url": "https://api.github.com/users/palakpsheth/following{/other_user}", "gists_url": "https://api.github.com/users/palakpsheth/gists{/gist_id}", "starred_url": "https://api.github.com/users/palakpsheth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palakpsheth/subscriptions", "organizations_url": "https://api.github.com/users/palakpsheth/orgs", "repos_url": "https://api.github.com/users/palakpsheth/repos", "events_url": "https://api.github.com/users/palakpsheth/events{/privacy}", "received_events_url": "https://api.github.com/users/palakpsheth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-19T02:16:03Z", "updated_at": "2018-04-06T17:20:50Z", "closed_at": "2017-07-19T02:25:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to push a new branch in order to submit a PR but am getting permission denied...thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/48", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/48/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/48/events", "html_url": "https://github.com/datadriventests/ddt/issues/48", "id": 208105350, "node_id": "MDU6SXNzdWUyMDgxMDUzNTA=", "number": 48, "title": "Question about using @idata", "user": {"login": "balderman1", "id": 12879833, "node_id": "MDQ6VXNlcjEyODc5ODMz", "avatar_url": "https://avatars1.githubusercontent.com/u/12879833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balderman1", "html_url": "https://github.com/balderman1", "followers_url": "https://api.github.com/users/balderman1/followers", "following_url": "https://api.github.com/users/balderman1/following{/other_user}", "gists_url": "https://api.github.com/users/balderman1/gists{/gist_id}", "starred_url": "https://api.github.com/users/balderman1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balderman1/subscriptions", "organizations_url": "https://api.github.com/users/balderman1/orgs", "repos_url": "https://api.github.com/users/balderman1/repos", "events_url": "https://api.github.com/users/balderman1/events{/privacy}", "received_events_url": "https://api.github.com/users/balderman1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 898761444, "node_id": "MDU6TGFiZWw4OTg3NjE0NDQ=", "url": "https://api.github.com/repos/datadriventests/ddt/labels/won't%20fix", "name": "won't fix", "color": "eaa098", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-16T12:17:49Z", "updated_at": "2018-04-11T22:33:06Z", "closed_at": "2018-04-11T22:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a test and I want to decorate it with @idata.\r\nThe iterable I want to use as the idata argument is member in my class.\r\n\r\n```\r\n@ddt\r\nclass TestRunnable(BaseTest):\r\n    def __init__(self, *args, **kwargs):\r\n        super(TestRunnable, self).__init__(*args, **kwargs)\r\n        self.lst = []\r\n    @idata(self.lst)\r\n   def test_something(self):\r\n        pass\r\n```\r\nIs it possible to do it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/47", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/47/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/47/events", "html_url": "https://github.com/datadriventests/ddt/issues/47", "id": 198377649, "node_id": "MDU6SXNzdWUxOTgzNzc2NDk=", "number": 47, "title": "@ddt to allow noindex test names", "user": {"login": "mamolli", "id": 2735925, "node_id": "MDQ6VXNlcjI3MzU5MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2735925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mamolli", "html_url": "https://github.com/mamolli", "followers_url": "https://api.github.com/users/mamolli/followers", "following_url": "https://api.github.com/users/mamolli/following{/other_user}", "gists_url": "https://api.github.com/users/mamolli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mamolli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mamolli/subscriptions", "organizations_url": "https://api.github.com/users/mamolli/orgs", "repos_url": "https://api.github.com/users/mamolli/repos", "events_url": "https://api.github.com/users/mamolli/events{/privacy}", "received_events_url": "https://api.github.com/users/mamolli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-02T20:25:22Z", "updated_at": "2018-04-13T07:45:34Z", "closed_at": "2018-04-13T07:45:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "As in subject. I would like to add parameter to @ddt decorator.\r\n\r\n`@ddt(noindex=True)`\r\n\r\nBehaviour would be fairly straightforward. It would prevent indexing names.\r\nThus resulting in naming generated functions with only name and data.\r\nMy use case is that I need more control over namings as I use test results in another system which is very difficult since names loose uniqueness. I can guarantee uniqueness of data fed through decorator.\r\n\r\nIdeal aproach would probably be poviding in parameter a template string to be interpolated during creation of test names, but I am not certain if that effort would be well received.\r\nUnderneath more codified explanation.\r\n\r\n```\r\n@unpack\r\n@data([('a', 'b'), ('c', 'd')])\r\ndef test_data(self, val1, val2)\r\n```\r\n\r\nwould generate names:\r\n```\r\ntest_data_a_b\r\ntest_data_c_d\r\n\r\n```\r\ninstead of:\r\n```\r\ntest_data_1_a_b\r\ntest_data_2_c_d\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/44", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/44/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/44/events", "html_url": "https://github.com/datadriventests/ddt/issues/44", "id": 157931083, "node_id": "MDU6SXNzdWUxNTc5MzEwODM=", "number": 44, "title": "Brainstorming: What do you want in ddt v2.0.0?", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-06-01T15:06:17Z", "updated_at": "2019-07-25T04:42:48Z", "closed_at": "2017-07-05T20:47:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that @txels had expressed the desire to ditch backwards compatibility and give `ddt` another shot to get a more powerful platform on the other side. Hence, with the intent of sparking discussion, I write this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/39", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/39/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/39/events", "html_url": "https://github.com/datadriventests/ddt/issues/39", "id": 125890321, "node_id": "MDU6SXNzdWUxMjU4OTAzMjE=", "number": 39, "title": "Patching (mock) fails if custom patch value is provided with mock.patch/mock.patch.object", "user": {"login": "debayanray", "id": 8639037, "node_id": "MDQ6VXNlcjg2MzkwMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8639037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debayanray", "html_url": "https://github.com/debayanray", "followers_url": "https://api.github.com/users/debayanray/followers", "following_url": "https://api.github.com/users/debayanray/following{/other_user}", "gists_url": "https://api.github.com/users/debayanray/gists{/gist_id}", "starred_url": "https://api.github.com/users/debayanray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debayanray/subscriptions", "organizations_url": "https://api.github.com/users/debayanray/orgs", "repos_url": "https://api.github.com/users/debayanray/repos", "events_url": "https://api.github.com/users/debayanray/events{/privacy}", "received_events_url": "https://api.github.com/users/debayanray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-11T07:53:21Z", "updated_at": "2018-04-06T17:20:49Z", "closed_at": "2016-01-11T08:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running a test case under a test class as:\n\n```\n@ddt.ddt\nclass IloCommonModuleTestCase(unittest.TestCase):\n\n    @mock.patch.object(time, 'sleep', lambda x: None)\n    def test_case1(self, sleep_mock):\n        pass\n\n    @ddt.data(\n          ('data1_to_test_case'),\n          ('data2_to_test_case'),\n          ...,\n     )\n    @ddt.unpack\n    def test_case2(self, test_sample_data):\n        pass\n```\n\nwherein I have other test cases which uses ddt.data and ddt.unpack as depicted. Now when I run the test cases it fails in the test_case1 and I believe this i something to do with ddt:\n\n```\nTraceback (most recent call last):\n  File \".../local/lib/python2.7/site-packages/mock/mock.py\", line 1305, in patched\n    return func(*args, **keywargs)\nTypeError: test_case1() takes exactly 2 arguments (1 given)\n```\n\nBut if I remove the custom value in the patching decorator, then it works fine.\n\n```\n    @mock.patch.object(time, 'sleep')\n    def test_case1(self, sleep_mock):\n        pass\n```\n\nHence, I feel there's something which is missing, like you can provide custom value to patch decorators with mock, while the class under test gets decorated by `@ddt.ddt` Thank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/38", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/38/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/38/events", "html_url": "https://github.com/datadriventests/ddt/issues/38", "id": 117859291, "node_id": "MDU6SXNzdWUxMTc4NTkyOTE=", "number": 38, "title": "Breaking behavior in latest release (1.0.1)", "user": {"login": "Kuwagata", "id": 794740, "node_id": "MDQ6VXNlcjc5NDc0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/794740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kuwagata", "html_url": "https://github.com/Kuwagata", "followers_url": "https://api.github.com/users/Kuwagata/followers", "following_url": "https://api.github.com/users/Kuwagata/following{/other_user}", "gists_url": "https://api.github.com/users/Kuwagata/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kuwagata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kuwagata/subscriptions", "organizations_url": "https://api.github.com/users/Kuwagata/orgs", "repos_url": "https://api.github.com/users/Kuwagata/repos", "events_url": "https://api.github.com/users/Kuwagata/events{/privacy}", "received_events_url": "https://api.github.com/users/Kuwagata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-11-19T17:05:59Z", "updated_at": "2018-08-29T19:46:53Z", "closed_at": "2018-08-29T19:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "A change in the latest release of ddt (#22 included in 1.0.1) has seemingly introduced breaking behavior for wrapped tests expecting a dictionary object when receiving test data, as exemplified below:\n\ntest_data.json\n\n``` json\n{\n  \"test_name\": {\n    \"arg_one\": \"test1\",\n    \"arg_two\": \"test2\",\n    \"arg_three\": \"test3\"\n  }\n}\n```\n\nOriginal test code:\n\n``` python\n@ddt.file_data('test_data.json')\ndef test_something(inputs):\n    arg_one = inputs[\"arg_one\"]\n    arg_two = inputs[\"arg_two\"]\n    arg_three = inputs[\"arg_three\"]\n    # Perform tests here\n    pass\n```\n\nNew test code:\n\n``` python\n@ddt.file_data('test_data.json')\ndef test_something(arg_one, arg_two, arg_three):\n    # Perform tests here\n    pass\n```\n\nSince this behavior appears to be non-configurable and backward-incompatible, this seems more like a [major version change](http://semver.org/) rather than a simple patch.  Can this change be reverted at least for the time being?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/35", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/35/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/35/events", "html_url": "https://github.com/datadriventests/ddt/issues/35", "id": 117616278, "node_id": "MDU6SXNzdWUxMTc2MTYyNzg=", "number": 35, "title": "Different test names with different runs", "user": {"login": "redixin", "id": 103634, "node_id": "MDQ6VXNlcjEwMzYzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/103634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redixin", "html_url": "https://github.com/redixin", "followers_url": "https://api.github.com/users/redixin/followers", "following_url": "https://api.github.com/users/redixin/following{/other_user}", "gists_url": "https://api.github.com/users/redixin/gists{/gist_id}", "starred_url": "https://api.github.com/users/redixin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redixin/subscriptions", "organizations_url": "https://api.github.com/users/redixin/orgs", "repos_url": "https://api.github.com/users/redixin/repos", "events_url": "https://api.github.com/users/redixin/events{/privacy}", "received_events_url": "https://api.github.com/users/redixin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-18T15:51:38Z", "updated_at": "2018-04-06T17:20:49Z", "closed_at": "2015-11-18T22:03:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Lets take a look at this simple test:\n\n```\nimport unittest\nimport mock\nfrom ddt import ddt, data\n\n@ddt\nclass Test(unittest.TestCase):\n    @data(mock.Mock())\n    def test_dict(self, value):\n        pass\n```\n\nThis lead to different test names with different runs:\n\n```\ntest_dict_1__Mock_id__139806852956624__ (tests.test_d.Test) ... ok\ntest_dict_1__Mock_id__140027200111056__ (tests.test_d.Test) ... ok\n```\n\nThis is serious problem when running tests by testr.\n\nTestr generates a list of all tests and divides it into N parts, depends on number of CPUs in the system.\nThen it forks N processes, and each process loads one list.\nTests with mock.Mock in arguments are silently skipped because of unique mock id in test name.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/32", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/32/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/32/events", "html_url": "https://github.com/datadriventests/ddt/issues/32", "id": 95436093, "node_id": "MDU6SXNzdWU5NTQzNjA5Mw==", "number": 32, "title": "pypi tarball 1.0.0 is missing files", "user": {"login": "carlwgeorge", "id": 12187228, "node_id": "MDQ6VXNlcjEyMTg3MjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/12187228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlwgeorge", "html_url": "https://github.com/carlwgeorge", "followers_url": "https://api.github.com/users/carlwgeorge/followers", "following_url": "https://api.github.com/users/carlwgeorge/following{/other_user}", "gists_url": "https://api.github.com/users/carlwgeorge/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlwgeorge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlwgeorge/subscriptions", "organizations_url": "https://api.github.com/users/carlwgeorge/orgs", "repos_url": "https://api.github.com/users/carlwgeorge/repos", "events_url": "https://api.github.com/users/carlwgeorge/events{/privacy}", "received_events_url": "https://api.github.com/users/carlwgeorge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-16T13:43:35Z", "updated_at": "2018-04-06T17:20:49Z", "closed_at": "2016-05-31T18:33:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I maintain the Arch AUR package for this module.  I want to implement the test suite when building the package.  If I use the pypi tarball as the source, several files are missing.\n\n```\nImportError: No module named 'test.mycode'\n```\n\n```\nFileNotFoundError: [Errno 2] No such file or directory: '/build/python-ddt/src/ddt-1.0.0/test/test_data_dict.json'\n```\n\n```\nValueError: test_data_dict.json does not exist\n```\n\nPlease include these missing files in the pypi tarball.\n\n```\nddt-1.0.0/CONTRIBUTING.md\nddt-1.0.0/LICENSE.md\nddt-1.0.0/README.md\nddt-1.0.0/test/__init__.py\nddt-1.0.0/test/mycode.py\nddt-1.0.0/test/test_data_dict.json\nddt-1.0.0/test/test_data_list.json\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/31", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/31/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/31/events", "html_url": "https://github.com/datadriventests/ddt/issues/31", "id": 93923787, "node_id": "MDU6SXNzdWU5MzkyMzc4Nw==", "number": 31, "title": "Exit series of method if fail/error", "user": {"login": "CJ-Wright", "id": 6740689, "node_id": "MDQ6VXNlcjY3NDA2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6740689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CJ-Wright", "html_url": "https://github.com/CJ-Wright", "followers_url": "https://api.github.com/users/CJ-Wright/followers", "following_url": "https://api.github.com/users/CJ-Wright/following{/other_user}", "gists_url": "https://api.github.com/users/CJ-Wright/gists{/gist_id}", "starred_url": "https://api.github.com/users/CJ-Wright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CJ-Wright/subscriptions", "organizations_url": "https://api.github.com/users/CJ-Wright/orgs", "repos_url": "https://api.github.com/users/CJ-Wright/repos", "events_url": "https://api.github.com/users/CJ-Wright/events{/privacy}", "received_events_url": "https://api.github.com/users/CJ-Wright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-09T00:55:17Z", "updated_at": "2018-04-06T17:20:49Z", "closed_at": "2015-07-10T21:36:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible for the `@data` decorator to stop early if the test fails?  Similar to `nosetests -x` except on a method by method basis.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/30", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/30/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/30/events", "html_url": "https://github.com/datadriventests/ddt/issues/30", "id": 76357428, "node_id": "MDU6SXNzdWU3NjM1NzQyOA==", "number": 30, "title": "Support test data in YAML files", "user": {"login": "txels", "id": 874958, "node_id": "MDQ6VXNlcjg3NDk1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/874958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txels", "html_url": "https://github.com/txels", "followers_url": "https://api.github.com/users/txels/followers", "following_url": "https://api.github.com/users/txels/following{/other_user}", "gists_url": "https://api.github.com/users/txels/gists{/gist_id}", "starred_url": "https://api.github.com/users/txels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txels/subscriptions", "organizations_url": "https://api.github.com/users/txels/orgs", "repos_url": "https://api.github.com/users/txels/repos", "events_url": "https://api.github.com/users/txels/events{/privacy}", "received_events_url": "https://api.github.com/users/txels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-14T13:23:34Z", "updated_at": "2018-04-06T17:20:49Z", "closed_at": "2016-05-31T07:31:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently `ddt` supports feeding test data from a file, but that file has to be in JSON format.\nSupport for YAML seems like a good addition.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/27", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/27/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/27/events", "html_url": "https://github.com/datadriventests/ddt/issues/27", "id": 74359164, "node_id": "MDU6SXNzdWU3NDM1OTE2NA==", "number": 27, "title": "Passing an iterable with test values", "user": {"login": "stefaniegoetz", "id": 5139394, "node_id": "MDQ6VXNlcjUxMzkzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5139394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefaniegoetz", "html_url": "https://github.com/stefaniegoetz", "followers_url": "https://api.github.com/users/stefaniegoetz/followers", "following_url": "https://api.github.com/users/stefaniegoetz/following{/other_user}", "gists_url": "https://api.github.com/users/stefaniegoetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefaniegoetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefaniegoetz/subscriptions", "organizations_url": "https://api.github.com/users/stefaniegoetz/orgs", "repos_url": "https://api.github.com/users/stefaniegoetz/repos", "events_url": "https://api.github.com/users/stefaniegoetz/events{/privacy}", "received_events_url": "https://api.github.com/users/stefaniegoetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-08T13:13:40Z", "updated_at": "2018-04-06T17:20:49Z", "closed_at": "2015-05-08T13:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exactly what I was looking for, just that I'd like to pass an interable of test values to the data decorator, like so:\n\n```\nLANGUAGES = (\n    ('en', _('English')),\n    ('de', _('German')),\n    ('fr', _('French')),\n    ('sv', _('Swedish')),\n    ('tr', _('Turkish')),\n)\n\n@data(LANGUAGES)\ndef test_that_the_page_loads_succesfully_in_the_given_language(self, language):\n    ...\n```\n\nThe unpack decorator doesn't help here, as I want to run the test per language.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/23", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/23/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/23/events", "html_url": "https://github.com/datadriventests/ddt/issues/23", "id": 51873925, "node_id": "MDU6SXNzdWU1MTg3MzkyNQ==", "number": 23, "title": "add Python 3 classifier to pypi", "user": {"login": "collinanderson", "id": 129234, "node_id": "MDQ6VXNlcjEyOTIzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/129234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collinanderson", "html_url": "https://github.com/collinanderson", "followers_url": "https://api.github.com/users/collinanderson/followers", "following_url": "https://api.github.com/users/collinanderson/following{/other_user}", "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions", "organizations_url": "https://api.github.com/users/collinanderson/orgs", "repos_url": "https://api.github.com/users/collinanderson/repos", "events_url": "https://api.github.com/users/collinanderson/events{/privacy}", "received_events_url": "https://api.github.com/users/collinanderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-13T02:45:05Z", "updated_at": "2018-04-06T17:20:48Z", "closed_at": "2014-12-13T16:10:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "This will correctly report this package as being Python 3 compatible by various checkers.\n\n```\n Programming Language :: Python :: 3\n```\n\nhttps://caniusepython3.com/project/ddt\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/21", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/21/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/21/events", "html_url": "https://github.com/datadriventests/ddt/issues/21", "id": 38514944, "node_id": "MDU6SXNzdWUzODUxNDk0NA==", "number": 21, "title": "Add a license", "user": {"login": "willthomson", "id": 2223218, "node_id": "MDQ6VXNlcjIyMjMyMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2223218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willthomson", "html_url": "https://github.com/willthomson", "followers_url": "https://api.github.com/users/willthomson/followers", "following_url": "https://api.github.com/users/willthomson/following{/other_user}", "gists_url": "https://api.github.com/users/willthomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/willthomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willthomson/subscriptions", "organizations_url": "https://api.github.com/users/willthomson/orgs", "repos_url": "https://api.github.com/users/willthomson/repos", "events_url": "https://api.github.com/users/willthomson/events{/privacy}", "received_events_url": "https://api.github.com/users/willthomson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2014-07-23T10:07:01Z", "updated_at": "2018-04-06T17:20:48Z", "closed_at": "2015-01-26T08:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if you could add a license to this project. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/19", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/19/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/19/events", "html_url": "https://github.com/datadriventests/ddt/issues/19", "id": 33964325, "node_id": "MDU6SXNzdWUzMzk2NDMyNQ==", "number": 19, "title": "Using dicts as @data generates variable test names", "user": {"login": "santtu", "id": 650612, "node_id": "MDQ6VXNlcjY1MDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/650612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santtu", "html_url": "https://github.com/santtu", "followers_url": "https://api.github.com/users/santtu/followers", "following_url": "https://api.github.com/users/santtu/following{/other_user}", "gists_url": "https://api.github.com/users/santtu/gists{/gist_id}", "starred_url": "https://api.github.com/users/santtu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santtu/subscriptions", "organizations_url": "https://api.github.com/users/santtu/orgs", "repos_url": "https://api.github.com/users/santtu/repos", "events_url": "https://api.github.com/users/santtu/events{/privacy}", "received_events_url": "https://api.github.com/users/santtu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-05-21T09:03:57Z", "updated_at": "2018-04-06T17:20:48Z", "closed_at": "2014-12-13T16:11:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's a simple test case:\n\n``` python\nimport unittest\nfrom ddt import ddt, data\n\n@ddt\nclass Test(unittest.TestCase):\n    @data(1)\n    def test_scalar(self, value):\n        pass\n\n    @data({\"a\": 1, \"b\": 2})\n    def test_dict(self, value):\n        pass\n```\n\nWhen run with `python3.4`which nosetests`-v test.py` you'll get (potentially) different test names with different runs:\n\n```\n$ nosetests -V\nnosetests version 1.3.1\n$ python3.4 `which nosetests` -v test.py\ntest_dict_1___b___2___a___1_ (test.Test) ... ok\ntest_scalar_1_1 (test.Test) ... ok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.001s\n\nOK\n$ python3.4 `which nosetests` -v test.py\ntest_dict_1___a___1___b___2_ (test.Test) ... ok\ntest_scalar_1_1 (test.Test) ... ok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.001s\n\nOK\n```\n\nWhy this is a problem: \n- It breaks nosetest's `TestId` functionality (e.g. makes running `nosetests --with-ids --failed` fail). Being able to re-run failed tests only (`--failed`) is a super-useful feature, so it not working is a big problem (time-waster).\n\nThe reason why this happens is that from Python 3.3 onwards hash randomization has been the default option (see https://docs.python.org/3.3/using/cmdline.html#cmdoption-R). This means that dict key hashes (at least for types with hash function depending on the system `hash()`) change from different runs, and thus the naming of tests using `@data` with dicts (or sets/frozensets for that matter) will vary from one run to another.\n\nAlthough there is a simple workaround (use a fixed `PYTHONHASHSEED` when running tests) this is still not a completely good solution for a few reasons:\n- This is going to bite a lot of people not familiar with hash randomization.\n- This is going to bite those who move from older pythons to 3.3 or newer versions.\n\nOn the other hand I am not sure how to fix this. A few possibilities:\n1. Update [mk_test_name](https://github.com/txels/ddt/blob/master/ddt.py#L65) to recognize dicts (and sets and frozensets and recursive versions of these) and output keys in known (sorted) order.\n2. Add a check that will produce a visible WARNING message when it detects running in post-3.3 python without `PYTHONHASHSEED` being set.\n3. Add a check that will make `mk_test_name` omit the `str(value)` bit on >= 3.3 python if `PYTHONHASHSEED` hasn't been set. This would generate test names based only the running index, keeping them unique and immune to hash key randomization.\n\n(And in any case add a note about this behavior to `@data` documentation.)\n\nI think the first one is a can of worms since you'd need to handle recursive dicts and it really _does not help_ with complex types that are not dicts but internally use dicts and produce `str` values from those. \n\nThe second one would help, but would essentially require changes to test environment when moving to >= 3.3 python on existing projects, and the warning might also be missed by a lot of people.\n\nI think the third one would present the least surprise to people as it'd at least keep test cases accessible and running, yet makes it possible to get the full name (with test data str-encoded) by introducing `PYTHONHASHSEED` to the test environment by the user.\n\nComments, thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/17", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/17/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/17/events", "html_url": "https://github.com/datadriventests/ddt/issues/17", "id": 28049118, "node_id": "MDU6SXNzdWUyODA0OTExOA==", "number": 17, "title": "Cannot run individual tests with nosetests", "user": {"login": "omaciel", "id": 53362, "node_id": "MDQ6VXNlcjUzMzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/53362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omaciel", "html_url": "https://github.com/omaciel", "followers_url": "https://api.github.com/users/omaciel/followers", "following_url": "https://api.github.com/users/omaciel/following{/other_user}", "gists_url": "https://api.github.com/users/omaciel/gists{/gist_id}", "starred_url": "https://api.github.com/users/omaciel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omaciel/subscriptions", "organizations_url": "https://api.github.com/users/omaciel/orgs", "repos_url": "https://api.github.com/users/omaciel/repos", "events_url": "https://api.github.com/users/omaciel/events{/privacy}", "received_events_url": "https://api.github.com/users/omaciel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-21T15:27:47Z", "updated_at": "2018-04-06T17:20:48Z", "closed_at": "2014-02-21T22:16:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems that you cannot run an individual ddt test via nosetests:\n\n``` bash\n$ cat test_foo.py\nimport unittest\nfrom ddt import ddt, data\n\n\n@ddt\nclass FooTestCase(unittest.TestCase):\n\n    @data(3, 4, 12, 23)\n    def test_larger_than_two(self, value):\n            self.assertTrue(value > 0)\n\n$ nosetests -vv test_foo.py:FooTestCase\nnose.config: INFO: Ignoring files matching ['^\\\\.', '^_', '^setup\\\\.py$']\ntest_larger_than_two_12 (tests.cli.test_foo.FooTestCase) ... ok\ntest_larger_than_two_23 (tests.cli.test_foo.FooTestCase) ... ok\ntest_larger_than_two_3 (tests.cli.test_foo.FooTestCase) ... ok\ntest_larger_than_two_4 (tests.cli.test_foo.FooTestCase) ... ok\n\n----------------------------------------------------------------------\nRan 4 tests in 0.001s\n\nOK\n\n$ nosetests -vv test_foo.py:FooTestCase.test_larger_than_two\nnose.config: INFO: Ignoring files matching ['^\\\\.', '^_', '^setup\\\\.py$']\nFailure: ValueError (No such test FooTestCase.test_larger_than_two) ... ERROR\n\n======================================================================\nERROR: Failure: ValueError (No such test FooTestCase.test_larger_than_two)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/nose/failure.py\", line 41, in runTest\n    raise self.exc_class(self.exc_val)\nValueError: No such test FooTestCase.test_larger_than_two\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nFAILED (errors=1)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/11", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/11/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/11/events", "html_url": "https://github.com/datadriventests/ddt/issues/11", "id": 11434150, "node_id": "MDU6SXNzdWUxMTQzNDE1MA==", "number": 11, "title": "Is it possible to provide data created in setUp?", "user": {"login": "dimfox", "id": 1517049, "node_id": "MDQ6VXNlcjE1MTcwNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1517049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimfox", "html_url": "https://github.com/dimfox", "followers_url": "https://api.github.com/users/dimfox/followers", "following_url": "https://api.github.com/users/dimfox/following{/other_user}", "gists_url": "https://api.github.com/users/dimfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimfox/subscriptions", "organizations_url": "https://api.github.com/users/dimfox/orgs", "repos_url": "https://api.github.com/users/dimfox/repos", "events_url": "https://api.github.com/users/dimfox/events{/privacy}", "received_events_url": "https://api.github.com/users/dimfox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-26T23:23:15Z", "updated_at": "2018-04-06T17:20:48Z", "closed_at": "2013-02-27T07:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nice utility.\n\nI am wondering if it is possible to provide data created in setUp?\n\nE.g.\n\n``` python\ndef setUp(self):\n  self.data1 = createData()\n  self.data2 = createData()\n\ndef tearDown(self):\n  self.data1.delete()\n  self.data2.delete()\n\n@data(self.data1, self.data2)\ndef test(self, data):\n  ...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/9", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/9/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/9/events", "html_url": "https://github.com/datadriventests/ddt/issues/9", "id": 11387803, "node_id": "MDU6SXNzdWUxMTM4NzgwMw==", "number": 9, "title": "A missing JSON file should produce a noticeable error", "user": {"login": "txels", "id": 874958, "node_id": "MDQ6VXNlcjg3NDk1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/874958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txels", "html_url": "https://github.com/txels", "followers_url": "https://api.github.com/users/txels/followers", "following_url": "https://api.github.com/users/txels/following{/other_user}", "gists_url": "https://api.github.com/users/txels/gists{/gist_id}", "starred_url": "https://api.github.com/users/txels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txels/subscriptions", "organizations_url": "https://api.github.com/users/txels/orgs", "repos_url": "https://api.github.com/users/txels/repos", "events_url": "https://api.github.com/users/txels/events{/privacy}", "received_events_url": "https://api.github.com/users/txels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-26T00:26:02Z", "updated_at": "2018-04-06T17:20:48Z", "closed_at": "2013-02-27T10:09:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently, if a JSON file is missing for the `file_data` decorator, the test cases are _skipped_ and no visible error occurs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/4", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/4/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/4/events", "html_url": "https://github.com/datadriventests/ddt/issues/4", "id": 9898032, "node_id": "MDU6SXNzdWU5ODk4MDMy", "number": 4, "title": "Scrubbing out XML character in the generated test names", "user": {"login": "dlai0001", "id": 864637, "node_id": "MDQ6VXNlcjg2NDYzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/864637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlai0001", "html_url": "https://github.com/dlai0001", "followers_url": "https://api.github.com/users/dlai0001/followers", "following_url": "https://api.github.com/users/dlai0001/following{/other_user}", "gists_url": "https://api.github.com/users/dlai0001/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlai0001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlai0001/subscriptions", "organizations_url": "https://api.github.com/users/dlai0001/orgs", "repos_url": "https://api.github.com/users/dlai0001/repos", "events_url": "https://api.github.com/users/dlai0001/events{/privacy}", "received_events_url": "https://api.github.com/users/dlai0001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-01-11T23:05:25Z", "updated_at": "2018-04-06T17:20:47Z", "closed_at": "2014-03-20T21:19:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if I passing in Objects using the decorator, because the \"**name**\" attribute can take on \"<\" and \">\" characters if value passed in is an object (using default **repr**() ).  This will cause the JUnit parser to break if you use JUnit parser in CI.  Can you please add some sort of XML chracter stripping or escaping in the @ddt annotation class.\n\n``` python\n    for name, f in cls.__dict__.items():\n        if hasattr(f, MAGIC):\n            i = 0\n            for v in getattr(f, MAGIC):\n                test_name = getattr(v, \"__name__\", \"{0}_{1}\".format(name, v))\n                #strip illegal xml characters characters. - DL\n                formatted_test_name = re.sub(r'[<>&/]', '', test_name)\n                setattr(cls, formatted_test_name, feed_data(f, v))\n                i = i + 1\n            delattr(cls, name)\n    return cls\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datadriventests/ddt/issues/3", "repository_url": "https://api.github.com/repos/datadriventests/ddt", "labels_url": "https://api.github.com/repos/datadriventests/ddt/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/datadriventests/ddt/issues/3/comments", "events_url": "https://api.github.com/repos/datadriventests/ddt/issues/3/events", "html_url": "https://github.com/datadriventests/ddt/issues/3", "id": 7244005, "node_id": "MDU6SXNzdWU3MjQ0MDA1", "number": 3, "title": "Allow unpacking test data tuples into multiple arguments to the test case", "user": {"login": "txels", "id": 874958, "node_id": "MDQ6VXNlcjg3NDk1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/874958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txels", "html_url": "https://github.com/txels", "followers_url": "https://api.github.com/users/txels/followers", "following_url": "https://api.github.com/users/txels/following{/other_user}", "gists_url": "https://api.github.com/users/txels/gists{/gist_id}", "starred_url": "https://api.github.com/users/txels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txels/subscriptions", "organizations_url": "https://api.github.com/users/txels/orgs", "repos_url": "https://api.github.com/users/txels/repos", "events_url": "https://api.github.com/users/txels/events{/privacy}", "received_events_url": "https://api.github.com/users/txels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-09-30T08:30:39Z", "updated_at": "2019-01-18T03:48:40Z", "closed_at": "2014-02-08T22:53:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Right now, if you want to pass several arguments to your test, you typically provide a tuple for each test case, and have to unpack them inside the test method, such as:\n\n``` python\n@data((1,2,3), (4,5,9))\ndef test_things_with_3_numbers(self, arg):\n    op1, op2, addition = arg\n    ...\n```\n\nA nice improvement could be if `ddt` did this unpacking for you:\n\n``` python\n@packed_data((1,2,3), (4,5,9))\ndef test_things_with_3_numbers(self, op1, op2, addition):\n    ...\n```\n", "performed_via_github_app": null, "score": 1.0}]}