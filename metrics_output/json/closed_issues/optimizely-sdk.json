{"total_count": 9, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/optimizely/python-sdk/issues/248", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/248/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/248/events", "html_url": "https://github.com/optimizely/python-sdk/issues/248", "id": 598296036, "node_id": "MDU6SXNzdWU1OTgyOTYwMzY=", "number": 248, "title": "time.clock was removed in Python 3.8 in favor of time.perf_counter/time.process_time", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "msohailhussain", "id": 3163521, "node_id": "MDQ6VXNlcjMxNjM1MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3163521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msohailhussain", "html_url": "https://github.com/msohailhussain", "followers_url": "https://api.github.com/users/msohailhussain/followers", "following_url": "https://api.github.com/users/msohailhussain/following{/other_user}", "gists_url": "https://api.github.com/users/msohailhussain/gists{/gist_id}", "starred_url": "https://api.github.com/users/msohailhussain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msohailhussain/subscriptions", "organizations_url": "https://api.github.com/users/msohailhussain/orgs", "repos_url": "https://api.github.com/users/msohailhussain/repos", "events_url": "https://api.github.com/users/msohailhussain/events{/privacy}", "received_events_url": "https://api.github.com/users/msohailhussain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "msohailhussain", "id": 3163521, "node_id": "MDQ6VXNlcjMxNjM1MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3163521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msohailhussain", "html_url": "https://github.com/msohailhussain", "followers_url": "https://api.github.com/users/msohailhussain/followers", "following_url": "https://api.github.com/users/msohailhussain/following{/other_user}", "gists_url": "https://api.github.com/users/msohailhussain/gists{/gist_id}", "starred_url": "https://api.github.com/users/msohailhussain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msohailhussain/subscriptions", "organizations_url": "https://api.github.com/users/msohailhussain/orgs", "repos_url": "https://api.github.com/users/msohailhussain/repos", "events_url": "https://api.github.com/users/msohailhussain/events{/privacy}", "received_events_url": "https://api.github.com/users/msohailhussain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-11T15:58:12Z", "updated_at": "2020-05-20T00:46:59Z", "closed_at": "2020-05-20T00:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ref : https://github.com/python/cpython/commit/e2500610c62673f42371b54fb0e4de83e4b33146\r\n\r\n```\r\ntests/benchmarking/benchmarking_tests.py\r\n28:        start_time = time.clock()\r\n30:        end_time = time.clock()\r\n34:        start_time = time.clock()\r\n36:        end_time = time.clock()\r\n40:        start_time = time.clock()\r\n42:        end_time = time.clock()\r\n47:        start_time = time.clock()\r\n51:        end_time = time.clock()\r\n56:        start_time = time.clock()\r\n58:        end_time = time.clock()\r\n63:        start_time = time.clock()\r\n65:        end_time = time.clock()\r\n70:        start_time = time.clock()\r\n72:        end_time = time.clock()\r\n77:        start_time = time.clock()\r\n79:        end_time = time.clock()\r\n84:        start_time = time.clock()\r\n88:        end_time = time.clock()\r\n93:        start_time = time.clock()\r\n95:        end_time = time.clock()\r\n100:        start_time = time.clock()\r\n102:        end_time = time.clock()\r\n107:        start_time = time.clock()\r\n109:        end_time = time.clock()\r\n114:        start_time = time.clock()\r\n116:        end_time = time.clock()\r\n120:        start_time = time.clock()\r\n122:        end_time = time.clock()\r\n126:        start_time = time.clock()\r\n130:        end_time = time.clock()\r\n134:        start_time = time.clock()\r\n136:        end_time = time.clock()\r\n140:        start_time = time.clock()\r\n142:        end_time = time.clock()\r\n146:        start_time = time.clock()\r\n150:        end_time = time.clock()\r\n154:        start_time = time.clock()\r\n156:        end_time = time.clock()\r\n160:        start_time = time.clock()\r\n164:        end_time = time.clock()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/233", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/233/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/233/events", "html_url": "https://github.com/optimizely/python-sdk/issues/233", "id": 546013170, "node_id": "MDU6SXNzdWU1NDYwMTMxNzA=", "number": 233, "title": "Asynchronously triggering events", "user": {"login": "walterqian", "id": 9376107, "node_id": "MDQ6VXNlcjkzNzYxMDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9376107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walterqian", "html_url": "https://github.com/walterqian", "followers_url": "https://api.github.com/users/walterqian/followers", "following_url": "https://api.github.com/users/walterqian/following{/other_user}", "gists_url": "https://api.github.com/users/walterqian/gists{/gist_id}", "starred_url": "https://api.github.com/users/walterqian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walterqian/subscriptions", "organizations_url": "https://api.github.com/users/walterqian/orgs", "repos_url": "https://api.github.com/users/walterqian/repos", "events_url": "https://api.github.com/users/walterqian/events{/privacy}", "received_events_url": "https://api.github.com/users/walterqian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T00:38:20Z", "updated_at": "2020-01-07T19:00:06Z", "closed_at": "2020-01-07T19:00:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently when calling `event_dispatcher`  it's a blocking call. This network request slows down calls to `activate` and `track`, which can add up if we're making a lot of calls. I wonder if it's possible to make it in a task to make the `dispatch_event` call smoother.\r\n\r\nhttps://github.com/optimizely/python-sdk/blob/master/optimizely/event_dispatcher.py#L34-L40", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/220", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/220/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/220/events", "html_url": "https://github.com/optimizely/python-sdk/issues/220", "id": 522306062, "node_id": "MDU6SXNzdWU1MjIzMDYwNjI=", "number": 220, "title": "Pip raises UnicodeDecodeError when installing on windows", "user": {"login": "emielrv", "id": 10415132, "node_id": "MDQ6VXNlcjEwNDE1MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/10415132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emielrv", "html_url": "https://github.com/emielrv", "followers_url": "https://api.github.com/users/emielrv/followers", "following_url": "https://api.github.com/users/emielrv/following{/other_user}", "gists_url": "https://api.github.com/users/emielrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/emielrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emielrv/subscriptions", "organizations_url": "https://api.github.com/users/emielrv/orgs", "repos_url": "https://api.github.com/users/emielrv/repos", "events_url": "https://api.github.com/users/emielrv/events{/privacy}", "received_events_url": "https://api.github.com/users/emielrv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T15:45:23Z", "updated_at": "2019-12-05T16:54:50Z", "closed_at": "2019-12-05T16:54:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "`UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 7717: character maps to <undefined>\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/212", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/212/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/212/events", "html_url": "https://github.com/optimizely/python-sdk/issues/212", "id": 501159854, "node_id": "MDU6SXNzdWU1MDExNTk4NTQ=", "number": 212, "title": "Warning log messages when sending revenue events", "user": {"login": "Matt343", "id": 2475015, "node_id": "MDQ6VXNlcjI0NzUwMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2475015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt343", "html_url": "https://github.com/Matt343", "followers_url": "https://api.github.com/users/Matt343/followers", "following_url": "https://api.github.com/users/Matt343/following{/other_user}", "gists_url": "https://api.github.com/users/Matt343/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt343/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt343/subscriptions", "organizations_url": "https://api.github.com/users/Matt343/orgs", "repos_url": "https://api.github.com/users/Matt343/repos", "events_url": "https://api.github.com/users/Matt343/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt343/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-01T21:38:20Z", "updated_at": "2019-10-31T23:29:08Z", "closed_at": "2019-10-31T23:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sending an event with the `revenue` tag set generates a warning log message. It seems to be looking for a numeric `value` tag, even though that tag is not set in the call.\r\n\r\nThe revenue does appear to be tracked despite the warning, and the `value` tag works as expected with no output.\r\n\r\nOptimizely SDK version 3.2.0\r\n\r\nExample code:\r\n```\r\noptimizely_client = Optimizely(datafile)\r\noptimizely_client.track(event_key='some_event', user_id='abc123', event_tags={'revenue': 456})\r\n\r\n# WARNING:optimizely.logger.NoOpLogger:The provided numeric metric value None is in an invalid format and will not be sent to results.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/139", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/139/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/139/events", "html_url": "https://github.com/optimizely/python-sdk/issues/139", "id": 354999688, "node_id": "MDU6SXNzdWUzNTQ5OTk2ODg=", "number": 139, "title": "Built in EventDispatch silently fails", "user": {"login": "allanlei", "id": 391251, "node_id": "MDQ6VXNlcjM5MTI1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/391251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allanlei", "html_url": "https://github.com/allanlei", "followers_url": "https://api.github.com/users/allanlei/followers", "following_url": "https://api.github.com/users/allanlei/following{/other_user}", "gists_url": "https://api.github.com/users/allanlei/gists{/gist_id}", "starred_url": "https://api.github.com/users/allanlei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allanlei/subscriptions", "organizations_url": "https://api.github.com/users/allanlei/orgs", "repos_url": "https://api.github.com/users/allanlei/repos", "events_url": "https://api.github.com/users/allanlei/events{/privacy}", "received_events_url": "https://api.github.com/users/allanlei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-29T05:13:49Z", "updated_at": "2018-08-29T19:10:54Z", "closed_at": "2018-08-29T19:10:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default `EventDispatcher` only handles network related errors and ignores HTTP errors(`500`, `503`, etc) without any logging messages\r\n\r\n```\r\ntry:\r\n  if event.http_verb == enums.HTTPVerbs.GET:\r\n    requests.get(event.url, params=event.params, timeout=10)\r\n  elif event.http_verb == enums.HTTPVerbs.POST:\r\n    requests.post(event.url, json=event.params, headers=event.headers, timeout=10)\r\nexcept request_exception.RequestException as error:\r\n  logging.error('Dispatch event failed. Error: %s' % str(error))\r\n```\r\n\r\nHTTP errors in `requests` do not raise Exceptions\r\n```\r\nIn [2]: requests.get('https://httpbin.org/status/500')\r\nOut[2]: <Response [500]>   # This is an object, not an raise error therefore not caught by try/except\r\n```\r\n\r\nYou would need to raise from the response\r\n```\r\nresponse = requests.get(event.url, params=event.params, timeout=10)\r\nIn [4]: response.raise_for_status()\r\n---------------------------------------------------------------------------\r\nHTTPError                                 Traceback (most recent call last)\r\n<ipython-input-4-46d4bf99ee16> in <module>()\r\n----> 1 requests.get('https://httpbin.org/status/500').raise_for_status()\r\n\r\npython3.6/site-packages/requests/models.py in raise_for_status(self)\r\n    937 \r\n    938         if http_error_msg:\r\n--> 939             raise HTTPError(http_error_msg, response=self)\r\n    940 \r\n    941     def close(self):\r\n\r\nHTTPError: 500 Server Error: INTERNAL SERVER ERROR for url: https://httpbin.org/status/500\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/79", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/79/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/79/events", "html_url": "https://github.com/optimizely/python-sdk/issues/79", "id": 260732999, "node_id": "MDU6SXNzdWUyNjA3MzI5OTk=", "number": 79, "title": "Need to dispatch to logx.* endpoints", "user": {"login": "osule", "id": 13223818, "node_id": "MDQ6VXNlcjEzMjIzODE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13223818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osule", "html_url": "https://github.com/osule", "followers_url": "https://api.github.com/users/osule/followers", "following_url": "https://api.github.com/users/osule/following{/other_user}", "gists_url": "https://api.github.com/users/osule/gists{/gist_id}", "starred_url": "https://api.github.com/users/osule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osule/subscriptions", "organizations_url": "https://api.github.com/users/osule/orgs", "repos_url": "https://api.github.com/users/osule/repos", "events_url": "https://api.github.com/users/osule/events{/privacy}", "received_events_url": "https://api.github.com/users/osule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-26T18:59:43Z", "updated_at": "2017-10-11T20:03:52Z", "closed_at": "2017-10-11T20:03:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Events dispatched to logx.* sub-domain can take a response time of 0.407 sec.\r\n\r\nAre [these endpoints](https://github.com/optimizely/python-sdk/blob/1.2.0/optimizely/event_builder.py#L102-L103) service critical? \r\nIs there any reason not to dispatch events to them if the JS client is already logging I think?\r\n\r\n@bradtaylorsf @dsiroker @koomen @travisbeck @loganlinn ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/64", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/64/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/64/events", "html_url": "https://github.com/optimizely/python-sdk/issues/64", "id": 241678620, "node_id": "MDU6SXNzdWUyNDE2Nzg2MjA=", "number": 64, "title": "python 3.5 and 3.6 support?", "user": {"login": "jeduden", "id": 1117699, "node_id": "MDQ6VXNlcjExMTc2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1117699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeduden", "html_url": "https://github.com/jeduden", "followers_url": "https://api.github.com/users/jeduden/followers", "following_url": "https://api.github.com/users/jeduden/following{/other_user}", "gists_url": "https://api.github.com/users/jeduden/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeduden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeduden/subscriptions", "organizations_url": "https://api.github.com/users/jeduden/orgs", "repos_url": "https://api.github.com/users/jeduden/repos", "events_url": "https://api.github.com/users/jeduden/events{/privacy}", "received_events_url": "https://api.github.com/users/jeduden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-10T11:15:28Z", "updated_at": "2017-10-11T20:05:00Z", "closed_at": "2017-10-11T20:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "do you support python 3.5 and python 3.6 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/51", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/51/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/51/events", "html_url": "https://github.com/optimizely/python-sdk/issues/51", "id": 228868193, "node_id": "MDU6SXNzdWUyMjg4NjgxOTM=", "number": 51, "title": "When will support for user profiles be added?", "user": {"login": "evasilchenko", "id": 1692787, "node_id": "MDQ6VXNlcjE2OTI3ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1692787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evasilchenko", "html_url": "https://github.com/evasilchenko", "followers_url": "https://api.github.com/users/evasilchenko/followers", "following_url": "https://api.github.com/users/evasilchenko/following{/other_user}", "gists_url": "https://api.github.com/users/evasilchenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/evasilchenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evasilchenko/subscriptions", "organizations_url": "https://api.github.com/users/evasilchenko/orgs", "repos_url": "https://api.github.com/users/evasilchenko/repos", "events_url": "https://api.github.com/users/evasilchenko/events{/privacy}", "received_events_url": "https://api.github.com/users/evasilchenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-15T22:49:16Z", "updated_at": "2017-06-10T05:07:46Z", "closed_at": "2017-06-02T20:47:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just read that **user profiles** for the backend-sdk is not currently supported and that sdk consumers are required to roll their own variation stickiness.\r\n\r\nhttps://developers.optimizely.com/x/solutions/sdks/reference/index.html?language=python#profiles\r\n\r\nI am wondering if/when this support is planned to be added to the SDK as we are currently evaluating the implementation of optimizely within our platform? I think this question is also related to: https://github.com/optimizely/python-sdk/issues/49\r\n\r\nThank you and looking forward to your response.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/optimizely/python-sdk/issues/49", "repository_url": "https://api.github.com/repos/optimizely/python-sdk", "labels_url": "https://api.github.com/repos/optimizely/python-sdk/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/optimizely/python-sdk/issues/49/comments", "events_url": "https://api.github.com/repos/optimizely/python-sdk/issues/49/events", "html_url": "https://github.com/optimizely/python-sdk/issues/49", "id": 224353145, "node_id": "MDU6SXNzdWUyMjQzNTMxNDU=", "number": 49, "title": "adding a variation will change how existing users are allocated to their variations", "user": {"login": "jondot", "id": 83390, "node_id": "MDQ6VXNlcjgzMzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/83390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jondot", "html_url": "https://github.com/jondot", "followers_url": "https://api.github.com/users/jondot/followers", "following_url": "https://api.github.com/users/jondot/following{/other_user}", "gists_url": "https://api.github.com/users/jondot/gists{/gist_id}", "starred_url": "https://api.github.com/users/jondot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jondot/subscriptions", "organizations_url": "https://api.github.com/users/jondot/orgs", "repos_url": "https://api.github.com/users/jondot/repos", "events_url": "https://api.github.com/users/jondot/events{/privacy}", "received_events_url": "https://api.github.com/users/jondot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-26T06:06:17Z", "updated_at": "2017-06-02T20:48:59Z", "closed_at": "2017-06-02T20:48:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nAccording to this implementation, adding a variation to a running experiment will change how existing users are allocated to their variations.\r\nHow can that be fixed?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}]}