{"total_count": 113, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/330", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/330/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/330/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/330", "id": 647644019, "node_id": "MDU6SXNzdWU2NDc2NDQwMTk=", "number": 330, "title": "How to get all replies I have when I call an URL", "user": {"login": "aborruso", "id": 30607, "node_id": "MDQ6VXNlcjMwNjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/30607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aborruso", "html_url": "https://github.com/aborruso", "followers_url": "https://api.github.com/users/aborruso/followers", "following_url": "https://api.github.com/users/aborruso/following{/other_user}", "gists_url": "https://api.github.com/users/aborruso/gists{/gist_id}", "starred_url": "https://api.github.com/users/aborruso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aborruso/subscriptions", "organizations_url": "https://api.github.com/users/aborruso/orgs", "repos_url": "https://api.github.com/users/aborruso/repos", "events_url": "https://api.github.com/users/aborruso/events{/privacy}", "received_events_url": "https://api.github.com/users/aborruso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T20:27:32Z", "updated_at": "2020-06-29T20:50:51Z", "closed_at": "2020-06-29T20:50:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nwhen I call via browser this example URL \"https://w3.ars.sicilia.it/icaro/default.jsp?icaDB=221&icaQuery=(open+E+data)\" I have back a lot URLs and files (see below image).\r\nI'm very interested to collect the XHR items URL. How to use MechanicalSoup to have them?\r\n\r\nThank you very much\r\n\r\n![image](https://user-images.githubusercontent.com/30607/86052645-9997b980-ba57-11ea-8cba-2e0b27d3b81e.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/329", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/329/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/329/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/329", "id": 625000934, "node_id": "MDU6SXNzdWU2MjUwMDA5MzQ=", "number": 329, "title": "submit form without explicit <input type=\"submit\">", "user": {"login": "ZhouXing19", "id": 53610260, "node_id": "MDQ6VXNlcjUzNjEwMjYw", "avatar_url": "https://avatars1.githubusercontent.com/u/53610260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhouXing19", "html_url": "https://github.com/ZhouXing19", "followers_url": "https://api.github.com/users/ZhouXing19/followers", "following_url": "https://api.github.com/users/ZhouXing19/following{/other_user}", "gists_url": "https://api.github.com/users/ZhouXing19/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhouXing19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhouXing19/subscriptions", "organizations_url": "https://api.github.com/users/ZhouXing19/orgs", "repos_url": "https://api.github.com/users/ZhouXing19/repos", "events_url": "https://api.github.com/users/ZhouXing19/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhouXing19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-26T16:04:36Z", "updated_at": "2020-06-05T08:41:01Z", "closed_at": "2020-06-05T08:41:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to submit login form [here ](https://seekingalpha.com/account/login), but the submit option in this page is not `<input type=\"submit\">`, but\r\n\r\n```\r\n <div class=\"register_button\" onclick=\"submit_orthodox_login_form();\">\r\n        <span class=\"l\"></span>\r\n        <input class=\"c\" type=\"button\" value=\"Sign in\">\r\n        <span class=\"r\"></span>\r\n      </div>\r\n```\r\n\r\nI followed the previous steps as follows:\r\n\r\n```\r\nbr = mechanicalsoup.StatefulBrowser(\r\n    soup_config={'features': 'lxml'},\r\n    raise_on_404=True,\r\n    user_agent='MyBot/0.1: mysite.example.com/bot_info',\r\n)\r\n\r\nbr.open(\"https://seekingalpha.com/account/login\")\r\nbr.select_form('#orthodox_login')\r\n\r\n\r\nbr[\"login\"] = args.username\r\nbr[\"password\"] = args.password\r\nresp = br.submit_selected()\r\n```\r\n\r\nBut in vain. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/314", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/314/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/314/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/314", "id": 566598551, "node_id": "MDU6SXNzdWU1NjY1OTg1NTE=", "number": 314, "title": "Why is Pypi version not current? ", "user": {"login": "dahifi", "id": 8903067, "node_id": "MDQ6VXNlcjg5MDMwNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8903067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dahifi", "html_url": "https://github.com/dahifi", "followers_url": "https://api.github.com/users/dahifi/followers", "following_url": "https://api.github.com/users/dahifi/following{/other_user}", "gists_url": "https://api.github.com/users/dahifi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dahifi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dahifi/subscriptions", "organizations_url": "https://api.github.com/users/dahifi/orgs", "repos_url": "https://api.github.com/users/dahifi/repos", "events_url": "https://api.github.com/users/dahifi/events{/privacy}", "received_events_url": "https://api.github.com/users/dahifi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-18T01:59:57Z", "updated_at": "2020-02-18T20:00:12Z", "closed_at": "2020-02-18T02:51:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was going crazy trying to follow the examples and getting errors like StatefulBrowser doesn't have a Forms attribute, then found that the 0.12 version tag is two years behind the current master? \r\n\r\nJust curious what the recommended installation is. Couldn't get pipenv to add the git repo, so added it as a submodule just so I can proceed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/307", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/307/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/307/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/307", "id": 542243801, "node_id": "MDU6SXNzdWU1NDIyNDM4MDE=", "number": 307, "title": "can't use find_all() function to find tags in <svg>...</svg>", "user": {"login": "tirajetw", "id": 25123311, "node_id": "MDQ6VXNlcjI1MTIzMzEx", "avatar_url": "https://avatars2.githubusercontent.com/u/25123311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirajetw", "html_url": "https://github.com/tirajetw", "followers_url": "https://api.github.com/users/tirajetw/followers", "following_url": "https://api.github.com/users/tirajetw/following{/other_user}", "gists_url": "https://api.github.com/users/tirajetw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirajetw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirajetw/subscriptions", "organizations_url": "https://api.github.com/users/tirajetw/orgs", "repos_url": "https://api.github.com/users/tirajetw/repos", "events_url": "https://api.github.com/users/tirajetw/events{/privacy}", "received_events_url": "https://api.github.com/users/tirajetw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-25T03:22:34Z", "updated_at": "2019-12-30T17:29:47Z", "closed_at": "2019-12-30T17:29:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "In beautifulsoup fix by \r\n\r\n    from bs4 import BeautifulSoup\r\n    soup = BeautifulSoup('<svg></svg>', 'xml')\r\n    print(soup)\r\n\r\nfrom [https://stackoverflow.com/questions/49359684/python-beautifulsoup-adds-html-tags-to-svg](url)\r\n\r\nbut I don't know to use it with MechanicalSoup. \r\nThanks for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/306", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/306/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/306/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/306", "id": 540295349, "node_id": "MDU6SXNzdWU1NDAyOTUzNDk=", "number": 306, "title": "Upload a file", "user": {"login": "AChatzigoulas", "id": 23133425, "node_id": "MDQ6VXNlcjIzMTMzNDI1", "avatar_url": "https://avatars2.githubusercontent.com/u/23133425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AChatzigoulas", "html_url": "https://github.com/AChatzigoulas", "followers_url": "https://api.github.com/users/AChatzigoulas/followers", "following_url": "https://api.github.com/users/AChatzigoulas/following{/other_user}", "gists_url": "https://api.github.com/users/AChatzigoulas/gists{/gist_id}", "starred_url": "https://api.github.com/users/AChatzigoulas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AChatzigoulas/subscriptions", "organizations_url": "https://api.github.com/users/AChatzigoulas/orgs", "repos_url": "https://api.github.com/users/AChatzigoulas/repos", "events_url": "https://api.github.com/users/AChatzigoulas/events{/privacy}", "received_events_url": "https://api.github.com/users/AChatzigoulas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-19T12:51:48Z", "updated_at": "2020-01-16T18:02:09Z", "closed_at": "2020-01-16T18:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a possible way to upload a file using MechanicalSoup?\r\n\r\nOf course this is wrong in the manual ```form.set(\"tagname\") = path_to_local_file```, but also ```form.set(\"tagname\", path_to_local_file)``` does not work for me.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/301", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/301/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/301/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/301", "id": 503719216, "node_id": "MDU6SXNzdWU1MDM3MTkyMTY=", "number": 301, "title": "Migrate LGTM.com installation from OAuth to GitHub App", "user": {"login": "LGTM-badger", "id": 42374550, "node_id": "MDQ6VXNlcjQyMzc0NTUw", "avatar_url": "https://avatars2.githubusercontent.com/u/42374550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LGTM-badger", "html_url": "https://github.com/LGTM-badger", "followers_url": "https://api.github.com/users/LGTM-badger/followers", "following_url": "https://api.github.com/users/LGTM-badger/following{/other_user}", "gists_url": "https://api.github.com/users/LGTM-badger/gists{/gist_id}", "starred_url": "https://api.github.com/users/LGTM-badger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LGTM-badger/subscriptions", "organizations_url": "https://api.github.com/users/LGTM-badger/orgs", "repos_url": "https://api.github.com/users/LGTM-badger/repos", "events_url": "https://api.github.com/users/LGTM-badger/events{/privacy}", "received_events_url": "https://api.github.com/users/LGTM-badger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T22:14:56Z", "updated_at": "2019-10-07T22:41:43Z", "closed_at": "2019-10-07T22:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi There,\r\n\r\nThis project is still using an old implementation of LGTM's automated code review, which has now been disabled. To continue using automated code review, and receive checks on your Pull Requests, please [install the GitHub App](https://github.com/apps/lgtm-com/installations/new) on this repository.\r\n\r\nThanks,\r\nThe LGTM Team", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/297", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/297/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/297/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/297", "id": 487961282, "node_id": "MDU6SXNzdWU0ODc5NjEyODI=", "number": 297, "title": "Decompose select elements if adding a new control with the same name", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-02T02:00:42Z", "updated_at": "2019-09-02T11:03:56Z", "closed_at": "2019-09-02T11:03:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When submitting a new control into a form it will automatically decompose inputs and textareas but not selects. I've been manually decomposing when updating a select that does not have the desired choice present so I thought this patch might be useful for others in the same situation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/291", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/291/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/291/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/291", "id": 470680783, "node_id": "MDU6SXNzdWU0NzA2ODA3ODM=", "number": 291, "title": "Uppercase Radio types not being checked", "user": {"login": "MNoumanAbbasi", "id": 51271051, "node_id": "MDQ6VXNlcjUxMjcxMDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/51271051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MNoumanAbbasi", "html_url": "https://github.com/MNoumanAbbasi", "followers_url": "https://api.github.com/users/MNoumanAbbasi/followers", "following_url": "https://api.github.com/users/MNoumanAbbasi/following{/other_user}", "gists_url": "https://api.github.com/users/MNoumanAbbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MNoumanAbbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MNoumanAbbasi/subscriptions", "organizations_url": "https://api.github.com/users/MNoumanAbbasi/orgs", "repos_url": "https://api.github.com/users/MNoumanAbbasi/repos", "events_url": "https://api.github.com/users/MNoumanAbbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/MNoumanAbbasi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-20T14:32:32Z", "updated_at": "2019-07-22T12:03:22Z", "closed_at": "2019-07-22T07:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to check a radio type in forms with type \"RADIO\" does not work; it is not checked.\r\nTrying this on [this test site](http://httpbin.org/forms/post).\r\nIt will work if we have a combination of uppercase and lowercase radio types like in the test_form file. For example, this will work:\r\n`<p><input name=\"size\" type=\"RADIO\" value=\"small\">Small</p>`\r\n`<p><input name=\"size\" type=\"radio\" value=\"medium\">Medium</p>`\r\n`<p><input name=\"size\" type=\"radio\" value=\"large\">Large</p>`\r\nBut the above will not work if all types are set to \"RADIO\" i.e. in uppercase.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/289", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/289/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/289/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/289", "id": 464854633, "node_id": "MDU6SXNzdWU0NjQ4NTQ2MzM=", "number": 289, "title": "How to log into website if input don't have a name?", "user": {"login": "Jaco020", "id": 52600799, "node_id": "MDQ6VXNlcjUyNjAwNzk5", "avatar_url": "https://avatars1.githubusercontent.com/u/52600799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaco020", "html_url": "https://github.com/Jaco020", "followers_url": "https://api.github.com/users/Jaco020/followers", "following_url": "https://api.github.com/users/Jaco020/following{/other_user}", "gists_url": "https://api.github.com/users/Jaco020/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaco020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaco020/subscriptions", "organizations_url": "https://api.github.com/users/Jaco020/orgs", "repos_url": "https://api.github.com/users/Jaco020/repos", "events_url": "https://api.github.com/users/Jaco020/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaco020/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-06T13:30:01Z", "updated_at": "2019-07-06T18:16:56Z", "closed_at": "2019-07-06T18:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently working on program that log into website. \r\nI test it on different sites and it works good, but on one site i found \r\npassword input without name. What should i do to log into that site?\r\n\r\nHere is my program\r\n\r\n    browser = mechanicalsoup.StatefulBrowser()\r\n    browser.open(\"website_url\")\r\n    browser.select_form(\"form\")\r\n    browser[\"login_input_name\"] = \"login\"\r\n    browser[\"pass_input_name\"] = \"pass\"\r\n\r\n    browser.submit_selected()\r\n\r\n    print(browser.get_url())\r\n    print(browser.get_current_page())\r\n\r\npassword input:\r\n<input` type=\"password\" class=\"defbtn_on_enter input_text\" id=\"pass\" value=\"\" style=\"width: 20ex; cursor: auto;\" autocomplete=\"off\">", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/287", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/287/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/287/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/287", "id": 460081320, "node_id": "MDU6SXNzdWU0NjAwODEzMjA=", "number": 287, "title": "No valid element named q", "user": {"login": "tbhaxor", "id": 28386721, "node_id": "MDQ6VXNlcjI4Mzg2NzIx", "avatar_url": "https://avatars3.githubusercontent.com/u/28386721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbhaxor", "html_url": "https://github.com/tbhaxor", "followers_url": "https://api.github.com/users/tbhaxor/followers", "following_url": "https://api.github.com/users/tbhaxor/following{/other_user}", "gists_url": "https://api.github.com/users/tbhaxor/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbhaxor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbhaxor/subscriptions", "organizations_url": "https://api.github.com/users/tbhaxor/orgs", "repos_url": "https://api.github.com/users/tbhaxor/repos", "events_url": "https://api.github.com/users/tbhaxor/events{/privacy}", "received_events_url": "https://api.github.com/users/tbhaxor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-06-24T20:30:26Z", "updated_at": "2019-06-29T14:21:52Z", "closed_at": "2019-06-29T14:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The reproduction code is\r\n\r\n```py\r\nurl = \"http://dramaonline.pk/\"\r\nfrom mechanicalsoup import StatefulBrowser # importing the browserb\r\nbrowser = StatefulBrowser() # creating browser with history enabled\r\nbrowser.open(url) # opening the url\r\nbrowser.select_form(\"#search_box\") # selecting the form\r\nbrowser[\"q\"] = \"TEST_tbhax0r\" # sending the values\r\nbrowser.submit_selected() # submit the selected form\r\n```\r\n\r\n**Error**\r\n```\r\n---------------------------------------------------------------------------\r\nLinkNotFoundError                         Traceback (most recent call last)\r\n<ipython-input-39-6637ec083075> in <module>\r\n----> 1 browser[\"q\"] = \"TEST_tbhax0r\" # sending the values\r\n      2 browser.submit_selected() # submit the selected form\r\n\r\n/usr/lib/python3.7/site-packages/mechanicalsoup/stateful_browser.py in __setitem__(self, name, value)\r\n    101         See :func:`Form.__setitem__`.\r\n    102         \"\"\"\r\n--> 103         self.get_current_form()[name] = value\r\n    104 \r\n    105     def new_control(self, type, name, value, **kwargs):\r\n\r\n/usr/lib/python3.7/site-packages/mechanicalsoup/form.py in __setitem__(self, name, value)\r\n    223         :code:`form[\"name\"] = \"value\"` calls :code:`form.set(\"name\", \"value\")`.\r\n    224         \"\"\"\r\n--> 225         return self.set(name, value)\r\n    226 \r\n    227     def set(self, name, value, force=False):\r\n\r\n/usr/lib/python3.7/site-packages/mechanicalsoup/form.py in set(self, name, value, force)\r\n    264             self.new_control('text', name, value=value)\r\n    265             return\r\n--> 266         raise LinkNotFoundError(\"No valid element named \" + name)\r\n    267 \r\n    268     def new_control(self, type, name, value, **kwargs):\r\n\r\nLinkNotFoundError: No valid element named q\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/278", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/278/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/278/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/278", "id": 433051463, "node_id": "MDU6SXNzdWU0MzMwNTE0NjM=", "number": 278, "title": "Looking for equivalent of `open_novisit(br.click())", "user": {"login": "yacoob", "id": 190463, "node_id": "MDQ6VXNlcjE5MDQ2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/190463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yacoob", "html_url": "https://github.com/yacoob", "followers_url": "https://api.github.com/users/yacoob/followers", "following_url": "https://api.github.com/users/yacoob/following{/other_user}", "gists_url": "https://api.github.com/users/yacoob/gists{/gist_id}", "starred_url": "https://api.github.com/users/yacoob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yacoob/subscriptions", "organizations_url": "https://api.github.com/users/yacoob/orgs", "repos_url": "https://api.github.com/users/yacoob/repos", "events_url": "https://api.github.com/users/yacoob/events{/privacy}", "received_events_url": "https://api.github.com/users/yacoob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-15T00:17:46Z", "updated_at": "2019-04-17T11:17:23Z", "closed_at": "2019-04-17T11:17:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm in the process of migrating https://github.com/yacoob/aib2ofx to python 3. Given that mechanize is not python 3 compatible, I was very happy to find MechanicalSoup. I've just bumped into a problem though.\r\n\r\nThe page I'm automating has a form which results in download of a csv file. With mechanize, I can do this:\r\n\r\n```python\r\nbr = mechanize.Browser()\r\nbr.select_form(predicate=_attrEquals('id', 'historicalTransactionsCommand'))\r\nresponse = br.open_novisit(br.click())\r\n```\r\n\r\nand end up with csv content in `response`. I don't see a clean way of replicating this with MechanicalSoup. There's `download_link`, but there's no link to reference for this function. Before you ask, I can't get to the csv without form submission - all navigation for that bank is done based on forms :( An alternative might be to use normal `submit_selected()`, then ask `StatefulBrowser` to go \"back\" without reloading the page - but I don't see any public method to do this.\r\n\r\nIs there any sensible way of achieving this? If there isn't - can you please add one? :)\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/266", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/266/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/266/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/266", "id": 403364840, "node_id": "MDU6SXNzdWU0MDMzNjQ4NDA=", "number": 266, "title": "No form id,class,name just method=\"post\" and novalidate", "user": {"login": "raku666", "id": 47044758, "node_id": "MDQ6VXNlcjQ3MDQ0NzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/47044758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raku666", "html_url": "https://github.com/raku666", "followers_url": "https://api.github.com/users/raku666/followers", "following_url": "https://api.github.com/users/raku666/following{/other_user}", "gists_url": "https://api.github.com/users/raku666/gists{/gist_id}", "starred_url": "https://api.github.com/users/raku666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raku666/subscriptions", "organizations_url": "https://api.github.com/users/raku666/orgs", "repos_url": "https://api.github.com/users/raku666/repos", "events_url": "https://api.github.com/users/raku666/events{/privacy}", "received_events_url": "https://api.github.com/users/raku666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-25T22:55:03Z", "updated_at": "2019-01-28T03:09:17Z", "closed_at": "2019-01-28T03:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, it cant seem to detect the only form on the site. the form only had method=\"post\" and novalidate\r\n\r\nis it possible to submit a form with just method and novalidate? please help me.\r\n\r\nbr.select_form() doesnt work .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/264", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/264/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/264/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/264", "id": 402865329, "node_id": "MDU6SXNzdWU0MDI4NjUzMjk=", "number": 264, "title": "Cannot submit form with multiple identical submits", "user": {"login": "ricecooker", "id": 1724034, "node_id": "MDQ6VXNlcjE3MjQwMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1724034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricecooker", "html_url": "https://github.com/ricecooker", "followers_url": "https://api.github.com/users/ricecooker/followers", "following_url": "https://api.github.com/users/ricecooker/following{/other_user}", "gists_url": "https://api.github.com/users/ricecooker/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricecooker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricecooker/subscriptions", "organizations_url": "https://api.github.com/users/ricecooker/orgs", "repos_url": "https://api.github.com/users/ricecooker/repos", "events_url": "https://api.github.com/users/ricecooker/events{/privacy}", "received_events_url": "https://api.github.com/users/ricecooker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-24T19:40:46Z", "updated_at": "2019-08-13T11:47:00Z", "closed_at": "2019-03-12T07:07:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I have a form like:\r\n\r\n```\r\n<form action=\"#\" method=\"POST\" name=\"blah\">\r\n  <input type=\"submit\" name=\"search\" value=\"Search\"/>\r\n  <input type=\"submit\" name=\"search\" value=\"Search\"/>\r\n</form>\r\n```\r\nThere isn't a way to submit the form. It will *always* raise a `LinkNotFoundError`.\r\n\r\nAround form.py:333 I'd do \r\n```\r\nif inp == submit and found: \r\n  del inp['name']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/257", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/257/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/257/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/257", "id": 399989273, "node_id": "MDU6SXNzdWUzOTk5ODkyNzM=", "number": 257, "title": "Tests broken after pip upgrade", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-01-16T20:45:53Z", "updated_at": "2019-01-17T20:28:54Z", "closed_at": "2019-01-17T19:44:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The tests are failing on Travis now due to a change in one of our dependencies. I updated my pip packages and can confirm that they went from passing to failing.\r\n\r\nA cursory look at the failures seem to indicate that some lists are now ordered differently. I will investigate to see if we should expect a different order, or if it's an issue of some randomness due to, e.g., assuming an ordering of dictionary elements.\r\n\r\nIt's not entirely helpful, but here's the original (passing) and newest (failing) packages I was using:\r\n```\r\nName           Current Version Latest Version Home Page                                                \r\n-------------- --------------- -------------- ---------------------------------------------------------\r\nwheel          0.31.1          0.32.3         https://github.com/pypa/wheel                            \r\nurllib3        1.23            1.24.1         https://urllib3.readthedocs.io/                          \r\ntwine          1.11.0          1.12.1         https://twine.readthedocs.io/                            \r\ntqdm           4.26.0          4.29.1         https://github.com/tqdm/tqdm                             \r\nSphinx         1.7.5           1.8.3          http://sphinx-doc.org/                                   \r\nsix            1.11.0          1.12.0         https://github.com/benjaminp/six                         \r\nsetuptools     40.2.0          40.6.3         https://github.com/pypa/setuptools                       \r\nrequests       2.19.1          2.21.0         http://python-requests.org                               \r\nrequests-mock  1.5.0           1.5.2          https://requests-mock.readthedocs.io/                    \r\nraven          6.9.0           6.10.0         https://github.com/getsentry/raven-python                \r\npytz           2018.4          2018.9         http://pythonhosted.org/pytz                             \r\npytest         3.6.1           4.1.1          https://docs.pytest.org/en/latest/                       \r\npytest-flake8  1.0.1           1.0.3          https://github.com/tholo/pytest-flake8                   \r\npytest-cov     2.5.1           2.6.1          https://github.com/pytest-dev/pytest-cov                 \r\npyparsing      2.2.0           2.3.1          https://github.com/pyparsing/pyparsing/                  \r\nPygments       2.2.0           2.3.1          http://pygments.org/                                     \r\npyflakes       1.6.0           2.0.0          https://github.com/PyCQA/pyflakes                        \r\npycparser      2.18            2.19           https://github.com/eliben/pycparser                      \r\npycodestyle    2.3.1           2.4.0          https://pycodestyle.readthedocs.io/                      \r\npy             1.5.3           1.7.0          http://py.readthedocs.io/                                \r\nprompt-toolkit 1.0.15          2.0.7          https://github.com/jonathanslenders/python-prompt-toolkit\r\npluggy         0.6.0           0.8.1          https://github.com/pytest-dev/pluggy                     \r\npkginfo        1.4.2           1.5.0.1        https://code.launchpad.net/~tseaver/pkginfo/trunk        \r\npip            9.0.1           18.1           https://pip.pypa.io/                                     \r\npickleshare    0.7.4           0.7.5          https://github.com/pickleshare/pickleshare               \r\nparso          0.2.1           0.3.1          https://github.com/davidhalter/parso                     \r\npackaging      17.1            18.0           https://github.com/pypa/packaging                        \r\nmore-itertools 4.2.0           5.0.0          https://github.com/erikrose/more-itertools             \r\nMarkupSafe     1.0             1.1.0          https://www.palletsprojects.com/p/markupsafe/            \r\nlxml           4.2.1           4.3.0          http://lxml.de/                                          \r\njedi           0.12.0          0.13.2         https://github.com/davidhalter/jedi                      \r\nitsdangerous   0.24            1.1.0          https://palletsprojects.com/p/itsdangerous/              \r\nipython        6.4.0           7.2.0          https://ipython.org                                      \r\nimagesize      1.0.0           1.1.0          https://github.com/shibukawa/imagesize_py                \r\nidna           2.7             2.8            https://github.com/kjd/idna                              \r\nflake8         3.5.0           3.6.0          https://gitlab.com/pycqa/flake8                          \r\ncoverage       4.5.1           4.5.2          https://bitbucket.org/ned/coveragepy                     \r\nclick          6.7             7.0            https://palletsprojects.com/p/click/                     \r\ncertifi        2018.8.24       2018.11.29     https://certifi.io/                                      \r\nbeautifulsoup4 4.6.0           4.7.1          http://www.crummy.com/software/BeautifulSoup/bs4/        \r\nattrs          18.1.0          18.2.0         https://www.attrs.org/                                   \r\natomicwrites   1.1.5           1.2.1          https://github.com/untitaker/python-atomicwrites         \r\nalabaster      0.7.10          0.7.12         https://alabaster.readthedocs.io                         \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/255", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/255/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/255/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/255", "id": 396621503, "node_id": "MDU6SXNzdWUzOTY2MjE1MDM=", "number": 255, "title": "Question: example.py seems to broken (again)?", "user": {"login": "clipka", "id": 3518665, "node_id": "MDQ6VXNlcjM1MTg2NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3518665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clipka", "html_url": "https://github.com/clipka", "followers_url": "https://api.github.com/users/clipka/followers", "following_url": "https://api.github.com/users/clipka/following{/other_user}", "gists_url": "https://api.github.com/users/clipka/gists{/gist_id}", "starred_url": "https://api.github.com/users/clipka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clipka/subscriptions", "organizations_url": "https://api.github.com/users/clipka/orgs", "repos_url": "https://api.github.com/users/clipka/repos", "events_url": "https://api.github.com/users/clipka/events{/privacy}", "received_events_url": "https://api.github.com/users/clipka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T19:39:20Z", "updated_at": "2019-01-07T20:20:56Z", "closed_at": "2019-01-07T20:20:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried to run the example as is without success.\r\n\r\nTraceback (most recent call last):\r\n  File \"example.py\", line 37, in <module>\r\n    assert page.select(\".logout-form\")\r\nAssertionError\r\n\r\nDoes anyone else has the same problem? Thanks for help!\r\n\r\nHere is the environment I use:\r\n\r\npip3 show mechanicalsoup\r\nName: MechanicalSoup\r\nVersion: 0.11.0\r\nSummary: A Python library for automating interaction with websites\r\nHome-page: https://mechanicalsoup.readthedocs.io/\r\nAuthor: UNKNOWN\r\nAuthor-email: UNKNOWN\r\nLicense: MIT\r\nLocation: /usr/local/lib64/python3.7/site-packages\r\nRequires: requests, beautifulsoup4, lxml, six\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/253", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/253/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/253/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/253", "id": 385445081, "node_id": "MDU6SXNzdWUzODU0NDUwODE=", "number": 253, "title": "Memory usage steadily increasing when running for a longer time", "user": {"login": "StevenLooman", "id": 724259, "node_id": "MDQ6VXNlcjcyNDI1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/724259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StevenLooman", "html_url": "https://github.com/StevenLooman", "followers_url": "https://api.github.com/users/StevenLooman/followers", "following_url": "https://api.github.com/users/StevenLooman/following{/other_user}", "gists_url": "https://api.github.com/users/StevenLooman/gists{/gist_id}", "starred_url": "https://api.github.com/users/StevenLooman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StevenLooman/subscriptions", "organizations_url": "https://api.github.com/users/StevenLooman/orgs", "repos_url": "https://api.github.com/users/StevenLooman/repos", "events_url": "https://api.github.com/users/StevenLooman/events{/privacy}", "received_events_url": "https://api.github.com/users/StevenLooman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-11-28T20:33:01Z", "updated_at": "2018-12-27T16:14:56Z", "closed_at": "2018-12-27T16:14:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems there is a memory leak which causes a Out of Memory after some time.\r\n\r\nI'm using MechanicalSoup to poll my router for connected wifi clients. Unfortunately, the router does not provide other means to get this information. My script does the following:\r\n1. Open StatefulBrowser, browse to the login/main page of the browser;\r\n2. Login into the router: fill in a form and submit;\r\n3. Go to a certain URL, listing all the connected wifi clients;\r\n4. Find all elements which hold a wifi client/hardware address;\r\n5. Sleep for 30 seconds and goto 1.\r\n\r\nIt looks something like this:\r\n```\r\ndef has_mac_addr(tag: 'bs4.element.Tag'):\r\n    \"\"\"Get anything which is a <td> and has a hardware address in it.\"\"\"\r\n    return tag.name == 'td' and \\\r\n           re.search(r'^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$', tag.text, re.I)\r\n\r\ndef poll_router() -> List[str]:\r\n    # open browser\r\n    browser = mechanicalsoup.StatefulBrowser(...)\r\n    browser.open(ROUTER_ADDRESS)\r\n\r\n    # login\r\n    browser.select_form('form[name=\"...\"]')\r\n    browser['loginUsername'] = 'xxx'\r\n    browser['loginPassword'] = 'xxx'\r\n    resp = browser.submit_selected()\r\n\r\n    # go to wlan access page\r\n    browser.open_relative('/...')\r\n\r\n    # extract associated clients\r\n    page = browser.get_current_page()\r\n    tds = page.find_all(has_mac_addr)\r\n    addresses = [td.text.lower() for td in tds]\r\n\r\n    return addresses\r\n```\r\n\r\nAfter about a day, the process is killed due to being out of memory. Running `MechanicalSoup==0.11.0` on `python==3.5.3` on a Raspberry Pi 3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/250", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/250/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/250/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/250", "id": 383580990, "node_id": "MDU6SXNzdWUzODM1ODA5OTA=", "number": 250, "title": "Submitting a form with a blank file input differs to real browser behaviour", "user": {"login": "the-allanc", "id": 4016213, "node_id": "MDQ6VXNlcjQwMTYyMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4016213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the-allanc", "html_url": "https://github.com/the-allanc", "followers_url": "https://api.github.com/users/the-allanc/followers", "following_url": "https://api.github.com/users/the-allanc/following{/other_user}", "gists_url": "https://api.github.com/users/the-allanc/gists{/gist_id}", "starred_url": "https://api.github.com/users/the-allanc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the-allanc/subscriptions", "organizations_url": "https://api.github.com/users/the-allanc/orgs", "repos_url": "https://api.github.com/users/the-allanc/repos", "events_url": "https://api.github.com/users/the-allanc/events{/privacy}", "received_events_url": "https://api.github.com/users/the-allanc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1219983835, "node_id": "MDU6TGFiZWwxMjE5OTgzODM1", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/easy?", "name": "easy?", "color": "5319e7", "default": false, "description": "Probably easy to implement, or WIP almost complete"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-22T15:27:48Z", "updated_at": "2019-04-03T19:36:12Z", "closed_at": "2019-04-03T19:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, I'm really enjoying using MechanicalSoup after moving away from mechanize, so thanks for all of the work on it!\r\n\r\nSo I've encountered what I think is a bug - or certainly a deviation from the behaviour of regular browser behaviour.\r\n\r\nIf you have a form which contains a file input, and you submit it without selecting a file:\r\n\r\n- Doing this via a browser will submit an empty file for the input\r\n- Doing this via MechanicalSoup will not submit a value for the input at all\r\n\r\nTo recreate it, here's a very simple CherryPy app that will show the behaviour.\r\n```\r\nimport cherrypy\r\n\r\nclass OptionalFile(object):\r\n\r\n    @cherrypy.expose\r\n    def index(self, name=None, somefile=None):\r\n        if name is not None:\r\n            cherrypy.response.headers['Content-Type'] = 'text/plain'\r\n            result = 'Name: {!r}, File: {!r}'.format(name, somefile)\r\n            cherrypy.log(result)\r\n            return result\r\n        return '''\r\n        <html>\r\n        <body>\r\n        <form method=\"POST\" enctype=\"multipart/form-data\">\r\n        Enter a name: <input type=\"text\" name=\"name\" /><br />\r\n        Enter a file: <input type=\"file\" name=\"somefile\" /><br />\r\n        <input type=\"submit\" />\r\n        </form>\r\n        </body>\r\n        </html>\r\n        '''\r\n        \r\nif __name__ == '__main__':\r\n    cherrypy.quickstart(OptionalFile(), '/', {'/': {'tools.encode.on': True}})\r\n```\r\n\r\nIt prints the submitted repsonse to the log, as well as in the content of the response.\r\n\r\nHere's how I'm testing what MechanicalSoup does - I set the \"name\" input element, but leave the \"somefile\" one blank.\r\n\r\n```\r\nPython 3.6.5 (default, Jul 26 2018, 12:10:08) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from mechanicalsoup import StatefulBrowser\r\n>>> b = StatefulBrowser()\r\n>>> b.open('http://127.0.0.1:8080')\r\n<Response [200]>\r\n>>> form = b.select_form()\r\n>>> form['name'] = 'hello'\r\n>>> print(b.submit_selected().text)\r\nName: 'hello', File: None\r\n```\r\n\r\nAnd here's output from the app's logs - I tested with Chromium, then MechanicalSoup, and then Firefox - as you can see, the \"file\" input is processed as a `_cpreqbody.Part` object when submitted via a browser (even though no file was selected), while it is `None` for MechanicalSoup's interaction.\r\n\r\n```\r\n127.0.0.1 - - [22/Nov/2018:14:58:01] \"GET / HTTP/1.1\" 200 306 \"\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/67.0.3396.99 Chrome/67.0.3396.99 Safari/537.36\"\r\n[22/Nov/2018:14:58:04]  Name: 'hello', File: <cherrypy._cpreqbody.Part object at 0x7f9986d6b668>\r\n127.0.0.1 - - [22/Nov/2018:14:58:04] \"POST / HTTP/1.1\" 200 72 \"http://127.0.0.1:8080/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/67.0.3396.99 Chrome/67.0.3396.99 Safari/537.36\"\r\n127.0.0.1 - - [22/Nov/2018:14:59:26] \"GET / HTTP/1.1\" 200 306 \"\" \"python-requests/2.20.1 (MechanicalSoup/0.11.0)\"\r\n[22/Nov/2018:15:00:59]  Name: 'hello', File: None\r\n127.0.0.1 - - [22/Nov/2018:15:00:59] \"POST / HTTP/1.1\" 200 25 \"http://127.0.0.1:8080/\" \"python-requests/2.20.1 (MechanicalSoup/0.11.0)\"\r\n127.0.0.1 - - [22/Nov/2018:15:06:14] \"GET / HTTP/1.1\" 200 306 \"\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\"\r\n127.0.0.1 - - [22/Nov/2018:15:06:18] \"GET /favicon.ico HTTP/1.1\" 200 1406 \"\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\"\r\n[22/Nov/2018:15:06:25]  Name: 'hello', File: <cherrypy._cpreqbody.Part object at 0x7f99844f6860>\r\n127.0.0.1 - - [22/Nov/2018:15:06:25] \"POST / HTTP/1.1\" 200 72 \"http://127.0.0.1:8080/\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/248", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/248/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/248/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/248", "id": 379576905, "node_id": "MDU6SXNzdWUzNzk1NzY5MDU=", "number": 248, "title": "Do not submit disabled <input> elements", "user": {"login": "5j9", "id": 1055747, "node_id": "MDQ6VXNlcjEwNTU3NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1055747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5j9", "html_url": "https://github.com/5j9", "followers_url": "https://api.github.com/users/5j9/followers", "following_url": "https://api.github.com/users/5j9/following{/other_user}", "gists_url": "https://api.github.com/users/5j9/gists{/gist_id}", "starred_url": "https://api.github.com/users/5j9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5j9/subscriptions", "organizations_url": "https://api.github.com/users/5j9/orgs", "repos_url": "https://api.github.com/users/5j9/repos", "events_url": "https://api.github.com/users/5j9/events{/privacy}", "received_events_url": "https://api.github.com/users/5j9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-11-11T23:38:31Z", "updated_at": "2019-01-28T12:27:46Z", "closed_at": "2019-01-28T12:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://www.w3.org/TR/html52/sec-forms.html#element-attrdef-disabledformelements-disabled\r\n> The disabled attribute is used to make the control non-interactive and to prevent its value from being submitted.\r\n\r\nMechanicalSoup ignores ``disabled`` attributes which should be fixed.\r\n\r\nSome additional notes: (from https://www.wufoo.com/html5/disabled-attribute/)\r\n\r\n> * If the disabled attribute is set on a ``<fieldset>``, the descendent form controls are disabled.\r\n> * A disabled field can\u2019t be modified, tabbed to, highlighted, or have its contents copied. Its value is also ignored when the form goes thru constraint validation.\r\n> * The disabled value is Boolean, and therefore doesn\u2019t need a value. But, if you must, you can include disabled=\"disabled\".\r\n> * Setting the value of the disabled attribute to null does not remove the effects of the attribute. Instead use removeAttribute('disabled').\r\n> * You can target elements that are disabled with the :disabled pseudo-class. Or, if you want to specifically target the presence of the attribute, you can use input[disabled]. Similarly, you can use :enabled and input:not([disabled]) to target elements that are not disabled.\r\n> * You do not need to include aria-disabled=\"true\" when including the disabled attribute because disabled is already well supported. However, if you are programmatically disabling an element that is not a form control and therefore the disabled attribute does not apply, include aria-disabled=\"true\".\r\n> * The disabled attribute is valid for all form controls including all ``<input>`` types, ``<textarea>``, ``<button>``, ``<select>``, ``<fieldset>``, and ``<keygen>``.\r\n> ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/245", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/245/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/245/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/245", "id": 369816551, "node_id": "MDU6SXNzdWUzNjk4MTY1NTE=", "number": 245, "title": "Tag type maching case sensitive", "user": {"login": "Pimmetje", "id": 374414, "node_id": "MDQ6VXNlcjM3NDQxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/374414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pimmetje", "html_url": "https://github.com/Pimmetje", "followers_url": "https://api.github.com/users/Pimmetje/followers", "following_url": "https://api.github.com/users/Pimmetje/following{/other_user}", "gists_url": "https://api.github.com/users/Pimmetje/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pimmetje/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pimmetje/subscriptions", "organizations_url": "https://api.github.com/users/Pimmetje/orgs", "repos_url": "https://api.github.com/users/Pimmetje/repos", "events_url": "https://api.github.com/users/Pimmetje/events{/privacy}", "received_events_url": "https://api.github.com/users/Pimmetje/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-13T16:13:45Z", "updated_at": "2019-01-17T20:20:54Z", "closed_at": "2019-01-17T20:20:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the form uses upper casing the matching would fail.\r\n\r\nhttps://github.com/MechanicalSoup/MechanicalSoup/blob/5926d0efd887097f9da56241ae945c4d5a81d8ba/mechanicalsoup/browser.py#L166\r\n\r\nSuggest adding .lower()\r\n`if tag.get(\"type\").lower() in (\"radio\", \"checkbox\"):`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/243", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/243/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/243/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/243", "id": 366182307, "node_id": "MDU6SXNzdWUzNjYxODIzMDc=", "number": 243, "title": "select input in the form", "user": {"login": "erichuang2015", "id": 9510694, "node_id": "MDQ6VXNlcjk1MTA2OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9510694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erichuang2015", "html_url": "https://github.com/erichuang2015", "followers_url": "https://api.github.com/users/erichuang2015/followers", "following_url": "https://api.github.com/users/erichuang2015/following{/other_user}", "gists_url": "https://api.github.com/users/erichuang2015/gists{/gist_id}", "starred_url": "https://api.github.com/users/erichuang2015/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erichuang2015/subscriptions", "organizations_url": "https://api.github.com/users/erichuang2015/orgs", "repos_url": "https://api.github.com/users/erichuang2015/repos", "events_url": "https://api.github.com/users/erichuang2015/events{/privacy}", "received_events_url": "https://api.github.com/users/erichuang2015/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1147779743, "node_id": "MDU6TGFiZWwxMTQ3Nzc5NzQz", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/needs%20info", "name": "needs info", "color": "b6fc05", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-03T05:37:26Z", "updated_at": "2018-12-02T19:08:32Z", "closed_at": "2018-12-02T19:08:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\n\r\nhow to deal with the form with select input element\r\n\r\n<select name=\"mylist\">\r\n                    <option selected=\"selected\">first</option>\r\n                    <option>two</option>\r\n                    <option>threee</option>\r\n                    <option>four</option>\r\n</select>\r\n\r\nerrors throw when try \r\n\r\n response = browser.submit_selected()\r\n\r\noption.attrs[\"selected\"] = \"selected\"\r\nAttributeError: 'NoneType' object has no attribute 'attrs'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/242", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/242/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/242/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/242", "id": 365278949, "node_id": "MDU6SXNzdWUzNjUyNzg5NDk=", "number": 242, "title": "Respect enctype specified in forms", "user": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars1.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1219983835, "node_id": "MDU6TGFiZWwxMjE5OTgzODM1", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/easy?", "name": "easy?", "color": "5319e7", "default": false, "description": "Probably easy to implement, or WIP almost complete"}, {"id": 102333924, "node_id": "MDU6TGFiZWwxMDIzMzM5MjQ=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-01T00:57:11Z", "updated_at": "2019-08-13T16:42:17Z", "closed_at": "2019-08-13T16:42:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "MechanicalSoup currently ignores the enctype specified for a form when submitting it, instead using the default used by requests (which is application/x-www-form-urlencoded unless you specify \"files\" to upload).  I'd like it to behave more like a browser by respecting the given enctype (apparently you should specify \"files\" to requests to upload form fields that aren't files as multipart/form-data - which is the case I'm concerned with, making sure to submit as multipart/form-data when that's what the form specifies as its enctype).  This is for testing web applications which behave differently when you submit with the wrong enctype (concretely, the Python cgi module defaults to ignoring fields with empty values for application/x-www-form-urlencoded but not for multipart/form-data, so any application using that may behave differently for submissions with the wrong enctype).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/241", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/241/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/241/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/241", "id": 362820565, "node_id": "MDU6SXNzdWUzNjI4MjA1NjU=", "number": 241, "title": "Send an non-form", "user": {"login": "CaioFrancisco", "id": 36608862, "node_id": "MDQ6VXNlcjM2NjA4ODYy", "avatar_url": "https://avatars3.githubusercontent.com/u/36608862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaioFrancisco", "html_url": "https://github.com/CaioFrancisco", "followers_url": "https://api.github.com/users/CaioFrancisco/followers", "following_url": "https://api.github.com/users/CaioFrancisco/following{/other_user}", "gists_url": "https://api.github.com/users/CaioFrancisco/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaioFrancisco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaioFrancisco/subscriptions", "organizations_url": "https://api.github.com/users/CaioFrancisco/orgs", "repos_url": "https://api.github.com/users/CaioFrancisco/repos", "events_url": "https://api.github.com/users/CaioFrancisco/events{/privacy}", "received_events_url": "https://api.github.com/users/CaioFrancisco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-22T02:54:13Z", "updated_at": "2018-10-01T12:21:02Z", "closed_at": "2018-10-01T12:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do i send a non-form in mechanicalsoup?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/239", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/239/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/239/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/239", "id": 359261440, "node_id": "MDU6SXNzdWUzNTkyNjE0NDA=", "number": 239, "title": "Issues with releases and assets", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1219983835, "node_id": "MDU6TGFiZWwxMjE5OTgzODM1", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/easy?", "name": "easy?", "color": "5319e7", "default": false, "description": "Probably easy to implement, or WIP almost complete"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-11T23:34:03Z", "updated_at": "2019-06-01T06:26:52Z", "closed_at": "2019-06-01T06:26:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. PyPI does not allow links to local assets in its documentation, so the logo shows up as a missing image.\r\n2. ~~The inclusion of assets in our release file has doubled its size (from 25K to 50K).~~ (edit: actually, no)\r\n\r\nFrom other repositories I have inspected, the README typically has a link to the content on github rather than a local path.\r\n\r\n@moy How do you feel about excluding `assets` from the release and linking to our assets on github instead? This probably deserves a post1 release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/225", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/225/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/225/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/225", "id": 347336185, "node_id": "MDU6SXNzdWUzNDczMzYxODU=", "number": 225, "title": "release universal wheels", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-03T10:02:02Z", "updated_at": "2018-08-03T20:44:50Z", "closed_at": "2018-08-03T20:44:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/221", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/221/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/221/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/221", "id": 341729976, "node_id": "MDU6SXNzdWUzNDE3Mjk5NzY=", "number": 221, "title": "TextArea add new line", "user": {"login": "Neuroforge", "id": 1474186, "node_id": "MDQ6VXNlcjE0NzQxODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1474186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neuroforge", "html_url": "https://github.com/Neuroforge", "followers_url": "https://api.github.com/users/Neuroforge/followers", "following_url": "https://api.github.com/users/Neuroforge/following{/other_user}", "gists_url": "https://api.github.com/users/Neuroforge/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neuroforge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neuroforge/subscriptions", "organizations_url": "https://api.github.com/users/Neuroforge/orgs", "repos_url": "https://api.github.com/users/Neuroforge/repos", "events_url": "https://api.github.com/users/Neuroforge/events{/privacy}", "received_events_url": "https://api.github.com/users/Neuroforge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1147779743, "node_id": "MDU6TGFiZWwxMTQ3Nzc5NzQz", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/needs%20info", "name": "needs info", "color": "b6fc05", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-17T01:09:30Z", "updated_at": "2018-12-02T19:12:35Z", "closed_at": "2018-12-02T19:12:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to add a new line to text put into a TextArea.\r\n\r\nI've tried the standard python \"\\n\" and \"\\r\\n\" but no luck. It prints the characters to the textarea as well.\r\n\r\nRegards,\r\n\r\nDaniel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/215", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/215/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/215/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/215", "id": 336271563, "node_id": "MDU6SXNzdWUzMzYyNzE1NjM=", "number": 215, "title": "httpbin tests require network access", "user": {"login": "sbraz", "id": 4833332, "node_id": "MDQ6VXNlcjQ4MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4833332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbraz", "html_url": "https://github.com/sbraz", "followers_url": "https://api.github.com/users/sbraz/followers", "following_url": "https://api.github.com/users/sbraz/following{/other_user}", "gists_url": "https://api.github.com/users/sbraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbraz/subscriptions", "organizations_url": "https://api.github.com/users/sbraz/orgs", "repos_url": "https://api.github.com/users/sbraz/repos", "events_url": "https://api.github.com/users/sbraz/events{/privacy}", "received_events_url": "https://api.github.com/users/sbraz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-27T15:09:17Z", "updated_at": "2018-06-27T16:54:38Z", "closed_at": "2018-06-27T16:50:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nIt seems that tests require network access. You modified pytest-httpbin to make it connect to the real website instead of the local version, why is that?\r\nThe Gentoo sandbox doesn't allow network access so this causes the tests to fail:\r\n```\r\nE           requests.exceptions.ConnectionError: HTTPConnectionPool(host='httpbin.org', port=80): Max retries exceeded with url: /forms/post (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8ca79b8ac8>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))\r\n\r\n```\r\n\r\nHere is the full [build.log](https://github.com/MechanicalSoup/MechanicalSoup/files/2141788/build.log).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/213", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/213/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/213/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/213", "id": 334865471, "node_id": "MDU6SXNzdWUzMzQ4NjU0NzE=", "number": 213, "title": "testsuite failure (LinkNotFoundError)", "user": {"login": "LocutusOfBorg", "id": 1227338, "node_id": "MDQ6VXNlcjEyMjczMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1227338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LocutusOfBorg", "html_url": "https://github.com/LocutusOfBorg", "followers_url": "https://api.github.com/users/LocutusOfBorg/followers", "following_url": "https://api.github.com/users/LocutusOfBorg/following{/other_user}", "gists_url": "https://api.github.com/users/LocutusOfBorg/gists{/gist_id}", "starred_url": "https://api.github.com/users/LocutusOfBorg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LocutusOfBorg/subscriptions", "organizations_url": "https://api.github.com/users/LocutusOfBorg/orgs", "repos_url": "https://api.github.com/users/LocutusOfBorg/repos", "events_url": "https://api.github.com/users/LocutusOfBorg/events{/privacy}", "received_events_url": "https://api.github.com/users/LocutusOfBorg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-22T12:46:34Z", "updated_at": "2018-06-27T21:40:40Z", "closed_at": "2018-06-27T21:40:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, since some days Debian and Ubuntu testsuite have started failing... Probably httpbin changed some bits?\r\nsee: https://ci.debian.net/packages/p/python-mechanicalsoup/\r\n\r\nand the logs: https://ci.debian.net/packages/p/python-mechanicalsoup/unstable/amd64/\r\n\r\n```\r\nTesting with python3.6:\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.6rc1+, pytest-3.3.2, py-1.5.3, pluggy-0.6.0 -- /usr/bin/python3.6\r\ncachedir: .cache\r\nrootdir: /tmp/autopkgtest-lxc.vt1vanff/downtmp/autopkgtest_tmp, inifile:\r\nplugins: mock-1.7.1\r\ncollecting ... collected 64 items\r\n\r\ntests/test_browser.py::test_submit_online PASSED                         [  1%]\r\ntests/test_browser.py::test__request PASSED                              [  3%]\r\ntests/test_browser.py::test__request_file PASSED                         [  4%]\r\ntests/test_browser.py::test_no_404 PASSED                                [  6%]\r\ntests/test_browser.py::test_404 PASSED                                   [  7%]\r\ntests/test_browser.py::test_set_cookiejar PASSED                         [  9%]\r\ntests/test_browser.py::test_get_cookiejar PASSED                         [ 10%]\r\ntests/test_browser.py::test_post PASSED                                  [ 12%]\r\ntests/test_form.py::test_submit_online PASSED                            [ 14%]\r\ntests/test_form.py::test_submit_set PASSED                               [ 15%]\r\ntests/test_form.py::test_choose_submit[preview] PASSED                   [ 17%]\r\ntests/test_form.py::test_choose_submit[save] PASSED                      [ 18%]\r\ntests/test_form.py::test_choose_submit[cancel] PASSED                    [ 20%]\r\ntests/test_form.py::test_choose_submit_fail[not found] PASSED            [ 21%]\r\ntests/test_form.py::test_choose_submit_fail[found] PASSED                [ 23%]\r\ntests/test_form.py::test_choose_submit_multiple_match PASSED             [ 25%]\r\ntests/test_form.py::test_form_noaction PASSED                            [ 26%]\r\ntests/test_form.py::test_form_action PASSED                              [ 28%]\r\ntests/test_form.py::test_set_select[default] PASSED                      [ 29%]\r\ntests/test_form.py::test_set_select[selected] PASSED                     [ 31%]\r\ntests/test_form.py::test_set_select_multiple[select one (str)] PASSED    [ 32%]\r\ntests/test_form.py::test_set_select_multiple[select one (tuple)] PASSED  [ 34%]\r\ntests/test_form.py::test_set_select_multiple[select two] PASSED          [ 35%]\r\ntests/test_form.py::test_form_not_found PASSED                           [ 37%]\r\ntests/test_form.py::test_form_check_uncheck PASSED                       [ 39%]\r\ntests/test_form.py::test_form_print_summary PASSED                       [ 40%]\r\ntests/test_form.py::test_issue180 PASSED                                 [ 42%]\r\ntests/test_stateful_browser.py::test_request_forward PASSED              [ 43%]\r\ntests/test_stateful_browser.py::test_submit_online PASSED                [ 45%]\r\ntests/test_stateful_browser.py::test_no_404 PASSED                       [ 46%]\r\ntests/test_stateful_browser.py::test_404 PASSED                          [ 48%]\r\ntests/test_stateful_browser.py::test_user_agent PASSED                   [ 50%]\r\ntests/test_stateful_browser.py::test_open_relative PASSED                [ 51%]\r\ntests/test_stateful_browser.py::test_links PASSED                        [ 53%]\r\ntests/test_stateful_browser.py::test_submit_btnName[input] PASSED        [ 54%]\r\ntests/test_stateful_browser.py::test_submit_btnName[button] PASSED       [ 56%]\r\ntests/test_stateful_browser.py::test_get_set_debug PASSED                [ 57%]\r\ntests/test_stateful_browser.py::test_list_links PASSED                   [ 59%]\r\ntests/test_stateful_browser.py::test_launch_browser PASSED               [ 60%]\r\ntests/test_stateful_browser.py::test_find_link PASSED                    [ 62%]\r\ntests/test_stateful_browser.py::test_verbose PASSED                      [ 64%]\r\ntests/test_stateful_browser.py::test_new_control PASSED                  [ 65%]\r\ntests/test_stateful_browser.py::test_form_noaction PASSED                [ 67%]\r\ntests/test_stateful_browser.py::test_form_noname PASSED                  [ 68%]\r\ntests/test_stateful_browser.py::test_form_multiple PASSED                [ 70%]\r\ntests/test_stateful_browser.py::test_upload_file PASSED                  [ 71%]\r\ntests/test_stateful_browser.py::test_with PASSED                         [ 73%]\r\ntests/test_stateful_browser.py::test_select_form_nr PASSED               [ 75%]\r\ntests/test_stateful_browser.py::test_select_form_tag_object PASSED       [ 76%]\r\ntests/test_stateful_browser.py::test_referer_follow_link FAILED          [ 78%]\r\ntests/test_stateful_browser.py::test_referer_submit PASSED               [ 79%]\r\ntests/test_stateful_browser.py::test_referer_submit_headers PASSED       [ 81%]\r\ntests/test_stateful_browser.py::test_link_arg_text PASSED                [ 82%]\r\ntests/test_stateful_browser.py::test_link_arg_regex PASSED               [ 84%]\r\ntests/test_stateful_browser.py::test_link_arg_multiregex PASSED          [ 85%]\r\ntests/test_stateful_browser.py::test_download_link FAILED                [ 87%]\r\ntests/test_stateful_browser.py::test_download_link_nofile FAILED         [ 89%]\r\ntests/test_stateful_browser.py::test_download_link_to_existing_file FAILED [ 90%]\r\ntests/test_stateful_browser.py::test_download_link_404 PASSED            [ 92%]\r\ntests/test_stateful_browser.py::test_download_link_referer PASSED        [ 93%]\r\ntests/test_stateful_browser.py::test_refresh_open PASSED                 [ 95%]\r\ntests/test_stateful_browser.py::test_refresh_follow_link PASSED          [ 96%]\r\ntests/test_stateful_browser.py::test_refresh_form_not_retained PASSED    [ 98%]\r\ntests/test_stateful_browser.py::test_refresh_error PASSED                [100%]\r\n\r\n=================================== FAILURES ===================================\r\n___________________________ test_referer_follow_link ___________________________\r\n\r\nhttpbin = <utils.HttpbinRemote object at 0x7ff987009630>\r\n\r\n    def test_referer_follow_link(httpbin):\r\n        browser = mechanicalsoup.StatefulBrowser()\r\n        browser.open(httpbin.url)\r\n>       response = browser.follow_link(\"/headers\")\r\n\r\ntests/test_stateful_browser.py:371: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:324: in follow_link\r\n    link = self._find_link_internal(link, args, kwargs)\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:300: in _find_link_internal\r\n    return self.find_link(*args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mechanicalsoup.stateful_browser.StatefulBrowser object at 0x7ff9870096a0>\r\nargs = (), kwargs = {'url_regex': '/headers'}, links = []\r\n\r\n    def find_link(self, *args, **kwargs):\r\n        \"\"\"Find and return a link, as a bs4.element.Tag object.\r\n    \r\n            The search can be refined by specifying any argument that is accepted\r\n            by :func:`links`. If several links match, return the first one found.\r\n    \r\n            If no link is found, raise :class:`LinkNotFoundError`.\r\n            \"\"\"\r\n        links = self.links(*args, **kwargs)\r\n        if len(links) == 0:\r\n>           raise LinkNotFoundError()\r\nE           mechanicalsoup.utils.LinkNotFoundError\r\n\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:274: LinkNotFoundError\r\n------------------------------ Captured log call -------------------------------\r\nconnectionpool.py          208 DEBUG    Starting new HTTP connection (1): httpbin.org\r\nconnectionpool.py          396 DEBUG    http://httpbin.org:80 \"GET / HTTP/1.1\" 200 8344\r\n______________________________ test_download_link ______________________________\r\n\r\nhttpbin = <utils.HttpbinRemote object at 0x7ff98701c240>\r\n\r\n    def test_download_link(httpbin):\r\n        \"\"\"Test downloading the contents of a link to file.\"\"\"\r\n        browser = mechanicalsoup.StatefulBrowser()\r\n        browser.open(httpbin.url)\r\n        tmpdir = tempfile.mkdtemp()\r\n        tmpfile = tmpdir + '/nosuchfile.png'\r\n        current_url = browser.get_url()\r\n        current_page = browser.get_current_page()\r\n>       response = browser.download_link(file=tmpfile, link='image/png')\r\n\r\ntests/test_stateful_browser.py:453: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:347: in download_link\r\n    link = self._find_link_internal(link, args, kwargs)\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:300: in _find_link_internal\r\n    return self.find_link(*args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mechanicalsoup.stateful_browser.StatefulBrowser object at 0x7ff98701cd68>\r\nargs = (), kwargs = {'url_regex': 'image/png'}, links = []\r\n\r\n    def find_link(self, *args, **kwargs):\r\n        \"\"\"Find and return a link, as a bs4.element.Tag object.\r\n    \r\n            The search can be refined by specifying any argument that is accepted\r\n            by :func:`links`. If several links match, return the first one found.\r\n    \r\n            If no link is found, raise :class:`LinkNotFoundError`.\r\n            \"\"\"\r\n        links = self.links(*args, **kwargs)\r\n        if len(links) == 0:\r\n>           raise LinkNotFoundError()\r\nE           mechanicalsoup.utils.LinkNotFoundError\r\n\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:274: LinkNotFoundError\r\n------------------------------ Captured log call -------------------------------\r\nconnectionpool.py          208 DEBUG    Starting new HTTP connection (1): httpbin.org\r\nconnectionpool.py          396 DEBUG    http://httpbin.org:80 \"GET / HTTP/1.1\" 200 8344\r\n__________________________ test_download_link_nofile ___________________________\r\n\r\nhttpbin = <utils.HttpbinRemote object at 0x7ff9870646d8>\r\n\r\n    def test_download_link_nofile(httpbin):\r\n        \"\"\"Test downloading the contents of a link without saving it.\"\"\"\r\n        browser = mechanicalsoup.StatefulBrowser()\r\n        browser.open(httpbin.url)\r\n        current_url = browser.get_url()\r\n        current_page = browser.get_current_page()\r\n>       response = browser.download_link(link='image/png')\r\n\r\ntests/test_stateful_browser.py:472: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:347: in download_link\r\n    link = self._find_link_internal(link, args, kwargs)\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:300: in _find_link_internal\r\n    return self.find_link(*args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mechanicalsoup.stateful_browser.StatefulBrowser object at 0x7ff987064710>\r\nargs = (), kwargs = {'url_regex': 'image/png'}, links = []\r\n\r\n    def find_link(self, *args, **kwargs):\r\n        \"\"\"Find and return a link, as a bs4.element.Tag object.\r\n    \r\n            The search can be refined by specifying any argument that is accepted\r\n            by :func:`links`. If several links match, return the first one found.\r\n    \r\n            If no link is found, raise :class:`LinkNotFoundError`.\r\n            \"\"\"\r\n        links = self.links(*args, **kwargs)\r\n        if len(links) == 0:\r\n>           raise LinkNotFoundError()\r\nE           mechanicalsoup.utils.LinkNotFoundError\r\n\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:274: LinkNotFoundError\r\n------------------------------ Captured log call -------------------------------\r\nconnectionpool.py          208 DEBUG    Starting new HTTP connection (1): httpbin.org\r\nconnectionpool.py          396 DEBUG    http://httpbin.org:80 \"GET / HTTP/1.1\" 200 8344\r\n_____________________ test_download_link_to_existing_file ______________________\r\n\r\nhttpbin = <utils.HttpbinRemote object at 0x7ff987076d68>\r\n\r\n    def test_download_link_to_existing_file(httpbin):\r\n        \"\"\"Test downloading the contents of a link to an existing file.\"\"\"\r\n        browser = mechanicalsoup.StatefulBrowser()\r\n        browser.open(httpbin.url)\r\n        tmpdir = tempfile.mkdtemp()\r\n        tmpfile = tmpdir + '/existing.png'\r\n        with open(tmpfile, \"w\") as f:\r\n            f.write(\"initial content\")\r\n        current_url = browser.get_url()\r\n        current_page = browser.get_current_page()\r\n>       response = browser.download_link('image/png', tmpfile)\r\n\r\ntests/test_stateful_browser.py:492: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:347: in download_link\r\n    link = self._find_link_internal(link, args, kwargs)\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:300: in _find_link_internal\r\n    return self.find_link(*args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mechanicalsoup.stateful_browser.StatefulBrowser object at 0x7ff987076dd8>\r\nargs = (), kwargs = {'url_regex': 'image/png'}, links = []\r\n\r\n    def find_link(self, *args, **kwargs):\r\n        \"\"\"Find and return a link, as a bs4.element.Tag object.\r\n    \r\n            The search can be refined by specifying any argument that is accepted\r\n            by :func:`links`. If several links match, return the first one found.\r\n    \r\n            If no link is found, raise :class:`LinkNotFoundError`.\r\n            \"\"\"\r\n        links = self.links(*args, **kwargs)\r\n        if len(links) == 0:\r\n>           raise LinkNotFoundError()\r\nE           mechanicalsoup.utils.LinkNotFoundError\r\n\r\n/usr/lib/python3/dist-packages/mechanicalsoup/stateful_browser.py:274: LinkNotFoundError\r\n------------------------------ Captured log call -------------------------------\r\nconnectionpool.py          208 DEBUG    Starting new HTTP connection (1): httpbin.org\r\nconnectionpool.py          396 DEBUG    http://httpbin.org:80 \"GET / HTTP/1.1\" 200 8344\r\n===================== 4 failed, 60 passed in 6.69 seconds ======================\r\n```\r\nDo you have any update?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/207", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/207/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/207/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/207", "id": 321262231, "node_id": "MDU6SXNzdWUzMjEyNjIyMzE=", "number": 207, "title": "Handle forms with multiple submits that have the same name", "user": {"login": "zen4ever", "id": 48929, "node_id": "MDQ6VXNlcjQ4OTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/48929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zen4ever", "html_url": "https://github.com/zen4ever", "followers_url": "https://api.github.com/users/zen4ever/followers", "following_url": "https://api.github.com/users/zen4ever/following{/other_user}", "gists_url": "https://api.github.com/users/zen4ever/gists{/gist_id}", "starred_url": "https://api.github.com/users/zen4ever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zen4ever/subscriptions", "organizations_url": "https://api.github.com/users/zen4ever/orgs", "repos_url": "https://api.github.com/users/zen4ever/repos", "events_url": "https://api.github.com/users/zen4ever/events{/privacy}", "received_events_url": "https://api.github.com/users/zen4ever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-08T16:42:25Z", "updated_at": "2018-07-14T00:06:58Z", "closed_at": "2018-07-14T00:06:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "On some websites submit elements have the same name. As it currently works with MechanicalSoup, it just throws exception when I'm trying to choose one of them by name.\r\n\r\nPossible solutions:\r\n1. Allow to choose by other attributes, like \"select_form\" currently works\r\n2. Allow to specify index when multiple elements found \"nr=0\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/206", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/206/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/206/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/206", "id": 320003154, "node_id": "MDU6SXNzdWUzMjAwMDMxNTQ=", "number": 206, "title": "Scraping AWS hosted file", "user": {"login": "jrobinson-uk", "id": 4701504, "node_id": "MDQ6VXNlcjQ3MDE1MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4701504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrobinson-uk", "html_url": "https://github.com/jrobinson-uk", "followers_url": "https://api.github.com/users/jrobinson-uk/followers", "following_url": "https://api.github.com/users/jrobinson-uk/following{/other_user}", "gists_url": "https://api.github.com/users/jrobinson-uk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrobinson-uk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrobinson-uk/subscriptions", "organizations_url": "https://api.github.com/users/jrobinson-uk/orgs", "repos_url": "https://api.github.com/users/jrobinson-uk/repos", "events_url": "https://api.github.com/users/jrobinson-uk/events{/privacy}", "received_events_url": "https://api.github.com/users/jrobinson-uk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-03T17:01:06Z", "updated_at": "2018-06-06T21:40:50Z", "closed_at": "2018-06-06T21:40:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to scrape some CSV data from a site which in turn hosts the data in AWS, upon trying to download I get a linkNotFoundError:\r\n\r\nSo far I am able to log into site:\r\n```python\r\nimport mechanicalsoup\r\nb = mechanicalsoup.StatefulBrowser(soup_config={'features':\r\n'lxml'},raise_on_404=False,user_agent='Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',)\r\nb.open(\"https://www.<site>.com/sign-in\")\r\nb.select_form('form[action=\"/sign-in\"]')\r\n\r\n\r\nb[\"email\"] = \"xxxx\"\r\nb[\"password\"] = \"xxxxxx\"\r\nresponse = b.submit_selected()\r\n\r\nb.open(\"page holding links to csv\")\r\nprint(b.links())\r\n\r\nb.download_link(link=\"https://www.site.com/path/to/some/download/without/filename/)\r\n```\r\n\r\nReplicating in browser it looks like the file is coming from AWS, but the `download_link` call doesn't seem to follow the url to the actual download.\r\n\r\nIs this possible or is AWS going to prevent it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/205", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/205/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/205/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/205", "id": 314469982, "node_id": "MDU6SXNzdWUzMTQ0Njk5ODI=", "number": 205, "title": "[How-to]: can you download multiple files from a webpage like in mechanize?", "user": {"login": "Tai-Pach", "id": 19694474, "node_id": "MDQ6VXNlcjE5Njk0NDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/19694474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tai-Pach", "html_url": "https://github.com/Tai-Pach", "followers_url": "https://api.github.com/users/Tai-Pach/followers", "following_url": "https://api.github.com/users/Tai-Pach/following{/other_user}", "gists_url": "https://api.github.com/users/Tai-Pach/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tai-Pach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tai-Pach/subscriptions", "organizations_url": "https://api.github.com/users/Tai-Pach/orgs", "repos_url": "https://api.github.com/users/Tai-Pach/repos", "events_url": "https://api.github.com/users/Tai-Pach/events{/privacy}", "received_events_url": "https://api.github.com/users/Tai-Pach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-16T01:00:44Z", "updated_at": "2018-04-16T03:35:27Z", "closed_at": "2018-04-16T03:34:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nDoes anyone mind showing me how to download multiple files from a webpage using MechanicalSoup?\r\n\r\nWhat i mean:\r\n    -I have a webpage that has many hyperlinks to pdf files.\r\n    -I would like to automate the process of downloading each file from the webpage to my directory\r\n\r\nAnother approach:\r\n    -I was able to create a list of all pdf URL's.  Can MechanicalSoup iterate through all the elements of \r\n     this list, and send each iter into a browser for execution? \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/204", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/204/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/204/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/204", "id": 311900616, "node_id": "MDU6SXNzdWUzMTE5MDA2MTY=", "number": 204, "title": "[Errno 24] Too many open files", "user": {"login": "innjoshka", "id": 23149363, "node_id": "MDQ6VXNlcjIzMTQ5MzYz", "avatar_url": "https://avatars3.githubusercontent.com/u/23149363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/innjoshka", "html_url": "https://github.com/innjoshka", "followers_url": "https://api.github.com/users/innjoshka/followers", "following_url": "https://api.github.com/users/innjoshka/following{/other_user}", "gists_url": "https://api.github.com/users/innjoshka/gists{/gist_id}", "starred_url": "https://api.github.com/users/innjoshka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/innjoshka/subscriptions", "organizations_url": "https://api.github.com/users/innjoshka/orgs", "repos_url": "https://api.github.com/users/innjoshka/repos", "events_url": "https://api.github.com/users/innjoshka/events{/privacy}", "received_events_url": "https://api.github.com/users/innjoshka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-06T09:05:30Z", "updated_at": "2018-06-06T21:28:13Z", "closed_at": "2018-06-06T21:28:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered kinda bug with Mechanicalsoup relieving  socket connections. So, Begin:\r\n\r\nThis is my code:\r\n\r\n\r\n```\r\nimport os\r\nimport mechanicalsoup\r\nimport time\r\n\r\n\r\n\r\nurl = \"XXX\"\r\nfile = os.path.join(os.getcwd(), 'data.csv')\r\ncounter = row = 30000\r\n\r\ndef get_data(file):\r\n    with open(file, 'r') as myfile:\r\n        data = myfile.read().splitlines()\r\n        return data\r\n\r\ndata = get_data(file)\r\n\r\n\r\ndef fetchfile(query):\r\n    browser = mechanicalsoup.StatefulBrowser(session=True, soup_config={'features': 'html.parser'})\r\n    page = browser.get(url, timeout=10.0)\r\n    search_form = page.soup.find(\"form\", {\"method\": \"POST\"})\r\n    search_form.find(\"input\", {\"name\": \"address\"})[\"value\"] = query\r\n    response = browser.submit(search_form, page.url)\r\n    return response\r\n\r\n\r\n\r\nfor i in range(10000000):\r\n    counter = row = counter + 1\r\n    print(counter)\r\n    try:\r\n        result = fetchfile(data[row])\r\n        print(data[row], result)\r\n    except Exception as e:\r\n        print(e)\r\n        time.sleep(15)\r\n        pass\r\n\r\n```\r\n\r\nThis is a simple code where I have row data and I make GET requests continuously (synchronously). So, during some time (min 15) I get error [Errno 24] Too many open files. I googled and found that this is closely linked with CLOSE_WAIT connections. on linux default number is 1024 `ulimit -n`. The idea is that Mechanicalsoup doesn't free connection even if it's closed by server.  So we'are going right into error of 1024 available connections working at once. and Also somehow Each iteration os loop Memory consumption always increasing by 1-2mb. Would be great that someone explain me why.\r\n\r\nScreen showing what's happening with help of **netstat**\r\n![screen shot 2018-04-06 at 11 50 43 am](https://user-images.githubusercontent.com/23149363/38412166-68d71168-3991-11e8-86ef-e98ffc28ef88.png)\r\n\r\n![screen shot 2018-04-06 at 11 50 21 am](https://user-images.githubusercontent.com/23149363/38412250-987b31ba-3991-11e8-9396-cd8260dbd333.png)\r\n\r\nBy the way, all works fine on MacOS and Windows. The testing Linux server where bug happens is Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-1054-aws x86_64). As well as all works fine using just simple **requests** library with similar code.\r\n\r\n I need Mechanicalsoup works on Linux server, any suggestions what I have to try to make it work correctly?\r\n\r\nADDED: Library Versions \r\nMechanicalSoup version (0.10.0)\r\nbeautifulsoup4 (4.6.0)\r\nrequests (2.18.4)\r\nurllib3 (1.22)\r\nlxml (4.2.1)\r\npython (3.5.2)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/203", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/203/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/203/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/203", "id": 310876894, "node_id": "MDU6SXNzdWUzMTA4NzY4OTQ=", "number": 203, "title": "LinkNotFoundError should not inherit from BaseException", "user": {"login": "gronka", "id": 11057464, "node_id": "MDQ6VXNlcjExMDU3NDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/11057464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gronka", "html_url": "https://github.com/gronka", "followers_url": "https://api.github.com/users/gronka/followers", "following_url": "https://api.github.com/users/gronka/following{/other_user}", "gists_url": "https://api.github.com/users/gronka/gists{/gist_id}", "starred_url": "https://api.github.com/users/gronka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gronka/subscriptions", "organizations_url": "https://api.github.com/users/gronka/orgs", "repos_url": "https://api.github.com/users/gronka/repos", "events_url": "https://api.github.com/users/gronka/events{/privacy}", "received_events_url": "https://api.github.com/users/gronka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-03T15:06:30Z", "updated_at": "2018-06-08T07:41:09Z", "closed_at": "2018-06-08T07:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have code that performs many tests, reporting which tests failed. We therefore implement a try-catch such as\r\n\r\n```python\r\ntry:\r\n    run_test()\r\nexcept Exception:\r\n    msg = traceback.format_exc() \r\n    report_failure()\r\n```\r\n\r\nLinkNotFoundError is not caught by this because it inherits from BaseException.\r\n\r\nInheriting from BaseException is not recommended in the docs: https://docs.python.org/3/library/exceptions.html\r\n\r\nI'd like too see this change, or if there is a reason for it I'm curious to hear it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/202", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/202/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/202/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/202", "id": 306466803, "node_id": "MDU6SXNzdWUzMDY0NjY4MDM=", "number": 202, "title": "Set up LGTM and fix warnings", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-19T13:41:00Z", "updated_at": "2018-06-08T16:12:21Z", "closed_at": "2018-06-08T16:10:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "LGTM.com finds one issue in our code, and it seems legitimate to me (although I'm guilty for introducing it):\r\n\r\nhttps://lgtm.com/projects/g/hickford/MechanicalSoup/\r\n\r\nWe should fix this, and configure lgtm so that it checks pull-requests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/198", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/198/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/198/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/198", "id": 300304427, "node_id": "MDU6SXNzdWUzMDAzMDQ0Mjc=", "number": 198, "title": "When control values are set dynamically via javascript ", "user": {"login": "luisfalconeri", "id": 31102486, "node_id": "MDQ6VXNlcjMxMTAyNDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/31102486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisfalconeri", "html_url": "https://github.com/luisfalconeri", "followers_url": "https://api.github.com/users/luisfalconeri/followers", "following_url": "https://api.github.com/users/luisfalconeri/following{/other_user}", "gists_url": "https://api.github.com/users/luisfalconeri/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisfalconeri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisfalconeri/subscriptions", "organizations_url": "https://api.github.com/users/luisfalconeri/orgs", "repos_url": "https://api.github.com/users/luisfalconeri/repos", "events_url": "https://api.github.com/users/luisfalconeri/events{/privacy}", "received_events_url": "https://api.github.com/users/luisfalconeri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-26T16:26:30Z", "updated_at": "2018-06-06T22:38:51Z", "closed_at": "2018-06-06T22:38:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "As with this link below: \r\nhttps://www.residentadvisor.net/submit-event.aspx\r\n\r\nThe values for the field city are set dynamically after the country has been set: I was not able to find a solution in the relevant documentation. Is there one? Sorry if it's a silly question. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/196", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/196/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/196/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/196", "id": 296015201, "node_id": "MDU6SXNzdWUyOTYwMTUyMDE=", "number": 196, "title": "Connect to an already running browser", "user": {"login": "BeatboxHero", "id": 25494115, "node_id": "MDQ6VXNlcjI1NDk0MTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/25494115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BeatboxHero", "html_url": "https://github.com/BeatboxHero", "followers_url": "https://api.github.com/users/BeatboxHero/followers", "following_url": "https://api.github.com/users/BeatboxHero/following{/other_user}", "gists_url": "https://api.github.com/users/BeatboxHero/gists{/gist_id}", "starred_url": "https://api.github.com/users/BeatboxHero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BeatboxHero/subscriptions", "organizations_url": "https://api.github.com/users/BeatboxHero/orgs", "repos_url": "https://api.github.com/users/BeatboxHero/repos", "events_url": "https://api.github.com/users/BeatboxHero/events{/privacy}", "received_events_url": "https://api.github.com/users/BeatboxHero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-09T21:18:51Z", "updated_at": "2018-02-09T22:53:23Z", "closed_at": "2018-02-09T22:53:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does MechanicalSoup have a way to connect to a webpage that is already open in a browser? If so, could I be pointed in the direction of an example? Sorry if this has been answered somewhere. I looked but I couldn't find anything related in documentation or examples.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/190", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/190/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/190/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/190", "id": 286321491, "node_id": "MDU6SXNzdWUyODYzMjE0OTE=", "number": 190, "title": "Get rid of the Browser/StatefulBrowser distinction?", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-05T15:34:58Z", "updated_at": "2018-01-05T15:48:17Z", "closed_at": "2018-01-05T15:48:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "  Some people seem confused by the existence of these two classes. A bit of context:\r\n\r\nMechanicalSoup started with just Browser. The main feature it provided was to take a soup object containing a form and turn it into a Request (`Browser._request`). While using it for [chamilotools](https://gitlab.com/chamilotools/chamilotools) I wrote an additional convenience layer to keep track of current URL, selected form, ... I proposed contributing it to MechanicalSoup (#48) and got only moderate enthousiasm (read: no response at all ;-) ). I submitted my changes as a separate class partly because I didn't want to be too intrusive for my pull-request to be accepted (the project was not actively maintained and I was only a minor contributor back then). I also thought there may be valid uses for the plain `Browser`, if people wanted to do weird stuff not directly following the \"follow link/submit form\" flow, but I'm not sure I was right (i.e. there are not many valid use-cases, and probably all of them can be dealt with equally well with StatefulBrowser).\r\n\r\nI still partly like this distinction, not necessarily from the end-user point of view but from the software architecture point of view: `Browser` makes sense as a simple wrapper around requests and BeautifulSoup, and more features are built on top with `StatefulBrowser`. Perhaps we should just consider that `Browser` should be a private class and shouldn't be used directly at all by end users. If so, the name `StatefulBrowser` is unfortunately long.\r\n\r\nIn any case, changing what we expose to the end user raises the issue of backward compatibility. It's likely that this discussion concludes in \"we should have done otherwise, but it's too late to change\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/187", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/187/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/187/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/187", "id": 286157127, "node_id": "MDU6SXNzdWUyODYxNTcxMjc=", "number": 187, "title": "Page refresh functionality", "user": {"login": "tbolender", "id": 775094, "node_id": "MDQ6VXNlcjc3NTA5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/775094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbolender", "html_url": "https://github.com/tbolender", "followers_url": "https://api.github.com/users/tbolender/followers", "following_url": "https://api.github.com/users/tbolender/following{/other_user}", "gists_url": "https://api.github.com/users/tbolender/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbolender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbolender/subscriptions", "organizations_url": "https://api.github.com/users/tbolender/orgs", "repos_url": "https://api.github.com/users/tbolender/repos", "events_url": "https://api.github.com/users/tbolender/events{/privacy}", "received_events_url": "https://api.github.com/users/tbolender/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333922, "node_id": "MDU6TGFiZWwxMDIzMzM5MjI=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-05T00:33:46Z", "updated_at": "2018-01-24T23:14:23Z", "closed_at": "2018-01-24T23:14:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to have a refresh functionality which reloads the current page with the same request method and parameters. This is handy when waiting/looking for a certain change on a website to appear.\r\n\r\nThis would furthermore complete the goal of implementing an actual browser as proposed in #127.\r\n\r\nIn my opinion saving the last request sent and resending it should be sufficient to implement this functionality. Unfortunately, if I understood correctly, there seems to be no function which every request passes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/180", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/180/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/180/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/180", "id": 285129133, "node_id": "MDU6SXNzdWUyODUxMjkxMzM=", "number": 180, "title": "Crash on input without name in form", "user": {"login": "tbolender", "id": 775094, "node_id": "MDQ6VXNlcjc3NTA5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/775094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbolender", "html_url": "https://github.com/tbolender", "followers_url": "https://api.github.com/users/tbolender/followers", "following_url": "https://api.github.com/users/tbolender/following{/other_user}", "gists_url": "https://api.github.com/users/tbolender/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbolender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbolender/subscriptions", "organizations_url": "https://api.github.com/users/tbolender/orgs", "repos_url": "https://api.github.com/users/tbolender/repos", "events_url": "https://api.github.com/users/tbolender/events{/privacy}", "received_events_url": "https://api.github.com/users/tbolender/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333919, "node_id": "MDU6TGFiZWwxMDIzMzM5MTk=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-29T17:36:17Z", "updated_at": "2018-01-01T15:01:33Z", "closed_at": "2018-01-01T15:01:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am currently dealing with a form containing a submit button without a name. When submitting this form (with multiple submit buttons) via\r\n```\r\nbrowser.submit_selected(btnName='name')\r\n```\r\nthis causes a crash in `Form.choose_submit()` since the attribute `name` is not present, [here](https://github.com/MechanicalSoup/MechanicalSoup/blob/master/mechanicalsoup/form.py#L310).\r\n\r\nI now that inputs without a name do not make any sense, but it would be nice to harden MechanicalSoup against websites out there in the wild... :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/179", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/179/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/179/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/179", "id": 285127516, "node_id": "MDU6SXNzdWUyODUxMjc1MTY=", "number": 179, "title": "Missing referrer for forms", "user": {"login": "tbolender", "id": 775094, "node_id": "MDQ6VXNlcjc3NTA5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/775094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbolender", "html_url": "https://github.com/tbolender", "followers_url": "https://api.github.com/users/tbolender/followers", "following_url": "https://api.github.com/users/tbolender/following{/other_user}", "gists_url": "https://api.github.com/users/tbolender/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbolender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbolender/subscriptions", "organizations_url": "https://api.github.com/users/tbolender/orgs", "repos_url": "https://api.github.com/users/tbolender/repos", "events_url": "https://api.github.com/users/tbolender/events{/privacy}", "received_events_url": "https://api.github.com/users/tbolender/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333922, "node_id": "MDU6TGFiZWwxMDIzMzM5MjI=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-29T17:24:52Z", "updated_at": "2018-02-04T01:16:38Z", "closed_at": "2018-01-03T21:13:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that MechanicalSoup does not include the referrer in the headers when submitting forms. Is there a specific reason for this behavior?\r\n\r\nIn my case the server side validates the headers and I have to add it manually via\r\n```\r\nbrowser.session.headers['referer'] = browser.get_url()\r\n```\r\nbefore every submit.\r\n\r\nChanging the behavior, or offering a parameter for this would be nice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/177", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/177/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/177/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/177", "id": 283068212, "node_id": "MDU6SXNzdWUyODMwNjgyMTI=", "number": 177, "title": "Problems calling \"follow_link\" with \"url_regex\"", "user": {"login": "amotl", "id": 453543, "node_id": "MDQ6VXNlcjQ1MzU0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/453543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amotl", "html_url": "https://github.com/amotl", "followers_url": "https://api.github.com/users/amotl/followers", "following_url": "https://api.github.com/users/amotl/following{/other_user}", "gists_url": "https://api.github.com/users/amotl/gists{/gist_id}", "starred_url": "https://api.github.com/users/amotl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amotl/subscriptions", "organizations_url": "https://api.github.com/users/amotl/orgs", "repos_url": "https://api.github.com/users/amotl/repos", "events_url": "https://api.github.com/users/amotl/events{/privacy}", "received_events_url": "https://api.github.com/users/amotl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-12-19T00:40:33Z", "updated_at": "2018-01-04T19:31:24Z", "closed_at": "2018-01-04T18:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Dan and Matthieu,\r\n\r\nfirst things first: Thanks for conceiving and maintaining this great library. We also switched one of our implementations over from \"mechanize\" as per https://github.com/ip-tools/ip-navigator/commit/a26c3a8a and it worked really well.\r\n\r\nWhen doing so, we encountered a minor problem when trying to call the `follow_link` method with the `url_regex` keyword argument like\r\n```\r\nresponse = self.browser.follow_link(url_regex='register/PAT_.*VIEW=pdf', headers={'Referer': result.url})\r\n```\r\n\r\nThis raises the exception\r\n```\r\nTypeError: links() got multiple values for keyword argument 'url_regex'\r\n```\r\n\r\nI am are currently a bit short on time, otherwise i would have submitted a pull request without further ado. Thanks a bunch for looking into this issue.\r\n\r\nWith kind regards,\r\nAndreas.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/176", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/176/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/176/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/176", "id": 281089636, "node_id": "MDU6SXNzdWUyODEwODk2MzY=", "number": 176, "title": "Pressing a button?", "user": {"login": "Nathan-Webb", "id": 29214314, "node_id": "MDQ6VXNlcjI5MjE0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/29214314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nathan-Webb", "html_url": "https://github.com/Nathan-Webb", "followers_url": "https://api.github.com/users/Nathan-Webb/followers", "following_url": "https://api.github.com/users/Nathan-Webb/following{/other_user}", "gists_url": "https://api.github.com/users/Nathan-Webb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nathan-Webb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nathan-Webb/subscriptions", "organizations_url": "https://api.github.com/users/Nathan-Webb/orgs", "repos_url": "https://api.github.com/users/Nathan-Webb/repos", "events_url": "https://api.github.com/users/Nathan-Webb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nathan-Webb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-11T16:55:15Z", "updated_at": "2017-12-11T19:54:06Z", "closed_at": "2017-12-11T19:54:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the latest version of mechanicalsoup, and I am trying to press an HTML element in a form with the class `button`\r\nHere is the html in question: https://hastebin.com/pezajobifa.xml\r\nI'm trying to press the button using this code. \r\n```\r\nform = browser.select_form('#cart-addf')\r\nform.choose_submit(\"commit\")\r\nlink = 'http://testsite.com/shop/bags/add'\r\nbrowser.submit(form, link)\r\n```\r\nWhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/175", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/175/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/175/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/175", "id": 280289418, "node_id": "MDU6SXNzdWUyODAyODk0MTg=", "number": 175, "title": "Shorter getter names", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333926, "node_id": "MDU6TGFiZWwxMDIzMzM5MjY=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-12-07T21:43:49Z", "updated_at": "2019-09-17T20:30:17Z", "closed_at": "2019-09-17T20:30:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've always been a little bothered having to write `browser.get_current_page()` and `browser.get_current_form()`. They're quite lengthy.\r\n\r\nWith `browser.get_current_page()`, I imagine that `get_page` would suffice (and perhaps there are even shorter aliases we could entertain). There really is not ever another page, so \"current\" is a superfluous adjective.\r\n\r\nWith `browser.get_current_form()`, if we're being verbose, then `get_selected_form` seems like it would be more correct and also less confusing to users. However, `get_selected_form` is quite lengthy as well, and I'm not convinced that `get_form` is suitable due to the (rightful) existence of `select_form`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/170", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/170/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/170/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/170", "id": 276813888, "node_id": "MDU6SXNzdWUyNzY4MTM4ODg=", "number": 170, "title": "[How-to]: is there a \"download\" function?", "user": {"login": "aborruso", "id": 30607, "node_id": "MDQ6VXNlcjMwNjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/30607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aborruso", "html_url": "https://github.com/aborruso", "followers_url": "https://api.github.com/users/aborruso/followers", "following_url": "https://api.github.com/users/aborruso/following{/other_user}", "gists_url": "https://api.github.com/users/aborruso/gists{/gist_id}", "starred_url": "https://api.github.com/users/aborruso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aborruso/subscriptions", "organizations_url": "https://api.github.com/users/aborruso/orgs", "repos_url": "https://api.github.com/users/aborruso/repos", "events_url": "https://api.github.com/users/aborruso/events{/privacy}", "received_events_url": "https://api.github.com/users/aborruso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-26T10:17:33Z", "updated_at": "2018-01-04T18:24:51Z", "closed_at": "2018-01-04T18:24:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nfirst of all thank you, this is a great tool!!\r\n\r\nI have writter a stupid hello world example (below). At the end I have an URL for which I would like to start a file download.\r\n\r\nHow to do it?\r\n\r\nThank you\r\n\r\n```python\r\nimport mechanicalsoup\r\nbrowser.open(\"http://albopretorio.comune.palermo.it/albopretorio/jsp/home.jsp?modo=info&info=servizi.jsp&ARECOD=70&SERCOD=-1&sportello=albopretorio\")\r\nbrowser.follow_link(\"TD=60\")\r\nbrowser.follow_link(\"TD=2013\")\r\nbrowser.follow_link(\"row=0\")\r\nmyPdfURL=browser.follow_link(\"idx=0\")\r\nmyPdfURL.url\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/169", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/169/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/169/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/169", "id": 276562337, "node_id": "MDU6SXNzdWUyNzY1NjIzMzc=", "number": 169, "title": "Allow passing a Tag object to StatefulBrowser.select_form", "user": {"login": "sbraz", "id": 4833332, "node_id": "MDQ6VXNlcjQ4MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4833332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbraz", "html_url": "https://github.com/sbraz", "followers_url": "https://api.github.com/users/sbraz/followers", "following_url": "https://api.github.com/users/sbraz/following{/other_user}", "gists_url": "https://api.github.com/users/sbraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbraz/subscriptions", "organizations_url": "https://api.github.com/users/sbraz/orgs", "repos_url": "https://api.github.com/users/sbraz/repos", "events_url": "https://api.github.com/users/sbraz/events{/privacy}", "received_events_url": "https://api.github.com/users/sbraz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333922, "node_id": "MDU6TGFiZWwxMDIzMzM5MjI=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-24T09:41:57Z", "updated_at": "2018-02-03T23:01:58Z", "closed_at": "2018-02-03T23:01:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nI've recently had to select a form based on its children and the only way I found to do that is:\r\n```py\r\nbuttons = browser.get_current_page().select(\"form > button[name=apply]\")\r\nbrowser._StatefulBrowser__current_form = mechanicalsoup.Form(buttons[0].parent)\r\nbrowser.submit_selected()\r\n```\r\nCould you consider adding something like `if isinstance(selector, bs4.element.Tag): \u2026` to `select_form` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/168", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/168/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/168/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/168", "id": 274704845, "node_id": "MDU6SXNzdWUyNzQ3MDQ4NDU=", "number": 168, "title": "Request Adapters Example", "user": {"login": "bleuf1shi", "id": 3230109, "node_id": "MDQ6VXNlcjMyMzAxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bleuf1shi", "html_url": "https://github.com/bleuf1shi", "followers_url": "https://api.github.com/users/bleuf1shi/followers", "following_url": "https://api.github.com/users/bleuf1shi/following{/other_user}", "gists_url": "https://api.github.com/users/bleuf1shi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bleuf1shi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bleuf1shi/subscriptions", "organizations_url": "https://api.github.com/users/bleuf1shi/orgs", "repos_url": "https://api.github.com/users/bleuf1shi/repos", "events_url": "https://api.github.com/users/bleuf1shi/events{/privacy}", "received_events_url": "https://api.github.com/users/bleuf1shi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-16T23:49:37Z", "updated_at": "2018-01-05T04:19:58Z", "closed_at": "2018-01-05T04:19:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd appreciate an example in the documentation for using Request Adapters in the constructor of a StatefulBrowser. See: https://mechanicalsoup.readthedocs.io/en/stable/mechanicalsoup.html\r\n\r\nMy specific use case is that I want to increase the retry count and timeout duration for all requests made by the StatefulBrowser.\r\n\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/165", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/165/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/165/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/165", "id": 272779270, "node_id": "MDU6SXNzdWUyNzI3NzkyNzA=", "number": 165, "title": "Unexpected keyword argument 'proxies'", "user": {"login": "KevinCooper", "id": 5710207, "node_id": "MDQ6VXNlcjU3MTAyMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5710207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinCooper", "html_url": "https://github.com/KevinCooper", "followers_url": "https://api.github.com/users/KevinCooper/followers", "following_url": "https://api.github.com/users/KevinCooper/following{/other_user}", "gists_url": "https://api.github.com/users/KevinCooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinCooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinCooper/subscriptions", "organizations_url": "https://api.github.com/users/KevinCooper/orgs", "repos_url": "https://api.github.com/users/KevinCooper/repos", "events_url": "https://api.github.com/users/KevinCooper/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinCooper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-10T00:28:35Z", "updated_at": "2017-11-13T00:12:05Z", "closed_at": "2017-11-12T21:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The use of requests.Request base class does not include a proxies keyword like the requests.request class.\r\n\r\n```python\r\nimport requests\r\nimport mechanicalsoup\r\nself.Session = requests.Session()\r\nself.browser = mechanicalsoup.StatefulBrowser(session=self.Session)\r\nself.browser.get(searchURL.url, proxies=self.proxy)\r\n```\r\n\r\nFull error log is:\r\n\r\n```\r\n    response = self.browser.submit_selected(proxies=self.proxy)\r\n  File \"C:\\Users\\Kevin\\Desktop\\Project\\dev\\lib\\site-packages\\mechanicalsoup\\stateful_browser.py\", line 194, in submit_selected\r\n    *args, **kwargs)\r\n  File \"C:\\Users\\Kevin\\Desktop\\Project\\dev\\lib\\site-packages\\mechanicalsoup\\browser.py\", line 209, in submit\r\n    request = self._prepare_request(form, url, **kwargs)\r\n  File \"C:\\Users\\Kevin\\Desktop\\Project\\dev\\lib\\site-packages\\mechanicalsoup\\browser.py\", line 191, in _prepare_request\r\n    request = self._build_request(form, url, **kwargs)\r\n  File \"C:\\Users\\Kevin\\Desktop\\Project\\dev\\lib\\site-packages\\mechanicalsoup\\browser.py\", line 188, in _build_request\r\n    return requests.Request(method, url, files=files, **kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'proxies'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/161", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/161/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/161/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/161", "id": 271492294, "node_id": "MDU6SXNzdWUyNzE0OTIyOTQ=", "number": 161, "title": "Install using pip fails", "user": {"login": "philrandal", "id": 464781, "node_id": "MDQ6VXNlcjQ2NDc4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/464781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philrandal", "html_url": "https://github.com/philrandal", "followers_url": "https://api.github.com/users/philrandal/followers", "following_url": "https://api.github.com/users/philrandal/following{/other_user}", "gists_url": "https://api.github.com/users/philrandal/gists{/gist_id}", "starred_url": "https://api.github.com/users/philrandal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philrandal/subscriptions", "organizations_url": "https://api.github.com/users/philrandal/orgs", "repos_url": "https://api.github.com/users/philrandal/repos", "events_url": "https://api.github.com/users/philrandal/events{/privacy}", "received_events_url": "https://api.github.com/users/philrandal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-06T14:24:35Z", "updated_at": "2017-11-06T14:48:34Z", "closed_at": "2017-11-06T14:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py expects to find requirements.txt in the same directory as itself.\r\n\r\nUnfortunately, the .zip file installed via pip has a requires.txt in MechanicalSoup.egg-info, but no requirements.txt anywhere, so setup.py doesn't find it and fails\r\n\r\nSee http://www.diyaudio.com/forums/pc-based/271811-moode-audio-player-raspberry-pi-post5235363.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/158", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/158/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/158/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/158", "id": 271158968, "node_id": "MDU6SXNzdWUyNzExNTg5Njg=", "number": 158, "title": "Forms with repeated input elements", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333919, "node_id": "MDU6TGFiZWwxMDIzMzM5MTk=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-04T02:08:13Z", "updated_at": "2018-07-13T19:22:30Z", "closed_at": "2018-07-13T19:22:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here is a trimmed down version of the [Kickstarter Login page](https://www.kickstarter.com/login):\r\n```html\r\n<form>\r\n  <input name=\"box\" type=\"hidden\" value=\"0\"/>\r\n  <input checked=\"checked\" name=\"box\" type=\"checkbox\" value=\"1\"/>\r\n  <input type=\"submit\" value=\"Submit\" />\r\n</form> \r\n```\r\nA simple script to select and then submit this form results in the following error when using 88d39ea461f3c2210ece850e68696b6fb91df78c:\r\n```\r\n  File \"mechanicalsoup/browser.py\", line 191, in _prepare_request\r\n    request = self._build_request(form, url, **kwargs)\r\n  File \"mechanicalsoup/browser.py\", line 147, in _build_request\r\n    data.setdefault(name, []).append(value)\r\n  AttributeError: 'str' object has no attribute 'append'\r\n```\r\nThe reason is because `_build_request` first parses the non-checkbox input, and sets the value with `data[name] = value`. Then it parses the checkbox input and tries to set the value with `data.setdefault(name, []).append(value)`, which assumes that any previous value for `name` was also a checkbox input and therefore is a list.\r\n\r\nI'm not sure how the Kickstarter server is processing this input, but testing with [w3school's Try It](https://www.w3schools.com/html/tryit.asp?filename=tryhtml_default), it seems that the resulting QSL should be:\r\n```\r\nbox=0&box=1 \r\n```\r\nHowever, since we store the input data in a dictionary, we tend to clobber repeated elements (except for checkboxes and submit multiple's). Perhaps we should instead keep all values of input elements with the same name, since that's what the browser would do.\r\n\r\n(NOTE: if we make this change, I think `setup_mock_browser` should check `query` instead of `set(query)`.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/156", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/156/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/156/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/156", "id": 270489606, "node_id": "MDU6SXNzdWUyNzA0ODk2MDY=", "number": 156, "title": "Badges for stable version of Read the Docs", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333926, "node_id": "MDU6TGFiZWwxMDIzMzM5MjY=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-01T23:51:39Z", "updated_at": "2018-07-24T19:45:00Z", "closed_at": "2018-07-24T19:45:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Our badges should give users added confidence in MechanicalSoup, but most are not included in Read the Docs. However, including them as-is would result in the stable build of Read the Docs pointing to the development badges (which can be misleading and confusing).\r\n\r\nIf we want to include the correct badges in the docs, is there any way we can modify our release structure to do this? This is already accounted for in the PyPI badges (since those correspond to the latest release anyway), but the Build / Coverage / Requirements badges refer to specific branches. Could we make a new branch for each release (perhaps instead of, or in addition to, tagging), and include the latest release branch badges in the docs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/154", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/154/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/154/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/154", "id": 270283049, "node_id": "MDU6SXNzdWUyNzAyODMwNDk=", "number": 154, "title": "print_summary", "user": {"login": "AndreWin", "id": 7497378, "node_id": "MDQ6VXNlcjc0OTczNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7497378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreWin", "html_url": "https://github.com/AndreWin", "followers_url": "https://api.github.com/users/AndreWin/followers", "following_url": "https://api.github.com/users/AndreWin/following{/other_user}", "gists_url": "https://api.github.com/users/AndreWin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreWin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreWin/subscriptions", "organizations_url": "https://api.github.com/users/AndreWin/orgs", "repos_url": "https://api.github.com/users/AndreWin/repos", "events_url": "https://api.github.com/users/AndreWin/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreWin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-01T11:45:26Z", "updated_at": "2017-11-01T11:51:50Z", "closed_at": "2017-11-01T11:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nMechanicalSoup 0.8.0\r\n\r\nI read tutorial now https://mechanicalsoup.readthedocs.io/en/latest/tutorial.html\r\nand try this lib in Jupyter Notebook.\r\n\r\n```\r\nbrowser.get_current_form().print_summary()\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-10-cf464b3564b4> in <module>()\r\n----> 1 browser.get_current_form().print_summary()\r\n\r\nAttributeError: 'Form' object has no attribute 'print_summary'\r\n```\r\n\r\nBest regards,\r\nAndrey.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/153", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/153/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/153/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/153", "id": 269326411, "node_id": "MDU6SXNzdWUyNjkzMjY0MTE=", "number": 153, "title": "what the difference between this and selenium?", "user": {"login": "Kiris-tingna", "id": 10670294, "node_id": "MDQ6VXNlcjEwNjcwMjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/10670294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kiris-tingna", "html_url": "https://github.com/Kiris-tingna", "followers_url": "https://api.github.com/users/Kiris-tingna/followers", "following_url": "https://api.github.com/users/Kiris-tingna/following{/other_user}", "gists_url": "https://api.github.com/users/Kiris-tingna/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kiris-tingna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kiris-tingna/subscriptions", "organizations_url": "https://api.github.com/users/Kiris-tingna/orgs", "repos_url": "https://api.github.com/users/Kiris-tingna/repos", "events_url": "https://api.github.com/users/Kiris-tingna/events{/privacy}", "received_events_url": "https://api.github.com/users/Kiris-tingna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-28T15:29:24Z", "updated_at": "2017-10-30T10:58:30Z", "closed_at": "2017-10-30T10:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/150", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/150/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/150/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/150", "id": 269012489, "node_id": "MDU6SXNzdWUyNjkwMTI0ODk=", "number": 150, "title": "Document, test better & provide example for file upload", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-27T07:28:15Z", "updated_at": "2017-11-01T10:20:38Z", "closed_at": "2017-11-01T10:20:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It's implemented, but the best example we have is `test_prepare_request_file` in `test_browser.py` (which only prepares the request, but does not actually submit the form).\r\n\r\nWe should:\r\n\r\n- [ ] Document it better\r\n- [ ] Provide a user-friendly example\r\n- [ ] Add a test using `open_fake_page()` that submits to http://httpbin.org/post or to a mock backend and check that the server does get it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/146", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/146/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/146/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/146", "id": 268210371, "node_id": "MDU6SXNzdWUyNjgyMTAzNzE=", "number": 146, "title": "Tests randomly hanging on Travis-CI", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-10-24T22:38:56Z", "updated_at": "2017-11-06T22:39:19Z", "closed_at": "2017-11-06T22:39:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Every couple of Travis builds, I see one of the sub-builds hang. It happens frequently enough that I feel like I have to babysit Travis, which is not a good situation to be in. From what I can tell, this occurs under two conditions:\r\n1. httpbin.org is under heavy load (this occurs infrequently, but can occur for extended periods of time)\r\n2. flake8 hangs for some unknown reason (seems arbitrary, and rerunning almost always fixes it)\r\n\r\nI really want to understand 2), because for 1) we could simply rely on httpbin.org a bit less if necessary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/145", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/145/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/145/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/145", "id": 267538164, "node_id": "MDU6SXNzdWUyNjc1MzgxNjQ=", "number": 145, "title": "MANIFEST.in points to non-existent files", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-23T04:25:40Z", "updated_at": "2017-10-23T06:17:25Z", "closed_at": "2017-10-23T06:17:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running `python setup.py install`, we get the following warning:\r\n```\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'example*.py'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/136", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/136/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/136/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/136", "id": 267234022, "node_id": "MDU6SXNzdWUyNjcyMzQwMjI=", "number": 136, "title": "Re-activate warning about unspecified parser or set a default", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-20T16:36:49Z", "updated_at": "2017-10-22T09:51:44Z", "closed_at": "2017-10-22T09:51:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The discussion started a while ago at https://github.com/MechanicalSoup/MechanicalSoup/commit/014b00c9069c997b76d91968bb37ccdd764aa1b3 but never really concluded.\r\n\r\nSummary: BeautifulSoup has several ways to choose the HTML parser for the caller of the library (i.e. us):\r\n\r\n1) Create a BeautifulSoup object without specifying the parser. Then, BeautifulSoup picks the best available parser and issues a warning ([Beautiful Soup ranks lxml\u2019s parser as being the best, then html5lib\u2019s, then Python\u2019s built-in parser.\"](https://www.crummy.com/software/BeautifulSoup/bs4/doc/#specifying-the-parser-to-use))\r\n2) Hard-code the parser when creating the object, which silents the the warning.\r\n3) Use `warnings.filterwarnings` to silent the warning, but keep the \"pick the best available\" behavior of 1).\r\n\r\nMechanicalSoup has historically used 1), then 2) and since 014b00c9069c997b76d91968bb37ccdd764aa1b3 it uses 3). I disagree that this is the right thing to do.\r\n\r\nThe point of MechanicalSoup is to automate things, and in this perspective, having reproducible behavior is far more important that having \"best effort\" behavior.\r\n\r\nFor example, I'm developing a tool that has to work around a lot of bugs in the remote server (invalid HTML & stuff), and it is very important that the workarounds I implement on my machine work the same on other people's machine. If my users install a super cool parser that bs4 prefers over the one I have on my machine, they'll get a different behavior, different bugs, they may report bugs that I won't be able to reproduce on my system, ... OTOH, the super cool features they have with their superior parser won't be of any help, because I as a developer did not use them.\r\n\r\nAnd conversely, if I need to install a super cool parser to develop a tool, then I want the tool to error out immediately if the end user doesn't have it. This way, the user will get an explicit error message rather than a broken tool.\r\n\r\nOne drawback of the current behavior is that it's bad practice to instantiate `Browser` without argument, and we still want to do that in short examples.\r\n\r\nMy preference would go to option 2), i.e. essentially revert 014b00c9069c997b76d91968bb37ccdd764aa1b3. To avoid having the parser completely hardcoded on our side, we can let `Browser.__init__` take `html_parser=\"lxml\"`, so the caller of MechanicalSoup can easily set the parser as argument to `__init__`, but still get reproducible behavior by default. We need a bit of magic to make sure people currently using `soup_config` still get the parser they specified, but that should be easy.\r\n\r\nThoughts?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/130", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/130/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/130/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/130", "id": 266952640, "node_id": "MDU6SXNzdWUyNjY5NTI2NDA=", "number": 130, "title": "Implement nr option?", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-10-19T19:01:10Z", "updated_at": "2017-10-28T17:24:19Z", "closed_at": "2017-10-28T17:24:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In MechanicalSoup, almost all of our methods that find some element return or operate on the first one that is found (`Form.choose_submit` appears to be the recently-modified exception). If, for example, you have a page with two `<form>...</form>` with no unique attributes, then you cannot select the second form with `StatefulBrowser.select_form`.\r\n\r\nThis problem is solved in Mechanize by giving these methods an `nr=1` argument, which selects the _nr_-th match, and the first by default. We could certainly add this to many of the methods and retain the current default behavior entirely. I think this alone would be a worthwhile enhancement.\r\n\r\nOne related (but perhaps separate) issue is the lack of feedback when you omit the `nr` option and get an element that you don't expect, likely resulting in an indecipherable error, or worse, silently incorrect behavior. In my ideal world, you'd specify `nr` when you know you want the _nr_-th match, and if `nr` is omitted you demand that there is only one match. This seems like the safest option, but may be too draconian. Perhaps it would be suitable for a \"debug\" or \"strict\" mode?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/128", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/128/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/128/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/128", "id": 266791544, "node_id": "MDU6SXNzdWUyNjY3OTE1NDQ=", "number": 128, "title": "build_sphinx does not rebuild when code changes", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-19T10:18:05Z", "updated_at": "2017-10-19T18:35:38Z", "closed_at": "2017-10-19T18:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that if no files are modified in `docs/`, then `python setup.py build_sphinx` does not rebuild the documentation unless `docs/_build` is deleted first. This is true even if files in `mechanicalsoup/` _are_ modified.\r\n\r\nWe should either rebuild the docs on every call (which is presently fast enough to be a reasonable solution) or add `mechanicalsoup/` to the Make dependencies (presumably?). It's not immediately clear to me how to do either of these.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/124", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/124/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/124/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/124", "id": 266592551, "node_id": "MDU6SXNzdWUyNjY1OTI1NTE=", "number": 124, "title": "Manage <select multiple>", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-10-18T18:18:59Z", "updated_at": "2017-10-22T08:32:50Z", "closed_at": "2017-10-22T08:32:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`<select multiple>` should behave essentially like multiple checkboxes with the same name. For now, they don't: selecting one option deselects the previous ones.\r\n\r\n@hemberger: while you're working on form, you may want to fix this too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/121", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/121/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/121/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/121", "id": 266126255, "node_id": "MDU6SXNzdWUyNjYxMjYyNTU=", "number": 121, "title": "Restructure README", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-17T13:33:02Z", "updated_at": "2017-10-19T13:36:28Z", "closed_at": "2017-10-19T13:36:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We currently have a README with a lot of information. The developer-oriented part could be moved to CONTRIBUTING.rst (a link would be kept in README). This becomes more important as we are about to use README on Pypi (see #120).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/116", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/116/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/116/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/116", "id": 265062777, "node_id": "MDU6SXNzdWUyNjUwNjI3Nzc=", "number": 116, "title": "Still getting Codecov PR comments", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-12T19:46:02Z", "updated_at": "2017-10-13T07:11:47Z", "closed_at": "2017-10-13T07:11:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Even though we've disabled the Codecov PR comments in `.codecov.yml`, we are still getting them. This is not an issue with an invalid YAML file:\r\n\r\n```\r\ncurl --data-binary @.codecov.yml https://codecov.io/validate\r\nValid!\r\n\r\n{\r\n  \"comment\": false\r\n}\r\n```\r\n\r\nI noticed that this was an issue in the past with Codecov (see https://github.com/codecov/support/issues/162). However, it looks like this might simply be caused by filename confusion (https://github.com/codecov/support/issues/431), where Codecov documents that `.codecov.yml` works, but it actually requires `codecov.yml`.\r\n\r\nPerhaps the easiest thing to try is a file rename.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/114", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/114/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/114/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/114", "id": 265009100, "node_id": "MDU6SXNzdWUyNjUwMDkxMDA=", "number": 114, "title": "Documentation and readthedocs", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-12T16:38:45Z", "updated_at": "2017-10-20T20:03:24Z", "closed_at": "2017-10-20T20:03:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "MechanicalSoup is great, but its documentation isn't ...\r\n\r\nAmong the issues:\r\n\r\n* Many pieces of code are just undocumented (not even a docstring)\r\n* We don't have a good tutorial other than \"read example.py and do the same\" / \"read the testsuite\"\r\n\r\nMy guess is that one of the reasons for that is we don't have a good incentive to document (even if we had docstrings, we don't want the documentation to be only available by browsing the source code).\r\n\r\nI did two steps in what I think is the right direction:\r\n\r\n* A few recent commits in the code to get Sphinx (the standard Python documentation tool) to work, and enable [autodoc](http://www.sphinx-doc.org/en/stable/ext/autodoc.html) to extract docstrings into the manual automatically.\r\n\r\n* Play with http://readthedocs.org/. For those who don't know the service, it does to documentation what Travis-CI does for tests: watch the repo, rebuild the doc on new commits. I've set it up at http://mechanicalsoup.readthedocs.io/. For example, the doc extracted from `StatefulBrowser` is here:\r\nhttp://mechanicalsoup.readthedocs.io/en/latest/mechanicalsoup.html#module-mechanicalsoup.stateful_browser. (edit: I initially created a project with another name but @hickford added me as maintainer to the existing readthedocs project)\r\n\r\nNext steps are:\r\n\r\n- [x] Advertise for readthedocs from our README.\r\n- [x] Restructure the documentation, so that GitHub becomes the developer's place, and readthedocs / pypi the user-facing sites (i.e. README on GitHub should be just a few teaser paragraphs, as much as possible shared with the Spinx introduction + link to readthedocs, and then the few dev hints we already have)\r\n- [x] Add missing docstrings\r\n- [x] Add a nice beginner's tutorial (and close the long-lasting #6)\r\n- [x] Add an FAQ (\"How do I ...\") pointing to the API autogenerated doc (skeleton in docs/faq.rst)\r\n- [ ] and of course, include our new logo in the docs ;-) (see #111 in case you missed it)\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/111", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/111/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/111/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/111", "id": 264832956, "node_id": "MDU6SXNzdWUyNjQ4MzI5NTY=", "number": 111, "title": "MechanicalSoup logo", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 20, "created_at": "2017-10-12T06:57:29Z", "updated_at": "2018-09-06T19:05:35Z", "closed_at": "2018-09-06T19:05:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the [Roadmap](https://github.com/MechanicalSoup/MechanicalSoup#roadmap), some artwork is requested. I asked an artistic friend to try to interpret this request, and this is what they came up with. I would love to use this as our logo (in both the README, as per the roadmap, and perhaps also as our organization icon). Before I make a PR, I just wanted to see if this was what you were going for.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/846186/31482896-0d0d8098-aedf-11e7-8fc8-fc45c6af5e31.png\" alt=\"Drawing\" width=\"240\" />\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/109", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/109/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/109/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/109", "id": 264819405, "node_id": "MDU6SXNzdWUyNjQ4MTk0MDU=", "number": 109, "title": "Development workflow and test dependencies", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-12T05:37:37Z", "updated_at": "2017-10-13T18:32:03Z", "closed_at": "2017-10-13T18:32:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Somewhat related to Issue #100, the development dependencies listed in `README.md` can easily get out of sync with those used by the tests (and actively tested against by Travis-CI), e.g. see PR #108. Perhaps we should move to the \"requirements file\" scheme with a `requirements.txt` and `tests/requirements.txt` (or `test_requirements.txt`, which for better or worse is consistent with what Tox uses).\r\n\r\nThe thing I normally dislike about requirements files is that it makes the manual installation more complicated (you need to include `-r requirements.txt`). However, it seems simple to programmatically read these files in `setup.py`: https://stackoverflow.com/a/29871401.\r\n\r\nAssuming this works as advertised, does this seem like a reasonable resolution to the desync problem?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/106", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/106/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/106/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/106", "id": 262872887, "node_id": "MDU6SXNzdWUyNjI4NzI4ODc=", "number": 106, "title": "Source distribution on PyPI", "user": {"login": "ocefpaf", "id": 950575, "node_id": "MDQ6VXNlcjk1MDU3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocefpaf", "html_url": "https://github.com/ocefpaf", "followers_url": "https://api.github.com/users/ocefpaf/followers", "following_url": "https://api.github.com/users/ocefpaf/following{/other_user}", "gists_url": "https://api.github.com/users/ocefpaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocefpaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocefpaf/subscriptions", "organizations_url": "https://api.github.com/users/ocefpaf/orgs", "repos_url": "https://api.github.com/users/ocefpaf/repos", "events_url": "https://api.github.com/users/ocefpaf/events{/privacy}", "received_events_url": "https://api.github.com/users/ocefpaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-04T17:44:18Z", "updated_at": "2017-10-04T18:19:44Z", "closed_at": "2017-10-04T18:18:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you please publish the sdist at PyPI? `v0.8.0` is wheels only.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/104", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/104/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/104/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/104", "id": 262646481, "node_id": "MDU6SXNzdWUyNjI2NDY0ODE=", "number": 104, "title": "Should we enable gitter.im?", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-04T02:19:58Z", "updated_at": "2017-10-05T05:03:12Z", "closed_at": "2017-10-05T05:03:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was thinking about how to communicate with the other developers of this repository, and it seems that something like [gitter.im](http://gitter.im/) would be suitable. I'd be happy to set it up if you'd like -- it would just take a few clicks. If not, please let me know your preferred method of communication (@moy in particular, since you are currently the most active dev).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/100", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/100/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/100/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/100", "id": 262056169, "node_id": "MDU6SXNzdWUyNjIwNTYxNjk=", "number": 100, "title": "Development workflow inconsistency", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-02T11:31:57Z", "updated_at": "2017-10-09T20:17:44Z", "closed_at": "2017-10-09T20:17:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If we run `python setup.py test`, then the tests are run in the working tree of the repository. However, if we simply run `pytest`, then the tests are run against the installed version of the module, which may be different than the one that is currently in the working tree.\r\n\r\nAdvantages of `python setup.py test`:\r\n* You are guaranteed to be testing the code as it currently exists. It is all too easy to make a breaking change to the working tree, run `pytest` (forgetting to `python setup.py install` first), have the tests pass and assume that your change is correct.\r\n* The files reported by `pytest-cov` are much more readable. For example, you'll simply see `mechanicalsoup/browser.py` instead of `.virtual-py3/lib/python3.5/site-packages/MechanicalSoup-0.8.0-py3.5.egg/mechanicalsoup/browser.py`.\r\n* Dependencies (except for `flake8`) do not need to be installed manually, vastly simplifying the development instructions... so long as you are okay with a bunch of egg-related cruft that is output before the tests, e.g. for each dependency you get:\r\n```\r\nUsing /repos/MechanicalSoup/.eggs/requests-2.18.4-py3.5.egg\r\nSearching for certifi>=2017.4.17\r\nBest match: certifi 2017.7.27.1\r\nProcessing certifi-2017.7.27.1-py3.5.egg\r\n```\r\n\r\nDisadvantages of `python setup.py test`:\r\n* Since `test` is aliased to `pytest`, it is not possible to pass arguments to `pytest` without modifying `setup.cfg` (that I'm aware of).\r\n\r\n\r\nI don't know what the standard way of doing this is (I suspect this is why a lot of people use tools like `tox` to manage their build/dev environments). All I know is that the two methods are currently inconsistent, and that's dangerous. In my opinion, the benefits of `python setup.py test` make it preferable, but I don't think either option is ideal (or if we could even enforce that one is used if we wanted to).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/99", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/99/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/99/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/99", "id": 262047950, "node_id": "MDU6SXNzdWUyNjIwNDc5NTA=", "number": 99, "title": "Enable codecov.io webhooks", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-02T10:54:22Z", "updated_at": "2017-10-04T06:43:28Z", "closed_at": "2017-10-04T06:43:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, codecov.io can only add comments to PR's. However, there's a lot more it can do when integrated directly into GitHub using the [official app](https://github.com/apps/codecov). Can this be enabled in the repository? I'm not sure if it requires an admin or the repository owner.\r\n\r\nAn example of the additional context elements enabled by this app:\r\n![image](https://user-images.githubusercontent.com/846186/31074361-208f2a16-a725-11e7-91d0-8df37e74c9b9.png)\r\n(The screenshot is from my fork where I have the app installed.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/93", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/93/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/93/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/93", "id": 259999221, "node_id": "MDU6SXNzdWUyNTk5OTkyMjE=", "number": 93, "title": "Update PyPI version", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-23T10:39:22Z", "updated_at": "2017-10-01T15:23:34Z", "closed_at": "2017-10-01T15:23:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There have been a number of useful changes since v0.7.0. I was wondering what would need to be done to have a new tagged release so that the latest version in PyPI can be updated. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/92", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/92/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/92/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/92", "id": 259998990, "node_id": "MDU6SXNzdWUyNTk5OTg5OTA=", "number": 92, "title": "What does `StatefulBrowser.submit_selected`'s `btnName` argument do?", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-23T10:35:10Z", "updated_at": "2017-09-25T16:59:33Z", "closed_at": "2017-09-25T16:59:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is no documentation of the `btnName` argument of the `StatefulBrowser.submit_selected` method, and it simply gets forwarded to the `requests.Request` constructor in a data dict (the [documentation](http://docs.python-requests.org/en/master/api/#requests.Request) for this argument in the `requests` module is not very illuminating either).\r\n\r\nI have an example form that looks like this:\r\n```html\r\n<form class=\"standard\" method=\"POST\" action=\"?sn=2e1b94b5\">\r\n    <input class=\"submit\" name=\"action\" type=\"submit\" value=\"View\"/>\r\n    <input class=\"submit\" name=\"action\" type=\"submit\" value=\"Save\"/>\r\n    <input type=\"checkbox\" value=\"on\" name=\"id[788441]\"/>\r\n    <input type=\"checkbox\" value=\"on\" name=\"id[788558]\"/>\r\n</form>\r\n```\r\n\r\nThinking `btnName` meant \"button name\" (as in, the value of the submit element to be clicked), I tried the following code:\r\n```python\r\ndef SelectCheckboxes(br, names, submit_value):\r\n  br.select_form('form')\r\n  br.get_current_form().check({name: \"on\" for name in names})\r\n  br.submit_selected(btnName=submit_value)\r\n\r\nSelectCheckboxes(br, ['id[788441]'], \"View\")\r\n```\r\n\r\nThe above code submits using the \"Save\" element instead of \"View\". Unsurprisingly, the code works correctly with the following change to `SelectCheckboxes`:\r\n```diff\r\n-  br.submit_selected(btnName=submit_value)\r\n+  br.get_current_form().choose_submit(submit_value)\r\n+  br.submit_selected()\r\n```\r\nBut the existence of the `choose_submit` method further disguises what `btnName` is actually supposed to be. Any clarification would be greatly appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/90", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/90/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/90/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/90", "id": 258603802, "node_id": "MDU6SXNzdWUyNTg2MDM4MDI=", "number": 90, "title": "Submit a multipart encripted form", "user": {"login": "ericbrandwein", "id": 11294856, "node_id": "MDQ6VXNlcjExMjk0ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/11294856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericbrandwein", "html_url": "https://github.com/ericbrandwein", "followers_url": "https://api.github.com/users/ericbrandwein/followers", "following_url": "https://api.github.com/users/ericbrandwein/following{/other_user}", "gists_url": "https://api.github.com/users/ericbrandwein/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericbrandwein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericbrandwein/subscriptions", "organizations_url": "https://api.github.com/users/ericbrandwein/orgs", "repos_url": "https://api.github.com/users/ericbrandwein/repos", "events_url": "https://api.github.com/users/ericbrandwein/events{/privacy}", "received_events_url": "https://api.github.com/users/ericbrandwein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-18T20:03:44Z", "updated_at": "2017-11-01T17:52:09Z", "closed_at": "2017-11-01T17:52:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This library doesn't seem to support forms with `enctype='multipart/form-data'`. Are there any plans for supporting these?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/89", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/89/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/89/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/89", "id": 257920571, "node_id": "MDU6SXNzdWUyNTc5MjA1NzE=", "number": 89, "title": "Select button to submit with", "user": {"login": "ericbrandwein", "id": 11294856, "node_id": "MDQ6VXNlcjExMjk0ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/11294856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericbrandwein", "html_url": "https://github.com/ericbrandwein", "followers_url": "https://api.github.com/users/ericbrandwein/followers", "following_url": "https://api.github.com/users/ericbrandwein/following{/other_user}", "gists_url": "https://api.github.com/users/ericbrandwein/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericbrandwein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericbrandwein/subscriptions", "organizations_url": "https://api.github.com/users/ericbrandwein/orgs", "repos_url": "https://api.github.com/users/ericbrandwein/repos", "events_url": "https://api.github.com/users/ericbrandwein/events{/privacy}", "received_events_url": "https://api.github.com/users/ericbrandwein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-15T03:55:28Z", "updated_at": "2017-09-18T20:04:23Z", "closed_at": "2017-09-18T20:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to select the button with which the browser submits the form?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/88", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/88/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/88/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/88", "id": 257205987, "node_id": "MDU6SXNzdWUyNTcyMDU5ODc=", "number": 88, "title": "Automated test coverage reporting", "user": {"login": "hemberger", "id": 846186, "node_id": "MDQ6VXNlcjg0NjE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/846186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemberger", "html_url": "https://github.com/hemberger", "followers_url": "https://api.github.com/users/hemberger/followers", "following_url": "https://api.github.com/users/hemberger/following{/other_user}", "gists_url": "https://api.github.com/users/hemberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemberger/subscriptions", "organizations_url": "https://api.github.com/users/hemberger/orgs", "repos_url": "https://api.github.com/users/hemberger/repos", "events_url": "https://api.github.com/users/hemberger/events{/privacy}", "received_events_url": "https://api.github.com/users/hemberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-12T22:45:20Z", "updated_at": "2017-09-26T16:10:12Z", "closed_at": "2017-09-26T16:10:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `pytest-cov`, we can create a `.coverage` file that can be sent to Coveralls by TravisCI to report on the test coverage. Is this something the maintainers are interested in setting up?\r\n\r\nQuick example of what this would entail:\r\nhttps://ilovesymposia.com/2014/10/15/continuous-integration-in-python-5-report-test-coverage-using-coveralls/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/78", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/78/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/78/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/78", "id": 249838153, "node_id": "MDU6SXNzdWUyNDk4MzgxNTM=", "number": 78, "title": "KeyError: 'action' when form has no action", "user": {"login": "javierlopeza", "id": 11431769, "node_id": "MDQ6VXNlcjExNDMxNzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/11431769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javierlopeza", "html_url": "https://github.com/javierlopeza", "followers_url": "https://api.github.com/users/javierlopeza/followers", "following_url": "https://api.github.com/users/javierlopeza/following{/other_user}", "gists_url": "https://api.github.com/users/javierlopeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/javierlopeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javierlopeza/subscriptions", "organizations_url": "https://api.github.com/users/javierlopeza/orgs", "repos_url": "https://api.github.com/users/javierlopeza/repos", "events_url": "https://api.github.com/users/javierlopeza/events{/privacy}", "received_events_url": "https://api.github.com/users/javierlopeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-12T22:07:47Z", "updated_at": "2017-08-13T10:17:42Z", "closed_at": "2017-08-13T10:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/hickford/MechanicalSoup/blob/0b5b7c3fcab73507b625be04152497e73805474d/mechanicalsoup/stateful_browser.py#L109-L112", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/77", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/77/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/77/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/77", "id": 248272781, "node_id": "MDU6SXNzdWUyNDgyNzI3ODE=", "number": 77, "title": "Ability to customize user agent", "user": {"login": "eoghanmurray", "id": 156780, "node_id": "MDQ6VXNlcjE1Njc4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/156780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eoghanmurray", "html_url": "https://github.com/eoghanmurray", "followers_url": "https://api.github.com/users/eoghanmurray/followers", "following_url": "https://api.github.com/users/eoghanmurray/following{/other_user}", "gists_url": "https://api.github.com/users/eoghanmurray/gists{/gist_id}", "starred_url": "https://api.github.com/users/eoghanmurray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eoghanmurray/subscriptions", "organizations_url": "https://api.github.com/users/eoghanmurray/orgs", "repos_url": "https://api.github.com/users/eoghanmurray/repos", "events_url": "https://api.github.com/users/eoghanmurray/events{/privacy}", "received_events_url": "https://api.github.com/users/eoghanmurray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-06T21:19:41Z", "updated_at": "2017-08-17T19:38:50Z", "closed_at": "2017-08-17T19:38:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First thing you do if you are getting different output from a Python script (vs. your Browser) is change the script UA to match your browser to see if the server is sniffing it.  I can submit a patch if you like unless there is an existing way of modifying request headers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/75", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/75/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/75/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/75", "id": 242355370, "node_id": "MDU6SXNzdWUyNDIzNTUzNzA=", "number": 75, "title": "browser = mechanicalsoup.StatefulBrowser(), then can browser access the original soup class?", "user": {"login": "entrepreneurss", "id": 29981116, "node_id": "MDQ6VXNlcjI5OTgxMTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/29981116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/entrepreneurss", "html_url": "https://github.com/entrepreneurss", "followers_url": "https://api.github.com/users/entrepreneurss/followers", "following_url": "https://api.github.com/users/entrepreneurss/following{/other_user}", "gists_url": "https://api.github.com/users/entrepreneurss/gists{/gist_id}", "starred_url": "https://api.github.com/users/entrepreneurss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/entrepreneurss/subscriptions", "organizations_url": "https://api.github.com/users/entrepreneurss/orgs", "repos_url": "https://api.github.com/users/entrepreneurss/repos", "events_url": "https://api.github.com/users/entrepreneurss/events{/privacy}", "received_events_url": "https://api.github.com/users/entrepreneurss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-12T11:58:27Z", "updated_at": "2017-08-12T08:04:04Z", "closed_at": "2017-08-12T08:04:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, MechanicalSoup is a wonderful wrappers of BeautifulSoup and Mechane, and it's support python3, here I've an issue, can MechanicalSoup access the original BeautifulSoup's functions? Cause I don't see a soup object in the output of dir(browser):\r\n\r\nbrowser = mechanicalsoup.StatefulBrowser()\r\nprint(dir(browser))\r\n\r\n['_StatefulBrowser__current_form', '_StatefulBrowser__current_page', '_StatefulBrowser__current_url', '_StatefulBrowser__debug', '_StatefulBrowser__verbose', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_build_request', '_prepare_request', 'absolute_url', 'add_soup', 'find_link', 'follow_link', 'get', 'get_current_form', 'get_current_page', 'get_debug', 'get_url', 'launch_browser', 'links', 'list_links', 'new_control', 'open', 'open_relative', 'post', 'request', 'select_custom', 'select_form', 'session', 'set_debug', 'set_verbose', 'soup_config', 'submit', 'submit_selected']", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/74", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/74/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/74/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/74", "id": 242030962, "node_id": "MDU6SXNzdWUyNDIwMzA5NjI=", "number": 74, "title": "Sessions should be clean for new Browser objects", "user": {"login": "ozroc", "id": 5380146, "node_id": "MDQ6VXNlcjUzODAxNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5380146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozroc", "html_url": "https://github.com/ozroc", "followers_url": "https://api.github.com/users/ozroc/followers", "following_url": "https://api.github.com/users/ozroc/following{/other_user}", "gists_url": "https://api.github.com/users/ozroc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozroc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozroc/subscriptions", "organizations_url": "https://api.github.com/users/ozroc/orgs", "repos_url": "https://api.github.com/users/ozroc/repos", "events_url": "https://api.github.com/users/ozroc/events{/privacy}", "received_events_url": "https://api.github.com/users/ozroc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-11T12:32:49Z", "updated_at": "2017-08-12T07:51:23Z", "closed_at": "2017-08-12T07:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I start a browser:\r\n\r\n`b1 = mechanicalsoup.Browser(soup_config={'features': 'html'})`\r\n\r\nDo several things and start later a second one:\r\n\r\n`b2 = mechanicalsoup.Browser(soup_config={'features': 'html'})`\r\n\r\nThe session for the second browser is taken from: \r\n\r\n`requests.Session()`\r\n\r\nAnd cookies there (in requests library) are stored as a mutable object in Session class. This causes the second browser to start with the cookies (and all other session attributes) from the first one, which is an unexpected and quite weird behavior.\r\n\r\nIn my use case, I simply had to clear cookies just after creating the second browser instance:\r\n\r\n`b2.session.cookies.clear()`\r\n\r\nI think it should be easy to assure a clean session is used for each new browser instance (a natural way could be using context managers).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/73", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/73/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/73/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/73", "id": 234440099, "node_id": "MDU6SXNzdWUyMzQ0NDAwOTk=", "number": 73, "title": "Migrate tests to pyunit", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-08T07:50:06Z", "updated_at": "2017-09-25T17:01:39Z", "closed_at": "2017-09-25T17:00:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Pyunit is a very simple unit tests framework, but could save us a bit of work, e.g.\r\n\r\n```Python\r\n    try:\r\n        resp = browser.get(\"http://httpbin.org/nosuchpage\")\r\n    except mechanicalsoup.LinkNotFoundError:\r\n        pass\r\n    else:\r\n        assert False\r\n```\r\n\r\nCould be written as stg like\r\n\r\n```Python\r\nwith self.assertRaises(mechanicalsoup.LinkNotFoundError) as context:\r\n    resp = browser.get(\"http://httpbin.org/nosuchpage\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/69", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/69/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/69/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/69", "id": 224121866, "node_id": "MDU6SXNzdWUyMjQxMjE4NjY=", "number": 69, "title": "Make a release with statefulBrowser.py", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-25T12:33:02Z", "updated_at": "2017-05-07T14:13:26Z", "closed_at": "2017-05-07T14:13:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We're having a lot of users troubled by the fact that statefulBrowser is documented but not released. It's been there for a while now. If anyone has trouble with it, please report bugs ASAP.\r\n\r\nWe should definitely make a release.\r\n\r\n@hickford: can you either do the release, or give me permission on pypi? I'm `moy` there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/66", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/66/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/66/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/66", "id": 219411003, "node_id": "MDU6SXNzdWUyMTk0MTEwMDM=", "number": 66, "title": "Error: mechanicalsoup has no attribute StatefulBrowser", "user": {"login": "nehalbhanushali", "id": 17151758, "node_id": "MDQ6VXNlcjE3MTUxNzU4", "avatar_url": "https://avatars3.githubusercontent.com/u/17151758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehalbhanushali", "html_url": "https://github.com/nehalbhanushali", "followers_url": "https://api.github.com/users/nehalbhanushali/followers", "following_url": "https://api.github.com/users/nehalbhanushali/following{/other_user}", "gists_url": "https://api.github.com/users/nehalbhanushali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehalbhanushali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehalbhanushali/subscriptions", "organizations_url": "https://api.github.com/users/nehalbhanushali/orgs", "repos_url": "https://api.github.com/users/nehalbhanushali/repos", "events_url": "https://api.github.com/users/nehalbhanushali/events{/privacy}", "received_events_url": "https://api.github.com/users/nehalbhanushali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-04T22:59:15Z", "updated_at": "2017-04-25T12:30:45Z", "closed_at": "2017-04-05T06:40:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any pointers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/65", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/65/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/65/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/65", "id": 216554772, "node_id": "MDU6SXNzdWUyMTY1NTQ3NzI=", "number": 65, "title": "Missing input field when submitting a form", "user": {"login": "hypatia1", "id": 3009482, "node_id": "MDQ6VXNlcjMwMDk0ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3009482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hypatia1", "html_url": "https://github.com/hypatia1", "followers_url": "https://api.github.com/users/hypatia1/followers", "following_url": "https://api.github.com/users/hypatia1/following{/other_user}", "gists_url": "https://api.github.com/users/hypatia1/gists{/gist_id}", "starred_url": "https://api.github.com/users/hypatia1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hypatia1/subscriptions", "organizations_url": "https://api.github.com/users/hypatia1/orgs", "repos_url": "https://api.github.com/users/hypatia1/repos", "events_url": "https://api.github.com/users/hypatia1/events{/privacy}", "received_events_url": "https://api.github.com/users/hypatia1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-23T20:01:33Z", "updated_at": "2017-05-02T18:08:39Z", "closed_at": "2017-03-24T19:27:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to submit a form that looks like:\r\n```\r\n<form action=\"/index.php\" class=\"form-class\" method=\"post\">\r\n <input name=\"__csrf_magic\" type=\"hidden\" value=\"sid:foo\"/>\r\n<input id=\"usernamefld\" name=\"usernamefld\" type=\"text\"/>\r\n<input id=\"passwordfld\" name=\"passwordfld\" type=\"password\"/>\r\n<button name=\"login\" type=\"submit\"> Login </button>\r\n</form>\r\n```\r\nMy browser posts the following:\r\n```__csrf_magic=sis:foo&usernamefld=user&passwordfld=secret&login=```\r\nMechanicalSoup does not send the \"```&login=```\" part. Because of this I cannot log into the site with MechanicalSoup.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/64", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/64/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/64/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/64", "id": 215246401, "node_id": "MDU6SXNzdWUyMTUyNDY0MDE=", "number": 64, "title": "something wrong", "user": {"login": "3xp10it", "id": 15134333, "node_id": "MDQ6VXNlcjE1MTM0MzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/15134333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3xp10it", "html_url": "https://github.com/3xp10it", "followers_url": "https://api.github.com/users/3xp10it/followers", "following_url": "https://api.github.com/users/3xp10it/following{/other_user}", "gists_url": "https://api.github.com/users/3xp10it/gists{/gist_id}", "starred_url": "https://api.github.com/users/3xp10it/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3xp10it/subscriptions", "organizations_url": "https://api.github.com/users/3xp10it/orgs", "repos_url": "https://api.github.com/users/3xp10it/repos", "events_url": "https://api.github.com/users/3xp10it/events{/privacy}", "received_events_url": "https://api.github.com/users/3xp10it/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-19T07:09:47Z", "updated_at": "2017-03-22T12:01:32Z", "closed_at": "2017-03-22T12:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "My function(use MechanicalSoup) does not work recently,below is my code:[it works before]\r\n\r\n```\r\nfrom bs4 import BeautifulSoup\r\ndef get_request(url):\r\n    try:\r\n        browser = mechanicalsoup.Browser(soup_config={\"features\": \"lxml\"})\r\n        result = browser.get(url)\r\n        code = result.status_code\r\n        content = result.content\r\n        content = content.decode(\"utf-8\")\r\n        title = BeautifulSoup(content, \"lxml\").title\r\n        if title is not None:\r\n            title_value = title.string\r\n        else:\r\n            title_value = None\r\n    except:\r\n        # \u8bf7\u6c42\u6b21\u6570\u8fc7\u591a\u65f6\u88ab\u76ee\u6807\u670d\u52a1\u5668\u7981\u6b62\u8bbf\u95ee\u65f6\r\n        code = 0\r\n        title_value = \"\u9875\u9762\u8f7d\u5165\u51fa\u9519,\u4f46\u662f\u8fd9\u4e2a\u9875\u9762\u6709\u53ef\u80fd\u662f\u5b58\u5728\u7684,\u53ea\u662f\u56e0\u4e3a\u8bbf\u95ee\u8fc7\u591a\u88ab\u6682\u65f6\u62d2\u7edd\u8bbf\u95ee\"\r\n        content = 'can not get html content this time,may be blocked by the server to request'\r\n\r\n        print(\"\u53ef\u80fd\u7531\u4e8e\u8bbf\u95ee\u8fc7\u591a\u6216url\u9519\u8bef(eg.scheme error:http|https)\u5bfc\u81f4\u5f53\u524d\u8bbf\u95ee\u88ab\u91cd\u7f6e,\u8fd9\u4e2a\u8bbf\u95ee\u5c06\u4e0d\u4f1a\u5f97\u5230\u4efb\u4f55\u5185\u5bb9\")\r\n\r\n    return_value = {\r\n        'code': code,\r\n        'title': title_value,\r\n        'content': content}\r\n    # print(\"\u8bbf\u95ee\u5f53\u524durl\u4e3a:\\n\\t\"+url+\"\\ntitle\u5982\u4e0b:\")\r\n    # print(\"\\t\"+str(return_value['title']))\r\n    return return_value\r\n\r\na=get_request(\"https://www.baidu.com\")\r\nprint(a)\r\n```\r\n\r\nCan you help me to find out why MechanicalSoup not work now?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/63", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/63/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/63/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/63", "id": 213634539, "node_id": "MDU6SXNzdWUyMTM2MzQ1Mzk=", "number": 63, "title": "No attribute 'StatefulBrowser'", "user": {"login": "KristobalJunta", "id": 6359247, "node_id": "MDQ6VXNlcjYzNTkyNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6359247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KristobalJunta", "html_url": "https://github.com/KristobalJunta", "followers_url": "https://api.github.com/users/KristobalJunta/followers", "following_url": "https://api.github.com/users/KristobalJunta/following{/other_user}", "gists_url": "https://api.github.com/users/KristobalJunta/gists{/gist_id}", "starred_url": "https://api.github.com/users/KristobalJunta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KristobalJunta/subscriptions", "organizations_url": "https://api.github.com/users/KristobalJunta/orgs", "repos_url": "https://api.github.com/users/KristobalJunta/repos", "events_url": "https://api.github.com/users/KristobalJunta/events{/privacy}", "received_events_url": "https://api.github.com/users/KristobalJunta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-12T21:01:31Z", "updated_at": "2017-03-12T21:03:29Z", "closed_at": "2017-03-12T21:03:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I have the latest version of MechanicalSoup installed (0.6.0) and python 3.5\r\nI try to use StatefulBrowser like this:\r\n\r\n```python\r\nimport mechanicalsoup\r\nbrowser = mechanicalsoup.StatefulBrowser()\r\n```\r\n\r\nAnd I get the exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 12, in <module>\r\n    browser = mechanicalsoup.StatefulBrowser()\r\nAttributeError: module 'mechanicalsoup' has no attribute 'StatefulBrowser'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/61", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/61/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/61/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/61", "id": 212770974, "node_id": "MDU6SXNzdWUyMTI3NzA5NzQ=", "number": 61, "title": "Submit button cannot be chosen when there are more than 2 buttons", "user": {"login": "giorgiosironi", "id": 160299, "node_id": "MDQ6VXNlcjE2MDI5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/160299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giorgiosironi", "html_url": "https://github.com/giorgiosironi", "followers_url": "https://api.github.com/users/giorgiosironi/followers", "following_url": "https://api.github.com/users/giorgiosironi/following{/other_user}", "gists_url": "https://api.github.com/users/giorgiosironi/gists{/gist_id}", "starred_url": "https://api.github.com/users/giorgiosironi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giorgiosironi/subscriptions", "organizations_url": "https://api.github.com/users/giorgiosironi/orgs", "repos_url": "https://api.github.com/users/giorgiosironi/repos", "events_url": "https://api.github.com/users/giorgiosironi/events{/privacy}", "received_events_url": "https://api.github.com/users/giorgiosironi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-08T15:44:25Z", "updated_at": "2017-05-06T14:53:35Z", "closed_at": "2017-05-06T14:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "From https://github.com/hickford/MechanicalSoup/blob/master/mechanicalsoup/form.py#L131:\r\n```\r\n        for inp in self.form.select(\"input\"):\r\n            if inp.get('type') != 'submit':\r\n                continue\r\n            if inp == el:\r\n                continue\r\n\r\n            del inp['name']\r\n            return True\r\n```\r\nWhen there are 3 or more submits and one is chosen, only one is deleted and then the method early returns.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/60", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/60/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/60/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/60", "id": 211791323, "node_id": "MDU6SXNzdWUyMTE3OTEzMjM=", "number": 60, "title": "StatefulBrowser not found", "user": {"login": "giantas", "id": 13065283, "node_id": "MDQ6VXNlcjEzMDY1Mjgz", "avatar_url": "https://avatars0.githubusercontent.com/u/13065283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giantas", "html_url": "https://github.com/giantas", "followers_url": "https://api.github.com/users/giantas/followers", "following_url": "https://api.github.com/users/giantas/following{/other_user}", "gists_url": "https://api.github.com/users/giantas/gists{/gist_id}", "starred_url": "https://api.github.com/users/giantas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giantas/subscriptions", "organizations_url": "https://api.github.com/users/giantas/orgs", "repos_url": "https://api.github.com/users/giantas/repos", "events_url": "https://api.github.com/users/giantas/events{/privacy}", "received_events_url": "https://api.github.com/users/giantas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-03T20:16:43Z", "updated_at": "2017-03-03T20:24:32Z", "closed_at": "2017-03-03T20:24:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error `AttributeError: 'module' object has no attribute 'StatefulBrowser'` when I simply type `browser = mechanicalsoup.StatefulBrowser()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/59", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/59/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/59/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/59", "id": 210993720, "node_id": "MDU6SXNzdWUyMTA5OTM3MjA=", "number": 59, "title": "AttributeError: 'module' object has no attribute 'StatefulBrowser'   ", "user": {"login": "r0fls", "id": 1858004, "node_id": "MDQ6VXNlcjE4NTgwMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1858004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0fls", "html_url": "https://github.com/r0fls", "followers_url": "https://api.github.com/users/r0fls/followers", "following_url": "https://api.github.com/users/r0fls/following{/other_user}", "gists_url": "https://api.github.com/users/r0fls/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0fls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0fls/subscriptions", "organizations_url": "https://api.github.com/users/r0fls/orgs", "repos_url": "https://api.github.com/users/r0fls/repos", "events_url": "https://api.github.com/users/r0fls/events{/privacy}", "received_events_url": "https://api.github.com/users/r0fls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-01T06:43:26Z", "updated_at": "2017-05-05T16:04:24Z", "closed_at": "2017-03-01T07:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the example from the readme I get the above error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/52", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/52/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/52/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/52", "id": 203225868, "node_id": "MDU6SXNzdWUyMDMyMjU4Njg=", "number": 52, "title": "Extract cookies from session?", "user": {"login": "JohnTendik", "id": 4714913, "node_id": "MDQ6VXNlcjQ3MTQ5MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4714913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTendik", "html_url": "https://github.com/JohnTendik", "followers_url": "https://api.github.com/users/JohnTendik/followers", "following_url": "https://api.github.com/users/JohnTendik/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTendik/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTendik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTendik/subscriptions", "organizations_url": "https://api.github.com/users/JohnTendik/orgs", "repos_url": "https://api.github.com/users/JohnTendik/repos", "events_url": "https://api.github.com/users/JohnTendik/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTendik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-25T21:21:48Z", "updated_at": "2017-01-25T21:27:35Z", "closed_at": "2017-01-25T21:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, \r\n\r\nI was just wondering if there was a way to extract the session cookies from the page/browser to be used in other request calls outside of mechanical soup? \r\n\r\nI'm trying to do page.cookies.get_dict() but its returning empty. \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/49", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/49/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/49/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/49", "id": 182944685, "node_id": "MDU6SXNzdWUxODI5NDQ2ODU=", "number": 49, "title": "form action without schema'ed ACTION fails with MissingSchema", "user": {"login": "chadmiller", "id": 287758, "node_id": "MDQ6VXNlcjI4Nzc1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadmiller", "html_url": "https://github.com/chadmiller", "followers_url": "https://api.github.com/users/chadmiller/followers", "following_url": "https://api.github.com/users/chadmiller/following{/other_user}", "gists_url": "https://api.github.com/users/chadmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadmiller/subscriptions", "organizations_url": "https://api.github.com/users/chadmiller/orgs", "repos_url": "https://api.github.com/users/chadmiller/repos", "events_url": "https://api.github.com/users/chadmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/chadmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-14T01:43:14Z", "updated_at": "2017-10-08T20:40:42Z", "closed_at": "2017-10-08T20:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Used `requests` (and mechanicalsoup) to .get() a web page that has a form on it. The form tag looks like\n\n`<form action=\"/submit_uri\" method=\"post\">`\n\nI filled a part of the form, and then .submit()ed the form.\n\n```\n  File mechanicalsoup/browser.py\", line 114, in submit\n    request = self._prepare_request(form, url, **kwargs)\n  File \"mechanicalsoup/browser.py\", line 109, in _prepare_request\n    return self.session.prepare_request(request)\n  File \"requests/sessions.py\", line 394, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"requests/models.py\", line 294, in prepare\n    self.prepare_url(url, params)\n  File \"requests/models.py\", line 354, in prepare_url\n    raise MissingSchema(error)\nrequests.exceptions.MissingSchema: Invalid URL '/submit_uri': No schema supplied. Perhaps you meant http:///submit_uri?\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/48", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/48/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/48/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/48", "id": 181622597, "node_id": "MDU6SXNzdWUxODE2MjI1OTc=", "number": 48, "title": "proposed feature: stateful browser", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-07T09:27:37Z", "updated_at": "2017-02-12T08:32:25Z", "closed_at": "2017-02-12T08:32:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi,\n\nI love MechanicalSoup, but I find the code using it too verbose, as the `Browser` class doesn't remember much hence the caller needs to store a lot in local variables.\n\nI wrote a small piece of code to add some convenience functions to `Browser`:\n\nhttps://gitlab.com/chamilotools/chamilotools/blob/master/chamilolib/chamiloBrowser.py\n\nI think most of the code in this class could be included in MechanicalSoup, for example as a `StatefulBrowser` class, that would manage the fields `current_page`, `current_url` and `current_form`, and let the user write things like\n\n``` python\nbr.follow_link(url_regex=\"...\")\nbr.follow_link(url_regex=\"...\")\nbr.select_form(\"form\")\nbr[\"foo\"] = \"bar\"\nbr.submit_selected()\n```\n\nThe original `browser.py` and `form.py` should not need to be modified.\n\nWould such feature be of interest to MechanicalSoup? If so, I'll clean-up my code and submit a PR.\n\nThanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/47", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/47/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/47/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/47", "id": 181556682, "node_id": "MDU6SXNzdWUxODE1NTY2ODI=", "number": 47, "title": "TypeError: __init__() got multiple values for keyword argument 'features'", "user": {"login": "krsyoung", "id": 5449541, "node_id": "MDQ6VXNlcjU0NDk1NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5449541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krsyoung", "html_url": "https://github.com/krsyoung", "followers_url": "https://api.github.com/users/krsyoung/followers", "following_url": "https://api.github.com/users/krsyoung/following{/other_user}", "gists_url": "https://api.github.com/users/krsyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/krsyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krsyoung/subscriptions", "organizations_url": "https://api.github.com/users/krsyoung/orgs", "repos_url": "https://api.github.com/users/krsyoung/repos", "events_url": "https://api.github.com/users/krsyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/krsyoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-07T00:22:40Z", "updated_at": "2016-10-07T14:06:31Z", "closed_at": "2016-10-07T07:30:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following line of code seems to be causing problems:\n\n```\nself.browser = mechanicalsoup.Browser(soup_config={'features':'html.parser'})\n```\n\nThis will consistently result in the following error:\n\n```\n  File \"/usr/local/lib/python2.7/dist-packages/mechanicalsoup/browser.py\", line 32, in get\n    Browser.add_soup(response, self.soup_config)\n  File \"/usr/local/lib/python2.7/dist-packages/mechanicalsoup/browser.py\", line 23, in add_soup\n    response.content, \"html.parser\", **soup_config)\nTypeError: __init__() got multiple values for keyword argument 'features'\n```\n\nHere are the versions I'm using in `pip`:\n\n```\nbeautifulsoup4==4.5.1\nmechanicalsoup==0.5.0\n```\n\nI'm actually trying to debug a different issue (I think the html.parser is having some issues with some funky content so I was trying to change to lxml when this happened).\n\nThanks for any ideas!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/46", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/46/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/46/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/46", "id": 180203338, "node_id": "MDU6SXNzdWUxODAyMDMzMzg=", "number": 46, "title": "how to handle javascript ", "user": {"login": "ZedYeung", "id": 13143695, "node_id": "MDQ6VXNlcjEzMTQzNjk1", "avatar_url": "https://avatars1.githubusercontent.com/u/13143695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZedYeung", "html_url": "https://github.com/ZedYeung", "followers_url": "https://api.github.com/users/ZedYeung/followers", "following_url": "https://api.github.com/users/ZedYeung/following{/other_user}", "gists_url": "https://api.github.com/users/ZedYeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZedYeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZedYeung/subscriptions", "organizations_url": "https://api.github.com/users/ZedYeung/orgs", "repos_url": "https://api.github.com/users/ZedYeung/repos", "events_url": "https://api.github.com/users/ZedYeung/events{/privacy}", "received_events_url": "https://api.github.com/users/ZedYeung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-30T01:56:42Z", "updated_at": "2016-10-08T09:39:57Z", "closed_at": "2016-10-07T09:31:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is amazing to write elegant code with MechanicalSoup. But I wonder how to handle javascipt with MechanicalSoup? If I use selenium, it will become annoying complicated. Hope for your help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/42", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/42/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/42/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/42", "id": 172550235, "node_id": "MDU6SXNzdWUxNzI1NTAyMzU=", "number": 42, "title": "form.textarea adds text, but does not replace old content", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-22T20:44:41Z", "updated_at": "2017-02-06T18:43:10Z", "closed_at": "2017-02-06T18:43:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If a textarea is pre-filled-in in a form, then `form.py` does \n\n``` Python\n    def textarea(self, data):\n        for (name, value) in data.items():\n            self.form.find(\"textarea\", {\"name\": name}).insert(0, value)\n```\n\nThe `insert` adds stuff at the beginning, but does not remove the old content. Shouldn't this be \n\n``` Python\n            self.form.find(\"textarea\", {\"name\": name}).string = value\n```\n\n?\n\nThanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/40", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/40/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/40/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/40", "id": 172448419, "node_id": "MDU6SXNzdWUxNzI0NDg0MTk=", "number": 40, "title": "example.py seems broken", "user": {"login": "moy", "id": 14709, "node_id": "MDQ6VXNlcjE0NzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/14709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moy", "html_url": "https://github.com/moy", "followers_url": "https://api.github.com/users/moy/followers", "following_url": "https://api.github.com/users/moy/following{/other_user}", "gists_url": "https://api.github.com/users/moy/gists{/gist_id}", "starred_url": "https://api.github.com/users/moy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moy/subscriptions", "organizations_url": "https://api.github.com/users/moy/orgs", "repos_url": "https://api.github.com/users/moy/repos", "events_url": "https://api.github.com/users/moy/events{/privacy}", "received_events_url": "https://api.github.com/users/moy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-22T13:10:21Z", "updated_at": "2017-01-24T08:57:00Z", "closed_at": "2017-01-24T08:57:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\n$ python example.py login password\nTraceback (most recent call last):\n  File \"example.py\", line 18, in <module>\n    login_form = login_page.soup.select_one('#login form')\nTypeError: 'NoneType' object is not callable\n```\n\nI tried adding `print(login_page.soup.select_one)` before the guilty line and it is indeed `None`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/38", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/38/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/38/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/38", "id": 150848776, "node_id": "MDU6SXNzdWUxNTA4NDg3NzY=", "number": 38, "title": "how to change the headers?", "user": {"login": "yongseung", "id": 13162424, "node_id": "MDQ6VXNlcjEzMTYyNDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/13162424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongseung", "html_url": "https://github.com/yongseung", "followers_url": "https://api.github.com/users/yongseung/followers", "following_url": "https://api.github.com/users/yongseung/following{/other_user}", "gists_url": "https://api.github.com/users/yongseung/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongseung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongseung/subscriptions", "organizations_url": "https://api.github.com/users/yongseung/orgs", "repos_url": "https://api.github.com/users/yongseung/repos", "events_url": "https://api.github.com/users/yongseung/events{/privacy}", "received_events_url": "https://api.github.com/users/yongseung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-25T12:58:40Z", "updated_at": "2016-04-26T07:32:08Z", "closed_at": "2016-04-26T07:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried a lot of ways...\n\nlike as\nbrowser = mechanicalsoup.Browser()\nbrowser.addheaders(...)\n\nbut actually, when I send a packet, there isn't header that I added\nit's the same result when I look for packets with wireshark there isn't extra header\n\nand also when I check with browser.session.headeres, it's the same result \nit bring the basic headers. \n\nFinally, I look up the all the member function in the browser class, I couldn't find it with your source\nso is there a way to add a extra header??\n\nit's impossible to get connection major portal where it require some cookies or extra headers.\nis there a solution?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/37", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/37/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/37/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/37", "id": 148429510, "node_id": "MDU6SXNzdWUxNDg0Mjk1MTA=", "number": 37, "title": "cookiejar file", "user": {"login": "mghadam", "id": 10244293, "node_id": "MDQ6VXNlcjEwMjQ0Mjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/10244293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mghadam", "html_url": "https://github.com/mghadam", "followers_url": "https://api.github.com/users/mghadam/followers", "following_url": "https://api.github.com/users/mghadam/following{/other_user}", "gists_url": "https://api.github.com/users/mghadam/gists{/gist_id}", "starred_url": "https://api.github.com/users/mghadam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mghadam/subscriptions", "organizations_url": "https://api.github.com/users/mghadam/orgs", "repos_url": "https://api.github.com/users/mghadam/repos", "events_url": "https://api.github.com/users/mghadam/events{/privacy}", "received_events_url": "https://api.github.com/users/mghadam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-14T17:24:03Z", "updated_at": "2018-04-15T00:22:27Z", "closed_at": "2016-10-07T09:55:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to set a cookiejar file so that the sessions could be saved and used several times? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/36", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/36/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/36/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/36", "id": 147109239, "node_id": "MDU6SXNzdWUxNDcxMDkyMzk=", "number": 36, "title": "Nested forms", "user": {"login": "arnaudde", "id": 18307978, "node_id": "MDQ6VXNlcjE4MzA3OTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/18307978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaudde", "html_url": "https://github.com/arnaudde", "followers_url": "https://api.github.com/users/arnaudde/followers", "following_url": "https://api.github.com/users/arnaudde/following{/other_user}", "gists_url": "https://api.github.com/users/arnaudde/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaudde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaudde/subscriptions", "organizations_url": "https://api.github.com/users/arnaudde/orgs", "repos_url": "https://api.github.com/users/arnaudde/repos", "events_url": "https://api.github.com/users/arnaudde/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaudde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-09T08:53:01Z", "updated_at": "2017-10-19T13:38:05Z", "closed_at": "2017-10-19T13:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/33", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/33/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/33/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/33", "id": 128572950, "node_id": "MDU6SXNzdWUxMjg1NzI5NTA=", "number": 33, "title": "Can not login to a site", "user": {"login": "lben", "id": 2692654, "node_id": "MDQ6VXNlcjI2OTI2NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2692654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lben", "html_url": "https://github.com/lben", "followers_url": "https://api.github.com/users/lben/followers", "following_url": "https://api.github.com/users/lben/following{/other_user}", "gists_url": "https://api.github.com/users/lben/gists{/gist_id}", "starred_url": "https://api.github.com/users/lben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lben/subscriptions", "organizations_url": "https://api.github.com/users/lben/orgs", "repos_url": "https://api.github.com/users/lben/repos", "events_url": "https://api.github.com/users/lben/events{/privacy}", "received_events_url": "https://api.github.com/users/lben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-25T16:18:10Z", "updated_at": "2017-05-07T14:17:45Z", "closed_at": "2017-05-07T14:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to login to https://peerfly.com/login.php but after the submit call I am stuck in the same login page. The mechanize version works fine but I want to make it work with MechanicalSoup is there any problem or am I missing something?\n\nThis is the code that I am using:\n\n```\nimport mechanicalsoup\n\nbrowser = mechanicalsoup.Browser(soup_config={'features':'html.parser'})\nloginPage = browser.get('https://peerfly.com/login.php')\nform = loginPage.soup.find_all('form')[0]\nform.find('input', {'name':'email'})['value'] = 'myuser'\nform.find('input', {'name':'password'})['value'] = 'mypassword'\npage = browser.submit(form, loginPage.url)\nprint page.text\n```\n\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/32", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/32/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/32/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/32", "id": 127821912, "node_id": "MDU6SXNzdWUxMjc4MjE5MTI=", "number": 32, "title": "Elements without closing tags not appearing in the soup", "user": {"login": "scarrick68", "id": 7056203, "node_id": "MDQ6VXNlcjcwNTYyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7056203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarrick68", "html_url": "https://github.com/scarrick68", "followers_url": "https://api.github.com/users/scarrick68/followers", "following_url": "https://api.github.com/users/scarrick68/following{/other_user}", "gists_url": "https://api.github.com/users/scarrick68/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarrick68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarrick68/subscriptions", "organizations_url": "https://api.github.com/users/scarrick68/orgs", "repos_url": "https://api.github.com/users/scarrick68/repos", "events_url": "https://api.github.com/users/scarrick68/events{/privacy}", "received_events_url": "https://api.github.com/users/scarrick68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-21T01:07:09Z", "updated_at": "2016-10-07T09:35:38Z", "closed_at": "2016-10-07T09:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "None of the self closing tag elements appear in the soup. I saw a post on SO saying that using 'lxml' as my parser would fix it, but that's not working. I get the error message saying no parser was specified so it's defaulting to lxml on my system, but I still don't see any span, a or meta tags.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/27", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/27/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/27/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/27", "id": 118582843, "node_id": "MDU6SXNzdWUxMTg1ODI4NDM=", "number": 27, "title": "Wrong value sent for enabled checkbox or radio input with no value", "user": {"login": "Jajcus", "id": 765347, "node_id": "MDQ6VXNlcjc2NTM0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/765347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jajcus", "html_url": "https://github.com/Jajcus", "followers_url": "https://api.github.com/users/Jajcus/followers", "following_url": "https://api.github.com/users/Jajcus/following{/other_user}", "gists_url": "https://api.github.com/users/Jajcus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jajcus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jajcus/subscriptions", "organizations_url": "https://api.github.com/users/Jajcus/orgs", "repos_url": "https://api.github.com/users/Jajcus/repos", "events_url": "https://api.github.com/users/Jajcus/events{/privacy}", "received_events_url": "https://api.github.com/users/Jajcus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333919, "node_id": "MDU6TGFiZWwxMDIzMzM5MTk=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 102333924, "node_id": "MDU6TGFiZWwxMDIzMzM5MjQ=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-24T11:02:32Z", "updated_at": "2015-11-24T12:55:57Z", "closed_at": "2015-11-24T12:55:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "MechanicalSoup always sends empty value for `<input>` elements with no value defined. That doesn't work well for radio and checkbox inputs \u2013 real browser would use \"on\" in such case. Empty value used by MechanicalSoup does not work for Django forms.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/26", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/26/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/26/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/26", "id": 118574948, "node_id": "MDU6SXNzdWUxMTg1NzQ5NDg=", "number": 26, "title": "multi-value select input not supported for .submit()", "user": {"login": "Jajcus", "id": 765347, "node_id": "MDQ6VXNlcjc2NTM0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/765347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jajcus", "html_url": "https://github.com/Jajcus", "followers_url": "https://api.github.com/users/Jajcus/followers", "following_url": "https://api.github.com/users/Jajcus/following{/other_user}", "gists_url": "https://api.github.com/users/Jajcus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jajcus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jajcus/subscriptions", "organizations_url": "https://api.github.com/users/Jajcus/orgs", "repos_url": "https://api.github.com/users/Jajcus/repos", "events_url": "https://api.github.com/users/Jajcus/events{/privacy}", "received_events_url": "https://api.github.com/users/Jajcus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102333919, "node_id": "MDU6TGFiZWwxMDIzMzM5MTk=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 102333924, "node_id": "MDU6TGFiZWwxMDIzMzM5MjQ=", "url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-24T10:19:28Z", "updated_at": "2015-11-24T12:55:57Z", "closed_at": "2015-11-24T12:55:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": ".submit() won't work for mult-value `<select>` input \u2013 always only the last selected value is used.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/24", "repository_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup", "labels_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/24/comments", "events_url": "https://api.github.com/repos/MechanicalSoup/MechanicalSoup/issues/24/events", "html_url": "https://github.com/MechanicalSoup/MechanicalSoup/issues/24", "id": 116896490, "node_id": "MDU6SXNzdWUxMTY4OTY0OTA=", "number": 24, "title": "Uh, can it be as mechanize as use cookiejar?", "user": {"login": "GroverChouT", "id": 8392630, "node_id": "MDQ6VXNlcjgzOTI2MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8392630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GroverChouT", "html_url": "https://github.com/GroverChouT", "followers_url": "https://api.github.com/users/GroverChouT/followers", "following_url": "https://api.github.com/users/GroverChouT/following{/other_user}", "gists_url": "https://api.github.com/users/GroverChouT/gists{/gist_id}", "starred_url": "https://api.github.com/users/GroverChouT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GroverChouT/subscriptions", "organizations_url": "https://api.github.com/users/GroverChouT/orgs", "repos_url": "https://api.github.com/users/GroverChouT/repos", "events_url": "https://api.github.com/users/GroverChouT/events{/privacy}", "received_events_url": "https://api.github.com/users/GroverChouT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-14T05:01:08Z", "updated_at": "2015-11-24T11:39:05Z", "closed_at": "2015-11-24T11:39:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like this:\n\n```\nbrowser = mechanize.Browser()\nbrowser.set_cookiejar(cookiejar)\nbrowser.open('')\n```\n", "performed_via_github_app": null, "score": 1.0}]}