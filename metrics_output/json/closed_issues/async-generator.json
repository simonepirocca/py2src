{"total_count": 9, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/python-trio/async_generator/issues/31", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/31/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/31/events", "html_url": "https://github.com/python-trio/async_generator/issues/31", "id": 590712555, "node_id": "MDU6SXNzdWU1OTA3MTI1NTU=", "number": 31, "title": "asynccontextmanager decorated functions return False but when using contextlib they return None", "user": {"login": "gsalgado", "id": 412274, "node_id": "MDQ6VXNlcjQxMjI3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/412274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsalgado", "html_url": "https://github.com/gsalgado", "followers_url": "https://api.github.com/users/gsalgado/followers", "following_url": "https://api.github.com/users/gsalgado/following{/other_user}", "gists_url": "https://api.github.com/users/gsalgado/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsalgado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsalgado/subscriptions", "organizations_url": "https://api.github.com/users/gsalgado/orgs", "repos_url": "https://api.github.com/users/gsalgado/repos", "events_url": "https://api.github.com/users/gsalgado/events{/privacy}", "received_events_url": "https://api.github.com/users/gsalgado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-31T01:22:52Z", "updated_at": "2020-04-05T03:11:37Z", "closed_at": "2020-04-05T03:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this is intentional, but contextlib's `asynccontextmanager` decorated functions return None whereas here they'd return False. The snippet below shows that:\r\n\r\n```\r\nimport asyncio\r\nimport contextlib\r\nfrom async_generator import asynccontextmanager\r\n\r\n\r\n@contextlib.asynccontextmanager\r\nasync def f():\r\n    yield\r\n\r\n\r\n@asynccontextmanager\r\nasync def g():\r\n    yield\r\n\r\n\r\nasync def main():\r\n    ctx1 = f()\r\n    ctx2 = g()\r\n    await asyncio.gather(*(ctx.__aenter__() for ctx in [ctx1, ctx2]))\r\n    exits = await asyncio.gather(*(ctx.__aexit__(None, None, None) for ctx in [ctx1, ctx2]))\r\n    print(exits)\r\n\r\n\r\nl = asyncio.get_event_loop()\r\nl.run_until_complete(main())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/27", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/27/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/27/events", "html_url": "https://github.com/python-trio/async_generator/issues/27", "id": 409385243, "node_id": "MDU6SXNzdWU0MDkzODUyNDM=", "number": 27, "title": "open_cancel_scope \u2192 CancelScope", "user": {"login": "smurfix", "id": 236571, "node_id": "MDQ6VXNlcjIzNjU3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/236571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smurfix", "html_url": "https://github.com/smurfix", "followers_url": "https://api.github.com/users/smurfix/followers", "following_url": "https://api.github.com/users/smurfix/following{/other_user}", "gists_url": "https://api.github.com/users/smurfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/smurfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smurfix/subscriptions", "organizations_url": "https://api.github.com/users/smurfix/orgs", "repos_url": "https://api.github.com/users/smurfix/repos", "events_url": "https://api.github.com/users/smurfix/events{/privacy}", "received_events_url": "https://api.github.com/users/smurfix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T16:24:30Z", "updated_at": "2019-02-12T19:21:01Z", "closed_at": "2019-02-12T19:21:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "should be de-deprecated ASAP", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/24", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/24/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/24/events", "html_url": "https://github.com/python-trio/async_generator/issues/24", "id": 349992518, "node_id": "MDU6SXNzdWUzNDk5OTI1MTg=", "number": 24, "title": "missing git tag 1.10", "user": {"login": "anthraxx", "id": 203012, "node_id": "MDQ6VXNlcjIwMzAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/203012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthraxx", "html_url": "https://github.com/anthraxx", "followers_url": "https://api.github.com/users/anthraxx/followers", "following_url": "https://api.github.com/users/anthraxx/following{/other_user}", "gists_url": "https://api.github.com/users/anthraxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthraxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthraxx/subscriptions", "organizations_url": "https://api.github.com/users/anthraxx/orgs", "repos_url": "https://api.github.com/users/anthraxx/repos", "events_url": "https://api.github.com/users/anthraxx/events{/privacy}", "received_events_url": "https://api.github.com/users/anthraxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-13T11:34:05Z", "updated_at": "2018-08-14T08:35:25Z", "closed_at": "2018-08-14T04:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nOn pypi the 1.10 is already published. it would be nice to have a corresponding git commit available via a pushed git tag.\r\nCan you please tag and push 1.10 to github?\r\ncheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/21", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/21/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/21/events", "html_url": "https://github.com/python-trio/async_generator/issues/21", "id": 346081340, "node_id": "MDU6SXNzdWUzNDYwODEzNDA=", "number": 21, "title": "New Release", "user": {"login": "KimiNewt", "id": 2090554, "node_id": "MDQ6VXNlcjIwOTA1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2090554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KimiNewt", "html_url": "https://github.com/KimiNewt", "followers_url": "https://api.github.com/users/KimiNewt/followers", "following_url": "https://api.github.com/users/KimiNewt/following{/other_user}", "gists_url": "https://api.github.com/users/KimiNewt/gists{/gist_id}", "starred_url": "https://api.github.com/users/KimiNewt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KimiNewt/subscriptions", "organizations_url": "https://api.github.com/users/KimiNewt/orgs", "repos_url": "https://api.github.com/users/KimiNewt/repos", "events_url": "https://api.github.com/users/KimiNewt/events{/privacy}", "received_events_url": "https://api.github.com/users/KimiNewt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-31T08:14:23Z", "updated_at": "2018-08-09T16:34:02Z", "closed_at": "2018-08-01T03:49:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to create a new release/tag? The latest one if from January and there have been non-insignificant fixes since.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/19", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/19/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/19/events", "html_url": "https://github.com/python-trio/async_generator/issues/19", "id": 316721011, "node_id": "MDU6SXNzdWUzMTY3MjEwMTE=", "number": 19, "title": "Issues from Nicolas Boulenguez", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-23T08:58:08Z", "updated_at": "2018-04-24T02:33:31Z", "closed_at": "2018-04-24T02:19:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In private email, Nicolas Boulenguez reported the following issues they encountered while working on packaging async_generator for Debian:\r\n\r\n* [x] The 1.9 tag is missing from Github.\r\n\r\n* [x] The source says that the license is \"MIT or APACHE2 (your choice)\" but the 1.9 tarball on pypi only mentions MIT.\r\n\r\n* [x] The 1.9 tarball on pypi contains no manual, neither the source nor the formatted version.\r\n\r\n* [ ] ~~If this is easy for you to do, please consider removing stuff specific to github like .gitignore from the release tarball.  People like me downloading the tarball instead of cloning the repository might have a different workflow with their own .gitignore settings. If removing files from the tarball is convoluted with github, forget this suggestion. This is only a matter of convenience.~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/13", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/13/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/13/events", "html_url": "https://github.com/python-trio/async_generator/issues/13", "id": 296207645, "node_id": "MDU6SXNzdWUyOTYyMDc2NDU=", "number": 13, "title": "Unexpected RuntimeError: partially-exhausted async_generator garbage collected", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-11T17:28:03Z", "updated_at": "2018-04-17T17:26:35Z", "closed_at": "2018-04-17T14:06:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "async_generator is really useful! But I see one surprising behavior. When I run this code:\r\n\r\n```python3\r\nimport trio\r\nfrom async_generator import async_generator, yield_\r\n\r\n\r\n@async_generator\r\nasync def items():\r\n    for i in range(10):\r\n        await yield_(i)\r\n\r\n\r\nasync def main():\r\n    async for i in items():\r\n        if i > 4:\r\n            break\r\n        print(i)\r\n\r\n\r\nif __name__ == '__main__':\r\n    trio.run(main)\r\n```\r\n\r\nI get the following exception:\r\n\r\n```\r\nException ignored in: <bound method AsyncGenerator.__del__ of <async_generator._impl.AsyncGenerator object at 0x110a9b908>>\r\nTraceback (most recent call last):\r\n  File \".../python3.5/site-packages/async_generator/_impl.py\", line 324, in __del__\r\n    .format(self._coroutine.cr_frame.f_code.co_name)\r\nRuntimeError: partially-exhausted async_generator 'items' garbage collected\r\n```\r\n\r\nIs this expected? The same code using the Python 3.6 syntax does not print any exception. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/6", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/6/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/6/events", "html_url": "https://github.com/python-trio/async_generator/issues/6", "id": 200861319, "node_id": "MDU6SXNzdWUyMDA4NjEzMTk=", "number": 6, "title": "appveyor coverage isn't working", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-15T10:42:08Z", "updated_at": "2018-01-19T12:35:03Z", "closed_at": "2018-01-19T12:35:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "should probably figure out why and fix it at some point", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/5", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/5/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/5/events", "html_url": "https://github.com/python-trio/async_generator/issues/5", "id": 200839177, "node_id": "MDU6SXNzdWUyMDA4MzkxNzc=", "number": 5, "title": "ctypes.CDLL(None) doesn't work on Windows", "user": {"login": "gdude2002", "id": 204153, "node_id": "MDQ6VXNlcjIwNDE1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/204153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdude2002", "html_url": "https://github.com/gdude2002", "followers_url": "https://api.github.com/users/gdude2002/followers", "following_url": "https://api.github.com/users/gdude2002/following{/other_user}", "gists_url": "https://api.github.com/users/gdude2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdude2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdude2002/subscriptions", "organizations_url": "https://api.github.com/users/gdude2002/orgs", "repos_url": "https://api.github.com/users/gdude2002/repos", "events_url": "https://api.github.com/users/gdude2002/events{/privacy}", "received_events_url": "https://api.github.com/users/gdude2002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-15T00:32:19Z", "updated_at": "2017-01-15T18:51:23Z", "closed_at": "2017-01-15T10:47:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was asked to raise this here from https://github.com/SunDwarf/Kyoukai/issues/19\r\n\r\nI get a TypeError,  `bad argument type for built-in operation` within Kyoukai, at an import statement (within `asyncio_extras`: `from async_generator import yield_`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-trio/async_generator/issues/1", "repository_url": "https://api.github.com/repos/python-trio/async_generator", "labels_url": "https://api.github.com/repos/python-trio/async_generator/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/python-trio/async_generator/issues/1/comments", "events_url": "https://api.github.com/repos/python-trio/async_generator/issues/1/events", "html_url": "https://github.com/python-trio/async_generator/issues/1", "id": 158856063, "node_id": "MDU6SXNzdWUxNTg4NTYwNjM=", "number": 1, "title": "Questions", "user": {"login": "bj0", "id": 1139347, "node_id": "MDQ6VXNlcjExMzkzNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1139347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bj0", "html_url": "https://github.com/bj0", "followers_url": "https://api.github.com/users/bj0/followers", "following_url": "https://api.github.com/users/bj0/following{/other_user}", "gists_url": "https://api.github.com/users/bj0/gists{/gist_id}", "starred_url": "https://api.github.com/users/bj0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bj0/subscriptions", "organizations_url": "https://api.github.com/users/bj0/orgs", "repos_url": "https://api.github.com/users/bj0/repos", "events_url": "https://api.github.com/users/bj0/events{/privacy}", "received_events_url": "https://api.github.com/users/bj0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-07T07:22:36Z", "updated_at": "2016-07-03T07:35:43Z", "closed_at": "2016-07-03T07:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw your pycon lightning talk on youtube and thought it was pretty neat.  `await yield` for `async for` has been something I've wanted since I first read about `async for`.  I have made decorators that try to take care of all the `__aiter__`/`__anext__` boilerplate code in the past, but I have never seen one that used a `yield_` function like yours (I have always used queues to pass values).  It's a pretty clever idea.\n\nAs I was reading through your code and testing differences between your implementation and mine, I had a few questions:\n- Why `YieldWrapper`?  \n\nIt looks like you are using it as a sentinal value to determine when you've reached the end of the coroutine chain, but why not just yield the value directly and then in send() you can use `inspect.isawaitable(result)` to determine if you're at the end.  I don't know if you would need `inspect.isgenerator` or `inspect.iscoroutine`, but for all the tests I've done, `inspect.isawaitable(result)` has been sufficient.  \n\nThis would have the added benefit of allowing the decorator to turn any generator into an async iterable (not just ones using `yield_`). \n- Why a new ANextIter for every `__anext__` call?  \n\nIt seems like unnecessary overhead to create a new instance for each `__anext__` call, why not just create an instance in `__aiter__` (which is called once per `async for`) and give it a `__anext__` that returns `self`?  This also separates them more into an \"async iterable\" and \"async iterator\".\n- Why comment out `yield_from_`?  \n\nI read your README, and I agree that an `asend` or `athrow` seem pretty weird, but I don't understand the problem with `yield_from_`.  The most obvious and useful case I can think of is generator delegation, and as far as I can tell your (commented out) version does that just fine.\n\nFor reference, here's the version I was using (updated to adopt your `yield_` ideas and be more flexible): https://gist.github.com/bj0/0313ee67766de6a04881\n", "performed_via_github_app": null, "score": 1.0}]}