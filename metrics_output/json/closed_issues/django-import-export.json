{"total_count": 636, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1175", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1175/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1175/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1175/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1175", "id": 682701005, "node_id": "MDU6SXNzdWU2ODI3MDEwMDU=", "number": 1175, "title": "Including properties in an export?", "user": {"login": "lggwettmann", "id": 4527829, "node_id": "MDQ6VXNlcjQ1Mjc4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4527829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lggwettmann", "html_url": "https://github.com/lggwettmann", "followers_url": "https://api.github.com/users/lggwettmann/followers", "following_url": "https://api.github.com/users/lggwettmann/following{/other_user}", "gists_url": "https://api.github.com/users/lggwettmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/lggwettmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lggwettmann/subscriptions", "organizations_url": "https://api.github.com/users/lggwettmann/orgs", "repos_url": "https://api.github.com/users/lggwettmann/repos", "events_url": "https://api.github.com/users/lggwettmann/events{/privacy}", "received_events_url": "https://api.github.com/users/lggwettmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1263761601, "node_id": "MDU6TGFiZWwxMjYzNzYxNjAx", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/solution%20included", "name": "solution included", "color": "e7f99f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-20T13:04:09Z", "updated_at": "2020-08-21T16:01:31Z", "closed_at": "2020-08-21T14:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to include all model properties for all admin models during export. How would I do that the easiest and DRYest?\r\n\r\nUntil now, I have created a new ModelAdmin base class using ExportActionMixin and but I wouldn't know how to add the properties to the modelresource in get_resource_class:\r\n```\r\n    def get_resource_class(self):\r\n        \"\"\" Returns a resource class including model properties for the django-import-export dependency \"\"\"\r\n        if not self.resource_class:\r\n            modelresource = modelresource_factory(self.model)\r\n            ## How to add properties here?\r\n            return modelresource\r\n        else:\r\n            return self.resource_class\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1172", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1172/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1172/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1172/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1172", "id": 677789855, "node_id": "MDU6SXNzdWU2Nzc3ODk4NTU=", "number": 1172, "title": "Import name instead of ID in a foreign key field", "user": {"login": "cesardft", "id": 57919347, "node_id": "MDQ6VXNlcjU3OTE5MzQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/57919347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesardft", "html_url": "https://github.com/cesardft", "followers_url": "https://api.github.com/users/cesardft/followers", "following_url": "https://api.github.com/users/cesardft/following{/other_user}", "gists_url": "https://api.github.com/users/cesardft/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesardft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesardft/subscriptions", "organizations_url": "https://api.github.com/users/cesardft/orgs", "repos_url": "https://api.github.com/users/cesardft/repos", "events_url": "https://api.github.com/users/cesardft/events{/privacy}", "received_events_url": "https://api.github.com/users/cesardft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-12T15:36:30Z", "updated_at": "2020-08-14T17:10:43Z", "closed_at": "2020-08-14T10:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have this model: \r\n\r\nmodels.py\r\n```\r\n`class User(models.Model):\r\n    user_name = models.CharField(max_length=50, blank=False, verbose_name='Nome')\r\n    user_login = models.CharField(max_length=50, blank=True, verbose_name='Login de Rede')\r\n    user_position = models.ForeignKey('UserPositionDatabase', on_delete=models.PROTECT, max_length=50, blank=True, verbose_name='Posi\u00e7\u00e3o', default=\"\") \r\n    user_departament = models.ForeignKey('Departament', on_delete=models.PROTECT, null=False, blank=True, verbose_name='Departamento')\r\n    user_manager = models.CharField(max_length=20, verbose_name='Gestor Imediato', default=\"\")\r\n    user_locality = models.ForeignKey('Locality', on_delete=models.PROTECT, blank=True, null=False, verbose_name='Localidade')`\r\n```\r\n\r\nwhen I export the department which is a foreign key, the result is the id instead of the departament name. How do I change?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1170", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1170/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1170/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1170/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1170", "id": 674404896, "node_id": "MDU6SXNzdWU2NzQ0MDQ4OTY=", "number": 1170, "title": "Is this able to handle gigabytes of csv file import without overwhelming memory?", "user": {"login": "shadrachbaldon", "id": 23725791, "node_id": "MDQ6VXNlcjIzNzI1Nzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/23725791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadrachbaldon", "html_url": "https://github.com/shadrachbaldon", "followers_url": "https://api.github.com/users/shadrachbaldon/followers", "following_url": "https://api.github.com/users/shadrachbaldon/following{/other_user}", "gists_url": "https://api.github.com/users/shadrachbaldon/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadrachbaldon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadrachbaldon/subscriptions", "organizations_url": "https://api.github.com/users/shadrachbaldon/orgs", "repos_url": "https://api.github.com/users/shadrachbaldon/repos", "events_url": "https://api.github.com/users/shadrachbaldon/events{/privacy}", "received_events_url": "https://api.github.com/users/shadrachbaldon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T15:32:01Z", "updated_at": "2020-08-07T09:37:46Z", "closed_at": "2020-08-06T15:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--- Welcome to django-import-export  -->\r\n<!--- Your issue may already be reported!\r\nPlease search on the [issue tracker](../) before creating one. -->\r\n<!--- Additionally, you can either search or ask you question on [Stack Overflow tagged with `django-import-export`](https://stackoverflow.com/questions/tagged/django-import-export) -->\r\n<!--- If you would still like to create a question on github, please do so and remember that the more details you give, the more likely your question will be answered. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1169", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1169/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1169/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1169/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1169", "id": 667881794, "node_id": "MDU6SXNzdWU2Njc4ODE3OTQ=", "number": 1169, "title": "Excel File .xlsx Skipping the values of ManyToManyField", "user": {"login": "alexavenger", "id": 47525730, "node_id": "MDQ6VXNlcjQ3NTI1NzMw", "avatar_url": "https://avatars2.githubusercontent.com/u/47525730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexavenger", "html_url": "https://github.com/alexavenger", "followers_url": "https://api.github.com/users/alexavenger/followers", "following_url": "https://api.github.com/users/alexavenger/following{/other_user}", "gists_url": "https://api.github.com/users/alexavenger/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexavenger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexavenger/subscriptions", "organizations_url": "https://api.github.com/users/alexavenger/orgs", "repos_url": "https://api.github.com/users/alexavenger/repos", "events_url": "https://api.github.com/users/alexavenger/events{/privacy}", "received_events_url": "https://api.github.com/users/alexavenger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383043, "node_id": "MDU6TGFiZWwxOTM4MzA0Mw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-07-29T14:17:29Z", "updated_at": "2020-07-31T20:13:32Z", "closed_at": "2020-07-31T20:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen importing excel file .xlsx with ManyToManyField is importing the values blank.\r\nI've replicated on your Test App using your books-sample\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open file \"books-sample.csv\" with Excel.\r\n2. Split the csv in excel columns and save it as .xlsx \r\n3. Go to Admin site and open Book model.\r\n4. Click on  import and select the .xlsx file\r\n\r\n\r\n**Versions (please complete the following information):**\r\n - Django Import Export: 2.3\r\n - Python 3.7\r\n - Django 3.0.8\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/47525730/88811142-7f680d00-d1b6-11ea-9819-70ee50f5b649.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1168", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1168/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1168/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1168/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1168", "id": 667159640, "node_id": "MDU6SXNzdWU2NjcxNTk2NDA=", "number": 1168, "title": "What is the right way to import specific sheet in excel??", "user": {"login": "rmControls", "id": 27656141, "node_id": "MDQ6VXNlcjI3NjU2MTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/27656141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmControls", "html_url": "https://github.com/rmControls", "followers_url": "https://api.github.com/users/rmControls/followers", "following_url": "https://api.github.com/users/rmControls/following{/other_user}", "gists_url": "https://api.github.com/users/rmControls/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmControls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmControls/subscriptions", "organizations_url": "https://api.github.com/users/rmControls/orgs", "repos_url": "https://api.github.com/users/rmControls/repos", "events_url": "https://api.github.com/users/rmControls/events{/privacy}", "received_events_url": "https://api.github.com/users/rmControls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T15:19:40Z", "updated_at": "2020-07-31T20:13:55Z", "closed_at": "2020-07-31T20:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to import specific sheet in excel file... \r\n\r\nwhat is the correct way to implement this??\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1166", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1166/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1166/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1166/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1166", "id": 664396979, "node_id": "MDU6SXNzdWU2NjQzOTY5Nzk=", "number": 1166, "title": "Indentation error on version 1.2.0", "user": {"login": "webmarek", "id": 30749302, "node_id": "MDQ6VXNlcjMwNzQ5MzAy", "avatar_url": "https://avatars3.githubusercontent.com/u/30749302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webmarek", "html_url": "https://github.com/webmarek", "followers_url": "https://api.github.com/users/webmarek/followers", "following_url": "https://api.github.com/users/webmarek/following{/other_user}", "gists_url": "https://api.github.com/users/webmarek/gists{/gist_id}", "starred_url": "https://api.github.com/users/webmarek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webmarek/subscriptions", "organizations_url": "https://api.github.com/users/webmarek/orgs", "repos_url": "https://api.github.com/users/webmarek/repos", "events_url": "https://api.github.com/users/webmarek/events{/privacy}", "received_events_url": "https://api.github.com/users/webmarek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383043, "node_id": "MDU6TGFiZWwxOTM4MzA0Mw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T11:24:05Z", "updated_at": "2020-08-14T11:19:08Z", "closed_at": "2020-08-14T11:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nfor version 1.2.0 such an error occurs when i run `python manage.py collectstatic`\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/core/management/__init__.py\", line 312, in execute\r\n    django.setup()\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/__init__.py\", line 18, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/apps/registry.py\", line 115, in populate\r\n    app_config.ready()\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/contrib/admin/apps.py\", line 22, in ready\r\n    self.module.autodiscover()\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/contrib/admin/__init__.py\", line 24, in autodiscover\r\n    autodiscover_modules('admin', register_to=site)\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/django/utils/module_loading.py\", line 74, in autodiscover_modules\r\n    import_module('%s.%s' % (app_config.name, module_to_search))\r\n  File \"/usr/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 674, in exec_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 781, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 741, in source_to_code\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/home/mors/.virtualenvs/nest-dev/lib/python3.6/site-packages/import_export/admin.py\", line 143\r\n    def process_import(self, request, *args, **kwargs):\r\n\r\n```\r\n\r\n**To Reproduce**\r\n just install it (django-import-export v 1.2.0 ) with django 1.8.4  and run  `python manage.py collectstatic`\r\n\r\nwhen I went to specified line in specified file (`site-packages/import_export/admin.py`, line 143)\r\nthere was indentation of two tabs. Easy to fix, I guess :)\r\n\r\n**Versions (please complete the following information):**\r\n - Django Import Export:  1.2\r\n - Python 3.6, 3.7\r\n - Django  1.8.4\r\n\r\n**Expected behavior**\r\njust remove the double tab\r\n![image](https://user-images.githubusercontent.com/30749302/88281328-c30ad480-cce7-11ea-9253-bf2ee47930aa.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1165", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1165/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1165/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1165/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1165", "id": 663522136, "node_id": "MDU6SXNzdWU2NjM1MjIxMzY=", "number": 1165, "title": "datetime field localtime() issue", "user": {"login": "MrAlexWinkler", "id": 10102029, "node_id": "MDQ6VXNlcjEwMTAyMDI5", "avatar_url": "https://avatars2.githubusercontent.com/u/10102029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAlexWinkler", "html_url": "https://github.com/MrAlexWinkler", "followers_url": "https://api.github.com/users/MrAlexWinkler/followers", "following_url": "https://api.github.com/users/MrAlexWinkler/following{/other_user}", "gists_url": "https://api.github.com/users/MrAlexWinkler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAlexWinkler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAlexWinkler/subscriptions", "organizations_url": "https://api.github.com/users/MrAlexWinkler/orgs", "repos_url": "https://api.github.com/users/MrAlexWinkler/repos", "events_url": "https://api.github.com/users/MrAlexWinkler/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAlexWinkler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383043, "node_id": "MDU6TGFiZWwxOTM4MzA0Mw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-22T06:53:22Z", "updated_at": "2020-07-23T18:04:43Z", "closed_at": "2020-07-23T18:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nDjango DateTime Import\r\n\r\n**To Reproduce**\r\nImport DateTime data and you'll hit a \"localtime() cannot be applied to a naive datetime\", I've been using the package for a while now and use the admin import page as well as a custom import page for users. Both work fine for non-datetime data.\r\n\r\nI've tried this with adding with tz +00 and without\r\n2020-07-17 7:42:39\r\n2020-07-17 7:42:39+00\r\n\r\nI've tried the DateTimeWidget where\r\nformat=\"%Y-%m-%d %H:%M:%S\"\r\nformat=\"%Y-%m-%d %H:%M:%S$z\"\r\nformat=None\r\n\r\nI've posted a SOF question regarding it\r\nhttps://stackoverflow.com/questions/62990575/django-import-export-datetime-naive-datetime-error\r\n\r\nAnd had a convo specific to it on SOF\r\nhttps://chat.stackoverflow.com/rooms/218260/django-import-export\r\n\r\nThe end result seems that the issue may be in the django-import-export package.\r\n\r\n**Versions (please complete the following information):**\r\n - django-import-export==2.2.0\r\n - Python 3.7.4\r\n - Django==3.0.2\r\n\r\nsettings.py\r\n```\r\nLANGUAGE_CODE = 'en-us'\r\nTIME_ZONE = 'UTC'\r\nUSE_I18N = True\r\nUSE_L10N = True\r\nUSE_TZ = True\r\n```\r\n\r\n**Expected behavior**\r\nI was expecting the datetime to import the dates in my csv file\r\n\r\n**Screenshots**\r\nView 2 links above\r\n\r\n**Additional context**\r\nView 2 links above\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1160", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1160/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1160/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1160/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1160", "id": 648576709, "node_id": "MDU6SXNzdWU2NDg1NzY3MDk=", "number": 1160, "title": "How do you deal with server timeouts?", "user": {"login": "charleshan", "id": 3143154, "node_id": "MDQ6VXNlcjMxNDMxNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3143154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleshan", "html_url": "https://github.com/charleshan", "followers_url": "https://api.github.com/users/charleshan/followers", "following_url": "https://api.github.com/users/charleshan/following{/other_user}", "gists_url": "https://api.github.com/users/charleshan/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleshan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleshan/subscriptions", "organizations_url": "https://api.github.com/users/charleshan/orgs", "repos_url": "https://api.github.com/users/charleshan/repos", "events_url": "https://api.github.com/users/charleshan/events{/privacy}", "received_events_url": "https://api.github.com/users/charleshan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T00:06:17Z", "updated_at": "2020-07-12T14:22:30Z", "closed_at": "2020-07-12T14:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found an issue that was created a few years back but the answer is not valid anymore: https://github.com/django-import-export/django-import-export/issues/301\r\n\r\nI believe this is a common problem if you're importing a large dataset. We should document how to get around server timeouts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1159", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1159/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1159/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1159", "id": 648508938, "node_id": "MDU6SXNzdWU2NDg1MDg5Mzg=", "number": 1159, "title": "zh_Hans translation file has a problem", "user": {"login": "SnarkBoojum", "id": 4647429, "node_id": "MDQ6VXNlcjQ2NDc0Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4647429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SnarkBoojum", "html_url": "https://github.com/SnarkBoojum", "followers_url": "https://api.github.com/users/SnarkBoojum/followers", "following_url": "https://api.github.com/users/SnarkBoojum/following{/other_user}", "gists_url": "https://api.github.com/users/SnarkBoojum/gists{/gist_id}", "starred_url": "https://api.github.com/users/SnarkBoojum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SnarkBoojum/subscriptions", "organizations_url": "https://api.github.com/users/SnarkBoojum/orgs", "repos_url": "https://api.github.com/users/SnarkBoojum/repos", "events_url": "https://api.github.com/users/SnarkBoojum/events{/privacy}", "received_events_url": "https://api.github.com/users/SnarkBoojum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383043, "node_id": "MDU6TGFiZWwxOTM4MzA0Mw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1234832631, "node_id": "MDU6TGFiZWwxMjM0ODMyNjMx", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/good%20first%20time%20issue", "name": "good first time issue", "color": "32d827", "default": false, "description": "An issue for a first time contributor"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-30T21:31:20Z", "updated_at": "2020-07-15T11:33:29Z", "closed_at": "2020-07-12T14:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I package django-import-export for Debian, and the Debian checkers found an issue with the zh_Hans translation ([report](https://i18n.debian.org/l10n-pkg-status/p/python-django-import-export.html)):\r\n```gettext: import_export/locale/zh_Hans/LC_MESSAGES/django.po: can't guess language```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1158", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1158/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1158/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1158/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1158", "id": 643204365, "node_id": "MDU6SXNzdWU2NDMyMDQzNjU=", "number": 1158, "title": "Translation conflicts ", "user": {"login": "z268", "id": 2182628, "node_id": "MDQ6VXNlcjIxODI2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2182628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z268", "html_url": "https://github.com/z268", "followers_url": "https://api.github.com/users/z268/followers", "following_url": "https://api.github.com/users/z268/following{/other_user}", "gists_url": "https://api.github.com/users/z268/gists{/gist_id}", "starred_url": "https://api.github.com/users/z268/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z268/subscriptions", "organizations_url": "https://api.github.com/users/z268/orgs", "repos_url": "https://api.github.com/users/z268/repos", "events_url": "https://api.github.com/users/z268/events{/privacy}", "received_events_url": "https://api.github.com/users/z268/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383043, "node_id": "MDU6TGFiZWwxOTM4MzA0Mw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T16:21:39Z", "updated_at": "2020-07-02T17:06:54Z", "closed_at": "2020-07-02T17:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get some translation conflicts with Django when I use `LANGUAGE_CODE = 'ru-ru'`. \r\n\r\nTranslation from `django==3.0`:\r\n```\r\nmsgid \"Delete\"\r\nmsgstr \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\"\r\n```\r\n\r\nTranslation from `django-import-export`:\r\n```\r\n#: templates/admin/import_export/import.html:101\r\nmsgid \"Delete\"\r\nmsgstr \"\u0423\u0434\u0430\u043b\u0435\u043d\u043e\"\r\n```\r\n\r\n`django-import-import` overrides django translations. It's confusing.\r\nif I understand correctly in `templates/admin/import_export/import.html` should be used verbs in past tense: `Added`, `Deleted`, `Updated` instead of `New`, `Delete`, `Update`. \r\nAlso it needs  to be renamed in `.po` files for saving previous translations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1157", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1157/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1157/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1157/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1157", "id": 643177891, "node_id": "MDU6SXNzdWU2NDMxNzc4OTE=", "number": 1157, "title": "Examples of importing nested data?", "user": {"login": "charleshan", "id": 3143154, "node_id": "MDQ6VXNlcjMxNDMxNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3143154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleshan", "html_url": "https://github.com/charleshan", "followers_url": "https://api.github.com/users/charleshan/followers", "following_url": "https://api.github.com/users/charleshan/following{/other_user}", "gists_url": "https://api.github.com/users/charleshan/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleshan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleshan/subscriptions", "organizations_url": "https://api.github.com/users/charleshan/orgs", "repos_url": "https://api.github.com/users/charleshan/repos", "events_url": "https://api.github.com/users/charleshan/events{/privacy}", "received_events_url": "https://api.github.com/users/charleshan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-22T15:42:13Z", "updated_at": "2020-06-25T12:58:34Z", "closed_at": "2020-06-25T12:58:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a simple use case.\r\n\r\n```\r\nclass Address(models.Model):\r\n    city = models.CharField(blank=True, max_length=255)\r\n    place = models.CharField(blank=True, max_length=255)\r\n    state = models.CharField(blank=True, max_length=255)\r\n    county = models.CharField(blank=True, max_length=255)\r\n    country = models.CharField(blank=True, max_length=255)\r\n    country_code = models.CharField(blank=True, max_length=3)\r\n\r\nclass Person(models.Model):\r\n    name = models.CharField(blank=True, max_length=255)\r\n    address = models.OneToOneField(Address, related_name='+', blank=True, null=True, on_delete=models.SET_NULL)\r\n    ...\r\n```\r\n\r\n`django-import-export` makes it really straight forward if the `Address` fields are inside the `Person` model but the documentation doesn't show any examples of importing nested structures like this.\r\n \r\nHow do we make the import create two objects and and create a relationship?\r\n\r\n---\r\nRelated: https://github.com/django-import-export/django-import-export/issues/571, https://github.com/django-import-export/django-import-export/issues/318", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1156", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1156/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1156/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1156/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1156", "id": 642565714, "node_id": "MDU6SXNzdWU2NDI1NjU3MTQ=", "number": 1156, "title": "Django Import-export: Import CSV files errors", "user": {"login": "NhaTrang", "id": 15188235, "node_id": "MDQ6VXNlcjE1MTg4MjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/15188235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NhaTrang", "html_url": "https://github.com/NhaTrang", "followers_url": "https://api.github.com/users/NhaTrang/followers", "following_url": "https://api.github.com/users/NhaTrang/following{/other_user}", "gists_url": "https://api.github.com/users/NhaTrang/gists{/gist_id}", "starred_url": "https://api.github.com/users/NhaTrang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NhaTrang/subscriptions", "organizations_url": "https://api.github.com/users/NhaTrang/orgs", "repos_url": "https://api.github.com/users/NhaTrang/repos", "events_url": "https://api.github.com/users/NhaTrang/events{/privacy}", "received_events_url": "https://api.github.com/users/NhaTrang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-21T13:40:53Z", "updated_at": "2020-08-07T09:31:16Z", "closed_at": "2020-08-07T09:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I`ve spent a few hours trying to debug this issue. I am trying to import a catalog of product into my app. I am using Django Import-export to import a csv file. I have tried to import it via the admin site and via a simple upload file. In both case, I am encountering some errors. Would you have an idea how to resolve them?\r\n\r\n**1st Method: Import the csv file via the admin site**\r\n\r\nError encountered: Imported file has a wrong encoding: 'charmap' codec can't decode byte 0x9d in position 13365: character maps to\r\n\r\nIt looks like this method cannot accept some character(\"\"). How can I change my code to accept any character? I`ve already removed the following characters: \u00a3, - and try to encode it in UTF-8. I have also done a search to remove every non ASCII characters(128-255)\r\n\r\n**2eme Method: Import the csv file via the website**\r\n\r\nError encountered: 'MultiValueDict' object is not callable\r\n\r\n**views.py**\r\n\r\n```\r\ndef simple_upload(request):\r\n    if request.method == 'POST':\r\n        file_format = request.POST.get('file-format')\r\n        product_resource = ProductResource()\r\n        dataset = Dataset()\r\n        new_products = request.FILES['Price_List']\r\n\r\n        if file_format == 'CSV':\r\n            imported_data = dataset.load(new_products.read().decode('utf-8'),format='csv')\r\n            result = product_resource.import_data(dataset, dry_run=True)                                                                 \r\n        elif file_format == 'JSON':\r\n            imported_data = dataset.load(new_products.read().decode('utf-8'),format='json')\r\n            # Testing data import\r\n            result = product_resource.import_data(dataset, dry_run=True) \r\n\r\n        if not result.has_errors():\r\n            # Import now\r\n            product_resource.import_data(dataset, dry_run=False)\r\n\r\n    return render(request, 'catalog/simple_upload.html')\r\n```\r\n**models.py**\r\n\r\n```\r\nfrom import_export import resources\r\nfrom .models import Product\r\n\r\nclass ProductResource(resources.ModelResource):\r\n    class Meta:\r\n        model = Product\r\n        skip_unchanged = True\r\n        report_skipped = False\r\n```\r\n**simple_upload.html**\r\n\r\n```\r\n{% extends 'base.html' %}\r\n\r\n{% block body %}\r\n<h3>Import Data</h3>\r\n<p>importing to database</p>\r\n<form method=\"post\" enctype=\"multipart/form-data\">\r\n    {% csrf_token %}\r\n    <input type=\"file\" name=\"importData\">\r\n    <p>Please select format of file.</p>\r\n    <select name=\"file-format\" class=\"form-control my-3\">\r\n        <option selected>Choose format...</option>\r\n        <option>CSV</option>\r\n        <option>JSON</option>\r\n      </select>\r\n    <button class=\"btn btn-primary\" type=\"submit\">Import</button>\r\n  </form>\r\n\r\n{% endblock %}\r\n```\r\nMany Thanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1153", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1153/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1153/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1153/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1153", "id": 638970454, "node_id": "MDU6SXNzdWU2Mzg5NzA0NTQ=", "number": 1153, "title": "Exporting a lot of data (more than 500 records) will causes the browser reset connection", "user": {"login": "kennir", "id": 876410, "node_id": "MDQ6VXNlcjg3NjQxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/876410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennir", "html_url": "https://github.com/kennir", "followers_url": "https://api.github.com/users/kennir/followers", "following_url": "https://api.github.com/users/kennir/following{/other_user}", "gists_url": "https://api.github.com/users/kennir/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennir/subscriptions", "organizations_url": "https://api.github.com/users/kennir/orgs", "repos_url": "https://api.github.com/users/kennir/repos", "events_url": "https://api.github.com/users/kennir/events{/privacy}", "received_events_url": "https://api.github.com/users/kennir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383043, "node_id": "MDU6TGFiZWwxOTM4MzA0Mw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T16:06:48Z", "updated_at": "2020-06-16T06:40:22Z", "closed_at": "2020-06-16T06:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nExporting a lot of data (more than 500 records) will cause the browser to reset the connection\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nSelect many records, then export to Xls format, wait for about 30 seconds before a reset connection error occurs\r\n\r\n**Versions (please complete the following information):**\r\n - Django Import Export: 2.1.0\r\n - Python 3.7.0\r\n - Django 2.2.12\r\n\r\n**Expected behavior**\r\nThe browser reset the connection, The server side gets 499 code.\r\n\r\n**Screenshots**\r\n\r\n\r\n**Additional context**\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1152", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1152/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1152/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1152/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1152", "id": 636662097, "node_id": "MDU6SXNzdWU2MzY2NjIwOTc=", "number": 1152, "title": " How to update model before export", "user": {"login": "yarnakaroesay", "id": 65582734, "node_id": "MDQ6VXNlcjY1NTgyNzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/65582734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarnakaroesay", "html_url": "https://github.com/yarnakaroesay", "followers_url": "https://api.github.com/users/yarnakaroesay/followers", "following_url": "https://api.github.com/users/yarnakaroesay/following{/other_user}", "gists_url": "https://api.github.com/users/yarnakaroesay/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarnakaroesay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarnakaroesay/subscriptions", "organizations_url": "https://api.github.com/users/yarnakaroesay/orgs", "repos_url": "https://api.github.com/users/yarnakaroesay/repos", "events_url": "https://api.github.com/users/yarnakaroesay/events{/privacy}", "received_events_url": "https://api.github.com/users/yarnakaroesay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T02:05:32Z", "updated_at": "2020-06-12T08:56:01Z", "closed_at": "2020-06-12T08:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to calculate the pending amount from by getting the data from the django model. Now i want to update the model before exporting as the AmountPending field is empty during import. But i'm just hardstuck on this problem. Here's my resource class\r\n\r\n\r\nclass FinancePendingResource(resources.ModelResource):\r\n\r\n    invoiceNumber = Field(attribute='invoiceNumber', column_name='Invoice Number')\r\n    student = Field(attribute='student', column_name='Student')\r\n    Schedule = Field(attribute='Schedule', column_name='Schedule')\r\n    issueDate = Field(attribute='issueDate', column_name='Issue Date')\r\n    dueDate = Field(attribute='dueDate', column_name='Due Date')\r\n    amountPaid = Field(attribute='amountPaid', column_name='Amount Paid (PKR \u20a8)')\r\n\r\n\r\n    class Meta:\r\n        model = FinancePending\r\n        import_id_fields = ('invoiceNumber',)\r\n        fields = ('invoiceNumber', 'student', 'amountPaid', 'issueDate', 'dueDate', 'Schedule', 'AmountPending',)\r\n        exclude = ('id',)\r\n        skip_unchanged = True\r\n        report_skipped = True\r\n\r\n    def before_export(self, queryset, *args, **kwargs):\r\n        amount_paid = FinancePending.objects.values_list('amountPaid', flat=True)\r\n        amount_paid = list(amount_paid)\r\n        total_amount = FinancePending.objects.values_list('TotalAmount', flat=True)\r\n        total_amount = list(total_amount)\r\n\r\n        # total - paid\r\n        TotalFee = [float(s.replace(',', '')) for s in total_amount]\r\n        AmountPaid = [float(s.replace(',', '')) for s in amount_paid]\r\n\r\n        def Diff(li1, li2):\r\n            return (list(set(li1) - set(li2)))\r\n\r\n        amount_pending = Diff(TotalFee, AmountPaid)\r\n\r\n        finance_pending = FinancePending()\r\n        i=1\r\n        while i<=len(amount_pending):\r\n            FinancePending.objects.filter(invoiceNumber=i).update(AmountPending=str(amount_pending[i]))\r\n            i = i + 1\r\nEdited (uploaded an older version earlier accidently)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1151", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1151/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1151/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1151", "id": 635721348, "node_id": "MDU6SXNzdWU2MzU3MjEzNDg=", "number": 1151, "title": "How to append rows in django import export", "user": {"login": "humna-s", "id": 66698348, "node_id": "MDQ6VXNlcjY2Njk4MzQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/66698348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/humna-s", "html_url": "https://github.com/humna-s", "followers_url": "https://api.github.com/users/humna-s/followers", "following_url": "https://api.github.com/users/humna-s/following{/other_user}", "gists_url": "https://api.github.com/users/humna-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/humna-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/humna-s/subscriptions", "organizations_url": "https://api.github.com/users/humna-s/orgs", "repos_url": "https://api.github.com/users/humna-s/repos", "events_url": "https://api.github.com/users/humna-s/events{/privacy}", "received_events_url": "https://api.github.com/users/humna-s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T20:04:35Z", "updated_at": "2020-07-31T20:17:07Z", "closed_at": "2020-07-31T20:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the preview of csv file\r\nCourse | Principles of Marketing | \u00a0 | \u00a0 | \u00a0\r\n-- | -- | -- | -- | --\r\nGroup | All participants | \u00a0 | \u00a0 | \u00a0\r\n\u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0\r\nStudent ID | Username | ID number | Institution | Department\r\n132 | web_service_user | \u00a0 | \u00a0 | \u00a0\r\n131 | a.i | \u00a0 | \u00a0 | \u00a0\r\n\r\nI am importing this csv file using django import-export but the file appears empty rather than showing data. I want to skip first two rows and start from Student_ID. \r\n\r\nthis is how it appears: \r\n\u00a0 | STUDENT ID | USERNAME | ID NUMBER | INSTITUTION | DEPARTMENT | SURNAME | FIRST NAME | GROUPS | P | L | E | A | TAKEN SESSIONS | POINTS | PERCENTAGE\r\n-- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | --\r\nSkipped | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0\r\nSkipped | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0\r\nSkipped\r\n\r\n\r\nthis is my code:\r\n     class courseAttendanceResource(resources.ModelResource):\r\n     Student_ID = Field(attribute='Student_ID', column_name='Student ID')\r\n    Username = Field(attribute='Username', column_name='Username')\r\n    ID_number = Field(attribute='ID_number', column_name='ID number')\r\n    Institution = Field(attribute='Institution', column_name='Institution')\r\n    Department = Field(attribute='Department', column_name='Department')\r\n    Surname = Field(attribute='Surname', column_name='Surname')\r\n    First_name = Field(attribute='First_name', column_name='First name')\r\n    Groups = Field(attribute='Groups', column_name='Groups')\r\n    P = Field(attribute='P', column_name='P')\r\n    L = Field(attribute='L', column_name='L')\r\n    E = Field(attribute='E', column_name='E')\r\n    A = Field(attribute='A', column_name='A')\r\n    Taken_sessions = Field(attribute='Taken_sessions', column_name='Taken sessions')\r\n    Points = Field(attribute='Points', column_name='Points')\r\n    Percentage = Field(attribute='Percentage', column_name='Percentage')\r\n\r\n    def get_export_headers(self):\r\n        headers = super().get_export_headers()\r\n        for i, h in enumerate(headers):\r\n            if h == 'Student ID':\r\n                headers[i] = 'Student_ID'\r\n            if h == 'Username':\r\n                headers[i] = 'Username'\r\n            if h == 'ID number':\r\n                headers[i] = 'ID_number'\r\n            if h == 'Institution':\r\n                headers[i] = 'Institution'\r\n            if h == 'Department':\r\n                headers[i] = 'Department'\r\n            if h == 'Surname':\r\n                headers[i] = 'Surname'\r\n            if h == 'First name':\r\n                headers[i] = 'First_name'\r\n            if h == 'Groups':\r\n                headers[i] = 'Groups'\r\n            if h == 'P':\r\n                headers[i] = 'P'\r\n            if h == 'L':\r\n                headers[i] = 'L'\r\n            if h == 'E':\r\n                headers[i] = 'E'\r\n            if h == 'A':\r\n                headers[i] = 'A'\r\n            if h == 'Taken sessions':\r\n                headers[i] = 'Taken_sessions'\r\n            if h == 'Points':\r\n                headers[i] = 'Points'\r\n            if h == 'Percentage':\r\n                headers[i] = 'Percentage'\r\n        return headers\r\n\r\n    class Meta:\r\n        model = courseAttendance\r\n        import_id_fields = ('Student_ID',)\r\n        exclude = ('Course', 'Group',)\r\n        fields = ('Student_ID', 'Username', 'ID_number', 'Institution', 'Department', 'Surname', 'First_name', 'Groups', 'P', 'L', 'E', 'A', 'Taken_sessions', 'Points', 'Percentage' )\r\n        #export_order = ('Student_ID', 'Username', 'ID_number', 'Institution', 'Department', 'Surname','First_name', 'Groups', 'P', 'L', 'E', 'A','Taken_sessions', 'Points', 'Percentage')\r\n        skip_unchanged = True\r\n        report_skipped = True\r\n\r\n\r\nclass courseAttendanceAdmin(ImportExportModelAdmin):\r\n    resource_class =courseAttendanceResource\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1150", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1150/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1150/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1150/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1150", "id": 635670835, "node_id": "MDU6SXNzdWU2MzU2NzA4MzU=", "number": 1150, "title": "Django import export: it's not importing all column's data from csv.", "user": {"login": "AirnFire", "id": 59435182, "node_id": "MDQ6VXNlcjU5NDM1MTgy", "avatar_url": "https://avatars3.githubusercontent.com/u/59435182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AirnFire", "html_url": "https://github.com/AirnFire", "followers_url": "https://api.github.com/users/AirnFire/followers", "following_url": "https://api.github.com/users/AirnFire/following{/other_user}", "gists_url": "https://api.github.com/users/AirnFire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AirnFire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AirnFire/subscriptions", "organizations_url": "https://api.github.com/users/AirnFire/orgs", "repos_url": "https://api.github.com/users/AirnFire/repos", "events_url": "https://api.github.com/users/AirnFire/events{/privacy}", "received_events_url": "https://api.github.com/users/AirnFire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-09T18:38:54Z", "updated_at": "2020-08-07T09:31:49Z", "closed_at": "2020-08-07T09:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm using django import export and it's importing first 3 columns and leaving rest of the columns blank.\r\n\r\nfrom import_export import resources\r\n#from import_export import instance_loaders\r\nfrom import_export.admin import ImportExportModelAdmin\r\nfrom .userB import User_Acadamic_Details_B\r\nfrom import_export.fields import Field\r\n\r\nclass UserResourceB(resources.ModelResource):   #User_Acadamic_Details_A_Resource\r\n\r\n    def get_export_headers(self):\r\n        headers = super().get_export_headers()\r\n        for i, h in enumerate(headers):\r\n            if h == 'Course ID':\r\n                headers[i] = \"Course_ID\"\r\n            if h == 'Rollno':\r\n                headers[i] = \"Student_ID\"\r\n            if h == 'Name':\r\n                headers[i] = 'Name'\r\n            if h == 'Gender':\r\n                headers[i] = 'Gender'\r\n            if h == 'Dedication':\r\n                headers[i] = 'Dedication'\r\n            if h == 'Quiz 1 (Quiz 01(A))':\r\n                headers[i] = 'Quiz1'\r\n            if h == 'Quiz 2 (Quiz 02(A))':\r\n                headers[i] = 'Quiz2'\r\n            if h == 'Assignment 1 (Assignment no 1(A))':\r\n                headers[i] = 'Assignment1'\r\n            if h == 'Assignment 2 (Assignment no 2(A))':\r\n                headers[i] = 'Assignment2'\r\n            if h == 'Mid Exam (MID TERM EXAM(A))':\r\n                headers[i] = 'Mid_Exam'\r\n        return headers\r\n\r\n    Course_ID = Field(attribute='Course_ID', column_name='Course ID' )\r\n    Student_ID = Field(attribute='Student_ID', column_name='Rollno')\r\n    Name = Field(attribute='Name', column_name='Name')\r\n    Gender = Field(attribute='Gender', column_name='Gender')\r\n    Dedication = Field(attribute='Dedication', column_name='Dedication')\r\n    Quiz1 = Field(attribute='Quiz1', column_name='Quiz 1 (Quiz 01(A))')\r\n    Quiz2 = Field(attribute='Quiz2', column_name='Quiz 2 (Quiz 02(A))')\r\n    Assignment1 = Field(attribute='Assignment1', column_name='Assignment 1 (Assignment no 1(A))')\r\n    Assignment2 = Field(attribute='Assignment2', column_name='Assignment 2 (Assignment no 2(A))')\r\n    Mid_Exam = Field(attribute='Mid_Exam', column_name='Mid Exam (MID TERM EXAM(A))')\r\n    #Attendance = Field(attribute='Attendance', column_name='Password')\r\n\r\n\r\n\r\n\r\n    class Meta:\r\n        model = User_Acadamic_Details_B\r\n        import_id_fields = ('Course_ID',)\r\n        export_order = ('Course_ID', 'Student_ID', 'Name', 'Gender', 'Dedication', 'Quiz1', 'Quiz2', 'Assignment1', 'Assignment2', 'Mid_Exam', 'Mid_Exam')\r\n        skip_unchanged = True\r\n        report_skipped = True\r\n\r\n\r\nclass UserBAdmin(ImportExportModelAdmin):\r\n    resource_class = UserResourceB\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1148", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1148/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1148/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1148/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1148", "id": 634655441, "node_id": "MDU6SXNzdWU2MzQ2NTU0NDE=", "number": 1148, "title": "I'm getting Line number: 1 - 'id' Error when i import", "user": {"login": "yarnakaroesay", "id": 65582734, "node_id": "MDQ6VXNlcjY1NTgyNzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/65582734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarnakaroesay", "html_url": "https://github.com/yarnakaroesay", "followers_url": "https://api.github.com/users/yarnakaroesay/followers", "following_url": "https://api.github.com/users/yarnakaroesay/following{/other_user}", "gists_url": "https://api.github.com/users/yarnakaroesay/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarnakaroesay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarnakaroesay/subscriptions", "organizations_url": "https://api.github.com/users/yarnakaroesay/orgs", "repos_url": "https://api.github.com/users/yarnakaroesay/repos", "events_url": "https://api.github.com/users/yarnakaroesay/events{/privacy}", "received_events_url": "https://api.github.com/users/yarnakaroesay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T14:15:46Z", "updated_at": "2020-06-08T14:23:48Z", "closed_at": "2020-06-08T14:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my code\r\n\r\nclass Finance(models.Model):\r\ninvoiceNumber = models.IntegerField(blank=False, null=False, \r\nprimary_key=True)\r\nstudent = models.CharField(max_length=50, blank=False, null=False)\r\nrollGroup = models.CharField(max_length=50, blank=False, null=False)\r\ninvoiceTo = models.CharField(max_length=50, blank=False, null=False)\r\ndob = models.CharField(max_length=50, null=True)\r\ngender = models.CharField(max_length=50, blank=False, null=False)\r\nstatus = models.CharField(max_length=50, blank=False, null=False)\r\nschedule = models.CharField(max_length=50,blank=False, null=False)\r\ntotalValue = models.CharField(max_length=50, blank=False, null=False)\r\nissueDate = models.CharField(max_length=50, null=True)\r\ndueDate = models.CharField(max_length=50, null=True)\r\ndatePaid = models.CharField(max_length=50, null=True)\r\namountPaid = models.CharField(max_length=50, null=True)\r\n\r\ndef __str__(self):\r\n    return self.invoiceNumber\r\nThis is my resource model\r\n\r\nclass FinanceResource(resources.ModelResource):\r\n\r\n    invoiceNumber = Field(attribute='invoiceNumber', column_name='Invoice \r\n    Number')\r\n    student = Field(attribute='student', column_name='Student')\r\n    rollGroup = Field(attribute='rollGroup', column_name='Roll Group')\r\n    invoiceTo = Field(attribute='invoiceTo', column_name='Invoice To')\r\n    dob = Field(attribute='dob', column_name='DOB')\r\n    gender = Field(attribute='gender', column_name='Gender')\r\n    status = Field(attribute='status', column_name='Status')\r\n    schedule = Field(attribute='schedule', column_name='Schedule')\r\n    totalValue = Field(attribute='totalValue', column_name='Total             \r\n    Value(PKR \r\n    \u20a8)')\r\n    issueDate = Field(attribute='issueDate', column_name='Issue Date')\r\n    dueDate = Field(attribute='dueDate', column_name='Due Date')\r\n    datePaid = Field(attribute='datePaid', column_name='Date Paid')\r\n    amountPaid = Field(attribute='amountPaid', column_name='Amount Paid     \r\n    (PKR \r\n    \u20a8)')\r\n\r\nclass Meta:\r\n    model = Finance\r\n\r\nimport_id_fields = ('id',)\r\nexport_order = ('id', 'invoiceNumber', 'student', 'rollGroup', \r\n'invoiceTo', 'dob', 'gender', 'status', 'schedule',\r\n                'totalValue', 'issueDate', 'dueDate', 'datePaid', \r\n'amountPaid')\r\n\r\nskip_unchanged = True\r\nreport_skipped = True\r\n\r\nAnd this is the error\r\n\r\nLine number: 1 - 'id'\r\n2, styles, harry, Spring 2020, Family, , M, Pending, First Installment, 57000, , 10/06/2020, , 0\r\nTraceback (most recent call last):\r\nFile \"C:\\Users\\long play computers\\PycharmProjects\\DotsPrototype\\venv\\lib\\site-packages\\import_export\\resources.py\", line 522, in import_row\r\ninstance, new = self.get_or_init_instance(instance_loader, row)\r\nFile \"C:\\Users\\long play computers\\PycharmProjects\\DotsPrototype\\venv\\lib\\site-packages\\import_export\\resources.py\", line 292, in get_or_init_instance\r\ninstance = self.get_instance(instance_loader, row)\r\nFile \"C:\\Users\\long play computers\\PycharmProjects\\DotsPrototype\\venv\\lib\\site-packages\\import_export\\resources.py\", line 281, in get_instance\r\nself.fields[f] for f in self.get_import_id_fields()\r\nFile \"C:\\Users\\long play computers\\PycharmProjects\\DotsPrototype\\venv\\lib\\site-packages\\import_export\\resources.py\", line 281, in <listcomp>\r\nself.fields[f] for f in self.get_import_id_fields()\r\nKeyError: 'id'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1143", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1143/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1143/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1143/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1143", "id": 630331680, "node_id": "MDU6SXNzdWU2MzAzMzE2ODA=", "number": 1143, "title": "Missing Portuguese localizations", "user": {"login": "ExarchD", "id": 10770971, "node_id": "MDQ6VXNlcjEwNzcwOTcx", "avatar_url": "https://avatars0.githubusercontent.com/u/10770971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExarchD", "html_url": "https://github.com/ExarchD", "followers_url": "https://api.github.com/users/ExarchD/followers", "following_url": "https://api.github.com/users/ExarchD/following{/other_user}", "gists_url": "https://api.github.com/users/ExarchD/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExarchD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExarchD/subscriptions", "organizations_url": "https://api.github.com/users/ExarchD/orgs", "repos_url": "https://api.github.com/users/ExarchD/repos", "events_url": "https://api.github.com/users/ExarchD/events{/privacy}", "received_events_url": "https://api.github.com/users/ExarchD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383045, "node_id": "MDU6TGFiZWwxOTM4MzA0NQ==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-03T21:06:49Z", "updated_at": "2020-06-07T07:12:54Z", "closed_at": "2020-06-07T07:12:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that a few of the portuguese translations weren't happening. Here's one example:\r\n\"Some rows failed to validate\"\r\n\r\nThese entries are absent from the PO files. I'm happy to add them, but I've never done any work with Lokalize, etc. I could manually do it in VIM and submit a pull request if that's alright. I'm also not sure where to find a comprehensive list of missing translations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1140", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1140/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1140/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1140/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1140", "id": 621204527, "node_id": "MDU6SXNzdWU2MjEyMDQ1Mjc=", "number": 1140, "title": " How change the coloumn names in the export file django import export", "user": {"login": "yarnakaroesay", "id": 65582734, "node_id": "MDQ6VXNlcjY1NTgyNzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/65582734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarnakaroesay", "html_url": "https://github.com/yarnakaroesay", "followers_url": "https://api.github.com/users/yarnakaroesay/followers", "following_url": "https://api.github.com/users/yarnakaroesay/following{/other_user}", "gists_url": "https://api.github.com/users/yarnakaroesay/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarnakaroesay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarnakaroesay/subscriptions", "organizations_url": "https://api.github.com/users/yarnakaroesay/orgs", "repos_url": "https://api.github.com/users/yarnakaroesay/repos", "events_url": "https://api.github.com/users/yarnakaroesay/events{/privacy}", "received_events_url": "https://api.github.com/users/yarnakaroesay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-19T18:46:38Z", "updated_at": "2020-05-20T07:42:51Z", "closed_at": "2020-05-20T07:42:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to remove the spaces between the headers and to change the coloumn name altogether in the export file. Like,\r\n 'First Name' to 'firstname'\r\n'Surname' to 'lastname'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1139", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1139/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1139/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1139/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1139", "id": 620843681, "node_id": "MDU6SXNzdWU2MjA4NDM2ODE=", "number": 1139, "title": "Urgent Help: Trying to Import data from two sheets in a XLSX file to two different models - Not able to lead the Data", "user": {"login": "REMALAMANOJ", "id": 64499958, "node_id": "MDQ6VXNlcjY0NDk5OTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/64499958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/REMALAMANOJ", "html_url": "https://github.com/REMALAMANOJ", "followers_url": "https://api.github.com/users/REMALAMANOJ/followers", "following_url": "https://api.github.com/users/REMALAMANOJ/following{/other_user}", "gists_url": "https://api.github.com/users/REMALAMANOJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/REMALAMANOJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/REMALAMANOJ/subscriptions", "organizations_url": "https://api.github.com/users/REMALAMANOJ/orgs", "repos_url": "https://api.github.com/users/REMALAMANOJ/repos", "events_url": "https://api.github.com/users/REMALAMANOJ/events{/privacy}", "received_events_url": "https://api.github.com/users/REMALAMANOJ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-19T09:58:43Z", "updated_at": "2020-06-02T07:41:26Z", "closed_at": "2020-05-19T10:54:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Models I have Used:(Foreign Key) \r\n-------------------------------\r\nclass Supplier(models.Model):\r\n    Supplier_Number = models.IntegerField(unique=True)\r\n    Supplier_Name = models.CharField(max_length=150)\r\n    Supplier_Contracting_Entity =  models.CharField(max_length=150)\r\n    Applicable_Brands =  models.CharField(max_length=150)\r\n    Currency_To_Be_Paid =  models.CharField(max_length=3)\r\n    Other_Remarks =  models.CharField(max_length=150)\r\n    Term =  models.CharField(max_length=15)\r\n    Notes = models.CharField(max_length=150)\r\n    Fee_Calculation_Basis = models.CharField(max_length=25)\r\n\r\n    def __str__(self):\r\n        return self.Supplier_Name\r\n\r\nclass Tax_Vat(models.Model):\r\n    Supplier = models.ForeignKey(Supplier, on_delete=models.CASCADE)\r\n    #Supplier_Number = models.IntegerField()\r\n    #-- Above will store the Supplier ID, which is generated automatically\r\n    COUNTRY =models.CharField(max_length=25)\r\n    DEDUCTION_TYPE =models.CharField(max_length=5)\r\n    NGR_FLAG =models.CharField(max_length=5)\r\n    TAX_VAT_RATE = models.FloatField()\r\n\r\n    def __str__(self):\r\n        return self.COUNTRY\r\n\r\nView.py\r\n----------------\r\n\r\nclass UploadFileForm(forms.Form):\r\n    file = forms.FileField()\r\n\r\ndef sup_import(request):\r\n    if request.method == \"POST\":\r\n        form = UploadFileForm(request.POST,request.FILES)\r\n\r\n        def tax_func(row):\r\n            q = Supplier.objects.filter(Supplier_Number=row[0])[0]\r\n            row[0] = q\r\n            return row\r\n        #if form.is_valid():\r\n        request.FILES['myfile'].save_book_to_database(\r\n                models=[Supplier, Tax_Vat],\r\n                initializers=[None, tax_func],\r\n                mapdicts=[\r\n                            {   \"Supplier_Number\": \"Supplier_Number\",\r\n                                \"Supplier_Name\": \"Supplier_Name\",\r\n                                \"Supplier_Contracting_Entity\":\"Supplier_Contracting_Entity\",\r\n                                \"Applicable_Brands\":\"Applicable_Brands\",\r\n                                \"Currency_To_Be_Paid\":\"Currency_To_Be_Paid\",\r\n                                \"Other_Remarks\":\"Other_Remarks\",\r\n                                \"Term\":\"Term\",\r\n                                \"Notes\":\"Notes\",\r\n                                \"Fee_Calculation_Basis\":\"Fee_Calculation_Basis\"\r\n                            },\r\n                            {\r\n                                \"Supplier_Number\":\"Supplier\",\r\n                                \"COUNTRY\":\"COUNTRY\",\r\n                                \"DEDUCTION_TYPE\":\"DEDUCTION_TYPE\",\r\n                                \"NGR_FLAG\":\"NGR_FLAG\",\r\n                                \"TAX_VAT_RATE\":\"TAX_VAT_RATE\"\r\n\r\n                            }\r\n                        ]\r\n            )\r\n        return redirect('Royalty_upload.html')\r\n       # else:\r\n            #return HttpResponseBadRequest()\r\n    else:\r\n        form = UploadFileForm()\r\n    return render(\r\n        request,\r\n        'Royalty_upload.html',\r\n        {\r\n            'form': form,\r\n            'title': 'Import excel data into database example',\r\n            'header': 'Please upload Royalty_Input_Import_Data_All.xlsx:'\r\n        })\r\n\r\n-----------------\r\nError:\r\n-----------------\r\nException at /royalty_supplier\r\nSheet: Supplier does not match any given models.Please be aware of case sensitivity.\r\nRequest Method: | POST\r\nRequest URL: | http://127.0.0.1:8000/royalty_supplier\r\nDjango Version: | 3.0.3\r\nException Type: | Exception\r\nException Value: | Sheet: Supplier does not match any given models.Please be aware of case sensitivity\r\nException Location: | C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel_io\\database\\importers\\django.py in create_sheet, line 85\r\n\r\n\r\nEnvironment:\r\n\r\n\r\nRequest Method: POST\r\nRequest URL: http://127.0.0.1:8000/royalty_supplier\r\n\r\nDjango Version: 3.0.3\r\nPython Version: 3.7.1\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'import_export',\r\n 'RECON.apps.ReconConfig']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\r\n\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"C:\\Users\\manoj.remala\\PycharmProjects\\MANOJ_IVY\\IREC_WEB\\RECON\\views.py\", line 121, in sup_import\r\n    \"TAX_VAT_RATE\":\"TAX_VAT_RATE\"\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\django_excel\\__init__.py\", line 63, in save_book_to_database\r\n    pe.save_book_as(**params)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel\\core.py\", line 112, in save_book_as\r\n    return sources.save_book(book, **dest_keywords)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel\\internal\\core.py\", line 56, in save_book\r\n    return _save_any(a_source, book)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel\\internal\\core.py\", line 60, in _save_any\r\n    a_source.write_data(instance)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel\\plugins\\sources\\db_sources.py\", line 111, in write_data\r\n    **self._keywords\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel\\plugins\\renderers\\django.py\", line 75, in render_book_to_stream\r\n    **keywords\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel_io\\io.py\", line 131, in save_data\r\n    **keywords\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel_io\\io.py\", line 148, in store_data\r\n    writer.write(data)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel_io\\book.py\", line 218, in write\r\n    sheet_writer = self.create_sheet(sheet_name)\r\n  File \"C:\\Users\\manoj.remala\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyexcel_io\\database\\importers\\django.py\", line 85, in create_sheet\r\n    + \"Please be aware of case sensitivity.\"\r\n\r\nException Type: Exception at /royalty_supplier\r\nException Value: Sheet: Supplier does not match any given models.Please be aware of case sensitivity.\r\n-- | --\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1138", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1138/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1138/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1138/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1138", "id": 620654801, "node_id": "MDU6SXNzdWU2MjA2NTQ4MDE=", "number": 1138, "title": "Empty rows when import in admin Django import export", "user": {"login": "yarnakaroesay", "id": 65582734, "node_id": "MDQ6VXNlcjY1NTgyNzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/65582734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarnakaroesay", "html_url": "https://github.com/yarnakaroesay", "followers_url": "https://api.github.com/users/yarnakaroesay/followers", "following_url": "https://api.github.com/users/yarnakaroesay/following{/other_user}", "gists_url": "https://api.github.com/users/yarnakaroesay/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarnakaroesay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarnakaroesay/subscriptions", "organizations_url": "https://api.github.com/users/yarnakaroesay/orgs", "repos_url": "https://api.github.com/users/yarnakaroesay/repos", "events_url": "https://api.github.com/users/yarnakaroesay/events{/privacy}", "received_events_url": "https://api.github.com/users/yarnakaroesay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T03:47:57Z", "updated_at": "2020-05-19T11:53:58Z", "closed_at": "2020-05-19T11:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried all kinds of documenation but i don't know why isn't the data not being shown or stored when i try to import csv via admin.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1137", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1137/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1137/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1137/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1137", "id": 616815085, "node_id": "MDU6SXNzdWU2MTY4MTUwODU=", "number": 1137, "title": "Double insert of rows while importing", "user": {"login": "nishanthvijayan", "id": 7537349, "node_id": "MDQ6VXNlcjc1MzczNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7537349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nishanthvijayan", "html_url": "https://github.com/nishanthvijayan", "followers_url": "https://api.github.com/users/nishanthvijayan/followers", "following_url": "https://api.github.com/users/nishanthvijayan/following{/other_user}", "gists_url": "https://api.github.com/users/nishanthvijayan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nishanthvijayan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nishanthvijayan/subscriptions", "organizations_url": "https://api.github.com/users/nishanthvijayan/orgs", "repos_url": "https://api.github.com/users/nishanthvijayan/repos", "events_url": "https://api.github.com/users/nishanthvijayan/events{/privacy}", "received_events_url": "https://api.github.com/users/nishanthvijayan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1263761601, "node_id": "MDU6TGFiZWwxMjYzNzYxNjAx", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/solution%20included", "name": "solution included", "color": "e7f99f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-05-12T17:02:39Z", "updated_at": "2020-06-08T01:03:34Z", "closed_at": "2020-05-19T09:24:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When importing a CSV via the admin interface, the rows in the sheet are being imported twice. Once when loading preview and once when confirming import. Importing with the `id` column left empty. I've used the library before and I've never faced this issue before. Super confused!\r\n\r\nDjango==2.1.3\r\ndjango-import-export==2.1.0\r\n\r\n```\r\nclass ReviewsResource(resources.ModelResource):\r\n    class Meta:\r\n        model = Review\r\n        fields = ('id',  the remaining fields in the model...)\r\n```\r\n\r\n```\r\nclass Review(models.Model):\r\n    .. few field definitions\r\n\r\n    class Meta:\r\n        managed = False\r\n        db_table = 'review'\r\n\r\n    def __str__(self):\r\n        return str(self.id)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1130", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1130/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1130/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1130/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1130", "id": 613503139, "node_id": "MDU6SXNzdWU2MTM1MDMxMzk=", "number": 1130, "title": "Repeated ID in imported file does not cause error", "user": {"login": "zehawki", "id": 8095144, "node_id": "MDQ6VXNlcjgwOTUxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8095144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zehawki", "html_url": "https://github.com/zehawki", "followers_url": "https://api.github.com/users/zehawki/followers", "following_url": "https://api.github.com/users/zehawki/following{/other_user}", "gists_url": "https://api.github.com/users/zehawki/gists{/gist_id}", "starred_url": "https://api.github.com/users/zehawki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zehawki/subscriptions", "organizations_url": "https://api.github.com/users/zehawki/orgs", "repos_url": "https://api.github.com/users/zehawki/repos", "events_url": "https://api.github.com/users/zehawki/events{/privacy}", "received_events_url": "https://api.github.com/users/zehawki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-06T17:54:12Z", "updated_at": "2020-05-08T08:40:10Z", "closed_at": "2020-05-08T08:40:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just to experiment, I created an XL with a repeated ID to see whether the import process would throw an error. My DB table already contains **IDs upto 4211**, and the table I created for import contained many rows with IDs as follows:\r\n\r\nid\r\n____\r\n4210\r\n4209\r\n4210\r\n4211\r\n4212\r\n4213\r\n4214\r\n...\r\n\r\nWhen running the import, the preview shows that the first row with ID 4210 is an UPDATE, then 4209 is an UPDATE (this is fine), then the _next_ 4210 is also UPDATE and then 4211 is an UPDATE (this is fine) and 4212 onwards is NEW (this is fine).\r\n\r\nI would expect that since each is an atomic operation, at the end of the import, the DB record with ID 4210 will have contents of the 2nd 4210 in the XL sheet. Right?\r\n\r\nNow, why is this not flagged off as an import error?\r\n\r\nPS: I hope I've been able to explain the above clearly!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1129", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1129/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1129/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1129/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1129", "id": 613177655, "node_id": "MDU6SXNzdWU2MTMxNzc2NTU=", "number": 1129, "title": "how to avoid duplicate records when import data", "user": {"login": "WWY507", "id": 38350934, "node_id": "MDQ6VXNlcjM4MzUwOTM0", "avatar_url": "https://avatars0.githubusercontent.com/u/38350934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WWY507", "html_url": "https://github.com/WWY507", "followers_url": "https://api.github.com/users/WWY507/followers", "following_url": "https://api.github.com/users/WWY507/following{/other_user}", "gists_url": "https://api.github.com/users/WWY507/gists{/gist_id}", "starred_url": "https://api.github.com/users/WWY507/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WWY507/subscriptions", "organizations_url": "https://api.github.com/users/WWY507/orgs", "repos_url": "https://api.github.com/users/WWY507/repos", "events_url": "https://api.github.com/users/WWY507/events{/privacy}", "received_events_url": "https://api.github.com/users/WWY507/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-06T09:27:59Z", "updated_at": "2020-05-06T10:10:52Z", "closed_at": "2020-05-06T10:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "python3.6.8\r\ndjango-import-export==2.1.0\r\n\r\n**models.py**\r\nclass User(models.Model):\r\n    name = models.CharField(max_length=32, null=False, default='') \r\n    password = models.CharField(max_length=512, null=False, default='')\r\n    age = models.IntegerField(null=False, default=0)\r\n    tel = models.CharField(max_length=32, null=False, default='')\r\n    sex = models.BooleanField(null=False, default=True)\r\n    create_time = models.DateTimeField(null=False)\r\n    addr = models.CharField(max_length=120, null=False, default='')\r\n    email_addr = models.CharField(max_length=32, null=False, default='')\r\n\r\n**resources.py**\r\nfrom import_export import resources\r\nfrom .models import User\r\nclass UserResource(resources.ModelResource):\r\n    class Meta:\r\n        model = User\r\n\r\n\r\n**views.py**\r\ndef import1(request):\r\n    if request.method == 'POST':\r\n        file_format = request.POST['file-format']\r\n        user_resource = UserResource()\r\n        dataset = Dataset()\r\n        new_users = request.FILES['importData']\r\n        if file_format == 'JSON':\r\n            imported_data = dataset.load(new_users.read().decode('utf-8'), format='json')\r\n            result = user_resource.import_data(dataset, dry_run=True)\r\n        if not result.has_errors():\r\n            user_resource.import_data(dataset, dry_run=False)\r\n    return render(request, 'user/import.html', locals())\r\n\r\nwith json format data:\r\n[{\"name\": \"test\", \"password\": \"123\", \"age\": 28, \"tel\": \"\", \"sex\": \"1\", \"create_time\": \"2020-5-6 10:05\", \"addr\": \"\", \"email_addr\": \"test@example.com.cn\"}]\r\n\r\n**i import it twice without errors, and get 2 same records,\r\nhow to avoid duplicate records when import data, anyone have good ideas!!! thank you**\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1125", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1125/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1125/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1125/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1125", "id": 613092539, "node_id": "MDU6SXNzdWU2MTMwOTI1Mzk=", "number": 1125, "title": "Demo not working out-of-the-box", "user": {"login": "fabaff", "id": 116184, "node_id": "MDQ6VXNlcjExNjE4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/116184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabaff", "html_url": "https://github.com/fabaff", "followers_url": "https://api.github.com/users/fabaff/followers", "following_url": "https://api.github.com/users/fabaff/following{/other_user}", "gists_url": "https://api.github.com/users/fabaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabaff/subscriptions", "organizations_url": "https://api.github.com/users/fabaff/orgs", "repos_url": "https://api.github.com/users/fabaff/repos", "events_url": "https://api.github.com/users/fabaff/events{/privacy}", "received_events_url": "https://api.github.com/users/fabaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-06T06:55:26Z", "updated_at": "2020-05-28T07:26:14Z", "closed_at": "2020-05-28T07:26:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like that there is an issue with the migrations for the demo. With the latest checkout I get:\r\n\r\n```bash\r\n$ python3 manage.py migrate\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 12, in <module>\r\n    execute_from_command_line(sys.argv)\r\n[....]\r\nexport/tests/core/migrations/0004_bookwithchapters.py\", line 17, in <module>\r\n    class Migration(migrations.Migration):\r\n  File \"/home/demo/Documents/repos/django-import-export/tests/core/migrations/0004_bookwithchapters.py\", line 32, in Migration\r\n    ('data', data_field)\r\nNameError: name 'data_field' is not defined\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1124", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1124/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1124/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1124/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1124", "id": 612621185, "node_id": "MDU6SXNzdWU2MTI2MjExODU=", "number": 1124, "title": "cant import xls with error OSError: File contains no valid workbook part", "user": {"login": "WWY507", "id": 38350934, "node_id": "MDQ6VXNlcjM4MzUwOTM0", "avatar_url": "https://avatars0.githubusercontent.com/u/38350934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WWY507", "html_url": "https://github.com/WWY507", "followers_url": "https://api.github.com/users/WWY507/followers", "following_url": "https://api.github.com/users/WWY507/following{/other_user}", "gists_url": "https://api.github.com/users/WWY507/gists{/gist_id}", "starred_url": "https://api.github.com/users/WWY507/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WWY507/subscriptions", "organizations_url": "https://api.github.com/users/WWY507/orgs", "repos_url": "https://api.github.com/users/WWY507/repos", "events_url": "https://api.github.com/users/WWY507/events{/privacy}", "received_events_url": "https://api.github.com/users/WWY507/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T13:53:47Z", "updated_at": "2020-05-06T09:14:44Z", "closed_at": "2020-05-06T09:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-import-export==2.1.0\r\npython3.6.8\r\n\r\nwhen i upload xls, with  error OSError: File contains no valid workbook part\r\nanyone help with solve it, thank you\r\n\r\ndjango views.py\r\n> \r\ndef import_xls(request):\r\n    if request.method == 'POST':\r\n        user_resource = UserResource()\r\n        dataset = Dataset()\r\n        new_users = request.FILES['myfile']\r\n        imported_data = dataset.load(new_users.read())\r\n        result = user_resource.import_data(dataset, dry_run=True)\r\n        if not result.has_errors():\r\n            user_resource.import_data(dataset, dry_run=False)\r\n    return render(request,'user/index.html')\r\n> \r\n\r\n\r\nhtml\r\n\r\n> \r\n\r\n```\r\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"{% url 'user:import_xls' %}\">\r\n {% csrf_token %}\r\n<input type=\"file\" name=\"myfile\">\r\n<button type=\"submit\">Upload</button>\r\n</form>\r\n```\r\n\r\n> \r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1120", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1120/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1120/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1120/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1120", "id": 609062557, "node_id": "MDU6SXNzdWU2MDkwNjI1NTc=", "number": 1120, "title": "Django Import Exports fails for MongoDB", "user": {"login": "sv8083", "id": 20393902, "node_id": "MDQ6VXNlcjIwMzkzOTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/20393902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sv8083", "html_url": "https://github.com/sv8083", "followers_url": "https://api.github.com/users/sv8083/followers", "following_url": "https://api.github.com/users/sv8083/following{/other_user}", "gists_url": "https://api.github.com/users/sv8083/gists{/gist_id}", "starred_url": "https://api.github.com/users/sv8083/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sv8083/subscriptions", "organizations_url": "https://api.github.com/users/sv8083/orgs", "repos_url": "https://api.github.com/users/sv8083/repos", "events_url": "https://api.github.com/users/sv8083/events{/privacy}", "received_events_url": "https://api.github.com/users/sv8083/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T13:34:11Z", "updated_at": "2020-04-29T14:31:30Z", "closed_at": "2020-04-29T14:31:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "import-export is working for Mysql but fails for MongoDb.\r\n\r\nDoes this package supports Mongo?\r\nor is there any additional requirement?\r\n\r\nThe error is same as in issue:\r\nhttps://github.com/django-import-export/django-import-export/issues/811", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1118", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1118/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1118/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1118", "id": 608258664, "node_id": "MDU6SXNzdWU2MDgyNTg2NjQ=", "number": 1118, "title": "export too big so that arise time_out error", "user": {"login": "Yebing2018", "id": 43950313, "node_id": "MDQ6VXNlcjQzOTUwMzEz", "avatar_url": "https://avatars3.githubusercontent.com/u/43950313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yebing2018", "html_url": "https://github.com/Yebing2018", "followers_url": "https://api.github.com/users/Yebing2018/followers", "following_url": "https://api.github.com/users/Yebing2018/following{/other_user}", "gists_url": "https://api.github.com/users/Yebing2018/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yebing2018/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yebing2018/subscriptions", "organizations_url": "https://api.github.com/users/Yebing2018/orgs", "repos_url": "https://api.github.com/users/Yebing2018/repos", "events_url": "https://api.github.com/users/Yebing2018/events{/privacy}", "received_events_url": "https://api.github.com/users/Yebing2018/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T11:56:04Z", "updated_at": "2020-05-04T16:00:23Z", "closed_at": "2020-05-04T16:00:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1112", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1112/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1112/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1112/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1112", "id": 605472030, "node_id": "MDU6SXNzdWU2MDU0NzIwMzA=", "number": 1112, "title": "Duration fields with value timedelta(0) are exported as blank", "user": {"login": "cardinam", "id": 1840243, "node_id": "MDQ6VXNlcjE4NDAyNDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1840243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cardinam", "html_url": "https://github.com/cardinam", "followers_url": "https://api.github.com/users/cardinam/followers", "following_url": "https://api.github.com/users/cardinam/following{/other_user}", "gists_url": "https://api.github.com/users/cardinam/gists{/gist_id}", "starred_url": "https://api.github.com/users/cardinam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cardinam/subscriptions", "organizations_url": "https://api.github.com/users/cardinam/orgs", "repos_url": "https://api.github.com/users/cardinam/repos", "events_url": "https://api.github.com/users/cardinam/events{/privacy}", "received_events_url": "https://api.github.com/users/cardinam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-23T11:55:30Z", "updated_at": "2020-04-27T06:43:24Z", "closed_at": "2020-04-27T06:43:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When exporting an object with a `DurationField` that has a value equivalent to `timedelta(0)`, the exported value is blank (\"\"), because of the implementation of the `DurationWidget`\r\n\r\n```python\r\n   def render(self, value, obj=None):\r\n        if not value:\r\n            return \"\"\r\n        return str(value)\r\n```\r\n\r\nthat should probably be\r\n\r\n```python\r\n   def render(self, value, obj=None):\r\n        if value is None:\r\n            return \"\"\r\n        return str(value)\r\n```\r\n\r\nThis causes issues when re-importing exported data if the DurationField is not nullable.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1111", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1111/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1111/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1111/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1111", "id": 604412288, "node_id": "MDU6SXNzdWU2MDQ0MTIyODg=", "number": 1111, "title": "Overridden admin changelist_view, making the import_export import and export button invisible", "user": {"login": "Lucius-chen", "id": 38775056, "node_id": "MDQ6VXNlcjM4Nzc1MDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/38775056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucius-chen", "html_url": "https://github.com/Lucius-chen", "followers_url": "https://api.github.com/users/Lucius-chen/followers", "following_url": "https://api.github.com/users/Lucius-chen/following{/other_user}", "gists_url": "https://api.github.com/users/Lucius-chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucius-chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucius-chen/subscriptions", "organizations_url": "https://api.github.com/users/Lucius-chen/orgs", "repos_url": "https://api.github.com/users/Lucius-chen/repos", "events_url": "https://api.github.com/users/Lucius-chen/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucius-chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T02:48:50Z", "updated_at": "2020-05-04T16:02:56Z", "closed_at": "2020-05-04T16:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "environment\uff1a\r\ndjango-import-export     2.0\r\nDjango                   2.2.7\r\n\r\n import and export button invisible\uff1a\r\n```python\r\n@admin.register(VCARD3)\r\nclass Admin(ImportExportActionModelAdmin, ImportExportModelAdmin):\r\n def changelist_view(self, request, extra_context=None):\r\n        super().change_view(self, request, extra_context=None)\r\n        \"\"\"\r\n        The 'change list' admin view for this model.\r\n        \"\"\"\r\n        from django.contrib.admin.views.main import ERROR_FLAG\r\n        opts = self.model._meta\r\n        app_label = opts.app_label\r\n        if not self.has_view_or_change_permission(request):\r\n            raise PermissionDenied\r\n\r\n        try:\r\n            cl = self.get_changelist_instance(request)\r\n        except Exception:\r\n            # Wacky lookup parameters were given, so redirect to the main\r\n            # changelist page, without parameters, and pass an 'invalid=1'\r\n            # parameter via the query string. If wacky parameters were given\r\n            # and the 'invalid=1' parameter was already in the query string,\r\n            # something is screwed up with the database, so display an error\r\n            # page.\r\n            if ERROR_FLAG in request.GET:\r\n                return SimpleTemplateResponse('admin/invalid_setup.html', {\r\n                    'title': _('Database error'),\r\n                })\r\n            return HttpResponseRedirect(request.path + '?' + ERROR_FLAG + '=1')\r\n\r\n        # If the request was POSTed, this might be a bulk action or a bulk\r\n        # edit. Try to look up an action or confirmation first, but if this\r\n        # isn't an action the POST will fall through to the bulk edit check,\r\n        # below.\r\n        action_failed = False\r\n        selected = request.POST.getlist(helpers.ACTION_CHECKBOX_NAME)\r\n\r\n        actions = self.get_actions(request)\r\n        print(request.POST,159)\r\n        try:\r\n            if (actions and request.POST['action']=='convert_button'):\r\n                response = self.response_action(request, queryset=VCARD3.objects.all())\r\n                if response:\r\n                    return response\r\n                else:\r\n                    action_failed = True\r\n        except:\r\n            # msg = _(\"Items must be selected in order to perform \"\r\n            #         \"actions on them. No items have been changed.\")\r\n            # self.message_user(request, msg, messages.WARNING)\r\n            # action_failed = True\r\n            pass\r\n......\r\n```\r\nThe reason I analyzed is that the extra_context changed to None, and the following code needs to be added to the overridden method,can solve this problem:\r\n```python\r\n        if extra_context is None:\r\n            extra_context = {}\r\n        extra_context['has_import_permission'] = self.has_import_permission(request)\r\n        extra_context['has_export_permission'] = self.has_export_permission(request)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1106", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1106/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1106/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1106/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1106", "id": 600347308, "node_id": "MDU6SXNzdWU2MDAzNDczMDg=", "number": 1106, "title": "import feature is not working in django", "user": {"login": "Panchalkishan", "id": 38061833, "node_id": "MDQ6VXNlcjM4MDYxODMz", "avatar_url": "https://avatars0.githubusercontent.com/u/38061833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panchalkishan", "html_url": "https://github.com/Panchalkishan", "followers_url": "https://api.github.com/users/Panchalkishan/followers", "following_url": "https://api.github.com/users/Panchalkishan/following{/other_user}", "gists_url": "https://api.github.com/users/Panchalkishan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panchalkishan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panchalkishan/subscriptions", "organizations_url": "https://api.github.com/users/Panchalkishan/orgs", "repos_url": "https://api.github.com/users/Panchalkishan/repos", "events_url": "https://api.github.com/users/Panchalkishan/events{/privacy}", "received_events_url": "https://api.github.com/users/Panchalkishan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1263761601, "node_id": "MDU6TGFiZWwxMjYzNzYxNjAx", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/solution%20included", "name": "solution included", "color": "e7f99f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T14:37:17Z", "updated_at": "2020-05-30T16:53:21Z", "closed_at": "2020-05-30T13:24:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI Team,\r\n\r\ni use this py package for import export my contacts refer my snapshots as series of steps.\r\ninitial i have setup using pip\r\n> pip install django-import-export\r\n\r\nthan i have added \r\n> 'import_export', in settings.py \r\n\r\nnext imported this in modal file\r\n![image](https://user-images.githubusercontent.com/38061833/79348659-e8eb4500-7f52-11ea-9f33-7c31a9ee594f.png)\r\n\r\nall contact has been successfully exportad in csv file but it does not import all contacts from that same file and store into database. it shows me below message for each and every recored\r\n![image](https://user-images.githubusercontent.com/38061833/79349663-1c7a9f00-7f54-11ea-844d-45b4b09e369e.png)\r\n \r\n\r\ncan anyone please suggest... what actually causing this issue withing this only import feature package. earlier it was working fine..i dont know version number. so kindly check and confirm.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1104", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1104/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1104/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1104/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1104", "id": 594139250, "node_id": "MDU6SXNzdWU1OTQxMzkyNTA=", "number": 1104, "title": "Importing and Associating a User PK", "user": {"login": "macmichael01", "id": 128222, "node_id": "MDQ6VXNlcjEyODIyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/128222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macmichael01", "html_url": "https://github.com/macmichael01", "followers_url": "https://api.github.com/users/macmichael01/followers", "following_url": "https://api.github.com/users/macmichael01/following{/other_user}", "gists_url": "https://api.github.com/users/macmichael01/gists{/gist_id}", "starred_url": "https://api.github.com/users/macmichael01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macmichael01/subscriptions", "organizations_url": "https://api.github.com/users/macmichael01/orgs", "repos_url": "https://api.github.com/users/macmichael01/repos", "events_url": "https://api.github.com/users/macmichael01/events{/privacy}", "received_events_url": "https://api.github.com/users/macmichael01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-04T22:38:24Z", "updated_at": "2020-04-06T20:55:50Z", "closed_at": "2020-04-06T20:55:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I import data such as `first_name, last_name, email` ensuring that a user FK is associated with CSV row being imported.  The user foreign key should be associated with the current user logged in rather than the id being a value in the CSV file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1102", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1102/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1102/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1102/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1102", "id": 588861168, "node_id": "MDU6SXNzdWU1ODg4NjExNjg=", "number": 1102, "title": "export action not showing on model admin with custom action", "user": {"login": "DanSantoDomingo", "id": 46666062, "node_id": "MDQ6VXNlcjQ2NjY2MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/46666062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanSantoDomingo", "html_url": "https://github.com/DanSantoDomingo", "followers_url": "https://api.github.com/users/DanSantoDomingo/followers", "following_url": "https://api.github.com/users/DanSantoDomingo/following{/other_user}", "gists_url": "https://api.github.com/users/DanSantoDomingo/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanSantoDomingo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanSantoDomingo/subscriptions", "organizations_url": "https://api.github.com/users/DanSantoDomingo/orgs", "repos_url": "https://api.github.com/users/DanSantoDomingo/repos", "events_url": "https://api.github.com/users/DanSantoDomingo/events{/privacy}", "received_events_url": "https://api.github.com/users/DanSantoDomingo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-27T03:29:47Z", "updated_at": "2020-08-20T12:29:38Z", "closed_at": "2020-03-27T05:05:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Its working fine with other models without custom action", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1096", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1096/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1096/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1096/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1096", "id": 578547029, "node_id": "MDU6SXNzdWU1Nzg1NDcwMjk=", "number": 1096, "title": "Admin import action - TypeError: 'str' object is not callable", "user": {"login": "aerospatiale", "id": 7073973, "node_id": "MDQ6VXNlcjcwNzM5NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7073973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aerospatiale", "html_url": "https://github.com/aerospatiale", "followers_url": "https://api.github.com/users/aerospatiale/followers", "following_url": "https://api.github.com/users/aerospatiale/following{/other_user}", "gists_url": "https://api.github.com/users/aerospatiale/gists{/gist_id}", "starred_url": "https://api.github.com/users/aerospatiale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aerospatiale/subscriptions", "organizations_url": "https://api.github.com/users/aerospatiale/orgs", "repos_url": "https://api.github.com/users/aerospatiale/repos", "events_url": "https://api.github.com/users/aerospatiale/events{/privacy}", "received_events_url": "https://api.github.com/users/aerospatiale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-10T12:33:27Z", "updated_at": "2020-03-10T21:51:59Z", "closed_at": "2020-03-10T21:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a fairly basic setup that appears to be failing on clicking the Import action from /admin. \r\n\r\nadmin.py:\r\n```\r\nfrom django.contrib import admin\r\nfrom import_export import resources\r\nfrom import_export.admin import ImportMixin\r\n\r\nclass MarketDataResource(resources.ModelResource):\r\n    class Meta:\r\n        model = MarketData\r\n\r\n\r\n@admin.register(MarketData)\r\nclass MarketDataAdmin(ImportMixin, admin.ModelAdmin):\r\n    resource_class = 'MarketDataResource'\r\n```\r\n\r\nmodels.py:\r\n```\r\nfrom django.db import models\r\n\r\nclass MarketData(models.model):\r\n\r\n    name = models.CharField('Market data stream name', max_length=100)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n```\r\n\r\n```\r\ndjango_1              | 172.22.0.1 - - [10/Mar/2020 12:29:03] \"GET /admin/users/marketdata/import/ HTTP/1.1\" 500 -\r\ndjango_1              | Traceback (most recent call last):\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/contrib/staticfiles/handlers.py\", line 65, in __call__\r\ndjango_1              |     return self.application(environ, start_response)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/wsgi.py\", line 141, in __call__\r\ndjango_1              |     response = self.get_response(request)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/base.py\", line 75, in get_response\r\ndjango_1              |     response = self._middleware_chain(request)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/exception.py\", line 36, in inner\r\ndjango_1              |     response = response_for_exception(request, exc)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\ndjango_1              |     response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\ndjango_1              |     return debug.technical_500_response(request, *exc_info)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\ndjango_1              |     six.reraise(exc_type, exc_value, tb)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/six.py\", line 702, in reraise\r\ndjango_1              |     raise value.with_traceback(tb)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/exception.py\", line 34, in inner\r\ndjango_1              |     response = get_response(request)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/base.py\", line 115, in _get_response\r\ndjango_1              |     response = self.process_exception_by_middleware(e, request)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/core/handlers/base.py\", line 113, in _get_response\r\ndjango_1              |     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\ndjango_1              |   File \"/usr/lib/python3.7/contextlib.py\", line 74, in inner\r\ndjango_1              |     return func(*args, **kwds)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/utils/decorators.py\", line 142, in _wrapped_view\r\ndjango_1              |     response = view_func(request, *args, **kwargs)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/views/decorators/cache.py\", line 44, in _wrapped_view_func\r\ndjango_1              |     response = view_func(request, *args, **kwargs)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/django/contrib/admin/sites.py\", line 223, in inner\r\ndjango_1              |     return view(request, *args, **kwargs)\r\ndjango_1              |   File \"/usr/local/lib/python3.7/dist-packages/import_export/admin.py\", line 327, in import_action\r\ndjango_1              |     resource = self.get_import_resource_class()(**res_kwargs)\r\ndjango_1              | TypeError: 'str' object is not callable\r\n```\r\n\r\nAnyone happen to have any clues on how to fix this by any chance?\r\n\r\nUsing version 2.0.2.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1093", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1093/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1093/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1093/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1093", "id": 577468675, "node_id": "MDU6SXNzdWU1Nzc0Njg2NzU=", "number": 1093, "title": "Fix simple typo: intitalized -> initialized", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-08T09:01:19Z", "updated_at": "2020-03-08T19:13:55Z", "closed_at": "2020-03-08T19:13:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Issue Type\n\n[x] Bug (Typo)\n\n# Steps to Replicate\n\n1. Examine docs/import_workflow.rst.\n2. Search for `intitalized`.\n\n# Expected Behaviour\n\n1. Should read `initialized`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1090", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1090/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1090/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1090/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1090", "id": 575387777, "node_id": "MDU6SXNzdWU1NzUzODc3Nzc=", "number": 1090, "title": "from_encoding does not work", "user": {"login": "HoshiYamazaki", "id": 21007545, "node_id": "MDQ6VXNlcjIxMDA3NTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/21007545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HoshiYamazaki", "html_url": "https://github.com/HoshiYamazaki", "followers_url": "https://api.github.com/users/HoshiYamazaki/followers", "following_url": "https://api.github.com/users/HoshiYamazaki/following{/other_user}", "gists_url": "https://api.github.com/users/HoshiYamazaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/HoshiYamazaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HoshiYamazaki/subscriptions", "organizations_url": "https://api.github.com/users/HoshiYamazaki/orgs", "repos_url": "https://api.github.com/users/HoshiYamazaki/repos", "events_url": "https://api.github.com/users/HoshiYamazaki/events{/privacy}", "received_events_url": "https://api.github.com/users/HoshiYamazaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-04T13:09:12Z", "updated_at": "2020-05-28T07:21:57Z", "closed_at": "2020-05-28T07:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get - ```Imported file has a wrong encoding: 'utf-8' codec can't decode byte 0xb9 in position 254: invalid start byte```.\r\n\r\nDespite using `from_encoding` set to `iso-8859-2`, `iso-8859-1`, `iso-8859`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1087", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1087/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1087/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1087/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1087", "id": 570609490, "node_id": "MDU6SXNzdWU1NzA2MDk0OTA=", "number": 1087, "title": "choices field how to import", "user": {"login": "wolong1997", "id": 43490801, "node_id": "MDQ6VXNlcjQzNDkwODAx", "avatar_url": "https://avatars0.githubusercontent.com/u/43490801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolong1997", "html_url": "https://github.com/wolong1997", "followers_url": "https://api.github.com/users/wolong1997/followers", "following_url": "https://api.github.com/users/wolong1997/following{/other_user}", "gists_url": "https://api.github.com/users/wolong1997/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolong1997/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolong1997/subscriptions", "organizations_url": "https://api.github.com/users/wolong1997/orgs", "repos_url": "https://api.github.com/users/wolong1997/repos", "events_url": "https://api.github.com/users/wolong1997/events{/privacy}", "received_events_url": "https://api.github.com/users/wolong1997/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-25T14:28:50Z", "updated_at": "2020-04-08T05:51:20Z", "closed_at": "2020-02-28T00:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "class MyModel(models.Model):\r\n       ATTR = (\r\n        (1, 'attr1'),\r\n        (2, 'attr2'),\r\n    )\r\n       attr = models.IntegerField(verbose_name=\"attr\", choices=ATTR, default=1)\r\n\r\nwhen import excel value  is attr1 , how translate to 1 save in database", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1085", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1085/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1085/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1085/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1085", "id": 569381718, "node_id": "MDU6SXNzdWU1NjkzODE3MTg=", "number": 1085, "title": "ForeignKeyWidget through a OneToOneField w/ self as input ", "user": {"login": "CarterGay", "id": 44192986, "node_id": "MDQ6VXNlcjQ0MTkyOTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/44192986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarterGay", "html_url": "https://github.com/CarterGay", "followers_url": "https://api.github.com/users/CarterGay/followers", "following_url": "https://api.github.com/users/CarterGay/following{/other_user}", "gists_url": "https://api.github.com/users/CarterGay/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarterGay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarterGay/subscriptions", "organizations_url": "https://api.github.com/users/CarterGay/orgs", "repos_url": "https://api.github.com/users/CarterGay/repos", "events_url": "https://api.github.com/users/CarterGay/events{/privacy}", "received_events_url": "https://api.github.com/users/CarterGay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-22T19:29:54Z", "updated_at": "2020-03-03T05:14:54Z", "closed_at": "2020-03-03T05:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "My model is based on a network connection:\r\n\r\n# models.py\r\nclass NetworkPort(models.Model):\r\n    label = models.ForeignKey(\r\n        NetworkPortLabel,\r\n        on_delete=models.PROTECT,\r\n    )\r\n    asset = models.ForeignKey(\r\n        Asset,\r\n        on_delete=models.CASCADE\r\n    )\r\n    connection = models.OneToOneField(\r\n        \"self\",\r\n        null=True,\r\n        on_delete=models.SET_NULL\r\n    )\r\n\r\n    class Meta:\r\n        unique_together = ['label', 'asset']\r\n\r\nHere's the NetworkPortResource:\r\n\r\n# resources.py\r\nclass NetworkPortResource(resources.ModelResource):\r\n\r\n    class SrcPortForeignKeyWidget(ForeignKeyWidget):\r\n        def clean(self, value, row):\r\n            my_asset = Asset.objects.get(hostname=row['src_hostname'])\r\n            return self.model.objects.get(\r\n                name__iexact=row['src_port'],\r\n                itmodel__vendor__iexact=my_asset.itmodel.vendor,\r\n                itmodel__model_number__iexact=my_asset.itmodel.model_number\r\n            )\r\n\r\n    class DestPortForeignKeyWidget(ForeignKeyWidget):\r\n        def clean(self, value, row):\r\n            my_asset = Asset.objects.get(hostname=row['dest_hostname'])\r\n            return self.model.objects.get(\r\n                name__iexact=row['dest_port'],\r\n                itmodel__vendor__iexact=my_asset.itmodel.vendor,\r\n                itmodel__model_number__iexact=my_asset.itmodel.model_number\r\n            )\r\n\r\n    src_hostname = fields.Field(\r\n        column_name='src_hostname',\r\n        attribute='asset',\r\n        widget=ForeignKeyWidget(Asset, 'hostname')\r\n    )\r\n    src_port = fields.Field(\r\n        column_name='src_port',\r\n        attribute='label',\r\n        widget=SrcPortForeignKeyWidget(NetworkPortLabel, 'name')\r\n    )\r\n    src_mac = fields.Field(\r\n        column_name='src_mac',\r\n        attribute='asset',\r\n        widget=ForeignKeyWidget(Asset, 'mac_address')\r\n    )\r\n    dest_hostname = fields.Field(\r\n        column_name='dest_hostname',\r\n        attribute='connection',\r\n        widget=ForeignKeyWidget(Asset, 'hostname')\r\n    )\r\n    dest_port = fields.Field(\r\n        column_name='dest_port',\r\n        attribute='connection',\r\n        widget=DestPortForeignKeyWidget(NetworkPortLabel, 'name')\r\n    )\r\n\r\n    class Meta:\r\n        model = NetworkPort\r\n        exclude = ('id', 'label', 'asset', 'connection')\r\n        import_id_fields = ('src_hostname', 'src_port')\r\n        export_order = ('src_hostname', 'src_port', 'src_mac', 'dest_hostname', 'dest_port')\r\n        skip_unchanged = True\r\n        report_skipped = True\r\n        clean_model_instances = True\r\n\r\nI'm not sure how to assign the dest_hostname and dest_port since they are subfields of the connection field. I'm currently getting this error message when attempting import:\r\nCannot assign \"<NetworkPortLabel: Eth1 : V1 by Dell>\": \"NetworkPort.connection\" must be a \"NetworkPort\" instance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1082", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1082/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1082/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1082/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1082", "id": 567716869, "node_id": "MDU6SXNzdWU1Njc3MTY4Njk=", "number": 1082, "title": "admin not working with utf-8 import of csv file", "user": {"login": "bilkusg", "id": 4716818, "node_id": "MDQ6VXNlcjQ3MTY4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4716818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bilkusg", "html_url": "https://github.com/bilkusg", "followers_url": "https://api.github.com/users/bilkusg/followers", "following_url": "https://api.github.com/users/bilkusg/following{/other_user}", "gists_url": "https://api.github.com/users/bilkusg/gists{/gist_id}", "starred_url": "https://api.github.com/users/bilkusg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bilkusg/subscriptions", "organizations_url": "https://api.github.com/users/bilkusg/orgs", "repos_url": "https://api.github.com/users/bilkusg/repos", "events_url": "https://api.github.com/users/bilkusg/events{/privacy}", "received_events_url": "https://api.github.com/users/bilkusg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-19T17:26:22Z", "updated_at": "2020-05-28T07:24:59Z", "closed_at": "2020-05-28T07:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to import a file containing names with foreign characters in utf-8 format using the admin mixin, import-export either fails or mangles the characters.\r\n\r\nThis seems to be because when storing the uploaded data in a file in the temp directory prior to processing the data it uses text mode, which then complains on certain unicode combinations. If I change get_read_mode in formats to 'rb', everything then works properly.\r\n\r\nIs this a bug, or am I not setting something up correctly.\r\nI'm using django 3.1 and python 3.8\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1075", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1075/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1075/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1075/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1075", "id": 559142149, "node_id": "MDU6SXNzdWU1NTkxNDIxNDk=", "number": 1075, "title": "Failing while starting django server on tablib deps (djnango-import-export 1.2.0)", "user": {"login": "lerdem", "id": 29796037, "node_id": "MDQ6VXNlcjI5Nzk2MDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/29796037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lerdem", "html_url": "https://github.com/lerdem", "followers_url": "https://api.github.com/users/lerdem/followers", "following_url": "https://api.github.com/users/lerdem/following{/other_user}", "gists_url": "https://api.github.com/users/lerdem/gists{/gist_id}", "starred_url": "https://api.github.com/users/lerdem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lerdem/subscriptions", "organizations_url": "https://api.github.com/users/lerdem/orgs", "repos_url": "https://api.github.com/users/lerdem/repos", "events_url": "https://api.github.com/users/lerdem/events{/privacy}", "received_events_url": "https://api.github.com/users/lerdem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-03T15:05:18Z", "updated_at": "2020-03-15T11:24:35Z", "closed_at": "2020-03-15T11:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using \r\n- django 1.11 \r\n- djnango-import-export 1.2.0\r\n\r\nWhen I am installing deps, have no errors. But when I ran server occur error like\r\nModuleNotFoundError: ... xlrd\r\n\r\nI am suggesting to create a patch for version 1.2.1 (last witch supports django 1.11).\r\nin setup.py (https://github.com/lerdem/django-import-export/blob/1.2.0/setup.py#L29)\r\n```python\r\ninstall_requires = [\r\n    'diff-match-patch',\r\n    'django>=1.8',\r\n    'tablib[all]',\r\n]\r\n```\r\n\r\ntarlib doc installation\r\nhttps://tablib.readthedocs.io/en/stable/install/#installing-tablib\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1070", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1070/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1070/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1070/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1070", "id": 554082817, "node_id": "MDU6SXNzdWU1NTQwODI4MTc=", "number": 1070, "title": "Microsoft Excel is not reading exported file correctly", "user": {"login": "HoshiYamazaki", "id": 21007545, "node_id": "MDQ6VXNlcjIxMDA3NTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/21007545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HoshiYamazaki", "html_url": "https://github.com/HoshiYamazaki", "followers_url": "https://api.github.com/users/HoshiYamazaki/followers", "following_url": "https://api.github.com/users/HoshiYamazaki/following{/other_user}", "gists_url": "https://api.github.com/users/HoshiYamazaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/HoshiYamazaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HoshiYamazaki/subscriptions", "organizations_url": "https://api.github.com/users/HoshiYamazaki/orgs", "repos_url": "https://api.github.com/users/HoshiYamazaki/repos", "events_url": "https://api.github.com/users/HoshiYamazaki/events{/privacy}", "received_events_url": "https://api.github.com/users/HoshiYamazaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T10:54:44Z", "updated_at": "2020-05-28T07:23:21Z", "closed_at": "2020-05-28T07:23:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Library version on my project: 1.2.0\r\n\r\nIf I try to read exported CSV file on macOS or Windows, it is not reading correctly on Microsoft Excel.\r\nIt get replaced with random characters like beginning of this:\r\n![image](https://user-images.githubusercontent.com/21007545/72978057-04bcd000-3dd6-11ea-9003-5148b54741d5.png)\r\n\r\nSeems like this is this bug:\r\nhttp://www.openforis.org/support/questions/279/wrong-characters-display-when-exporting-files-to-csv-from-collect\r\n\r\nI tried to set `to_encoding` in admin to `utf-8`, `cp1252`, and also `utf-8-sig`.\r\nHow I can fix that to support Microsoft products?\r\n\r\nSeems that I need to set `iso` encoding, which is the best way to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1068", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1068/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1068/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1068/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1068", "id": 552436388, "node_id": "MDU6SXNzdWU1NTI0MzYzODg=", "number": 1068, "title": "Allow skipping importing a row basing on row information", "user": {"login": "n1k0", "id": 41547, "node_id": "MDQ6VXNlcjQxNTQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/41547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n1k0", "html_url": "https://github.com/n1k0", "followers_url": "https://api.github.com/users/n1k0/followers", "following_url": "https://api.github.com/users/n1k0/following{/other_user}", "gists_url": "https://api.github.com/users/n1k0/gists{/gist_id}", "starred_url": "https://api.github.com/users/n1k0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n1k0/subscriptions", "organizations_url": "https://api.github.com/users/n1k0/orgs", "repos_url": "https://api.github.com/users/n1k0/repos", "events_url": "https://api.github.com/users/n1k0/events{/privacy}", "received_events_url": "https://api.github.com/users/n1k0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-20T17:46:07Z", "updated_at": "2020-01-31T08:30:43Z", "closed_at": "2020-01-31T08:30:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm dealing with importing 3rd-party generated CSV files using django-import-export, and I'd like to ignore malformed CSV rows (and not import them). I'm already doing some checks and data preprocessing using `before_import_row`, which conveniently pass the `row` dict so I can update it as needed.\r\n\r\nAnd sometimes I'd just want to skip importing a row entirely, basing on the row data. I've seen the `skip_row` function but it only receives a model instance and the original instance when it exists... No obvious access to the `row` dict to check if the row should be skipped or not! The name is slighly misleading here (hint: there's no obvious reason the Model should map 1:1 the row data imho).\r\n\r\nMaybe I'm missing something obvious in the docs, or an alternative way to achieve that?\r\n\r\nAn alternative way to implement the feature, rather than adding a new arg, would be to allow skipping importing a row right from `before_import_row` and friends, eg. by raising a specific exception. Thoughts?\r\n\r\nNote: a similar issue has been filed already in #968 but has been closed automatically by a bot, while I really think this should be addressed - or at least answered.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1067", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1067/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1067/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1067/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1067", "id": 550882784, "node_id": "MDU6SXNzdWU1NTA4ODI3ODQ=", "number": 1067, "title": "after using tablib[all] I can't select any export format.", "user": {"login": "mhmrx", "id": 54308225, "node_id": "MDQ6VXNlcjU0MzA4MjI1", "avatar_url": "https://avatars2.githubusercontent.com/u/54308225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhmrx", "html_url": "https://github.com/mhmrx", "followers_url": "https://api.github.com/users/mhmrx/followers", "following_url": "https://api.github.com/users/mhmrx/following{/other_user}", "gists_url": "https://api.github.com/users/mhmrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhmrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhmrx/subscriptions", "organizations_url": "https://api.github.com/users/mhmrx/orgs", "repos_url": "https://api.github.com/users/mhmrx/repos", "events_url": "https://api.github.com/users/mhmrx/events{/privacy}", "received_events_url": "https://api.github.com/users/mhmrx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-16T15:31:18Z", "updated_at": "2020-03-15T11:12:05Z", "closed_at": "2020-03-15T11:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "As in decrption. Export formats dont't load.\r\n\r\nif I export it manually by:\r\n\r\n\r\n```    \r\ndef get_export_formats(self):\r\n    from import_export.formats import base_formats`\r\n    formats = (\r\n        base_formats.XLS,\r\n        base_formats.CSV\r\n     )\r\n     return [f for f in formats]\r\n```\r\n\r\nI get error:\r\n\r\n```\r\n    admin.site.register(AssetStat, AssetStatReportAdmin)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/contrib/admin/sites.py\", line 124, in register\r\n    self._registry[model] = admin_class(model, self)\r\n  File \"/usr/local/lib/python3.6/site-packages/import_export/admin.py\", line 541, in __init__\r\n    choices.append((str(i), f().get_title()))\r\n  File \"/usr/local/lib/python3.6/site-packages/import_export/formats/base_formats.py\", line 92, in get_title\r\n    return self.get_format().title\r\nAttributeError: module 'tablib.formats._xls' has no attribute 'title'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1066", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1066/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1066/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1066", "id": 550795131, "node_id": "MDU6SXNzdWU1NTA3OTUxMzE=", "number": 1066, "title": "Getting error \"no module named xlrd\" related to tablib", "user": {"login": "YPCrumble", "id": 12019216, "node_id": "MDQ6VXNlcjEyMDE5MjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12019216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YPCrumble", "html_url": "https://github.com/YPCrumble", "followers_url": "https://api.github.com/users/YPCrumble/followers", "following_url": "https://api.github.com/users/YPCrumble/following{/other_user}", "gists_url": "https://api.github.com/users/YPCrumble/gists{/gist_id}", "starred_url": "https://api.github.com/users/YPCrumble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YPCrumble/subscriptions", "organizations_url": "https://api.github.com/users/YPCrumble/orgs", "repos_url": "https://api.github.com/users/YPCrumble/repos", "events_url": "https://api.github.com/users/YPCrumble/events{/privacy}", "received_events_url": "https://api.github.com/users/YPCrumble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-16T13:05:22Z", "updated_at": "2020-03-15T11:11:24Z", "closed_at": "2020-03-15T11:11:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for maintaining this great repo!\r\n\r\nI'm getting the following error when running tests. The error is fixed by explicitly adding `pip install tablib==0.12.1` to my TravisCI file like this repo does.\r\n\r\nI also see in the README that django-import-export requires a specific version of tablib (though not 0.12.1), but in the documentation there's no mention of needing to install a tablib version.\r\n\r\nWhat's the best practice? I'd be happy to make a PR to clarify the docs if that's helpful. Or would it be helpful to make tablib an explicit requirement in this library so that it doesn't need to be installed separately?\r\n\r\nI also see #1061 - does this mean that once this PR is merged in my issue will be automatically solved and I can remove the extra line in my TravisCI file?\r\n\r\nclass UserProfileAdmin(ExportActionMixin, admin.ModelAdmin):\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/django/contrib/admin/decorators.py\", line 27, in _model_admin_wrapper\r\n    admin_site.register(models, admin_class=admin_class)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/django/contrib/admin/sites.py\", line 124, in register\r\n    self._registry[model] = admin_class(model, self)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/import_export/admin.py\", line 497, in __init__\r\n    formats = self.get_export_formats()\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/import_export/admin.py\", line 367, in get_export_formats\r\n    return [f for f in self.formats if f().can_export()]\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/import_export/admin.py\", line 367, in <listcomp>\r\n    return [f for f in self.formats if f().can_export()]\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/import_export/formats/base_formats.py\", line 122, in can_export\r\n    return hasattr(self.get_format(), 'export_set')\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/import_export/formats/base_formats.py\", line 93, in get_format\r\n    return import_module(self.TABLIB_MODULE)\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/tablib/formats/_xls.py\", line 7, in <module>\r\n    import xlrd\r\nModuleNotFoundError: No module named 'xlrd'\r\nThe command \"coverage run --source='.' manage.py test\" exited with 1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1064", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1064/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1064/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1064", "id": 549396628, "node_id": "MDU6SXNzdWU1NDkzOTY2Mjg=", "number": 1064, "title": "Tablib released at 2020.01.13 and broke requirements", "user": {"login": "HiveTraum", "id": 10072401, "node_id": "MDQ6VXNlcjEwMDcyNDAx", "avatar_url": "https://avatars0.githubusercontent.com/u/10072401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HiveTraum", "html_url": "https://github.com/HiveTraum", "followers_url": "https://api.github.com/users/HiveTraum/followers", "following_url": "https://api.github.com/users/HiveTraum/following{/other_user}", "gists_url": "https://api.github.com/users/HiveTraum/gists{/gist_id}", "starred_url": "https://api.github.com/users/HiveTraum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HiveTraum/subscriptions", "organizations_url": "https://api.github.com/users/HiveTraum/orgs", "repos_url": "https://api.github.com/users/HiveTraum/repos", "events_url": "https://api.github.com/users/HiveTraum/events{/privacy}", "received_events_url": "https://api.github.com/users/HiveTraum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-01-14T07:59:14Z", "updated_at": "2020-01-15T20:17:38Z", "closed_at": "2020-01-15T20:17:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Need to fix version of tablib in setup.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1059", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1059/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1059/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1059/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1059", "id": 545411372, "node_id": "MDU6SXNzdWU1NDU0MTEzNzI=", "number": 1059, "title": "May I add kazakh locale to project?", "user": {"login": "MuslimBeibytuly", "id": 24839111, "node_id": "MDQ6VXNlcjI0ODM5MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/24839111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuslimBeibytuly", "html_url": "https://github.com/MuslimBeibytuly", "followers_url": "https://api.github.com/users/MuslimBeibytuly/followers", "following_url": "https://api.github.com/users/MuslimBeibytuly/following{/other_user}", "gists_url": "https://api.github.com/users/MuslimBeibytuly/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuslimBeibytuly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuslimBeibytuly/subscriptions", "organizations_url": "https://api.github.com/users/MuslimBeibytuly/orgs", "repos_url": "https://api.github.com/users/MuslimBeibytuly/repos", "events_url": "https://api.github.com/users/MuslimBeibytuly/events{/privacy}", "received_events_url": "https://api.github.com/users/MuslimBeibytuly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-05T12:30:15Z", "updated_at": "2020-03-15T11:23:16Z", "closed_at": "2020-03-15T11:23:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1058", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1058/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1058/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1058/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1058", "id": 545267556, "node_id": "MDU6SXNzdWU1NDUyNjc1NTY=", "number": 1058, "title": "I can't import comma listed string into Django-taggit tags using Django-import-export. ", "user": {"login": "Spacekoki", "id": 28131887, "node_id": "MDQ6VXNlcjI4MTMxODg3", "avatar_url": "https://avatars1.githubusercontent.com/u/28131887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spacekoki", "html_url": "https://github.com/Spacekoki", "followers_url": "https://api.github.com/users/Spacekoki/followers", "following_url": "https://api.github.com/users/Spacekoki/following{/other_user}", "gists_url": "https://api.github.com/users/Spacekoki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spacekoki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spacekoki/subscriptions", "organizations_url": "https://api.github.com/users/Spacekoki/orgs", "repos_url": "https://api.github.com/users/Spacekoki/repos", "events_url": "https://api.github.com/users/Spacekoki/events{/privacy}", "received_events_url": "https://api.github.com/users/Spacekoki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-01-04T10:13:28Z", "updated_at": "2020-01-06T11:22:01Z", "closed_at": "2020-01-06T11:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't import Django-taggit tags using Django-import-export. \r\n\r\nThis error is when value is entered.\r\n\r\n`Line number: 1 - invalid literal for int() with base 10: 'def'`\r\n\r\nAlso, this error is when the value is blank.\r\n\r\n`Line number: 2 - Cannot add <QuerySet []> (<class 'django.db.models.query.QuerySet'>). Expected <class 'django.db.models.base.ModelBase'> or str.`\r\n\r\n\r\n**xlsx table**\u3000\r\n\r\nid | author | title | text | file | free_tags \r\n------------ | ------------- | ------------- | ------------- | ------------- | -------------\r\n1 | 5 | abc | hello |  | def,ghi \r\n2 | 5 | oh | yeah | | \r\n\r\n**models.py**\r\n```\r\nfrom django.db import models\r\nfrom django.urls import reverse\r\nfrom taggit.managers import TaggableManager\r\n\r\nclass KnowHow(models.Model):    \r\n\r\n    author = models.ForeignKey('auth.User',on_delete=models.CASCADE)\r\n    title = models.CharField(max_length=200)\r\n    text = models.TextField(blank=True)\r\n    file = models.FileField(blank=True,upload_to='explicit_knowhows')\r\n    free_tags = TaggableManager(blank=True)\r\n    \r\n    def __str__(self):\r\n        return self.title\r\n```\r\n**admin.py**\r\n```\r\nfrom django.contrib import admin\r\nfrom import_export import resources\r\nfrom import_export import fields\r\nfrom import_export.admin import ImportExportModelAdmin\r\n\r\nfrom .models import KnowHow\r\n\r\nclass KnowHowResource(resources.ModelResource):\r\n\r\n    class Meta:\r\n        model = KnowHow\r\n        import_id_fields = ['id']\r\n\r\n@admin.register(KnowHow)\r\nclass knowHowAdmin(ImportExportModelAdmin):\r\n    resource_class = KnowHowResource\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1057", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1057/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1057/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1057", "id": 543910970, "node_id": "MDU6SXNzdWU1NDM5MTA5NzA=", "number": 1057, "title": "Remove Django 4.0 warning about django.utils.translation.ugettext_lazy", "user": {"login": "manelclos", "id": 463832, "node_id": "MDQ6VXNlcjQ2MzgzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/463832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manelclos", "html_url": "https://github.com/manelclos", "followers_url": "https://api.github.com/users/manelclos/followers", "following_url": "https://api.github.com/users/manelclos/following{/other_user}", "gists_url": "https://api.github.com/users/manelclos/gists{/gist_id}", "starred_url": "https://api.github.com/users/manelclos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manelclos/subscriptions", "organizations_url": "https://api.github.com/users/manelclos/orgs", "repos_url": "https://api.github.com/users/manelclos/repos", "events_url": "https://api.github.com/users/manelclos/events{/privacy}", "received_events_url": "https://api.github.com/users/manelclos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-30T15:09:17Z", "updated_at": "2019-12-30T15:10:08Z", "closed_at": "2019-12-30T15:10:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Easy maintenance moving forward to Django 4.0:\r\n\r\n```RemovedInDjango40Warning: django.utils.translation.ugettext_lazy() is deprecated in favor of django.utils.translation.gettext_lazy()```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1055", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1055/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1055/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1055/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1055", "id": 543901327, "node_id": "MDU6SXNzdWU1NDM5MDEzMjc=", "number": 1055, "title": "Should use column_name when checking import_id_fields", "user": {"login": "manelclos", "id": 463832, "node_id": "MDQ6VXNlcjQ2MzgzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/463832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manelclos", "html_url": "https://github.com/manelclos", "followers_url": "https://api.github.com/users/manelclos/followers", "following_url": "https://api.github.com/users/manelclos/following{/other_user}", "gists_url": "https://api.github.com/users/manelclos/gists{/gist_id}", "starred_url": "https://api.github.com/users/manelclos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manelclos/subscriptions", "organizations_url": "https://api.github.com/users/manelclos/orgs", "repos_url": "https://api.github.com/users/manelclos/repos", "events_url": "https://api.github.com/users/manelclos/events{/privacy}", "received_events_url": "https://api.github.com/users/manelclos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-30T14:38:45Z", "updated_at": "2020-01-28T10:48:09Z", "closed_at": "2020-01-28T10:48:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[`Resource.get_instance`](https://github.com/django-import-export/django-import-export/blob/master/import_export/resources.py#L259) is checking for field names to be in the `row`. This works in the default case when `attribute` and `column_name` have the same value, but if you define a field like:\r\n\r\n```\r\n    row_id = fields.Field(\r\n        column_name='id',\r\n        attribute='row_id',\r\n    )\r\n```\r\n\r\nthen `get_instance` should be something like this:\r\n\r\n```\r\n    def get_instance(self, instance_loader, row):\r\n        import_id_fields = [\r\n            self.fields[f] for f in self.get_import_id_fields()\r\n        ]\r\n        for field in import_id_fields:\r\n            if field.column_name not in row:\r\n                return\r\n        return instance_loader.get_instance(row)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1053", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1053/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1053/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1053/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1053", "id": 543363993, "node_id": "MDU6SXNzdWU1NDMzNjM5OTM=", "number": 1053, "title": "Django 3 support", "user": {"login": "MuslimBeibytuly", "id": 24839111, "node_id": "MDQ6VXNlcjI0ODM5MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/24839111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuslimBeibytuly", "html_url": "https://github.com/MuslimBeibytuly", "followers_url": "https://api.github.com/users/MuslimBeibytuly/followers", "following_url": "https://api.github.com/users/MuslimBeibytuly/following{/other_user}", "gists_url": "https://api.github.com/users/MuslimBeibytuly/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuslimBeibytuly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuslimBeibytuly/subscriptions", "organizations_url": "https://api.github.com/users/MuslimBeibytuly/orgs", "repos_url": "https://api.github.com/users/MuslimBeibytuly/repos", "events_url": "https://api.github.com/users/MuslimBeibytuly/events{/privacy}", "received_events_url": "https://api.github.com/users/MuslimBeibytuly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-29T11:33:25Z", "updated_at": "2019-12-31T05:53:42Z", "closed_at": "2019-12-31T05:53:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1046", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1046/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1046/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1046/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1046", "id": 531837929, "node_id": "MDU6SXNzdWU1MzE4Mzc5Mjk=", "number": 1046, "title": "Django3.0 compatibility issue", "user": {"login": "ShaheedHaque", "id": 4881193, "node_id": "MDQ6VXNlcjQ4ODExOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4881193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaheedHaque", "html_url": "https://github.com/ShaheedHaque", "followers_url": "https://api.github.com/users/ShaheedHaque/followers", "following_url": "https://api.github.com/users/ShaheedHaque/following{/other_user}", "gists_url": "https://api.github.com/users/ShaheedHaque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaheedHaque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaheedHaque/subscriptions", "organizations_url": "https://api.github.com/users/ShaheedHaque/orgs", "repos_url": "https://api.github.com/users/ShaheedHaque/repos", "events_url": "https://api.github.com/users/ShaheedHaque/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaheedHaque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-03T09:18:31Z", "updated_at": "2019-12-04T16:01:46Z", "closed_at": "2019-12-04T16:01:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-import-export 1.2.0 does not work with Django 3.0 because [it dropped its internal version of six](https://docs.djangoproject.com/en/3.0/releases/3.0/#removed-private-python-2-compatibility-apis).\r\n\r\nThe following files are affected:\r\n\r\n* widgets.py\r\n* admin.py\r\n* resources.py\r\n* base_formats.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1043", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1043/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1043/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1043", "id": 529324971, "node_id": "MDU6SXNzdWU1MjkzMjQ5NzE=", "number": 1043, "title": "exclude some export formats", "user": {"login": "zbynekdrlik", "id": 26905282, "node_id": "MDQ6VXNlcjI2OTA1Mjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/26905282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbynekdrlik", "html_url": "https://github.com/zbynekdrlik", "followers_url": "https://api.github.com/users/zbynekdrlik/followers", "following_url": "https://api.github.com/users/zbynekdrlik/following{/other_user}", "gists_url": "https://api.github.com/users/zbynekdrlik/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbynekdrlik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbynekdrlik/subscriptions", "organizations_url": "https://api.github.com/users/zbynekdrlik/orgs", "repos_url": "https://api.github.com/users/zbynekdrlik/repos", "events_url": "https://api.github.com/users/zbynekdrlik/events{/privacy}", "received_events_url": "https://api.github.com/users/zbynekdrlik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T12:46:34Z", "updated_at": "2019-11-27T17:53:46Z", "closed_at": "2019-11-27T17:53:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have only csv format in admin to export? Now there are combobox with all possibilities.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1042", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1042/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1042/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1042", "id": 529245558, "node_id": "MDU6SXNzdWU1MjkyNDU1NTg=", "number": 1042, "title": "ForeignKey is 0 error", "user": {"login": "ruanhailiang", "id": 15086045, "node_id": "MDQ6VXNlcjE1MDg2MDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/15086045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruanhailiang", "html_url": "https://github.com/ruanhailiang", "followers_url": "https://api.github.com/users/ruanhailiang/followers", "following_url": "https://api.github.com/users/ruanhailiang/following{/other_user}", "gists_url": "https://api.github.com/users/ruanhailiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruanhailiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruanhailiang/subscriptions", "organizations_url": "https://api.github.com/users/ruanhailiang/orgs", "repos_url": "https://api.github.com/users/ruanhailiang/repos", "events_url": "https://api.github.com/users/ruanhailiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ruanhailiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T10:10:56Z", "updated_at": "2020-05-25T11:35:53Z", "closed_at": "2020-05-25T11:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "    # widgets.py\r\n    def clean(self, value, row=None, *args, **kwargs):\r\n        val = super(ForeignKeyWidget, self).clean(value)\r\n        if val:  # when ForeignKey is 0 \r\n            return self.get_queryset(value, row, *args, **kwargs).get(**{self.field: val})\r\n        else:\r\n            return None\r\n\r\nThere is a foreign key value of 0 in my imported data. At this time, there will be a prompt that the field cannot be found. It took me an afternoon to find this problem. Please correct the code!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1036", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1036/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1036/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1036", "id": 526328998, "node_id": "MDU6SXNzdWU1MjYzMjg5OTg=", "number": 1036, "title": "Importing ManyToMany from JSON file", "user": {"login": "jjarthur", "id": 16522657, "node_id": "MDQ6VXNlcjE2NTIyNjU3", "avatar_url": "https://avatars2.githubusercontent.com/u/16522657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjarthur", "html_url": "https://github.com/jjarthur", "followers_url": "https://api.github.com/users/jjarthur/followers", "following_url": "https://api.github.com/users/jjarthur/following{/other_user}", "gists_url": "https://api.github.com/users/jjarthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjarthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjarthur/subscriptions", "organizations_url": "https://api.github.com/users/jjarthur/orgs", "repos_url": "https://api.github.com/users/jjarthur/repos", "events_url": "https://api.github.com/users/jjarthur/events{/privacy}", "received_events_url": "https://api.github.com/users/jjarthur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T02:38:49Z", "updated_at": "2019-11-25T23:58:58Z", "closed_at": "2019-11-25T23:58:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to import a JSON file that contains a many-to-many relationship but am hitting some problems. This is my code:\r\n\r\n**book.json**\r\n```json\r\n{\r\n  \"title\": \"The Lord of the Rings\",\r\n  \"categories\": [\r\n      \"Fantasy\",\r\n      \"Action\",\r\n      \"Adventure\"\r\n  ]\r\n}\r\n```\r\n\r\n**models.py**\r\n```python\r\nfrom django.db import models\r\n\r\nclass Category(models.Model):\r\n    guid = models.CharField(max_length=36)\r\n    display_name = models.CharField(max_length=50)\r\n    description = models.TextField()\r\n\r\n    def __str__(self):\r\n        return self.display_name\r\n\r\nclass Book(models.Model):\r\n    title = models.CharField(max_length=200)\r\n    categories = models.ManyToManyField(Category)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n```\r\n\r\n**resources.py**\r\n```python\r\nfrom import_export import resources\r\nfrom import_export.fields import Field\r\nfrom import_export.widgets import ManyToManyWidget\r\nfrom .models import Book, Category\r\n\r\nclass BookResource(resources.ModelResource):\r\n    categories = Field(widget=ManyToManyWidget(Category))\r\n\r\n    class Meta:\r\n        model = Book\r\n        import_id_fields = ('title',)\r\n```\r\n\r\n**importer.py**\r\n```python\r\nfrom resources import BookResource\r\nfrom models import Book\r\n\r\nwith open(\"book.json\", 'r') as f:\r\n        book = '[' + f.read() + ']'\r\n        result = BookResource().import_data(tablib.Dataset().load(book), raise_errors=True, dry_run=True)\r\n```\r\n\r\nThis seems to run through without errors, and adds the new `book` to the database. The problem is that it doesn't create a new entry in the `book_categories` table (PostgreSQL). I think I'm definitely missing a step somewhere because I haven't defined how to find the correct `category` database entries, given I the list of `display_name` strings. Am I on the right track here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1035", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1035/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1035/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1035", "id": 525870237, "node_id": "MDU6SXNzdWU1MjU4NzAyMzc=", "number": 1035, "title": "DecimalWidget should be initialized from text", "user": {"login": "andreynovikov", "id": 2943625, "node_id": "MDQ6VXNlcjI5NDM2MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2943625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreynovikov", "html_url": "https://github.com/andreynovikov", "followers_url": "https://api.github.com/users/andreynovikov/followers", "following_url": "https://api.github.com/users/andreynovikov/following{/other_user}", "gists_url": "https://api.github.com/users/andreynovikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreynovikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreynovikov/subscriptions", "organizations_url": "https://api.github.com/users/andreynovikov/orgs", "repos_url": "https://api.github.com/users/andreynovikov/repos", "events_url": "https://api.github.com/users/andreynovikov/events{/privacy}", "received_events_url": "https://api.github.com/users/andreynovikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-20T15:19:22Z", "updated_at": "2020-04-26T15:07:09Z", "closed_at": "2020-04-26T15:07:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As [per doc](https://docs.python.org/3/library/decimal.html):\r\n\r\n```python\r\n>>> Decimal('3.14')\r\nDecimal('3.14')\r\n>>> Decimal(3.14)\r\nDecimal('3.140000000000000124344978758017532527446746826171875')\r\n```\r\n\r\nWhen I've changed this line:\r\nhttps://github.com/django-import-export/django-import-export/blob/3cf5e3f9796a5caf7c5ea3928119af7ce4706c0d/import_export/widgets.py#L88\r\n\r\nto\r\n\r\n```python\r\n        return Decimal(force_text(value))\r\n```\r\n\r\nthe import of value `1.4` changed from:\r\n\r\n1.~~40~~399999999999999911182158029987476766109466552734375\r\n\r\nto:\r\n\r\n1.4~~0~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1031", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1031/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1031/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1031", "id": 520552611, "node_id": "MDU6SXNzdWU1MjA1NTI2MTE=", "number": 1031, "title": "errors to import JSON with Postgres ArrayField", "user": {"login": "santoshpurbey", "id": 5738335, "node_id": "MDQ6VXNlcjU3MzgzMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5738335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santoshpurbey", "html_url": "https://github.com/santoshpurbey", "followers_url": "https://api.github.com/users/santoshpurbey/followers", "following_url": "https://api.github.com/users/santoshpurbey/following{/other_user}", "gists_url": "https://api.github.com/users/santoshpurbey/gists{/gist_id}", "starred_url": "https://api.github.com/users/santoshpurbey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santoshpurbey/subscriptions", "organizations_url": "https://api.github.com/users/santoshpurbey/orgs", "repos_url": "https://api.github.com/users/santoshpurbey/repos", "events_url": "https://api.github.com/users/santoshpurbey/events{/privacy}", "received_events_url": "https://api.github.com/users/santoshpurbey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-10T04:34:17Z", "updated_at": "2020-05-22T06:24:17Z", "closed_at": "2020-05-22T06:24:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Problem:**\r\nWhile importing data from **JSON in Postgres ArrayField** AttributeError is raised: '**list' object has no attribute 'split'.**\r\n\r\n**Suggestion**\r\nIn `import_export/widgets.py`\r\n``` python\r\nclass SimpleArrayWidget(Widget):\r\n\r\n    def clean(self, value, row=None, *args, **kwargs):\r\n        if isinstance(value, str):\r\n            value = value.split(self.separator)\r\n        return value if isinstance(value, list) else []\r\n```\r\n**- Python  3.7**\r\n**- Django 2.2.7**\r\n**- tablib 0.14.0**\r\n**- django-import-export 1.2.0**\r\n\r\n**Traceback** (most recent call last):\r\n            File \"/python3.7/site-packages/import_export/resources.py\", line 512, in import_row\r\n            self.import_obj(instance, row, dry_run)\r\n            File \"/python3.7/site-packages/import_export/resources.py\", line 377, in import_obj\r\n            self.import_field(field, obj, data)\r\n            File \"/python3.7/site-packages/import_export/resources.py\", line 360, in import_field\r\n            field.save(obj, data, is_m2m)\r\n            File \"/python3.7/site-packages/import_export/fields.py\", line 113, in save\r\n            cleaned = self.clean(data)\r\n            File \"/python3.7/site-packages/import_export/fields.py\", line 69, in clean\r\n            value = self.widget.clean(value, row=data)\r\n            File \"/python3.7/site-packages/import_export/widgets.py\", line 262, in clean\r\n            return value.split(self.separator) if value else []\r\n            **AttributeError: 'list' object has no attribute 'split'**\r\n\r\n@andrewgy8  @bmihelac ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1028", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1028/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1028/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1028/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1028", "id": 519834422, "node_id": "MDU6SXNzdWU1MTk4MzQ0MjI=", "number": 1028, "title": "Generalized post-save behavior", "user": {"login": "mcdeoliveira", "id": 13070852, "node_id": "MDQ6VXNlcjEzMDcwODUy", "avatar_url": "https://avatars3.githubusercontent.com/u/13070852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcdeoliveira", "html_url": "https://github.com/mcdeoliveira", "followers_url": "https://api.github.com/users/mcdeoliveira/followers", "following_url": "https://api.github.com/users/mcdeoliveira/following{/other_user}", "gists_url": "https://api.github.com/users/mcdeoliveira/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcdeoliveira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcdeoliveira/subscriptions", "organizations_url": "https://api.github.com/users/mcdeoliveira/orgs", "repos_url": "https://api.github.com/users/mcdeoliveira/repos", "events_url": "https://api.github.com/users/mcdeoliveira/events{/privacy}", "received_events_url": "https://api.github.com/users/mcdeoliveira/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-08T06:19:26Z", "updated_at": "2020-05-20T07:14:03Z", "closed_at": "2020-05-20T07:14:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Issue\r\n\r\nWhen extending an existing model with a one-to-one relationship as in [extending the django user model](https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#extending-the-existing-user-model), the related field may not exist until the model save is called and a signal is invoked to create the related field. This requires a treatment similar to the one currently done for `ManyToManyWidget`s, in which the handling of related fields is postponed until the instance has been saved.\r\n\r\nThere has been at least one issue that dealt with this before #293.\r\n\r\n# Proposed solution\r\n\r\nThe way that the m2m field is treated in the current code can not be extended nor generalized. It is hardcoded in `resources.py` by introducing flags (`is_m2m`) and checking whether the widget is an instance of `ManyToManyWidget`.\r\n\r\nThe proposed solution is to move this functionality to `Field` and `Widget` that should now be responsible for implementing a `save` and a `post_save` method. An `after_post_save` callback has also been introduced to allow for custom actions following the post-save action.\r\nThese changes do not affect the current api and do not seem to break existing code in any way.\r\n\r\nA `PostSaveWidget` container widget has also been added that allows deferring saving of any widget, and not only `ManyToManyWidget`s, to after the instance has been saved.\r\n\r\nA PR has been made with the proposed changes.\r\n\r\n# Example application\r\n\r\nAn example application of the new feature is the resource:\r\n\r\n    class UserResource(resources.ModelResource):\r\n        my_boolean = fields.Field(attribute='userprofile__my_boolean',\r\n                                  widget=widgets.PostSaveWidget(widgets.BooleanWidget()),\r\n                                  readonly=False)\r\n\r\n        class Meta:\r\n            model = User\r\n            fields = ('id', 'my_boolean')\r\n\r\n        def after_post_save_instance(self, instance, row, using_transactions, dry_run):\r\n            instance.userprofile.save()\r\n\r\nwhich postpones saving the field `my_boolean` until an instance has been created by a signal as discussed in [extending the django user model](https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#extending-the-existing-user-model).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1027", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1027/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1027/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1027/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1027", "id": 518528812, "node_id": "MDU6SXNzdWU1MTg1Mjg4MTI=", "number": 1027, "title": "Export don't work for queryset with values() method", "user": {"login": "CrazySky2121", "id": 5104118, "node_id": "MDQ6VXNlcjUxMDQxMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5104118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrazySky2121", "html_url": "https://github.com/CrazySky2121", "followers_url": "https://api.github.com/users/CrazySky2121/followers", "following_url": "https://api.github.com/users/CrazySky2121/following{/other_user}", "gists_url": "https://api.github.com/users/CrazySky2121/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrazySky2121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrazySky2121/subscriptions", "organizations_url": "https://api.github.com/users/CrazySky2121/orgs", "repos_url": "https://api.github.com/users/CrazySky2121/repos", "events_url": "https://api.github.com/users/CrazySky2121/events{/privacy}", "received_events_url": "https://api.github.com/users/CrazySky2121/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T15:02:06Z", "updated_at": "2020-05-19T04:50:15Z", "closed_at": "2020-05-19T04:50:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Exporting fields don't work when queryset used with values() method. This is because when we iterate over queryset we have dict rather than model instance.\r\n\r\nI think code in resources.py must be like this:\r\n\r\n```python\r\ndef export_field(self, field, obj):\r\n        if isinstance(obj, dict):\r\n            return obj.get(field.attribute)\r\n        field_name = self.get_field_name(field)\r\n        method = getattr(self, 'dehydrate_%s' % field_name, None)\r\n        if method is not None:\r\n            return method(obj)\r\n        return field.export(obj)\r\n```\r\n\r\nWe can't using queryset without values() because this using for GROUP BY. So I think import_export must support it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1026", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1026/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1026/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1026/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1026", "id": 518325865, "node_id": "MDU6SXNzdWU1MTgzMjU4NjU=", "number": 1026, "title": "How can we import a csv file with ANSI encoding", "user": {"login": "farhankn", "id": 6595704, "node_id": "MDQ6VXNlcjY1OTU3MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6595704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farhankn", "html_url": "https://github.com/farhankn", "followers_url": "https://api.github.com/users/farhankn/followers", "following_url": "https://api.github.com/users/farhankn/following{/other_user}", "gists_url": "https://api.github.com/users/farhankn/gists{/gist_id}", "starred_url": "https://api.github.com/users/farhankn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farhankn/subscriptions", "organizations_url": "https://api.github.com/users/farhankn/orgs", "repos_url": "https://api.github.com/users/farhankn/repos", "events_url": "https://api.github.com/users/farhankn/events{/privacy}", "received_events_url": "https://api.github.com/users/farhankn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-06T08:50:47Z", "updated_at": "2020-05-28T07:25:50Z", "closed_at": "2020-05-28T07:25:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to import a file that has ANSI encoding, Accented characters like \"\u00e7\" etc. \r\n\r\nThe import shows an error as mentioned below.\r\n\r\n> Imported file has a wrong encoding: 'utf-8' codec can't decode byte 0xf3 in position 18710: invalid continuation byte\r\n\r\nChanging it to utf-8 breaks the characters into \"Blockers\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1020", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1020/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1020/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1020", "id": 510288295, "node_id": "MDU6SXNzdWU1MTAyODgyOTU=", "number": 1020, "title": "Prevent new items. Update only.", "user": {"login": "jangeador", "id": 429042, "node_id": "MDQ6VXNlcjQyOTA0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/429042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangeador", "html_url": "https://github.com/jangeador", "followers_url": "https://api.github.com/users/jangeador/followers", "following_url": "https://api.github.com/users/jangeador/following{/other_user}", "gists_url": "https://api.github.com/users/jangeador/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangeador/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangeador/subscriptions", "organizations_url": "https://api.github.com/users/jangeador/orgs", "repos_url": "https://api.github.com/users/jangeador/repos", "events_url": "https://api.github.com/users/jangeador/events{/privacy}", "received_events_url": "https://api.github.com/users/jangeador/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-21T20:56:38Z", "updated_at": "2019-11-19T18:16:42Z", "closed_at": "2019-11-19T18:16:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any setting that will allow me to ignore any new items. I would only want to import to update. But let's say that there is a new ID that does not currently exists in the database, I would want to ignore that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1019", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1019/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1019/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1019/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1019", "id": 509596219, "node_id": "MDU6SXNzdWU1MDk1OTYyMTk=", "number": 1019, "title": "Out of range year in XLSX file results in entire file being abandoned, rather than row error.", "user": {"login": "jbothma", "id": 235801, "node_id": "MDQ6VXNlcjIzNTgwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/235801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbothma", "html_url": "https://github.com/jbothma", "followers_url": "https://api.github.com/users/jbothma/followers", "following_url": "https://api.github.com/users/jbothma/following{/other_user}", "gists_url": "https://api.github.com/users/jbothma/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbothma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbothma/subscriptions", "organizations_url": "https://api.github.com/users/jbothma/orgs", "repos_url": "https://api.github.com/users/jbothma/repos", "events_url": "https://api.github.com/users/jbothma/events{/privacy}", "received_events_url": "https://api.github.com/users/jbothma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-20T13:38:37Z", "updated_at": "2020-05-01T15:05:31Z", "closed_at": "2020-05-01T15:05:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I have a date `01/31/21019` in an XLSX file imported to a Date ModelField with default widget, the whole file is aborted and Admin shows _\"ValueError encountered while trying to read file: ...filename\"_ \r\n\r\nI think this should be a notice for the cell or the row, not abort the entire file.\r\n\r\nIf someone can give an indication how I can catch and handle it, I can write a little fix and test for this.\r\n\r\nNote: this XLSX file was made using LibreOffice, not MS Office. I don't have access to Office but I'm writing the app for MS users.\r\n\r\nHere's the stack trace and value I saw by hacking debugging code into the library:\r\n\r\n```\r\nFile \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n  response = self.process_exception_by_middleware(e, request)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n  response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/utils/decorators.py\", line 185, in inner\r\n  return func(*args, **kwargs)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/utils/decorators.py\", line 149, in _wrapped_view\r\n  response = view_func(request, *args, **kwargs)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n  response = view_func(request, *args, **kwargs)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/contrib/admin/sites.py\", line 224, in inner\r\n  return view(request, *args, **kwargs)\r\nFile \"/usr/local/lib/python2.7/site-packages/import_export/admin.py\", line 272, in import_action\r\n  dataset = input_format.create_dataset(data)\r\nFile \"/usr/local/lib/python2.7/site-packages/import_export/formats/base_formats.py\", line 224, in create_dataset\r\n  row_values = [cell.value for cell in row]\r\nFile \"/usr/local/lib/python2.7/site-packages/openpyxl/cell/read_only.py\", line 117, in value\r\n  return from_excel(self._value, self.base_date)\r\nFile \"/usr/local/lib/python2.7/site-packages/openpyxl/utils/datetime.py\", line 97, in from_excel\r\n  return datetime.datetime(*parts[:3]) + diff\r\nValueError: year is out of range\r\n```\r\n```python\r\n>>> parts\r\n[21019, 1, 31, 0.0]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1018", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1018/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1018/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1018/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1018", "id": 509595213, "node_id": "MDU6SXNzdWU1MDk1OTUyMTM=", "number": 1018, "title": "ValueError encountered while trying to read file: ... - no debugging help", "user": {"login": "jbothma", "id": 235801, "node_id": "MDQ6VXNlcjIzNTgwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/235801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbothma", "html_url": "https://github.com/jbothma", "followers_url": "https://api.github.com/users/jbothma/followers", "following_url": "https://api.github.com/users/jbothma/following{/other_user}", "gists_url": "https://api.github.com/users/jbothma/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbothma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbothma/subscriptions", "organizations_url": "https://api.github.com/users/jbothma/orgs", "repos_url": "https://api.github.com/users/jbothma/repos", "events_url": "https://api.github.com/users/jbothma/events{/privacy}", "received_events_url": "https://api.github.com/users/jbothma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-20T13:29:40Z", "updated_at": "2020-05-02T09:12:08Z", "closed_at": "2020-05-02T09:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When https://github.com/django-import-export/django-import-export/blob/4589d4c40bd5b8ecb1b34e69e5f5e6632217de2c/import_export/admin.py#L299 catches an unexpected exception, it just outputs an error message to the browser, with no information for debugging the cause.\r\n\r\nI hacked the library to raise an exception so I can explore it using werkzeug, and it turned out to be bad data.\r\n\r\nI think this should output the stacktrace to the django log using something like `logger.exception()` so that devs can debug the issues users are experiencing.\r\n\r\nIf you're happy with the suggestion I'll send a pull request.\r\n\r\nHere's the underlying issue https://github.com/django-import-export/django-import-export/issues/1019\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1017", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1017/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1017/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1017", "id": 508505817, "node_id": "MDU6SXNzdWU1MDg1MDU4MTc=", "number": 1017, "title": "model ID auto increment doubled", "user": {"login": "swedishboy", "id": 13032749, "node_id": "MDQ6VXNlcjEzMDMyNzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/13032749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swedishboy", "html_url": "https://github.com/swedishboy", "followers_url": "https://api.github.com/users/swedishboy/followers", "following_url": "https://api.github.com/users/swedishboy/following{/other_user}", "gists_url": "https://api.github.com/users/swedishboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/swedishboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swedishboy/subscriptions", "organizations_url": "https://api.github.com/users/swedishboy/orgs", "repos_url": "https://api.github.com/users/swedishboy/repos", "events_url": "https://api.github.com/users/swedishboy/events{/privacy}", "received_events_url": "https://api.github.com/users/swedishboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-17T14:13:23Z", "updated_at": "2020-04-28T15:07:10Z", "closed_at": "2020-04-28T15:07:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I do an import of data where all data is new I don't want to use any ids to check for exisiting data.\r\n\r\nI therefor added this to my class:\r\n```\r\nclass MyModelResource(resources.ModelResource):\r\n\tdef get_instance(self, instance_loader, row):\r\n\t\treturn None\r\n```\r\n\r\nHowever I've noticed that if the auto_increment value in the database is 0 the import of 20 rows of data gets IDs starting with 20?\r\n\r\nWhat am I missing here? Is there a temporary save of data before the data is saved that gets deleted? It would be nice with more coherent default IDs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1016", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1016/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1016/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1016", "id": 506250211, "node_id": "MDU6SXNzdWU1MDYyNTAyMTE=", "number": 1016, "title": "question and choices import (import objects with children)", "user": {"login": "halukpy", "id": 46344239, "node_id": "MDQ6VXNlcjQ2MzQ0MjM5", "avatar_url": "https://avatars3.githubusercontent.com/u/46344239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halukpy", "html_url": "https://github.com/halukpy", "followers_url": "https://api.github.com/users/halukpy/followers", "following_url": "https://api.github.com/users/halukpy/following{/other_user}", "gists_url": "https://api.github.com/users/halukpy/gists{/gist_id}", "starred_url": "https://api.github.com/users/halukpy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halukpy/subscriptions", "organizations_url": "https://api.github.com/users/halukpy/orgs", "repos_url": "https://api.github.com/users/halukpy/repos", "events_url": "https://api.github.com/users/halukpy/events{/privacy}", "received_events_url": "https://api.github.com/users/halukpy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-12T23:36:12Z", "updated_at": "2020-04-25T04:39:59Z", "closed_at": "2020-04-25T04:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, i would like to import objects with their children..\r\n\r\nthink of a question set with its choices. my trials end up with failure to import that data set. how can we import such data.. thank you.\r\n\r\nP.S. \r\n1. to make it harder, questions have FK to another model which is found on db from its parent's parent.\r\n2. questions are irrelevant to math.\r\n\r\n**MODELS:..**\r\n\r\n```\r\nQuestionModel\r\ntext: TextField\r\ncorrect: CharField, choices=(A,B,C,D,E)\r\nchapter: ForeignKey\r\n\r\nChoiceModel\r\nquestion: ForeignKey\r\ntext: TextField\r\nchoice_label: CharField, choices=(A,B,C,D,E)\r\n```\r\n\r\n```\r\nPartModel\r\nname:CharField, unique\r\n\r\nChapterModel\r\nname:CharField, unique\r\npart:ForeignKey\r\n\r\nSectionModel\r\nname:CharField, unique\r\nchapter:ForeignKey\r\n```\r\n\r\n**example:** from questions.xlsx\r\n\r\nA,B,C,D are 4 choice objects, \r\nquestion has a FK field to section. but on my excel file i write name (unique) there, not id/pk. it finds the 'section' from 'chapter' and it from 'part'.\r\npart > chapter > section  --> names are unique\r\n\r\n\r\nquestion | A | B | C | D | correct | part | chapter | section\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\nName Something That Can Be Spoiled | Milk | Food | Kids | A Surprise | A | math | calculus | differential\r\nWhat Reason Would Most People Give For Why They Drink Coffee? | Stay Awake | Like The Taste | Energy | Addicted | B | math | calculus | integral\r\nName A Drink You Get At A Cafe That Most People Can\u2019t Make At Home | Latte | Cappuccino | Mocha | Americano | C | math | calculus | integral\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1014", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1014/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1014/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1014", "id": 504346202, "node_id": "MDU6SXNzdWU1MDQzNDYyMDI=", "number": 1014, "title": "Problem with ImportMixin deletion (version 1.2.0)", "user": {"login": "ewh", "id": 330933, "node_id": "MDQ6VXNlcjMzMDkzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/330933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ewh", "html_url": "https://github.com/ewh", "followers_url": "https://api.github.com/users/ewh/followers", "following_url": "https://api.github.com/users/ewh/following{/other_user}", "gists_url": "https://api.github.com/users/ewh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ewh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ewh/subscriptions", "organizations_url": "https://api.github.com/users/ewh/orgs", "repos_url": "https://api.github.com/users/ewh/repos", "events_url": "https://api.github.com/users/ewh/events{/privacy}", "received_events_url": "https://api.github.com/users/ewh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T00:35:32Z", "updated_at": "2020-04-20T01:01:12Z", "closed_at": "2020-04-20T01:01:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm performing a row delete using `ImportMixin`. The deletion happens correctly in the DB. After the actual row deletion, `ImportMixin.generate_log_entries` is called. This calls `LogEntry.objects.log_action` for each row result.\r\n\r\nThe deletion is done by `Resource.import_row`. In the case of deletion (`if self.for_delete(row, instance)`), the following values are not set:\r\n```python\r\nrow_result.object_id\r\nrow_result.object_repr\r\n```\r\n\r\nThis crashes `LogEntry.objects.log_action` because these 2 fields are expected. Shouldn't these fields be getting set in `Resource.import_row` during a deletion operation? (It seems like these values only get set when _not_ doing a deletion.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1012", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1012/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1012/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1012/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1012", "id": 503995856, "node_id": "MDU6SXNzdWU1MDM5OTU4NTY=", "number": 1012, "title": "0.4.2 no longer supports Python2.7", "user": {"login": "m3talstorm", "id": 462937, "node_id": "MDQ6VXNlcjQ2MjkzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/462937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3talstorm", "html_url": "https://github.com/m3talstorm", "followers_url": "https://api.github.com/users/m3talstorm/followers", "following_url": "https://api.github.com/users/m3talstorm/following{/other_user}", "gists_url": "https://api.github.com/users/m3talstorm/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3talstorm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3talstorm/subscriptions", "organizations_url": "https://api.github.com/users/m3talstorm/orgs", "repos_url": "https://api.github.com/users/m3talstorm/repos", "events_url": "https://api.github.com/users/m3talstorm/events{/privacy}", "received_events_url": "https://api.github.com/users/m3talstorm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-08T11:49:14Z", "updated_at": "2019-10-09T06:45:10Z", "closed_at": "2019-10-08T14:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\ndjango-import-export 0.4.2 \r\n\r\nhttps://github.com/django-import-export/django-import-export/blob/0.4.2/requirements/base.txt\r\n\r\n- Requires the latest `tablib` \r\n\r\nhttps://github.com/jazzband/tablib/blob/master/requirements.txt\r\n\r\n- Requires `openpyxl>=2.4.0` \r\n\r\nWhich grabs the latest version of openpyxl which is now `3.0.0` (released 25th sept 2019 - https://pypi.org/project/openpyxl/#history) which no longer supports Python 2.7\r\n\r\nSo 0.4.2 no longer supports Python 2.7 as per the README (https://github.com/django-import-export/django-import-export/blob/0.4.2/README.rst)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1006", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1006/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1006/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1006/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1006", "id": 501512773, "node_id": "MDU6SXNzdWU1MDE1MTI3NzM=", "number": 1006, "title": "Format field is always shown on Django 2.2", "user": {"login": "beruic", "id": 724716, "node_id": "MDQ6VXNlcjcyNDcxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/724716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beruic", "html_url": "https://github.com/beruic", "followers_url": "https://api.github.com/users/beruic/followers", "following_url": "https://api.github.com/users/beruic/following{/other_user}", "gists_url": "https://api.github.com/users/beruic/gists{/gist_id}", "starred_url": "https://api.github.com/users/beruic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beruic/subscriptions", "organizations_url": "https://api.github.com/users/beruic/orgs", "repos_url": "https://api.github.com/users/beruic/repos", "events_url": "https://api.github.com/users/beruic/events{/privacy}", "received_events_url": "https://api.github.com/users/beruic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-02T14:07:16Z", "updated_at": "2019-12-04T12:15:28Z", "closed_at": "2019-12-04T12:15:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After upgrading to Django 2.2, the `Format` field is always shown in admins where I inherit from `ImportExportActionModelAdmin`, even thougt the export action is not selected. Here is a screenshot:\r\n![Sk\u00e6rmbillede fra 2019-10-02 16-05-52](https://user-images.githubusercontent.com/724716/66051066-9904dd80-e52e-11e9-94e4-128178bb9aa3.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1005", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1005/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1005/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1005", "id": 499581596, "node_id": "MDU6SXNzdWU0OTk1ODE1OTY=", "number": 1005, "title": "Remove empty rows automatically from import data sheet", "user": {"login": "dxp168", "id": 47825803, "node_id": "MDQ6VXNlcjQ3ODI1ODAz", "avatar_url": "https://avatars1.githubusercontent.com/u/47825803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dxp168", "html_url": "https://github.com/dxp168", "followers_url": "https://api.github.com/users/dxp168/followers", "following_url": "https://api.github.com/users/dxp168/following{/other_user}", "gists_url": "https://api.github.com/users/dxp168/gists{/gist_id}", "starred_url": "https://api.github.com/users/dxp168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dxp168/subscriptions", "organizations_url": "https://api.github.com/users/dxp168/orgs", "repos_url": "https://api.github.com/users/dxp168/repos", "events_url": "https://api.github.com/users/dxp168/events{/privacy}", "received_events_url": "https://api.github.com/users/dxp168/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-27T18:16:30Z", "updated_at": "2020-04-09T16:04:12Z", "closed_at": "2020-04-09T16:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Often time in a spreadsheet, empty rows are not noticeable and viewable in MS Excel.  These empty rows cause a problem during the IMPORT from the admin web form.\r\n\r\nAt current, these empty rows are not filtered out in the dataset, then `dry_run` to the database will cause the database validation error, such as `no null` violation, etc. While after database rejection, the problem should be stopped, instead of continuing to repeat the dry run, finally `timed out`.\r\n\r\nSuggestions to fix this problem:\r\n- truncate empty rows of dataset in the `resource.import_data`\r\n- validate against the Model in the `ImportMixin.import_action` before start `resource.import_data`\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1004", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1004/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1004/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1004/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1004", "id": 498067623, "node_id": "MDU6SXNzdWU0OTgwNjc2MjM=", "number": 1004, "title": "ModuleNotFoundError: No module named 'import_exporthome'", "user": {"login": "AlcindoSchleder", "id": 37807590, "node_id": "MDQ6VXNlcjM3ODA3NTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/37807590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlcindoSchleder", "html_url": "https://github.com/AlcindoSchleder", "followers_url": "https://api.github.com/users/AlcindoSchleder/followers", "following_url": "https://api.github.com/users/AlcindoSchleder/following{/other_user}", "gists_url": "https://api.github.com/users/AlcindoSchleder/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlcindoSchleder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlcindoSchleder/subscriptions", "organizations_url": "https://api.github.com/users/AlcindoSchleder/orgs", "repos_url": "https://api.github.com/users/AlcindoSchleder/repos", "events_url": "https://api.github.com/users/AlcindoSchleder/events{/privacy}", "received_events_url": "https://api.github.com/users/AlcindoSchleder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-25T06:04:45Z", "updated_at": "2019-09-26T07:45:02Z", "closed_at": "2019-09-25T12:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am install django-import-export but when execute runserver I receive this error:\r\n```\r\nWatching for file changes with StatReloader\r\nException in thread django-main-thread:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib64/python3.7/threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/utils/autoreload.py\", line 54, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/utils/autoreload.py\", line 77, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/core/management/__init__.py\", line 337, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/utils/autoreload.py\", line 54, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/apps/registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/opt/python/apis/icity-tax/venv/lib64/python3.7/site-packages/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/usr/lib64/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 965, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'import_exporthome'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1001", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1001/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1001/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1001", "id": 494810746, "node_id": "MDU6SXNzdWU0OTQ4MTA3NDY=", "number": 1001, "title": "Feature request: Display counts on preview", "user": {"login": "beruic", "id": 724716, "node_id": "MDQ6VXNlcjcyNDcxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/724716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beruic", "html_url": "https://github.com/beruic", "followers_url": "https://api.github.com/users/beruic/followers", "following_url": "https://api.github.com/users/beruic/following{/other_user}", "gists_url": "https://api.github.com/users/beruic/gists{/gist_id}", "starred_url": "https://api.github.com/users/beruic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beruic/subscriptions", "organizations_url": "https://api.github.com/users/beruic/orgs", "repos_url": "https://api.github.com/users/beruic/repos", "events_url": "https://api.github.com/users/beruic/events{/privacy}", "received_events_url": "https://api.github.com/users/beruic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T19:31:35Z", "updated_at": "2020-03-29T20:48:31Z", "closed_at": "2020-03-29T20:48:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes it could be very practical to have counts for how many new and updated (or ignored imports as per #972) entries there are respectively in an import. I frequently use these counts (by pressing Ctrl+F and searching for \"new\" or \"updated\" in the browser) as a checksum, to verify that I have generated my imports correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1000", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1000/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/1000/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/1000", "id": 493439087, "node_id": "MDU6SXNzdWU0OTM0MzkwODc=", "number": 1000, "title": "Meta Class Overriding is not working ", "user": {"login": "farhankn", "id": 6595704, "node_id": "MDQ6VXNlcjY1OTU3MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6595704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farhankn", "html_url": "https://github.com/farhankn", "followers_url": "https://api.github.com/users/farhankn/followers", "following_url": "https://api.github.com/users/farhankn/following{/other_user}", "gists_url": "https://api.github.com/users/farhankn/gists{/gist_id}", "starred_url": "https://api.github.com/users/farhankn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farhankn/subscriptions", "organizations_url": "https://api.github.com/users/farhankn/orgs", "repos_url": "https://api.github.com/users/farhankn/repos", "events_url": "https://api.github.com/users/farhankn/events{/privacy}", "received_events_url": "https://api.github.com/users/farhankn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-13T17:31:43Z", "updated_at": "2019-09-16T08:37:43Z", "closed_at": "2019-09-16T08:37:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nI'm using Django 2.1, and Admin Import to import data,\r\n\r\nIn **admin.py**\r\n```\r\nclass app_detailsResource(resources.ModelResource):\r\n    class Meta:\r\n        model = app_details\r\n        import_id_fields = ['appId_date']\r\n        skip_unchanged = True\r\n        report_skipped = True\r\n```\r\n\r\nThe application throws error and it checks for id field. \r\nI have tried, adding an empty id field. \r\n\r\nWhen I am trying to make changes in /site-packages/import-export/resources.py it works.\r\nCould you please let me know what the error is?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/999", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/999/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/999/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/999/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/999", "id": 492428393, "node_id": "MDU6SXNzdWU0OTI0MjgzOTM=", "number": 999, "title": "Default value set to ManyToManyField is not taken", "user": {"login": "SebaRossi94", "id": 37594331, "node_id": "MDQ6VXNlcjM3NTk0MzMx", "avatar_url": "https://avatars1.githubusercontent.com/u/37594331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SebaRossi94", "html_url": "https://github.com/SebaRossi94", "followers_url": "https://api.github.com/users/SebaRossi94/followers", "following_url": "https://api.github.com/users/SebaRossi94/following{/other_user}", "gists_url": "https://api.github.com/users/SebaRossi94/gists{/gist_id}", "starred_url": "https://api.github.com/users/SebaRossi94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SebaRossi94/subscriptions", "organizations_url": "https://api.github.com/users/SebaRossi94/orgs", "repos_url": "https://api.github.com/users/SebaRossi94/repos", "events_url": "https://api.github.com/users/SebaRossi94/events{/privacy}", "received_events_url": "https://api.github.com/users/SebaRossi94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-11T19:36:38Z", "updated_at": "2020-03-23T21:04:59Z", "closed_at": "2020-03-23T21:04:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there i'm having an issue setting a default value to a ManyToMany field when importing from a file. If i leave the field blank it imports it with no value even with the model default value set to \"Basico\". Only after importing it succesfully when i enter some data i uploaded and try to save it with no value selected it reports an error\r\n`productos = fields.Field(\r\n    column_name = \"Productos\",\r\n    attribute = \"productos\",\r\n    widget = ManyToManyWidget(model = Producto, field = \"Name\"),\r\n    default = (Producto.objects.get(Name = \"Basico\"))\r\n    )`\r\nI don't know if the problem is the type i'm setting as a default variable or what. Please if anyone could help me i would appriciate that. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/998", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/998/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/998/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/998/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/998", "id": 492109039, "node_id": "MDU6SXNzdWU0OTIxMDkwMzk=", "number": 998, "title": "Fields from Import form to dataset", "user": {"login": "soulraven", "id": 1303303, "node_id": "MDQ6VXNlcjEzMDMzMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1303303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soulraven", "html_url": "https://github.com/soulraven", "followers_url": "https://api.github.com/users/soulraven/followers", "following_url": "https://api.github.com/users/soulraven/following{/other_user}", "gists_url": "https://api.github.com/users/soulraven/gists{/gist_id}", "starred_url": "https://api.github.com/users/soulraven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soulraven/subscriptions", "organizations_url": "https://api.github.com/users/soulraven/orgs", "repos_url": "https://api.github.com/users/soulraven/repos", "events_url": "https://api.github.com/users/soulraven/events{/privacy}", "received_events_url": "https://api.github.com/users/soulraven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-11T09:05:11Z", "updated_at": "2020-03-23T11:05:01Z", "closed_at": "2020-03-23T11:05:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "is impossible to add additional fields from import form on the import dataset.\r\n\r\nno method is public for such type of operation. only because the form object is not visible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/997", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/997/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/997/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/997/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/997", "id": 491574354, "node_id": "MDU6SXNzdWU0OTE1NzQzNTQ=", "number": 997, "title": "Cannot get value from field", "user": {"login": "chaule97", "id": 32189890, "node_id": "MDQ6VXNlcjMyMTg5ODkw", "avatar_url": "https://avatars3.githubusercontent.com/u/32189890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaule97", "html_url": "https://github.com/chaule97", "followers_url": "https://api.github.com/users/chaule97/followers", "following_url": "https://api.github.com/users/chaule97/following{/other_user}", "gists_url": "https://api.github.com/users/chaule97/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaule97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaule97/subscriptions", "organizations_url": "https://api.github.com/users/chaule97/orgs", "repos_url": "https://api.github.com/users/chaule97/repos", "events_url": "https://api.github.com/users/chaule97/events{/privacy}", "received_events_url": "https://api.github.com/users/chaule97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T10:02:25Z", "updated_at": "2020-03-22T11:15:50Z", "closed_at": "2020-03-22T11:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a resource\r\n```\r\nclass ClientResource(resources.ModelResource):\r\n    name = Field(column_name='Name')\r\n    branch_name = Field(column_name='Office/Branch')\r\n    mifos_id = Field(attribute='mifos_id', column_name='Client Account No.')\r\n    gender = Field(column_name='Gender')\r\n    mobile = Field(column_name='Mobile')\r\n    date_of_birth = Field(attribute='date_of_birth', column_name='Date of Birth')\r\n    national_id = Field(attribute='national_id', column_name='External Id')\r\n\r\n    def save_instance(self, instance, using_transactions=True, dry_run=False):\r\n        branch_name = self.branch_name.get_value()[2:]\r\n       ....\r\n```\r\nWhen i run my code. The django-admin show: \r\n```\r\nLine number: 1 - 'ClientResource' object has no attribute 'branch_name'\r\nHead Office, 329, test test test, female, 987676767, Active, 2016-04-22 00:00:00, , 2016-04-22 00:00:00\r\nTraceback (most recent call last):\r\nFile \"E:\\env\\lib\\site-packages\\import_export\\resources.py\", line 522, in import_row\r\nself.save_instance(instance, using_transactions, dry_run)\r\nFile \"E:\\camdonhanh-server\\Client\\admin.py\", line 22, in save_instance\r\nbranch_name = self.branch_name.get_value()[2:]\r\nAttributeError: 'ClientResource' object has no attribute 'branch_name'\r\n```\r\n\r\nWhy Resource Object cannot get value from field? Thanks you for answer", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/993", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/993/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/993/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/993", "id": 489857736, "node_id": "MDU6SXNzdWU0ODk4NTc3MzY=", "number": 993, "title": "Usability of ImportMixin", "user": {"login": "chrismerck", "id": 628921, "node_id": "MDQ6VXNlcjYyODkyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/628921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrismerck", "html_url": "https://github.com/chrismerck", "followers_url": "https://api.github.com/users/chrismerck/followers", "following_url": "https://api.github.com/users/chrismerck/following{/other_user}", "gists_url": "https://api.github.com/users/chrismerck/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrismerck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrismerck/subscriptions", "organizations_url": "https://api.github.com/users/chrismerck/orgs", "repos_url": "https://api.github.com/users/chrismerck/repos", "events_url": "https://api.github.com/users/chrismerck/events{/privacy}", "received_events_url": "https://api.github.com/users/chrismerck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T16:03:17Z", "updated_at": "2019-09-05T21:48:16Z", "closed_at": "2019-09-05T21:48:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Latest docs describe an amazing `ImportMixin` where we can set specific fields for all rows. But it seems that it is not documented and only partially implemented in `v1.2.0`. Specifically, `get_form_kwargs` is never called.\r\n\r\nHow baked is `ImportMixin`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/991", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/991/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/991/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/991", "id": 487531806, "node_id": "MDU6SXNzdWU0ODc1MzE4MDY=", "number": 991, "title": "i'm having the same issue, it seems like the meta class option import_id_fields doesn't work when you give it a new value. it still using the default one 'id'.", "user": {"login": "cgajagon", "id": 28692193, "node_id": "MDQ6VXNlcjI4NjkyMTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/28692193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgajagon", "html_url": "https://github.com/cgajagon", "followers_url": "https://api.github.com/users/cgajagon/followers", "following_url": "https://api.github.com/users/cgajagon/following{/other_user}", "gists_url": "https://api.github.com/users/cgajagon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgajagon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgajagon/subscriptions", "organizations_url": "https://api.github.com/users/cgajagon/orgs", "repos_url": "https://api.github.com/users/cgajagon/repos", "events_url": "https://api.github.com/users/cgajagon/events{/privacy}", "received_events_url": "https://api.github.com/users/cgajagon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-30T15:02:47Z", "updated_at": "2020-02-13T03:17:45Z", "closed_at": "2020-02-13T03:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm having the same issue, it seems like the meta class option import_id_fields doesn't work when you give it a new value. it still using the default one 'id'. \r\n\r\neventually, i have to change the xls file to add a column 'id' in header then import works \r\n\r\n```\r\nclass SponsorBlockResource(resources.ModelResource):\r\n  class Meta:\r\n        model = SponsorBlock\r\n        exclude = ('id', )\r\n        import_id_fields = ('name',)\r\n        skip_unchanged = True\r\n        fields = ['name','block_time',]\r\n```\r\n\r\n_Originally posted by @jwzh222 in https://github.com/django-import-export/django-import-export/issues/570#issuecomment-278223071_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/990", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/990/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/990/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/990", "id": 484836212, "node_id": "MDU6SXNzdWU0ODQ4MzYyMTI=", "number": 990, "title": "How to use permissions?", "user": {"login": "FelipeVelasquez1802", "id": 39866404, "node_id": "MDQ6VXNlcjM5ODY2NDA0", "avatar_url": "https://avatars3.githubusercontent.com/u/39866404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelipeVelasquez1802", "html_url": "https://github.com/FelipeVelasquez1802", "followers_url": "https://api.github.com/users/FelipeVelasquez1802/followers", "following_url": "https://api.github.com/users/FelipeVelasquez1802/following{/other_user}", "gists_url": "https://api.github.com/users/FelipeVelasquez1802/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelipeVelasquez1802/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelipeVelasquez1802/subscriptions", "organizations_url": "https://api.github.com/users/FelipeVelasquez1802/orgs", "repos_url": "https://api.github.com/users/FelipeVelasquez1802/repos", "events_url": "https://api.github.com/users/FelipeVelasquez1802/events{/privacy}", "received_events_url": "https://api.github.com/users/FelipeVelasquez1802/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-24T15:50:01Z", "updated_at": "2019-12-17T20:22:37Z", "closed_at": "2019-12-17T20:22:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do not understand how I should implement the global variable IMPORT_EXPORT_EXPORT_PERMISSION_CODE to avoid the \"export\" button to groups that do not have permissions. Can you give an example, please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/989", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/989/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/989/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/989/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/989", "id": 483889868, "node_id": "MDU6SXNzdWU0ODM4ODk4Njg=", "number": 989, "title": "export button in Admin directly exporting the file in a given format", "user": {"login": "sdementen", "id": 1304950, "node_id": "MDQ6VXNlcjEzMDQ5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdementen", "html_url": "https://github.com/sdementen", "followers_url": "https://api.github.com/users/sdementen/followers", "following_url": "https://api.github.com/users/sdementen/following{/other_user}", "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions", "organizations_url": "https://api.github.com/users/sdementen/orgs", "repos_url": "https://api.github.com/users/sdementen/repos", "events_url": "https://api.github.com/users/sdementen/events{/privacy}", "received_events_url": "https://api.github.com/users/sdementen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-22T09:55:24Z", "updated_at": "2020-03-20T11:41:07Z", "closed_at": "2020-03-17T02:11:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have the export button exporting directly in a given format when the `get_export_formats` returns a list with one item (or maybe return not a list but directly the format) ?\r\ni.e, in the case below, clicking the Export button would immediately download the file (instead of showing the extra screen when one has to choose a format)\r\n```\r\n    def get_export_formats(self):\r\n        return [import_export.formats.base_formats.XLSX]\r\n```\r\nmaybe there is already an option for that but I could not find it in the docs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/988", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/988/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/988/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/988", "id": 481730310, "node_id": "MDU6SXNzdWU0ODE3MzAzMTA=", "number": 988, "title": "Django 3 Error", "user": {"login": "nyssance", "id": 1937955, "node_id": "MDQ6VXNlcjE5Mzc5NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1937955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyssance", "html_url": "https://github.com/nyssance", "followers_url": "https://api.github.com/users/nyssance/followers", "following_url": "https://api.github.com/users/nyssance/following{/other_user}", "gists_url": "https://api.github.com/users/nyssance/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyssance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyssance/subscriptions", "organizations_url": "https://api.github.com/users/nyssance/orgs", "repos_url": "https://api.github.com/users/nyssance/repos", "events_url": "https://api.github.com/users/nyssance/events{/privacy}", "received_events_url": "https://api.github.com/users/nyssance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-16T18:26:51Z", "updated_at": "2019-12-04T16:02:26Z", "closed_at": "2019-12-04T16:02:26Z", "author_association": "NONE", "active_lock_reason": null, "body": " from django.utils import six\r\nImportError: cannot import name 'six' from 'django.utils' ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/987", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/987/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/987/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/987/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/987", "id": 480730742, "node_id": "MDU6SXNzdWU0ODA3MzA3NDI=", "number": 987, "title": "Doesn't seem to work with django-object-tool", "user": {"login": "alexei", "id": 96283, "node_id": "MDQ6VXNlcjk2Mjgz", "avatar_url": "https://avatars2.githubusercontent.com/u/96283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexei", "html_url": "https://github.com/alexei", "followers_url": "https://api.github.com/users/alexei/followers", "following_url": "https://api.github.com/users/alexei/following{/other_user}", "gists_url": "https://api.github.com/users/alexei/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexei/subscriptions", "organizations_url": "https://api.github.com/users/alexei/orgs", "repos_url": "https://api.github.com/users/alexei/repos", "events_url": "https://api.github.com/users/alexei/events{/privacy}", "received_events_url": "https://api.github.com/users/alexei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T15:01:17Z", "updated_at": "2019-08-19T06:18:11Z", "closed_at": "2019-08-19T06:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using both [django-import-export/django-import-export](https://github.com/django-import-export/django-import-export) and [Xavier-Lam/django-object-tool](https://github.com/Xavier-Lam/django-object-tool) in our project and it appears we can only enable one or the other.\r\n\r\nWe have a model admin that inherits from `import_export.admin.ExportActionModelAdmin` and overrides `change_list_template = ExportMixin.change_list_template` (it appears `ExportActionModelAdmin` enables the action but disables the \"Export\" button). The end result is the object tool doesn't show up, unless we reset `change_list_template` to the original value.\r\n\r\nPerhaps django-import-export could use django-object-tool to display the \"Export\" button?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/986", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/986/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/986/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/986", "id": 480696011, "node_id": "MDU6SXNzdWU0ODA2OTYwMTE=", "number": 986, "title": "KeyError: 'n' while importing CSV", "user": {"login": "Bhupesh-V", "id": 34342551, "node_id": "MDQ6VXNlcjM0MzQyNTUx", "avatar_url": "https://avatars0.githubusercontent.com/u/34342551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bhupesh-V", "html_url": "https://github.com/Bhupesh-V", "followers_url": "https://api.github.com/users/Bhupesh-V/followers", "following_url": "https://api.github.com/users/Bhupesh-V/following{/other_user}", "gists_url": "https://api.github.com/users/Bhupesh-V/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bhupesh-V/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bhupesh-V/subscriptions", "organizations_url": "https://api.github.com/users/Bhupesh-V/orgs", "repos_url": "https://api.github.com/users/Bhupesh-V/repos", "events_url": "https://api.github.com/users/Bhupesh-V/events{/privacy}", "received_events_url": "https://api.github.com/users/Bhupesh-V/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T13:59:44Z", "updated_at": "2019-08-14T14:08:08Z", "closed_at": "2019-08-14T14:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue sounds similar to the u'id' problem but it's behaving differently .\r\nI have the following resource\r\n```python\r\nclass TagResource(resources.ModelResource):\r\n    class Meta:\r\n    \tmodel = tag\r\n    \texclude = ('id',)\r\n    \texport_order = ('name', 'description', 'created_date')\r\n    \timport_id_fields = ('name')\r\n```\r\nAnd I am importing the stuff like this\r\n```csv\r\nid,name,description\r\n,go,The GoLang Programming Language\r\n```\r\nThe following error is generated\r\n```bash\r\nLine number: 1 - 'n'\r\ngo, The GoLang Programming Language\r\n\r\nTraceback (most recent call last):\r\nFile \"/home/bhupesh/Desktop/tutorialdb-test/lib/python3.6/site-packages/import_export/resources.py\", line 492, in import_row\r\ninstance, new = self.get_or_init_instance(instance_loader, row)\r\nFile \"/home/bhupesh/Desktop/tutorialdb-test/lib/python3.6/site-packages/import_export/resources.py\", line 269, in get_or_init_instance\r\ninstance = self.get_instance(instance_loader, row)\r\nFile \"/home/bhupesh/Desktop/tutorialdb-test/lib/python3.6/site-packages/import_export/resources.py\", line 263, in get_instance\r\nreturn instance_loader.get_instance(row)\r\nFile \"/home/bhupesh/Desktop/tutorialdb-test/lib/python3.6/site-packages/import_export/instance_loaders.py\", line 31, in get_instance\r\nfield = self.resource.fields[key]\r\nKeyError: 'n'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/983", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/983/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/983/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/983", "id": 479801737, "node_id": "MDU6SXNzdWU0Nzk4MDE3Mzc=", "number": 983, "title": "How to change cell width for exported Excel data?", "user": {"login": "caiorml", "id": 53576456, "node_id": "MDQ6VXNlcjUzNTc2NDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/53576456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caiorml", "html_url": "https://github.com/caiorml", "followers_url": "https://api.github.com/users/caiorml/followers", "following_url": "https://api.github.com/users/caiorml/following{/other_user}", "gists_url": "https://api.github.com/users/caiorml/gists{/gist_id}", "starred_url": "https://api.github.com/users/caiorml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caiorml/subscriptions", "organizations_url": "https://api.github.com/users/caiorml/orgs", "repos_url": "https://api.github.com/users/caiorml/repos", "events_url": "https://api.github.com/users/caiorml/events{/privacy}", "received_events_url": "https://api.github.com/users/caiorml/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-12T19:03:30Z", "updated_at": "2020-02-22T19:41:04Z", "closed_at": "2020-02-22T19:41:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to figure out how I would change the column cell width in my exported Excel data. Is there a way to set the cell width to auto-size or stretch to the size of the data, so that if I export a long piece of information, it doesn't get split up into multiple narrow columns, but shown as one wide column with the full text displayed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/982", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/982/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/982/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/982", "id": 476469702, "node_id": "MDU6SXNzdWU0NzY0Njk3MDI=", "number": 982, "title": "Add Meta fields dynamically", "user": {"login": "brianmoran", "id": 5261397, "node_id": "MDQ6VXNlcjUyNjEzOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5261397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmoran", "html_url": "https://github.com/brianmoran", "followers_url": "https://api.github.com/users/brianmoran/followers", "following_url": "https://api.github.com/users/brianmoran/following{/other_user}", "gists_url": "https://api.github.com/users/brianmoran/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmoran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmoran/subscriptions", "organizations_url": "https://api.github.com/users/brianmoran/orgs", "repos_url": "https://api.github.com/users/brianmoran/repos", "events_url": "https://api.github.com/users/brianmoran/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmoran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-03T16:55:16Z", "updated_at": "2020-02-13T18:03:33Z", "closed_at": "2020-02-13T18:03:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have use-case where I need to set the Meta fields dynamically. Since they are a tuple, they are immutable and cannot be changed. Is there a workaround to set fields? \r\n\r\n```\r\npr = ProductResource()\r\n# meta fields are set to None\r\npr._meta.fields = ('product_id', 'sites',) \r\nprint(pr.export(pr._meta.model.objects.filter(pk__in=[\"AN-43859396-000\"])))\r\n# all fields are printed out\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/981", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/981/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/981/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/981", "id": 476403514, "node_id": "MDU6SXNzdWU0NzY0MDM1MTQ=", "number": 981, "title": "how to import list of emails separated by semicolon using django import export", "user": {"login": "virtualdvid", "id": 33104726, "node_id": "MDQ6VXNlcjMzMTA0NzI2", "avatar_url": "https://avatars0.githubusercontent.com/u/33104726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/virtualdvid", "html_url": "https://github.com/virtualdvid", "followers_url": "https://api.github.com/users/virtualdvid/followers", "following_url": "https://api.github.com/users/virtualdvid/following{/other_user}", "gists_url": "https://api.github.com/users/virtualdvid/gists{/gist_id}", "starred_url": "https://api.github.com/users/virtualdvid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/virtualdvid/subscriptions", "organizations_url": "https://api.github.com/users/virtualdvid/orgs", "repos_url": "https://api.github.com/users/virtualdvid/repos", "events_url": "https://api.github.com/users/virtualdvid/events{/privacy}", "received_events_url": "https://api.github.com/users/virtualdvid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-03T01:39:23Z", "updated_at": "2020-02-13T03:24:38Z", "closed_at": "2020-02-13T03:24:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wondering the easiest way to import a csv file that imports info into two tables using `django import export` ex:\r\n\r\ncsv file:  \r\n\r\n```\r\nid,field1,primary,CC,alert\r\n1,my_value,email1@e.com;email2@e.com,email3@e.com,email4@e.com;email5@e.com\r\n```\r\n\r\n**Desired import**\r\n\r\nfoo model:\r\n```\r\nid    field1\r\n1     my_value\r\n```\r\nemail model:\r\n```\r\nid  type       email_address    foo_id\r\n1   primary    email1@e.com     1\r\n2   primary    email2@e.com     1\r\n3   CC         email3@e.com     1\r\n4   alert      email4@e.com     1\r\n5   alert      email5@e.com     1\r\n```\r\nI already used `ForeingKey` and `ManytoMany` widgets to export and import other data into single tables. But I don't have ideas for this particular request. I'm thinking to override some methods like `before_import`. What should be the best approach? Any help will be appreciate :) Thanks!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/978", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/978/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/978/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/978/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/978", "id": 473733791, "node_id": "MDU6SXNzdWU0NzM3MzM3OTE=", "number": 978, "title": "Passing two fields for one model field", "user": {"login": "cnpants", "id": 35827302, "node_id": "MDQ6VXNlcjM1ODI3MzAy", "avatar_url": "https://avatars0.githubusercontent.com/u/35827302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnpants", "html_url": "https://github.com/cnpants", "followers_url": "https://api.github.com/users/cnpants/followers", "following_url": "https://api.github.com/users/cnpants/following{/other_user}", "gists_url": "https://api.github.com/users/cnpants/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnpants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnpants/subscriptions", "organizations_url": "https://api.github.com/users/cnpants/orgs", "repos_url": "https://api.github.com/users/cnpants/repos", "events_url": "https://api.github.com/users/cnpants/events{/privacy}", "received_events_url": "https://api.github.com/users/cnpants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-28T11:30:50Z", "updated_at": "2019-08-14T02:32:50Z", "closed_at": "2019-08-14T02:32:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I am trying to import a csv with headers: id, name, latitude, longitude.\r\nI want to pass the fields latitude and longitude to a `django.contrib.gis.geos.Point` field.\r\n\r\nHere is my model:\r\n```\r\n# models.py\r\nfrom django.contrib.gis.db import models\r\nclass Location(models.Model):\r\n    name = models.CharField(max_length=200)\r\n    geom = models.PointField(null=True, blank=True)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n```\r\nHere is my admin:\r\n```\r\n# admin.py\r\nfrom .models import Location\r\nfrom import_export import resources\r\nfrom import_export.admin import ImportExportModelAdmin\r\nfrom django.contrib.gis.geos import Point\r\n\r\nclass LocationResource(resources.ModelResource):\r\n    geom = Field()\r\n    latitude = Field()\r\n    longitude = Field()\r\n\r\n    class Meta:\r\n        model = Location\r\n        fields = ('id','name', 'latitude', 'longitude')\r\n        exclude = ('geom')\r\n        export_order = ('id', 'name', 'latitude', 'longitude')\r\n\r\n    def dehydrate_geom(self, data):\r\n        return Point(data.longitude, data.longitude)\r\n\r\nclass LocationAdmin(ImportExportModelAdmin):\r\n    resource_class = LocationResource\r\n\r\nadmin.site.register(Location, LocationAdmin)\r\n```\r\n\r\nI want to save the data as:\r\n```\r\nfrom django.contrib.gis.geos import Point\r\nLocation(name=instance.name, geom=Point(instance.longitude, instance.latitude)\r\n```\r\nHere is an example csv data:\r\n```\r\nid,name,longitude,latitude\r\n1,Naga,120.18,18.20\r\n```\r\nI was just trying with `dehydrate_` but to no success\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/977", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/977/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/977/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/977/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/977", "id": 473578619, "node_id": "MDU6SXNzdWU0NzM1Nzg2MTk=", "number": 977, "title": "How to hide tracebacks for users when an import csv fail using django import export library", "user": {"login": "virtualdvid", "id": 33104726, "node_id": "MDQ6VXNlcjMzMTA0NzI2", "avatar_url": "https://avatars0.githubusercontent.com/u/33104726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/virtualdvid", "html_url": "https://github.com/virtualdvid", "followers_url": "https://api.github.com/users/virtualdvid/followers", "following_url": "https://api.github.com/users/virtualdvid/following{/other_user}", "gists_url": "https://api.github.com/users/virtualdvid/gists{/gist_id}", "starred_url": "https://api.github.com/users/virtualdvid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/virtualdvid/subscriptions", "organizations_url": "https://api.github.com/users/virtualdvid/orgs", "repos_url": "https://api.github.com/users/virtualdvid/repos", "events_url": "https://api.github.com/users/virtualdvid/events{/privacy}", "received_events_url": "https://api.github.com/users/virtualdvid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-27T00:32:54Z", "updated_at": "2020-02-07T03:13:15Z", "closed_at": "2020-02-07T03:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have implemented successfully import and export in my app. The only thing that I can't make to work is to hide the tracebacks for users when an import fails.\r\n\r\nI have tried so far:\r\n\r\n`raise_errors = False` in admin.py  \r\n`.traceback{display:none}` in import.css  \r\n`DEBUG = False` in settings.py\r\n\r\nI put wrong data starting with the column name on purpose in the csv file and I always get this per row:\r\n\r\n    \u00a7  Line number: 1 - \"Column 'my_error' not found in dataset. Available columns are: ['column1', 'column2', 'my_err', 'column3']\"\r\n    \r\n    row1data1, row1data2, row1data3, 0\r\n    \r\n    Traceback (most recent call last):\r\n    File \"C:\\Users\\my_user\\.virtualenvs\\my_project-gu-pxuzP\\lib\\site-packages\\import_export\\fields.py\", line 63, in clean\r\n    value = data[self.column_name]\r\n    KeyError: 'my_error'\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n    File \"C:\\Users\\my_user\\.virtualenvs\\my_project-gu-pxuzP\\lib\\site-packages\\import_export\\resources.py\", line 492, in import_row\r\n    instance, new = self.get_or_init_instance(instance_loader, row)\r\n    File \"C:\\Users\\my_user\\.virtualenvs\\my_project-gu-pxuzP\\lib\\site-packages\\import_export\\resources.py\", line 269, in get_or_init_instance\r\n    instance = self.get_instance(instance_loader, row)\r\n    File \"C:\\Users\\my_user\\.virtualenvs\\my_project-gu-pxuzP\\lib\\site-packages\\import_export\\resources.py\", line 263, in get_instance\r\n    return instance_loader.get_instance(row)\r\n    File \"C:\\Users\\my_user\\.virtualenvs\\my_project-gu-pxuzP\\lib\\site-packages\\import_export\\instance_loaders.py\", line 32, in get_instance\r\n    params[field.attribute] = field.clean(row)\r\n    File \"C:\\Users\\my_user\\.virtualenvs\\my_project-gu-pxuzP\\lib\\site-packages\\import_export\\fields.py\", line 66, in clean\r\n    \"columns are: %s\" % (self.column_name, list(data)))\r\n    KeyError: \"Column 'my_erro' not found in dataset. Available columns are: ['column1', 'column2', 'my_error', 'column4']\"\r\n\r\nI also overrode the clean method in `fields.Field`:\r\n\r\n```python\r\nclass CleanField(fields.Field):\r\n    def clean(self, data):\r\n        \"\"\"\r\n        Translates the value stored in the imported datasource to an\r\n        appropriate Python object and returns it.\r\n        \"\"\"\r\n        try:\r\n            value = data[self.column_name]\r\n        except KeyError:\r\n            message = (\r\n                f\"Column '{self.column_name}' not found in dataset. Available \"\r\n                f\"columns are: {list(data)}\"\r\n            )\r\n            logger.exception(KeyError(message))\r\n            logger.debug(message)\r\n            raise KeyError(message) from None\r\n\r\n        # If ValueError is raised here, import_obj() will handle it\r\n\r\n        try:\r\n            value = self.widget.clean(value, row=data)\r\n            return value\r\n        except UnboundLocalError as value_error:\r\n            logger.exception(UnboundLocalError(f\"column '{self.column_name}': {value_error}\"))\r\n```\r\n\r\nbut this skips the error and the import continues ignoring that field, which it's no what I expected because that field is require for the DB.\r\n\r\nHow can I get only the first lines of the message?:\r\n\r\n    \u00a7  Line number: 1 - \"Column 'my_error' not found in dataset. Available columns are: ['column1', 'column2', 'my_err', 'column3']\"\r\n    \r\n    row1data1, row1data2, row1data3, 0\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/976", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/976/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/976/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/976", "id": 472294593, "node_id": "MDU6SXNzdWU0NzIyOTQ1OTM=", "number": 976, "title": "ForeignKeyWidget Implementation according to docs give pk instead of name", "user": {"login": "crypsl", "id": 34706723, "node_id": "MDQ6VXNlcjM0NzA2NzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/34706723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crypsl", "html_url": "https://github.com/crypsl", "followers_url": "https://api.github.com/users/crypsl/followers", "following_url": "https://api.github.com/users/crypsl/following{/other_user}", "gists_url": "https://api.github.com/users/crypsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crypsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crypsl/subscriptions", "organizations_url": "https://api.github.com/users/crypsl/orgs", "repos_url": "https://api.github.com/users/crypsl/repos", "events_url": "https://api.github.com/users/crypsl/events{/privacy}", "received_events_url": "https://api.github.com/users/crypsl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1263761601, "node_id": "MDU6TGFiZWwxMjYzNzYxNjAx", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/solution%20included", "name": "solution included", "color": "e7f99f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-24T13:48:41Z", "updated_at": "2019-07-25T07:17:25Z", "closed_at": "2019-07-25T03:08:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "resources.py:\r\n```\r\nfrom import_export import resources, fields\r\nfrom import_export.widgets import ForeignKeyWidget\r\nfrom .models import Book, Author\r\n\r\nclass BookResource(resources.ModelResource):\r\n    author = fields.Field(\r\n            column_name='author',\r\n            attribute='author',\r\n            widget=ForeignKeyWidget(Author, 'name'))\r\n\r\n    class Meta:\r\n        model = Book\r\n        fields = ('author', )\r\n```\r\nadmin.py\r\n```\r\nfrom django.contrib import admin\r\nfrom import_export.admin import ImportExportModelAdmin\r\nfrom .models import Book, Author, Category\r\nfrom .resources import BookResource\r\n\r\n@admin.register(Book)\r\nclass BookAdmin(ImportExportModelAdmin):\r\n    resources_class = BookResource\r\n```\r\nmodels.py\r\n```\r\nclass Author(models.Model):\r\n    name = models.CharField(max_length=100)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n\r\n\r\nclass Category(models.Model):\r\n    name = models.CharField(max_length=100)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n\r\n\r\nclass Book(models.Model):\r\n    name = models.CharField('Book Name', max_length=100)\r\n    author = models.ForeignKey(Author,\r\n                               blank=True,\r\n                               null=True,\r\n                               on_delete=models.CASCADE)\r\n    author_email = models.EmailField('Author Email', max_length=75, blank=True)\r\n    imported = models.BooleanField(default=False)\r\n    published = models.BooleanField('Published', blank=True, null=True)\r\n    price = models.DecimalField(max_digits=10,\r\n                                decimal_places=2,\r\n                                null=True,\r\n                                blank=True)\r\n    categories = models.ManyToManyField(Category, blank=True)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n```\r\n\r\nWhy I am getting pk in column of author?\r\nInstead I was expecting **\"name\"** of author in exported csv file.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/973", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/973/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/973/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/973", "id": 468713327, "node_id": "MDU6SXNzdWU0Njg3MTMzMjc=", "number": 973, "title": "JSONField import", "user": {"login": "Sqvall", "id": 47914396, "node_id": "MDQ6VXNlcjQ3OTE0Mzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/47914396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sqvall", "html_url": "https://github.com/Sqvall", "followers_url": "https://api.github.com/users/Sqvall/followers", "following_url": "https://api.github.com/users/Sqvall/following{/other_user}", "gists_url": "https://api.github.com/users/Sqvall/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sqvall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sqvall/subscriptions", "organizations_url": "https://api.github.com/users/Sqvall/orgs", "repos_url": "https://api.github.com/users/Sqvall/repos", "events_url": "https://api.github.com/users/Sqvall/events{/privacy}", "received_events_url": "https://api.github.com/users/Sqvall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-16T15:12:49Z", "updated_at": "2020-05-09T05:23:41Z", "closed_at": "2020-05-09T05:23:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "What i need do, than import data in FSONField?\r\n\r\nI use:\r\n```python\r\nclass ProductResource(resources.ModelResource):\r\n    category = fields.Field(attribute='category', column_name='category',\r\n                            widget=ForeignKeyWidget(Category, 'name'))\r\n    brand = fields.Field(attribute='brand', column_name='brand',\r\n                         widget=ForeignKeyWidget(Producer, 'name'))\r\n    properties = fields.Field(attribute='properties', column_name='properties', widget=JSONWidget)\r\n\r\n    class Meta:\r\n        model = Product\r\n        fields = ('id', 'name', 'price', 'category', 'brand', 'properties', 'description')\r\n        export_order = ('id', 'name', 'price', 'category', 'brand', 'properties', 'description')\r\n\r\n```\r\nAnd i have Error: \r\n```Object of type Product is not JSON serializable```\r\nAs I understand, need point field name, but JSONWidget not takes arguments.\r\nIf i not use JSONWidget. Export works great, but import as string data in JSONField.\r\nMay be you can help me, what should i use to fix it, if this is possible?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/972", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/972/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/972/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/972/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/972", "id": 466893061, "node_id": "MDU6SXNzdWU0NjY4OTMwNjE=", "number": 972, "title": "Feature Request: Update/New Only", "user": {"login": "mattburlage", "id": 5794128, "node_id": "MDQ6VXNlcjU3OTQxMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5794128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattburlage", "html_url": "https://github.com/mattburlage", "followers_url": "https://api.github.com/users/mattburlage/followers", "following_url": "https://api.github.com/users/mattburlage/following{/other_user}", "gists_url": "https://api.github.com/users/mattburlage/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattburlage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattburlage/subscriptions", "organizations_url": "https://api.github.com/users/mattburlage/orgs", "repos_url": "https://api.github.com/users/mattburlage/repos", "events_url": "https://api.github.com/users/mattburlage/events{/privacy}", "received_events_url": "https://api.github.com/users/mattburlage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383045, "node_id": "MDU6TGFiZWwxOTM4MzA0NQ==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-11T13:28:20Z", "updated_at": "2020-03-31T12:45:52Z", "closed_at": "2020-03-29T20:48:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "This feature would only consider importing rows that either create new entries or update existing ones (or both) depending on the setting selected. There could be a 'Filter' drop-down that lets users say 'Import All,' 'Update Only,' or 'New Only.'\r\n\r\nI will try to take a stab at this when I'm able.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/971", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/971/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/971/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/971/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/971", "id": 466755741, "node_id": "MDU6SXNzdWU0NjY3NTU3NDE=", "number": 971, "title": "how to mysql", "user": {"login": "mgagah", "id": 23730650, "node_id": "MDQ6VXNlcjIzNzMwNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/23730650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgagah", "html_url": "https://github.com/mgagah", "followers_url": "https://api.github.com/users/mgagah/followers", "following_url": "https://api.github.com/users/mgagah/following{/other_user}", "gists_url": "https://api.github.com/users/mgagah/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgagah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgagah/subscriptions", "organizations_url": "https://api.github.com/users/mgagah/orgs", "repos_url": "https://api.github.com/users/mgagah/repos", "events_url": "https://api.github.com/users/mgagah/events{/privacy}", "received_events_url": "https://api.github.com/users/mgagah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T08:53:33Z", "updated_at": "2019-07-24T06:16:33Z", "closed_at": "2019-07-24T06:16:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to import data excel to mysql database? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/968", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/968/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/968/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/968/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/968", "id": 464172197, "node_id": "MDU6SXNzdWU0NjQxNzIxOTc=", "number": 968, "title": "skip_row to include row data as input argument (handling ManyToMany relations)", "user": {"login": "adibo", "id": 4396436, "node_id": "MDQ6VXNlcjQzOTY0MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4396436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adibo", "html_url": "https://github.com/adibo", "followers_url": "https://api.github.com/users/adibo/followers", "following_url": "https://api.github.com/users/adibo/following{/other_user}", "gists_url": "https://api.github.com/users/adibo/gists{/gist_id}", "starred_url": "https://api.github.com/users/adibo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adibo/subscriptions", "organizations_url": "https://api.github.com/users/adibo/orgs", "repos_url": "https://api.github.com/users/adibo/repos", "events_url": "https://api.github.com/users/adibo/events{/privacy}", "received_events_url": "https://api.github.com/users/adibo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T09:46:55Z", "updated_at": "2020-01-14T11:05:15Z", "closed_at": "2020-01-14T11:05:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working with an import of a model which has ManyToMany relation. The import resource is intended to handle changes/updates also in this relation. \r\n\r\nThe problem I'm seeing is that whenever this relation is the only field that is to be changed, the `skip_row` would always return `True` since both the `instance` and the `original` would have exactly the same value (remember: `import_row` makes a deep copy of the instance, though M2M relations are - so to say - still coupled).\r\n\r\nAnd since there is no input data (`row`) within the input arguments, the `skip_row` cannot use it to compare to in order to decide if the row should be skipped or not if only the M2M field in question changed. \r\nOf course, a fix one can come up with is to store `row` data as an instance attribute (e.g. as `_row`) and refer to it in `skip_row` when required. \r\n\r\nThis case clearly shows that there is a good reason to change the signature of the `skip_row` to include `row` data as input argument (and perhaps `kwargs` too to have even more flexibility). This would eliminate the need to perform a fix like above. \r\nI would be happy to propose a PR, if there is consensus to go this path.\r\n\r\nOr is there anther solution I am missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/965", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/965/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/965/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/965/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/965", "id": 462746246, "node_id": "MDU6SXNzdWU0NjI3NDYyNDY=", "number": 965, "title": "from_encoding does not work", "user": {"login": "aerospatiale", "id": 7073973, "node_id": "MDQ6VXNlcjcwNzM5NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7073973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aerospatiale", "html_url": "https://github.com/aerospatiale", "followers_url": "https://api.github.com/users/aerospatiale/followers", "following_url": "https://api.github.com/users/aerospatiale/following{/other_user}", "gists_url": "https://api.github.com/users/aerospatiale/gists{/gist_id}", "starred_url": "https://api.github.com/users/aerospatiale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aerospatiale/subscriptions", "organizations_url": "https://api.github.com/users/aerospatiale/orgs", "repos_url": "https://api.github.com/users/aerospatiale/repos", "events_url": "https://api.github.com/users/aerospatiale/events{/privacy}", "received_events_url": "https://api.github.com/users/aerospatiale/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-01T14:27:30Z", "updated_at": "2020-04-25T18:25:30Z", "closed_at": "2020-02-07T13:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see there are plenty of other issues on this topic but they don't appear to be answered.\r\n\r\nI am having issues with csv files containing the BOM at the start. So for example, with a header of id,location, start_time,end_time,break_duration in my file, I am seeing the following error, even if I set the from_encoding to 'utf-8-sig':\r\n\r\n`Line number: 1 - \"Column 'id' not found in dataset. Available columns are: ['\\\\ufeffid', 'location', 'start_time', 'end_time', 'break_duration']\"`\r\n\r\n```\r\nclass ShiftResource(resources.ModelResource):\r\n    class Meta:\r\n        model = Shift\r\n        fields = ('id', 'location', 'start_time', 'end_time', 'break_duration')\r\n\r\nclass ShiftAdmin(ImportMixin, admin.ModelAdmin):\r\n    from_encoding = 'utf-8-sig'\r\n    resource = ShiftResource\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/964", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/964/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/964/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/964/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/964", "id": 462726907, "node_id": "MDU6SXNzdWU0NjI3MjY5MDc=", "number": 964, "title": "Using Import Export along with Django-reversion in Django Admin site", "user": {"login": "sukeshlaghate", "id": 25061957, "node_id": "MDQ6VXNlcjI1MDYxOTU3", "avatar_url": "https://avatars1.githubusercontent.com/u/25061957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sukeshlaghate", "html_url": "https://github.com/sukeshlaghate", "followers_url": "https://api.github.com/users/sukeshlaghate/followers", "following_url": "https://api.github.com/users/sukeshlaghate/following{/other_user}", "gists_url": "https://api.github.com/users/sukeshlaghate/gists{/gist_id}", "starred_url": "https://api.github.com/users/sukeshlaghate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sukeshlaghate/subscriptions", "organizations_url": "https://api.github.com/users/sukeshlaghate/orgs", "repos_url": "https://api.github.com/users/sukeshlaghate/repos", "events_url": "https://api.github.com/users/sukeshlaghate/events{/privacy}", "received_events_url": "https://api.github.com/users/sukeshlaghate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-01T13:51:44Z", "updated_at": "2020-06-09T14:14:23Z", "closed_at": "2020-03-23T11:05:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to use Import Export functionality for bulk import of users in Django Admin site. I also want to track version and history of the CustomUser model and hence have inherited CustomUser model from VersionAdmin. \r\n\r\nThe issue I am facing is if I multi inherit Custom User model from Version admin and ImportExportModelAdmin then I am not able to see import export buttons. See attached snapshot\r\n![Django_admin_site](https://user-images.githubusercontent.com/25061957/60441509-c2168900-9c34-11e9-942b-4f755a261981.PNG)\r\n\r\n\r\n\r\n My code looks like following\r\n\r\n```\r\nfrom django.contrib import admin\r\nfrom django.contrib.auth import get_user_model\r\nfrom reversion.admin import VersionAdmin\r\n\r\n# required for import export option in Admin site for bulk import export\r\n\r\nfrom import_export.admin import ImportExportModelAdmin\r\n\r\nfrom users.forms import CustomUserCreationForm, CustomUserChangeForm\r\nfrom users.models import (CustomUser, Company)\r\n\r\n# Register your models here.\r\n\r\n\r\nclass CustomUserAdmin(VersionAdmin, ImportExportModelAdmin):\r\n    add_form = CustomUserCreationForm\r\n    form = SCustomUserChangeForm\r\n    model = CustomUser\r\n    list_display = ['email', 'username','first_name', 'last_name',]\r\n\r\n\r\nadmin.site.register( CustomUser, CustomUserAdmin )\r\n```\r\n\r\nHowever if I invert the inheritance order that is  CustomUserAdmin(ImportExportModelAdmin, VersionAdmin) then I see import export buttons but \"Recover Deleted Users\" button disappears as shown in this snapshot\r\n![Django_admin_site2](https://user-images.githubusercontent.com/25061957/60441439-972c3500-9c34-11e9-9ef8-cf7b88c84553.PNG)\r\n\r\n\r\nRequest you to point in right direction as to how to correctly use django-import-export with django-reversion in admin site \r\n\r\nThanks in advance for helping out.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/963", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/963/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/963/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/963/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/963", "id": 462026962, "node_id": "MDU6SXNzdWU0NjIwMjY5NjI=", "number": 963, "title": "errors to export to yaml with DecimalField", "user": {"login": "salientroot", "id": 10685904, "node_id": "MDQ6VXNlcjEwNjg1OTA0", "avatar_url": "https://avatars3.githubusercontent.com/u/10685904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salientroot", "html_url": "https://github.com/salientroot", "followers_url": "https://api.github.com/users/salientroot/followers", "following_url": "https://api.github.com/users/salientroot/following{/other_user}", "gists_url": "https://api.github.com/users/salientroot/gists{/gist_id}", "starred_url": "https://api.github.com/users/salientroot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salientroot/subscriptions", "organizations_url": "https://api.github.com/users/salientroot/orgs", "repos_url": "https://api.github.com/users/salientroot/repos", "events_url": "https://api.github.com/users/salientroot/events{/privacy}", "received_events_url": "https://api.github.com/users/salientroot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T13:09:12Z", "updated_at": "2020-01-08T14:22:37Z", "closed_at": "2020-01-08T14:22:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the error message.\r\ncannot represent an object: 15.00\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/962", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/962/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/962/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/962/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/962", "id": 460619344, "node_id": "MDU6SXNzdWU0NjA2MTkzNDQ=", "number": 962, "title": "Help to import a model data with a ForeignKey to self-model", "user": {"login": "eamigo86", "id": 11740026, "node_id": "MDQ6VXNlcjExNzQwMDI2", "avatar_url": "https://avatars1.githubusercontent.com/u/11740026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamigo86", "html_url": "https://github.com/eamigo86", "followers_url": "https://api.github.com/users/eamigo86/followers", "following_url": "https://api.github.com/users/eamigo86/following{/other_user}", "gists_url": "https://api.github.com/users/eamigo86/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamigo86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamigo86/subscriptions", "organizations_url": "https://api.github.com/users/eamigo86/orgs", "repos_url": "https://api.github.com/users/eamigo86/repos", "events_url": "https://api.github.com/users/eamigo86/events{/privacy}", "received_events_url": "https://api.github.com/users/eamigo86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-25T20:16:25Z", "updated_at": "2020-03-06T18:47:48Z", "closed_at": "2020-03-06T18:47:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, first of all, thank you for your great work with this package. \r\n\r\nI'm new working with this package and have a problem and no found solution anywhere, I have not seen anything in the documentation. My problem trying to import a previously exported model data (JSON) from admin, when I the model that has a ForeignKey relationship with itself:\r\nExample model:\r\n```python\r\nclass ClassA (models.Model):\r\n     name = models.CharField(max_length=200, blank=True)\r\n\u00a0\u00a0\u00a0\u00a0\u00a0field_x = models.ForeignKey (\"self\", null=True, blank=True, on_delete=models.SET_NULL)\r\n```\r\nExample exported data.json:\r\n```json\r\n[{\r\n    \"id\": 1,\r\n    \"name\": \"Object1\",\r\n    \"field_x\": 2\r\n},{\r\n    \"id\": 2,\r\n    \"name\": \"Object2\",\r\n    \"field_x\": \"\"\r\n}]\r\n```\r\nGet the following output:\r\n```bash\r\nProjectX.appA.models.DoesNotExist: ClassA matching query does not exist.\r\n```\r\nAny advice? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/961", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/961/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/961/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/961/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/961", "id": 453966242, "node_id": "MDU6SXNzdWU0NTM5NjYyNDI=", "number": 961, "title": "object method not callable. Only attributes", "user": {"login": "eljach", "id": 50085053, "node_id": "MDQ6VXNlcjUwMDg1MDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/50085053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eljach", "html_url": "https://github.com/eljach", "followers_url": "https://api.github.com/users/eljach/followers", "following_url": "https://api.github.com/users/eljach/following{/other_user}", "gists_url": "https://api.github.com/users/eljach/gists{/gist_id}", "starred_url": "https://api.github.com/users/eljach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eljach/subscriptions", "organizations_url": "https://api.github.com/users/eljach/orgs", "repos_url": "https://api.github.com/users/eljach/repos", "events_url": "https://api.github.com/users/eljach/events{/privacy}", "received_events_url": "https://api.github.com/users/eljach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-10T01:49:10Z", "updated_at": "2019-06-10T01:49:55Z", "closed_at": "2019-06-10T01:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/django-import-export/django-import-export/blob/3c082f98afe7996e79f936418fced3094f141c26/import_export/fields.py#L87", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/960", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/960/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/960/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/960/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/960", "id": 451330530, "node_id": "MDU6SXNzdWU0NTEzMzA1MzA=", "number": 960, "title": "Functionality request: Integration with wagtail", "user": {"login": "adsk2050", "id": 22856053, "node_id": "MDQ6VXNlcjIyODU2MDUz", "avatar_url": "https://avatars1.githubusercontent.com/u/22856053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adsk2050", "html_url": "https://github.com/adsk2050", "followers_url": "https://api.github.com/users/adsk2050/followers", "following_url": "https://api.github.com/users/adsk2050/following{/other_user}", "gists_url": "https://api.github.com/users/adsk2050/gists{/gist_id}", "starred_url": "https://api.github.com/users/adsk2050/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adsk2050/subscriptions", "organizations_url": "https://api.github.com/users/adsk2050/orgs", "repos_url": "https://api.github.com/users/adsk2050/repos", "events_url": "https://api.github.com/users/adsk2050/events{/privacy}", "received_events_url": "https://api.github.com/users/adsk2050/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-03T07:25:04Z", "updated_at": "2020-03-03T19:06:14Z", "closed_at": "2020-03-03T19:06:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "does django-import-export work well with  wagtail? It works as far as I have used it. But it doesn't have an admin interface for wagtail. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/957", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/957/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/957/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/957/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/957", "id": 449204596, "node_id": "MDU6SXNzdWU0NDkyMDQ1OTY=", "number": 957, "title": "Error encountered while trying to read file CSV", "user": {"login": "hdayacr", "id": 10716690, "node_id": "MDQ6VXNlcjEwNzE2Njkw", "avatar_url": "https://avatars0.githubusercontent.com/u/10716690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdayacr", "html_url": "https://github.com/hdayacr", "followers_url": "https://api.github.com/users/hdayacr/followers", "following_url": "https://api.github.com/users/hdayacr/following{/other_user}", "gists_url": "https://api.github.com/users/hdayacr/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdayacr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdayacr/subscriptions", "organizations_url": "https://api.github.com/users/hdayacr/orgs", "repos_url": "https://api.github.com/users/hdayacr/repos", "events_url": "https://api.github.com/users/hdayacr/events{/privacy}", "received_events_url": "https://api.github.com/users/hdayacr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-28T11:01:35Z", "updated_at": "2019-12-08T18:56:45Z", "closed_at": "2019-12-08T18:56:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nDjango==1.8\r\ndjango-import-export==1.1.0\r\n\r\nWhen I want to import a small csv (1 line) I have directly a blank page with the message \r\n\r\n> Error encountered while trying to read file: petit.csv \r\n\r\nI see in the network console a POST to http://localhost:8001/admin/XXX/XXX/import/ \r\nwith a 200 response with this message.\r\n\r\nIt is the same behavior whatever the model. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/956", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/956/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/956/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/956/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/956", "id": 448099819, "node_id": "MDU6SXNzdWU0NDgwOTk4MTk=", "number": 956, "title": "Form control export fields for writing to csv", "user": {"login": "ccsv", "id": 6316732, "node_id": "MDQ6VXNlcjYzMTY3MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6316732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccsv", "html_url": "https://github.com/ccsv", "followers_url": "https://api.github.com/users/ccsv/followers", "following_url": "https://api.github.com/users/ccsv/following{/other_user}", "gists_url": "https://api.github.com/users/ccsv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccsv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccsv/subscriptions", "organizations_url": "https://api.github.com/users/ccsv/orgs", "repos_url": "https://api.github.com/users/ccsv/repos", "events_url": "https://api.github.com/users/ccsv/events{/privacy}", "received_events_url": "https://api.github.com/users/ccsv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-24T10:36:21Z", "updated_at": "2020-01-12T14:43:37Z", "closed_at": "2020-01-12T14:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have a form which the user fills out with booleans that determines which columns get exported? If so are there examples using a view?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-import-export/django-import-export/issues/950", "repository_url": "https://api.github.com/repos/django-import-export/django-import-export", "labels_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/950/labels{/name}", "comments_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/950/comments", "events_url": "https://api.github.com/repos/django-import-export/django-import-export/issues/950/events", "html_url": "https://github.com/django-import-export/django-import-export/issues/950", "id": 439755801, "node_id": "MDU6SXNzdWU0Mzk3NTU4MDE=", "number": 950, "title": "How to hash user password on import", "user": {"login": "hack2024", "id": 36162797, "node_id": "MDQ6VXNlcjM2MTYyNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/36162797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hack2024", "html_url": "https://github.com/hack2024", "followers_url": "https://api.github.com/users/hack2024/followers", "following_url": "https://api.github.com/users/hack2024/following{/other_user}", "gists_url": "https://api.github.com/users/hack2024/gists{/gist_id}", "starred_url": "https://api.github.com/users/hack2024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hack2024/subscriptions", "organizations_url": "https://api.github.com/users/hack2024/orgs", "repos_url": "https://api.github.com/users/hack2024/repos", "events_url": "https://api.github.com/users/hack2024/events{/privacy}", "received_events_url": "https://api.github.com/users/hack2024/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 19383047, "node_id": "MDU6TGFiZWwxOTM4MzA0Nw==", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1227346895, "node_id": "MDU6TGFiZWwxMjI3MzQ2ODk1", "url": "https://api.github.com/repos/django-import-export/django-import-export/labels/stale", "name": "stale", "color": "A9A9a9", "default": false, "description": "Stale bot"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T19:43:02Z", "updated_at": "2019-12-04T12:32:59Z", "closed_at": "2019-12-04T12:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I am trying to import a list of users from CSV, but when the file is imported, the password is saved in the database without hash. How i can hash the password before saving to database?\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}]}