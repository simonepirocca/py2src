{"total_count": 83, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/170", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/170/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/170/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/170", "id": 551926840, "node_id": "MDU6SXNzdWU1NTE5MjY4NDA=", "number": 170, "title": "Not detecting local imports", "user": {"login": "Dreamsorcerer", "id": 2203121, "node_id": "MDQ6VXNlcjIyMDMxMjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2203121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dreamsorcerer", "html_url": "https://github.com/Dreamsorcerer", "followers_url": "https://api.github.com/users/Dreamsorcerer/followers", "following_url": "https://api.github.com/users/Dreamsorcerer/following{/other_user}", "gists_url": "https://api.github.com/users/Dreamsorcerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dreamsorcerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dreamsorcerer/subscriptions", "organizations_url": "https://api.github.com/users/Dreamsorcerer/orgs", "repos_url": "https://api.github.com/users/Dreamsorcerer/repos", "events_url": "https://api.github.com/users/Dreamsorcerer/events{/privacy}", "received_events_url": "https://api.github.com/users/Dreamsorcerer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-19T14:04:35Z", "updated_at": "2020-01-19T15:24:36Z", "closed_at": "2020-01-19T15:24:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I keep getting I100 and I202 because it detects imports as third-party, when they are local modules in the application. e.g.\r\n`Additional newline in a group of imports. 'from constants import MARGIN' is identified as Third Party..`\r\n\r\nShouldn't it be able to see that these modules are local (i.e. they are in the same directory as the file doing the importing)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/169", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/169/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/169/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/169", "id": 531087204, "node_id": "MDU6SXNzdWU1MzEwODcyMDQ=", "number": 169, "title": "How to configure?", "user": {"login": "Integralist", "id": 180050, "node_id": "MDQ6VXNlcjE4MDA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/180050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Integralist", "html_url": "https://github.com/Integralist", "followers_url": "https://api.github.com/users/Integralist/followers", "following_url": "https://api.github.com/users/Integralist/following{/other_user}", "gists_url": "https://api.github.com/users/Integralist/gists{/gist_id}", "starred_url": "https://api.github.com/users/Integralist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Integralist/subscriptions", "organizations_url": "https://api.github.com/users/Integralist/orgs", "repos_url": "https://api.github.com/users/Integralist/repos", "events_url": "https://api.github.com/users/Integralist/events{/privacy}", "received_events_url": "https://api.github.com/users/Integralist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-02T12:10:09Z", "updated_at": "2020-01-06T10:58:37Z", "closed_at": "2020-01-06T10:58:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a silly question but I'm using vim's `nvie/vim-flake8` which runs the currently available flake8 command + extensions whenever editing a file.\r\n\r\nI've created a `~/.config/flake8` file with the following content:\r\n\r\n```\r\n[flake8]\r\nmax-line-length = 120\r\n\r\n[flake8-import-order]\r\nimport-order-style = edited\r\n```\r\n\r\nBut no matter what I set the import-order-style to, my vim editor keeps showing the same error for the imports.\r\n\r\nSpecifically I have the following imports...\r\n\r\n```\r\nfrom bf_metrics.rig import metrics\r\nfrom nsq import Message\r\nfrom structlog import get_logger\r\n```\r\n\r\nIt sees them all as Third-Party and expects a line break between them. \r\n\r\nMaybe the configuration is correct/working but I just don't have a style selected that's matching what I'm looking for \ud83e\udd14 \r\n\r\nI ideally want to find a style that is:\r\n\r\n```\r\n<standard library modules - grouped together>\r\n\r\n<third-party modules - grouped together>\r\n\r\n<local modules - grouped together>\r\n```\r\n\r\nWould this need to be a custom style?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/164", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/164/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/164/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/164", "id": 397404084, "node_id": "MDU6SXNzdWUzOTc0MDQwODQ=", "number": 164, "title": "Unable to disable warnings via tox.ini", "user": {"login": "Integralist", "id": 180050, "node_id": "MDQ6VXNlcjE4MDA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/180050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Integralist", "html_url": "https://github.com/Integralist", "followers_url": "https://api.github.com/users/Integralist/followers", "following_url": "https://api.github.com/users/Integralist/following{/other_user}", "gists_url": "https://api.github.com/users/Integralist/gists{/gist_id}", "starred_url": "https://api.github.com/users/Integralist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Integralist/subscriptions", "organizations_url": "https://api.github.com/users/Integralist/orgs", "repos_url": "https://api.github.com/users/Integralist/repos", "events_url": "https://api.github.com/users/Integralist/events{/privacy}", "received_events_url": "https://api.github.com/users/Integralist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-09T14:48:21Z", "updated_at": "2019-01-10T09:43:48Z", "closed_at": "2019-01-10T09:43:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried the following, but my vim linter still seems to pick up the `I202` error.\r\n\r\nIs tox supported or have I just mis-configured things?\r\n\r\nOtherwise love this plugin.\r\n\r\nThanks!\r\n\r\n```\r\n[flake8]\r\nignore = E261,E265,E402\r\n# http://pep8.readthedocs.org/en/latest/intro.html#error-codes\r\n\r\n[flake8-import-order]\r\nignore = I202\r\n# https://github.com/PyCQA/flake8-import-order#warnings\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/160", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/160/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/160/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/160", "id": 363787900, "node_id": "MDU6SXNzdWUzNjM3ODc5MDA=", "number": 160, "title": "'from .a import a' should be before 'from .. import b'", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-25T22:19:15Z", "updated_at": "2019-02-05T22:35:02Z", "closed_at": "2019-02-05T22:35:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any styles that put `from .. import b` before `from .a import a`? I am trying to match isort and am having trouble since isort puts the `..` first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/158", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/158/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/158/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/158", "id": 361282496, "node_id": "MDU6SXNzdWUzNjEyODI0OTY=", "number": 158, "title": "pycharm: add case-sensitivity for imports on seperate lines", "user": {"login": "Wim-De-Clercq", "id": 4599667, "node_id": "MDQ6VXNlcjQ1OTk2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4599667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wim-De-Clercq", "html_url": "https://github.com/Wim-De-Clercq", "followers_url": "https://api.github.com/users/Wim-De-Clercq/followers", "following_url": "https://api.github.com/users/Wim-De-Clercq/following{/other_user}", "gists_url": "https://api.github.com/users/Wim-De-Clercq/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wim-De-Clercq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wim-De-Clercq/subscriptions", "organizations_url": "https://api.github.com/users/Wim-De-Clercq/orgs", "repos_url": "https://api.github.com/users/Wim-De-Clercq/repos", "events_url": "https://api.github.com/users/Wim-De-Clercq/events{/privacy}", "received_events_url": "https://api.github.com/users/Wim-De-Clercq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-18T12:35:21Z", "updated_at": "2018-09-23T08:42:14Z", "closed_at": "2018-09-23T08:42:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current implementation of the `pycharm` style fixed imports on 1 line.\r\nLike this is valid with the pycharm option.\r\n```\r\nfrom x import A, B, a, b\r\n```\r\n\r\nHowever, split on multiple lines this is not valid for flake8. And for pycharm this is the default sorting.\r\n```\r\nfrom x import A\r\nfrom x import B\r\nfrom x import a\r\nfrom x import b\r\n```\r\naka, the current pycharm implementation fixes `I101` warnings, but not `I100` warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/157", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/157/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/157/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/157", "id": 358564559, "node_id": "MDU6SXNzdWUzNTg1NjQ1NTk=", "number": 157, "title": "Please add instructions to install & configure with pylama.", "user": {"login": "alvassin", "id": 1497444, "node_id": "MDQ6VXNlcjE0OTc0NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvassin", "html_url": "https://github.com/alvassin", "followers_url": "https://api.github.com/users/alvassin/followers", "following_url": "https://api.github.com/users/alvassin/following{/other_user}", "gists_url": "https://api.github.com/users/alvassin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvassin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvassin/subscriptions", "organizations_url": "https://api.github.com/users/alvassin/orgs", "repos_url": "https://api.github.com/users/alvassin/repos", "events_url": "https://api.github.com/users/alvassin/events{/privacy}", "received_events_url": "https://api.github.com/users/alvassin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-10T10:35:46Z", "updated_at": "2018-12-31T15:09:18Z", "closed_at": "2018-12-31T15:09:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not clear how to start using this plugin with pylama.\r\nCan it be somehow integrated via pylama.ini?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/154", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/154/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/154/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/154", "id": 326229771, "node_id": "MDU6SXNzdWUzMjYyMjk3NzE=", "number": 154, "title": "Two lines of same group requires I201", "user": {"login": "rafis", "id": 3502395, "node_id": "MDQ6VXNlcjM1MDIzOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3502395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafis", "html_url": "https://github.com/rafis", "followers_url": "https://api.github.com/users/rafis/followers", "following_url": "https://api.github.com/users/rafis/following{/other_user}", "gists_url": "https://api.github.com/users/rafis/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafis/subscriptions", "organizations_url": "https://api.github.com/users/rafis/orgs", "repos_url": "https://api.github.com/users/rafis/repos", "events_url": "https://api.github.com/users/rafis/events{/privacy}", "received_events_url": "https://api.github.com/users/rafis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T18:00:27Z", "updated_at": "2018-05-29T20:20:46Z", "closed_at": "2018-05-29T20:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following two lines are detected as same group that is 'Third Party'. Why it requires to put a newline between them?\r\n```python\r\nfrom django_telegrambot.apps import DjangoTelegramBot\r\nfrom telegram.ext import CommandHandler, Filters, MessageHandler\r\n```\r\n\r\nError message:\r\n\r\n.\\bot\\telegrambot.py:2:1: I201 Missing newline between import groups. 'from telegram.ext import CommandHandler, MessageHandler, Filters' is identified as Third Party and 'from django_telegrambot.apps import DjangoTelegramBot' is identified as Third Party.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/152", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/152/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/152/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/152", "id": 309633137, "node_id": "MDU6SXNzdWUzMDk2MzMxMzc=", "number": 152, "title": "Conflict with Pylint in test modules", "user": {"login": "dmtucker", "id": 1817814, "node_id": "MDQ6VXNlcjE4MTc4MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1817814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmtucker", "html_url": "https://github.com/dmtucker", "followers_url": "https://api.github.com/users/dmtucker/followers", "following_url": "https://api.github.com/users/dmtucker/following{/other_user}", "gists_url": "https://api.github.com/users/dmtucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmtucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmtucker/subscriptions", "organizations_url": "https://api.github.com/users/dmtucker/orgs", "repos_url": "https://api.github.com/users/dmtucker/repos", "events_url": "https://api.github.com/users/dmtucker/events{/privacy}", "received_events_url": "https://api.github.com/users/dmtucker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-29T06:22:42Z", "updated_at": "2018-03-29T21:41:03Z", "closed_at": "2018-03-29T21:41:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n...\r\n\u251c\u2500\u2500 setup.py\r\n\u251c\u2500\u2500 src\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 backlog\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 backlog.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 cli.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 __main__.py\r\n\u251c\u2500\u2500 tests\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 test_backlog.py\r\n...\r\n```\r\nIf the top of `test_backlog.py` is:\r\n``` python\r\nimport os\r\nimport random\r\nimport uuid\r\n\r\nimport pytest\r\n\r\nfrom backlog import Backlog\r\n```\r\n```\r\n_____________________________________________ FLAKE8-check ______________________________________________\r\n/home/david/Projects/backlog/tests/test_backlog.py:10:1: I100 Import statements are in the wrong order. 'from backlog import Backlog' should be before 'import pytest' and in a different group.\r\n\r\n```\r\nIf I change it to this:\r\n``` python\r\nimport os\r\nimport random\r\nimport uuid\r\n\r\nfrom backlog import Backlog\r\n\r\nimport pytest\r\n```\r\n```\r\n____________________________________ [pylint] tests/test_backlog.py _____________________________________\r\nC: 10, 0: third party import \"import pytest\" should be placed before \"from backlog import Backlog\" (wrong-import-order)\r\n```\r\nI tend to agree with Pylint here since it's consistent with how imports should be done in the package itself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/150", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/150/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/150/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/150", "id": 297622357, "node_id": "MDU6SXNzdWUyOTc2MjIzNTc=", "number": 150, "title": "I'm getting this error during openstack/devstack installation.", "user": {"login": "Jasmohan-ThandaLe", "id": 11637422, "node_id": "MDQ6VXNlcjExNjM3NDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/11637422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jasmohan-ThandaLe", "html_url": "https://github.com/Jasmohan-ThandaLe", "followers_url": "https://api.github.com/users/Jasmohan-ThandaLe/followers", "following_url": "https://api.github.com/users/Jasmohan-ThandaLe/following{/other_user}", "gists_url": "https://api.github.com/users/Jasmohan-ThandaLe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jasmohan-ThandaLe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jasmohan-ThandaLe/subscriptions", "organizations_url": "https://api.github.com/users/Jasmohan-ThandaLe/orgs", "repos_url": "https://api.github.com/users/Jasmohan-ThandaLe/repos", "events_url": "https://api.github.com/users/Jasmohan-ThandaLe/events{/privacy}", "received_events_url": "https://api.github.com/users/Jasmohan-ThandaLe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T22:38:46Z", "updated_at": "2018-02-16T17:17:05Z", "closed_at": "2018-02-16T17:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Collecting flake8-import-order==0.11 (from -r /opt/stack/tempest/test-requirements.txt (line 8))\r\n2018-02-15 22:24:53.107 |   Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x7f5268b06e90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',)': /simple/flake8-import-order/\r\n2018-02-15 22:24:53.612 |   Retrying (Retry(total=3, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x7f5268b06fd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',)': /simple/flake8-import-order/\r\n2018-02-15 22:24:54.617 |   Retrying (Retry(total=2, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x7f5268b19150>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',)': /simple/flake8-import-order/\r\n2018-02-15 22:24:56.620 |   Retrying (Retry(total=1, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x7f5268b19290>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',)': /simple/flake8-import-order/\r\n2018-02-15 22:25:00.627 |   Retrying (Retry(total=0, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x7f5268b193d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',)': /simple/flake8-import-order/\r\n2018-02-15 22:25:00.628 |   Could not find a version that satisfies the requirement flake8-import-order==0.11 (from -r /opt/stack/tempest/test-requirements.txt (line 8)) (from versions: )\r\n2018-02-15 22:25:00.629 | No matching distribution found for flake8-import-order==0.11 (from -r /opt/stack/tempest/test-requirements.txt (line 8))\r\n2018-02-15 22:25:00.762 | +inc/python:pip_install:1                  exit_trap\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/149", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/149/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/149/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/149", "id": 297296000, "node_id": "MDU6SXNzdWUyOTcyOTYwMDA=", "number": 149, "title": "dependency on enum34 causes issues on macOS with Python 3.6", "user": {"login": "wjwwood", "id": 100427, "node_id": "MDQ6VXNlcjEwMDQyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/100427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjwwood", "html_url": "https://github.com/wjwwood", "followers_url": "https://api.github.com/users/wjwwood/followers", "following_url": "https://api.github.com/users/wjwwood/following{/other_user}", "gists_url": "https://api.github.com/users/wjwwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjwwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjwwood/subscriptions", "organizations_url": "https://api.github.com/users/wjwwood/orgs", "repos_url": "https://api.github.com/users/wjwwood/repos", "events_url": "https://api.github.com/users/wjwwood/events{/privacy}", "received_events_url": "https://api.github.com/users/wjwwood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-15T00:41:23Z", "updated_at": "2018-03-06T03:18:32Z", "closed_at": "2018-03-06T03:18:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating `flake8-import-order` and its dependencies I get tracebacks like this:\r\n\r\n```\r\nFailed to import the site module\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site.py\", line 544, in <module>\r\n    main()\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site.py\", line 530, in main\r\n    known_paths = addusersitepackages(known_paths)\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site.py\", line 282, in addusersitepackages\r\n    user_site = getusersitepackages()\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site.py\", line 258, in getusersitepackages\r\n    user_base = getuserbase() # this will also set USER_BASE\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site.py\", line 248, in getuserbase\r\n    USER_BASE = get_config_var('userbase')\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/sysconfig.py\", line 601, in get_config_var\r\n    return get_config_vars().get(name)\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/sysconfig.py\", line 580, in get_config_vars\r\n    import _osx_support\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/_osx_support.py\", line 4, in <module>\r\n    import re\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/re.py\", line 142, in <module>\r\n    class RegexFlag(enum.IntFlag):\r\nAttributeError: module 'enum' has no attribute 'IntFlag'\r\n```\r\n\r\nAfter looking around on the internet I found:\r\n\r\nhttps://stackoverflow.com/questions/43124775/why-python-3-6-1-throws-attributeerror-module-enum-has-no-attribute-intflag\r\n\r\nWhich implies having `enum34` installed causes this problem.\r\n\r\nThis dependency was introduced in:\r\n\r\nhttps://github.com/PyCQA/flake8-import-order/commit/c52371fd5314429895064135146ef80e7c36a07f#diff-2eeaed663bd0d25b7e608891384b7298R32 \r\n\r\nSo I uninstalled it, but then `enum34` causes import to fail:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/__main__.py\", line 4, in <module>\r\n    cli.main()\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/main/cli.py\", line 16, in main\r\n    app.run(argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/main/application.py\", line 396, in run\r\n    self._run(argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/main/application.py\", line 384, in _run\r\n    self.run_checks()\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/main/application.py\", line 310, in run_checks\r\n    self.file_checker_manager.run()\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/checker.py\", line 321, in run\r\n    self.run_serial()\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/checker.py\", line 305, in run_serial\r\n    checker.run_checks()\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/checker.py\", line 579, in run_checks\r\n    self.run_ast_checks()\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8/checker.py\", line 493, in run_ast_checks\r\n    for (line_number, offset, text, check) in runner:\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8_import_order/flake8_linter.py\", line 91, in run\r\n    for error in self.check_order():\r\n  File \"/usr/local/lib/python3.6/site-packages/flake8_import_order/checker.py\", line 58, in check_order\r\n    style_cls = style_entry_point.load()\r\n  File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2407, in load\r\n    self.require(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2430, in require\r\n    items = working_set.resolve(reqs, env, installer, extras=self.extras)\r\n  File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 870, in resolve\r\n    raise DistributionNotFound(req, requirers)\r\npkg_resources.DistributionNotFound: The 'enum34' distribution was not found and is required by the application\r\n```\r\n\r\nThe other recommendation from SO is to depend on `enum-compat` which only installs `enum34` when necessary. So perhaps the solution is to just depend on that instead of `enum34`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/148", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/148/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/148/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/148", "id": 296753266, "node_id": "MDU6SXNzdWUyOTY3NTMyNjY=", "number": 148, "title": "enum34 dependency installed on python 3.6", "user": {"login": "Korijn", "id": 1882046, "node_id": "MDQ6VXNlcjE4ODIwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1882046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Korijn", "html_url": "https://github.com/Korijn", "followers_url": "https://api.github.com/users/Korijn/followers", "following_url": "https://api.github.com/users/Korijn/following{/other_user}", "gists_url": "https://api.github.com/users/Korijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Korijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Korijn/subscriptions", "organizations_url": "https://api.github.com/users/Korijn/orgs", "repos_url": "https://api.github.com/users/Korijn/repos", "events_url": "https://api.github.com/users/Korijn/events{/privacy}", "received_events_url": "https://api.github.com/users/Korijn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-13T14:20:22Z", "updated_at": "2018-02-13T14:39:39Z", "closed_at": "2018-02-13T14:39:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's weird, but I think there's a bug in setup.py. I installed flake8-import-order in a python 3.6 environment with pip, and the enum34 dependency came along. This subsequently broke my pyinstaller script, with the following error:\r\n\r\nhttps://stackoverflow.com/questions/43124775/why-python-3-6-1-throws-attributeerror-module-enum-has-no-attribute-intflag\r\n\r\nSolution was indeed removing the enum34 package. I think the python_version constraint is incorrectly specified in setup.py?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/147", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/147/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/147/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/147", "id": 296683546, "node_id": "MDU6SXNzdWUyOTY2ODM1NDY=", "number": 147, "title": "Pycharm style mixes ALL CAPS and CamelCased imports", "user": {"login": "svnv", "id": 1080888, "node_id": "MDQ6VXNlcjEwODA4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1080888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svnv", "html_url": "https://github.com/svnv", "followers_url": "https://api.github.com/users/svnv/followers", "following_url": "https://api.github.com/users/svnv/following{/other_user}", "gists_url": "https://api.github.com/users/svnv/gists{/gist_id}", "starred_url": "https://api.github.com/users/svnv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svnv/subscriptions", "organizations_url": "https://api.github.com/users/svnv/orgs", "repos_url": "https://api.github.com/users/svnv/repos", "events_url": "https://api.github.com/users/svnv/events{/privacy}", "received_events_url": "https://api.github.com/users/svnv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-13T10:20:37Z", "updated_at": "2018-02-13T10:27:19Z", "closed_at": "2018-02-13T10:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the linter only looks at the first character and not the entire string. Eg.\r\n\r\n    from some_module import CONSTANT, Aclass, Dclass\r\n\r\ngets the following output:\r\n\r\n    I101 Imported names are in the wrong order. Should be Aclass, CONSTANT, Dclass\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/146", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/146/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/146/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/146", "id": 295853789, "node_id": "MDU6SXNzdWUyOTU4NTM3ODk=", "number": 146, "title": "Make case-sensitivity optional", "user": {"login": "immerrr", "id": 579798, "node_id": "MDQ6VXNlcjU3OTc5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/immerrr", "html_url": "https://github.com/immerrr", "followers_url": "https://api.github.com/users/immerrr/followers", "following_url": "https://api.github.com/users/immerrr/following{/other_user}", "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions", "organizations_url": "https://api.github.com/users/immerrr/orgs", "repos_url": "https://api.github.com/users/immerrr/repos", "events_url": "https://api.github.com/users/immerrr/events{/privacy}", "received_events_url": "https://api.github.com/users/immerrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-09T12:23:37Z", "updated_at": "2019-03-03T15:49:46Z", "closed_at": "2019-03-03T15:49:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi and thank you for a nice package.\r\n\r\nI have a minor problem with it. I'm using [isort](https://pypi.python.org/pypi/isort) to format imports automatically and it ends up sorting `from ... import ...` imports in case-sensitive manner, ie. `from ... import Baz, bar` which is then reported by flake8 as incorrect. It just so happens that isort doesn't have an option to switch case-sensitivity either, so I'm kinda stuck.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/145", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/145/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/145/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/145", "id": 285908988, "node_id": "MDU6SXNzdWUyODU5MDg5ODg=", "number": 145, "title": "I202 bug?", "user": {"login": "tvytlx", "id": 7189225, "node_id": "MDQ6VXNlcjcxODkyMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7189225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvytlx", "html_url": "https://github.com/tvytlx", "followers_url": "https://api.github.com/users/tvytlx/followers", "following_url": "https://api.github.com/users/tvytlx/following{/other_user}", "gists_url": "https://api.github.com/users/tvytlx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvytlx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvytlx/subscriptions", "organizations_url": "https://api.github.com/users/tvytlx/orgs", "repos_url": "https://api.github.com/users/tvytlx/repos", "events_url": "https://api.github.com/users/tvytlx/events{/privacy}", "received_events_url": "https://api.github.com/users/tvytlx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T08:09:46Z", "updated_at": "2018-01-04T19:48:19Z", "closed_at": "2018-01-04T19:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ cat test_import.py\r\nimport requests\r\n\r\nfrom b import sth\r\n\r\n$ cat b.py\r\nsth = 0\r\n\r\n$ flake8 test_import.py\r\ntest_import.py:1:1: F401 'requests' imported but unused\r\ntest_import.py:3:1: F401 'b.sth' imported but unused\r\ntest_import.py:3:1: I202 Additional newline in a section of imports.  ???why\r\n\r\n$ flake8 --version\r\n3.5.0 (import-order: 0.16, mccabe: 0.6.1, pycodestyle: 2.3.1, pyflakes: 1.6.0) CPython 3.6.3 on Darwin\r\n```\r\n\r\npep8 says\r\n\r\n> Imports should be grouped in the following order:\r\n>\r\n>  1.standard library imports\r\n>  2.related third party imports\r\n> 3.local application/library specific imports\r\n>\r\n>  You should put a blank line between each group of imports.\r\n\r\nso there should be a newline between local python module and third-party module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/135", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/135/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/135/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/135", "id": 280223569, "node_id": "MDU6SXNzdWUyODAyMjM1Njk=", "number": 135, "title": "I202 errors for multiline imports", "user": {"login": "philtay", "id": 7722913, "node_id": "MDQ6VXNlcjc3MjI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7722913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philtay", "html_url": "https://github.com/philtay", "followers_url": "https://api.github.com/users/philtay/followers", "following_url": "https://api.github.com/users/philtay/following{/other_user}", "gists_url": "https://api.github.com/users/philtay/gists{/gist_id}", "starred_url": "https://api.github.com/users/philtay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philtay/subscriptions", "organizations_url": "https://api.github.com/users/philtay/orgs", "repos_url": "https://api.github.com/users/philtay/repos", "events_url": "https://api.github.com/users/philtay/events{/privacy}", "received_events_url": "https://api.github.com/users/philtay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-07T17:59:39Z", "updated_at": "2017-12-08T19:26:41Z", "closed_at": "2017-12-08T19:26:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following snippet triggers an I202 error:\r\n\r\n```python\r\nfrom .foo import (\r\n    bar,\r\n    baz,\r\n)\r\n\r\nfrom .zoo import (\r\n    mux,\r\n    mox,\r\n)\r\n```\r\n\r\nI think that a blank line should be allowed when a single import spans multiple lines.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/132", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/132/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/132/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/132", "id": 276828971, "node_id": "MDU6SXNzdWUyNzY4Mjg5NzE=", "number": 132, "title": "Unresolveable I202", "user": {"login": "sigmavirus24", "id": 240830, "node_id": "MDQ6VXNlcjI0MDgzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmavirus24", "html_url": "https://github.com/sigmavirus24", "followers_url": "https://api.github.com/users/sigmavirus24/followers", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-26T14:32:07Z", "updated_at": "2017-11-26T18:27:13Z", "closed_at": "2017-11-26T18:27:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI upgraded `flake8-import-order` for [flake8](https://gitlab.com/pycqa/flake) and it started failing on L22 of our `src/flake8/__init__.py` file. I couldn't figure out how to resolve it so I simply had to silence it. Below are the contents of the file:\r\n\r\n```py\r\n\"\"\"Top-level module for Flake8.\r\n\r\nThis module\r\n\r\n- initializes logging for the command-line tool\r\n- tracks the version of the package\r\n- provides a way to configure logging for the command-line tool\r\n\r\n.. autofunction:: flake8.configure_logging\r\n\r\n\"\"\"\r\nimport logging\r\ntry:\r\n    from logging import NullHandler\r\nexcept ImportError:\r\n    class NullHandler(logging.Handler):\r\n        \"\"\"Shim for version of Python < 2.7.\"\"\"\r\n\r\n        def emit(self, record):\r\n            \"\"\"Do nothing.\"\"\"\r\n            pass\r\nimport sys  # noqa: I202\r\n\r\nLOG = logging.getLogger(__name__)\r\nLOG.addHandler(NullHandler())\r\n\r\n# Clean up after LOG config\r\ndel NullHandler\r\n\r\n__version__ = '3.5.0'\r\n__version_info__ = tuple(int(i) for i in __version__.split('.') if i.isdigit())\r\n\r\n\r\n# There is nothing lower than logging.DEBUG (10) in the logging library,\r\n# but we want an extra level to avoid being too verbose when using -vv.\r\n_EXTRA_VERBOSE = 5\r\nlogging.addLevelName(_EXTRA_VERBOSE, 'VERBOSE')\r\n\r\n_VERBOSITY_TO_LOG_LEVEL = {\r\n    # output more than warnings but not debugging info\r\n    1: logging.INFO,  # INFO is a numerical level of 20\r\n    # output debugging information\r\n    2: logging.DEBUG,  # DEBUG is a numerical level of 10\r\n    # output extra verbose debugging information\r\n    3: _EXTRA_VERBOSE,\r\n}\r\n\r\nLOG_FORMAT = ('%(name)-25s %(processName)-11s %(relativeCreated)6d '\r\n              '%(levelname)-8s %(message)s')\r\n\r\n\r\ndef configure_logging(verbosity, filename=None, logformat=LOG_FORMAT):\r\n    \"\"\"Configure logging for flake8.\r\n\r\n    :param int verbosity:\r\n        How verbose to be in logging information.\r\n    :param str filename:\r\n        Name of the file to append log information to.\r\n        If ``None`` this will log to ``sys.stderr``.\r\n        If the name is \"stdout\" or \"stderr\" this will log to the appropriate\r\n        stream.\r\n    \"\"\"\r\n    if verbosity <= 0:\r\n        return\r\n    if verbosity > 3:\r\n        verbosity = 3\r\n\r\n    log_level = _VERBOSITY_TO_LOG_LEVEL[verbosity]\r\n\r\n    if not filename or filename in ('stderr', 'stdout'):\r\n        fileobj = getattr(sys, filename or 'stderr')\r\n        handler_cls = logging.StreamHandler\r\n    else:\r\n        fileobj = filename\r\n        handler_cls = logging.FileHandler\r\n\r\n    handler = handler_cls(fileobj)\r\n    handler.setFormatter(logging.Formatter(logformat))\r\n    LOG.addHandler(handler)\r\n    LOG.setLevel(log_level)\r\n    LOG.debug('Added a %s logging handler to logger root at %s',\r\n              filename, __name__)\r\n```\r\n\r\nAnd this is the output of `flake8 --bug-report` in case that helps:\r\n\r\n```json\r\n{\r\n  \"dependencies\": [\r\n    {\r\n      \"dependency\": \"setuptools\",\r\n      \"version\": \"38.1.0\"\r\n    }\r\n  ],\r\n  \"platform\": {\r\n    \"python_implementation\": \"CPython\",\r\n    \"python_version\": \"3.6.3\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"plugins\": [\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"flake8-docstrings\",\r\n      \"version\": \"1.1.0, pydocstyle: 2.1.1\"\r\n    },\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"import-order\",\r\n      \"version\": \"0.15\"\r\n    },\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"mccabe\",\r\n      \"version\": \"0.6.1\"\r\n    },\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"pycodestyle\",\r\n      \"version\": \"2.3.1\"\r\n    },\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"pyflakes\",\r\n      \"version\": \"1.6.0\"\r\n    }\r\n  ],\r\n  \"version\": \"3.5.0\"\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/129", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/129/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/129/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/129", "id": 276290716, "node_id": "MDU6SXNzdWUyNzYyOTA3MTY=", "number": 129, "title": "Improve coverage setup in repo", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-23T08:07:52Z", "updated_at": "2017-11-24T20:26:14Z", "closed_at": "2017-11-24T20:26:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are a couple of odd things with the coverage configuration here:\r\n\r\n- The `tests/` directory is included under coverage sources, so coverage reports coverage on the tests files. This is quite odd; coverage on the test modules themselves is seldom interesting, and in general people only want to see coverage on the source.\r\n- The coverage status doesn't feed into any integration-style reports. I'm not sure what the requirements around coverage are for PRs, but given that all the work in setting up coverage is done, it's pretty easy to enable e.g. Codecov to report coverage changes in PRs.\r\n\r\nAlso, at this point it'd probably be a bit cleaner to use pytest-cov than to invoke coverage directly.\r\n\r\nI'd be happy to open a PR to address these if these are legitimate things worth addressing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/125", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/125/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/125/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/125", "id": 273006003, "node_id": "MDU6SXNzdWUyNzMwMDYwMDM=", "number": 125, "title": "Unwanted I202 errors", "user": {"login": "pkatseas", "id": 1475609, "node_id": "MDQ6VXNlcjE0NzU2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1475609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkatseas", "html_url": "https://github.com/pkatseas", "followers_url": "https://api.github.com/users/pkatseas/followers", "following_url": "https://api.github.com/users/pkatseas/following{/other_user}", "gists_url": "https://api.github.com/users/pkatseas/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkatseas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkatseas/subscriptions", "organizations_url": "https://api.github.com/users/pkatseas/orgs", "repos_url": "https://api.github.com/users/pkatseas/repos", "events_url": "https://api.github.com/users/pkatseas/events{/privacy}", "received_events_url": "https://api.github.com/users/pkatseas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-10T17:31:03Z", "updated_at": "2018-01-08T09:34:34Z", "closed_at": "2018-01-07T10:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, we're using this plugin for linting imports at EDITED and have noticed unwanted `I202`s with recent versions.\r\n\r\nOur style would normally allow for both of the following cases:\r\n```py\r\nimport X\r\nimport Y\r\nimport Z\r\nfrom X import *\r\nfrom X import A\r\n```\r\n and \r\n```py\r\nimport X\r\nimport Y\r\nimport Z\r\n\r\nfrom X import *\r\nfrom X import A\r\n```\r\n\r\nwith the difference here being the empty line between the `import` and `from` parts of an import section.\r\n\r\nIt looks like the second case is no longer allowed under `I202` though.\r\nWe have several codebases that already follow that kind of style though, and are getting a fair amount of `I202`s that we're actually OK with.\r\n\r\nFor the time being, we can pin to a version of the plugin that does not flag those up, so it's not a pressing issue.\r\nDo you however have any suggestions on how to proceed here to avoid remaining pinned to a version permanently?\r\nIf there are any pointers on necessary changes to allow for a bit more flexibility around this, I could provide a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/124", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/124/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/124/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/124", "id": 272306333, "node_id": "MDU6SXNzdWUyNzIzMDYzMzM=", "number": 124, "title": "application-package-names doesn't work with namespaced packages", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-08T18:43:58Z", "updated_at": "2017-11-16T20:34:22Z", "closed_at": "2017-11-08T21:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe `application-package-names` doesn't seem to work properly with namespaced packages.\r\n\r\nE.g.\r\n```\r\n# flake8-import-order will consider this as a third-party package, and disallow newlines\r\napplication-package-names = mynamespace.myproject\r\n```\r\n\r\nThis is probably because the `root_package_name` function considers `mynamespace` to be the root package name.\r\n\r\nhttps://github.com/PyCQA/flake8-import-order/blob/b563bc958d37b017cb9c79ab85121299bd459137/flake8_import_order/__init__.py#L82", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/123", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/123/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/123/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/123", "id": 271950928, "node_id": "MDU6SXNzdWUyNzE5NTA5Mjg=", "number": 123, "title": "Ignore comment lines from I202?", "user": {"login": "clokep", "id": 517124, "node_id": "MDQ6VXNlcjUxNzEyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/517124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clokep", "html_url": "https://github.com/clokep", "followers_url": "https://api.github.com/users/clokep/followers", "following_url": "https://api.github.com/users/clokep/following{/other_user}", "gists_url": "https://api.github.com/users/clokep/gists{/gist_id}", "starred_url": "https://api.github.com/users/clokep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clokep/subscriptions", "organizations_url": "https://api.github.com/users/clokep/orgs", "repos_url": "https://api.github.com/users/clokep/repos", "events_url": "https://api.github.com/users/clokep/events{/privacy}", "received_events_url": "https://api.github.com/users/clokep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-07T19:18:48Z", "updated_at": "2017-11-26T18:28:11Z", "closed_at": "2017-11-15T22:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is a bug really, but there's a couple of places I have code like:\r\n\r\n```python\r\nimport os\r\n# Need to import this for xyz.\r\nimport sys\r\n\r\n...\r\n```\r\n\r\nThis ends up with an error:\r\n```bash\r\n$ flake8 --import-order-style appnexus temp.py\r\ntemp.py:3:1: I202 Additional newline in a section of imports.\r\n```\r\n\r\nComments are explicit though, so maybe they should be ignored in the [spacing check](https://github.com/PyCQA/flake8-import-order/blob/e2e6e3ced50d6dc23b7a013a7ee124e4db3d8166/flake8_import_order/styles.py#L73-L78)?\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/122", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/122/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/122/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/122", "id": 271622731, "node_id": "MDU6SXNzdWUyNzE2MjI3MzE=", "number": 122, "title": "Regression in 0.15 with I202 (newline in imports)", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-06T21:14:53Z", "updated_at": "2017-11-15T22:48:43Z", "closed_at": "2017-11-06T21:32:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a given file `repro.py`, there is a regression:\r\n\r\n```\r\n$ virtualenv venv\r\n$ venv/bin/pip install flake8 flake8-import-order numpy\r\n$ venv/bin/python repro.py\r\nHere are my imports:\r\n- matplotlib.pyplot: None\r\n- numpy: <module 'numpy' from '.../venv/lib/python3.6/site-packages/numpy/__init__.py'>\r\n- seaborn: None\r\n- six: <module 'six' from '.../venv/lib/python3.6/site-packages/six.py'>\r\n$\r\n$ venv/bin/pip show flake8-import-order\r\nName: flake8-import-order\r\nVersion: 0.15\r\n$ venv/bin/flake8 repro.py --import-order-style=google\r\nrepro.py:10:1: I202 Additional newline in a section of imports.\r\n$\r\n$ venv/bin/pip install 'flake8-import-order==0.14.3'\r\n$ venv/bin/flake8 repro.py --import-order-style=google\r\n$\r\n```\r\n\r\n----\r\n\r\n```python\r\n# repro.py\r\ntry:\r\n    import matplotlib.pyplot as plt\r\nexcept ImportError:\r\n    plt = None\r\nimport numpy as np\r\ntry:\r\n    import seaborn  # pylint: disable=unused-import\r\nexcept ImportError:\r\n    seaborn = None\r\nimport six\r\n\r\n\r\ndef main():\r\n    \"\"\"This is the entry point.\"\"\"\r\n    print('Here are my imports:')\r\n    print('- matplotlib.pyplot: {}'.format(plt))\r\n    print('- numpy: {}'.format(np))\r\n    print('- seaborn: {}'.format(seaborn))\r\n    print('- six: {}'.format(six))\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nI don't have any preference for how I do my imports, so I'm happy to change the imports to \"conform\" to what is expected. Are there equivalent docs? My logic was \"keep them in alphabetical order and catch the potential `ImportError`-s as they come\".\r\n\r\nI have [\"fixed\"][1] this issue for now in a real code base just by ignoring the error.\r\n\r\n[1]: https://github.com/dhermes/bezier/blob/4400e4f300a0b227d7610a3f20d711ea6fe0e0d9/tests/unit/test__algebraic_intersection.py#L21", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/121", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/121/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/121/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/121", "id": 271241172, "node_id": "MDU6SXNzdWUyNzEyNDExNzI=", "number": 121, "title": "Cannot seem to trigger I201 or I202 errors", "user": {"login": "john-bodley", "id": 4567245, "node_id": "MDQ6VXNlcjQ1NjcyNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4567245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-bodley", "html_url": "https://github.com/john-bodley", "followers_url": "https://api.github.com/users/john-bodley/followers", "following_url": "https://api.github.com/users/john-bodley/following{/other_user}", "gists_url": "https://api.github.com/users/john-bodley/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-bodley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-bodley/subscriptions", "organizations_url": "https://api.github.com/users/john-bodley/orgs", "repos_url": "https://api.github.com/users/john-bodley/repos", "events_url": "https://api.github.com/users/john-bodley/events{/privacy}", "received_events_url": "https://api.github.com/users/john-bodley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-05T01:47:01Z", "updated_at": "2017-11-05T14:40:45Z", "closed_at": "2017-11-05T14:40:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unsure why but I am unable to trigger either the `I201` or `I202` errors, i.e, if I have code of the form, where both packages should be in the same section, \r\n```\r\nimport collections\r\n\r\nimport os\r\n```\r\nno errors are triggered. Note for context my `flake8` configuration is:\r\n```\r\n> flake8 --version\r\n3.5.0 (flake8_commas._base: 0.4.3, flake8_quotes: 0.11.0, import-order: 0.14.3, mccabe: 0.6.1, pycodestyle: 2.3.1, pyflakes: 1.6.0) CPython 2.7.13 on Darwin\r\n```\r\nand my `tox.ini` file is:\r\n```\r\n[flake8]\r\nimport-order-style = google\r\n\r\n[testenv:flake8]\r\ndeps =\r\n    flake8\r\n    flake8-import-order\r\ncommands = flake8\r\n\r\n[tox]\r\nenvlist = flake8\r\n```\r\nNote if I change the error code from `I202` [here](https://github.com/PyCQA/flake8-import-order/blob/master/flake8_import_order/styles.py#L76) to read `I100` say the error is present, and thus I wonder whether there may be a registration issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/120", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/120/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/120/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/120", "id": 271114939, "node_id": "MDU6SXNzdWUyNzExMTQ5Mzk=", "number": 120, "title": "Problem in 0.14.3 with `noqa` acceptance", "user": {"login": "justinmayer", "id": 1503700, "node_id": "MDQ6VXNlcjE1MDM3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1503700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmayer", "html_url": "https://github.com/justinmayer", "followers_url": "https://api.github.com/users/justinmayer/followers", "following_url": "https://api.github.com/users/justinmayer/following{/other_user}", "gists_url": "https://api.github.com/users/justinmayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmayer/subscriptions", "organizations_url": "https://api.github.com/users/justinmayer/orgs", "repos_url": "https://api.github.com/users/justinmayer/repos", "events_url": "https://api.github.com/users/justinmayer/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-03T20:50:13Z", "updated_at": "2017-11-07T12:32:08Z", "closed_at": "2017-11-07T12:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Prior to https://github.com/PyCQA/flake8-import-order/commit/95fe1b1f2ed1db6051acd8d1163dfb12a6b4784a and the 0.14.3 release, the following lines from [`pelican/__init__.py`](https://github.com/getpelican/pelican/blob/master/pelican/__init__.py#L15-L18) produced the expected result (i.e., passes `flake8` tests):\r\n```python\r\n# pelican.log has to be the first pelican module to be loaded\r\n# because logging.setLoggerClass has to be called before logging.getLogger\r\nfrom pelican.log import init  # noqa\r\nfrom pelican import signals\r\n[... other imports ...]\r\n```\r\n\r\nPost-0.14.3 release, Travis is now reporting a test failure in a [recent pull request](https://github.com/getpelican/pelican/pull/2246#issuecomment-341734308):\r\n```traceback\r\npelican/__init__.py:18:1: I100 Import statements are in the wrong order. from pelican should be before from pelican.log\r\n```\r\n\r\nI'm guessing this change in behavior is an unintended side effect that should be addressed in a subsequent `flake8-import-order` release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/119", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/119/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/119/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/119", "id": 270790036, "node_id": "MDU6SXNzdWUyNzA3OTAwMzY=", "number": 119, "title": "I201 Is Only Enforced When Selected", "user": {"login": "pwgraham91", "id": 7291189, "node_id": "MDQ6VXNlcjcyOTExODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7291189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwgraham91", "html_url": "https://github.com/pwgraham91", "followers_url": "https://api.github.com/users/pwgraham91/followers", "following_url": "https://api.github.com/users/pwgraham91/following{/other_user}", "gists_url": "https://api.github.com/users/pwgraham91/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwgraham91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwgraham91/subscriptions", "organizations_url": "https://api.github.com/users/pwgraham91/orgs", "repos_url": "https://api.github.com/users/pwgraham91/repos", "events_url": "https://api.github.com/users/pwgraham91/events{/privacy}", "received_events_url": "https://api.github.com/users/pwgraham91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-11-02T20:05:55Z", "updated_at": "2017-11-06T16:18:42Z", "closed_at": "2017-11-05T14:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "flake8 only throws errors on I201 when `--select I201` is used\r\n\r\nexample:\r\nmy_file.py\r\n```\r\nimport logging\r\nimport wtforms\r\nimport wtforms.validators as validators\r\n```\r\n`flake8 my_file.py`\r\n(returns nothing)\r\n\r\n`flake8 --select I201 my_file.py`\r\n`my_file.py:4:1: I201 Missing newline before sections or imports. I201 Missing newline before sections or imports.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/118", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/118/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/118/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/118", "id": 269954622, "node_id": "MDU6SXNzdWUyNjk5NTQ2MjI=", "number": 118, "title": "Can't use  # noqa: I202", "user": {"login": "andrew-regan", "id": 13903094, "node_id": "MDQ6VXNlcjEzOTAzMDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/13903094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-regan", "html_url": "https://github.com/andrew-regan", "followers_url": "https://api.github.com/users/andrew-regan/followers", "following_url": "https://api.github.com/users/andrew-regan/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-regan/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-regan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-regan/subscriptions", "organizations_url": "https://api.github.com/users/andrew-regan/orgs", "repos_url": "https://api.github.com/users/andrew-regan/repos", "events_url": "https://api.github.com/users/andrew-regan/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-regan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-31T13:18:11Z", "updated_at": "2017-11-01T19:01:23Z", "closed_at": "2017-11-01T19:01:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have imports that have comments inline...mostly for PyCharm inspections. Here's a example:\r\n\r\n```\r\nfrom foo.bar import baz\r\n# noinspection PyUnresolvedReferences\r\nfrom pyVmomi import vim, vmodl\r\nimport zeb\r\n```\r\n\r\nAssume that example is lines 1-4. I get an I202 error on line 3. When I try to ignore it via `# noqa: I202` the I202 then moves to line 4. It looks like the only temporary workaround is to add `# noqa: I202` to the first import that report I202 and all that follow. This flags no I202's:\r\n\r\n```\r\nfrom foo.bar import baz\r\n# noinspection PyUnresolvedReferences\r\nfrom pyVmomi import vim, vmodl  # noqa: I202\r\nimport zeb  # noqa: I202\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/117", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/117/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/117/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/117", "id": 269612530, "node_id": "MDU6SXNzdWUyNjk2MTI1MzA=", "number": 117, "title": "flake8-import-order 0.14.1 broke import order detection", "user": {"login": "thebigmunch", "id": 118418, "node_id": "MDQ6VXNlcjExODQxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/118418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thebigmunch", "html_url": "https://github.com/thebigmunch", "followers_url": "https://api.github.com/users/thebigmunch/followers", "following_url": "https://api.github.com/users/thebigmunch/following{/other_user}", "gists_url": "https://api.github.com/users/thebigmunch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thebigmunch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thebigmunch/subscriptions", "organizations_url": "https://api.github.com/users/thebigmunch/orgs", "repos_url": "https://api.github.com/users/thebigmunch/repos", "events_url": "https://api.github.com/users/thebigmunch/events{/privacy}", "received_events_url": "https://api.github.com/users/thebigmunch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-30T14:07:48Z", "updated_at": "2017-10-30T19:53:50Z", "closed_at": "2017-10-30T19:53:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following ``test.py``:\r\n\r\n```\r\nimport test2\r\nimport test\r\nfrom test2 import test2_m\r\nfrom test import test_m\r\n\r\n(test, test2, test_m, test2_m)\r\n```\r\n\r\n``flake8 --import-order-style <style> test.py`` (where I've tested for cryptography, google, and smarkets as style) on 0.14 gives the expected output:\r\n\r\n```\r\ntest.py:2:1: I100 Import statements are in the wrong order. import test should be before import test2\r\ntest.py:4:1: I100 Import statements are in the wrong order. from test should be before from test2\r\n```\r\n\r\nThe same commands on 0.14.1 give no warnings.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/116", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/116/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/116/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/116", "id": 268766698, "node_id": "MDU6SXNzdWUyNjg3NjY2OTg=", "number": 116, "title": "I202 flags multiline imports ", "user": {"login": "andrew-regan", "id": 13903094, "node_id": "MDQ6VXNlcjEzOTAzMDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/13903094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-regan", "html_url": "https://github.com/andrew-regan", "followers_url": "https://api.github.com/users/andrew-regan/followers", "following_url": "https://api.github.com/users/andrew-regan/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-regan/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-regan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-regan/subscriptions", "organizations_url": "https://api.github.com/users/andrew-regan/orgs", "repos_url": "https://api.github.com/users/andrew-regan/repos", "events_url": "https://api.github.com/users/andrew-regan/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-regan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-26T13:47:58Z", "updated_at": "2017-10-27T21:51:38Z", "closed_at": "2017-10-27T21:51:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have several import statements that wrap lines due to line length restrictions. The recent changes for I202 flag these as in violation.\r\n\r\nExamples:\r\n```\r\nfrom foo import bar, baz, \\\r\n    bee\r\n```\r\n\r\n```\r\nfrom foo import (bar, baz, \r\n    bee)\r\n```\r\n\r\nI also haven't found a way to ignore these by adding `# noqa: I202` because that looks to also cause I202 to be raised.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/114", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/114/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/114/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/114", "id": 261137539, "node_id": "MDU6SXNzdWUyNjExMzc1Mzk=", "number": 114, "title": "Differentiate constants, classes and variables imports", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-27T22:27:40Z", "updated_at": "2017-10-02T11:24:01Z", "closed_at": "2017-10-01T09:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\n~~Would it be possible to add an option to make case insensitivity optional? I really find that taking case into account just makes more sense and helps separating constants, classes and variables imports. We could add an option like `ignore-imports-case` that would default to true. I don't really want to put this logic into my projects, so it would help if it were proposed as a built-in option.~~\r\n\r\nSee https://github.com/PyCQA/flake8-import-order/issues/114#issuecomment-333365135\r\n\r\nWould a contribution in this direction be accepted?\r\n\r\nThanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/111", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/111/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/111/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/111", "id": 245225561, "node_id": "MDU6SXNzdWUyNDUyMjU1NjE=", "number": 111, "title": "Improve namespace package support", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-07-24T22:14:14Z", "updated_at": "2017-11-20T21:16:34Z", "closed_at": "2017-11-20T21:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using flake8 with namespace packages and we'd like to group our imports like this:\r\n\r\n```python\r\nimport functools\r\n\r\nimport google.auth  # separate package\r\nfrom google.cloud import core  # separate package\r\nimport six\r\n\r\nfrom google.cloud.bigquery import table  # package-local, we're in google/cloud/bigquery/job.py\r\n```\r\n\r\nIt's fine if we need to specify this via a flag (like `--application-import-names=google.cloud.bigquery`)\r\n\r\nPresently we must either choose between putting all `google.*` imports in the 2nd grouping or the 3rd grouping.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/109", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/109/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/109/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/109", "id": 242200498, "node_id": "MDU6SXNzdWUyNDIyMDA0OTg=", "number": 109, "title": "Custom styles should be able to use the application-package-names setting", "user": {"login": "RevolutionTech", "id": 6820092, "node_id": "MDQ6VXNlcjY4MjAwOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6820092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RevolutionTech", "html_url": "https://github.com/RevolutionTech", "followers_url": "https://api.github.com/users/RevolutionTech/followers", "following_url": "https://api.github.com/users/RevolutionTech/following{/other_user}", "gists_url": "https://api.github.com/users/RevolutionTech/gists{/gist_id}", "starred_url": "https://api.github.com/users/RevolutionTech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RevolutionTech/subscriptions", "organizations_url": "https://api.github.com/users/RevolutionTech/orgs", "repos_url": "https://api.github.com/users/RevolutionTech/repos", "events_url": "https://api.github.com/users/RevolutionTech/events{/privacy}", "received_events_url": "https://api.github.com/users/RevolutionTech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-11T22:15:09Z", "updated_at": "2017-07-23T23:20:47Z", "closed_at": "2017-07-22T09:48:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, `checker.py` uses the `application-package-names` option only if the name of the style matches a whitelist: `['appnexus', 'edited']`:\r\nhttps://github.com/PyCQA/flake8-import-order/blob/35434d29ddc9c1a580ae0c9ff14b8f00a288fd99/flake8_import_order/checker.py#L44\r\n\r\nThat means that it is not possible to create a custom style that extends the behaviour of the `AppNexus` or `Edited` styles (ie. that uses `application-package-names` option) unless that style also uses the same name.\r\n\r\nI would suggest that instead of comparing the name, a property be added the base `Style` class like `accepts_application_package_names` which is set to `False` in the `Style` class but set to `True` in the `AppNexus` and `Edited` classes. Then the logic in `checker.py` should be changed to check for this flag in the style class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/107", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/107/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/107/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/107", "id": 238326718, "node_id": "MDU6SXNzdWUyMzgzMjY3MTg=", "number": 107, "title": "New error code and condition, I202", "user": {"login": "pgjones", "id": 1391482, "node_id": "MDQ6VXNlcjEzOTE0ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgjones", "html_url": "https://github.com/pgjones", "followers_url": "https://api.github.com/users/pgjones/followers", "following_url": "https://api.github.com/users/pgjones/following{/other_user}", "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions", "organizations_url": "https://api.github.com/users/pgjones/orgs", "repos_url": "https://api.github.com/users/pgjones/repos", "events_url": "https://api.github.com/users/pgjones/events{/privacy}", "received_events_url": "https://api.github.com/users/pgjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-24T16:20:08Z", "updated_at": "2017-09-05T18:15:07Z", "closed_at": "2017-09-05T18:15:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As newlines represent a change of import grouping, additional newlines should be considered incorrect. For example,\r\n```python\r\nimport asyncio\r\n\r\nimport secrets\r\n```\r\nShould raise a I202 as the newline does not represent an acceptable newline location (as the grouping is the same).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/105", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/105/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/105/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/105", "id": 219273075, "node_id": "MDU6SXNzdWUyMTkyNzMwNzU=", "number": 105, "title": "flake8-import-order-0.12: test failure: Unknown style appnexus", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-04T14:38:55Z", "updated_at": "2017-11-20T21:30:41Z", "closed_at": "2017-11-20T21:30:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running the tests for flake8-import-order (pypi distfile) on NetBSD with python-3.6.1, I see:\r\n````\r\ncd .../flake8-import-order-0.12 && py.test-3.6\r\n============================================================================= test session starts =============================================================================\r\nplatform netbsd7 -- Python 3.6.1, pytest-3.0.7, py-1.4.30, pluggy-0.4.0\r\nrootdir: .../flake8-import-order-0.12, inifile:\r\nplugins: pylama-7.3.3\r\ncollected 329 items / 1 errors \r\n\r\n=================================================================================== ERRORS ====================================================================================\r\n_________________________________________________________________ ERROR collecting tests/test_style_cases.py __________________________________________________________________\r\nflake8_import_order/styles.py:20: in lookup_entry_point\r\n    return next(iter_entry_points('flake8_import_order.styles', name=name))\r\nE   StopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\ntests/test_style_cases.py:59: in <module>\r\n    _load_test_cases(),\r\ntests/test_style_cases.py:39: in _load_test_cases\r\n    style_entry_point = lookup_entry_point(style_name)\r\nflake8_import_order/styles.py:22: in lookup_entry_point\r\n    raise LookupError('Unknown style {}'.format(name))\r\nE   LookupError: Unknown style appnexus\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n=========================================================================== 1 error in 0.35 seconds ===========================================================================\r\n*** Error code 2\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/101", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/101/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/101/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/101", "id": 201556989, "node_id": "MDU6SXNzdWUyMDE1NTY5ODk=", "number": 101, "title": "Company imports in smarkets style or smarknexus", "user": {"login": "janrito", "id": 31504, "node_id": "MDQ6VXNlcjMxNTA0", "avatar_url": "https://avatars2.githubusercontent.com/u/31504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janrito", "html_url": "https://github.com/janrito", "followers_url": "https://api.github.com/users/janrito/followers", "following_url": "https://api.github.com/users/janrito/following{/other_user}", "gists_url": "https://api.github.com/users/janrito/gists{/gist_id}", "starred_url": "https://api.github.com/users/janrito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janrito/subscriptions", "organizations_url": "https://api.github.com/users/janrito/orgs", "repos_url": "https://api.github.com/users/janrito/repos", "events_url": "https://api.github.com/users/janrito/events{/privacy}", "received_events_url": "https://api.github.com/users/janrito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-18T12:08:32Z", "updated_at": "2017-01-26T13:46:25Z", "closed_at": "2017-01-25T20:48:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Internally, we use the smarkets style, but with the addition of an import group for internal (company) pip distributed packages. Similar to what is already available for the google style, renamed appnexus.\r\n\r\nCould we have support for `application-import-names` and `application-package-names` in either the smarkets style or a new smarknexus style? \r\n\r\nHappy to submit a PR if this is something people are interested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/100", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/100/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/100/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/100", "id": 197942071, "node_id": "MDU6SXNzdWUxOTc5NDIwNzE=", "number": 100, "title": "Possible bug?", "user": {"login": "skorokithakis", "id": 23648, "node_id": "MDQ6VXNlcjIzNjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/23648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skorokithakis", "html_url": "https://github.com/skorokithakis", "followers_url": "https://api.github.com/users/skorokithakis/followers", "following_url": "https://api.github.com/users/skorokithakis/following{/other_user}", "gists_url": "https://api.github.com/users/skorokithakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/skorokithakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skorokithakis/subscriptions", "organizations_url": "https://api.github.com/users/skorokithakis/orgs", "repos_url": "https://api.github.com/users/skorokithakis/repos", "events_url": "https://api.github.com/users/skorokithakis/events{/privacy}", "received_events_url": "https://api.github.com/users/skorokithakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-29T01:56:49Z", "updated_at": "2017-11-16T19:57:18Z", "closed_at": "2016-12-29T12:56:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing flake8-import-order complain about this:\r\n\r\n~~~\r\nimport pychromecast\r\nimport youtube_dl\r\n~~~\r\n\r\nIt's saying that it needs a newline before youtube_dl. Should that be so? Why should I need to insert a newline there?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/99", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/99/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/99/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/99", "id": 195396143, "node_id": "MDU6SXNzdWUxOTUzOTYxNDM=", "number": 99, "title": "Automatically optimize imports", "user": {"login": "advance512", "id": 3903412, "node_id": "MDQ6VXNlcjM5MDM0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3903412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/advance512", "html_url": "https://github.com/advance512", "followers_url": "https://api.github.com/users/advance512/followers", "following_url": "https://api.github.com/users/advance512/following{/other_user}", "gists_url": "https://api.github.com/users/advance512/gists{/gist_id}", "starred_url": "https://api.github.com/users/advance512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/advance512/subscriptions", "organizations_url": "https://api.github.com/users/advance512/orgs", "repos_url": "https://api.github.com/users/advance512/repos", "events_url": "https://api.github.com/users/advance512/events{/privacy}", "received_events_url": "https://api.github.com/users/advance512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-13T23:11:45Z", "updated_at": "2019-03-03T15:49:59Z", "closed_at": "2019-03-03T15:49:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyCharm has such a feature, but it doesn't do it as precisely as flake8-import-order can.\r\n\r\nI suggest either adding an \"Auto-optimize\" feature that modifies the order the imports in the top-level import block (via --in-place flag), or an \"optimized suggestion\" that is outputted.\r\n\r\nThe current situation where I have to run flake8 several times to try and find the \"correct\" order (sometimes I don't notice lexicographic order, for example, or where flake8-import-order expects a newline to be found) is not ideal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/91", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/91/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/91/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/91", "id": 180333761, "node_id": "MDU6SXNzdWUxODAzMzM3NjE=", "number": 91, "title": "Possible bug in smarkets style checking", "user": {"login": "marpetr", "id": 546797, "node_id": "MDQ6VXNlcjU0Njc5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/546797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marpetr", "html_url": "https://github.com/marpetr", "followers_url": "https://api.github.com/users/marpetr/followers", "following_url": "https://api.github.com/users/marpetr/following{/other_user}", "gists_url": "https://api.github.com/users/marpetr/gists{/gist_id}", "starred_url": "https://api.github.com/users/marpetr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marpetr/subscriptions", "organizations_url": "https://api.github.com/users/marpetr/orgs", "repos_url": "https://api.github.com/users/marpetr/repos", "events_url": "https://api.github.com/users/marpetr/events{/privacy}", "received_events_url": "https://api.github.com/users/marpetr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-30T15:31:23Z", "updated_at": "2016-09-30T19:06:45Z", "closed_at": "2016-09-30T19:06:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a file with the following group of imports:\n\n``` python\nimport datetime\nimport dateutil.parser\nimport logging\n\n\ndatetime\ndateutil.parser\nlogging\n```\n\nImport order looks right, but flake8 complains about it:\n\n```\n$ flake8 foo.py\nfoo.py:3:1: I100 Import statements are in the wrong order.import logging should be before import dateutil.parser\n```\n\nRearranging imports in the following order satisfies flake8:\n\n``` python\nimport datetime\nimport logging\nimport dateutil.parser\n```\n\nIs this intended by design? I couldn't find the precise definition of _smarkets_ import style, hence can't tell where is the problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/89", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/89/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/89/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/89", "id": 178046076, "node_id": "MDU6SXNzdWUxNzgwNDYwNzY=", "number": 89, "title": "Compat for modules like concurrent.futures which are not bulid-in in python2", "user": {"login": "triostones", "id": 13971923, "node_id": "MDQ6VXNlcjEzOTcxOTIz", "avatar_url": "https://avatars3.githubusercontent.com/u/13971923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/triostones", "html_url": "https://github.com/triostones", "followers_url": "https://api.github.com/users/triostones/followers", "following_url": "https://api.github.com/users/triostones/following{/other_user}", "gists_url": "https://api.github.com/users/triostones/gists{/gist_id}", "starred_url": "https://api.github.com/users/triostones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/triostones/subscriptions", "organizations_url": "https://api.github.com/users/triostones/orgs", "repos_url": "https://api.github.com/users/triostones/repos", "events_url": "https://api.github.com/users/triostones/events{/privacy}", "received_events_url": "https://api.github.com/users/triostones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-20T12:29:40Z", "updated_at": "2016-10-01T14:48:20Z", "closed_at": "2016-10-01T14:48:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\nI found `flake8-import-order` can not work well with some modules which are only built-in in python3 in python2 environment, like `concurrent.futures`. For example:\n\n```\n$ cat a.py\nimport concurrent.futures\nimport click\n\n$ python --version\nPython 2.7.10\n\n$ flake8 a.py \na.py:1:1: F401 'concurrent.futures' imported but unused\na.py:2:1: F401 'click' imported but unused\n```\n\nThere is no `I100` warning which should show in python2.\n\nThen I modified `a.py`:\n\n```\n$ cat a.py \nimport click\nimport concurrent.futures\n\n$ flake8 a.py \na.py:1:1: F401 'click' imported but unused\na.py:2:1: F401 'concurrent.futures' imported but unused\na.py:2:1: I100 Import statements are in the wrong order.import concurrent.futures should be before import click\n```\n\nThere is an `I100` warning which should not show in this import order.\n\nI think it should be more flexible in python2 for these modules like `concurrent.futures`.\n\nThanks for your patience and sorry for my poor English.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/87", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/87/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/87/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/87", "id": 176019397, "node_id": "MDU6SXNzdWUxNzYwMTkzOTc=", "number": 87, "title": "Regression in import order check", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-09T14:11:28Z", "updated_at": "2016-10-01T18:21:24Z", "closed_at": "2016-10-01T18:21:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be a regression between 0.6.1 and 0.9.2. The following imports are no longer considered in wrong order (H, then C, the P). flake8-import-order == 0.6.1 reported this.\n\n```\nfrom custodia.plugin import HTTPConsumer, HTTPError\nfrom custodia.plugin import CSStoreError, CSStoreExists, PluginOption\n```\n\nhttps://github.com/latchset/custodia/issues/73\nhttps://github.com/latchset/custodia/pull/71\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/86", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/86/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/86/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/86", "id": 172209161, "node_id": "MDU6SXNzdWUxNzIyMDkxNjE=", "number": 86, "title": "Possible to automatically determine application import names?", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-19T20:00:50Z", "updated_at": "2016-09-04T11:20:28Z", "closed_at": "2016-09-04T11:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Presently it's pretty fragile to list every application-local import name for --application-import-names. Is it possible to check for the presence of the module file in the directory to figure it out?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/81", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/81/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/81/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/81", "id": 168031902, "node_id": "MDU6SXNzdWUxNjgwMzE5MDI=", "number": 81, "title": "IndexError when checking file from stdin", "user": {"login": "remcohaszing", "id": 779047, "node_id": "MDQ6VXNlcjc3OTA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/779047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remcohaszing", "html_url": "https://github.com/remcohaszing", "followers_url": "https://api.github.com/users/remcohaszing/followers", "following_url": "https://api.github.com/users/remcohaszing/following{/other_user}", "gists_url": "https://api.github.com/users/remcohaszing/gists{/gist_id}", "starred_url": "https://api.github.com/users/remcohaszing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remcohaszing/subscriptions", "organizations_url": "https://api.github.com/users/remcohaszing/orgs", "repos_url": "https://api.github.com/users/remcohaszing/repos", "events_url": "https://api.github.com/users/remcohaszing/events{/privacy}", "received_events_url": "https://api.github.com/users/remcohaszing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-07-28T07:34:51Z", "updated_at": "2017-07-26T18:11:04Z", "closed_at": "2017-07-26T18:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When linting a file from stdin, this plugin raises an error.\n\n```\n$ cat conftest.py | flake8 -\nTraceback (most recent call last):\n  File \"/tmp/venv/bin/flake8\", line 11, in <module>\n    sys.exit(main())\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/main/cli.py\", line 16, in main\n    app.run(argv)\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/main/application.py\", line 316, in run\n    self._run(argv)\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/main/application.py\", line 300, in _run\n    self.run_checks()\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/main/application.py\", line 238, in run_checks\n    self.file_checker_manager.run()\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/checker.py\", line 346, in run\n    self.run_serial()\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/checker.py\", line 330, in run_serial\n    checker.run_checks(self.results_queue, self.statistics_queue)\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/checker.py\", line 564, in run_checks\n    self.run_ast_checks()\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8/checker.py\", line 475, in run_ast_checks\n    for (line_number, offset, text, check) in runner:\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8_import_order/flake8_linter.py\", line 66, in run\n    for error in self.check_order():\n  File \"/tmp/venv/lib/python3.5/site-packages/flake8_import_order/checker.py\", line 46, in check_order\n    if not pycodestyle.noqa(self.lines[import_.lineno - 1]):\nIndexError: list index out of range\n```\n\nThis does work when just linting a file instead.\n\n```\n$ flake8 conftest.py\n$\n```\n\nI've installed the following packages in my environment (simply a virtualenv using the latest `flake8` and `flake8-import-order`).\n\n```\n$ pip list\nflake8 (3.0.2)\nflake8-import-order (0.9.1)\nmccabe (0.5.0)\npip (8.1.2)\npycodestyle (2.0.0)\npyflakes (1.2.3)\nsetuptools (25.1.0)\nwheel (0.29.0)\n```\n\nThis bug does not yet exist when using the following requirements:\n\n```\nflake8 ~= 2.5.5\nflake8-import-order ~= 0.8.0\n```\n\nI didn't try this using `flake8 ~= 2.6.0`, because this was causing errors related to other plugins.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/80", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/80/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/80/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/80", "id": 167889235, "node_id": "MDU6SXNzdWUxNjc4ODkyMzU=", "number": 80, "title": "Error in Google order style (I100)", "user": {"login": "pferate", "id": 468011, "node_id": "MDQ6VXNlcjQ2ODAxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-07-27T15:52:20Z", "updated_at": "2016-10-24T09:58:22Z", "closed_at": "2016-07-27T20:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "A change in the 0.9 release broke the Google order style, at least for `I100`.  It looks like it is not ignoring the case of letters anymore.\n\nAccording to the [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html?showone=Imports_formatting#Imports_formatting)\n\n> Within each grouping, imports should be sorted lexicographically, ignoring case, according to each module's full package path.\n\nHere is an example that worked in 0.8, but is flagging `I100` in 0.9:\n\n``` python\nimport os\nimport StringIO\nimport sys\n```\n\nThis (incorrect) example passes in 0.9:\n\n``` python\nimport StringIO\nimport os\nimport sys\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/79", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/79/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/79/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/79", "id": 167354079, "node_id": "MDU6SXNzdWUxNjczNTQwNzk=", "number": 79, "title": "Crash when run with flake8 3.0", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-07-25T12:26:47Z", "updated_at": "2017-06-26T18:58:20Z", "closed_at": "2016-07-26T19:12:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` pytb\n(cryptography) ~/p/cryptography (master) $ flake8\nTraceback (most recent call last):\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/bin/flake8\", line 11, in <module>\n    sys.exit(main())\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/main/cli.py\", line 16, in main\n    app.run(argv)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/main/application.py\", line 299, in run\n    self._run(argv)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/main/application.py\", line 285, in _run\n    self.initialize(argv)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/main/application.py\", line 276, in initialize\n    self.register_plugin_options()\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/main/application.py\", line 150, in register_plugin_options\n    self.check_plugins.register_options(self.option_manager)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/plugins/manager.py\", line 451, in register_options\n    list(self.manager.map(register_and_enable))\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/plugins/manager.py\", line 261, in map\n    yield func(self.plugins[name], *args, **kwargs)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/plugins/manager.py\", line 447, in register_and_enable\n    call_register_options(plugin)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/plugins/manager.py\", line 357, in generated_function\n    return method(optmanager, *args, **kwargs)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8/plugins/manager.py\", line 207, in register_options\n    add_options(optmanager)\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/flake8_import_order/flake8_linter.py\", line 32, in add_options\n    parser.config_options.append(\"application-import-names\")\nAttributeError: 'OptionManager' object has no attribute 'config_options'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/76", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/76/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/76/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/76", "id": 162758387, "node_id": "MDU6SXNzdWUxNjI3NTgzODc=", "number": 76, "title": "Intermixed 1st and 3rd party imports in pep8 mode cause TypeError", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-28T18:48:47Z", "updated_at": "2016-07-23T11:11:22Z", "closed_at": "2016-07-23T11:11:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In pep8 mode code files containing standard library imports after third party ones cause a TypeError in [`ImportOrderChecker.check_order.build_str`](https://github.com/PyCQA/flake8-import-order/blob/master/flake8_import_order/__init__.py#L275).\n\nMinimal example:\n\n`test.py`:\n\n``` python\nimport thirdparty\nimport sys\n```\n\n```\n~ # pip install flake8 flake8-import-order\n[...]\nSuccessfully installed flake8-2.6.2 flake8-import-order-0.8 mccabe-0.5.0 pep8-1.7.0 pycodestyle-2.0.0 pyflakes-1.2.3\n\n~ # flake8 --import-order-style=pep8 test.py\n```\n\n``` pytb\nTraceback (most recent call last):\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/bin/flake8\", line 11, in <module>\n    sys.exit(main())\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8/main.py\", line 36, in main\n    report = flake8_style.check_files()\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8/engine.py\", line 181, in check_files\n    return self._retry_serial(self._styleguide.check_files, paths=paths)\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8/engine.py\", line 172, in _retry_serial\n    return func(*args, **kwargs)\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/pycodestyle.py\", line 1877, in check_files\n    runner(path)\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8/engine.py\", line 126, in input_file\n    return fchecker.check_all(expected=expected, line_offset=line_offset)\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/pycodestyle.py\", line 1608, in check_all\n    self.check_ast()\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/pycodestyle.py\", line 1555, in check_ast\n    for lineno, offset, text, check in checker.run():\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8_import_order/flake8_linter.py\", line 52, in run\n    for error in self.check_order():\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8_import_order/__init__.py\", line 289, in check_order\n    first_str = build_str(k)\n  File \"/Users/ulo/Envs/tmp-686c3c2aab00eaf/lib/python3.5/site-packages/flake8_import_order/__init__.py\", line 283, in build_str\n    if level >= 0:\nTypeError: unorderable types: NoneType() >= int()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/74", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/74/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/74/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/74", "id": 161316602, "node_id": "MDU6SXNzdWUxNjEzMTY2MDI=", "number": 74, "title": "Consider pep8 style for being the default", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-20T23:12:16Z", "updated_at": "2016-09-04T11:22:05Z", "closed_at": "2016-09-04T11:22:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that there is a `pep8` style, I would suggest that it be considered for the default.  While I personally use `google` and will continue to specify this, I think for the general use case this makes the most sense as the default.\n\nI totally get though that this was made for the `cryptography` devs by the `cryptography` dev and that is clearly stated in the `README`.  So this is not a necessary change, but I do think it would be just a little better.  This would allow someone to just `pip install` it along side other PEP8 extensions (like `pep8-naming`) and get an out-of-the-box experience that they might expect.\n\nAgain, thanks for the great tool.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/70", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/70/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/70/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/70", "id": 158011248, "node_id": "MDU6SXNzdWUxNTgwMTEyNDg=", "number": 70, "title": "Clarify in documentation how modules are determined to be of a certain type", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-01T21:28:15Z", "updated_at": "2016-06-08T20:03:11Z", "closed_at": "2016-06-08T20:03:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the [Limitations](https://github.com/public/flake8-import-order#limitations) section of the docs:\n\n> The classification of an import as being non-stdlib of some kind depends on that package actually being installed.\n\nBut looking at the code in [`_import_type()`](https://github.com/public/flake8-import-order/blob/master/flake8_import_order/__init__.py#L175) it seems like what really happens is that if the module doesn't match the others, it's considered to be third party.  This was confusing at first because based on the documentation I tried installing/uninstalling third party packages to try to fix issues:\n\n```\n        else:\n            # Not future, stdlib or an application import.\n            # Must be 3rd party.\n            return IMPORT_3RD_PARTY\n```\n\nNext:\n\n> You will want to set the application-import-names option to a comma separated list of names that should be considered local to your application. These will be used to help categorise your import statements into the correct groups.\n\nAlso from [`_import_type()`](https://github.com/public/flake8-import-order/blob/master/flake8_import_order/__init__.py#L175), it would be helpful to new users to mention that relative imports are always considered local:\n\n```\n        if name is None:\n            # relative import\n            return IMPORT_APP\n...\n        elif isinstance(node, ast.ImportFrom) and node.level > 0:\n            return IMPORT_APP_RELATIVE\n```\n\nI realize these are somewhat implementation details, but I think they really help new comers determine why many of the locals are properly recognized, but not others.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/67", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/67/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/67/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/67", "id": 157385402, "node_id": "MDU6SXNzdWUxNTczODU0MDI=", "number": 67, "title": "Inconsistent warnings in documentation", "user": {"login": "xZise", "id": 417478, "node_id": "MDQ6VXNlcjQxNzQ3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/417478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xZise", "html_url": "https://github.com/xZise", "followers_url": "https://api.github.com/users/xZise/followers", "following_url": "https://api.github.com/users/xZise/following{/other_user}", "gists_url": "https://api.github.com/users/xZise/gists{/gist_id}", "starred_url": "https://api.github.com/users/xZise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xZise/subscriptions", "organizations_url": "https://api.github.com/users/xZise/orgs", "repos_url": "https://api.github.com/users/xZise/repos", "events_url": "https://api.github.com/users/xZise/events{/privacy}", "received_events_url": "https://api.github.com/users/xZise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-29T13:02:38Z", "updated_at": "2016-05-29T17:30:01Z", "closed_at": "2016-05-29T17:30:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a rather minor issue but when I was reading through the README I noticed that you mention the `I103` warning but there seems to be no such warning.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/66", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/66/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/66/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/66", "id": 157164322, "node_id": "MDU6SXNzdWUxNTcxNjQzMjI=", "number": 66, "title": "import typing not considered part of standard library", "user": {"login": "Korijn", "id": 1882046, "node_id": "MDQ6VXNlcjE4ODIwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1882046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Korijn", "html_url": "https://github.com/Korijn", "followers_url": "https://api.github.com/users/Korijn/followers", "following_url": "https://api.github.com/users/Korijn/following{/other_user}", "gists_url": "https://api.github.com/users/Korijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Korijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Korijn/subscriptions", "organizations_url": "https://api.github.com/users/Korijn/orgs", "repos_url": "https://api.github.com/users/Korijn/repos", "events_url": "https://api.github.com/users/Korijn/events{/privacy}", "received_events_url": "https://api.github.com/users/Korijn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-27T09:18:25Z", "updated_at": "2016-05-31T20:46:34Z", "closed_at": "2016-05-31T20:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `typing` module that is part of the standard library as of Python 3.5 is not recognized as being part of the standard library: flake8-import-order is indicating that it belongs to the 3rd party module groups, under google import styling.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/64", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/64/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/64/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/64", "id": 156064532, "node_id": "MDU6SXNzdWUxNTYwNjQ1MzI=", "number": 64, "title": "smarkets option not listed in --help", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-20T22:47:52Z", "updated_at": "2016-05-25T20:10:55Z", "closed_at": "2016-05-25T20:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "`smarkets` is not listed with `--help` is supplied:\n\n```\n --import-order-style=IMPORT_ORDER_STYLE\n                        Style to follow. Available: cryptography, google\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/61", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/61/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/61/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/61", "id": 140164869, "node_id": "MDU6SXNzdWUxNDAxNjQ4Njk=", "number": 61, "title": "Update changelog for 0.7", "user": {"login": "meshy", "id": 767671, "node_id": "MDQ6VXNlcjc2NzY3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/767671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meshy", "html_url": "https://github.com/meshy", "followers_url": "https://api.github.com/users/meshy/followers", "following_url": "https://api.github.com/users/meshy/following{/other_user}", "gists_url": "https://api.github.com/users/meshy/gists{/gist_id}", "starred_url": "https://api.github.com/users/meshy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meshy/subscriptions", "organizations_url": "https://api.github.com/users/meshy/orgs", "repos_url": "https://api.github.com/users/meshy/repos", "events_url": "https://api.github.com/users/meshy/events{/privacy}", "received_events_url": "https://api.github.com/users/meshy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-11T11:46:05Z", "updated_at": "2016-05-25T18:25:12Z", "closed_at": "2016-05-25T18:25:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there, thanks for this fantastic library.\n\nI notice that 0.7 has been released, but the changelog does not say what the changes were. May I ask that it be updated, please?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/60", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/60/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/60/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/60", "id": 138694901, "node_id": "MDU6SXNzdWUxMzg2OTQ5MDE=", "number": 60, "title": "no tar-ball on pypi", "user": {"login": "arunpersaud", "id": 425653, "node_id": "MDQ6VXNlcjQyNTY1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/425653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunpersaud", "html_url": "https://github.com/arunpersaud", "followers_url": "https://api.github.com/users/arunpersaud/followers", "following_url": "https://api.github.com/users/arunpersaud/following{/other_user}", "gists_url": "https://api.github.com/users/arunpersaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunpersaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunpersaud/subscriptions", "organizations_url": "https://api.github.com/users/arunpersaud/orgs", "repos_url": "https://api.github.com/users/arunpersaud/repos", "events_url": "https://api.github.com/users/arunpersaud/events{/privacy}", "received_events_url": "https://api.github.com/users/arunpersaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-05T16:17:38Z", "updated_at": "2016-05-31T19:16:59Z", "closed_at": "2016-05-31T19:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "for 0.7 there is no tar-ball on pypi, which are used for distributions to package the module. Would be great, if you could provide one again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/55", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/55/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/55/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/55", "id": 124558993, "node_id": "MDU6SXNzdWUxMjQ1NTg5OTM=", "number": 55, "title": "Bogus license header in __about__.py?", "user": {"login": "scop", "id": 109152, "node_id": "MDQ6VXNlcjEwOTE1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/109152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scop", "html_url": "https://github.com/scop", "followers_url": "https://api.github.com/users/scop/followers", "following_url": "https://api.github.com/users/scop/following{/other_user}", "gists_url": "https://api.github.com/users/scop/gists{/gist_id}", "starred_url": "https://api.github.com/users/scop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scop/subscriptions", "organizations_url": "https://api.github.com/users/scop/orgs", "repos_url": "https://api.github.com/users/scop/repos", "events_url": "https://api.github.com/users/scop/events{/privacy}", "received_events_url": "https://api.github.com/users/scop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-01T19:51:39Z", "updated_at": "2016-03-03T17:13:58Z", "closed_at": "2016-03-03T17:13:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The license header boilerplate in  `__about__.py` is Apache Software License 2.0, while it should probably be LGPLv3; `__about__.py` itself has `__license__ = \"LGPLv3\"` in the code.\n\nAlso, it wouldn't hurt to add license headers to all source files.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/50", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/50/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/50/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/50", "id": 107494891, "node_id": "MDU6SXNzdWUxMDc0OTQ4OTE=", "number": 50, "title": "Complaint about something that's already the case", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-21T11:50:11Z", "updated_at": "2016-07-23T11:11:29Z", "closed_at": "2016-07-23T11:11:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n(tempenv-7746105805205) ~/p/h/usds-buildbot $ flake8 buildbot.py test_buildbot.py\ntest_buildbot.py:4:1: I101 Imported names are in the wrong order. Should be Contact, parse_project, RawSegment, split_document, split_section\n(tempenv-7746105805205) ~/p/h/usds-buildbot $ head test_buildbot.py\nimport datetime\nimport textwrap\n\nfrom buildbot import (\n    Contact, parse_project, RawSegment, split_document, split_section\n)\n\n\nTEST_DOCUMENT = \"\"\"\n# Projects underway with a fully staffed team\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/49", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/49/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/49/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/49", "id": 102368133, "node_id": "MDU6SXNzdWUxMDIzNjgxMzM=", "number": 49, "title": "Impossible requirements with capitalised import", "user": {"login": "calvingiles", "id": 2253836, "node_id": "MDQ6VXNlcjIyNTM4MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2253836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvingiles", "html_url": "https://github.com/calvingiles", "followers_url": "https://api.github.com/users/calvingiles/followers", "following_url": "https://api.github.com/users/calvingiles/following{/other_user}", "gists_url": "https://api.github.com/users/calvingiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvingiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvingiles/subscriptions", "organizations_url": "https://api.github.com/users/calvingiles/orgs", "repos_url": "https://api.github.com/users/calvingiles/repos", "events_url": "https://api.github.com/users/calvingiles/events{/privacy}", "received_events_url": "https://api.github.com/users/calvingiles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pgjones", "id": 1391482, "node_id": "MDQ6VXNlcjEzOTE0ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgjones", "html_url": "https://github.com/pgjones", "followers_url": "https://api.github.com/users/pgjones/followers", "following_url": "https://api.github.com/users/pgjones/following{/other_user}", "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions", "organizations_url": "https://api.github.com/users/pgjones/orgs", "repos_url": "https://api.github.com/users/pgjones/repos", "events_url": "https://api.github.com/users/pgjones/events{/privacy}", "received_events_url": "https://api.github.com/users/pgjones/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pgjones", "id": 1391482, "node_id": "MDQ6VXNlcjEzOTE0ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1391482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgjones", "html_url": "https://github.com/pgjones", "followers_url": "https://api.github.com/users/pgjones/followers", "following_url": "https://api.github.com/users/pgjones/following{/other_user}", "gists_url": "https://api.github.com/users/pgjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgjones/subscriptions", "organizations_url": "https://api.github.com/users/pgjones/orgs", "repos_url": "https://api.github.com/users/pgjones/repos", "events_url": "https://api.github.com/users/pgjones/events{/privacy}", "received_events_url": "https://api.github.com/users/pgjones/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-08-21T12:21:40Z", "updated_at": "2016-07-23T11:11:38Z", "closed_at": "2016-07-23T11:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "flake8: `access.py:5:1: I101 Imported names are in the wrong order. Should be connection, IntegrityError, transaction`\n\nline 5 of access.py: `from django.db import connection, IntegrityError, transaction`\n\nResolved with:\n\n```\nfrom django.db import IntegrityError\nfrom django.db import connection, transaction\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/48", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/48/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/48/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/48", "id": 101374515, "node_id": "MDU6SXNzdWUxMDEzNzQ1MTU=", "number": 48, "title": "I101 error even though it is the suggested order", "user": {"login": "ingwinlu", "id": 4435962, "node_id": "MDQ6VXNlcjQ0MzU5NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4435962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ingwinlu", "html_url": "https://github.com/ingwinlu", "followers_url": "https://api.github.com/users/ingwinlu/followers", "following_url": "https://api.github.com/users/ingwinlu/following{/other_user}", "gists_url": "https://api.github.com/users/ingwinlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ingwinlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ingwinlu/subscriptions", "organizations_url": "https://api.github.com/users/ingwinlu/orgs", "repos_url": "https://api.github.com/users/ingwinlu/repos", "events_url": "https://api.github.com/users/ingwinlu/events{/privacy}", "received_events_url": "https://api.github.com/users/ingwinlu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-17T09:07:58Z", "updated_at": "2015-08-17T09:21:18Z", "closed_at": "2015-08-17T09:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "not sure if a dup of #44  but for completeness:\n\n```\npelican/tests/test_settings.py:11:1: I101 Imported names are in the wrong order. Should be configure_settings, DEFAULT_CONFIG, DEFAULT_THEME, read_settings\n```\n\nbut\n\n```\n 11 from pelican.settings import (configure_settings, DEFAULT_CONFIG,\n 12                               DEFAULT_THEME, read_settings)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/47", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/47/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/47/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/47", "id": 99920663, "node_id": "MDU6SXNzdWU5OTkyMDY2Mw==", "number": 47, "title": "Name ordering bug", "user": {"login": "reaperhulk", "id": 161495, "node_id": "MDQ6VXNlcjE2MTQ5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/161495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reaperhulk", "html_url": "https://github.com/reaperhulk", "followers_url": "https://api.github.com/users/reaperhulk/followers", "following_url": "https://api.github.com/users/reaperhulk/following{/other_user}", "gists_url": "https://api.github.com/users/reaperhulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/reaperhulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reaperhulk/subscriptions", "organizations_url": "https://api.github.com/users/reaperhulk/orgs", "repos_url": "https://api.github.com/users/reaperhulk/repos", "events_url": "https://api.github.com/users/reaperhulk/events{/privacy}", "received_events_url": "https://api.github.com/users/reaperhulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-09T19:10:52Z", "updated_at": "2016-07-23T11:11:45Z", "closed_at": "2016-07-23T11:11:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfrom cryptography.x509.oid import (\n    _OID_NAMES, OID_AUTHORITY_INFORMATION_ACCESS\n    OID_AUTHORITY_KEY_IDENTIFIER\n```\n\nGives \"Imported names are in the wrong order. Should be _OID_NAMES, OID_AUTHORITY_INFORMATION_ACCESS, OID_AUTHORITY_KEY_IDENTIFIER\".\n\nChanging the import to \n\n```\nfrom cryptography.x509.oid import (\n    OID_AUTHORITY_INFORMATION_ACCESS\n    OID_AUTHORITY_KEY_IDENTIFIER, _OID_NAMES\n```\n\nmakes it happy.\n\nThere appears to be a similar bug with the output msg and its expected ordering related to capitalization as well, although I don't have an example handy right now. This is with flake8-import-order 0.6.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/44", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/44/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/44/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/44", "id": 91858676, "node_id": "MDU6SXNzdWU5MTg1ODY3Ng==", "number": 44, "title": "Message for error I101 is misleading", "user": {"login": "AndreLouisCaron", "id": 135974, "node_id": "MDQ6VXNlcjEzNTk3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/135974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreLouisCaron", "html_url": "https://github.com/AndreLouisCaron", "followers_url": "https://api.github.com/users/AndreLouisCaron/followers", "following_url": "https://api.github.com/users/AndreLouisCaron/following{/other_user}", "gists_url": "https://api.github.com/users/AndreLouisCaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreLouisCaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreLouisCaron/subscriptions", "organizations_url": "https://api.github.com/users/AndreLouisCaron/orgs", "repos_url": "https://api.github.com/users/AndreLouisCaron/repos", "events_url": "https://api.github.com/users/AndreLouisCaron/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreLouisCaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-29T17:09:35Z", "updated_at": "2015-07-01T08:50:47Z", "closed_at": "2015-07-01T08:50:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With version 0.6.1, I get error I101:\n\n```\nfrom gazpacho.mdp02 import (\n    broker,\n    echo,\n    InvalidCommand,\n    Majordomo02Broker,\n    Majordomo02Client,\n    Majordomo02Worker,\n    Reconnect,\n    tunnel,\n    worker,\n)\n```\n\nHere is the error message:\n\n```\n./tests/test_mdp02.py:10:1: I101 Imported names are in the wrong order. Should be broker, echo, InvalidCommand, Majordomo02Broker, Majordomo02Client, Majordomo02Worker, Reconnect, tunnel, worker\n```\n\nI actually copy-pasted the names in the message to make sure they're in the same order as the message says they should be, but I still get the error.\n\nI reorderd them using `M-x sort-lines`\u00a0in Emacs, which gave this result and the error no longer appears:\n\n```\nfrom gazpacho.mdp02 import (\n    InvalidCommand,\n    Majordomo02Broker,\n    Majordomo02Client,\n    Majordomo02Worker,\n    Reconnect,\n    broker,\n    echo,\n    tunnel,\n    worker,\n)\n```\n\nAccording to issue #40, it seems this is indeed the correct order.  However, it's quite annoying that the error message suggests the incorrect order :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/42", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/42/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/42/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/42", "id": 82965375, "node_id": "MDU6SXNzdWU4Mjk2NTM3NQ==", "number": 42, "title": "\"from _ import _\" not being sorted below \"import _\"", "user": {"login": "Robpol86", "id": 3413339, "node_id": "MDQ6VXNlcjM0MTMzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3413339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robpol86", "html_url": "https://github.com/Robpol86", "followers_url": "https://api.github.com/users/Robpol86/followers", "following_url": "https://api.github.com/users/Robpol86/following{/other_user}", "gists_url": "https://api.github.com/users/Robpol86/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robpol86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robpol86/subscriptions", "organizations_url": "https://api.github.com/users/Robpol86/orgs", "repos_url": "https://api.github.com/users/Robpol86/repos", "events_url": "https://api.github.com/users/Robpol86/events{/privacy}", "received_events_url": "https://api.github.com/users/Robpol86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-31T01:30:48Z", "updated_at": "2016-07-23T11:12:37Z", "closed_at": "2016-07-23T11:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 0.5 this worked fine:\n\n``` python\nimport atexit\nimport codecs\nimport os\nimport re\nimport subprocess\nimport sys\nfrom distutils.spawn import find_executable\n\nimport setuptools\nfrom setuptools.command.test import test\n```\n\nBut in 0.6 I'm getting:\n\n```\n./setup.py:10:1: I100 Imports statements are in the wrong order. from distutils.spawn should be before from sys\n1       I100 Imports statements are in the wrong order. from distutils.spawn should be before from sys\n```\n\n0.6 wants to put \"from distutils...\" between codecs and os.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/40", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/40/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/40/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/40", "id": 73428133, "node_id": "MDU6SXNzdWU3MzQyODEzMw==", "number": 40, "title": "Does import order consider case?", "user": {"login": "mauricioabreu", "id": 1437542, "node_id": "MDQ6VXNlcjE0Mzc1NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1437542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mauricioabreu", "html_url": "https://github.com/mauricioabreu", "followers_url": "https://api.github.com/users/mauricioabreu/followers", "following_url": "https://api.github.com/users/mauricioabreu/following{/other_user}", "gists_url": "https://api.github.com/users/mauricioabreu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mauricioabreu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mauricioabreu/subscriptions", "organizations_url": "https://api.github.com/users/mauricioabreu/orgs", "repos_url": "https://api.github.com/users/mauricioabreu/repos", "events_url": "https://api.github.com/users/mauricioabreu/events{/privacy}", "received_events_url": "https://api.github.com/users/mauricioabreu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-05T20:49:16Z", "updated_at": "2015-05-08T20:35:48Z", "closed_at": "2015-05-08T17:12:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\n\n`Imported names are in the wrong order. Should be RequestContext, get_object_or_404, render, render_to_response`\n\nIt looks like RequestContext should be in the first position because it is upper case. Am I right?\nIf yes I can update cryptography example and add a line considering case sensitive imports. \n\nThanks! (sorry for using issues to make a question)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/39", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/39/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/39/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/39", "id": 71364863, "node_id": "MDU6SXNzdWU3MTM2NDg2Mw==", "number": 39, "title": "Release 0.6 fails to install from Pypi", "user": {"login": "mindw", "id": 578872, "node_id": "MDQ6VXNlcjU3ODg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/578872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindw", "html_url": "https://github.com/mindw", "followers_url": "https://api.github.com/users/mindw/followers", "following_url": "https://api.github.com/users/mindw/following{/other_user}", "gists_url": "https://api.github.com/users/mindw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindw/subscriptions", "organizations_url": "https://api.github.com/users/mindw/orgs", "repos_url": "https://api.github.com/users/mindw/repos", "events_url": "https://api.github.com/users/mindw/events{/privacy}", "received_events_url": "https://api.github.com/users/mindw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-27T18:28:59Z", "updated_at": "2015-05-03T18:27:49Z", "closed_at": "2015-05-03T18:27:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install --no-use-wheel flake8-import-order\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/38", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/38/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/38/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/38", "id": 71333056, "node_id": "MDU6SXNzdWU3MTMzMzA1Ng==", "number": 38, "title": "Warning doesn't consider duplicate imports", "user": {"login": "djmc", "id": 1425763, "node_id": "MDQ6VXNlcjE0MjU3NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1425763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djmc", "html_url": "https://github.com/djmc", "followers_url": "https://api.github.com/users/djmc/followers", "following_url": "https://api.github.com/users/djmc/following{/other_user}", "gists_url": "https://api.github.com/users/djmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/djmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djmc/subscriptions", "organizations_url": "https://api.github.com/users/djmc/orgs", "repos_url": "https://api.github.com/users/djmc/repos", "events_url": "https://api.github.com/users/djmc/events{/privacy}", "received_events_url": "https://api.github.com/users/djmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-27T16:16:10Z", "updated_at": "2016-08-06T10:23:52Z", "closed_at": "2016-08-06T10:23:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nImports statements are in the wrong order. from api.modules should be before from api.modules\n```\n\nI got this error because of multiple `from api.modules import x, y` import statements. It seems to not consider multiple lines from the same import.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/37", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/37/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/37/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/37", "id": 71123892, "node_id": "MDU6SXNzdWU3MTEyMzg5Mg==", "number": 37, "title": "Add Tags for Releases", "user": {"login": "mindw", "id": 578872, "node_id": "MDQ6VXNlcjU3ODg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/578872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindw", "html_url": "https://github.com/mindw", "followers_url": "https://api.github.com/users/mindw/followers", "following_url": "https://api.github.com/users/mindw/following{/other_user}", "gists_url": "https://api.github.com/users/mindw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindw/subscriptions", "organizations_url": "https://api.github.com/users/mindw/orgs", "repos_url": "https://api.github.com/users/mindw/repos", "events_url": "https://api.github.com/users/mindw/events{/privacy}", "received_events_url": "https://api.github.com/users/mindw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-04-26T21:36:19Z", "updated_at": "2016-05-25T18:25:00Z", "closed_at": "2016-05-25T18:25:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/36", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/36/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/36/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/36", "id": 68137728, "node_id": "MDU6SXNzdWU2ODEzNzcyOA==", "number": 36, "title": "Provide changelog for library releases", "user": {"login": "playpauseandstop", "id": 21325, "node_id": "MDQ6VXNlcjIxMzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/21325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/playpauseandstop", "html_url": "https://github.com/playpauseandstop", "followers_url": "https://api.github.com/users/playpauseandstop/followers", "following_url": "https://api.github.com/users/playpauseandstop/following{/other_user}", "gists_url": "https://api.github.com/users/playpauseandstop/gists{/gist_id}", "starred_url": "https://api.github.com/users/playpauseandstop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/playpauseandstop/subscriptions", "organizations_url": "https://api.github.com/users/playpauseandstop/orgs", "repos_url": "https://api.github.com/users/playpauseandstop/repos", "events_url": "https://api.github.com/users/playpauseandstop/events{/privacy}", "received_events_url": "https://api.github.com/users/playpauseandstop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-04-13T16:26:15Z", "updated_at": "2015-06-11T11:51:50Z", "closed_at": "2015-06-11T11:01:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not able to find any changelog for the new 0.6 release of `flake8-import-order` and I honestly don't know if I safe to update it in my projects from 0.5.3\n\nCan you provide changelog somewhere (in README or CHANGES) to be able track changes between releases?\n\n[Here a good writing on why users needs changelogs](http://keepachangelog.com/)\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/35", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/35/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/35/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/35", "id": 67919743, "node_id": "MDU6SXNzdWU2NzkxOTc0Mw==", "number": 35, "title": "Convert README.md to ReST", "user": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-12T14:09:13Z", "updated_at": "2015-06-07T16:28:14Z", "closed_at": "2015-06-07T16:28:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/34", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/34/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/34/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/34", "id": 63625570, "node_id": "MDU6SXNzdWU2MzYyNTU3MA==", "number": 34, "title": "Suggested import sort order is wrong casing.", "user": {"login": "Robpol86", "id": 3413339, "node_id": "MDQ6VXNlcjM0MTMzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3413339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robpol86", "html_url": "https://github.com/Robpol86", "followers_url": "https://api.github.com/users/Robpol86/followers", "following_url": "https://api.github.com/users/Robpol86/following{/other_user}", "gists_url": "https://api.github.com/users/Robpol86/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robpol86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robpol86/subscriptions", "organizations_url": "https://api.github.com/users/Robpol86/orgs", "repos_url": "https://api.github.com/users/Robpol86/repos", "events_url": "https://api.github.com/users/Robpol86/events{/privacy}", "received_events_url": "https://api.github.com/users/Robpol86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-23T04:48:20Z", "updated_at": "2015-03-27T14:03:04Z", "closed_at": "2015-03-27T14:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's convenient that this plugin suggests the correct import order, but it lowercases all of the modules. It would be nice if it didn't do that so I could just copy/paste the correct order.\n\nMy incorrect code:\n\n``` python\nfrom libnl.linux_private.netlink import NETLINK_ROUTE, NLMSG_LENGTH, NLM_F_DUMP, NLM_F_REQUEST\nfrom libnl.linux_private.rtnetlink import RTA_DATA, RTA_NEXT, RTA_OK, RTM_GETLINK, ifinfomsg, rtgenmsg\n```\n\nSuggested:\n\n```\n./example_list_network_interfaces.py:45:1: I101 Imported names are in the wrong order. Should be netlink_route, nlm_f_dump, nlm_f_request, nlmsg_length\n./example_list_network_interfaces.py:46:1: I101 Imported names are in the wrong order. Should be ifinfomsg, rta_data, rta_next, rta_ok, rtgenmsg, rtm_getlink\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/33", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/33/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/33/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/33", "id": 60471761, "node_id": "MDU6SXNzdWU2MDQ3MTc2MQ==", "number": 33, "title": "Support aliases", "user": {"login": "leebrooks0", "id": 2501773, "node_id": "MDQ6VXNlcjI1MDE3NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2501773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leebrooks0", "html_url": "https://github.com/leebrooks0", "followers_url": "https://api.github.com/users/leebrooks0/followers", "following_url": "https://api.github.com/users/leebrooks0/following{/other_user}", "gists_url": "https://api.github.com/users/leebrooks0/gists{/gist_id}", "starred_url": "https://api.github.com/users/leebrooks0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leebrooks0/subscriptions", "organizations_url": "https://api.github.com/users/leebrooks0/orgs", "repos_url": "https://api.github.com/users/leebrooks0/repos", "events_url": "https://api.github.com/users/leebrooks0/events{/privacy}", "received_events_url": "https://api.github.com/users/leebrooks0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-10T09:30:42Z", "updated_at": "2015-03-26T17:55:26Z", "closed_at": "2015-03-26T17:55:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Google style imports:\n\n```\nfrom django.contrib.auth import models as auth\nfrom django.contrib.auth import hashers\n```\n\nYour linter complains about this and says I should swap the order around, but I am using another tool isort to do the sorting, so obviously one way or the other is the correct way, I am not sure which way it is?\n\ni.e. is your linter correct to complain and isort has sorted incorrectly, or is isort correct in this scenario and your linter has picked up a false positive?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/30", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/30/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/30/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/30", "id": 55303940, "node_id": "MDU6SXNzdWU1NTMwMzk0MA==", "number": 30, "title": "macurl2path and nturl2path", "user": {"login": "philtay", "id": 7722913, "node_id": "MDQ6VXNlcjc3MjI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7722913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philtay", "html_url": "https://github.com/philtay", "followers_url": "https://api.github.com/users/philtay/followers", "following_url": "https://api.github.com/users/philtay/following{/other_user}", "gists_url": "https://api.github.com/users/philtay/gists{/gist_id}", "starred_url": "https://api.github.com/users/philtay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philtay/subscriptions", "organizations_url": "https://api.github.com/users/philtay/orgs", "repos_url": "https://api.github.com/users/philtay/repos", "events_url": "https://api.github.com/users/philtay/events{/privacy}", "received_events_url": "https://api.github.com/users/philtay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/milestones/1", "html_url": "https://github.com/PyCQA/flake8-import-order/milestone/1", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/milestones/1/labels", "id": 938119, "node_id": "MDk6TWlsZXN0b25lOTM4MTE5", "number": 1, "title": "Release 0.6", "description": "", "creator": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-01-16T10:50:06Z", "updated_at": "2016-05-25T20:12:54Z", "due_on": "2015-01-31T08:00:00Z", "closed_at": "2016-05-25T20:12:54Z"}, "comments": 0, "created_at": "2015-01-23T16:48:08Z", "updated_at": "2015-02-01T11:35:53Z", "closed_at": "2015-02-01T11:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "macurl2path and nturl2path are not considered standard library modules. please add them. tnx\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/29", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/29/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/29/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/29", "id": 54447153, "node_id": "MDU6SXNzdWU1NDQ0NzE1Mw==", "number": 29, "title": "# noqa lines are not ignored", "user": {"login": "philtay", "id": 7722913, "node_id": "MDQ6VXNlcjc3MjI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7722913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philtay", "html_url": "https://github.com/philtay", "followers_url": "https://api.github.com/users/philtay/followers", "following_url": "https://api.github.com/users/philtay/following{/other_user}", "gists_url": "https://api.github.com/users/philtay/gists{/gist_id}", "starred_url": "https://api.github.com/users/philtay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philtay/subscriptions", "organizations_url": "https://api.github.com/users/philtay/orgs", "repos_url": "https://api.github.com/users/philtay/repos", "events_url": "https://api.github.com/users/philtay/events{/privacy}", "received_events_url": "https://api.github.com/users/philtay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-15T13:08:27Z", "updated_at": "2015-01-16T10:47:36Z", "closed_at": "2015-01-16T10:47:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "the correctness of an import is checked even if the line is commented with # noqa. it should be skipped.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/28", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/28/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/28/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/28", "id": 54446904, "node_id": "MDU6SXNzdWU1NDQ0NjkwNA==", "number": 28, "title": "import posixpath", "user": {"login": "philtay", "id": 7722913, "node_id": "MDQ6VXNlcjc3MjI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7722913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philtay", "html_url": "https://github.com/philtay", "followers_url": "https://api.github.com/users/philtay/followers", "following_url": "https://api.github.com/users/philtay/following{/other_user}", "gists_url": "https://api.github.com/users/philtay/gists{/gist_id}", "starred_url": "https://api.github.com/users/philtay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philtay/subscriptions", "organizations_url": "https://api.github.com/users/philtay/orgs", "repos_url": "https://api.github.com/users/philtay/repos", "events_url": "https://api.github.com/users/philtay/events{/privacy}", "received_events_url": "https://api.github.com/users/philtay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-15T13:05:46Z", "updated_at": "2015-01-16T10:12:05Z", "closed_at": "2015-01-16T10:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "posixpath is not considered a standard library module\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/26", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/26/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/26/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/26", "id": 51755482, "node_id": "MDU6SXNzdWU1MTc1NTQ4Mg==", "number": 26, "title": "'from foo import bar' and 'import zzz' are sorted incorrectly", "user": {"login": "meastman", "id": 2059468, "node_id": "MDQ6VXNlcjIwNTk0Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2059468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meastman", "html_url": "https://github.com/meastman", "followers_url": "https://api.github.com/users/meastman/followers", "following_url": "https://api.github.com/users/meastman/following{/other_user}", "gists_url": "https://api.github.com/users/meastman/gists{/gist_id}", "starred_url": "https://api.github.com/users/meastman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meastman/subscriptions", "organizations_url": "https://api.github.com/users/meastman/orgs", "repos_url": "https://api.github.com/users/meastman/repos", "events_url": "https://api.github.com/users/meastman/events{/privacy}", "received_events_url": "https://api.github.com/users/meastman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/milestones/1", "html_url": "https://github.com/PyCQA/flake8-import-order/milestone/1", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/milestones/1/labels", "id": 938119, "node_id": "MDk6TWlsZXN0b25lOTM4MTE5", "number": 1, "title": "Release 0.6", "description": "", "creator": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-01-16T10:50:06Z", "updated_at": "2016-05-25T20:12:54Z", "due_on": "2015-01-31T08:00:00Z", "closed_at": "2016-05-25T20:12:54Z"}, "comments": 3, "created_at": "2014-12-12T00:07:56Z", "updated_at": "2015-03-27T14:27:54Z", "closed_at": "2015-03-27T14:27:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [Google style guide](https://google-styleguide.googlecode.com/svn/trunk/pyguide.html?showone=Imports_formatting#Imports_formatting) states \"imports should be sorted lexicographically, ignoring case, according to each module's full package path\". This checker sorts seems to sort all 'import foo' statements before all 'from foo import bar' statements, based on [this test case](https://github.com/public/flake8-import-order/blob/master/tests/test_cases/complete_google.py). Unfortunately, the Google style guide is missing an example that would make this more obvious, but the wording of the rule makes this quite clear.\n\nIn [the test case](https://github.com/public/flake8-import-order/blob/master/tests/test_cases/complete_google.py), the first group should be:\n\n``` python\nimport ast               # sorted as ast\nfrom functools import *  # sorted as functools.*\nimport os                # sorted as os\nfrom os import path      # sorted as os.path\nimport sys               # sorted as sys\n```\n\nsince `functools.*` sorts between `ast` and `os`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/25", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/25/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/25/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/25", "id": 47886286, "node_id": "MDU6SXNzdWU0Nzg4NjI4Ng==", "number": 25, "title": "Add Python 3.4 to tox and travis files", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-05T20:50:23Z", "updated_at": "2014-12-21T11:29:59Z", "closed_at": "2014-12-21T11:29:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/24", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/24/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/24/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/24", "id": 47697945, "node_id": "MDU6SXNzdWU0NzY5Nzk0NQ==", "number": 24, "title": "issue with relative imports", "user": {"login": "adrianandreias", "id": 519554, "node_id": "MDQ6VXNlcjUxOTU1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/519554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianandreias", "html_url": "https://github.com/adrianandreias", "followers_url": "https://api.github.com/users/adrianandreias/followers", "following_url": "https://api.github.com/users/adrianandreias/following{/other_user}", "gists_url": "https://api.github.com/users/adrianandreias/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianandreias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianandreias/subscriptions", "organizations_url": "https://api.github.com/users/adrianandreias/orgs", "repos_url": "https://api.github.com/users/adrianandreias/repos", "events_url": "https://api.github.com/users/adrianandreias/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianandreias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/milestones/1", "html_url": "https://github.com/PyCQA/flake8-import-order/milestone/1", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/milestones/1/labels", "id": 938119, "node_id": "MDk6TWlsZXN0b25lOTM4MTE5", "number": 1, "title": "Release 0.6", "description": "", "creator": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-01-16T10:50:06Z", "updated_at": "2016-05-25T20:12:54Z", "due_on": "2015-01-31T08:00:00Z", "closed_at": "2016-05-25T20:12:54Z"}, "comments": 11, "created_at": "2014-11-04T10:26:04Z", "updated_at": "2015-03-27T15:06:46Z", "closed_at": "2015-03-27T15:06:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After updating to 2014-10-29 version I started getting lots of:\n\n```\nI201 Missing newline before sections or imports.\n```\n\nFor absolute imports followed by relative imports:\n\n```\nfrom myproject.app.tests import UserFactory\nfrom .tests import SomeClass\n```\n\nI have these settings defined in tox.ini:\n\n```\nimport-order-style=google\napplication-import-names=myproject,myproject2\n```\n\nAnyone else getting changed behavior with the 2014-10-29 release?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/23", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/23/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/23/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/23", "id": 47040633, "node_id": "MDU6SXNzdWU0NzA0MDYzMw==", "number": 23, "title": "Explicit relative imports aren't processed correctly", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-10-28T15:33:27Z", "updated_at": "2014-10-29T17:14:32Z", "closed_at": "2014-10-29T17:14:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code:\n\n``` py\nfrom __future__ import absolute_import, division, print_function\n\nimport binascii\n\nimport pretend\n\nimport pytest\n\nimport six\n\nfrom cryptography.exceptions import (\n    AlreadyFinalized, InvalidSignature, _Reasons\n)\nfrom cryptography.hazmat.backends.interfaces import CMACBackend\nfrom cryptography.hazmat.primitives.ciphers.algorithms import (\n    AES, ARC4, TripleDES\n)\nfrom cryptography.hazmat.primitives.cmac import CMAC\n\nfrom ..backends.test_multibackend import DummyCMACBackend\nfrom ...utils import (\n    load_nist_vectors, load_vectors_from_file, raises_unsupported_algorithm\n)\n```\n\nResults in the following warnings:\n\n```\n./tests/hazmat/primitives/test_cmac.py:33:1: I100 Imports statements are in the wrong order. from backends.test_multibackend should be before from cryptography.hazmat.primitives.cmac\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/20", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/20/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/20/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/20", "id": 43961021, "node_id": "MDU6SXNzdWU0Mzk2MTAyMQ==", "number": 20, "title": "Add xml(.etree) to stdlib_list.py", "user": {"login": "adrianandreias", "id": 519554, "node_id": "MDQ6VXNlcjUxOTU1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/519554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianandreias", "html_url": "https://github.com/adrianandreias", "followers_url": "https://api.github.com/users/adrianandreias/followers", "following_url": "https://api.github.com/users/adrianandreias/following{/other_user}", "gists_url": "https://api.github.com/users/adrianandreias/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianandreias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianandreias/subscriptions", "organizations_url": "https://api.github.com/users/adrianandreias/orgs", "repos_url": "https://api.github.com/users/adrianandreias/repos", "events_url": "https://api.github.com/users/adrianandreias/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianandreias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-25T20:04:28Z", "updated_at": "2014-09-29T08:55:38Z", "closed_at": "2014-09-29T08:55:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First of all first for this project :).\n\nxml.etree is missing from stdlib_list.py and wrongly reports it as local module.\n\nI.e.:\nfrom xml.etree import ElementTree as ET\n\nAlso:\n- any reason for which \"xml\" is not added instead of \"xml.dom\", \"xml.dom.minidom\" etc. ?\n- I think a simple script can be written to populate stdlib_list.py. If ran periodically stdlib modules won't be missed this way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/19", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/19/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/19/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/19", "id": 43500154, "node_id": "MDU6SXNzdWU0MzUwMDE1NA==", "number": 19, "title": "Release 0.5.1", "user": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-22T15:14:56Z", "updated_at": "2014-09-29T08:55:32Z", "closed_at": "2014-09-29T08:55:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/16", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/16/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/16/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/16", "id": 43245888, "node_id": "MDU6SXNzdWU0MzI0NTg4OA==", "number": 16, "title": "Error messages don't contain enough detail", "user": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-19T14:44:17Z", "updated_at": "2014-09-22T13:07:30Z", "closed_at": "2014-09-22T13:07:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "They should be more helpful and try and get you to put stuff in the right place.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/15", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/15/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/15/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/15", "id": 40134654, "node_id": "MDU6SXNzdWU0MDEzNDY1NA==", "number": 15, "title": "Comparison of str < None on Python 3", "user": {"login": "jodal", "id": 43726, "node_id": "MDQ6VXNlcjQzNzI2", "avatar_url": "https://avatars0.githubusercontent.com/u/43726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jodal", "html_url": "https://github.com/jodal", "followers_url": "https://api.github.com/users/jodal/followers", "following_url": "https://api.github.com/users/jodal/following{/other_user}", "gists_url": "https://api.github.com/users/jodal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jodal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jodal/subscriptions", "organizations_url": "https://api.github.com/users/jodal/orgs", "repos_url": "https://api.github.com/users/jodal/repos", "events_url": "https://api.github.com/users/jodal/events{/privacy}", "received_events_url": "https://api.github.com/users/jodal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-13T08:52:20Z", "updated_at": "2014-08-19T20:02:17Z", "closed_at": "2014-08-19T20:01:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running flake8-import-order on Python 3.4:\n\n```\n$ flake8 --version\n2.2.2 (pep8: 1.5.7, import-order: 0.4.2, pyflakes: 0.8.1, mccabe: 0.2.1) CPython 3.4.0 on Linux\n```\n\nAnd it crashes because of a comparison of str and None:\n\n``` python\n$ flake8 \nTraceback (most recent call last):\n  File \"/home/jodal/dev/virtualenvs/vega3/bin/flake8\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/flake8/main.py\", line 32, in main\n    report = flake8_style.check_files()\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/pep8.py\", line 1670, in check_files\n    self.input_dir(path)\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/pep8.py\", line 1706, in input_dir\n    runner(os.path.join(root, filename))\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/flake8/engine.py\", line 83, in input_file\n    return fchecker.check_all(expected=expected, line_offset=line_offset)\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/pep8.py\", line 1412, in check_all\n    self.check_ast()\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/pep8.py\", line 1359, in check_ast\n    for lineno, offset, text, check in checker.run():\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/flake8_import_order/flake8_linter.py\", line 49, in run\n    for error in self.check_order():\n  File \"/home/jodal/dev/virtualenvs/vega3/lib/python3.4/site-packages/flake8_import_order/__init__.py\", line 206, in check_order\n    if n < pn:\nTypeError: unorderable types: str() < NoneType()\n```\n\nBut it works when running flake8 with Python 2.7 on the same code base:\n\n```\n$ flake8 --version\n2.2.2 (pep8: 1.5.7, mccabe: 0.2.1, import-order: 0.4.2, pyflakes: 0.8.1) CPython 2.7.6 on Linux\n$ flake8 \n$ echo $?\n0\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/14", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/14/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/14/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/14", "id": 37752061, "node_id": "MDU6SXNzdWUzNzc1MjA2MQ==", "number": 14, "title": "Code which mixes `import` and `from-import` doesn't pass", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-13T23:54:43Z", "updated_at": "2014-07-14T22:52:49Z", "closed_at": "2014-07-14T22:52:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code gives a flake8 error, and I don't think it should:\n\n```\nimport nacl.c\nfrom nacl import encoding\n```\n\nIf it's correct that this is failing, it'd be great if it the error message was a bit more descriptive.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/12", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/12/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/12/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/12", "id": 37480389, "node_id": "MDU6SXNzdWUzNzQ4MDM4OQ==", "number": 12, "title": "Missing asyncio in stdlib list.", "user": {"login": "dstufft", "id": 145979, "node_id": "MDQ6VXNlcjE0NTk3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstufft", "html_url": "https://github.com/dstufft", "followers_url": "https://api.github.com/users/dstufft/followers", "following_url": "https://api.github.com/users/dstufft/following{/other_user}", "gists_url": "https://api.github.com/users/dstufft/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstufft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstufft/subscriptions", "organizations_url": "https://api.github.com/users/dstufft/orgs", "repos_url": "https://api.github.com/users/dstufft/repos", "events_url": "https://api.github.com/users/dstufft/events{/privacy}", "received_events_url": "https://api.github.com/users/dstufft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-09T15:53:32Z", "updated_at": "2014-07-13T14:26:35Z", "closed_at": "2014-07-13T14:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/9", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/9/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/9/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/9", "id": 36031262, "node_id": "MDU6SXNzdWUzNjAzMTI2Mg==", "number": 9, "title": "Incorrect ordering is passing for reasons I don't understand", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-18T21:51:51Z", "updated_at": "2014-06-19T11:22:37Z", "closed_at": "2014-06-19T11:22:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I know, this should fail because the imported names aren't sorted alphabetically, but for me it doesn't show any warnings\n\n``` py\nfrom sqlalchemy import Integer, MetaData, Column\n\nInteger, MetaData, Column,\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/7", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/7/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/7/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/7", "id": 34809068, "node_id": "MDU6SXNzdWUzNDgwOTA2OA==", "number": 7, "title": "Exception when running against stdin", "user": {"login": "terite", "id": 44259, "node_id": "MDQ6VXNlcjQ0MjU5", "avatar_url": "https://avatars3.githubusercontent.com/u/44259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terite", "html_url": "https://github.com/terite", "followers_url": "https://api.github.com/users/terite/followers", "following_url": "https://api.github.com/users/terite/following{/other_user}", "gists_url": "https://api.github.com/users/terite/gists{/gist_id}", "starred_url": "https://api.github.com/users/terite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terite/subscriptions", "organizations_url": "https://api.github.com/users/terite/orgs", "repos_url": "https://api.github.com/users/terite/repos", "events_url": "https://api.github.com/users/terite/events{/privacy}", "received_events_url": "https://api.github.com/users/terite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-06-02T20:43:37Z", "updated_at": "2014-06-23T10:21:32Z", "closed_at": "2014-06-21T09:44:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "SublimeLinter runs flake8 against stdin, so installing flake8-import-linter breaks SublimeLinter.\n\nTo reproduce:\n\n``` bash\necho | flake8 -\n```\n\nException:\n\n```\nTraceback (most recent call last):\n  File \"/Users/dstensland/.virtualenvs/foobar/bin/flake8\", line 9, in <module>\n    load_entry_point('flake8==2.1.0', 'console_scripts', 'flake8')()\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/flake8/main.py\", line 32, in main\n    report = flake8_style.check_files()\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/pep8.py\", line 1672, in check_files\n    runner(path)\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/flake8/engine.py\", line 73, in input_file\n    return fchecker.check_all(expected=expected, line_offset=line_offset)\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/pep8.py\", line 1410, in check_all\n    self.check_ast()\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/pep8.py\", line 1359, in check_ast\n    for lineno, offset, text, check in checker.run():\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/flake8_import_order/flake8_linter.py\", line 38, in run\n    for error in self.check_order():\n  File \"/Users/dstensland/.virtualenvs/foobar/lib/python2.7/site-packages/flake8_import_order/__init__.py\", line 152, in check_order\n    self.tree = ast.parse(open(self.filename).read())\nIOError: [Errno 2] No such file or directory: 'stdin'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/3", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/3/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/3/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/3", "id": 29942545, "node_id": "MDU6SXNzdWUyOTk0MjU0NQ==", "number": 3, "title": "Correct sort order raises error", "user": {"login": "heston", "id": 135492, "node_id": "MDQ6VXNlcjEzNTQ5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/135492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heston", "html_url": "https://github.com/heston", "followers_url": "https://api.github.com/users/heston/followers", "following_url": "https://api.github.com/users/heston/following{/other_user}", "gists_url": "https://api.github.com/users/heston/gists{/gist_id}", "starred_url": "https://api.github.com/users/heston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heston/subscriptions", "organizations_url": "https://api.github.com/users/heston/orgs", "repos_url": "https://api.github.com/users/heston/repos", "events_url": "https://api.github.com/users/heston/events{/privacy}", "received_events_url": "https://api.github.com/users/heston/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-03-21T21:54:59Z", "updated_at": "2014-12-12T00:08:07Z", "closed_at": "2014-06-27T09:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following imports at the top of one of my files:\n\n```\nfrom collections import OrderedDict, namedtuple\nimport datetime\n\nimport coffin.template.loader\nfrom django.core import validators\nfrom django.utils.functional import SimpleLazyObject, cached_property\n\nimport lib.forms\nimport lib.models\n```\n\nHowever, when I run `flake8` on it, I get the following warning:\n\n```\nmy_file.py:4:1: I100 Imports are in the wrong order\nimport coffin.template.loader\n^\n```\n\nThis looks lexigraphically sorted to me, and `coffin` is certainly in my site-packages.\n\nAlso, I would expect to see a warning for line 6, since `cached_property` should sort before `SimpleLazyObject` according to the [Google Styleguide](http://google-styleguide.googlecode.com/svn/trunk/pyguide.html?showone=Imports_formatting#Imports_formatting) (\"imports should be sorted lexicographically, ignoring case\").\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/2", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/2/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/2/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/2", "id": 29744721, "node_id": "MDU6SXNzdWUyOTc0NDcyMQ==", "number": 2, "title": "Replace magical guessing of local package names with a config file.", "user": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-19T15:54:36Z", "updated_at": "2014-06-05T11:14:14Z", "closed_at": "2014-03-21T14:34:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/1", "repository_url": "https://api.github.com/repos/PyCQA/flake8-import-order", "labels_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/1/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-import-order/issues/1/events", "html_url": "https://github.com/PyCQA/flake8-import-order/issues/1", "id": 29547927, "node_id": "MDU6SXNzdWUyOTU0NzkyNw==", "number": 1, "title": "PyLama support", "user": {"login": "public", "id": 83000, "node_id": "MDQ6VXNlcjgzMDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/83000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/public", "html_url": "https://github.com/public", "followers_url": "https://api.github.com/users/public/followers", "following_url": "https://api.github.com/users/public/following{/other_user}", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "organizations_url": "https://api.github.com/users/public/orgs", "repos_url": "https://api.github.com/users/public/repos", "events_url": "https://api.github.com/users/public/events{/privacy}", "received_events_url": "https://api.github.com/users/public/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-17T09:58:43Z", "updated_at": "2014-03-21T14:34:34Z", "closed_at": "2014-03-21T14:34:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/klen/pylama\n\nFor python-mode integration.\n", "performed_via_github_app": null, "score": 1.0}]}