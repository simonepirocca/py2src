{"total_count": 25, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ethereum/eth-account/issues/102", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/102/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/102/events", "html_url": "https://github.com/ethereum/eth-account/issues/102", "id": 605923655, "node_id": "MDU6SXNzdWU2MDU5MjM2NTU=", "number": 102, "title": "Mnemonics are badly broken", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T22:51:38Z", "updated_at": "2020-04-29T15:34:41Z", "closed_at": "2020-04-29T15:34:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " ## What was wrong?\r\n\r\nMnemonics only work on a from-source install of eth-account. Released versions are broken with:\r\n\r\n```py\r\n>>> from eth_account import Account\r\n>>> Account.enable_unaudited_hdwallet_features()\r\n>>> Account.create_with_mnemonic()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jcarver/code/eth-account/tmp/non-develop-venv/lib/python3.6/site-packages/eth_utils/decorators.py\", line 20, in _wrapper\r\n    return self.method(objtype, *args, **kwargs)\r\n  File \"/home/jcarver/code/eth-account/tmp/non-develop-venv/lib/python3.6/site-packages/eth_account/account.py\", line 333, in create_with_mnemonic\r\n    mnemonic = generate_mnemonic(num_words, language)\r\n  File \"/home/jcarver/code/eth-account/tmp/non-develop-venv/lib/python3.6/site-packages/eth_account/hdaccount/__init__.py\", line 16, in generate_mnemonic\r\n    return Mnemonic(lang).generate(num_words)\r\n  File \"/home/jcarver/code/eth-account/tmp/non-develop-venv/lib/python3.6/site-packages/eth_account/hdaccount/mnemonic.py\", line 79, in __init__\r\n    f'Invalid language choice \"{language}\", must be one of {languages}'\r\neth_utils.exceptions.ValidationError: Invalid language choice \"english\", must be one of []\r\n```\r\n\r\n## How can it be fixed?\r\n\r\n1. Make sure that tests run against a \"clean-room\" installed version of eth-account (at least for the mnemonic tests)\r\n2. Package up the language files to include in the release\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/95", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/95/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/95/events", "html_url": "https://github.com/ethereum/eth-account/issues/95", "id": 591940365, "node_id": "MDU6SXNzdWU1OTE5NDAzNjU=", "number": 95, "title": "None", "user": {"login": "ccding", "id": 1221778, "node_id": "MDQ6VXNlcjEyMjE3Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1221778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccding", "html_url": "https://github.com/ccding", "followers_url": "https://api.github.com/users/ccding/followers", "following_url": "https://api.github.com/users/ccding/following{/other_user}", "gists_url": "https://api.github.com/users/ccding/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccding/subscriptions", "organizations_url": "https://api.github.com/users/ccding/orgs", "repos_url": "https://api.github.com/users/ccding/repos", "events_url": "https://api.github.com/users/ccding/events{/privacy}", "received_events_url": "https://api.github.com/users/ccding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-01T14:00:55Z", "updated_at": "2020-04-01T14:11:59Z", "closed_at": "2020-04-01T14:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "None", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/81", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/81/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/81/events", "html_url": "https://github.com/ethereum/eth-account/issues/81", "id": 547762344, "node_id": "MDU6SXNzdWU1NDc3NjIzNDQ=", "number": 81, "title": "Doctest Account encrypt()/decrypt()", "user": {"login": "AndreMiras", "id": 24973, "node_id": "MDQ6VXNlcjI0OTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/24973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreMiras", "html_url": "https://github.com/AndreMiras", "followers_url": "https://api.github.com/users/AndreMiras/followers", "following_url": "https://api.github.com/users/AndreMiras/following{/other_user}", "gists_url": "https://api.github.com/users/AndreMiras/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreMiras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreMiras/subscriptions", "organizations_url": "https://api.github.com/users/AndreMiras/orgs", "repos_url": "https://api.github.com/users/AndreMiras/repos", "events_url": "https://api.github.com/users/AndreMiras/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreMiras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-09T22:34:50Z", "updated_at": "2020-01-20T16:08:14Z", "closed_at": "2020-01-20T16:08:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a follow up for https://github.com/ethereum/eth-account/pull/49\r\n`Account.encrypt()` and `Account.decrypt()` doctests got disabled because of `getpass()`. The idea is to write a doctest hardcoding the password to demonstrate both features in the doctest, refs @carver comments in https://github.com/ethereum/eth-account/pull/49#discussion_r363462283 and https://github.com/ethereum/eth-account/pull/49#pullrequestreview-338868887\r\nApart from these 2 doctests 7 others got skipped (`doctest: +SKIP`) because they broke for different reason. We could also try investigating/fixing them in this task.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/70", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/70/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/70/events", "html_url": "https://github.com/ethereum/eth-account/issues/70", "id": 457272761, "node_id": "MDU6SXNzdWU0NTcyNzI3NjE=", "number": 70, "title": "Unable to retrieve acct key ", "user": {"login": "rite2bala", "id": 44022980, "node_id": "MDQ6VXNlcjQ0MDIyOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/44022980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rite2bala", "html_url": "https://github.com/rite2bala", "followers_url": "https://api.github.com/users/rite2bala/followers", "following_url": "https://api.github.com/users/rite2bala/following{/other_user}", "gists_url": "https://api.github.com/users/rite2bala/gists{/gist_id}", "starred_url": "https://api.github.com/users/rite2bala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rite2bala/subscriptions", "organizations_url": "https://api.github.com/users/rite2bala/orgs", "repos_url": "https://api.github.com/users/rite2bala/repos", "events_url": "https://api.github.com/users/rite2bala/events{/privacy}", "received_events_url": "https://api.github.com/users/rite2bala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-18T05:45:36Z", "updated_at": "2020-01-06T20:17:11Z", "closed_at": "2020-01-06T20:17:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Faced a problem while following the instructions on https://buildmedia.readthedocs.org/media/pdf/eth-account/latest/eth-account.pdf\r\n\r\n```\r\nfrom eth_account import Account\r\nacct = Account.create('KEYSMASH FJAFJKLDSKF7JKFDJ 1530')\r\nacct.address  \r\nacct.key\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-12-352e77122c2d>\", line 4, in <module>\r\n    acct.key\r\n\r\n**AttributeError: 'LocalAccount' object has no attribute 'key'**\r\n```\r\n\r\n\r\nAlthough the account gets created , I am unable to retrieve the key as shown in the introductory documents ..\r\n\r\nCould you please let me know how I can retrieve the private key for the account which got created?\r\nOr am i doing  something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/59", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/59/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/59/events", "html_url": "https://github.com/ethereum/eth-account/issues/59", "id": 427776376, "node_id": "MDU6SXNzdWU0Mjc3NzYzNzY=", "number": 59, "title": "Replace is_valid_abi_type with ABI's is_encodable_type method", "user": {"login": "Bhargavasomu", "id": 15922456, "node_id": "MDQ6VXNlcjE1OTIyNDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/15922456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bhargavasomu", "html_url": "https://github.com/Bhargavasomu", "followers_url": "https://api.github.com/users/Bhargavasomu/followers", "following_url": "https://api.github.com/users/Bhargavasomu/following{/other_user}", "gists_url": "https://api.github.com/users/Bhargavasomu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bhargavasomu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bhargavasomu/subscriptions", "organizations_url": "https://api.github.com/users/Bhargavasomu/orgs", "repos_url": "https://api.github.com/users/Bhargavasomu/repos", "events_url": "https://api.github.com/users/Bhargavasomu/events{/privacy}", "received_events_url": "https://api.github.com/users/Bhargavasomu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-01T15:38:02Z", "updated_at": "2019-06-06T00:18:22Z", "closed_at": "2019-06-06T00:18:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What was wrong?\r\nCurrently `eth-account` is still supporting `python 3.5`. But to replace utils method `is_valid_abi_type` with ABI's method `is_encodable_type`, it is possible only when the support of `python 3.5` is removed by `eth-account`, because `eth-abi` currently doesn't support `python 3.5`\r\n\r\n## How can it be fixed?\r\n\r\nReplace the function, when the support for `python 3.5` is dropped in `eth-account`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/58", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/58/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/58/events", "html_url": "https://github.com/ethereum/eth-account/issues/58", "id": 424345532, "node_id": "MDU6SXNzdWU0MjQzNDU1MzI=", "number": 58, "title": "New message signing API", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-03-22T18:30:19Z", "updated_at": "2019-05-03T22:10:52Z", "closed_at": "2019-05-03T22:10:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\nMessage signing should be very pluggable according to EIP191. Message encoding is all built-in to the (now confusingly named) `defunct_hash_message()`.\r\n\r\n## How can it be fixed?\r\n\r\nNew message signing API that captures this concept:\r\n```py\r\n\r\nclass SignableMessage(NamedTuple):  # as defined by EIP-191\r\n  version: HexBytes  # must be length 1\r\n  header: HexBytes  # aka \"version specific data\"\r\n  body: HexBytes  # aka \"data to sign\"\r\n\r\nsignable_message = encode_structured_data_message(json_str)\r\naccount.sign_message(signable_message)\r\n```\r\n\r\nThe encoding method could have arbitrary inputs without changing the message signing API, like:\r\n```py\r\nsignable_message = encode_intended_validator(message, validator_address)\r\naccount.sign_message(signable_message)\r\n```\r\n\r\nIt abstracts away the EIP-191 encoding process and message hashing inside `sign_message()`. A new `recover_message()` could work similarly.\r\n\r\nThe solution should make it trivial to experiment with or produce your own (sub)version of EIP-191, without any change to the eth-account library. (This is already possible by signing and recovering hashes of your own making, but it's not as accessible).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/55", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/55/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/55/events", "html_url": "https://github.com/ethereum/eth-account/issues/55", "id": 401812278, "node_id": "MDU6SXNzdWU0MDE4MTIyNzg=", "number": 55, "title": "web3.eth.generateGasPrice() throws TypeError in specific case", "user": {"login": "sea212", "id": 15378334, "node_id": "MDQ6VXNlcjE1Mzc4MzM0", "avatar_url": "https://avatars1.githubusercontent.com/u/15378334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sea212", "html_url": "https://github.com/sea212", "followers_url": "https://api.github.com/users/sea212/followers", "following_url": "https://api.github.com/users/sea212/following{/other_user}", "gists_url": "https://api.github.com/users/sea212/gists{/gist_id}", "starred_url": "https://api.github.com/users/sea212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sea212/subscriptions", "organizations_url": "https://api.github.com/users/sea212/orgs", "repos_url": "https://api.github.com/users/sea212/repos", "events_url": "https://api.github.com/users/sea212/events{/privacy}", "received_events_url": "https://api.github.com/users/sea212/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T15:16:02Z", "updated_at": "2019-01-22T15:29:30Z", "closed_at": "2019-01-22T15:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": " _If this is a bug report, please fill in the following sections.\r\nIf this is a feature request, delete and describe what you would like with examples._\r\n\r\n## What was wrong?\r\n\r\nI created a Web3 instance which connects to an infura rinkeby node. Building a transaction works unless I call web3.eth.generateGasPrice() to determine an appropriate gas price.\r\nThe same scenario, but instead of infura I used a local geth POA node (own network) and instead of websockets I used HTTPProvider(...), worked without problems\r\n\r\n### Code that produced the error\r\n\r\n```py\r\n        # ...\r\n        self.networkid = 4\r\n        self.admin_address = \"0x...\"\r\n        wsprovider = \"wss://\" + network.lower() + \".infura.io/ws/v3/\"\\\r\n                         + infura_projectid\r\n        self._w3 = Web3(Web3.WebsocketProvider(wsprovider))\r\n        self._w3.eth.setGasPriceStrategy(fast_gas_price_strategy)\r\n        # inject the poa compatibility middleware to the innermost layer\r\n        self._w3.middleware_stack.inject(geth_poa_middleware, layer=0)\r\n        # Cache certain requests for avg_block_time (def. 240) seconds\r\n        self._w3.middleware_stack.add(latest_block_based_cache_middleware)\r\n        with open(contract_json) as confile:\r\n            concontent = jload(confile)\r\n        contract = self._w3.eth.\\\r\n                              contract(address=concontent[\"deployedAddress\"],\r\n                                          abi=concontent[\"abiDefinition\"])\r\n        nonce = self._w3.eth.getTransactionCount(self.admin_address)\r\n        tx = contract.functions.createNew(lname, pts)\\\r\n                     .buildTransaction({\r\n                        \"from\": self.admin_address,\r\n                        \"nonce\": nonce,\r\n                        \"chainId\": self.networkid,\r\n                        \"gasPrice\": self._w3.eth.generateGasPrice()\r\n                     })\r\n```\r\n\r\n### Full error output \r\n\r\n```sh\r\n  File \"/home/sea212/gproject/swagger_server/controllers/admins_controller.py\", line 78, in create_lottery\r\n    if not web3adapter.create(data):\r\n  File \"/home/sea212/gproject/swagger_server/web3adapter/web3adapter.py\", line 154, in create\r\n    \"gasPrice\": self._w3.eth.generateGasPrice()\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/contract.py\", line 1228, in buildTransaction\r\n    **self.kwargs\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/contract.py\", line 1512, in build_transaction_for_function\r\n    prepared_transaction = fill_transaction_defaults(web3, prepared_transaction)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/transactions.py\", line 55, in fill_transaction_defaults\r\n    default_val = default_getter(web3, transaction)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/transactions.py\", line 26, in <lambda>\r\n    'gas': lambda web3, tx: web3.eth.estimateGas(tx),\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/eth.py\", line 304, in estimateGas\r\n    [transaction],\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/manager.py\", line 109, in request_blocking\r\n    response = self._make_request(method, params)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/manager.py\", line 92, in _make_request\r\n    return request_func(method, params)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/cache.py\", line 385, in middleware\r\n    response = make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/formatting.py\", line 50, in apply_formatters\r\n    response = make_request(method, params)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/gas_price_strategy.py\", line 18, in middleware\r\n    return make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/attrdict.py\", line 18, in middleware\r\n    response = make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/normalize_errors.py\", line 9, in middleware\r\n    result = make_request(method, params)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/formatting.py\", line 48, in apply_formatters\r\n    response = make_request(method, formatted_params)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/middleware/formatting.py\", line 47, in apply_formatters\r\n    formatted_params = formatter(params)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/eth_utils/functional.py\", line 46, in inner\r\n    return callback(fn(*args, **kwargs))\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/formatters.py\", line 41, in apply_formatter_at_index\r\n    yield formatter(item)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/rpc_abi.py\", line 69, in apply_abi_formatters_to_dict\r\n    [data[field] for field in fields],\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/abi.py\", line 442, in map_abi_data\r\n    return pipe(data, *pipeline)\r\n  File \"cytoolz/functoolz.pyx\", line 589, in cytoolz.functoolz.pipe\r\n  File \"cytoolz/functoolz.pyx\", line 565, in cytoolz.functoolz.c_pipe\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/abi.py\", line 474, in data_tree_map\r\n    return recursive_map(map_to_typed_data, data_tree)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/decorators.py\", line 35, in wrapped\r\n    wrapped_val = to_wrap(*args)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/formatters.py\", line 115, in recursive_map\r\n    items_mapped = map_collection(recurse, data)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/formatters.py\", line 102, in map_collection\r\n    return datatype(map(func, collection))\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/formatters.py\", line 114, in recurse\r\n    return recursive_map(func, item)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/decorators.py\", line 35, in wrapped\r\n    wrapped_val = to_wrap(*args)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/formatters.py\", line 116, in recursive_map\r\n    return func(items_mapped)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/abi.py\", line 471, in map_to_typed_data\r\n    return ABITypedData(func(*elements))\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/normalizers.py\", line 50, in wrapper\r\n    modified = to_wrap(abi_type, data)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/normalizers.py\", line 104, in abi_int_to_hex\r\n    return abi_type, hexstr_if_str(to_hex, data)\r\n  File \"cytoolz/functoolz.pyx\", line 236, in cytoolz.functoolz.curry.__call__\r\n  File \"cytoolz/functoolz.pyx\", line 232, in cytoolz.functoolz.curry.__call__\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/web3/utils/encoding.py\", line 213, in hexstr_if_str\r\n    return to_type(primitive, hexstr=hexstr)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/eth_utils/decorators.py\", line 75, in wrapper\r\n    return to_wrap(*args, **kwargs)\r\n  File \"/home/sea212/.pyenv/versions/swagtest19/lib/python3.7/site-packages/eth_utils/conversions.py\", line 41, in to_hex\r\n    \"or int.\".format(repr(type(primitive)))\r\nTypeError: Unsupported type: '<class 'float'>'.  Must be one of: bool, str, bytes, bytearrayor int.\r\n```\r\n\r\n### Expected Result\r\n\r\n_This section may be deleted if the expectation is \"don't crash\"._\r\n\r\n```sh\r\nEstimated gas price (integer)\r\n``` \r\n\r\n### Environment\r\n\r\n```sh\r\n# run this:\r\n$ python -m eth_utils\r\n\r\n# then copy the output here:\r\nPython version:\r\n3.7.1 (default, Nov 30 2018, 17:15:57) \r\n[GCC 7.3.0]\r\n\r\nOperating System: Linux-4.15.0-43-generic-x86_64-with-debian-buster-sid\r\n\r\npip freeze result:\r\nattrdict==2.0.0\r\nbackcall==0.1.0\r\nbleach==3.1.0\r\ncertifi==2018.11.29\r\nchardet==3.0.4\r\nClick==7.0\r\nclickclick==1.2.2\r\nconnexion==1.1.15\r\ncytoolz==0.9.0.1\r\ndecorator==4.3.0\r\ndefusedxml==0.5.0\r\nentrypoints==0.3\r\neth-abi==1.3.0\r\neth-account==0.3.0\r\neth-hash==0.2.0\r\neth-keyfile==0.5.1\r\neth-keys==0.2.1\r\neth-rlp==0.1.2\r\neth-typing==2.0.0\r\neth-utils==1.4.1\r\nFlask==1.0.2\r\nhexbytes==0.1.0\r\nidna==2.8\r\ninflection==0.3.1\r\nipykernel==5.1.0\r\nipython==7.2.0\r\nipython-genutils==0.2.0\r\nipywidgets==7.4.2\r\nitsdangerous==1.1.0\r\njedi==0.13.2\r\nJinja2==2.10\r\njsonschema==2.6.0\r\njupyter==1.0.0\r\njupyter-client==5.2.4\r\njupyter-console==6.0.0\r\njupyter-core==4.4.0\r\nlru-dict==1.1.6\r\nMarkupSafe==1.1.0\r\nmistune==0.8.4\r\nnbconvert==5.4.0\r\nnbformat==4.4.0\r\nnotebook==5.7.4\r\npandocfilters==1.4.2\r\nparsimonious==0.8.1\r\nparso==0.3.1\r\npexpect==4.6.0\r\npickleshare==0.7.5\r\nprometheus-client==0.5.0\r\nprompt-toolkit==2.0.7\r\nptyprocess==0.6.0\r\npycryptodome==3.7.2\r\nPygments==2.3.1\r\npymongo==3.7.2\r\npython-dateutil==2.6.0\r\nPyYAML==3.13\r\npyzmq==17.1.2\r\nqtconsole==4.4.3\r\nrequests==2.21.0\r\nrlp==1.1.0\r\nSend2Trash==1.5.0\r\nsix==1.12.0\r\nswagger-server==1.0.0\r\nswagger-spec-validator==2.4.1\r\nterminado==0.8.1\r\ntestpath==0.4.2\r\ntoolz==0.9.0\r\ntornado==5.1.1\r\ntraitlets==4.3.2\r\nurllib3==1.24.1\r\nwcwidth==0.1.7\r\nweb3==4.8.2\r\nwebencodings==0.5.1\r\nwebsockets==6.0\r\nWerkzeug==0.14.1\r\nwidgetsnbextension==3.4.2\r\n``` \r\n\r\n## How can it be fixed?\r\n\r\nNot regarded yet\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/51", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/51/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/51/events", "html_url": "https://github.com/ethereum/eth-account/issues/51", "id": 389629237, "node_id": "MDU6SXNzdWUzODk2MjkyMzc=", "number": 51, "title": "How to use eth-account lib to send a token ERC20 to other address", "user": {"login": "henrytom1703", "id": 38415727, "node_id": "MDQ6VXNlcjM4NDE1NzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/38415727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrytom1703", "html_url": "https://github.com/henrytom1703", "followers_url": "https://api.github.com/users/henrytom1703/followers", "following_url": "https://api.github.com/users/henrytom1703/following{/other_user}", "gists_url": "https://api.github.com/users/henrytom1703/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrytom1703/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrytom1703/subscriptions", "organizations_url": "https://api.github.com/users/henrytom1703/orgs", "repos_url": "https://api.github.com/users/henrytom1703/repos", "events_url": "https://api.github.com/users/henrytom1703/events{/privacy}", "received_events_url": "https://api.github.com/users/henrytom1703/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T07:28:55Z", "updated_at": "2018-12-11T18:23:21Z", "closed_at": "2018-12-11T18:23:10Z", "author_association": "NONE", "active_lock_reason": null, "body": " _If this is a bug report, please fill in the following sections.\r\nIf this is a feature request, delete and describe what you would like with examples._\r\n\r\n## What was wrong?\r\n\r\n### Code that produced the error\r\n\r\n```py\r\nCODE_TO_REPRODUCE \r\n```\r\n\r\n### Full error output \r\n\r\n```sh\r\nERROR_HERE \r\n```\r\n\r\n### Expected Result\r\n\r\n_This section may be deleted if the expectation is \"don't crash\"._\r\n\r\n```sh\r\nEXPECTED_RESULT\r\n``` \r\n\r\n### Environment\r\n\r\n```sh\r\n# run this:\r\n$ python -m eth_utils\r\n\r\n# then copy the output here:\r\nOUTPUT_HERE\r\n``` \r\n\r\n## How can it be fixed?\r\n\r\nFill this section in if you know how this could or should be fixed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/50", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/50/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/50/events", "html_url": "https://github.com/ethereum/eth-account/issues/50", "id": 387963816, "node_id": "MDU6SXNzdWUzODc5NjM4MTY=", "number": 50, "title": "Case sensitive error when signing tx", "user": {"login": "pastet89", "id": 7469057, "node_id": "MDQ6VXNlcjc0NjkwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7469057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pastet89", "html_url": "https://github.com/pastet89", "followers_url": "https://api.github.com/users/pastet89/followers", "following_url": "https://api.github.com/users/pastet89/following{/other_user}", "gists_url": "https://api.github.com/users/pastet89/gists{/gist_id}", "starred_url": "https://api.github.com/users/pastet89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pastet89/subscriptions", "organizations_url": "https://api.github.com/users/pastet89/orgs", "repos_url": "https://api.github.com/users/pastet89/repos", "events_url": "https://api.github.com/users/pastet89/events{/privacy}", "received_events_url": "https://api.github.com/users/pastet89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-05T21:57:27Z", "updated_at": "2018-12-30T17:33:44Z", "closed_at": "2018-12-05T21:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I call w3.eth.account.signTransaction(tx, key)\r\n\r\nI am getting the following error:\r\n\r\n`TypeError: from field must match key's 0xe6fAfd26257963055c93fc8a38Dd4554BB157349, but it was 0xe6fafd26257963055c93fc8a38dd4554bb157349`\r\n\r\nObviously the key converts to the right address, but some of the letters are caps while some are not. What can I do about it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/48", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/48/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/48/events", "html_url": "https://github.com/ethereum/eth-account/issues/48", "id": 375914915, "node_id": "MDU6SXNzdWUzNzU5MTQ5MTU=", "number": 48, "title": "Account.create() pbkdf2 iterations/work-factor access", "user": {"login": "AndreMiras", "id": 24973, "node_id": "MDQ6VXNlcjI0OTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/24973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreMiras", "html_url": "https://github.com/AndreMiras", "followers_url": "https://api.github.com/users/AndreMiras/followers", "following_url": "https://api.github.com/users/AndreMiras/following{/other_user}", "gists_url": "https://api.github.com/users/AndreMiras/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreMiras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreMiras/subscriptions", "organizations_url": "https://api.github.com/users/AndreMiras/orgs", "repos_url": "https://api.github.com/users/AndreMiras/repos", "events_url": "https://api.github.com/users/AndreMiras/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreMiras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-31T11:22:21Z", "updated_at": "2019-10-12T23:06:47Z", "closed_at": "2019-01-11T22:30:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Account.encrypt()](https://github.com/ethereum/eth-account/blob/8cb7d4e/eth_account/account.py#L137) doesn't provide means to set the `iterations` (work-factor) parameter of the [eth_keyfile.keyfile.create_keyfile_json()](https://github.com/ethereum/eth-keyfile/blob/v0.5.1/eth_keyfile/keyfile.py#L37) method.\r\nIt would be useful if that was somewhat possible without monkey patching the call.\r\nMy use case is I'm running Python-based \"Ethereum clients\" on smart-phones (e.g. [EtherollApp](https://github.com/AndreMiras/EtherollApp), [PyWallet](https://github.com/AndreMiras/PyWallet)) and it has less resources so account creation with default pbkdf2 params may take ages.\r\nI was initially using [pyethereum](https://github.com/ethereum/pyethereum) where it was somewhat possible overriding `PBKDF2_CONSTANTS['c']`, but I'm in the process of migrating it since it's deprecated.\r\n\r\nThey way around I'm currently using with `eth-account` is to monkey patch `create_keyfile_json()` call.\r\n```python\r\nimport eth_account\r\nfrom eth_keyfile import create_keyfile_json\r\n\r\naccount = eth_account.Account.create()\r\neth_account.account.create_keyfile_json = partial(\r\n    create_keyfile_json, iterations=1)\r\nencrypted = eth_account.Account.encrypt(account.privateKey, \"password\")\r\n```\r\nI know setting `iterations=1` is terribly wrong but it's for demo-purpose. It could be useful for speeding up unit testing too.\r\n\r\nAnyway, if the use-case of giving access to this param makes sense, I could make a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/42", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/42/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/42/events", "html_url": "https://github.com/ethereum/eth-account/issues/42", "id": 371631487, "node_id": "MDU6SXNzdWUzNzE2MzE0ODc=", "number": 42, "title": "Move internal module to _utils", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815516250, "node_id": "MDU6TGFiZWw4MTU1MTYyNTA=", "url": "https://api.github.com/repos/ethereum/eth-account/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "7057ff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-18T17:23:23Z", "updated_at": "2019-03-10T10:23:42Z", "closed_at": "2018-10-19T17:05:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\nOur most recent pattern for tools that are not guaranteed to be API stable is to put them in a `_utils` module. `internal` is used for that purpose in eth-account, but it would be nice to use the new pattern.\r\n\r\n## How can it be fixed?\r\n\r\nRename `internal` -> `_utils`, and update all the appropriate imports.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/39", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/39/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/39/events", "html_url": "https://github.com/ethereum/eth-account/issues/39", "id": 369919832, "node_id": "MDU6SXNzdWUzNjk5MTk4MzI=", "number": 39, "title": "Documentation not showing on readthedocs?", "user": {"login": "stefanmendoza", "id": 6325996, "node_id": "MDQ6VXNlcjYzMjU5OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6325996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanmendoza", "html_url": "https://github.com/stefanmendoza", "followers_url": "https://api.github.com/users/stefanmendoza/followers", "following_url": "https://api.github.com/users/stefanmendoza/following{/other_user}", "gists_url": "https://api.github.com/users/stefanmendoza/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanmendoza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanmendoza/subscriptions", "organizations_url": "https://api.github.com/users/stefanmendoza/orgs", "repos_url": "https://api.github.com/users/stefanmendoza/repos", "events_url": "https://api.github.com/users/stefanmendoza/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanmendoza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-14T16:40:50Z", "updated_at": "2018-10-16T00:27:55Z", "closed_at": "2018-10-15T22:55:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\n### Code that produced the error\r\n\r\nWhen running the docs locally\r\n```\r\n$ make docs\r\n```\r\nI see the full documentation for methods and whatnot, but on readthedocs I don't see any of that?\r\nhttps://eth-account.readthedocs.io/en/latest/eth_account.html\r\n\r\n### Expected Result\r\n\r\nMethod and class doc shows up at the link above.\r\n\r\n### Environment\r\n\r\n```\r\nPython version:\r\n3.7.0 (default, Oct  2 2018, 09:18:58) \r\n[Clang 10.0.0 (clang-1000.11.45.2)]\r\n\r\nOperating System: Darwin-18.0.0-x86_64-i386-64bit\r\n\r\npip freeze result:\r\nalabaster==0.7.12\r\napipkg==1.5\r\nappnope==0.1.0\r\nargh==0.26.2\r\nattrdict==2.0.0\r\nattrs==18.2.0\r\nBabel==2.6.0\r\nbackcall==0.1.0\r\nbumpversion==0.5.3\r\ncertifi==2018.8.24\r\nchardet==3.0.4\r\ncolorama==0.4.0\r\ncytoolz==0.9.0.1\r\ndecorator==4.3.0\r\ndocopt==0.6.2\r\ndocutils==0.14\r\n-e git+git@github.com:stefanmendoza/eth-account.git@adcd56cdeb4c65bd55c469c45ce78e2df1263a4d#egg=eth_account\r\neth-hash==0.2.0\r\neth-keyfile==0.5.1\r\neth-keys==0.2.0b3\r\neth-rlp==0.1.2\r\neth-typing==1.3.0\r\neth-utils==1.2.2\r\nexecnet==1.5.0\r\nflake8==3.4.1\r\nhexbytes==0.1.0\r\nidna==2.7\r\nimagesize==1.1.0\r\nipython==7.0.1\r\nipython-genutils==0.2.0\r\nisort==4.3.4\r\njedi==0.13.1\r\nJinja2==2.10\r\nMarkupSafe==1.0\r\nmccabe==0.6.1\r\npackaging==18.0\r\nparso==0.3.1\r\npathtools==0.1.2\r\npexpect==4.6.0\r\npickleshare==0.7.5\r\npluggy==0.6.0\r\nprompt-toolkit==2.0.6\r\nptyprocess==0.6.0\r\npy==1.7.0\r\npycodestyle==2.3.1\r\npycryptodome==3.6.6\r\npyflakes==1.5.0\r\nPygments==2.2.0\r\npyparsing==2.2.2\r\npytest==3.3.2\r\npytest-forked==0.2\r\npytest-watch==4.2.0\r\npytest-xdist==1.23.2\r\npytz==2018.5\r\nPyYAML==3.13\r\nrequests==2.19.1\r\nrlp==1.0.3\r\nsimplegeneric==0.8.1\r\nsix==1.11.0\r\nsnowballstemmer==1.2.1\r\nSphinx==1.8.1\r\nsphinx-rtd-theme==0.4.2\r\nsphinxcontrib-websupport==1.1.0\r\ntoolz==0.9.0\r\ntox==2.9.1\r\ntraitlets==4.3.2\r\nurllib3==1.23\r\nvirtualenv==16.0.0\r\nwatchdog==0.9.0\r\nwcwidth==0.1.7\r\n```\r\n\r\n## How can it be fixed?\r\n\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/35", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/35/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/35/events", "html_url": "https://github.com/ethereum/eth-account/issues/35", "id": 364205390, "node_id": "MDU6SXNzdWUzNjQyMDUzOTA=", "number": 35, "title": "Implement structured signing according to EIP712", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-09-26T20:47:45Z", "updated_at": "2019-05-07T17:10:38Z", "closed_at": "2019-05-07T17:10:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\nNo support for EIP712 style signed messages:  https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md\r\n\r\n## How can it be fixed?\r\n\r\nImplement a low level signing API for creating and verifying EIP712 style signatures with appropriate primatives for wiring up to a higher level integration into the `Account` class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/32", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/32/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/32/events", "html_url": "https://github.com/ethereum/eth-account/issues/32", "id": 363705617, "node_id": "MDU6SXNzdWUzNjM3MDU2MTc=", "number": 32, "title": "Accept bytes-type addresses in transactions", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815516250, "node_id": "MDU6TGFiZWw4MTU1MTYyNTA=", "url": "https://api.github.com/repos/ethereum/eth-account/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "7057ff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-25T18:14:40Z", "updated_at": "2018-10-14T04:00:03Z", "closed_at": "2018-10-14T04:00:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What was wrong?\r\n\r\nIf addresses are produced programatically, it is reasonable to skip the checksum check. There is no way to do this currently.\r\n\r\n## How can it be fixed?\r\n\r\nAccept native python `bytes` as a `to` address value, when signing a transaction. It must still be 20 bytes of course.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/28", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/28/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/28/events", "html_url": "https://github.com/ethereum/eth-account/issues/28", "id": 330378634, "node_id": "MDU6SXNzdWUzMzAzNzg2MzQ=", "number": 28, "title": "Create new abstract base class for LocalAccount", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-07T18:05:58Z", "updated_at": "2018-06-07T22:19:59Z", "closed_at": "2018-06-07T22:19:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the incoming work on #25 (in PR #26) -- it's time to have an abstract class defining the interface for a [`LocalAccount`](https://github.com/ethereum/eth-account/blob/master/eth_account/local.py), plus some docs about which methods must be implemented. Specifically:\r\n\r\n- `address` property is required\r\n- `signHash()` is required\r\n- `signTransaction()` is required\r\n- `__hash__()` and `__eq__()` are required - so care should be taken that the account cannot be mutated to use a different private key.\r\n- `privateKey` property is optional, since some sources refuse to reveal it (like a hardware wallet)\r\n- `encrypt()` is optional, since some accounts cannot reveal the private key\r\n\r\n(Also, I just noticed that the docs for `encrypt` in `LocalAccount` are wrong. See [the definition in `Account` instead](https://github.com/ethereum/eth-account/blob/afd7a7a228974e2f1c2bb3198f7c6ae3906a8e7a/eth_account/account.py#L131-L166)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/24", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/24/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/24/events", "html_url": "https://github.com/ethereum/eth-account/issues/24", "id": 329231071, "node_id": "MDU6SXNzdWUzMjkyMzEwNzE=", "number": 24, "title": "Implement BIP32 HD account class.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2018-06-04T21:55:32Z", "updated_at": "2020-03-31T20:12:18Z", "closed_at": "2020-03-31T20:12:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\r\n### What was wrong?\r\n\r\nhttps://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\r\n\r\nBIP32 specifies Hierarchical Deterministic Wallets.  These are common ways to generate private keys.\r\n\r\n### How can it be fixed?\r\n\r\nImplement a new account class `HDAccount` which exposes the same API (potentially via subclassing) as [`LocalAccount`](https://github.com/ethereum/eth-account/blob/master/eth_account/local.py), with additional APIs for generating child accounts.\r\n\r\nTest cases should include any public test vectors that are available as part of the spec.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/22", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/22/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/22/events", "html_url": "https://github.com/ethereum/eth-account/issues/22", "id": 323816432, "node_id": "MDU6SXNzdWUzMjM4MTY0MzI=", "number": 22, "title": "Accept eth_keys.datatypes.PrivateKey anywhere that private keys are accepted", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815516250, "node_id": "MDU6TGFiZWw4MTU1MTYyNTA=", "url": "https://api.github.com/repos/ethereum/eth-account/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "7057ff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-16T22:57:43Z", "updated_at": "2018-07-11T17:04:47Z", "closed_at": "2018-07-11T17:04:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In addition to accepting hex strings and bytes, eth_account should accept private keys generated by eth_keys.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/21", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/21/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/21/events", "html_url": "https://github.com/ethereum/eth-account/issues/21", "id": 323813165, "node_id": "MDU6SXNzdWUzMjM4MTMxNjU=", "number": 21, "title": "Implement LocalAccount equality test", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815516250, "node_id": "MDU6TGFiZWw4MTU1MTYyNTA=", "url": "https://api.github.com/repos/ethereum/eth-account/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "7057ff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-16T22:42:52Z", "updated_at": "2018-05-27T20:04:08Z", "closed_at": "2018-05-27T20:04:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n## What was wrong?\r\n\r\n### Code that produced the error\r\n\r\n```py\r\nfrom eth_account import Account\r\nkey = b'a' * 32\r\nacct1 = Account.privateKeyToAccount(key)\r\nacct2 = Account.privateKeyToAccount(key)\r\nassert acct1 == acct2, \"local accounts with the same private key should evaluate as equal\"\r\n```\r\n\r\n### Full error output \r\n\r\n```sh\r\nAssertionError: local accounts with the same private key should evaluate as equal\r\n```\r\n\r\n## How can it be fixed?\r\n\r\nAdd an `__eq__` to `LocalAccount`, test that both objects are exactly the same type, and that they have the same key.\r\n\r\nBonus:  Make the private key attribute of `LocalAccount` immutable, and implement `__hash__` as `hash(<private_key>)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/18", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/18/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/18/events", "html_url": "https://github.com/ethereum/eth-account/issues/18", "id": 317740609, "node_id": "MDU6SXNzdWUzMTc3NDA2MDk=", "number": 18, "title": "Update to support rlp 1.x", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-25T18:20:49Z", "updated_at": "2018-04-26T02:04:42Z", "closed_at": "2018-04-26T02:04:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Need to do necessary changes to support `rlp>=1.0.0`\r\n\r\nShould target supporting full `rlp>=0.1.0,<2` if it's not too difficult.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/14", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/14/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/14/events", "html_url": "https://github.com/ethereum/eth-account/issues/14", "id": 312978288, "node_id": "MDU6SXNzdWUzMTI5NzgyODg=", "number": 14, "title": "Document which signature approaches are compatible with defunct_hash_message", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-10T15:36:00Z", "updated_at": "2019-05-07T17:11:15Z", "closed_at": "2019-05-07T17:11:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- geth\r\n- parity\r\n- X web3.js (if text non-ascii)\r\n- metamask?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/8", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/8/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/8/events", "html_url": "https://github.com/ethereum/eth-account/issues/8", "id": 309140369, "node_id": "MDU6SXNzdWUzMDkxNDAzNjk=", "number": 8, "title": "Support for HD and Mnemonic key derivation.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-27T21:27:38Z", "updated_at": "2020-03-20T20:29:49Z", "closed_at": "2020-03-20T20:29:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "* Tools like metamask use [mnemonic passphrases](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) for key backups.\r\n* [HD wallets](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) are a widely used thing.\r\n\r\nSupporting these types of accounts/wallets would likely be a useful feature.\r\n\r\n> Note that I'm not sure whether metamask uses bip39 style mnemonics so we should look into that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/4", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/4/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/4/events", "html_url": "https://github.com/ethereum/eth-account/issues/4", "id": 292267886, "node_id": "MDU6SXNzdWUyOTIyNjc4ODY=", "number": 4, "title": "Use scrypt as default", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-29T02:38:19Z", "updated_at": "2018-10-15T20:40:46Z", "closed_at": "2018-10-15T20:40:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n>    web3.py uses pbkdf2(dklen:32, c:1000000, prf: hmac-sha256).\r\n    these are pretty low defaults\r\n    should def at least use scrypt as a baseline\r\n    hmac-sha256 is much easier to bruteforce, by like 3-4 orders of magnitude\r\n    the parameters don't matter i think the KDF func/lib should be able to accommodate but probably best to make them match the geth defaults\r\n    which are more secure. for some comparison an iteration of the default SCRYPT parameters in geth takes 200-400ms but an iteration of the HMAC KDF takes less than 1ms, on GPUs SCRYPT with r=8 destroys performance because of the high memory bandwidth > requirement, so even on super high end GPUs you can barely get 20-30h/s where as with the HMAC KDF you can get 100k-1m h/s a second.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/3", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/3/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/3/events", "html_url": "https://github.com/ethereum/eth-account/issues/3", "id": 291749062, "node_id": "MDU6SXNzdWUyOTE3NDkwNjI=", "number": 3, "title": "Allow specifying KDF function for `web3.eth.account.encrypt` API", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815516250, "node_id": "MDU6TGFiZWw4MTU1MTYyNTA=", "url": "https://api.github.com/repos/ethereum/eth-account/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "7057ff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-25T23:14:02Z", "updated_at": "2018-10-15T20:40:46Z", "closed_at": "2018-10-15T20:40:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Migrated from: https://github.com/ethereum/web3.py/issues/583\r\n\r\n### What was wrong?\r\n\r\n`eth-keyfile` supports passing in a `kdf` parameter to specify the key derivation function, but this api is not exposed via the `web3.eth.account.encrypt` API.\r\n\r\n\r\n### How can it be fixed?\r\n\r\nAdd an optional keyword parameter `kdf` to allow specifying what KDF you want.\r\n\r\nExtra options:\r\n\r\nAllow setting the default KDF using both environment variables and via a property on the `web3.eth.account` module.\r\n\r\n```python\r\nweb3.eth.account.defaultKDF = 'scrypt'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/2", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/2/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/2/events", "html_url": "https://github.com/ethereum/eth-account/issues/2", "id": 291648431, "node_id": "MDU6SXNzdWUyOTE2NDg0MzE=", "number": 2, "title": "Validate message and transaction signing against unicode in web3.js", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-01-25T17:16:54Z", "updated_at": "2018-04-07T00:38:52Z", "closed_at": "2018-04-07T00:38:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The behavior is different in js and python. Figure out which one is right, and fix the other one.\r\n\r\nFirst guess: one of the libraries calculates message length in unicode character points instead of number of bytes. Since the message length is embedded in the prefix, it would change the message and its hash.\r\n\r\nSee https://gist.github.com/holiman/6f57cb5b082b6712b9e8c19fe48ca960#gistcomment-2332077", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ethereum/eth-account/issues/1", "repository_url": "https://api.github.com/repos/ethereum/eth-account", "labels_url": "https://api.github.com/repos/ethereum/eth-account/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ethereum/eth-account/issues/1/comments", "events_url": "https://api.github.com/repos/ethereum/eth-account/issues/1/events", "html_url": "https://github.com/ethereum/eth-account/issues/1", "id": 291647753, "node_id": "MDU6SXNzdWUyOTE2NDc3NTM=", "number": 1, "title": "Verify address checksums", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815516250, "node_id": "MDU6TGFiZWw4MTU1MTYyNTA=", "url": "https://api.github.com/repos/ethereum/eth-account/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "7057ff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-01-25T17:14:44Z", "updated_at": "2018-03-31T01:02:08Z", "closed_at": "2018-03-31T01:02:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Account.signTransaction` is incorrectly accepting transaction dicts with to field set to a non-checksummed address.\r\n\r\nFix that, and look for other places this validation may be missing.\r\n\r\nSee https://gist.github.com/holiman/6f57cb5b082b6712b9e8c19fe48ca960#gistcomment-2332077", "performed_via_github_app": null, "score": 1.0}]}