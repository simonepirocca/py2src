{"total_count": 61, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/etingof/pyasn1/issues/193", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/193/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/193/events", "html_url": "https://github.com/etingof/pyasn1/issues/193", "id": 592784085, "node_id": "MDU6SXNzdWU1OTI3ODQwODU=", "number": 193, "title": "SequenceOf Sequence: doubt", "user": {"login": "GuilhermeUtech", "id": 42720369, "node_id": "MDQ6VXNlcjQyNzIwMzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/42720369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuilhermeUtech", "html_url": "https://github.com/GuilhermeUtech", "followers_url": "https://api.github.com/users/GuilhermeUtech/followers", "following_url": "https://api.github.com/users/GuilhermeUtech/following{/other_user}", "gists_url": "https://api.github.com/users/GuilhermeUtech/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuilhermeUtech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuilhermeUtech/subscriptions", "organizations_url": "https://api.github.com/users/GuilhermeUtech/orgs", "repos_url": "https://api.github.com/users/GuilhermeUtech/repos", "events_url": "https://api.github.com/users/GuilhermeUtech/events{/privacy}", "received_events_url": "https://api.github.com/users/GuilhermeUtech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T17:03:14Z", "updated_at": "2020-05-07T19:51:29Z", "closed_at": "2020-05-07T19:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "How could I assign values \u200b\u200bto the 'attributes' elements: 'type' and 'vals'?\r\n\r\n```python # Auto-generated by asn1ate v.0.6.0 from anana.asn\r\n# (last modified on 2020-03-23 14:38:47.141034)\r\nfrom pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful\r\nclass SearchResultEntry(univ.Sequence):\r\n    pass\r\n\r\nSearchResultEntry.tagSet = univ.Sequence.tagSet.tagExplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 4))\r\n\r\nSearchResultEntry.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('objectName', univ.OctetString()),\r\n    namedtype.NamedType('attributes', univ.SequenceOf(componentType=univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.NamedType('type', univ.OctetString()),\r\n        namedtype.NamedType('vals', univ.SetOf(componentType=univ.OctetString()))\r\n    ))\r\n    ))\r\n)\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/189", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/189/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/189/events", "html_url": "https://github.com/etingof/pyasn1/issues/189", "id": 541486368, "node_id": "MDU6SXNzdWU1NDE0ODYzNjg=", "number": 189, "title": "Attempted operation on ASN.1 schema object", "user": {"login": "johndoe31415", "id": 5919339, "node_id": "MDQ6VXNlcjU5MTkzMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5919339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johndoe31415", "html_url": "https://github.com/johndoe31415", "followers_url": "https://api.github.com/users/johndoe31415/followers", "following_url": "https://api.github.com/users/johndoe31415/following{/other_user}", "gists_url": "https://api.github.com/users/johndoe31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/johndoe31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johndoe31415/subscriptions", "organizations_url": "https://api.github.com/users/johndoe31415/orgs", "repos_url": "https://api.github.com/users/johndoe31415/repos", "events_url": "https://api.github.com/users/johndoe31415/events{/privacy}", "received_events_url": "https://api.github.com/users/johndoe31415/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-22T18:31:33Z", "updated_at": "2020-06-02T22:17:45Z", "closed_at": "2020-06-02T22:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nfirst off, thanks for creating pyasn1, it's tremendously helpful. I'm implementing X.509 certificate parsing and rely heavily on pyasn1 and pyasn1_modules, specifically RFC5280. I'm using pyasn1 0.4.7. Recently, I've run into an issue. I've created a minimal working example to illustrate it, copying from pyasn1_modules the definitions (so that it's a self-contained example). Here's the code:\r\n\r\n```\r\nimport pyasn1.codec.der.decoder\r\nfrom pyasn1.type import univ, namedtype, char, constraint\r\nfrom pyasn1_modules import rfc5280\r\n\r\nclass DisplayText(univ.Choice):\r\n    pass\r\n\r\nDisplayText.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('ia5String', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 200))),\r\n    namedtype.NamedType('visibleString',\r\n                        char.VisibleString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 200))),\r\n    namedtype.NamedType('bmpString', char.BMPString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 200))),\r\n    namedtype.NamedType('utf8String', char.UTF8String().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 200)))\r\n)\r\n\r\nclass NoticeReference(univ.Sequence):\r\n    pass\r\n\r\nNoticeReference.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('organization', DisplayText()),\r\n    namedtype.NamedType('noticeNumbers', univ.SequenceOf(componentType=univ.Integer()))\r\n)\r\n\r\nclass UserNotice(univ.Sequence):\r\n    pass\r\n\r\nUserNotice.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('noticeRef', NoticeReference()),\r\n    namedtype.OptionalNamedType('explicitText', DisplayText())\r\n)\r\n\r\ndata = bytes.fromhex(\"30819e0c819b54686973204365727469666963617465206d6179206f6e6c792062652072656c6965642075706f6e2062792052656c79696e67205061727469657320616e64206f6e6c7920696e206163636f7264616e636520776974682074686520436572746966696361746520506f6c69637920666f756e642061742068747470733a2f2f6c657473656e63727970742e6f72672f7265706f7369746f72792f\")\r\n(asn1, tail) = pyasn1.codec.der.decoder.decode(data, asn1Spec = UserNotice())\r\nnr = asn1.getComponentByName(\"noticeRef\", instantiate = False)\r\nprint(type(nr))\r\n#print(nr)\r\n#print(nr.hasValue())\r\n#print(nr.isValue)\r\n```\r\n\r\nThe output of this is\r\n\r\n```\r\n<class 'pyasn1.type.base.NoValue'>\r\n```\r\n\r\nHowever, any of the commented out examples below fail, e.g.:\r\n\r\n```\r\n[...]\r\n  File \"/home/joe/.local/lib/python3.7/site-packages/pyasn1/type/base.py\", line 236, in __getattr__\r\n    raise error.PyAsn1Error('Attempted \"%s\" operation on ASN.1 schema object' % attr)\r\npyasn1.error.PyAsn1Error: Attempted \"hasValue\" operation on ASN.1 schema object\r\n```\r\n\r\nI find this behavior a bit surprising and am leaning towards seeing this as a bug. Isn't hasValue() explicitly meant to be able to make me distinguish between a schema and and actual instantiation?\r\n\r\nAs a workaround I can compare type(nr) to NoValue of course, or use isinstance(nr, NoValue) -- is this the recommended approach instead? Or is hasValue() the proper way to identify if an optional Sequence member has been included?\r\n\r\nNote that when working with an easier example, everything behaves as expected:\r\n\r\n```\r\nx1 = univ.Integer()\r\nprint(x1.hasValue())\r\nx2 = univ.Integer(123)\r\nprint(x2.hasValue())\r\n```\r\n\r\nprints\r\n\r\n```\r\nFalse\r\nTrue\r\n```\r\n\r\nI.e., even though x1 clearly is only a schema, the .hasValue() method still works.\r\n\r\nIt'd be great if you could advise me if I'm doing something wrong here and, if so, if you could give me a pointer as to what the proper way is to determine if an optional sequence member has been included in the encoded data.\r\n\r\nThanks and best regards,\r\nJohannes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/183", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/183/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/183/events", "html_url": "https://github.com/etingof/pyasn1/issues/183", "id": 525930562, "node_id": "MDU6SXNzdWU1MjU5MzA1NjI=", "number": 183, "title": "Component value is tag-incompatible, when assigning value to Choice.", "user": {"login": "daniel-leicht", "id": 17382506, "node_id": "MDQ6VXNlcjE3MzgyNTA2", "avatar_url": "https://avatars1.githubusercontent.com/u/17382506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-leicht", "html_url": "https://github.com/daniel-leicht", "followers_url": "https://api.github.com/users/daniel-leicht/followers", "following_url": "https://api.github.com/users/daniel-leicht/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-leicht/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-leicht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-leicht/subscriptions", "organizations_url": "https://api.github.com/users/daniel-leicht/orgs", "repos_url": "https://api.github.com/users/daniel-leicht/repos", "events_url": "https://api.github.com/users/daniel-leicht/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-leicht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-20T16:48:53Z", "updated_at": "2019-11-27T14:34:48Z", "closed_at": "2019-11-27T14:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @etingof or any other pyasn1 users!\r\n\r\nFrom a research around the net it seems that pyasn1 is by far the best package to handle any ASN1 related tasks.\r\n\r\nI am trying to use pyasn1 to encode and decode [MMS](https://en.wikipedia.org/wiki/Manufacturing_Message_Specification) PDUs.\r\n\r\nI managed to create all the classes from the MMS ASN definition:\r\n[https://pastebin.com/JitDfL2R](https://pastebin.com/JitDfL2R)\r\n(named it mms_classes.py)\r\n\r\nI started by decoding a simple MMS packet and it worked, but when I tried to create one from scratch:\r\n\r\n```\r\nfrom mms_classes import MMSpdu, Confirmed_RequestPDU, ConfirmedServiceRequest\r\n\r\ncsr = ConfirmedServiceRequest()\r\ncsr['identify'] = b\"\"\r\n\r\ncrp = Confirmed_RequestPDU()\r\ncrp[\"invokeID\"] = 2\r\ncrp[\"confirmedServiceRequest\"] = csr\r\n\r\nmp = MMSpdu()\r\nmp[\"confirmed-RequestPDU\"] = crp\r\n```\r\n\r\n\r\nI get the following exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"\", line 23, in <module>\r\n    mp[\"confirmed-RequestPDU\"] = crp\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pyasn1\\type\\univ.py\", line 2073, in __setitem__\r\n    raise KeyError(sys.exc_info()[1])\r\nKeyError: PyAsn1Error(\"Component value is tag-incompatible: <Confirmed_RequestPDU schema object at 0x3ae4a70 tagSet=<TagSet object at 0x3ace790 tags 0:32:16> subtypeSpec=<ConstraintsInte...(truncated)\r\n\r\n```\r\n\r\nI tried following the documentation but still couldn't find where I went wrong.\r\n\r\nDaniel\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/169", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/169/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/169/events", "html_url": "https://github.com/etingof/pyasn1/issues/169", "id": 474382744, "node_id": "MDU6SXNzdWU0NzQzODI3NDQ=", "number": 169, "title": "How to manually downgrade an ASN.1 spec to X.208?", "user": {"login": "holviberker", "id": 48910161, "node_id": "MDQ6VXNlcjQ4OTEwMTYx", "avatar_url": "https://avatars2.githubusercontent.com/u/48910161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holviberker", "html_url": "https://github.com/holviberker", "followers_url": "https://api.github.com/users/holviberker/followers", "following_url": "https://api.github.com/users/holviberker/following{/other_user}", "gists_url": "https://api.github.com/users/holviberker/gists{/gist_id}", "starred_url": "https://api.github.com/users/holviberker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holviberker/subscriptions", "organizations_url": "https://api.github.com/users/holviberker/orgs", "repos_url": "https://api.github.com/users/holviberker/repos", "events_url": "https://api.github.com/users/holviberker/events{/privacy}", "received_events_url": "https://api.github.com/users/holviberker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T05:37:55Z", "updated_at": "2019-07-30T14:44:14Z", "closed_at": "2019-07-30T14:44:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to decode data by using the ASN.1 specification described at https://www.etsi.org/deliver/etsi_ts/119400_119499/119495/01.03.02_60/ts_119495v010302p.pdf. Since pyasn1 doesn't support X.60X yet, I have to manually generate pyasn1 code manually. I've tried to apply the suggestions at https://tools.ietf.org/html/draft-ietf-pkix-asn1-translation-01#section-4.1 but I couldn't be able to generate it automatically.\r\n\r\n```asn\r\nETSIPSD2QcprofileMod { itu-t(0) identified-organization(4) etsi(0) psd2(19495) idmod(0) id-modpsd2qcprofile(0) }\r\n\r\nDEFINITIONS EXPLICIT TAGS ::=\r\n\r\nBEGIN\r\n\r\n-- EXPORTS All \u2013-\r\n\r\nIMPORTS\r\nQC-STATEMENT\r\n FROM PKIXqualified97 {iso(1) identified-organization(3) dod(6)\r\n internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\r\n id-mod-qualified-cert-97(35)};\r\n\r\n-- statements\r\n\r\netsi-psd2-qcStatement QC-STATEMENT ::= { SYNTAX PSD2QcType IDENTIFIED BY id-etsi-psd2-qcStatement }\r\n\r\nid-etsi-psd2-qcStatement OBJECT IDENTIFIER :: =\r\n{ itu-t(0) identified-organization(4) etsi(0) psd2(19495) qcstatement(2) }\r\n\r\nPSD2QcType ::= SEQUENCE {\r\n rolesOfPSP RolesOfPSP,\r\n nCAName NCAName,\r\n nCAId NCAId }\r\n\r\nNCAName ::= UTF8String (SIZE (1..256))\r\n\r\nNCAId ::= UTF8String (SIZE (1..256))\r\n\r\nRolesOfPSP ::= SEQUENCE OF RoleOfPSP\r\n\r\nRoleOfPSP ::= SEQUENCE {\r\n roleOfPspOid RoleOfPspOid,\r\n roleOfPspName RoleOfPspName }\r\n\r\nRoleOfPspOid ::= OBJECT IDENTIFIER\r\n\r\n-- Object Identifier arc for roles of payment service providers\r\n-- defined in the present document\r\netsi-psd2-roles OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) id-roles(1) }\r\n\r\n-- Account Servicing Payment Service Provider (PSP_AS) role\r\nid-psd2-role-psp-as OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) id-roles(1) 1 }\r\n\r\n-- Payment Initiation Service Provider (PSP_PI) role\r\nid-psd2-role-psp-pi OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) id-roles(1) 2 }\r\n\r\n-- Account Information Service Provider (PSP_AI) role\r\nid-psd2-role-psp-ai OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) id-roles(1) 3 }\r\n\r\n-- Payment Service Provider issuing card-based payment instruments (PSP_IC) role\r\nid-psd2-role-psp-ic OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) id-roles(1) 4 }\r\n\r\n-- Payment Service Provider role name corresponding with OID (i.e. PSP_AS,\r\n-- PSP_PI, PSP_AI, PSP_IC)\r\n\r\nRoleOfPspName ::= UTF8String (SIZE(1..256))\r\n\r\n-- Policy Identifiers\r\netsi-psd2-policy OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) policy-identifiers(3)}\r\n\r\n-- QCP-w-psd2 certificate policy for PSD2 qualified website authentication certificates\r\nqcp-web-psd2 OBJECT IDENTIFIER ::= { itu-t(0) identified-organization(4) etsi(0) psd2(19495) policy-identifiers(3) 1}\r\nEND \r\n```\r\n\r\nI have tried to implement the spec above with pyasn1:\r\n\r\n```py\r\nfrom pyasn1.type import constraint\r\nfrom pyasn1.type import univ\r\nfrom pyasn1.type import namedtype\r\nfrom pyasn1.type import char\r\n\r\nfrom pyasn1.codec.der.decoder import decode\r\n\r\nfrom pyasn1 import debug\r\ndebug.setLogger(debug.Debug('all'))\r\n\r\netsi_psd2_roles = univ.ObjectIdentifier('0.4.0.19495.1')\r\nid_psd2_role_psp_as = univ.ObjectIdentifier('0.4.0.19495.1.1')\r\nid_psd2_role_psp_pi = univ.ObjectIdentifier('0.4.0.19495.1.2')\r\nid_psd2_role_psp_ai = univ.ObjectIdentifier('0.4.0.19495.1.3')\r\nid_psd2_role_psp_ic = univ.ObjectIdentifier('0.4.0.19495.1.4')\r\n\r\nclass RoleOfPspOid(univ.ObjectIdentifier):\r\n    subtypeSpec = univ.ObjectIdentifier.subtypeSpec + constraint.SingleValueConstraint(\r\n        id_psd2_role_psp_as,\r\n        id_psd2_role_psp_pi,\r\n        id_psd2_role_psp_ai,\r\n        id_psd2_role_psp_ai,\r\n    )\r\n\r\nclass RoleOfPSP(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('roleOfPspOid', RoleOfPspOid()),\r\n        namedtype.NamedType('roleOfPspName', char.UTF8String()),\r\n    )\r\n\r\nclass RolesOfPSP(univ.SequenceOf):\r\n    componentType = RoleOfPSP()\r\n\r\nclass PSD2QcType(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('rolesOfPSP', RolesOfPSP()),\r\n        namedtype.NamedType('nCAName', char.UTF8String()),\r\n        namedtype.NamedType('nCAId', char.UTF8String()),\r\n    )\r\n\r\nclass QCStatement(univ.Sequence):\r\n    \"\"\"\r\n    QCStatement ::= SEQUENCE {\r\n        statementId   OBJECT IDENTIFIER,\r\n        statementInfo ANY OPTIONAL\r\n    }\r\n    \"\"\"\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('statementId', univ.ObjectIdentifier()),\r\n        namedtype.OptionalNamedType('statementInfo', RoleOfPSP()),\r\n    )\r\n\r\nclass QCStatements(univ.SequenceOf):\r\n    componentType = QCStatement()\r\n\r\ndata = b\"0p0n\\x06\\x06\\x04\\x00\\x81\\x98'\\x020d090\\x11\\x06\\x07\\x04\\x00\\x81\\x98'\\x01\\x03\\x0c\\x06PSP_AI0\\x11\\x06\\x07\\x04\\x00\\x81\\x98'\\x01\\x04\\x0c\\x06PSP_IC0\\x11\\x06\\x07\\x04\\x00\\x81\\x98'\\x01\\x02\\x0c\\x06PSP_PI\\x0c\\x1fFinancial Supervisory Authority\\x0c\\x06FI-FSA\"\r\n\r\nprint(decode(d, asn1Spec=QCStatements()))\r\n```\r\n\r\nThis snippet raises the following exception:\r\n\r\n```\r\n2019-07-30 08:04:08,724 pyasn1: running pyasn1 0.4.5, debug flags all\r\n2019-07-30 08:04:08,724 pyasn1: debug category 'all' enabled\r\n2019-07-30 08:04:08,725 pyasn1: decoder called at scope  with state 0, working with up to 114 octets of substrate:\r\n00000: 30 70 30 6E 06 06 04 00 81 98 27 02 30 64 30 39\r\n00016: 30 11 06 07 04 00 81 98 27 01 03 0C 06 50 53 50\r\n00032: 5F 41 49 30 11 06 07 04 00 81 98 27 01 04 0C 06\r\n00048: 50 53 50 5F 49 43 30 11 06 07 04 00 81 98 27 01\r\n00064: 02 0C 06 50 53 50 5F 50 49 0C 1F 46 69 6E 61 6E\r\n00080: 63 69 61 6C 20 53 75 70 65 72 76 69 73 6F 72 79\r\n00096: 20 41 75 74 68 6F 72 69 74 79 0C 06 46 49 2D 46\r\n00112: 53 41\r\n2019-07-30 08:04:08,725 pyasn1: tag decoded into <TagSet object at 0x1090c0240 tags 0:32:16>, decoding length\r\n2019-07-30 08:04:08,725 pyasn1: value length decoded into 112, payload substrate is:\r\n00000: 30 6E 06 06 04 00 81 98 27 02 30 64 30 39 30 11\r\n00016: 06 07 04 00 81 98 27 01 03 0C 06 50 53 50 5F 41\r\n00032: 49 30 11 06 07 04 00 81 98 27 01 04 0C 06 50 53\r\n00048: 50 5F 49 43 30 11 06 07 04 00 81 98 27 01 02 0C\r\n00064: 06 50 53 50 5F 50 49 0C 1F 46 69 6E 61 6E 63 69\r\n00080: 61 6C 20 53 75 70 65 72 76 69 73 6F 72 79 20 41\r\n00096: 75 74 68 6F 72 69 74 79 0C 06 46 49 2D 46 53 41\r\n2019-07-30 08:04:08,725 pyasn1: candidate ASN.1 spec is QCStatements\r\n2019-07-30 08:04:08,725 pyasn1: value decoder chosen for an ambiguous type by type ID 9\r\n2019-07-30 08:04:08,725 pyasn1: codec SequenceOfDecoder chosen by ASN.1 spec, decoding value\r\n2019-07-30 08:04:08,726 pyasn1: decoding type <QCStatement schema object at 0x1090c00f0 tagSet=<TagSet object at 0x1090759b0 tags 0:32:16> subtypeSpec=<ConstraintsIntersection object at 0x109075a90> componentType=<NamedTypes object at 0x1090b4e48 types <NamedType object at 0x1090b4c88 type statementId=<ObjectIdentifier schema object at 0x1090b48d0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6>>>, <OptionalNamedType object at 0x1090b4e10 type statementInfo=<RoleOfPSP schema object at 0x1090b4cc0 tagSet=<TagSet object at 0x1090759b0 tags 0:32:16> subtypeSpec=<ConstraintsIntersection object at 0x109075a90> componentType=<NamedTypes object at 0x10908ca58 types <NamedType object at 0x10908c908 type roleOfPspOid=<RoleOfPspOid schema object at 0x10908c8d0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> subtypeSpec <ConstraintsIntersection object at 0x10908c860 consts <SingleValueConstraint object at 0x10908c898 consts <ObjectIdentifier value object at 0x1077de5c0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.1]>, <ObjectIdentifier value object at 0x1077de2e8 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.2]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>>>>>, <NamedType object at 0x10908ca20 type roleOfPspName=<UTF8String schema object at 0x10908c9e8 tagSet <TagSet object at 0x109082b38 tags 0:0:12> encoding utf-8>>> sizeSpec=<ConstraintsIntersection object at 0x109075ac8>>>> sizeSpec=<ConstraintsIntersection object at 0x109075ac8>> chosen by given `asn1Spec`\r\n2019-07-30 08:04:08,726 pyasn1: decoder called at scope QCStatements with state 0, working with up to 112 octets of substrate:\r\n00000: 30 6E 06 06 04 00 81 98 27 02 30 64 30 39 30 11\r\n00016: 06 07 04 00 81 98 27 01 03 0C 06 50 53 50 5F 41\r\n00032: 49 30 11 06 07 04 00 81 98 27 01 04 0C 06 50 53\r\n00048: 50 5F 49 43 30 11 06 07 04 00 81 98 27 01 02 0C\r\n00064: 06 50 53 50 5F 50 49 0C 1F 46 69 6E 61 6E 63 69\r\n00080: 61 6C 20 53 75 70 65 72 76 69 73 6F 72 79 20 41\r\n00096: 75 74 68 6F 72 69 74 79 0C 06 46 49 2D 46 53 41\r\n2019-07-30 08:04:08,726 pyasn1: tag decoded into <TagSet object at 0x1090c0240 tags 0:32:16>, decoding length\r\n2019-07-30 08:04:08,726 pyasn1: value length decoded into 110, payload substrate is:\r\n00000: 06 06 04 00 81 98 27 02 30 64 30 39 30 11 06 07\r\n00016: 04 00 81 98 27 01 03 0C 06 50 53 50 5F 41 49 30\r\n00032: 11 06 07 04 00 81 98 27 01 04 0C 06 50 53 50 5F\r\n00048: 49 43 30 11 06 07 04 00 81 98 27 01 02 0C 06 50\r\n00064: 53 50 5F 50 49 0C 1F 46 69 6E 61 6E 63 69 61 6C\r\n00080: 20 53 75 70 65 72 76 69 73 6F 72 79 20 41 75 74\r\n00096: 68 6F 72 69 74 79 0C 06 46 49 2D 46 53 41\r\n2019-07-30 08:04:08,726 pyasn1: candidate ASN.1 spec is QCStatement\r\n2019-07-30 08:04:08,726 pyasn1: value decoder chosen for an ambiguous type by type ID 11\r\n2019-07-30 08:04:08,726 pyasn1: codec SequenceDecoder chosen by ASN.1 spec, decoding value\r\n2019-07-30 08:04:08,726 pyasn1: decoding non-deterministic  type <QCStatement schema object at 0x1090c00f0 tagSet=<TagSet object at 0x1090759b0 tags 0:32:16> subtypeSpec=<ConstraintsIntersection object at 0x109075a90> componentType=<NamedTypes object at 0x1090b4e48 types <NamedType object at 0x1090b4c88 type statementId=<ObjectIdentifier schema object at 0x1090b48d0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6>>>, <OptionalNamedType object at 0x1090b4e10 type statementInfo=<RoleOfPSP schema object at 0x1090b4cc0 tagSet=<TagSet object at 0x1090759b0 tags 0:32:16> subtypeSpec=<ConstraintsIntersection object at 0x109075a90> componentType=<NamedTypes object at 0x10908ca58 types <NamedType object at 0x10908c908 type roleOfPspOid=<RoleOfPspOid schema object at 0x10908c8d0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> subtypeSpec <ConstraintsIntersection object at 0x10908c860 consts <SingleValueConstraint object at 0x10908c898 consts <ObjectIdentifier value object at 0x1077de5c0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.1]>, <ObjectIdentifier value object at 0x1077de2e8 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.2]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>>>>>, <NamedType object at 0x10908ca20 type roleOfPspName=<UTF8String schema object at 0x10908c9e8 tagSet <TagSet object at 0x109082b38 tags 0:0:12> encoding utf-8>>> sizeSpec=<ConstraintsIntersection object at 0x109075ac8>>>> sizeSpec=<ConstraintsIntersection object at 0x109075ac8>> chosen by type ID\r\n2019-07-30 08:04:08,726 pyasn1: decoder called at scope QCStatements.QCStatement with state 0, working with up to 110 octets of substrate:\r\n00000: 06 06 04 00 81 98 27 02 30 64 30 39 30 11 06 07\r\n00016: 04 00 81 98 27 01 03 0C 06 50 53 50 5F 41 49 30\r\n00032: 11 06 07 04 00 81 98 27 01 04 0C 06 50 53 50 5F\r\n00048: 49 43 30 11 06 07 04 00 81 98 27 01 02 0C 06 50\r\n00064: 53 50 5F 50 49 0C 1F 46 69 6E 61 6E 63 69 61 6C\r\n00080: 20 53 75 70 65 72 76 69 73 6F 72 79 20 41 75 74\r\n00096: 68 6F 72 69 74 79 0C 06 46 49 2D 46 53 41\r\n2019-07-30 08:04:08,726 pyasn1: tag decoded into <TagSet object at 0x1090c04a8 tags 0:0:6>, decoding length\r\n2019-07-30 08:04:08,726 pyasn1: value length decoded into 6, payload substrate is:\r\n00000: 04 00 81 98 27 02\r\n2019-07-30 08:04:08,727 pyasn1: candidate ASN.1 spec is ObjectIdentifier\r\n2019-07-30 08:04:08,727 pyasn1: value decoder chosen for an ambiguous type by type ID 6\r\n2019-07-30 08:04:08,727 pyasn1: codec ObjectIdentifierDecoder chosen by ASN.1 spec, decoding value\r\n2019-07-30 08:04:08,727 pyasn1: codec ObjectIdentifierDecoder yields type ObjectIdentifier, value:\r\n0.4.0.19495.2\r\n...remaining substrate is:\r\n00000: 30 64 30 39 30 11 06 07 04 00 81 98 27 01 03 0C\r\n00016: 06 50 53 50 5F 41 49 30 11 06 07 04 00 81 98 27\r\n00032: 01 04 0C 06 50 53 50 5F 49 43 30 11 06 07 04 00\r\n00048: 81 98 27 01 02 0C 06 50 53 50 5F 50 49 0C 1F 46\r\n00064: 69 6E 61 6E 63 69 61 6C 20 53 75 70 65 72 76 69\r\n00080: 73 6F 72 79 20 41 75 74 68 6F 72 69 74 79 0C 06\r\n00096: 46 49 2D 46 53 41\r\n2019-07-30 08:04:08,727 pyasn1: decoder left scope QCStatements.QCStatement, call completed\r\n2019-07-30 08:04:08,727 pyasn1: decoder called at scope QCStatements.QCStatement with state 0, working with up to 102 octets of substrate:\r\n00000: 30 64 30 39 30 11 06 07 04 00 81 98 27 01 03 0C\r\n00016: 06 50 53 50 5F 41 49 30 11 06 07 04 00 81 98 27\r\n00032: 01 04 0C 06 50 53 50 5F 49 43 30 11 06 07 04 00\r\n00048: 81 98 27 01 02 0C 06 50 53 50 5F 50 49 0C 1F 46\r\n00064: 69 6E 61 6E 63 69 61 6C 20 53 75 70 65 72 76 69\r\n00080: 73 6F 72 79 20 41 75 74 68 6F 72 69 74 79 0C 06\r\n00096: 46 49 2D 46 53 41\r\n2019-07-30 08:04:08,727 pyasn1: tag decoded into <TagSet object at 0x1090c0240 tags 0:32:16>, decoding length\r\n2019-07-30 08:04:08,727 pyasn1: value length decoded into 100, payload substrate is:\r\n00000: 30 39 30 11 06 07 04 00 81 98 27 01 03 0C 06 50\r\n00016: 53 50 5F 41 49 30 11 06 07 04 00 81 98 27 01 04\r\n00032: 0C 06 50 53 50 5F 49 43 30 11 06 07 04 00 81 98\r\n00048: 27 01 02 0C 06 50 53 50 5F 50 49 0C 1F 46 69 6E\r\n00064: 61 6E 63 69 61 6C 20 53 75 70 65 72 76 69 73 6F\r\n00080: 72 79 20 41 75 74 68 6F 72 69 74 79 0C 06 46 49\r\n00096: 2D 46 53 41\r\n2019-07-30 08:04:08,727 pyasn1: candidate ASN.1 spec is a map of:\r\n2019-07-30 08:04:08,727 pyasn1:   <TagSet object at 0x1090759b0 tags 0:32:16> -> RoleOfPSP\r\n2019-07-30 08:04:08,727 pyasn1: new candidate ASN.1 spec is <TagSet object at 0x1090759b0 tags 0:32:16> -> RoleOfPSP {\r\n \"roleOfPspOid\" = <TagSet object at 0x1090750b8 tags 0:0:6> -> RoleOfPspOid\r\n \"roleOfPspName\" = <TagSet object at 0x109082b38 tags 0:0:12> -> UTF8String\r\n\r\n}, chosen by <TagSet object at 0x1090c0240 tags 0:32:16>\r\n2019-07-30 08:04:08,727 pyasn1: value decoder chosen for an ambiguous type by type ID 11\r\n2019-07-30 08:04:08,727 pyasn1: codec SequenceDecoder chosen by ASN.1 spec, decoding value\r\n2019-07-30 08:04:08,727 pyasn1: decoding deterministic  type <RoleOfPSP schema object at 0x1090b4cc0 tagSet=<TagSet object at 0x1090759b0 tags 0:32:16> subtypeSpec=<ConstraintsIntersection object at 0x109075a90> componentType=<NamedTypes object at 0x10908ca58 types <NamedType object at 0x10908c908 type roleOfPspOid=<RoleOfPspOid schema object at 0x10908c8d0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> subtypeSpec <ConstraintsIntersection object at 0x10908c860 consts <SingleValueConstraint object at 0x10908c898 consts <ObjectIdentifier value object at 0x1077de5c0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.1]>, <ObjectIdentifier value object at 0x1077de2e8 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.2]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>>>>>, <NamedType object at 0x10908ca20 type roleOfPspName=<UTF8String schema object at 0x10908c9e8 tagSet <TagSet object at 0x109082b38 tags 0:0:12> encoding utf-8>>> sizeSpec=<ConstraintsIntersection object at 0x109075ac8>> chosen by type ID\r\n2019-07-30 08:04:08,728 pyasn1: decoder called at scope QCStatements.QCStatement.RoleOfPSP with state 0, working with up to 100 octets of substrate:\r\n00000: 30 39 30 11 06 07 04 00 81 98 27 01 03 0C 06 50\r\n00016: 53 50 5F 41 49 30 11 06 07 04 00 81 98 27 01 04\r\n00032: 0C 06 50 53 50 5F 49 43 30 11 06 07 04 00 81 98\r\n00048: 27 01 02 0C 06 50 53 50 5F 50 49 0C 1F 46 69 6E\r\n00064: 61 6E 63 69 61 6C 20 53 75 70 65 72 76 69 73 6F\r\n00080: 72 79 20 41 75 74 68 6F 72 69 74 79 0C 06 46 49\r\n00096: 2D 46 53 41\r\n2019-07-30 08:04:08,728 pyasn1: tag decoded into <TagSet object at 0x1090c0240 tags 0:32:16>, decoding length\r\n2019-07-30 08:04:08,728 pyasn1: value length decoded into 57, payload substrate is:\r\n00000: 30 11 06 07 04 00 81 98 27 01 03 0C 06 50 53 50\r\n00016: 5F 41 49 30 11 06 07 04 00 81 98 27 01 04 0C 06\r\n00032: 50 53 50 5F 49 43 30 11 06 07 04 00 81 98 27 01\r\n00048: 02 0C 06 50 53 50 5F 50 49\r\n2019-07-30 08:04:08,728 pyasn1: codec <none> chosen by ASN.1 spec, decoding as explicit tag\r\n2019-07-30 08:04:08,728 pyasn1: codec <none> chosen, decoding as failure\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/testuser/projects/path/to/project/helpers/certificate.py\", line 414, in <module>\r\n    print(decode(d, asn1Spec=QCStatements()))\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1498, in __call__\r\n    **options\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 694, in valueDecoder\r\n    component, head = decodeFun(head, componentType, **options)\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1498, in __call__\r\n    **options\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 608, in valueDecoder\r\n    component, head = decodeFun(head, componentType, **options)\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1498, in __call__\r\n    **options\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 608, in valueDecoder\r\n    component, head = decodeFun(head, componentType, **options)\r\n  File \"/Users/testuser/projects/path/to/project/venv/lib/python3.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1531, in __call__\r\n    '%s not in asn1Spec: %r' % (tagSet, asn1Spec)\r\npyasn1.error.PyAsn1Error: <TagSet object at 0x1090c0240 tags 0:32:16> not in asn1Spec: <RoleOfPspOid schema object at 0x10908c8d0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> subtypeSpec <ConstraintsIntersection object at 0x10908c860 consts <SingleValueConstraint object at 0x10908c898 consts <ObjectIdentifier value object at 0x1077de5c0 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.1]>, <ObjectIdentifier value object at 0x1077de2e8 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.2]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>, <ObjectIdentifier value object at 0x1077f5828 tagSet <TagSet object at 0x1090750b8 tags 0:0:6> payload [0.4.0.19495.1.3]>>>>\r\n```\r\n\r\nI'd be happy to contribute examples and improve documentation once I'm able to fix this problem.\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/163", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/163/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/163/events", "html_url": "https://github.com/etingof/pyasn1/issues/163", "id": 460490890, "node_id": "MDU6SXNzdWU0NjA0OTA4OTA=", "number": 163, "title": "GeneralizedTime does not support UTC encoding to DER with 3 milliseconds digits", "user": {"login": "consp", "id": 6802998, "node_id": "MDQ6VXNlcjY4MDI5OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6802998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/consp", "html_url": "https://github.com/consp", "followers_url": "https://api.github.com/users/consp/followers", "following_url": "https://api.github.com/users/consp/following{/other_user}", "gists_url": "https://api.github.com/users/consp/gists{/gist_id}", "starred_url": "https://api.github.com/users/consp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/consp/subscriptions", "organizations_url": "https://api.github.com/users/consp/orgs", "repos_url": "https://api.github.com/users/consp/repos", "events_url": "https://api.github.com/users/consp/events{/privacy}", "received_events_url": "https://api.github.com/users/consp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T15:23:09Z", "updated_at": "2019-07-07T12:55:09Z", "closed_at": "2019-07-07T12:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "The GeneralizedTime encoding does not support either UTC mode (with a 'Z')  if the microseconds are present and raises an error if the datetime results in more than 2 millisecond digits (e.g. xxxxxx12.345Z). Extending the maxlength field of the GeneralizedTimeEncoder to 20 or changing the compare operator to <= allows for UTC time with milliseconds to be properly supported. \r\n\r\nTo replicate:\r\n```python\r\nfrom pyasn1.type.useful import GeneralizedTime\r\nfrom datetime import datetime\r\nfrom pyasn1.code.der import encode\r\n\r\n\r\nencoder.encode(GeneralizedTime.fromDateTime(datetime(year=2019,month=1,day=1,hour=1,minute=1,second=1,microsecond=1)))\r\nencoder.encode(GeneralizedTime.fromDateTime(datetime(year=2019,month=1,day=1,hour=1,minute=1,second=1,microsecond=123456)))\r\n\r\n```\r\n\r\nFirst result:\r\n```python\r\nb'\\x18\\x1120190101010101.0Z'\r\n```\r\nSecond:\r\n```python\r\nraise error.PyAsn1Error('Length constraint violated: %r' % value)\r\npyasn1.error.PyAsn1Error: Length constraint violated: <GeneralizedTime value object at 0x0 tagSet <TagSet object at 0x0 tags 0:0:24> encoding us-ascii payload [20190101010101.900Z]>\r\n\r\n```\r\n\r\nCan be altered by either changing in https://github.com/etingof/pyasn1/blob/66d329acaaf204eff63ae595fd7d6f56cd530c72/pyasn1/codec/cer/encoder.py#L75\r\n```python\r\n    maxLength = 20\r\n```\r\nor by changing the compare operator to <=\r\nhttps://github.com/etingof/pyasn1/blob/66d329acaaf204eff63ae595fd7d6f56cd530c72/pyasn1/codec/cer/encoder.py#L54\r\n```python\r\nif not self.minLength < len(octets) <= self.maxLength:\r\n```\r\nand \r\nhttps://github.com/etingof/pyasn1/blob/66d329acaaf204eff63ae595fd7d6f56cd530c72/pyasn1/codec/cer/encoder.py#L80\r\n```python\r\n    maxLength = 13\r\n```\r\n\r\nWhile most certificates require either UTCTime (till 2050) or GeneralizedTime without seconds (rfc 5280 and updates), some implementations require 3 digit millisecond comparability (e.g. timestamping protocols) which is now strangely only supports 2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/157", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/157/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/157/events", "html_url": "https://github.com/etingof/pyasn1/issues/157", "id": 445811971, "node_id": "MDU6SXNzdWU0NDU4MTE5NzE=", "number": 157, "title": "No leading zeros when translated in hex string", "user": {"login": "flavienbwk", "id": 14158127, "node_id": "MDQ6VXNlcjE0MTU4MTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/14158127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flavienbwk", "html_url": "https://github.com/flavienbwk", "followers_url": "https://api.github.com/users/flavienbwk/followers", "following_url": "https://api.github.com/users/flavienbwk/following{/other_user}", "gists_url": "https://api.github.com/users/flavienbwk/gists{/gist_id}", "starred_url": "https://api.github.com/users/flavienbwk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flavienbwk/subscriptions", "organizations_url": "https://api.github.com/users/flavienbwk/orgs", "repos_url": "https://api.github.com/users/flavienbwk/repos", "events_url": "https://api.github.com/users/flavienbwk/events{/privacy}", "received_events_url": "https://api.github.com/users/flavienbwk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-19T12:05:00Z", "updated_at": "2019-05-22T10:14:17Z", "closed_at": "2019-05-22T10:14:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to create a personalized RSA private key. The problem is that the library takes only decimals, but I want to add leading zeros to the final hexadecimal string (for the prime1 parameter).\r\n\r\nHere is the part of the code :\r\n```\r\nseq = Sequence()\r\nfor x in [0, self.n, self.e, self.d, self.p, self.q, self.dP, self.dQ, self.qInv]:\r\n    seq.setComponentByPosition(len(seq), Integer(x))\r\n```\r\n\r\nI would like to add leading zeros to the \"p\" parameter of my key.\r\n\r\nHow could I do that ?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/156", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/156/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/156/events", "html_url": "https://github.com/etingof/pyasn1/issues/156", "id": 445115529, "node_id": "MDU6SXNzdWU0NDUxMTU1Mjk=", "number": 156, "title": "How i can make pkcs#7 detached signature?", "user": {"login": "best-tech", "id": 12911926, "node_id": "MDQ6VXNlcjEyOTExOTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12911926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/best-tech", "html_url": "https://github.com/best-tech", "followers_url": "https://api.github.com/users/best-tech/followers", "following_url": "https://api.github.com/users/best-tech/following{/other_user}", "gists_url": "https://api.github.com/users/best-tech/gists{/gist_id}", "starred_url": "https://api.github.com/users/best-tech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/best-tech/subscriptions", "organizations_url": "https://api.github.com/users/best-tech/orgs", "repos_url": "https://api.github.com/users/best-tech/repos", "events_url": "https://api.github.com/users/best-tech/events{/privacy}", "received_events_url": "https://api.github.com/users/best-tech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-16T19:11:16Z", "updated_at": "2019-07-07T12:55:57Z", "closed_at": "2019-07-07T12:55:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/154", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/154/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/154/events", "html_url": "https://github.com/etingof/pyasn1/issues/154", "id": 410625965, "node_id": "MDU6SXNzdWU0MTA2MjU5NjU=", "number": 154, "title": "caused by <class 'pyasn1.error.PyAsn1Error'>: Duplicate name tftp ", "user": {"login": "BigMike4339", "id": 36109901, "node_id": "MDQ6VXNlcjM2MTA5OTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/36109901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigMike4339", "html_url": "https://github.com/BigMike4339", "followers_url": "https://api.github.com/users/BigMike4339/followers", "following_url": "https://api.github.com/users/BigMike4339/following{/other_user}", "gists_url": "https://api.github.com/users/BigMike4339/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigMike4339/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigMike4339/subscriptions", "organizations_url": "https://api.github.com/users/BigMike4339/orgs", "repos_url": "https://api.github.com/users/BigMike4339/repos", "events_url": "https://api.github.com/users/BigMike4339/events{/privacy}", "received_events_url": "https://api.github.com/users/BigMike4339/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-15T06:36:25Z", "updated_at": "2019-07-07T13:02:44Z", "closed_at": "2019-07-07T13:02:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nThe Citrix NetScaler MIB (NS-MIB-smiv2.mib) has the string:\r\n```\r\nEntityProtocolType ::=\r\n\tINTEGER{ http(0), ftp(1), tcp(2), udp(3), sslBridge(4), monitor(5), monitorUdp(6), nntp(7), httpserver(8), httpclient(9), rpcserver(10), rpcclient(11), nat(12), any(13), ssl(14), dns(16), adns(17), snmp(18), ha(19), monitorPing(20), sslOtherTcp(21), aaa(22), secureMonitor(23), sslvpnUdp(24), rip(25), dnsClient(26), rpcServer(27), rpcClient(28), dhcrpa(36), sipudp(39), siptcp(40), siptls(41), dnstcp(48), adnstcp(49), rtsp(50), push(52), sslPush(53), dhcpClient(54), radius(55), rdp(61), mysql(62), mssql(63), diameter(73), sslDiameter(74), tftp(75), tftp(90), pptp(91), gre(92), fix(95), sslFix(96), userTcp(104), userSslTcp(105), serviceUnknown(112) }\r\n```\r\n\r\nIt tftp listed twice tftp(75) and tftp(90).\r\n\r\nCompilation passes without errors:\r\n```\r\n[root@mb app]# mibdump.py --destination-format=pysnmp --debug=reader NS-MIB-smiv2\r\n2019-02-08 11:49:14,744 pysmi: running pysmi version 0.3.2\r\n2019-02-08 11:49:14,744 pysmi: debug category 'reader' enabled\r\nSource MIB repositories: file:///usr/share/snmp/mibs, http://mibs.snmplabs.com/asn1/@mib@\r\nBorrow missing/failed MIBs from: http://mibs.snmplabs.com/pysnmp/notexts/@mib@\r\nExisting/compiled MIB locations: pysnmp.smi.mibs, pysnmp_mibs\r\nCompiled MIBs destination directory: /root/.pysnmp/mibs\r\nMIBs excluded from code generation: INET-ADDRESS-MIB, PYSNMP-USM-MIB, RFC-1212, RFC-1215, RFC1065-SMI, RFC1155-SMI, RFC1158-MIB, RFC1213-MIB, SNMP-FRAMEWORK-MIB, SNMP-TARGET-MIB, SNMPv2-CONF, SNMPv2-SMI, SNMPv2-TC, SNMPv2-TM, TRANSPORT-ADDRESS-MIB\r\nMIBs to compile: NS-MIB-smiv2\r\nDestination format: pysnmp\r\nParser grammar cache directory: not used\r\nAlso compile all relevant MIBs: yes\r\nRebuild MIBs regardless of age: no\r\nDry run mode: no\r\nCreate/update MIBs: yes\r\nByte-compile Python modules: yes (optimization level no)\r\nIgnore compilation errors: no\r\nGenerate OID->MIB index: no\r\nGenerate texts in MIBs: no\r\nKeep original texts layout: no\r\nTry various file names while searching for MIB module: yes\r\n2019-02-08 11:49:14,948 pysmi: recursively looking for MIB NS-MIB-smiv2\r\n2019-02-08 11:49:14,953 pysmi: trying MIB /usr/share/snmp/mibs/NS-MIB-smiv2\r\n2019-02-08 11:49:14,953 pysmi: trying MIB /usr/share/snmp/mibs/NS-MIB-smiv2.txt\r\n2019-02-08 11:49:14,953 pysmi: trying MIB /usr/share/snmp/mibs/NS-MIB-smiv2.mib\r\n2019-02-08 11:49:14,954 pysmi: source MIB /usr/share/snmp/mibs/NS-MIB-smiv2.mib mtime is Fri, 08 Feb 2019 08:43:16 GMT, fetching data...\r\n2019-02-08 11:49:17,101 pysmi: recursively looking for MIB INET-ADDRESS-MIB\r\n2019-02-08 11:49:17,104 pysmi: trying MIB /usr/share/snmp/mibs/INET-ADDRESS-MIB\r\n2019-02-08 11:49:17,104 pysmi: trying MIB /usr/share/snmp/mibs/INET-ADDRESS-MIB.txt\r\n2019-02-08 11:49:17,104 pysmi: source MIB /usr/share/snmp/mibs/INET-ADDRESS-MIB.txt mtime is Tue, 30 Oct 2018 23:52:56 GMT, fetching data...\r\n2019-02-08 11:49:17,115 pysmi: recursively looking for MIB IPV6-TC\r\n2019-02-08 11:49:17,118 pysmi: trying MIB /usr/share/snmp/mibs/IPV6-TC\r\n2019-02-08 11:49:17,118 pysmi: trying MIB /usr/share/snmp/mibs/IPV6-TC.txt\r\n2019-02-08 11:49:17,118 pysmi: source MIB /usr/share/snmp/mibs/IPV6-TC.txt mtime is Tue, 30 Oct 2018 23:52:56 GMT, fetching data...\r\n2019-02-08 11:49:17,123 pysmi: recursively looking for MIB SNMPv2-CONF\r\n2019-02-08 11:49:17,125 pysmi: trying MIB /usr/share/snmp/mibs/SNMPv2-CONF\r\n2019-02-08 11:49:17,125 pysmi: trying MIB /usr/share/snmp/mibs/SNMPv2-CONF.txt\r\n2019-02-08 11:49:17,125 pysmi: source MIB /usr/share/snmp/mibs/SNMPv2-CONF.txt mtime is Tue, 30 Oct 2018 23:52:55 GMT, fetching data...\r\n2019-02-08 11:49:17,128 pysmi: recursively looking for MIB SNMPv2-SMI\r\n2019-02-08 11:49:17,130 pysmi: trying MIB /usr/share/snmp/mibs/SNMPv2-SMI\r\n2019-02-08 11:49:17,131 pysmi: trying MIB /usr/share/snmp/mibs/SNMPv2-SMI.txt\r\n2019-02-08 11:49:17,131 pysmi: source MIB /usr/share/snmp/mibs/SNMPv2-SMI.txt mtime is Tue, 30 Oct 2018 23:52:55 GMT, fetching data...\r\n2019-02-08 11:49:17,140 pysmi: recursively looking for MIB SNMPv2-TC\r\n2019-02-08 11:49:17,143 pysmi: trying MIB /usr/share/snmp/mibs/SNMPv2-TC\r\n2019-02-08 11:49:17,143 pysmi: trying MIB /usr/share/snmp/mibs/SNMPv2-TC.txt\r\n2019-02-08 11:49:17,143 pysmi: source MIB /usr/share/snmp/mibs/SNMPv2-TC.txt mtime is Tue, 30 Oct 2018 23:52:55 GMT, fetching data...\r\nCreated/updated MIBs:\r\nPre-compiled MIBs borrowed:\r\nUp to date MIBs: INET-ADDRESS-MIB, IPV6-TC, NS-ROOT-MIB, SNMPv2-CONF, SNMPv2-SMI, SNMPv2-TC\r\nMissing source MIBs:\r\nIgnored MIBs:\r\nFailed MIBs:\r\n```\r\n\r\nI use:\r\n```\r\n[root@mb app]# cat aaa2.py\r\nfrom pysnmp.smi import builder, view, rfc1902, error\r\nmibBuilder = builder.MibBuilder()\r\nmibView = view.MibViewController(mibBuilder)\r\nmibVar = rfc1902.ObjectIdentity('NS-ROOT-MIB','sysGateway',1).resolveWithMib(mibView)\r\n\r\n[root@mb app]# python aaa2.py\r\nTraceback (most recent call last):\r\n  File \"aaa2.py\", line 9, in <module>\r\n    mibVar = rfc1902.ObjectIdentity('NS-ROOT-MIB','sysGateway',1).resolveWithMib(mibView)\r\n  File \"/usr/lib/python2.7/site-packages/pysnmp/smi/rfc1902.py\", line 481, in resolveWithMib\r\n    self.__modName, self.__symName\r\n  File \"/usr/lib/python2.7/site-packages/pysnmp/smi/builder.py\", line 406, in importSymbols\r\n    self.loadModules(modName, **userCtx)\r\n  File \"/usr/lib/python2.7/site-packages/pysnmp/smi/builder.py\", line 368, in loadModules\r\n    self.loadModule(modName, **userCtx)\r\n  File \"/usr/lib/python2.7/site-packages/pysnmp/smi/builder.py\", line 336, in loadModule\r\n    'MIB module \\\"%s\\\" load error: %s' % (modPath, traceback.format_exception(*sys.exc_info()))\r\npysnmp.smi.error.MibLoadError: MIB module \"/root/.pysnmp/mibs/NS-ROOT-MIB.pyc\" load error: ['Traceback (most recent call last):\\n', '  File \"/usr/lib/python2.7/site-packages/pysnmp/smi/builder.py\", line 331, in loadModule\\n    exec (modData, g)\\n', '  File \"/root/.pysnmp/mibs/NS-ROOT-MIB.py\", line 850, in <module>\\n    class EntityProtocolType(Integer32):\\n', '  File \"/root/.pysnmp/mibs/NS-ROOT-MIB.py\", line 852, in EntityProtocolType\\n    namedValues = NamedValues((\"http\", 0), (\"ftp\", 1), (\"tcp\", 2), (\"udp\", 3), (\"sslBridge\", 4), (\"monitor\", 5), (\"monitorUdp\", 6), (\"nntp\", 7), (\"httpserver\", 8), (\"httpclient\", 9), (\"rpcserver\", 10), (\"rpcclient\", 11), (\"nat\", 12), (\"any\", 13), (\"ssl\", 14), (\"dns\", 16), (\"adns\", 17), (\"snmp\", 18), (\"ha\", 19), (\"monitorPing\", 20), (\"sslOtherTcp\", 21), (\"aaa\", 22), (\"secureMonitor\", 23), (\"sslvpnUdp\", 24), (\"rip\", 25), (\"dnsClient\", 26), (\"rpcServer\", 27), (\"rpcClient\", 28), (\"dhcrpa\", 36), (\"sipudp\", 39), (\"siptcp\", 40), (\"siptls\", 41), (\"dnstcp\", 48), (\"adnstcp\", 49), (\"rtsp\", 50), (\"push\", 52), (\"sslPush\", 53), (\"dhcpClient\", 54), (\"radius\", 55), (\"rdp\", 61), (\"mysql\", 62), (\"mssql\", 63), (\"diameter\", 73), (\"sslDiameter\", 74), (\"tftp\", 75), (\"tftp\", 90), (\"pptp\", 91), (\"gre\", 92), (\"fix\", 95), (\"sslFix\", 96), (\"userTcp\", 104), (\"userSslTcp\", 105), (\"serviceUnknown\", 112))\\n', '  File \"/usr/lib/python2.7/site-packages/pyasn1/type/namedval.py\", line 74, in __init__\\n    raise error.PyAsn1Error(\\'Duplicate name %s\\' % (name,))\\n', 'PyAsn1Error: Duplicate name tftp\\n']caused by <class 'pyasn1.error.PyAsn1Error'>: Duplicate name tftp\r\n```\r\n\r\nIf the MIB database deletes one of the two mentions of tftp (for example, tftp (75)), then everything works fine. But it's not right.\r\n\r\nCan I somehow fix the situation?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/153", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/153/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/153/events", "html_url": "https://github.com/etingof/pyasn1/issues/153", "id": 403050550, "node_id": "MDU6SXNzdWU0MDMwNTA1NTA=", "number": 153, "title": "Wrong constraint verification", "user": {"login": "kaxap", "id": 2851970, "node_id": "MDQ6VXNlcjI4NTE5NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2851970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaxap", "html_url": "https://github.com/kaxap", "followers_url": "https://api.github.com/users/kaxap/followers", "following_url": "https://api.github.com/users/kaxap/following{/other_user}", "gists_url": "https://api.github.com/users/kaxap/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaxap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaxap/subscriptions", "organizations_url": "https://api.github.com/users/kaxap/orgs", "repos_url": "https://api.github.com/users/kaxap/repos", "events_url": "https://api.github.com/users/kaxap/events{/privacy}", "received_events_url": "https://api.github.com/users/kaxap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-25T08:21:25Z", "updated_at": "2019-01-25T09:56:29Z", "closed_at": "2019-01-25T09:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting error:\r\n\r\n```\r\npyasn1.type.error.ValueConstraintError: <ValueSizeConstraint object at 0x7ff642e28e48 consts 128, 128> failed at: ValueConstraintError(b'51D389643EF12BB201912511824') at IMSCHARGE\r\n```\r\n\r\nBut \"51D389643EF12BB201912511824\" is 28 byte long, not 128+\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/147", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/147/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/147/events", "html_url": "https://github.com/etingof/pyasn1/issues/147", "id": 374615895, "node_id": "MDU6SXNzdWUzNzQ2MTU4OTU=", "number": 147, "title": "How to check the version with python code?", "user": {"login": "yjqiang", "id": 8900942, "node_id": "MDQ6VXNlcjg5MDA5NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8900942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yjqiang", "html_url": "https://github.com/yjqiang", "followers_url": "https://api.github.com/users/yjqiang/followers", "following_url": "https://api.github.com/users/yjqiang/following{/other_user}", "gists_url": "https://api.github.com/users/yjqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yjqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yjqiang/subscriptions", "organizations_url": "https://api.github.com/users/yjqiang/orgs", "repos_url": "https://api.github.com/users/yjqiang/repos", "events_url": "https://api.github.com/users/yjqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/yjqiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-27T07:13:36Z", "updated_at": "2018-10-27T08:03:25Z", "closed_at": "2018-10-27T08:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyasn1.\\_\\_version\\_\\_  raise error. So pyasn1 does not follow https://www.python.org/dev/peps/pep-0396/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/142", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/142/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/142/events", "html_url": "https://github.com/etingof/pyasn1/issues/142", "id": 352439402, "node_id": "MDU6SXNzdWUzNTI0Mzk0MDI=", "number": 142, "title": "Travis uses Trusty not Xenial for most builds", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-21T08:38:15Z", "updated_at": "2018-12-30T17:26:25Z", "closed_at": "2018-12-30T17:26:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I don't know if this is really a problem, but I saw it on one of my repos recently so thought I'd mention it here too.\r\n\r\n.travis.yml has this:\r\n```yml\r\nmatrix:\r\n  include:\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '2.6'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '2.7'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '3.2'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '3.3'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '3.4'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '3.5'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: '3.6'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: true\r\n    python: '3.7'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: true\r\n    python: 'nightly'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: 'pypy'\r\n  - os: linux\r\n    dist: xenial\r\n    sudo: false\r\n    python: 'pypy3'\r\n```\r\n\r\nHowever, despite `dist: xenial`, all but `3.7` and `nightly` are defaulting back to Trusty as Xenial is not (yet?) available for those.\r\n\r\nFor example, the \"Build system information\" for `2.7` shows Xenial was requested, but Trusty was used:\r\n\r\n```\r\nBuild language: python\r\nBuild group: stable\r\nBuild dist: xenial\r\nBuild id: 415626166\r\nJob id: 415626168\r\nRuntime kernel version: 4.14.12-041412-generic\r\ntravis-build version: afa768cd5\r\nBuild image provisioning date and time\r\nTue Dec  5 20:11:19 UTC 2017\r\nOperating System Details\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 14.04.5 LTS\r\nRelease:\t14.04\r\nCodename:\ttrusty\r\n```\r\n\r\nhttps://travis-ci.org/etingof/pyasn1/jobs/415626168#L20", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/136", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/136/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/136/events", "html_url": "https://github.com/etingof/pyasn1/issues/136", "id": 345484318, "node_id": "MDU6SXNzdWUzNDU0ODQzMTg=", "number": 136, "title": "Various TagSet errors when decoding from custom Sequence objects", "user": {"login": "rkalz", "id": 18370951, "node_id": "MDQ6VXNlcjE4MzcwOTUx", "avatar_url": "https://avatars0.githubusercontent.com/u/18370951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkalz", "html_url": "https://github.com/rkalz", "followers_url": "https://api.github.com/users/rkalz/followers", "following_url": "https://api.github.com/users/rkalz/following{/other_user}", "gists_url": "https://api.github.com/users/rkalz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkalz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkalz/subscriptions", "organizations_url": "https://api.github.com/users/rkalz/orgs", "repos_url": "https://api.github.com/users/rkalz/repos", "events_url": "https://api.github.com/users/rkalz/events{/privacy}", "received_events_url": "https://api.github.com/users/rkalz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-28T22:42:57Z", "updated_at": "2018-08-03T07:30:34Z", "closed_at": "2018-08-02T21:17:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "So far, I've been using `der.decoder.decode` and building an OrderedDict with the desired keys manually. I tried writing my own Sequence objects and decoding directly into them, but I've been plagued with \"tagset not in asn1Spec\" errors.\r\n\r\nFor example, the bytes\r\n`b'0=\\xa0\\x03\\x02\\x01\\x17\\xa26\\x044\\x07\\x9eN\\xdclLEe\\x02,v\\x12;\\xdd\\xdd\\xdf\\xf2\\xb9x\\x0f\\xa3\\x96\\xfd\\x98<\\xab\\xf1\\x8a\\xf9\\x1bv\\xed\\x9a\\x0e\\x1e\\xc7l\\x87\\x8c_\\x8b\\xf1\\x17\\x04\\xfd\\x17\\x03\\xb0\\xe9-\\x97\\xc6'`\r\ndecode into\r\n```\r\nSequence:\r\n field-0=23\r\n field-1=0x079e4edc6c4c4565022c76123bdddddff2b9780fa396fd983cabf18af91b76ed9a0e1ec76c878c5f8bf11704fd1703b0e92d97c6\r\n```\r\nas intended, correct typing and all, but when I try to decode it into the following sequence:\r\n```\r\nclass EncryptedData(Sequence):\r\n    componentType = NamedTypes(\r\n        NamedType(\"etype\", Integer()),\r\n        OptionalNamedType(\"kvno\", Integer()),\r\n        NamedType(\"cipher\", OctetString())\r\n    )\r\n```\r\nI get the following error:\r\n`pyasn1.error.PyAsn1Error: <TagSet object at 0x1d6a9414d68 tags 0:0:2-128:32:0> not in asn1Spec: <Integer schema object at 0x1d6a87ef908 tagSet <TagSet object at 0x1d6a8758b00 tags 0:0:2>>\r\n`\r\n\r\nCoukd you point out if this is a bug, or am I doing something wrong? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/135", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/135/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/135/events", "html_url": "https://github.com/etingof/pyasn1/issues/135", "id": 343449673, "node_id": "MDU6SXNzdWUzNDM0NDk2NzM=", "number": 135, "title": "Unable to query for value presence", "user": {"login": "cannatag", "id": 1319333, "node_id": "MDQ6VXNlcjEzMTkzMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1319333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cannatag", "html_url": "https://github.com/cannatag", "followers_url": "https://api.github.com/users/cannatag/followers", "following_url": "https://api.github.com/users/cannatag/following{/other_user}", "gists_url": "https://api.github.com/users/cannatag/gists{/gist_id}", "starred_url": "https://api.github.com/users/cannatag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cannatag/subscriptions", "organizations_url": "https://api.github.com/users/cannatag/orgs", "repos_url": "https://api.github.com/users/cannatag/repos", "events_url": "https://api.github.com/users/cannatag/events{/privacy}", "received_events_url": "https://api.github.com/users/cannatag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-22T23:39:43Z", "updated_at": "2018-07-26T07:45:22Z", "closed_at": "2018-07-26T07:45:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, if I query for a TypedName value I'm not able to use the prettyPrint() method anymore. It seems that querying changes the asn1 object state.\r\n\r\nThe following code (extracted by the ldap3 library) doesn't work as intended:\r\n\r\n```from pyasn1.type import univ, namedtype, tag\r\n\r\nclass LDAPOID(univ.OctetString):\r\n    # LDAPOID ::= OCTET STRING -- Constrained to <numericoid>\r\n    pass\r\n\r\nclass RequestName(LDAPOID):\r\n    # requestName      [0] LDAPOID\r\n    pass\r\n\r\nclass RequestValue(univ.OctetString):\r\n    # requestValue     [1] OCTET STRING\r\n    encoding = 'utf-8'\r\n\r\n\r\nclass ExtendedRequest(univ.Sequence):\r\n    # ExtendedRequest ::= [APPLICATION 23] SEQUENCE {\r\n    #     requestName      [0] LDAPOID,\r\n    #     requestValue     [1] OCTET STRING OPTIONAL }\r\n    componentType = namedtype.NamedTypes(namedtype.NamedType('requestName', RequestName()),\r\n                               namedtype.OptionalNamedType('requestValue', RequestValue()))\r\n\r\ne = ExtendedRequest()\r\nprint(e.prettyPrint())\r\n# output is\r\n# ExtendedRequest:\r\n# empty object (as expected)\r\n\r\ne['requestName'] = '1.3.6.1.4.1.4203.1.11.3'\r\nprint(e.prettyPrint())\r\n# output is\r\n# ExtendedRequest:\r\n#  requestName=1.3.6.1.4.1.4203.1.11.3  (as expected)\r\n\r\n# now somewhere in the code I want to check if requestValue is present:\r\nif e['requestValue'].hasValue():\r\n    pass  # do something\r\n\r\n# now I cannot use prettyPrint() anymore\r\nprint(e.prettyPrint())\r\n```\r\nI get an exception:\r\n```\r\n File \"test.py\", line 35, in <module>\r\n\r\n    print(e.prettyPrint())\r\n  File \"C:\\Python\\Python37\\lib\\site-packages\\pyasn1\\type\\univ.py\", line 2467, in prettyPrint\r\n    representation, componentValue.prettyPrint(scope)\r\n  File \"C:\\Python\\Python37\\lib\\site-packages\\pyasn1\\type\\univ.py\", line 926, in prettyPrint\r\n    numbers = self.asNumbers()\r\n  File \"C:\\Python\\Python37\\lib\\site-packages\\pyasn1\\type\\univ.py\", line 896, in asNumbers\r\n    return tuple(self._value)\r\n  File \"C:\\Python\\Python37\\lib\\site-packages\\pyasn1\\type\\base.py\", line 199, in plug\r\n    raise error.PyAsn1Error('Attempted \"%s\" operation on ASN.1 schema object' % name)\r\npyasn1.error.PyAsn1Error: Attempted \"__iter__\" operation on ASN.1 schema object\r\n```\r\n\r\nThis worked in previous pyasn1 packages where I just checked for e['requestName'] without the hasValue() method.\r\n\r\nWhat am I doing wrong?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/127", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/127/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/127/events", "html_url": "https://github.com/etingof/pyasn1/issues/127", "id": 325466891, "node_id": "MDU6SXNzdWUzMjU0NjY4OTE=", "number": 127, "title": "AttributeError: 'property' object has no attribute 'presentTypes'", "user": {"login": "davidsielert", "id": 456592, "node_id": "MDQ6VXNlcjQ1NjU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/456592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidsielert", "html_url": "https://github.com/davidsielert", "followers_url": "https://api.github.com/users/davidsielert/followers", "following_url": "https://api.github.com/users/davidsielert/following{/other_user}", "gists_url": "https://api.github.com/users/davidsielert/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidsielert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidsielert/subscriptions", "organizations_url": "https://api.github.com/users/davidsielert/orgs", "repos_url": "https://api.github.com/users/davidsielert/repos", "events_url": "https://api.github.com/users/davidsielert/events{/privacy}", "received_events_url": "https://api.github.com/users/davidsielert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-22T21:18:03Z", "updated_at": "2019-09-19T06:54:11Z", "closed_at": "2019-09-19T06:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure about this I don't know much of python myself, coming from another script (freeipa) (ipa-server-install)\r\n\r\n\r\n```File \"/usr/lib/python2.7/site-packages/ipalib/x509.py\", line 45, in <module>\r\n    from pyasn1_modules import rfc2315, rfc2459\r\n  File \"/usr/lib/python2.7/site-packages/pyasn1_modules/rfc2315.py\", line 67, in <module>\r\n    class DigestedData(univ.Sequence):\r\n  File \"/usr/lib/python2.7/site-packages/pyasn1_modules/rfc2315.py\", line 72, in DigestedData\r\n    namedtype.NamedType('digest', Digest)\r\n  File \"/root/.local/lib/python2.7/site-packages/pyasn1/type/namedtype.py\", line 159, in __init__\r\n    self.__ambiguousTypes = 'terminal' not in kwargs and self.__computeAmbiguousTypes() or {}\r\n  File \"/root/.local/lib/python2.7/site-packages/pyasn1/type/namedtype.py\", line 278, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes, **dict(terminal=True))\r\n  File \"/root/.local/lib/python2.7/site-packages/pyasn1/type/namedtype.py\", line 158, in __init__\r\n    self.__tagToPosMap = self.__computeTagToPosMap()\r\n  File \"/root/.local/lib/python2.7/site-packages/pyasn1/type/namedtype.py\", line 251, in __computeTagToPosMap\r\n    for _tagSet in tagMap.presentTypes:\r\nAttributeError: 'property' object has no attribute 'presentTypes'```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/126", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/126/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/126/events", "html_url": "https://github.com/etingof/pyasn1/issues/126", "id": 325337429, "node_id": "MDU6SXNzdWUzMjUzMzc0Mjk=", "number": 126, "title": "GeneralizedTime raises ValueError when dealing with fractional seconds", "user": {"login": "tadams42", "id": 664505, "node_id": "MDQ6VXNlcjY2NDUwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/664505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tadams42", "html_url": "https://github.com/tadams42", "followers_url": "https://api.github.com/users/tadams42/followers", "following_url": "https://api.github.com/users/tadams42/following{/other_user}", "gists_url": "https://api.github.com/users/tadams42/gists{/gist_id}", "starred_url": "https://api.github.com/users/tadams42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tadams42/subscriptions", "organizations_url": "https://api.github.com/users/tadams42/orgs", "repos_url": "https://api.github.com/users/tadams42/repos", "events_url": "https://api.github.com/users/tadams42/events{/privacy}", "received_events_url": "https://api.github.com/users/tadams42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-22T15:06:36Z", "updated_at": "2020-05-27T12:32:01Z", "closed_at": "2018-05-23T20:40:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In short, this is what happens:\r\n\r\n```\r\nPython 3.5.5 (default, Apr 25 2018, 10:05:30)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.4.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from pyasn1.type.useful import GeneralizedTime\r\n\r\nIn [2]: GeneralizedTime('20170904113726.369').asDateTime\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-e31a8ea96779> in <module>()\r\n----> 1 GeneralizedTime('20170904113726.369').asDateTime\r\n\r\n...venv/lib/python3.5/site-packages/pyasn1/type/useful.py in asDateTime(self)\r\n    124             raise error.PyAsn1Error('malformed datetime format %s' % self)\r\n    125\r\n--> 126         return dt.replace(microsecond=ms, tzinfo=tzinfo)\r\n    127\r\n    128     @classmethod\r\n\r\nValueError: microsecond must be in 0..999999\r\n```\r\nI believe the problem is a little bit above, line 107:\r\n\r\n```python\r\n                ms = int(ms) * 10000\r\n```\r\nIt should be 1000, not 10000", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/124", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/124/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/124/events", "html_url": "https://github.com/etingof/pyasn1/issues/124", "id": 314965745, "node_id": "MDU6SXNzdWUzMTQ5NjU3NDU=", "number": 124, "title": "ValueConstraintError and issue with choice types", "user": {"login": "Bujko", "id": 38133942, "node_id": "MDQ6VXNlcjM4MTMzOTQy", "avatar_url": "https://avatars0.githubusercontent.com/u/38133942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bujko", "html_url": "https://github.com/Bujko", "followers_url": "https://api.github.com/users/Bujko/followers", "following_url": "https://api.github.com/users/Bujko/following{/other_user}", "gists_url": "https://api.github.com/users/Bujko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bujko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bujko/subscriptions", "organizations_url": "https://api.github.com/users/Bujko/orgs", "repos_url": "https://api.github.com/users/Bujko/repos", "events_url": "https://api.github.com/users/Bujko/events{/privacy}", "received_events_url": "https://api.github.com/users/Bujko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T08:56:21Z", "updated_at": "2018-04-25T12:05:50Z", "closed_at": "2018-04-25T12:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have converted an ASN.1 file by asn1ate to python code.\r\nI have got a problem that i can't solve.\r\n(I am storing the classes in Schema.py)\r\n\r\nlinkage_value ='030303030303030303'\r\n\r\nclass LinkageValue(univ.OctetString):\r\n    pass\r\n\r\nLinkageValue.subtypeSpec = constraint.ValueSizeConstraint(9, 9)\r\n\r\nlv = Schema.LinkageValue()\r\nlv = linkage_value\r\n\r\nprint(lv)\r\n\r\nThis code above is working.\r\n\r\nBut the code below not, and I don't understand why.\r\nI have tryed many different ways but I didn't succeed.\r\n\r\nclass LinkageData(univ.Sequence):\r\n    pass\r\n\r\n\r\nLinkageData.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('iCert', IValue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.NamedType('linkage-value', LinkageValue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('group-linkage-value', GroupLinkageValue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2)))\r\n)\r\n\r\nld = Schema.LinkageData()\r\nprint('ok1')\r\nld.setComponentByName('iCert', icert)\r\nprint('ok2')\r\nld['linkage-value'] = lv\r\n\r\nThe output of this code is(not the whole) :\r\n\r\nok1\r\nok2\r\nTraceback (most recent call last):\r\n  File \"/home/kraudy97/.local/lib/python3.6/site-packages/pyasn1/type/constraint.py\", line 32, in __call__\r\n    self._testValue(value, idx)\r\n  File \"/home/kraudy97/.local/lib/python3.6/site-packages/pyasn1/type/constraint.py\", line 297, in _testValue\r\n    raise error.ValueConstraintError(value)\r\npyasn1.type.error.ValueConstraintError: b'030303030303030303'\r\n\r\n\r\nSeems to be the same problem here:\r\n\r\nclass EccP256CurvePoint(univ.Choice):\r\n    pass\r\n\r\n\r\nEccP256CurvePoint.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('x-only', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(32, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.NamedType('fill', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.NamedType('compressed-y-0', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(32, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.NamedType('compressed-y-1', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(32, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.NamedType('uncompressed', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.NamedType('x', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(32, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.NamedType('y', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(32, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4)))\r\n)\r\n\r\n\r\nclass VerificationKeyIndicator(univ.Choice):\r\n    pass\r\n\r\n\r\nVerificationKeyIndicator.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('verificationKey', PublicVerificationKey().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),\r\n    namedtype.NamedType('reconstructionValue', EccP256CurvePoint().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1)))\r\n)\r\n\r\n\r\neccp256_value = '0808080808080808080808080808080808080808080808080808080808080808'\r\n\r\nvk_try = Schema.VerificationKeyIndicator()\r\nvk_try['reconstructionValue'].setComponentByName('compressed-y-1', eccp256_value)\r\n\r\neccp256_try = Schema.EccP256CurvePoint()\r\neccp256_try.setComponentByName('compressed-y-1', eccp256_value)\r\n\r\neccp256 = Schema.EccP256CurvePoint()\r\neccp256['compressed-y-1'] = eccp256_value # '0808080808080808080808080808080808080808080808080808080808080808'\r\n\r\nThe output of the code (full, but cut of the full path, it's not relevant):\r\n\r\nTraceback (most recent call last):\r\n  File \"...pyasn1/type/constraint.py\", line 32, in __call__\r\n    self._testValue(value, idx)\r\n  File \"...pyasn1/type/constraint.py\", line 297, in _testValue\r\n    raise error.ValueConstraintError(value)\r\npyasn1.type.error.ValueConstraintError: b'0808080808080808080808080808080808080808080808080808080808080808'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"...pyasn1/type/constraint.py\", line 32, in __call__\r\n    self._testValue(value, idx)\r\n  File \"...pyasn1/type/constraint.py\", line 497, in _testValue\r\n    constraint(value, idx)\r\n  File \"...pyasn1/type/constraint.py\", line 36, in __call__\r\n    '%s failed at: %r' % (self, sys.exc_info()[1])\r\npyasn1.type.error.ValueConstraintError: <ValueSizeConstraint object at 0x7fdcde6d9b38 consts 32, 32> failed at: ValueConstraintError(b'0808080808080808080808080808080808080808080808080808080808080808',)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"...pyasn1/type/base.py\", line 242, in __init__\r\n    self.subtypeSpec(value)\r\n  File \"...pyasn1/type/constraint.py\", line 36, in __call__\r\n    '%s failed at: %r' % (self, sys.exc_info()[1])\r\npyasn1.type.error.ValueConstraintError: <ConstraintsIntersection object at 0x7fdcde6d9b70 consts <ValueSizeConstraint object at 0x7fdcde6d9b38 consts 32, 32>> failed at: ValueConstraintError(\"<ValueSizeConstraint object at 0x7fdcde6d9b38 consts 32, 32> failed at: ValueConstraintError(b'0808080808080808080808080808080808080808080808080808080808080808',)\",)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"testcert.py\", line 79, in <module>\r\n    vk_try['reconstructionValue'].setComponentByName('compressed-y-1', eccp256_value)\r\n  File \"...pyasn1/type/univ.py\", line 2207, in setComponentByName\r\n    idx, value, verifyConstraints, matchTags, matchConstraints\r\n  File \"...pyasn1/type/univ.py\", line 2865, in setComponentByPosition\r\n    Set.setComponentByPosition(self, idx, value, verifyConstraints, matchTags, matchConstraints)\r\n  File \"...pyasn1/type/univ.py\", line 2359, in setComponentByPosition\r\n    value = subComponentType.clone(value=value)\r\n  File \"...pyasn1/type/base.py\", line 349, in clone\r\n    return self.__class__(value, **initilaizers)\r\n  File \"...pyasn1/type/univ.py\", line 819, in __init__\r\n    base.AbstractSimpleAsn1Item.__init__(self, value, **kwargs)\r\n  File \"...pyasn1/type/base.py\", line 246, in __init__\r\n    raise exType('%s at %s' % (exValue, self.__class__.__name__))\r\npyasn1.type.error.ValueConstraintError: <ConstraintsIntersection object at 0x7fdcde6d9b70 consts <ValueSizeConstraint object at 0x7fdcde6d9b38 consts 32, 32>> failed at: ValueConstraintError(\"<ValueSizeConstraint object at 0x7fdcde6d9b38 consts 32, 32> failed at: ValueConstraintError(b'0808080808080808080808080808080808080808080808080808080808080808',)\",) at OctetString\r\n\r\nI have tryed to give you all of my information.\r\n\r\nWhat am I doing wrong? How can I solve this? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/123", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/123/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/123/events", "html_url": "https://github.com/etingof/pyasn1/issues/123", "id": 312127118, "node_id": "MDU6SXNzdWUzMTIxMjcxMTg=", "number": 123, "title": "ImportError: cannot import name opentype", "user": {"login": "sircybershark", "id": 26910539, "node_id": "MDQ6VXNlcjI2OTEwNTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/26910539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sircybershark", "html_url": "https://github.com/sircybershark", "followers_url": "https://api.github.com/users/sircybershark/followers", "following_url": "https://api.github.com/users/sircybershark/following{/other_user}", "gists_url": "https://api.github.com/users/sircybershark/gists{/gist_id}", "starred_url": "https://api.github.com/users/sircybershark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sircybershark/subscriptions", "organizations_url": "https://api.github.com/users/sircybershark/orgs", "repos_url": "https://api.github.com/users/sircybershark/repos", "events_url": "https://api.github.com/users/sircybershark/events{/privacy}", "received_events_url": "https://api.github.com/users/sircybershark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-06T21:36:55Z", "updated_at": "2018-04-12T23:00:39Z", "closed_at": "2018-04-12T23:00:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yo! I'm trying to leverage the Google Vision API to make a trash collecting robot... Any help with the error? This is the last step before my PiCam can recognize objects!!!\r\n\r\npi@dex:~ $ sudo su\r\nroot@dex:/home/pi# export\r\nGOOGLE_APPLICATION_CREDENTIALS=vision1-ef4216c8c74c.json\r\nroot@dex:/home/pi# python camera-vision-logo.pyTraceback (most recent\r\ncall last):\r\n  File \"camera-vision-logo.py\", line 52, in <module>\r\n    main()\r\n  File \"camera-vision-logo.py\", line 26, in main\r\n    credentials = GoogleCredentials.get_application_default()\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/client.py\",\r\nline 1271, in get_application_default\r\n    return GoogleCredentials._get_implicit_credentials()\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/client.py\",\r\nline 1256, in _get_implicit_credentials\r\n    credentials = checker()\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/client.py\",\r\nline 1228, in _implicit_credentials_from_files\r\n    credentials_filename)\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/client.py\",\r\nline 1414, in _get_application_default_credential_from_file\r\n    from oauth2client import service_account\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/service_account.py\",\r\nline 26, in <module>\r\n    from oauth2client import crypt\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/crypt.py\",\r\nline 23, in <module>\r\n    from oauth2client import _pure_python_crypt\r\n  File \"/usr/local/lib/python2.7/dist-packages/oauth2client/_pure_python_crypt.py\",\r\nline 24, in <module>\r\n    from pyasn1_modules.rfc2459 import Certificate\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyasn1_modules/rfc2459.py\",\r\nline 20, in <module>\r\n    from pyasn1.type import opentype\r\nImportError: cannot import name opentype\r\nroot@dex:/home/pi#", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/119", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/119/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/119/events", "html_url": "https://github.com/etingof/pyasn1/issues/119", "id": 305528801, "node_id": "MDU6SXNzdWUzMDU1Mjg4MDE=", "number": 119, "title": "I have asn data structure file and .dat file. How can i decode asn?", "user": {"login": "arsalan993", "id": 21988376, "node_id": "MDQ6VXNlcjIxOTg4Mzc2", "avatar_url": "https://avatars1.githubusercontent.com/u/21988376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arsalan993", "html_url": "https://github.com/arsalan993", "followers_url": "https://api.github.com/users/arsalan993/followers", "following_url": "https://api.github.com/users/arsalan993/following{/other_user}", "gists_url": "https://api.github.com/users/arsalan993/gists{/gist_id}", "starred_url": "https://api.github.com/users/arsalan993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arsalan993/subscriptions", "organizations_url": "https://api.github.com/users/arsalan993/orgs", "repos_url": "https://api.github.com/users/arsalan993/repos", "events_url": "https://api.github.com/users/arsalan993/events{/privacy}", "received_events_url": "https://api.github.com/users/arsalan993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-15T12:18:05Z", "updated_at": "2018-04-12T23:01:48Z", "closed_at": "2018-04-12T23:01:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "You have mentioned this\r\nWith pyasn1 you can build Python objects from ASN.1 data structures. For example, the following ASN.1 data structure:\r\n\r\nRecord ::= SEQUENCE {\r\n  id        INTEGER,\r\n  room  [0] INTEGER OPTIONAL,\r\n  house [1] INTEGER DEFAULT 0\r\n}\r\nCould be expressed in pyasn1 like this:\r\n\r\n\"my question is , how can i generate code from a data structure\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/118", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/118/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/118/events", "html_url": "https://github.com/etingof/pyasn1/issues/118", "id": 286697009, "node_id": "MDU6SXNzdWUyODY2OTcwMDk=", "number": 118, "title": "OpenType usage is not very clear", "user": {"login": "viraptor", "id": 188063, "node_id": "MDQ6VXNlcjE4ODA2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/188063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viraptor", "html_url": "https://github.com/viraptor", "followers_url": "https://api.github.com/users/viraptor/followers", "following_url": "https://api.github.com/users/viraptor/following{/other_user}", "gists_url": "https://api.github.com/users/viraptor/gists{/gist_id}", "starred_url": "https://api.github.com/users/viraptor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viraptor/subscriptions", "organizations_url": "https://api.github.com/users/viraptor/orgs", "repos_url": "https://api.github.com/users/viraptor/repos", "events_url": "https://api.github.com/users/viraptor/events{/privacy}", "received_events_url": "https://api.github.com/users/viraptor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513984, "node_id": "MDU6TGFiZWwzMzE1MTM5ODQ=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/enhancement", "name": "enhancement", "color": "edffab", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-08T10:07:07Z", "updated_at": "2019-07-09T18:46:10Z", "closed_at": "2019-07-09T18:46:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to use the type from `rfc2459`, which includes an opentype. I've got a `AttributeTypeAndValue` from which I'd like to decode the value. The only way I know to do it currently is somewhat awkward.\r\n```\r\nvalue_bytes = part['value'].asOctets()\r\nspec = part.getComponentType()['value'].openType[part['type']]\r\nvalue = decoder.decode(value_bytes, asn1Spec=spec)[0]\r\n```\r\nI couldn't find any way documented. Is there one?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/113", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/113/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/113/events", "html_url": "https://github.com/etingof/pyasn1/issues/113", "id": 276946057, "node_id": "MDU6SXNzdWUyNzY5NDYwNTc=", "number": 113, "title": "0.4.2 - optional univ.Null value is lost.", "user": {"login": "mingulov", "id": 1794540, "node_id": "MDQ6VXNlcjE3OTQ1NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1794540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingulov", "html_url": "https://github.com/mingulov", "followers_url": "https://api.github.com/users/mingulov/followers", "following_url": "https://api.github.com/users/mingulov/following{/other_user}", "gists_url": "https://api.github.com/users/mingulov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingulov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingulov/subscriptions", "organizations_url": "https://api.github.com/users/mingulov/orgs", "repos_url": "https://api.github.com/users/mingulov/repos", "events_url": "https://api.github.com/users/mingulov/events{/privacy}", "received_events_url": "https://api.github.com/users/mingulov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-27T09:11:20Z", "updated_at": "2017-12-08T13:17:15Z", "closed_at": "2017-12-08T13:17:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "It had been fixed on 0.3.7 with manually applied PR #92 , but since 0.4.2 the same problem returned back.\r\n\r\nRFC 4210/4210 PKIMessage - PKIBody - CertReqMessages - CertReqMsg has an optional popo field which looses 'raVerified' univ.Null().subtype(...) value on encoding.\r\n\r\nExample (just an empty PKIMessage for 'cr' with popo = raVerified):\r\n`from pyasn1.type.char import IA5String`\r\n`from pyasn1.type.univ import Integer, Null`\r\n`from pyasn1.type.tag import TagSet, Tag`\r\n`from pyasn1_modules.rfc4210 import PKIMessage, PKIHeader, PKIBody`\r\n`from pyasn1_modules.rfc4211 import CertReqMsg, CertRequest, CertTemplate, ProofOfPossession`\r\n`from pyasn1_modules.rfc2459 import GeneralName`\r\n`from pyasn1.codec.der import encoder, decoder`\r\n\r\n`header = PKIHeader()\\`\r\n`    .setComponentByPosition(0, 'cmp2000')\\`\r\n`    .setComponentByPosition(1, GeneralName().setComponentByPosition(1, IA5String('no@no', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))))\\`\r\n`    .setComponentByPosition(2, GeneralName().setComponentByPosition(1, IA5String('no@no', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))))`\r\n`body = PKIBody()`\r\n`crms = body.getComponentByName('cr')`\r\n`crms.setComponentByPosition(0, CertReqMsg().setComponentByPosition(0, CertRequest().setComponentByPosition(0, Integer(0)).setComponentByPosition(1, CertTemplate())).setComponentByPosition(1, ProofOfPossession().setComponentByPosition(0, Null(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=0))))))`\r\n`msg = PKIMessage().setComponentByPosition(0, header).setComponentByPosition(1, body)`\r\n`print(msg.prettyPrint())`\r\n\r\n\r\n\r\n`data = encoder.encode(msg)`\r\n`structure, _ = decoder.decode(data, asn1Spec=PKIMessage())`\r\n`print('Output')`\r\n`print(structure.prettyPrint())`\r\n\r\nOutput for 0.3.7 with PR #92:\r\n...\r\n     certTemplate=CertTemplate:\r\n\r\n\r\n    pop=ProofOfPossession:\r\n     raVerified=\r\n\r\n\r\nOutput for 0.4.2:\r\n...\r\n     certTemplate=CertTemplate:\r\n\r\nAnd that's all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/110", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/110/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/110/events", "html_url": "https://github.com/etingof/pyasn1/issues/110", "id": 276458796, "node_id": "MDU6SXNzdWUyNzY0NTg3OTY=", "number": 110, "title": "0.4.2: int() argument must be a string or a number, not 'NoneType'", "user": {"login": "asolino", "id": 11577828, "node_id": "MDQ6VXNlcjExNTc3ODI4", "avatar_url": "https://avatars2.githubusercontent.com/u/11577828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asolino", "html_url": "https://github.com/asolino", "followers_url": "https://api.github.com/users/asolino/followers", "following_url": "https://api.github.com/users/asolino/following{/other_user}", "gists_url": "https://api.github.com/users/asolino/gists{/gist_id}", "starred_url": "https://api.github.com/users/asolino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asolino/subscriptions", "organizations_url": "https://api.github.com/users/asolino/orgs", "repos_url": "https://api.github.com/users/asolino/repos", "events_url": "https://api.github.com/users/asolino/events{/privacy}", "received_events_url": "https://api.github.com/users/asolino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513988, "node_id": "MDU6TGFiZWwzMzE1MTM5ODg=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-23T19:19:55Z", "updated_at": "2017-11-24T17:14:06Z", "closed_at": "2017-11-23T22:51:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey @etingof:\r\n\r\nWhile testing 0.4.1/0.4.2 against [impacket](https://github.com/CoreSecurity/impacket) I noticed an error is thrown when using the [GetADUsers.py](https://github.com/CoreSecurity/impacket/blob/master/examples/GetADUsers.py) script. It was correctly working with `pyasn1-0.3.7`. This is the error thrown, any idea?:\r\n\r\n```\r\nImpacket v0.9.16-dev - Copyright 2002-2017 Core Security Technologies\r\n\r\nPassword:\r\n[*] Querying freefly.net for information about domain. Be patient...\r\nTraceback (most recent call last):\r\n  File \"./GetADUsers.py\", line 265, in <module>\r\n    executer.run()\r\n  File \"./GetADUsers.py\", line 150, in run\r\n    sizeLimit=0, searchControls = [sc])\r\n  File \"/Users/beto/src/impacket/impacket/ldap/ldap.py\", line 369, in search\r\n    response = self.sendReceive(searchRequest, searchControls)\r\n  File \"/Users/beto/src/impacket/impacket/ldap/ldap.py\", line 458, in sendReceive\r\n    self.send(request, controls)\r\n  File \"/Users/beto/src/impacket/impacket/ldap/ldap.py\", line 418, in send\r\n    data = encoder.encode(message)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 663, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 450, in encodeValue\r\n    chunk = encodeFun(component, asn1Spec, **options)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 663, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 502, in encodeValue\r\n    substrate += encodeFun(value[idx], asn1Spec, **options)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 663, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/codec/ber/encoder.py\", line 437, in encodeValue\r\n    for idx, component in enumerate(value.values()):\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/univ.py\", line 2096, in values\r\n    yield self[idx]\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/univ.py\", line 2060, in __getitem__\r\n    return self.getComponentByPosition(idx)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/univ.py\", line 2290, in getComponentByPosition\r\n    self.setComponentByPosition(idx)\r\n  File \"/Users/beto/src/impacket/impacket/ldap/ldapasn1.py\", line 553, in setComponentByPosition\r\n    matchConstraints=matchConstraints)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/univ.py\", line 2359, in setComponentByPosition\r\n    value = subComponentType.clone(value=value)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/base.py\", line 349, in clone\r\n    return self.__class__(value, **initilaizers)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/univ.py\", line 103, in __init__\r\n    base.AbstractSimpleAsn1Item.__init__(self, value, **kwargs)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/base.py\", line 240, in __init__\r\n    value = self.prettyIn(value)\r\n  File \"build/bdist.macosx-10.13-intel/egg/pyasn1/type/univ.py\", line 254, in prettyIn\r\n    return int(value)\r\nTypeError: int() argument must be a string or a number, not 'NoneType'\r\nNone\r\nint() argument must be a string or a number, not 'NoneType'\r\n``` \r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/109", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/109/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/109/events", "html_url": "https://github.com/etingof/pyasn1/issues/109", "id": 276455954, "node_id": "MDU6SXNzdWUyNzY0NTU5NTQ=", "number": 109, "title": "ImportError: cannot import name opentype", "user": {"login": "bkvirendra", "id": 1097043, "node_id": "MDQ6VXNlcjEwOTcwNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1097043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkvirendra", "html_url": "https://github.com/bkvirendra", "followers_url": "https://api.github.com/users/bkvirendra/followers", "following_url": "https://api.github.com/users/bkvirendra/following{/other_user}", "gists_url": "https://api.github.com/users/bkvirendra/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkvirendra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkvirendra/subscriptions", "organizations_url": "https://api.github.com/users/bkvirendra/orgs", "repos_url": "https://api.github.com/users/bkvirendra/repos", "events_url": "https://api.github.com/users/bkvirendra/events{/privacy}", "received_events_url": "https://api.github.com/users/bkvirendra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513987, "node_id": "MDU6TGFiZWwzMzE1MTM5ODc=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-23T18:56:33Z", "updated_at": "2017-11-24T17:14:38Z", "closed_at": "2017-11-23T19:12:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Breaks with pyasn1==0.1.9 when the pyasn1-modules > 0.0.8\r\n```\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/django/conf/__init__.py\", line 55, in __getattr__\r\n    self._setup(name)\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/django/conf/__init__.py\", line 43, in _setup\r\n    self._wrapped = Settings(settings_module)\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/django/conf/__init__.py\", line 99, in __init__\r\n    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"/opt/python/2.7.10/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/travis/build/bkvirendra/voltbe2/voltbe2/settings/__init__.py\", line 9, in <module>\r\n    from .travis_settings import *\r\n  File \"/home/travis/build/bkvirendra/voltbe2/voltbe2/settings/travis_settings.py\", line 1, in <module>\r\n    from base import *\r\n  File \"/home/travis/build/bkvirendra/voltbe2/voltbe2/settings/base.py\", line 15, in <module>\r\n    import firebase_admin\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/firebase_admin/__init__.py\", line 22, in <module>\r\n    from firebase_admin import credentials\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/firebase_admin/credentials.py\", line 23, in <module>\r\n    from google.oauth2 import service_account\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/google/oauth2/service_account.py\", line 77, in <module>\r\n    from google.auth import _service_account_info\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/google/auth/_service_account_info.py\", line 22, in <module>\r\n    from google.auth import crypt\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/google/auth/crypt/__init__.py\", line 39, in <module>\r\n    from google.auth.crypt import rsa\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/google/auth/crypt/rsa.py\", line 17, in <module>\r\n    from google.auth.crypt import _python_rsa\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/google/auth/crypt/_python_rsa.py\", line 29, in <module>\r\n    from pyasn1_modules.rfc2459 import Certificate\r\n  File \"/home/travis/virtualenv/python2.7.10/lib/python2.7/site-packages/pyasn1_modules/rfc2459.py\", line 20, in <module>\r\n    from pyasn1.type import opentype\r\nImportError: cannot import name opentype\r\n```\r\n\r\nFixed when I set the `pyasn1-modules==0.0.8` in requirements", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/108", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/108/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/108/events", "html_url": "https://github.com/etingof/pyasn1/issues/108", "id": 276400478, "node_id": "MDU6SXNzdWUyNzY0MDA0Nzg=", "number": 108, "title": "ImportError: cannot import name 'opentype'", "user": {"login": "DanielMartinus", "id": 1636897, "node_id": "MDQ6VXNlcjE2MzY4OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1636897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielMartinus", "html_url": "https://github.com/DanielMartinus", "followers_url": "https://api.github.com/users/DanielMartinus/followers", "following_url": "https://api.github.com/users/DanielMartinus/following{/other_user}", "gists_url": "https://api.github.com/users/DanielMartinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielMartinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielMartinus/subscriptions", "organizations_url": "https://api.github.com/users/DanielMartinus/orgs", "repos_url": "https://api.github.com/users/DanielMartinus/repos", "events_url": "https://api.github.com/users/DanielMartinus/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielMartinus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513987, "node_id": "MDU6TGFiZWwzMzE1MTM5ODc=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-11-23T14:48:35Z", "updated_at": "2020-06-09T09:16:11Z", "closed_at": "2017-11-23T18:09:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the last update of 4 hours ago my CI broke because a module is using your `pyasn1` module. \r\nI received the following in my stack trace:\r\n\r\n```\r\n  File \"/usr/local/lib/python3.5/dist-packages/oauth2client/_pure_python_crypt.py\", line 24, in <module>\r\n    from pyasn1_modules.rfc2459 import Certificate\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyasn1_modules/rfc2459.py\", line 20, in <module>\r\n    from pyasn1.type import opentype\r\nImportError: cannot import name 'opentype'\r\n```\r\n\r\nIs this anything related to the last changes made in this module and a way this is fixable on my side or with a new release of this module?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/106", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/106/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/106/events", "html_url": "https://github.com/etingof/pyasn1/issues/106", "id": 276341102, "node_id": "MDU6SXNzdWUyNzYzNDExMDI=", "number": 106, "title": "0.4.1: AttributeError: 'tuple' object has no attribute 'tagClass'", "user": {"login": "reox", "id": 431045, "node_id": "MDQ6VXNlcjQzMTA0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/431045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reox", "html_url": "https://github.com/reox", "followers_url": "https://api.github.com/users/reox/followers", "following_url": "https://api.github.com/users/reox/following{/other_user}", "gists_url": "https://api.github.com/users/reox/gists{/gist_id}", "starred_url": "https://api.github.com/users/reox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reox/subscriptions", "organizations_url": "https://api.github.com/users/reox/orgs", "repos_url": "https://api.github.com/users/reox/repos", "events_url": "https://api.github.com/users/reox/events{/privacy}", "received_events_url": "https://api.github.com/users/reox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-23T11:24:36Z", "updated_at": "2017-11-24T17:15:35Z", "closed_at": "2017-11-24T17:13:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Again some issues with my certificate parsing. You can use the same code from https://github.com/etingof/pyasn1/issues/67\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"certtest.py\", line 10, in <module>\r\n    cert = encode(message[1][3])\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 636, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 423, in encodeValue\r\n    chunk = encodeFun(component, asn1Spec, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 636, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 423, in encodeValue\r\n    chunk = encodeFun(component, asn1Spec, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 636, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/cer/encoder.py\", line 215, in encodeValue\r\n    substrate += encodeFun(value[idx], asn1Spec, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 636, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/cer/encoder.py\", line 179, in encodeValue\r\n    for x in value]\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/cer/encoder.py\", line 179, in <listcomp>\r\n    for x in value]\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 636, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 423, in encodeValue\r\n    chunk = encodeFun(component, asn1Spec, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 636, in __call__\r\n    substrate = concreteEncoder.encode(value, asn1Spec, self, **options)\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 85, in encode\r\n    value, asn1Spec, encodeFun, **options\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/codec/ber/encoder.py\", line 182, in encodeValue\r\n    asn1Spec = value.clone(tagSet=tag.TagSet(tagSet.baseTag, tagSet.baseTag))\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/type/tag.py\", line 189, in __init__\r\n    [(superTag.tagClass, superTag.tagId) for superTag in superTags]\r\n  File \"/home/vagrant/.local/lib/python3.5/site-packages/pyasn1/type/tag.py\", line 189, in <listcomp>\r\n    [(superTag.tagClass, superTag.tagId) for superTag in superTags]\r\nAttributeError: 'tuple' object has no attribute 'tagClass'\r\n```\r\n\r\nThis error happens since 10 minutes ago as 0.4.1 was published to pypi. In 0.3.7 everything was working,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/98", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/98/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/98/events", "html_url": "https://github.com/etingof/pyasn1/issues/98", "id": 268331961, "node_id": "MDU6SXNzdWUyNjgzMzE5NjE=", "number": 98, "title": "save objects", "user": {"login": "MMYusuf", "id": 32323294, "node_id": "MDQ6VXNlcjMyMzIzMjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/32323294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MMYusuf", "html_url": "https://github.com/MMYusuf", "followers_url": "https://api.github.com/users/MMYusuf/followers", "following_url": "https://api.github.com/users/MMYusuf/following{/other_user}", "gists_url": "https://api.github.com/users/MMYusuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/MMYusuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MMYusuf/subscriptions", "organizations_url": "https://api.github.com/users/MMYusuf/orgs", "repos_url": "https://api.github.com/users/MMYusuf/repos", "events_url": "https://api.github.com/users/MMYusuf/events{/privacy}", "received_events_url": "https://api.github.com/users/MMYusuf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-25T09:43:46Z", "updated_at": "2017-10-29T15:04:29Z", "closed_at": "2017-10-29T15:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIs there a way to save asn1 schema objects? i tried pickle put it is not working for some reason. it does not allow` __reduce__` operation !\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/95", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/95/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/95/events", "html_url": "https://github.com/etingof/pyasn1/issues/95", "id": 266835905, "node_id": "MDU6SXNzdWUyNjY4MzU5MDU=", "number": 95, "title": "BER encoding output not full", "user": {"login": "MMYusuf", "id": 32323294, "node_id": "MDQ6VXNlcjMyMzIzMjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/32323294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MMYusuf", "html_url": "https://github.com/MMYusuf", "followers_url": "https://api.github.com/users/MMYusuf/followers", "following_url": "https://api.github.com/users/MMYusuf/following{/other_user}", "gists_url": "https://api.github.com/users/MMYusuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/MMYusuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MMYusuf/subscriptions", "organizations_url": "https://api.github.com/users/MMYusuf/orgs", "repos_url": "https://api.github.com/users/MMYusuf/repos", "events_url": "https://api.github.com/users/MMYusuf/events{/privacy}", "received_events_url": "https://api.github.com/users/MMYusuf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-19T13:07:38Z", "updated_at": "2017-10-20T18:01:53Z", "closed_at": "2017-10-20T18:01:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ,\r\nI got this sequence that i am trying to ber encode , however the last element is not output from the encoder. I wonder what may be the reason for ber encoder to ignore this element !?\r\n\r\nthis is the prettyPrint of the object right before ber encoding:\r\n\r\n>CBCINFOMSGREQRESULT:\r\n>   cbccberequesthandle=4\r\n>   cbccbestatuscode=0\r\n>   messageclass=0\r\n>   messagetext=Success\r\n>   area=AREADATALIST:\r\n>    coordinatesystem=<no value>\r\n>    nrofcoordinatepair=<no value>\r\n>    coordinatepair=SequenceOf:\r\n> \r\n>   repetitioninterval=1\r\n>   messageid=2\r\n>   messageinfolist=MESSAGEINFOLIST:\r\n>     nrofintervals=2\r\n>     intervalinfo=SequenceOf:\r\n>\r\n>     INTERVALINFO:\r\n>      updatenr=0\r\n>      messagestatus=0\r\n>      starttime=<no value>\r\n>      endtime=<no value>\r\n>      pagelist=PAGELISTDATA:\r\n>       nrofpages=1\r\n>       page=SequenceOf:\r\n>        PAGEDATA:\r\n>         pagecontents=0x0a\r\n>         pagelength=1\r\n> \r\n>     INTERVALINFO:\r\n>      updatenr=1\r\n>      messagestatus=0\r\n>      starttime=<no value>\r\n>      endtime=<no value>\r\n>      pagelist=PAGELISTDATA:\r\n>       nrofpages=1\r\n>       page=SequenceOf:\r\n>        PAGEDATA:\r\n>         pagecontents=0x68656c6c6f20776f726c640a\r\n>         pagelength=12\r\n\r\n\r\nand this is the ber encoder output, you will notice that area element is removed since its value is none. the messageinfolist, however, has values but you can not find it in the output:\r\n\r\n> b'`\\x1a\\xa4\\x18\\x81\\x01\\x04\\x82\\x01\\x00\\x83\\x01\\x00\\x84\\x07Success\\x87\\x01\\x01\\x88\\x01\\x02'\r\n\r\nprettyPrint after ber decoding:\r\n\r\n> CBCINFOMSGREQRESULT:\r\n>  cbccberequesthandle=4\r\n>  cbccbestatuscode=0\r\n>  messageclass=0\r\n>  messagetext=Success\r\n>  repetitioninterval=1\r\n>  messageid=2\r\n\r\n\r\nand this is the pyasn1 sequence class :\r\n\r\n\r\n```\r\nclass CBCINFOMSGREQRESULT(univ.Sequence):\r\n    pass\r\n\r\n\r\nCBCINFOMSGREQRESULT.tagSet = univ.Sequence.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 0))\r\nCBCINFOMSGREQRESULT.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('cbccberequesthandle', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.NamedType('cbccbestatuscode', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.NamedType('messageclass', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('messagetext', char.VisibleString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n    namedtype.OptionalNamedType('area', AREADATALIST().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n    namedtype.OptionalNamedType('areaidlist', AREAIDLIST().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n    namedtype.OptionalNamedType('repetitioninterval', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n    namedtype.OptionalNamedType('messageid', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),\r\n    namedtype.OptionalNamedType('datacodingscheme', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),\r\n    namedtype.OptionalNamedType('warningtype', univ.BitString().subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10))),\r\n    namedtype.OptionalNamedType('messageinfolist', MESSAGEINFOLIST().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11)))\r\n```\r\n\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/89", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/89/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/89/events", "html_url": "https://github.com/etingof/pyasn1/issues/89", "id": 265484271, "node_id": "MDU6SXNzdWUyNjU0ODQyNzE=", "number": 89, "title": "pyasn1 0.3.7 encoding of optional univ.Null broken", "user": {"login": "Eierkopp", "id": 6553148, "node_id": "MDQ6VXNlcjY1NTMxNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6553148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eierkopp", "html_url": "https://github.com/Eierkopp", "followers_url": "https://api.github.com/users/Eierkopp/followers", "following_url": "https://api.github.com/users/Eierkopp/following{/other_user}", "gists_url": "https://api.github.com/users/Eierkopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eierkopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eierkopp/subscriptions", "organizations_url": "https://api.github.com/users/Eierkopp/orgs", "repos_url": "https://api.github.com/users/Eierkopp/repos", "events_url": "https://api.github.com/users/Eierkopp/events{/privacy}", "received_events_url": "https://api.github.com/users/Eierkopp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-14T11:17:40Z", "updated_at": "2017-10-29T15:05:24Z", "closed_at": "2017-10-29T15:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI just ran across the following problems best illustrated by this code snippet:\r\n\r\n    from pyasn1.type import univ, namedtype, tag\r\n    from pyasn1.codec.ber import encoder\r\n\r\n    class Flag(univ.Null):\r\n        pass\r\n\r\n    class TestSeq(univ.Sequence):\r\n        pass\r\n\r\n    TestSeq.tagSet = univ.Set.tagSet.tagImplicitly(tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))\r\n    TestSeq.componentType = namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('flag', Flag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)))\r\n    )\r\n\r\n    t = TestSeq()\r\n    #t.setComponentByName(\"flag\", '')\r\n\r\n    print t.getComponentByPosition(0).isValue\r\n\r\n    with open(\"/tmp/test.bin\", \"wb\") as f:\r\n        f.write(encoder.encode(t))\r\n\r\n\r\nSince `univ.Null` has a defaultValue, isValue detection breaks for uninitialized components e.g. in SequenceEncoder. Therefore a `univ.Null` is included even if not initialized. Here is the `dumpasn1` output for the generated `/tmp/test.bin`:\r\n\r\n    % dumpasn1 /tmp/test.bin\r\n      0   2: [1] {\r\n      2   0:   [0]\r\n           :     Error: Object has zero length.\r\n           :   }\r\n    0 warnings, 1 error\r\n\r\nObviously the flag is included though not initialized. Removing the line `defaultValue = ''.encode()  # This is tightly constrained` from `univ.py` fixes this problem.\r\n\r\nThe second problem can be seen when uncommenting `t.setComponentByName(\"flag\", '')` and switching from `ber` to `der` encoding or explicitly calling encode(t, ifNotEmpty=True). The line `if options.get('ifNotEmpty', False) and not substrate:` in ber/encoder.py` will than remove the `univ.Null` from the encoded data even if set.\r\n\r\n    % dumpasn1 /tmp/test.bin\r\n      0   0: [1]\r\n           :   Error: Object has zero length.\r\n\r\n0 warnings, 1 error.\r\n\r\n\r\nBest regards,\r\n\r\nEierkopp", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/86", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/86/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/86/events", "html_url": "https://github.com/etingof/pyasn1/issues/86", "id": 263864890, "node_id": "MDU6SXNzdWUyNjM4NjQ4OTA=", "number": 86, "title": "hasValue() is erroneous when member is optional and is a Sequence() (maybe with other types as well)", "user": {"login": "pantunes", "id": 6731272, "node_id": "MDQ6VXNlcjY3MzEyNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6731272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pantunes", "html_url": "https://github.com/pantunes", "followers_url": "https://api.github.com/users/pantunes/followers", "following_url": "https://api.github.com/users/pantunes/following{/other_user}", "gists_url": "https://api.github.com/users/pantunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/pantunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pantunes/subscriptions", "organizations_url": "https://api.github.com/users/pantunes/orgs", "repos_url": "https://api.github.com/users/pantunes/repos", "events_url": "https://api.github.com/users/pantunes/events{/privacy}", "received_events_url": "https://api.github.com/users/pantunes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513984, "node_id": "MDU6TGFiZWwzMzE1MTM5ODQ=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/enhancement", "name": "enhancement", "color": "edffab", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-09T11:38:06Z", "updated_at": "2017-10-19T11:47:03Z", "closed_at": "2017-10-19T11:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen running the code below, we get different results from the function hasValue():\r\n\r\n```\r\nfrom binascii import hexlify\r\nfrom pyasn1.type import univ, namedtype\r\nfrom pyasn1.codec.der import encoder, decoder\r\n\r\nprint \">>> Sample 1\"\r\n\r\nclass Sample(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('a', univ.Integer()),\r\n        namedtype.OptionalNamedType('b', univ.Integer())\r\n        )\r\ns1 = Sample()\r\ns1['a'] = univ.Integer(1)\r\n\r\nprint 'hasvalue s1=', s1['b'].hasValue()\r\n\r\ne_s1 = encoder.encode(s1)\r\nprint hexlify(e_s1)\r\ns2 = decoder.decode(e_s1, asn1Spec=Sample())[0]\r\n\r\ne_s2 = encoder.encode(s2)\r\nprint hexlify(e_s2)\r\n\r\nprint 'hasvalue s2=', s2['b'].hasValue()\r\n\r\nprint \">>> Sample 2\"\r\n\r\nclass Sample(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('a', univ.Integer()),\r\n        namedtype.OptionalNamedType('b', univ.Sequence())\r\n        )\r\ns1 = Sample()\r\ns1['a'] = univ.Integer(1)\r\n\r\nprint 'hasvalue s1=', s1['b'].hasValue()\r\n\r\ne_s1 = encoder.encode(s1)\r\nprint hexlify(e_s1)\r\ns2 = decoder.decode(e_s1, asn1Spec=Sample())[0]\r\n\r\ne_s2 = encoder.encode(s2)\r\nprint hexlify(e_s2)\r\n\r\nprint 'hasvalue s2=', s2['b'].hasValue()\r\n\r\n```\r\n**Returns:**\r\n>>> Sample 1\r\nhasvalue s1= False\r\n3003020101\r\n3003020101\r\nhasvalue s2= False\r\n>>> Sample 2\r\nhasvalue s1= True\r\n3003020101\r\n3003020101\r\nhasvalue s2= True\r\n\r\nCould you please fix this?\r\nThanks in advance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/84", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/84/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/84/events", "html_url": "https://github.com/etingof/pyasn1/issues/84", "id": 263411665, "node_id": "MDU6SXNzdWUyNjM0MTE2NjU=", "number": 84, "title": "return negative value from from_bytes", "user": {"login": "User-Man", "id": 12938033, "node_id": "MDQ6VXNlcjEyOTM4MDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/12938033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/User-Man", "html_url": "https://github.com/User-Man", "followers_url": "https://api.github.com/users/User-Man/followers", "following_url": "https://api.github.com/users/User-Man/following{/other_user}", "gists_url": "https://api.github.com/users/User-Man/gists{/gist_id}", "starred_url": "https://api.github.com/users/User-Man/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/User-Man/subscriptions", "organizations_url": "https://api.github.com/users/User-Man/orgs", "repos_url": "https://api.github.com/users/User-Man/repos", "events_url": "https://api.github.com/users/User-Man/events{/privacy}", "received_events_url": "https://api.github.com/users/User-Man/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-06T11:11:20Z", "updated_at": "2017-10-06T13:13:10Z", "closed_at": "2017-10-06T13:13:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, I am new in ASN.1 coding and try handle snmp trap and have some problems with some equipment\r\n\r\nMost of trap working good, but some crash with error:\r\n\r\n```\r\n Traceback (most recent call last):\r\n  File \"./broken_test.py\", line 17, in <module>\r\n    a, b = pyasn_decoder.decode(whole_msg, asn1Spec = proto.Message())\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 496, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec, **options)\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 686, in valueDecoder\r\n    tagSet, length, state, **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 496, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec, **options)\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 523, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec, **options)\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 496, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec, **options)\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 686, in valueDecoder\r\n    tagSet, length, state, **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 686, in valueDecoder\r\n    tagSet, length, state, **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 686, in valueDecoder\r\n    tagSet, length, state, **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 1160, in __call__\r\n    **options\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 109, in valueDecoder\r\n    return self._createComponent(asn1Spec, tagSet, value), tail\r\n  File \"/root/pyasn1/codec/ber/decoder.py\", line 45, in _createComponent\r\n    return asn1Spec.clone(value)\r\n  File \"/root/pyasn1/type/univ.py\", line 273, in clone\r\n    return base.AbstractSimpleAsn1Item.clone(self, value, **kwargs)\r\n  File \"/root/pyasn1/type/base.py\", line 311, in clone\r\n    return self.__class__(value, **initilaizers)\r\n  File \"/root/pyasn1/type/univ.py\", line 72, in __init__\r\n    base.AbstractSimpleAsn1Item.__init__(self, value, **kwargs)\r\n  File \"/root/pyasn1/type/base.py\", line 209, in __init__\r\n    raise exType('%s at %s' % (exValue, self.__class__.__name__))\r\npyasn1.type.error.ValueConstraintError: ConstraintsIntersection(ValueRangeConstraint(0, 4294967295)) failed at: ValueConstraintError('ValueRangeConstraint(0, 4294967295) failed at: ValueConstraintError(-112878092,)',) at TimeTicks\r\n```\r\nReading code I find in pyasn1-0.3.7-py2.7.egg/pyasn1/compat/integer.py\r\n\r\n```python\r\n29   if signed and oct2int(octets[0]) & 0x80:\r\n30       return value - (1 << len(octets) * 8)\r\n```\r\nCan you explain me please, what means \"oct2int(octets[0]) & 0x80\"?\r\nWhen me code crash: oct2int(octets[0]) = 249\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/82", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/82/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/82/events", "html_url": "https://github.com/etingof/pyasn1/issues/82", "id": 260872739, "node_id": "MDU6SXNzdWUyNjA4NzI3Mzk=", "number": 82, "title": "PER", "user": {"login": "MMYusuf", "id": 32323294, "node_id": "MDQ6VXNlcjMyMzIzMjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/32323294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MMYusuf", "html_url": "https://github.com/MMYusuf", "followers_url": "https://api.github.com/users/MMYusuf/followers", "following_url": "https://api.github.com/users/MMYusuf/following{/other_user}", "gists_url": "https://api.github.com/users/MMYusuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/MMYusuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MMYusuf/subscriptions", "organizations_url": "https://api.github.com/users/MMYusuf/orgs", "repos_url": "https://api.github.com/users/MMYusuf/repos", "events_url": "https://api.github.com/users/MMYusuf/events{/privacy}", "received_events_url": "https://api.github.com/users/MMYusuf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-27T07:25:24Z", "updated_at": "2017-09-27T07:43:33Z", "closed_at": "2017-09-27T07:43:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ilya.\r\n \r\nThank you for your work! What do you think about PER coding? \r\n\r\n> The extremely compact PER encoding is expected to be introduced in the upcoming pyasn1 release. \r\n\r\nI wonder when this might be cuz I am currently working on a project that uses PER ..\r\n \r\nThank you,\r\nMarwan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/81", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/81/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/81/events", "html_url": "https://github.com/etingof/pyasn1/issues/81", "id": 260253821, "node_id": "MDU6SXNzdWUyNjAyNTM4MjE=", "number": 81, "title": "deepcopy of `pyasn1.type.useful.FixedOffset` instance raises exception", "user": {"login": "tadams42", "id": 664505, "node_id": "MDQ6VXNlcjY2NDUwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/664505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tadams42", "html_url": "https://github.com/tadams42", "followers_url": "https://api.github.com/users/tadams42/followers", "following_url": "https://api.github.com/users/tadams42/following{/other_user}", "gists_url": "https://api.github.com/users/tadams42/gists{/gist_id}", "starred_url": "https://api.github.com/users/tadams42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tadams42/subscriptions", "organizations_url": "https://api.github.com/users/tadams42/orgs", "repos_url": "https://api.github.com/users/tadams42/repos", "events_url": "https://api.github.com/users/tadams42/events{/privacy}", "received_events_url": "https://api.github.com/users/tadams42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-25T12:15:38Z", "updated_at": "2017-09-26T21:34:12Z", "closed_at": "2017-09-26T21:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, here is how to reproduce it:\r\n\r\n~~~python\r\nfrom copy import deepcopy\r\n\r\nimport pyasn1\r\nfrom pyasn1.type.useful import GeneralizedTime\r\n\r\npyasn1.__version__\r\n# '0.3.6'\r\n\r\ndt = GeneralizedTime(\"20170916234254+0130\").asDateTime\r\ndeepcopy(dt)\r\n~~~\r\n\r\nrises `TypeError: __init__() takes exactly 3 arguments (1 given)` in Python 2.7 or `TypeError: __init__() missing 2 required positional arguments: 'offset' and 'name'` in Python 3.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/80", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/80/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/80/events", "html_url": "https://github.com/etingof/pyasn1/issues/80", "id": 259601559, "node_id": "MDU6SXNzdWUyNTk2MDE1NTk=", "number": 80, "title": "Uninstalling pyasn1==0.2.2 throws an apparently spurious exception", "user": {"login": "zancas", "id": 640955, "node_id": "MDQ6VXNlcjY0MDk1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/640955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zancas", "html_url": "https://github.com/zancas", "followers_url": "https://api.github.com/users/zancas/followers", "following_url": "https://api.github.com/users/zancas/following{/other_user}", "gists_url": "https://api.github.com/users/zancas/gists{/gist_id}", "starred_url": "https://api.github.com/users/zancas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zancas/subscriptions", "organizations_url": "https://api.github.com/users/zancas/orgs", "repos_url": "https://api.github.com/users/zancas/repos", "events_url": "https://api.github.com/users/zancas/events{/privacy}", "received_events_url": "https://api.github.com/users/zancas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-21T19:12:24Z", "updated_at": "2017-09-21T19:23:54Z", "closed_at": "2017-09-21T19:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\r\n\r\nI ran `pip install -U .` in a clone of the repo checked out at tag `0.2.2` and, though the upgrade appeared to cause the correct transformation, the process raised an OSError.\r\n\r\nI believe the cause is a bug in the uninstall logic\r\n\r\nReplication:\r\n\r\n0.  check that `pyasn1==0.2.2` is installed:\r\n\r\n```\r\nroot@REDACTED:/home/jenkins# pip freeze | grep pyasn1\r\npyasn1==0.2.2\r\n```\r\n\r\n1.   check that `/usr/local/lib/python2.7/dist-packages/pyasn1-0.2.2-py2.7.egg` exists (and that other versions do not):\r\n\r\n```\r\nroot@REDACTED:/home/jenkins# ls -la /usr/local/lib/python2.7/dist-packages/pyasn1*\r\n-rw-r--r-- 1 root staff 119738 Sep 20 17:18 /usr/local/lib/python2.7/dist-packages/pyasn1-0.2.2-py2.7.egg\r\n```\r\n\r\n2.  uninstall `pyasn1`:\r\n\r\n```\r\nroot@REDACTED:/home/jenkins# pip uninstall pyasn1\r\nUninstalling pyasn1-0.2.2:\r\n  /usr/local/lib/python2.7/dist-packages/pyasn1-0.2.2-py2.7.egg\r\nProceed (y/n)? y\r\n  Successfully uninstalled pyasn1-0.2.2\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pip\", line 11, in <module>\r\n    load_entry_point('pip==9.0.1', 'console_scripts', 'pip')()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/__init__.py\", line 233, in main\r\n    return command.main(cmd_args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/basecommand.py\", line 252, in main\r\n    pip_version_check(session)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/utils/outdated.py\", line 102, in pip_version_check\r\n    installed_version = get_installed_version(\"pip\")\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/utils/__init__.py\", line 838, in get_installed_version\r\n    working_set = pkg_resources.WorkingSet()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 644, in __init__\r\n    self.add_entry(entry)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 700, in add_entry\r\n    for dist in find_distributions(entry, True):\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 1949, in find_eggs_in_zip\r\n    if metadata.has_metadata('PKG-INFO'):\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 1463, in has_metadata\r\n    return self.egg_info and self._has(self._fn(self.egg_info, name))\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 1823, in _has\r\n    return zip_path in self.zipinfo or zip_path in self._index()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 1703, in zipinfo\r\n    return self._zip_manifests.load(self.loader.archive)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip-9.0.1-py2.7.egg/pip/_vendor/pkg_resources/__init__.py\", line 1643, in load\r\n    mtime = os.stat(path).st_mtime\r\nOSError: [Errno 2] No such file or directory: '/usr/local/lib/python2.7/dist-packages/pyasn1-0.2.2-py2.7.egg'\r\n```\r\n\r\n3.  check the state of '/usr/local/lib/python2.7/dist-packages/pyasn1*`:\r\n\r\n```\r\nroot@REDACTED:/home/jenkins# ls -la /usr/local/lib/python2.7/dist-packages/pyasn1*\r\nls: cannot access '/usr/local/lib/python2.7/dist-packages/pyasn1*': No such file or directory\r\n```\r\n\r\n\r\nMy belief is that the `uninstall` command is correctly removing the referenced `.egg` and then incorrectly asserting that it expects the `.egg` to exist.    Since the uninstall logic is a component of the `pip install --upgrade` process, this causes my upgrade-dependent infrastructure to fail.\r\n\r\nThanks for your software!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/78", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/78/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/78/events", "html_url": "https://github.com/etingof/pyasn1/issues/78", "id": 259187358, "node_id": "MDU6SXNzdWUyNTkxODczNTg=", "number": 78, "title": "pyasn1-0.3.5: can only concatenate tuple (not \"str\") to tuple", "user": {"login": "asolino", "id": 11577828, "node_id": "MDQ6VXNlcjExNTc3ODI4", "avatar_url": "https://avatars2.githubusercontent.com/u/11577828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asolino", "html_url": "https://github.com/asolino", "followers_url": "https://api.github.com/users/asolino/followers", "following_url": "https://api.github.com/users/asolino/following{/other_user}", "gists_url": "https://api.github.com/users/asolino/gists{/gist_id}", "starred_url": "https://api.github.com/users/asolino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asolino/subscriptions", "organizations_url": "https://api.github.com/users/asolino/orgs", "repos_url": "https://api.github.com/users/asolino/repos", "events_url": "https://api.github.com/users/asolino/events{/privacy}", "received_events_url": "https://api.github.com/users/asolino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-20T14:37:03Z", "updated_at": "2017-09-20T20:19:12Z", "closed_at": "2017-09-20T20:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there:\r\n\r\nFirst of all, thanks for this library. We use it extensively in our [impacket](https://github.com/CoreSecurity/impacket) repository.\r\n\r\nWhile investigating [this](https://github.com/CoreSecurity/impacket/issues/325) issue, I came up with the following code not working:\r\n```python\r\nfrom pyasn1.codec.der import encoder\r\nfrom pyasn1.type import univ, namedtype, tag\r\n\r\nclass KERB_PA_PAC_REQUEST(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('include-pac', univ.Boolean().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    )\r\n\r\npacRequest = KERB_PA_PAC_REQUEST()\r\npacRequest['include-pac'] = True\r\nprint pacRequest.prettyPrint()\r\nencodedPacRequest = encoder.encode(pacRequest)\r\n\r\nprint repr(encodedPacRequest)\r\n```\r\nUnder `pyasn1-0.3.5` I get the following traceback error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"tt.py\", line 12, in <module>\r\n    encodedPacRequest = encoder.encode(pacRequest)\r\n  File \"/Users/beto/src/pyasn1-0.3.5/pyasn1/codec/ber/encoder.py\", line 505, in __call__\r\n    substrate = concreteEncoder.encode(value, self, **options)\r\n  File \"/Users/beto/src/pyasn1-0.3.5/pyasn1/codec/ber/encoder.py\", line 73, in encode\r\n    value, encodeFun, **options\r\n  File \"/Users/beto/src/pyasn1-0.3.5/pyasn1/codec/cer/encoder.py\", line 145, in encodeValue\r\n    substrate = encodeFun(value[idx], **options) + substrate\r\n  File \"/Users/beto/src/pyasn1-0.3.5/pyasn1/codec/ber/encoder.py\", line 505, in __call__\r\n    substrate = concreteEncoder.encode(value, self, **options)\r\n  File \"/Users/beto/src/pyasn1-0.3.5/pyasn1/codec/ber/encoder.py\", line 89, in encode\r\n    substrate = ints2octs(header + substrate)\r\nTypeError: can only concatenate tuple (not \"str\") to tuple\r\n```\r\nwhile it works just fine with previous version.\r\n\r\nCan you point out what are we doing wrong?\r\n\r\nthanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/76", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/76/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/76/events", "html_url": "https://github.com/etingof/pyasn1/issues/76", "id": 258067473, "node_id": "MDU6SXNzdWUyNTgwNjc0NzM=", "number": 76, "title": "failure to parse Kerberos principal name", "user": {"login": "rcritten", "id": 5193315, "node_id": "MDQ6VXNlcjUxOTMzMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5193315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcritten", "html_url": "https://github.com/rcritten", "followers_url": "https://api.github.com/users/rcritten/followers", "following_url": "https://api.github.com/users/rcritten/following{/other_user}", "gists_url": "https://api.github.com/users/rcritten/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcritten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcritten/subscriptions", "organizations_url": "https://api.github.com/users/rcritten/orgs", "repos_url": "https://api.github.com/users/rcritten/repos", "events_url": "https://api.github.com/users/rcritten/events{/privacy}", "received_events_url": "https://api.github.com/users/rcritten/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-15T14:52:35Z", "updated_at": "2017-09-15T15:01:41Z", "closed_at": "2017-09-15T15:01:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting a traceback trying to parse a Kerberos principal name in 0.3.2-0.3.4 (0.3.1 untested). This worked in 0.2.3 in the freeIPA project.\r\n\r\nAttributeError: 'GeneralString' object has no attribute 'asn1Object'\r\n\r\n[asn1.txt](https://github.com/etingof/pyasn1/files/1306701/asn1.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/74", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/74/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/74/events", "html_url": "https://github.com/etingof/pyasn1/issues/74", "id": 257284150, "node_id": "MDU6SXNzdWUyNTcyODQxNTA=", "number": 74, "title": "DER encoding produces constructed form of encoding", "user": {"login": "fzonneveld", "id": 9437091, "node_id": "MDQ6VXNlcjk0MzcwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9437091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fzonneveld", "html_url": "https://github.com/fzonneveld", "followers_url": "https://api.github.com/users/fzonneveld/followers", "following_url": "https://api.github.com/users/fzonneveld/following{/other_user}", "gists_url": "https://api.github.com/users/fzonneveld/gists{/gist_id}", "starred_url": "https://api.github.com/users/fzonneveld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fzonneveld/subscriptions", "organizations_url": "https://api.github.com/users/fzonneveld/orgs", "repos_url": "https://api.github.com/users/fzonneveld/repos", "events_url": "https://api.github.com/users/fzonneveld/events{/privacy}", "received_events_url": "https://api.github.com/users/fzonneveld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-13T07:33:25Z", "updated_at": "2017-09-13T23:27:14Z", "closed_at": "2017-09-13T23:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom pyasn1.codec.der import encoder\r\nfrom pyasn1.type import univ\r\n\r\no = univ.OctetString('\\xaa' * 1001)\r\nencoder.emcode(o)\r\n```\r\nResults in '$\\x82\\x03\\xef\\x04\\x82\\x03\\xe8\\xaa\\xaa .. \\xaa\\x04\\0x01\\xaa'\r\n\r\nAccording to X.690 $10.2 the constructed form of encoding should not be used for DER encoding.\r\nExpected value would be: '\\x04\\x82\\x03\\xe9\\xaa\\xaa..\\xaa'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/70", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/70/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/70/events", "html_url": "https://github.com/etingof/pyasn1/issues/70", "id": 255222481, "node_id": "MDU6SXNzdWUyNTUyMjI0ODE=", "number": 70, "title": "PyAsn1Error when decoding explicitly tagged subtypes", "user": {"login": "jfinkhaeuser", "id": 203885, "node_id": "MDQ6VXNlcjIwMzg4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/203885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkhaeuser", "html_url": "https://github.com/jfinkhaeuser", "followers_url": "https://api.github.com/users/jfinkhaeuser/followers", "following_url": "https://api.github.com/users/jfinkhaeuser/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkhaeuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkhaeuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkhaeuser/subscriptions", "organizations_url": "https://api.github.com/users/jfinkhaeuser/orgs", "repos_url": "https://api.github.com/users/jfinkhaeuser/repos", "events_url": "https://api.github.com/users/jfinkhaeuser/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkhaeuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-09-05T09:56:20Z", "updated_at": "2017-09-26T16:55:38Z", "closed_at": "2017-09-26T16:55:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a little wrapper library at https://github.com/jfinkhaeuser/bran that goes a little beyond the ASN.1 specs to providing a canonical presentation.\r\n\r\nSince upgrading to pyasn1 0.3.x my builds fail, and I'm having a hard time figuring out what if anything I'm doing wrong.\r\n\r\nSummarized, I do the following:\r\n- Encode more complex types as sequences:\r\n```python\r\n    self.MAPPING = univ.Sequence(\r\n      tagSet = univ.Sequence.tagSet.tagExplicitly(\r\n        tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0x04)\r\n      )\r\n    )\r\n```\r\n- In the mapping case, it's actually a sequence of two item sequences, representing the key and value.\r\n- When *decoding*, there's now a `PyAsn1Error` when the sequence end is reached. Previously iteration would just stop.\r\n\r\nI can circumvent that by catching the error, but that might hide other issues. I can explicitly add the length of the sequence, but my understanding of ASN.1 is that this shouldn't be necessary.\r\n\r\nThe error is \"Compontent type not defined\".\r\n\r\nDo you have any pointers for me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/68", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/68/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/68/events", "html_url": "https://github.com/etingof/pyasn1/issues/68", "id": 254159495, "node_id": "MDU6SXNzdWUyNTQxNTk0OTU=", "number": 68, "title": "pyasn1.error.PyAsn1Error: Duplicate default ASN.1 type", "user": {"login": "tubaman", "id": 197814, "node_id": "MDQ6VXNlcjE5NzgxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/197814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tubaman", "html_url": "https://github.com/tubaman", "followers_url": "https://api.github.com/users/tubaman/followers", "following_url": "https://api.github.com/users/tubaman/following{/other_user}", "gists_url": "https://api.github.com/users/tubaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tubaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tubaman/subscriptions", "organizations_url": "https://api.github.com/users/tubaman/orgs", "repos_url": "https://api.github.com/users/tubaman/repos", "events_url": "https://api.github.com/users/tubaman/events{/privacy}", "received_events_url": "https://api.github.com/users/tubaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T22:54:21Z", "updated_at": "2017-08-31T11:59:43Z", "closed_at": "2017-08-31T11:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "This following code used to work fine on 0.3.1 but breaks on 0.3.2 and 0.3.3:\r\n\r\n```python\r\nfrom pyasn1.type import univ, namedtype\r\n\r\nclass Foobar(univ.Sequence):\r\n    pass\r\n\r\nFoobar.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('baz', univ.Any()),\r\n    namedtype.OptionalNamedType('blerg', univ.Any())\r\n)\r\n```\r\n\r\n\r\nOn 0.3.2 and 0.3.3, here's the traceback we get:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 10, in <module>\r\n    namedtype.OptionalNamedType('blerg', univ.Any())\r\n  File \"/home/ryanow01/sandboxes/pyasn1_problem/.tox/pyasn1033/local/lib/python2.7/site-packages/pyasn1/type/namedtype.py\", line 117, in __init__\r\n    self.__nonUniqueTagMap = self.__computeTagMaps(unique=False)\r\n  File \"/home/ryanow01/sandboxes/pyasn1_problem/.tox/pyasn1033/local/lib/python2.7/site-packages/pyasn1/type/namedtype.py\", line 441, in __computeTagMaps\r\n    raise error.PyAsn1Error('Duplicate default ASN.1 type at %s' % (self,))\r\npyasn1.error.PyAsn1Error: Duplicate default ASN.1 type at NamedTypes(NamedType('baz', Any()), OptionalNamedType('blerg', Any()))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/67", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/67/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/67/events", "html_url": "https://github.com/etingof/pyasn1/issues/67", "id": 253562896, "node_id": "MDU6SXNzdWUyNTM1NjI4OTY=", "number": 67, "title": "IndexError: tuple index out of range when encoding X509 Cert", "user": {"login": "reox", "id": 431045, "node_id": "MDQ6VXNlcjQzMTA0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/431045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reox", "html_url": "https://github.com/reox", "followers_url": "https://api.github.com/users/reox/followers", "following_url": "https://api.github.com/users/reox/following{/other_user}", "gists_url": "https://api.github.com/users/reox/gists{/gist_id}", "starred_url": "https://api.github.com/users/reox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reox/subscriptions", "organizations_url": "https://api.github.com/users/reox/orgs", "repos_url": "https://api.github.com/users/reox/repos", "events_url": "https://api.github.com/users/reox/events{/privacy}", "received_events_url": "https://api.github.com/users/reox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-08-29T08:08:29Z", "updated_at": "2017-09-07T09:15:56Z", "closed_at": "2017-09-07T09:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this one was not reported yet :)\r\n\r\nI used pyasn1 to extract the X509 certificate part of an PKCS#7 Message, here is an example:\r\n```\r\nimport binascii\r\nfrom pyasn1.codec.der.decoder import decode\r\nfrom pyasn1.codec.der.encoder import encode\r\n\r\ncerthex  = b\"3082039506092a864886f70d010702a082038630820382020101310b300906052b0e03021a0500300b06092a864886f70d010701a08202d0308202cc30820289a003020102020466eda548300b06072a8648ce380403050030363110300e06035504061307736961766173683110300e060355040a1307736961766173683110300e06035504031307736961766173683020170d3136303132353037323533305a180f32303534303532353037323533305a30363110300e06035504061307736961766173683110300e060355040a1307736961766173683110300e0603550403130773696176617368308201b83082012c06072a8648ce3804013082011f02818100fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c70215009760508f15230bccb292b982a2eb840bf0581cf502818100f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a0381850002818100e9b46a500aabcbb7b42e93477db9f8ac7c819eadd392f4fa2dd7c10973c399d00d45796052bfb376567a518cfe1432a0f845e4be75aa76462335bf7f84b6c634bb6c884b6ae2e7b6f1cc78c3be6f98b65980832c40d9da3d2b047cba98b24c877b2ace7908b0af56fd62367df355e011a0482c9b8751c373a8d131076cd01421a321301f301d0603551d0e04160414eeac32e5f08781bb6f2f392814951b328868ae4c300b06072a8648ce3804030500033000302d0215009209eb12e966aafae281620e7da9743774d7846302144bf36a9634967ca47639bbc10712571b036e13d531818e30818b020101303e30363110300e06035504061307736961766173683110300e060355040a1307736961766173683110300e0603550403130773696176617368020466eda548300906052b0e03021a0500300b06072a8648ce3804010500042e302c02145de23a86f0c2e45dcad93ef8cab675ec56a6ff4b021404c1a9f7f791631ae00d61fe8ae23f502c33fe84\"\r\n\r\npkcs7message = binascii.unhexlify(certhex)\r\n\r\nmessage, _ = decode(pkcs7message)\r\ncert = encode(message[1][3])\r\nprint(cert)\r\n```\r\n\r\nWith version 0.3.3 this fails due to the following error, it worked fine with the versions before 0.3.1:\r\n```\r\nTraceback (most recent call last):\r\n  File \"bla.py\", line 12, in <module>\r\n    cert = encode(message[1][3])\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\der\\encoder.py\", line 56, in __call__\r\n    return encoder.Encoder.__call__(self, value, defMode, maxChunkSize, ifNotEmpty=ifNotEmpty)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\cer\\encoder.py\", line 208, in __call__\r\n    return encoder.Encoder.__call__(self, value, defMode, maxChunkSize, ifNotEmpty)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\encoder.py\", line 483, in __call__\r\n    self, value, defMode, maxChunkSize, ifNotEmpty=ifNotEmpty\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\encoder.py\", line 61, in encode\r\n    encodeFun, value, defMode, maxChunkSize, ifNotEmpty=ifNotEmpty\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\cer\\encoder.py\", line 156, in encodeValue\r\n    substrate = encodeFun(value[idx], defMode, maxChunkSize, namedTypes[idx].isOptional) + substrate\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 155, in __getitem__\r\n    return self.__namedTypes[idx]\r\nIndexError: tuple index out of range\r\n```\r\n\r\nMaybe, it has to do how I use it, maybe it is a real bug. \r\n\r\nBy the way, this is how I use it:\r\nhttps://github.com/androguard/androguard/blob/master/androguard/core/bytecodes/apk.py#L836\r\nI also need to remove the first identifier in the DER Coded sequence, which does not look right, but I did not found another way.\r\n(If you know a better way to extract the cert from the message please tell me :))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/65", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/65/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/65/events", "html_url": "https://github.com/etingof/pyasn1/issues/65", "id": 253184326, "node_id": "MDU6SXNzdWUyNTMxODQzMjY=", "number": 65, "title": "UTF8 String bug", "user": {"login": "ph4r05", "id": 1052761, "node_id": "MDQ6VXNlcjEwNTI3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1052761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ph4r05", "html_url": "https://github.com/ph4r05", "followers_url": "https://api.github.com/users/ph4r05/followers", "following_url": "https://api.github.com/users/ph4r05/following{/other_user}", "gists_url": "https://api.github.com/users/ph4r05/gists{/gist_id}", "starred_url": "https://api.github.com/users/ph4r05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ph4r05/subscriptions", "organizations_url": "https://api.github.com/users/ph4r05/orgs", "repos_url": "https://api.github.com/users/ph4r05/repos", "events_url": "https://api.github.com/users/ph4r05/events{/privacy}", "received_events_url": "https://api.github.com/users/ph4r05/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-27T19:33:49Z", "updated_at": "2017-09-01T21:52:39Z", "closed_at": "2017-08-31T11:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nlast few hours I've been debugging the problem after port to new API v0.3.3.\r\n\r\nI am experiencing problem like this:\r\n - Python v2.7.13\r\n - Parsing 2.5.29.17 subjectAltName\r\n - `char.UTF8String()` is being parsed in a way `pyasn1.type.univ.OctetString` is passed in the constructor. \r\n - `prettyIn()` of the `AbstractCharacterString` is called, which leads to call `unicode(value)` essentially leading to  `__unicode__()` call on the `OctetString`\r\n- `OctetString` has default encoding `iso-8859-1`, as it stores `_value` as a `str` it tries to decode it in the default encoding `iso-8859-1`.\r\n- This leads to malformed non-ASCII characters from the UTF8 string\r\n- If I read the file manually the string is stored correctly as UTF8 string. \r\n\r\nI can provide the example if needed. \r\n\r\nThanks a lot for suggestion. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/63", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/63/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/63/events", "html_url": "https://github.com/etingof/pyasn1/issues/63", "id": 252872040, "node_id": "MDU6SXNzdWUyNTI4NzIwNDA=", "number": 63, "title": "not in asn1Spec: TagMap() when using version > 0.2.3", "user": {"login": "reox", "id": 431045, "node_id": "MDQ6VXNlcjQzMTA0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/431045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reox", "html_url": "https://github.com/reox", "followers_url": "https://api.github.com/users/reox/followers", "following_url": "https://api.github.com/users/reox/following{/other_user}", "gists_url": "https://api.github.com/users/reox/gists{/gist_id}", "starred_url": "https://api.github.com/users/reox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reox/subscriptions", "organizations_url": "https://api.github.com/users/reox/orgs", "repos_url": "https://api.github.com/users/reox/repos", "events_url": "https://api.github.com/users/reox/events{/privacy}", "received_events_url": "https://api.github.com/users/reox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513983, "node_id": "MDU6TGFiZWwzMzE1MTM5ODM=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-25T11:24:19Z", "updated_at": "2017-08-25T12:06:19Z", "closed_at": "2017-08-25T11:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm using pyasn1 in androguard to parse X509 certificates. I noticed that travis uses now Version 0.3.2 of pyasn1 and the decoding of the DER encoded file throws an exception. This was not the case in Version 0.2.3. where everything worked just fine.\r\n\r\nHere is a short programm to test it:\r\n```\r\nimport binascii\r\nfrom pyasn1.codec.der.decoder import decode\r\n\r\ncerthex  = b\"3082039506092a864886f70d010702a082038630820382020101310b300906052b0e03021a0500300b06092a864886f70d010701a08202d0308202cc30820289a003020102020466eda548300b06072a8648ce380403050030363110300e06035504061307736961766173683110300e060355040a1307736961766173683110300e06035504031307736961766173683020170d3136303132353037323533305a180f32303534303532353037323533305a30363110300e06035504061307736961766173683110300e060355040a1307736961766173683110300e0603550403130773696176617368308201b83082012c06072a8648ce3804013082011f02818100fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c70215009760508f15230bccb292b982a2eb840bf0581cf502818100f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a0381850002818100e9b46a500aabcbb7b42e93477db9f8ac7c819eadd392f4fa2dd7c10973c399d00d45796052bfb376567a518cfe1432a0f845e4be75aa76462335bf7f84b6c634bb6c884b6ae2e7b6f1cc78c3be6f98b65980832c40d9da3d2b047cba98b24c877b2ace7908b0af56fd62367df355e011a0482c9b8751c373a8d131076cd01421a321301f301d0603551d0e04160414eeac32e5f08781bb6f2f392814951b328868ae4c300b06072a8648ce3804030500033000302d0215009209eb12e966aafae281620e7da9743774d7846302144bf36a9634967ca47639bbc10712571b036e13d531818e30818b020101303e30363110300e06035504061307736961766173683110300e060355040a1307736961766173683110300e0603550403130773696176617368020466eda548300906052b0e03021a0500300b06072a8648ce3804010500042e302c02145de23a86f0c2e45dcad93ef8cab675ec56a6ff4b021404c1a9f7f791631ae00d61fe8ae23f502c33fe84\"\r\n\r\npkcs7message = binascii.unhexlify(certhex)\r\n\r\nmessage, _ = decode(pkcs7message)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"D:\\bla.py\", line 8, in <module>\r\n    message, _ = decode(pkcs7message)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 71, in valueDecoder\r\n    value, _ = decodeFun(head, asn1Spec, tagSet, length)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\pyasn1\\codec\\ber\\decoder.py\", line 1015, in __call__\r\n    '%s not in asn1Spec: %r' % (tagSet, asn1Spec)\r\npyasn1.error.PyAsn1Error: [0:32:16] not in asn1Spec: TagMap()\r\n```\r\n\r\nusing the old version (<= 0.2.3 and I tested up to 0.1.8) everything works,\r\n\r\nI tried to understand the problem and read the changelog but I can not see anything obvious there.\r\nI read in the documentation, that you can give the decoder an asn1Spec but until now it worked without it.\r\nBecause the behavior of the function changed without any note in the changelog, I suspect this is actually a bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/62", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/62/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/62/events", "html_url": "https://github.com/etingof/pyasn1/issues/62", "id": 252565157, "node_id": "MDU6SXNzdWUyNTI1NjUxNTc=", "number": 62, "title": "Infinite recursion when importing asn1ate output", "user": {"login": "per42", "id": 1432278, "node_id": "MDQ6VXNlcjE0MzIyNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1432278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/per42", "html_url": "https://github.com/per42", "followers_url": "https://api.github.com/users/per42/followers", "following_url": "https://api.github.com/users/per42/following{/other_user}", "gists_url": "https://api.github.com/users/per42/gists{/gist_id}", "starred_url": "https://api.github.com/users/per42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/per42/subscriptions", "organizations_url": "https://api.github.com/users/per42/orgs", "repos_url": "https://api.github.com/users/per42/repos", "events_url": "https://api.github.com/users/per42/events{/privacy}", "received_events_url": "https://api.github.com/users/per42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "etingof", "id": 17447359, "node_id": "MDQ6VXNlcjE3NDQ3MzU5", "avatar_url": "https://avatars0.githubusercontent.com/u/17447359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etingof", "html_url": "https://github.com/etingof", "followers_url": "https://api.github.com/users/etingof/followers", "following_url": "https://api.github.com/users/etingof/following{/other_user}", "gists_url": "https://api.github.com/users/etingof/gists{/gist_id}", "starred_url": "https://api.github.com/users/etingof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etingof/subscriptions", "organizations_url": "https://api.github.com/users/etingof/orgs", "repos_url": "https://api.github.com/users/etingof/repos", "events_url": "https://api.github.com/users/etingof/events{/privacy}", "received_events_url": "https://api.github.com/users/etingof/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "etingof", "id": 17447359, "node_id": "MDQ6VXNlcjE3NDQ3MzU5", "avatar_url": "https://avatars0.githubusercontent.com/u/17447359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etingof", "html_url": "https://github.com/etingof", "followers_url": "https://api.github.com/users/etingof/followers", "following_url": "https://api.github.com/users/etingof/following{/other_user}", "gists_url": "https://api.github.com/users/etingof/gists{/gist_id}", "starred_url": "https://api.github.com/users/etingof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etingof/subscriptions", "organizations_url": "https://api.github.com/users/etingof/orgs", "repos_url": "https://api.github.com/users/etingof/repos", "events_url": "https://api.github.com/users/etingof/events{/privacy}", "received_events_url": "https://api.github.com/users/etingof/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-08-24T10:59:34Z", "updated_at": "2017-08-29T10:17:12Z", "closed_at": "2017-08-26T23:43:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading from pyasn1 0.2.3 to 0.3.2, importing asn1ate output takes about 1 minute, and allocates ~6 GB memory. Same with current master. I would guess it is due to some (almost) infinite recursion. It completes importing instantly with versions 0.2.3 and 0.3.1.\r\n\r\nHere, I interrupted execution:\r\n\r\n```cmd\r\n(hostcom) C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\neonode_hostcom>python -m nn_parser\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\per\\anaconda2\\Lib\\runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"c:\\users\\per\\anaconda2\\Lib\\runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\neonode_hostcom\\nn_parser.py\", line 585, in <module>\r\n    namedtype.OptionalNamedType('errorThresholds', ErrorThresholds().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 34)))\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 115, in __init__\r\n    self.__ambiguousTypes = self.__computeAmbiguousTypes()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 232, in __computeAmbiguousTypes\r\n    ambigiousTypes[idx] = NamedTypes(*partialAmbigiousTypes)\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 114, in __init__\r\n    self.__tagToPosMap = self.__computeTagToPosMap()\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\namedtype.py\", line 200, in __computeTagToPosMap\r\n    tagMap = namedType.asn1Object.tagMap\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\base.py\", line 69, in tagMap\r\n    return tagmap.TagMap({self.tagSet: self})\r\n  File \"C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\hostcom\\lib\\site-packages\\pyasn1\\type\\tagmap.py\", line 35, in __init__\r\n    def __init__(self, presentTypes=None, skipTypes=None, defaultType=None):\r\nKeyboardInterrupt\r\n```\r\n\r\n# References\r\n\r\nasn1ate command:\r\n```cmd\r\n(hostcom) C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\neonode_hostcom>python -m asn1ate.pyasn1gen ..\\protocol\\zforce_pdu_def.asn > nn_parser.py\r\n```\r\n\r\nPython:\r\n```cmd\r\n(hostcom) C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\neonode_hostcom>python\r\nPython 2.7.13 |Continuum Analytics, Inc.| (default, May 11 2017, 13:17:26) [MSC v.1500 64 bit (AMD64)] on win32\r\n```\r\n\r\nModules:\r\n```cmd\r\n(hostcom) C:\\Users\\Per\\code\\zforce-application-simulator\\hostcom\\neonode_hostcom>pip freeze\r\nasn1ate==0.5\r\nfuture==0.16.0\r\nhidapi==0.7.99.post20\r\n-e git+ssh://git@bitbucket.neonode.local:7999/~per.rosengren/hostcom-py.git@4cf1e6b04fa0d4eb5d3951afd87724eedb4cf3c0#egg=neonode_hostcom&subdirectory=..\\..\\hostcom\r\nnumpy==1.13.1\r\npyasn1==0.3.3\r\npyparsing==2.2.0\r\n```\r\n\r\nThe ASN.1 PDU definition:\r\n```asn.1\r\n-- Neonode zForce Communication Protocol ASN.1 PDU definition\r\n-- Protocol ASN.1 PDU Definition for Platform Version 7\r\n-- Status: Draft\r\n-- Definition version: 1.5-WIP\r\n-- Last update: 2016-06-13\r\n-- See end of document for changelog\r\n\r\nProtocolMessage DEFINITIONS IMPLICIT TAGS EXTENSIBILITY IMPLIED ::=\r\nBEGIN\r\n\r\n\t-- General notes;\r\n\t-- items typed as INTEGER are unsigned, unless\r\n\t-- explicitly using the SignedInteger datatype\r\n\t\r\n\t-- -------------------------------------------- --\r\n\t-- Top level PDU\t\t\t\t\t\t\t\t--\r\n\t-- -------------------------------------------- --\r\n\r\n\t-- Top level container of choice type, to be able to\r\n\t-- give implicit tag identifier. To replicate old protocol\r\n\t-- PRIVATE 14 generates id EE using DER encoding\r\n\tProtocolMessage ::= CHOICE {\r\n\t\trequest [PRIVATE 14] Message,\r\n\t\tresponse [PRIVATE 15] Message,\r\n\t\tnotification [PRIVATE 16] Notification\r\n\t}\r\n\r\n\t-- General top level info:\r\n\t-- Request is sent from host to device, and is\r\n\t-- responded to with a response. The structure\r\n\t-- of both request and response are the same,\r\n\t-- the Message sequence.\r\n\r\n\t-- Notifications are reports from the platform\r\n\t-- to the host that are not explicitly requested.\r\n\t-- This contains startup information and touch\r\n\t-- notifications.\r\n\r\n\t-- -------------------------------------------- --\r\n\t-- Message - Input & Output\t\t\t\t\t\t--\r\n\t-- -------------------------------------------- --\r\n\r\n\t-- Used for input and output to the system.\r\n\t-- In the request case the host device will send a\r\n\t-- top level Message with the request identifier and\r\n\t-- fill it out with operations to perform.\r\n\r\n\t-- The system will respond with response messages\r\n\t-- contained in a Message with the response identifier\r\n\t-- including requested data or operation results.\r\n\r\n\t-- General way of working:\r\n\r\n\t-- To perform a get request, make sure to send the\r\n\t-- message with an empty sequence for the data being\r\n\t-- requested\r\n\r\n\t-- To perform a set request, send the message with\r\n\t-- the sequence for the command filled with the\r\n\t-- appropriate parameters as payload\r\n\r\n\t-- All requests will get a response message with\r\n\t-- the sequences existing in the request message\r\n\t-- filled with their current values. If a set\r\n\t-- request was performed the returned value should\r\n\t-- be checked to verify the operation was successful\r\n\r\n\t-- The current communications layer handles a single\r\n\t-- command/sequence at a time. As such each setting\r\n\t-- should be sent in their own message.\r\n\r\n\tMessage ::= SEQUENCE {\r\n\t\tdeviceAddress DeviceAddress OPTIONAL,\r\n\t\t-- Used to address a specific device when multiple devices are in the same system.\r\n\t\t-- For request, the last value is kept so multiple requests to the same\r\n\t\t-- device only needs to include the deviceAddress in the first of the requests.\r\n\r\n\t\t-- Command/Message to start.\r\n\t\t-- Do all configuration before issuing.\r\n\t\tenable [APPLICATION 5] SEQUENCE {\r\n\t\t\tdisable [0] NULL OPTIONAL,\r\n\r\n\t\t\t-- Send enable with value 0 to enable continuous mode.\r\n\t\t\t-- If any other value is given, scanning will stop\r\n\t\t\t-- after that number of frames of data has been sent.\r\n\t\t\t-- This is useful for diagnostics scans and robot measurements.\r\n\t\t\tenable [1] INTEGER (0..127) OPTIONAL,\r\n\r\n\t\t\treset [2] NULL OPTIONAL\r\n\t\t} OPTIONAL,\r\n\t\t-- If enable is in a set request, e.g. populated with any member,\r\n\t\t-- no more commands should be included in the same message.\r\n\r\n\r\n\t\t-- Request for touch format descriptor. See TouchDescriptor\r\n\t\t--\tin primitive data types section below for more info.\r\n\t\ttouchFormat [APPLICATION 6] SEQUENCE { -- Read only, touchDescriptor will be ignored in request message\r\n\t\t\ttouchDescriptor TouchDescriptor OPTIONAL\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- The various types of data that can be reported\r\n\t\t-- are controlled indepentenly by sending boolean\r\n\t\t-- values for them.\r\n\t\toperationMode [APPLICATION 7] SEQUENCE {\t-- Initial state after power up\r\n\t\t\tdetection [0] BOOLEAN OPTIONAL,\t\t\t-- Enabled\r\n\t\t\tsignals [1] BOOLEAN OPTIONAL,\t\t\t-- Disabled\r\n\t\t\tledLevels [2] BOOLEAN OPTIONAL,\t\t\t-- Disabled\r\n\t\t\tdetectionHid [3] BOOLEAN OPTIONAL,\t\t-- Only for USB Equipped devices - Disabled\r\n\t\t\tgestures [4] BOOLEAN OPTIONAL\t\t\t-- Only for gesture supporting devices - Enabled\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Target frequency for different modes of operation\r\n\t\tfrequency [APPLICATION 8] SEQUENCE {\r\n\t\t\tfinger [0] INTEGER OPTIONAL,\r\n\t\t\tstylus [1] INTEGER OPTIONAL,\r\n\t\t\tidle [2] INTEGER OPTIONAL\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Scaling factor for coordinates reported.\r\n\t\t-- Does not affect internal working resolution.\r\n\t\tresolution [APPLICATION 9] SEQUENCE {\r\n\t\t\tx [0] INTEGER OPTIONAL,\r\n\t\t\ty [1] INTEGER OPTIONAL,\r\n\t\t\tz [2] INTEGER OPTIONAL\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Diagnostic method for reporting open or short LEDs/PDs.\r\n\t\t-- Always run on platform level, as such all ASICs independent of device will be reported.\r\n\t\t-- OpenShortInformation in constructed data types provides more info\r\n\t\topenShort [APPLICATION 10] SEQUENCE { -- Read only, openShortInfo will be ignored in request message\r\n\t\t\topenShortInfo [0] SEQUENCE OF OpenShortInformation OPTIONAL,\t-- One result set for each ASIC\r\n\t\t\terrorCount [1] INTEGER (0..127) OPTIONAL\t-- Total number of open and short errors encountered across\r\n\t\t\t-- all ASICs. Should always be 0 on a correctly assembled system.\r\n\t\t\t-- If larger than 127 the number is restricted to 127.\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Static information about the platform or a device can be fetched by requesting deviceInformation\r\n\t\tdeviceInformation [APPLICATION 12] SEQUENCE {-- Read only, all parameters will be ignored in request message\r\n\r\n\t\t\t-- Information returned when deviceInformation is addressed to the platform device\r\n\t\t\tplatformInformation [0] SEQUENCE {\r\n\t\t\t\tplatformVersionMajor\t[0] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tplatformVersionMinor\t[1] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tprotocolVersionMajor    [2] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tprotocolVersionMinor    [3] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tfirmwareVersionMajor\t[4] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tfirmwareVersionMinor\t[5] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\thardwareIdentifier\t\t[6] IA5String OPTIONAL,\r\n\t\t\t\thardwareVersion\t\t\t[7] IA5String OPTIONAL,\r\n\t\t\t\tasicType\t\t\t\t[8] AsicType OPTIONAL,\r\n\t\t\t\tnumberOfAsics\t\t\t[9] INTEGER (0..127) OPTIONAL,\r\n\t\t\t\tmcuUniqueIdentifier\t\t[10] OCTET STRING (SIZE(0..32)) OPTIONAL,\r\n\t\t\t\t-- MCU Serial or die and chip identifier when such is available\r\n\t\t\t\tprojectReference  [11] IA5String OPTIONAL,\r\n\t\t\t\tplatformReference [12] IA5String OPTIONAL,\r\n\t\t\t\tbuildTime         [13] IA5String OPTIONAL,\r\n\t\t\t\tbuildDate         [14] IA5String OPTIONAL\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- Information returned from other device instances. Please note that\r\n\t\t\t-- each instance, if more than one available according to deviceCount,\r\n\t\t\t-- may return different data, as they are configured independently.\r\n\t\t\tdeviceInstanceInformation [1] SEQUENCE {\t\t\t\t\t-- Device type restrictions\r\n\t\t\t\tproductVersionMajor\t[0] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tproductVersionMinor\t[1] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tphysicalWidth\t\t[2] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tphysicalHeight\t\t[3] INTEGER (0..32767) OPTIONAL,\t-- N/A for Air Devices\r\n\t\t\t\tnumberOfSignalAxes\t[4] INTEGER (0..32767) OPTIONAL,\r\n\t\t\t\tsignalsPerSignalAxis [5] SEQUENCE OF [0] INTEGER OPTIONAL,\r\n\t\t\t\t-- Added in protocol 1.1\r\n\t\t\t\tledsPerPhysicalAxis [6] SEQUENCE OF [0] INTEGER OPTIONAL,\r\n\t\t\t\tpdsPerPhysicalAxis [7] SEQUENCE OF [0] INTEGER OPTIONAL,\r\n\t\t\t\tledPdPlacementPerPhysicalAxis [8] SEQUENCE OF [0] LedPdPlacement OPTIONAL\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- If device contains any readable or writable storage areas\r\n\t\t\t-- each such area will be presented with a StorageArea sequence\r\n\t\t\tstorageInformation [2] SEQUENCE {\r\n\t\t\t\tstorageAreas [0] SEQUENCE OF [0] StorageArea,\r\n\r\n\t\t\t\t-- Buffer size indicators, to indicate maximum payloads\r\n\t\t\t\tmaxReadSize [1] INTEGER,\r\n\t\t\t\tmaxWriteSize [2] INTEGER\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- Response type expected from devices of type lightingDevices\r\n\t\t\t-- Provides metadata about the type and amount of available lights\r\n\t\t\tlightingInformation [3] SEQUENCE {\r\n\t\t\t\tnumberOfLeds [0] INTEGER OPTIONAL,\r\n\t\t\t\tbitsPerLedChannel [1] SEQUENCE OF [0] INTEGER OPTIONAL\r\n\t\t\t\t-- Regular LEDs will only give a single channel while\r\n\t\t\t\t-- RGB LEDs will give three integers, one for each color channel\r\n\t\t\t\t-- Simple on/off channels will only be a single bit while\r\n\t\t\t\t-- channels with controllable intensity will have multiple bits\r\n\t\t\t} OPTIONAL\r\n\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- To be able to enumerate the virtual devices a request for deviceCount gives\r\n\t\t-- the count of each type of device.\r\n\t\tdeviceCount [APPLICATION 15] SEQUENCE {-- Read only, all parameters will be ignored in request message\r\n\t\t\ttotalNumberOfDevices\t[0] INTEGER (0..127) OPTIONAL,\r\n\t\t\t-- Total number of devices does not include the platform and\r\n\t\t\t-- will always equal the sum of the other members of the sequence.\r\n\r\n\t\t\t-- Devices of which there are none is not reported.\r\n\t\t\tcoreDevices\t\t\t\t[1] INTEGER (0..127) OPTIONAL,\r\n\t\t\tairDevices\t\t\t\t[2] INTEGER (0..127) OPTIONAL,\r\n\t\t\tplusDevices\t\t\t\t[3] INTEGER (0..127) OPTIONAL,\r\n\t\t\tlightingDevices\t\t\t[4] INTEGER (0..127) OPTIONAL\r\n\t\t} OPTIONAL,\r\n\r\n\t\tstatus [APPLICATION 13] SEQUENCE { -- Read only, all parameters will be ignored in request message\r\n\t\t\t-- If you want to restrict the get request to a subset, include a empty sequence corresponding\r\n\t\t\t-- to the subset you want. If left entirely empty the full get response will be provided\r\n\t\t\tcounters [0] SEQUENCE {\r\n\t\t\t\tcurrentContacts\t\t\t[0] INTEGER (0..127) OPTIONAL,\r\n\t\t\t\tscanningCounter\t\t\t[1] INTEGER (0..65535) OPTIONAL,\r\n\t\t\t\tpreparedTouchCounter\t[2] INTEGER (0..65535) OPTIONAL,\r\n\t\t\t\tsentTouchCounter\t\t[3] INTEGER (0..65535) OPTIONAL,\r\n\t\t\t\tinvalidTouchCounter\t\t[4] INTEGER (0..65535) OPTIONAL\r\n\t\t\t} OPTIONAL\r\n\t\t} OPTIONAL,\r\n\t\t\r\n\t\tresultCode [APPLICATION 20] INTEGER {\r\n\t\t\tok (0),\r\n\t\t\tfail (1)\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Instance specific settings for a device\r\n\t\tdeviceConfiguration [APPLICATION 19] SEQUENCE {\r\n\t\t\t-- Set / get the number of touches to be tracked:\r\n\t\t\tnumberOfTrackedTouches\t[0] INTEGER (0..255) OPTIONAL,\r\n\t\t\t-- Set / get the minimal distance for updating a tracked touch in move state\r\n\t\t\ttrackingMinDistanceMove\t[1] INTEGER (0..16383) OPTIONAL,\r\n\t\t\t-- Set / get the sub touch active area low bound in X coordinate\r\n\t\t\tsubTouchActiveArea\t\t[2] SEQUENCE {\r\n\t\t\t\t-- Write Request and Read Response only:\r\n\t\t\t\t-- Set / get the sub touch active area low bound in X coordinate\r\n\t\t\t\tlowBoundX\t\t[0] INTEGER (0..16383) OPTIONAL,\r\n\t\t\t\t-- Set / get the sub touch active area low bound in Y coordinate\r\n\t\t\t\tlowBoundY\t\t[1] INTEGER (0..16383) OPTIONAL,\r\n\t\t\t\t-- Set / get the sub touch active area high bound in X coordinate\r\n\t\t\t\thighBoundX\t[2] INTEGER (0..16383) OPTIONAL,\r\n\t\t\t\t-- Set / get the sub touch active area high bound in Y coordinate\r\n\t\t\t\thighBoundY\t[3] INTEGER (0..16383) OPTIONAL,\r\n\t\t\t\t-- subTaa Reverse X coordinates, set / get true or false\r\n\t\t\t\treverseX\t\t[4] BOOLEAN OPTIONAL,\r\n\t\t\t\t-- SubTaa Reverse Y coordinates, set / get true or false\r\n\t\t\t\treverseY\t\t[5] BOOLEAN OPTIONAL\r\n\t\t\t} OPTIONAL,\r\n\t\t\t\r\n\t\t\t-- configure the reference signal setting\r\n\t\t\treferenceSignalConfig\t[3] INTEGER (0..255) OPTIONAL,\r\n\r\n\t\t\t-- Restriction of detected objects based on their size\r\n\t\t\tsizeRestriction [4] SEQUENCE {\r\n\t\t\t\tmaxSizeEnabled\t\t\t[0] BOOLEAN OPTIONAL,\r\n\t\t\t\tmaxSize\t\t\t\t\t[1] INTEGER (0..255) OPTIONAL,\r\n\t\t\t\tminSizeEnabled\t\t\t[2] BOOLEAN OPTIONAL,\r\n\t\t\t\tminSize\t\t\t\t\t[3] INTEGER (0..255) OPTIONAL\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- configure the detection mode\r\n\t\t\t-- Standard modes increasing from 0, custom modes decreasing from 64\r\n\t\t\t-- Giving an unlisted value will have no effect.\r\n\t\t\tdetectionMode [5] INTEGER {\r\n\t\t\t\t-- Reserved modes from (0) to (63) are listed below:\r\n\t\t\t\tdefault (0),\t\t-- finger and stylus are both enabled\r\n\t\t\t\tfinger (1),\r\n\t\t\t\t-- stylus (2),\r\n\r\n\t\t\t\t-- Special modes for customized applications are listed below:\r\n\t\t\t\tmergeTouches (32), -- merges all touch objects into one\r\n\t\t\t\tinsensitiveFTIR (64)\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- Set / get the number of touches to be reported:\r\n\t\t\tnumberOfReportedTouches\t[6] INTEGER (0..255) OPTIONAL\r\n\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Configurable options useful for retrieving diagnostic information\r\n\t\tdiagnosticsSettings [APPLICATION 21] SEQUENCE {\r\n\r\n\t\t\t-- If fixedStrength is set, the next scan uses the\r\n\t\t\t-- set strength for all LEDs. The value is cleared upon receiving\r\n\t\t\t-- a disable command, or the fixed number of scans are done.\r\n\t\t\tfixedStrength [0] INTEGER (0..255) OPTIONAL,\r\n\r\n\t\t\t-- If forceCalibration is set to anything other than 0\r\n\t\t\t-- the device will recalibrate itself next time it is\r\n\t\t\t-- enabled. As a recalibration of led levels is needed\r\n\t\t\t-- when the ASIC gain is calibrated, this is included\r\n\t\t\t-- in the same settings level.\r\n\t\t\t-- Not cleared on disable/end of fixed number scan,\r\n\t\t\t-- so make sure to set to noCalibration when done.\r\n\t\t\t-- Ignored if fixedStrength is set at the same time.\r\n\t\t\tforceCalibration [1] INTEGER {\r\n\t\t\t\tnoCalibration (0),\r\n\t\t\t\tcalibrateLedLevels (1),\r\n\t\t\t\tcalibrateLedLevelsWithHighestASICGain (2)\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- To enable filtering or normalization of raw signals\r\n\t\t\t-- reported, enable it here.\r\n\t\t\trawSignalFiltering [2] INTEGER {\r\n\t\t\t\tdisabled (0),\r\n\t\t\t\tenabled (1)\r\n\t\t\t} OPTIONAL,\r\n\r\n\t\t\t-- For systems with calibration data the storage area currently\r\n\t\t\t-- being used is indicated and set by altering the following parameter.\r\n\t\t\tcalibrationStorageAreaInUse [3] StorageIdentifier OPTIONAL,\r\n\r\n\t\t\t-- Sends Air maximum filter result.\r\n\t\t\tsignalMaximum [4] BOOLEAN OPTIONAL\r\n\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- Storage operations, available for storage devices\r\n\t\t-- Only one type of operation can be performed per request\r\n\t\tstorageOperation [APPLICATION 25] SEQUENCE {\r\n\t\t\tstorageIdentifier [0] StorageIdentifier,\r\n\r\n\t\t\toperationType [1] INTEGER {\r\n\t\t\t\tread (0),\r\n\t\t\t\twrite (1),\r\n\t\t\t\tdelete (2)\r\n\t\t\t},\r\n\r\n\t\t\t-- Offset into the storage area.\r\n\t\t\t-- Offset + size should never exceed the size of the storage area\r\n\t\t\toffset [2] INTEGER,\r\n\t\t\tsize [3] INTEGER,\r\n\r\n\t\t\t-- Payload should only be populated in the request\r\n\t\t\t-- when doing a write operation. It will only be\r\n\t\t\t-- populated in a response after a read operation\r\n\t\t\tpayload [4] OCTET STRING OPTIONAL,\r\n\r\n\t\t\t-- Operation status code should never be\r\n\t\t\t-- included in requests, only returned in responses.\r\n\t\t\t-- This indicates the status \r\n\t\t\toperationStatusCode [5] INTEGER {\r\n\t\t\t\tsuccess (0),\r\n\t\t\t\tgenericError (1), -- For errors without specific status code\r\n\t\t\t\toutOfBounds (2), -- Read or write outside of storage area\r\n\t\t\t\tmediaNotPresent (3), -- For removable media\r\n\t\t\t\tidentifierError (4), -- Storage with identifier does not exist.\r\n\t\t\t\tbufferOverflow (5), -- Storage read or write buffer not big enough for request.\r\n\t\t\t\twriteProtected (6), -- Storage is write protected, maybe ROM type.\r\n\t\t\t\tdeleteNotApplicable (7) -- Delete attempted on media where operation not available\r\n\t\t\t} OPTIONAL\r\n\r\n\t\t} OPTIONAL,\r\n\t\tsignalsLayout [APPLICATION 18] Vector OPTIONAL,\r\n\r\n\t\t-- For altering state of RGB LEDs on a device\r\n\t\t-- It is write only, and will only generate an empty sequence\r\n\t\t-- as a response to keep bandwidth usage low.\r\n        lighting [APPLICATION 26] SEQUENCE {\r\n            presenceBitMask [0] BIT STRING OPTIONAL,\r\n            -- To avoid having to send state for all LEDs every\r\n            -- time, this bitmask signifies the LEDs for which\r\n            -- the state is to be changed. To set a LED to a\r\n            -- specific color make sure to include it in the bitMask\r\n            -- and send the color values in the right position of the\r\n            -- state OCTET STRING\r\n\r\n            state [1] OCTET STRING OPTIONAL,\r\n            -- State data for the LEDs to be set.\r\n            -- presenceBitMask indicates in rising order\r\n            -- what LEDs' states are included in the payload. \r\n\r\n            -- Expected format of each state is according to the\r\n            -- number of bits per channel in the deviceInformation,\r\n            -- where each channel is 0-padded to be evenly aligned\r\n            -- on byte boundaries.\r\n\r\n            -- The size of the entire state payload should be a\r\n            -- multiple of the total state size per LED.\r\n            -- The maximum size will be the number of bits enabled in\r\n            -- precenceBitMask * total size per LED.\r\n            -- If state contains a smaller payload than maximum the\r\n            -- last state information is repeated for all successive LEDs\r\n            -- As such, to set all LEDs to the same state only a single state\r\n            -- payload is required while setting all bits enabled in the\r\n            -- presenceBitMask\r\n\r\n            -- Some examples:\r\n            -- Type    - Bits per channel   - Size per LED state\r\n            -- On/Off  - 1                  - 1 byte\r\n            -- Single  - 8                  - 1 byte\r\n            -- RGB LED - 8, 8, 8            - 3 byte\r\n            \r\n            globalIntensity [2] INTEGER (0..65535) OPTIONAL\r\n            -- Allows you to control the intensity level for all\r\n            -- LEDs at the same time.\r\n\r\n        } OPTIONAL,\r\n\r\n\t\t-- Low signal information.\r\n\t\t-- Get the comparing results between all signals to a minimal\r\n\t\t-- signal alert level.\r\n\t\tlowSignal [APPLICATION 28] SEQUENCE {\r\n\t\t\t-- Bit mask stating which signals having low signal error.\r\n\t\t\tlowSignalInfo [0] BIT STRING OPTIONAL\r\n\t\t} OPTIONAL,\r\n\r\n\t\t-- For systems where error counters are available,\r\n\t\t-- they can be cleared by sending a NULL value\r\n\t\terrorCounterClear [APPLICATION 31] NULL OPTIONAL,\r\n\t\t\r\n\t\t-- Error Information.\r\n\t\t-- Only Platform responds to this.\r\n\t\terrorInformation [APPLICATION 32] ErrorInformation OPTIONAL,\r\n\t\t\r\n\t\t-- Ask device to stream the Error Log for either a specific session,\r\n\t\t-- the current session (specify -1 as value) or all sessions (-2).\r\n\t\t-- The Error Log is streamed using ErrorLog entries.\r\n\t\t-- See the \"errorLog\" entry in StatusNotification for the Notification sent.\r\n\t\t-- Only Platform responds to this.\r\n\t\terrorLog [APPLICATION 33] INTEGER {\r\n\t\t\tcurrentSession (-1),\r\n\t\t\tallSessions (-2)\r\n\t\t} OPTIONAL,\r\n\t\t\r\n\t\t-- Get or Set Error Thresholds.\r\n\t\terrorThresholds [APPLICATION 34] ErrorThresholds OPTIONAL\r\n\t}\r\n\r\n\t-- -------------------------------------------- --\r\n\t-- Notifications - Touch data\t\t\t\t\t--\r\n\t-- -------------------------------------------- --\r\n\r\n\tNotification ::= SEQUENCE {\r\n\t\tdeviceAddress DeviceAddress OPTIONAL,\r\n\t\t-- Present when more than one device is available in system.\r\n\t\t-- Indicates the source of the notification message.\r\n\t\t\r\n\t\tnotificationMessage CHOICE {\r\n\t\t\tsingleTouch TouchNotification,\r\n\t\t\t-- This will be used in cases where only single touch is available.\r\n\r\n\t\t\ttouchNotifications [0] SEQUENCE (SIZE(0..127)) OF TouchNotification,\r\n\t\t\t-- In cases where multi touch of 2 or more touches will be available\r\n\t\t\t-- this sequence will be used.\r\n\r\n\t\t\t-- The payload, sizes and offsets for each TouchNotification\r\n\t\t\t-- is described by the TouchDescriptor bit string\r\n\r\n\t\t\tbootCompleteNotification BootCompleteNotification,\r\n\t\t\t-- BootCompleteNotification is sent upon system start,\r\n\t\t\t-- see definition of BootCompleteNotification further down\r\n\t\t\t-- to see what flags and states are reported\r\n\r\n\t\t\tledLevels [APPLICATION 11] RawData,\r\n\t\t\tcoreSignals  [APPLICATION 14] RawData,\r\n\t\t\tairSignals  [APPLICATION 17] Vector,\r\n\t\t\tairMaximum  [1] Vector,\r\n\t\t\tstatusNotification StatusNotification,\r\n\t\t\tgestureNotifications [2] SEQUENCE (SIZE(0..127)) OF GestureNotification\r\n\t\t},\r\n\r\n\t\tnotificationTimestamp Timestamp OPTIONAL,\r\n\t\t-- For notifications which have use of temporal data\r\n\t\t-- the notification contains a timestamp\r\n\t\t\r\n\t\tnotificationLatency Latency OPTIONAL\r\n\t\t-- For notifications which have use of temporal data\r\n\t\t-- the notification contains a processing latency value.\r\n\t\t-- Currently this is only used for TouchNotification.\r\n\t\t-- For touchNotification, the latency time starts from the\r\n\t\t-- beginning of the first frame after a touch object\r\n\t\t-- presented in active area, and ends at the current touch\r\n\t\t-- notification encoded.\r\n\t}\r\n\r\n\t-- -------------------------------------------- --\r\n\t-- Primitive Data Types\t\t\t\t\t\t\t--\r\n\t-- -------------------------------------------- --\r\n\r\n\tDeviceAddress ::= [APPLICATION 0] OCTET STRING (SIZE (2))\r\n\t-- Addressing information used when multiple touch devices are present\r\n\t-- in the system.\r\n\t-- Byte0 - deviceType, Byte1 - deviceIndex\r\n\t-- DeviceTypes:\t0x00\t-\tPlatform\r\n\t--\t\t\t\t0x01\t-\tzForce Core\r\n\t--\t\t\t\t0x02\t-\tzForce Air\r\n\t--\t\t\t\t0x03\t-\tzForce Plus\r\n\t--\t\t\t\t0x04\t-\tLighting devices\r\n\r\n\tTouchDescriptor ::= [APPLICATION 1] BIT STRING\r\n\t{\r\n\t-- Bitmask descriptor outlining the payload each\r\n\t-- TouchNotification contains.\r\n\t-- Name (bit)\t\t\t-  Description\t\t- size\t\t- comment\r\n\t\tid (0),\t\t\t\t-- Touch Identifier\t- 1 byte\r\n\t\tevent (1),\t\t\t-- Up/Down/Move\t\t- 1 byte\t- 0=Down; 1=Move; 2=Up; 3=Invalid; 4=Ghost\r\n\t\tloc-x-byte1 (2),\t-- X coordinate\t\t- 1 byte\r\n\t\tloc-x-byte2 (3),\t-- X expanded\t\t- 1 byte\t- for higher precision\r\n\t\tloc-x-byte3 (4),\t-- X expanded\t\t- 1 byte\t- for higher precision\r\n\t\tloc-y-byte1 (5),\t-- Y coordinate\t\t- 1 byte\r\n\t\tloc-y-byte2 (6),\t-- Y expanded\t\t- 1 byte\t- for higher precision\r\n\t\tloc-y-byte3 (7),\t-- Y expanded\t\t- 1 byte\t- for higher precision\r\n\t\tloc-z-byte1 (8),\t-- Z coordinate\t\t- 1 byte\r\n\t\tloc-z-byte2 (9),\t-- Z expanded\t\t- 1 byte\t- for higher precision\r\n\t\tloc-z-byte3 (10),\t-- Z expanded\t\t- 1 byte\t- for higher precision\r\n\t\tsize-x-byte1 (11),\t-- X size\t\t\t- 1 byte\r\n\t\tsize-x-byte2 (12),\t-- X size\t\t\t- 1 byte\t- for higher precision\r\n\t\tsize-x-byte3 (13),\t-- X size\t\t\t- 1 byte\t- for higher precision\r\n\t\tsize-y-byte1 (14),\t-- Y size\t\t\t- 1 byte\r\n\t\tsize-y-byte2 (15),\t-- Y size\t\t\t- 1 byte\t- for higher precision\r\n\t\tsize-y-byte3 (16),\t-- Y size\t\t\t- 1 byte\t- for higher precision\r\n\t\tsize-z-byte1 (17),\t-- Z size\t\t\t- 1 byte\r\n\t\tsize-z-byte2 (18),\t-- Z size\t\t\t- 1 byte\t- for higher precision\r\n\t\tsize-z-byte3 (19),\t-- Z size\t\t\t- 1 byte\t- for higher precision\r\n\t\torientation (20),\t-- Orientation\t\t- 1 byte\t- Hand orientation\r\n\t\tconfidence (21),\t-- Confidence\t\t- 1 byte\r\n\t\tpressure (22)\t\t-- Pressure\t\t\t- 1 byte\r\n\t}\r\n\t-- Total maximum size:    23 bytes per touch\r\n\r\n\tTouchNotification ::= [APPLICATION 2] OCTET STRING\r\n\t-- Binary payload with content as outlined by TouchDescriptor\r\n\r\n\tTimestamp ::= [APPLICATION 24] INTEGER\r\n\t-- Timestamps for general use\r\n\t\r\n\tLatency ::= [APPLICATION 35] INTEGER\r\n\t-- Latency value for measurement use. Payload value is in millisecond unit.\r\n\t\r\n\t-- List of known ASIC types\r\n\tAsicType ::= INTEGER {\r\n\t\tnn1001 (1),\r\n\t\tnn1002 (2),\r\n\t\tnn1003 (3)\r\n\t}\r\n\r\n\t-- Addressing method for storage areas\r\n\tStorageIdentifier ::= INTEGER (0..127)\r\n\r\n\t-- Explicit notification for integers that\r\n\t-- contains signed values\r\n\tSignedInteger ::= INTEGER\r\n\r\n\t-- LED and PD placement types\r\n\tLedPdPlacement ::= INTEGER {\r\n\t\tpdFirstPdLast (0),\r\n\t\tpdFirstLedLast (1),\r\n\t\tledFirstPdLast (2),\r\n\t\tledFirstLedLast (3)\r\n\t}\r\n\t\r\n\t-- -------------------------------------------- --\r\n\t-- Constructed Data Types\t\t\t\t\t\t--\r\n\t-- -------------------------------------------- --\r\n\r\n\tGestureNotification ::= [APPLICATION 4] SEQUENCE {\r\n\t\tgestureStatus [0] INTEGER {\r\n\t\t\tdetection (0),\t-- New gesture detected\r\n\t\t\tupdate (1),\t\t-- Update of previously detected gesture\r\n\t\t\tstop (2)\t\t-- Final update for previously detected gesture\r\n\t\t},\r\n\r\n\t\t-- Unique identifier for the gesture notification.\r\n\t\t-- If status is detection the first unoccupied ID is used,\r\n\t\t-- otherwise the ID is related to a previously detected gesture.\r\n\t\tgestureIdentifier [1] INTEGER OPTIONAL,\r\n\r\n\t\tgestureType [2] INTEGER {\r\n--\t\t\tType\t\t\t\tContinuous/Single Shot\tGeneric/Specific case\tiOS Equivalent\t\t\tAndroid equivalent\r\n\t\t\ttap (0),\t\t--\tSingle Shot\t\t\t\tGeneric\t\t\t\t\tUITapGesture\t\t\tonDown / onSingleTapUp / onDoubleTap (GestureDetector)\r\n\t\t\tlongPress (1),\t--\tContinuous\t\t\t\tGeneric\t\t\t\t\tUILongPressGesture\t\tonLongPress (GestureDetector)\r\n\t\t\tswipe (2),\t\t--\tContinuous\t\t\t\tGeneric\t\t\t\t\tUISwipeGesture\t\t\tonFling (GestureDetector)\r\n\t\t\tpan (3),\t\t--\tContinuous\t\t\t\tGeneric\t\t\t\t\tUIPanGesture\t\t\tonScroll (GestureDetector)\r\n\t\t\tpinch (4),\t\t--\tContinuous\t\t\t\tGeneric\t\t\t\t\tUIPinchGesture\t\t\tonScale (ScaleGestureDetector)\r\n\t\t\trotation (5),\t--\tContinuous\t\t\t\tGeneric\t\t\t\t\tUIRotationGesture\t\tNot available\r\n\t\t\tgrab (6),\t\t--\tContinuous\t\t\t\tSteering Wheel specific\tN/A\t\t\t\t\t\tN/A\r\n\t\t\trimTap (7)\t\t--\tSingle Shot\t\t\t\tSteering Wheel specific\tN/A\t\t\t\t\t\tN/A\r\n\t\t},\r\n\r\n\t\toriginX [3] INTEGER OPTIONAL,\r\n\t\toriginY [4] INTEGER OPTIONAL,\r\n\r\n\t\tsizeX [5] INTEGER OPTIONAL,\r\n\t\tsizeY [6] INTEGER OPTIONAL,\r\n\t\t\r\n\t\tdeltaX [7] SignedInteger OPTIONAL,\r\n\t\tdeltaY [8] SignedInteger OPTIONAL\r\n\t}\r\n\t\r\n\t-- Startup notification, indicating reset causes, proper ASIC\r\n\t-- function and global state before reset, in case of watchdog reset\r\n\tBootCompleteNotification ::= [APPLICATION 3] SEQUENCE {\r\n\t\tasicStatus [0] INTEGER\r\n\t\t{\r\n\t\t\tasicExists (0),\r\n\t\t\tasicNotFound (1)\r\n\t\t},\r\n\t\tresetSource [1] BIT STRING\r\n\t\t{\r\n\t\t\tpowerUp (0),\r\n\t\t\trstLow (1),\r\n\t\t\twatchdogExpired (2),\r\n\t\t\tflashViolation (3),\r\n\t\t\tnonMaskableInterrupt (4)\r\n\t\t},\r\n\t\tglobalState [2] BIT STRING\r\n\t\t{\r\n\t\t\twatchDogExpiredWaitingForASICIRQ (0),\r\n\t\t\twatchDogExpiredWaitingForSPITXComm (1),\r\n\t\t\twatchDogExpiredWaitingForSPIRXComm (2),\r\n\t\t\twatchDogExpiredUnhandledIRQ (3),\r\n\t\t\tasicFlaggedUnexpectedPOR (4),\r\n\t\t\tasicFlaggedTSDFault (5),\r\n\t\t\tasicFlaggedVBGFault (6),\r\n\t\t\tasicFlaggedMemOverFlow (7)\r\n\t\t}\r\n\t}\r\n\r\n\tRawData ::= SEQUENCE OF VariableSizeIntegerString\r\n\t\r\n\tVariableSizeIntegerString ::= CHOICE\r\n\t{\r\n\t\tuint8 [0] OCTET STRING,\r\n\t\tuint12 [1] OCTET STRING,\r\n\t\tuint16 [2] OCTET STRING\r\n\t}\r\n\t\r\n\t-- A sequence containing the results for all LEDs and PDs\r\n\t-- of an Open Short test on an ASIC\r\n\tOpenShortInformation ::= [APPLICATION 23] SEQUENCE {\r\n\t\tasicIndex [0] INTEGER OPTIONAL,\t-- Which ASIC the results belong to.\r\n\t\tledOpen [1] BIT STRING,\t\t-- Bit mask stating which LEDs indicate a open fault\r\n\t\tledShort [2] BIT STRING,\t-- Bit mask stating which LEDs indicate a short fault\r\n\t\tpdOpen [3] BIT STRING OPTIONAL,\t\t-- Bit mask stating which PDs indicate a open fault\r\n\t\t-- NN1001 does not support PD open checks, so this may be omitted\r\n\t\tpdShort [4] BIT STRING\t\t-- Bit mask stating which PDs indicate a short fault\r\n\t}\r\n\r\n\t-- For devices providing reading and writing of data to volatile or non-volatile\r\n\t-- memory, each available area that can be addressed will be described using a\r\n\t-- StorageArea sequence for each area.\r\n\tStorageArea ::= SEQUENCE {\r\n\t\tstorageIdentifier [0] StorageIdentifier,\r\n\t\t-- Integer index required to pinpoint the specific storage area, to allow\r\n\t\t-- for multiple storage areas associated with the same device.\r\n\t\tstorageDescription [1] IA5String (SIZE(0..32)) OPTIONAL,\r\n\t\t-- Description about the intended usage for this storage,\r\n\t\t-- e.g. Calibration, Configuration etc.\r\n\t\tstorageType [2] INTEGER {\r\n\t\t\trom (0),\r\n\t\t\tflash (1),\r\n\t\t\teeprom (2),\r\n\t\t\tram (3),\r\n\t\t\tasicRegister (4),\r\n\t\t\tasicSram (5)\r\n\t\t} OPTIONAL,\r\n\t\tstorageLocation [3] INTEGER {\r\n\t\t\tinternal (0), -- e.g. MCU flash memory\r\n\t\t\texternal (1), -- e.g. external flash chip\r\n\t\t\tremovable (2) -- e.g. SD card\r\n\t\t} OPTIONAL,\r\n\t\tstorageSize [4] INTEGER\r\n\t\t-- Total size of the storage area.\r\n\t\t-- Adressable space will always be 0 <= address < storageSize\r\n\r\n--\t\tdeleteLevel [5] INTEGER {\r\n--\t\t\tbyteLevel (0),\r\n--\t\t\tblockLevel (1)\r\n--\t\t} OPTIONAL,\r\n\t\t-- If deletions for this storage area is done on\r\n\t\t-- block level, with lesser granularity than a byte\r\n\t\t-- it is indicated by deleteLevel\r\n\r\n--\t\tblockSize [6] INTEGER OPTIONAL,\r\n\t\t-- If deleteLevel is indeed an block level operation\r\n\t\t-- the block size is necessary to know starting addresses\r\n\t\t-- and block sizes of affected data.\r\n\r\n\t}\t\r\n\r\n\tVector ::= SEQUENCE {\r\n\t\tdataType [0] ENUMERATED {\r\n\t\t\tuint8 (0),\r\n\t\t\tint8 (1),\r\n\t\t\tuint12 (2),\r\n\t\t\tint12 (3),\r\n\t\t\tuint16 (4),\r\n\t\t\tint16 (5),\r\n\t\t\tuint24 (6),\r\n\t\t\tint24 (7),\r\n\t\t\tuint32 (8),\r\n\t\t\tint32 (9),\r\n\t\t\tuint64 (10),\r\n\t\t\tint64 (11),\r\n\t\t\tfloat (12),\r\n\t\t\tdouble (13)\r\n\t\t} OPTIONAL,\r\n\t\tshape [1] SEQUENCE OF [0] INTEGER OPTIONAL,\r\n\t\t-- data format:\r\n\t\t-- Row major order (C)\r\n\t\t-- Big endian. When LSB is a partial octet, it is in the most significant bits\r\n\t\t-- no padding\r\n\t\tdata [2] OCTET STRING OPTIONAL\r\n\t}\r\n\t\r\n\tStatusNotification ::= [APPLICATION 27] SEQUENCE {\r\n\t\t-- Hardware Error detected. This only signals that it has occured, not what it is.\r\n\t\t-- That is read seperately.\r\n\t\thardwareError [0] NULL OPTIONAL,\r\n\t\t\r\n\t\t-- True if the device is receiving touches on a single axis. This can be due to\r\n\t\t-- for example a user touching the outside of the light guide, thereby changing\r\n\t\t-- the reflectiveness of the mirror.\r\n\t\t-- False if it is no longer detected.\r\n\t\tsingleAxisTouchError [1] BOOLEAN OPTIONAL,\r\n\r\n\t\t-- True if touches are no longer detected and sent.\r\n\t\t-- False if touches are now sent normally.\r\n\t\ttouchesIgnored [2] BOOLEAN OPTIONAL,\r\n\t\t\r\n\t\t-- True if any signal is lower than predefined minimum level.\r\n\t\t-- False if all the signals are back to normal level.\r\n\t\tlowSignalError [3] BOOLEAN OPTIONAL,\r\n\t\t\r\n\t\t-- Hardware Error Detected. This also contains specifics about the error.\r\n\t\t-- Replaces hardwareError above.\r\n\t\terror [4] ErrorNotification OPTIONAL,\r\n\r\n\t\t-- Error Log Transfer.\r\n\t\terrorLog [5] ErrorLog OPTIONAL\r\n\t}\r\n\r\n\tErrorInformation ::= SEQUENCE {\r\n\t\tsystemTests [0] SystemErrorInformation OPTIONAL,\r\n\t\tasics [1] SEQUENCE OF [0] AsicInformation OPTIONAL,\r\n\t\tvisibleLedDrivers [2] SEQUENCE OF [0] VisibleLedDriverInformation OPTIONAL\r\n\t}\r\n\t\r\n\tSystemErrorInformation ::= SEQUENCE {\r\n\t\tcpu [0] ErrorFlags OPTIONAL,\t\t\t\t\t-- CPU Error Detected.\r\n\t\tinternalWatchdog [1] ErrorFlags OPTIONAL,\t\t-- Internal Watchdog\r\n\t\tflashProgramChecksum [2] ErrorFlags OPTIONAL,\t-- Flash Program Checksum\r\n\t\tram [3] ErrorFlags OPTIONAL,\t\t\t\t\t-- RAM\r\n\t\tpll [4] ErrorFlags OPTIONAL,\t\t\t\t\t-- Phase Locked Loop\r\n\t\tstartupTestChecksum2 [5] ErrorFlags OPTIONAL,\t-- Startup Test Checksum 2\r\n\t\tlsi [6] ErrorFlags OPTIONAL,\t\t\t\t\t-- Low Speed Internal Clock\r\n\t\thse [7] ErrorFlags OPTIONAL,\t\t\t\t\t-- High Speed External Clock\r\n\t\thseSwitch [8] ErrorFlags OPTIONAL,\t\t\t\t-- High Speed External Clock Switch\r\n\t\texternalClockSource [9] ErrorFlags OPTIONAL,\t-- External Clock Source\r\n\t\tabnormalTermination [10] ErrorFlags OPTIONAL,\t-- Abnormal Termination of Clock Test\r\n\t\ttestFlowCheckpoint1 [11] ErrorFlags OPTIONAL,\t-- Test Flow Checkpoint 1\r\n\t\ttestFlowCheckpoint2 [12] ErrorFlags OPTIONAL,\t-- Test Flow Checkpoint 2\r\n\t\tnvmLogFull [13] ErrorFlags OPTIONAL,\t\t\t-- NVM Log Full\r\n\t\tnvmFlashCorrupt [14] ErrorFlags OPTIONAL,\t\t-- NVM Log Flash Corrupt\r\n\t\tstackOverflow [15] ErrorFlags OPTIONAL,\t\t\t-- Stack Overflow\r\n\t\thardFault [16] ErrorFlags OPTIONAL,\t\t\t\t-- Hard Fault\r\n\t\tlogicError [17] ErrorFlags OPTIONAL,\t\t\t-- Software triggered logic errors. assert() in the firmware.\r\n\t\tasicSyncSwitch [18] ErrorFlags OPTIONAL\t\t\t-- ASIC sync switch test failed\r\n\t}\r\n\r\n\tErrorFlags ::= BIT STRING {\r\n\t\tapplicable (0),\t\t-- Test has been run.\r\n\t\tqualified (1) \t\t-- Error is qualified.\r\n\t}\r\n\r\n\tAsicInformation ::= SEQUENCE {\r\n\t\tindex [0] INTEGER OPTIONAL,\r\n\t\tirLeds [1] DiodeComponentInformation OPTIONAL,\r\n\t\tirPds [2] DiodeComponentInformation OPTIONAL,\r\n\t\toffline [3] ErrorFlags OPTIONAL,\t\t\t\t\t-- ASIC Offline.\r\n\t\ttimeout [4] ErrorFlags OPTIONAL,\t\t\t\t\t-- ASIC Timeout.\r\n\t\toverTemperatureExternalSensor [5] ErrorFlags OPTIONAL,\t-- External Temperature Sensor Overtemperature.\r\n\t\tporFault [6] ErrorFlags OPTIONAL,\t\t\t\t\t-- POR Fault.\r\n\t\tanalogOrVbgFault [7] ErrorFlags OPTIONAL,\t\t\t-- Analogue circuits reporting Vref drop or VBG Fault.\r\n\t\tmemoryOverflow [8] ErrorFlags OPTIONAL,\t\t\t\t-- Memory Overflow, Storage memory full.\r\n\t\tinternalThermalShutdown [9] ErrorFlags OPTIONAL,\t-- Internal sensor tripped Thermal Shutdown.\r\n\t\tproxResultOverflow [10] ErrorFlags OPTIONAL\t\t\t-- PROX instruction result out of range.\r\n\t}\r\n\t\r\n\tVisibleLedDriverInformation ::= SEQUENCE {\r\n\t\tindex [0] INTEGER OPTIONAL,\r\n\t\tvisibleLeds [1] DiodeComponentInformation OPTIONAL,\r\n\t\toffline [2] ErrorFlags OPTIONAL\r\n\t}\r\n\r\n\tDiodeComponentInformation ::= SEQUENCE {\r\n\t\tcomponentOpen [0] BIT STRING OPTIONAL,\r\n\t\tcomponentOpenApplicable [1] BIT STRING OPTIONAL,\r\n\t\tcomponentShort [2] BIT STRING OPTIONAL,\r\n\t\tcomponentShortApplicable [3] BIT STRING OPTIONAL\r\n\t}\r\n\t\r\n\tErrorLog ::= SEQUENCE {\r\n\t\tsessionIdentifier [0] INTEGER OPTIONAL,\r\n\t\ttimestamp [1] Timestamp OPTIONAL,\r\n\t\tisLastEntry [2] NULL OPTIONAL,\r\n\t\terrorEntry [3] ErrorEntry OPTIONAL,\r\n\t\tresetCause [4] INTEGER {\r\n\t\t\thard (0),\t\t\t\t\t-- Reset pin\r\n\t\t\tsoft (1),\t\t\t\t\t-- Software reset\r\n\t\t\tinternalWatchdog (2),\t\t-- Internal Watchdog\r\n\t\t\tbrownOut (3)\t\t\t\t-- Power loss\r\n\t\t} OPTIONAL\r\n\t}\r\n\t\r\n\tErrorNotification ::= SEQUENCE {\r\n\t\terrorEntry [0] ErrorEntry OPTIONAL\r\n\t}\r\n\t\r\n\t-- Can either be none or one.\r\n\tErrorEntry ::= CHOICE {\r\n\t\tsystemTest [0] SystemErrorInformation,\r\n\t\tasic [1] AsicErrorEntry,\r\n\t\tvisibleLedDriver [2] VisibleLedDriverErrorEntry\r\n\t}\r\n\t\r\n\t-- For a desciption of error types, check AsicInformation above.\r\n\tAsicErrorEntry ::= SEQUENCE {\r\n\t\tindex [0] INTEGER OPTIONAL,\r\n\t\tirLedIndex [1] INTEGER OPTIONAL,\r\n\t\tirPdIndex [2] INTEGER OPTIONAL,\r\n\t\topen [3] BOOLEAN OPTIONAL,\r\n\t\tshort [4] BOOLEAN OPTIONAL,\r\n\t\toffline [5] BOOLEAN OPTIONAL,\r\n\t\ttimeout [6] BOOLEAN OPTIONAL,\r\n\t\toverTemperatureExternalSensor [7] BOOLEAN OPTIONAL,\r\n\t\tporFault [8] BOOLEAN OPTIONAL,\r\n\t\tanalogOrVbgFault [9] BOOLEAN OPTIONAL,\r\n\t\tmemoryOverflow [10] BOOLEAN OPTIONAL,\r\n\t\tinternalThermalShutdown [11] BOOLEAN OPTIONAL,\r\n\t\tproxResultOverflow [12] BOOLEAN OPTIONAL\r\n\t}\r\n\r\n\tVisibleLedDriverErrorEntry ::= SEQUENCE {\r\n\t\tindex [0] INTEGER OPTIONAL,\r\n\t\tledChannelIndex [1] INTEGER OPTIONAL,\r\n\t\topen [2] BOOLEAN OPTIONAL,\r\n\t\tshort [3] BOOLEAN OPTIONAL,\r\n\t\toffline [4] BOOLEAN OPTIONAL\r\n\t}\r\n\t\r\n\t-- Exposes system Error Thresholds. Structures based on (and used together with)\r\n\t-- ErrorInformation.\r\n\tErrorThresholds ::= SEQUENCE {\r\n\t\tasicsThresholds [0] SEQUENCE OF [0] AsicThresholds OPTIONAL,\r\n\t\tvisibleLedDriversThresholds [1] SEQUENCE OF [0] VisibleLedDriverThresholds OPTIONAL\r\n\t}\r\n\t\r\n\tAsicThresholds ::= SEQUENCE {\r\n\t\tasicIdentifier [0] INTEGER OPTIONAL,\r\n\t\tirLedOpenThresholds [1] Thresholds OPTIONAL,\r\n\t\tirLedShortThresholds [2] Thresholds OPTIONAL,\r\n\t\tirPdOpenThresholds [3] Thresholds OPTIONAL,\r\n\t\tirPdShortThresholds [4] Thresholds OPTIONAL\r\n\t}\r\n\t\r\n\tVisibleLedDriverThresholds ::= SEQUENCE {\r\n\t\tvisibleLedDriverIdentifier [0] INTEGER OPTIONAL,\r\n\t\tvisibleLedOpenThresholds [1] Thresholds OPTIONAL,\r\n\t\tvisibleLedShortThresholds [2] Thresholds OPTIONAL\r\n\t}\r\n\t\r\n\tThresholds ::= SEQUENCE {\r\n\t\tlow [0] INTEGER OPTIONAL,\r\n\t\thigh [1] INTEGER OPTIONAL\r\n\t}\r\nEND\r\n\r\n/*\r\n  _____ _                            _                 \r\n / ____| |                          | |                \r\n| |    | |__   __ _ _ __   __ _  ___| |     ___   __ _ \r\n| |    | '_ \\ / _` | '_ \\ / _` |/ _ \\ |    / _ \\ / _` |\r\n| |____| | | | (_| | | | | (_| |  __/ |___| (_) | (_| |\r\n \\_____|_| |_|\\__,_|_| |_|\\__, |\\___|______\\___/ \\__, |\r\n                           __/ |                  __/ |\r\n                          |___/                  |___/ \r\n----------------------------------------------------------------------\r\n\r\n* Add NN1003 to list of ASIC Types\r\n* Add asicSram as storageType to easily discern NN1002 and NN1003 specific\r\n  storage areas.\r\n* Add gestures as operationMode parameter, to control transmission of\r\n  gesture data.\r\n* Make LedPdPlacement into its own datatype, instead of inline definition.\r\n\r\n2016-04-26 - Protocol version 1.4\r\n* Protocol cleanup and simplification by use of EXTENSIBILITY IMPLIED\r\n* To avoid conflict due to EXTENSIBILITY IMPLIED the sub CHOICE for\r\n  touch in notificationMessage has been eliminated.\r\n* Add detectionMode to deviceConfiguration\r\n* Add optional BuildInfo to platformInformation\r\n* Command for clearing error counters added.\r\n* Add delta values for gesture notifications.\r\n* Add ErrorInformation, ErrorLog and ErrorNotification.\r\n* Add ErrorThreshold getting/setting.\r\n* Add Latency datatype and add notificationLatency to Notification\r\n\r\n2016-03-02 - Protocol version 1.3\r\n* Protocol added for gesture features.\r\n* Add a StatusNotification message.\r\n* Add HardwareError status notification.\r\n* Add SingleAxisTouchError status notification for when someone\r\n  touches the outside of a lightguide and it affects touches.\r\n* Add TouchesIgnored status notification for when the unit will not\r\n  be providing touches.\r\n* Add lowSignalError to StatusNotification.\r\n* Add new lowSignal message.\r\n* Make Vector members optional.\r\n\r\n2016-01-19 - Protocol version 1.2\r\n* Add support for visual LED feedback from RGB LEDs.\r\n* Add ASIC registers as storage type\r\n* Added optional MCU serial number to platformInformation\r\n* Add more complex singal data definition used when the standard\r\n  matrix is not the best way. This consists of the new signalsLayout\r\n  request and the airSignals notification.\r\n* Add support for reporting maximum signal map.\r\n\r\n2015-11-26 - Protocol version 1.1\r\n* Renamed numberOfAxes and signalsPerAxis to numberOfSignalAxes and\r\n  signalsPerSignalAxis to discern between physical and data related axes.\r\n* Add LED and PD configuration info to deviceInstanceInformation.\r\n* Added support for generic data storage\r\n* Added indicator for used calibration storage area to diagnosticSettings\r\n* Add MemOverFlow error to global state flags of BootComplete\r\n\r\n2015-10-20 - Protocol version 1.0\r\n* Initial release and feature freeze of protocol.\r\n* Full support for Core Devices on platform v7.\r\n\r\n*/\r\n\r\n```\r\n\r\nnn_parser.py:\r\n```python\r\n# Auto-generated by asn1ate on 2017-08-24 12:49:36.289000\r\nfrom pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful\r\n\r\n\r\nclass Latency(univ.Integer):\r\n    pass\r\n\r\n\r\nLatency.tagSet = univ.Integer.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 35))\r\n\r\n\r\nclass ErrorFlags(univ.BitString):\r\n    pass\r\n\r\n\r\nErrorFlags.namedValues = namedval.NamedValues(\r\n    ('applicable', 0),\r\n    ('qualified', 1)\r\n)\r\n\r\n\r\nclass SystemErrorInformation(univ.Sequence):\r\n    pass\r\n\r\n\r\nSystemErrorInformation.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('cpu', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('internalWatchdog', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('flashProgramChecksum', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('ram', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('pll', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n    namedtype.OptionalNamedType('startupTestChecksum2', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n    namedtype.OptionalNamedType('lsi', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n    namedtype.OptionalNamedType('hse', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n    namedtype.OptionalNamedType('hseSwitch', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),\r\n    namedtype.OptionalNamedType('externalClockSource', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),\r\n    namedtype.OptionalNamedType('abnormalTermination', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10))),\r\n    namedtype.OptionalNamedType('testFlowCheckpoint1', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),\r\n    namedtype.OptionalNamedType('testFlowCheckpoint2', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),\r\n    namedtype.OptionalNamedType('nvmLogFull', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),\r\n    namedtype.OptionalNamedType('nvmFlashCorrupt', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),\r\n    namedtype.OptionalNamedType('stackOverflow', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),\r\n    namedtype.OptionalNamedType('hardFault', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 16))),\r\n    namedtype.OptionalNamedType('logicError', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),\r\n    namedtype.OptionalNamedType('asicSyncSwitch', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18)))\r\n)\r\n\r\n\r\nclass VisibleLedDriverErrorEntry(univ.Sequence):\r\n    pass\r\n\r\n\r\nVisibleLedDriverErrorEntry.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('index', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('ledChannelIndex', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('open', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('short', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('offline', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n)\r\n\r\n\r\nclass AsicErrorEntry(univ.Sequence):\r\n    pass\r\n\r\n\r\nAsicErrorEntry.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('index', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('irLedIndex', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('irPdIndex', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('open', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('short', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n    namedtype.OptionalNamedType('offline', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n    namedtype.OptionalNamedType('timeout', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n    namedtype.OptionalNamedType('overTemperatureExternalSensor', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n    namedtype.OptionalNamedType('porFault', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),\r\n    namedtype.OptionalNamedType('analogOrVbgFault', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),\r\n    namedtype.OptionalNamedType('memoryOverflow', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10))),\r\n    namedtype.OptionalNamedType('internalThermalShutdown', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),\r\n    namedtype.OptionalNamedType('proxResultOverflow', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12)))\r\n)\r\n\r\n\r\nclass ErrorEntry(univ.Choice):\r\n    pass\r\n\r\n\r\nErrorEntry.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('systemTest', SystemErrorInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),\r\n    namedtype.NamedType('asic', AsicErrorEntry().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n    namedtype.NamedType('visibleLedDriver', VisibleLedDriverErrorEntry().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2)))\r\n)\r\n\r\n\r\nclass Timestamp(univ.Integer):\r\n    pass\r\n\r\n\r\nTimestamp.tagSet = univ.Integer.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 24))\r\n\r\n\r\nclass ErrorLog(univ.Sequence):\r\n    pass\r\n\r\n\r\nErrorLog.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('sessionIdentifier', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('timestamp', Timestamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('isLastEntry', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('errorEntry', ErrorEntry().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3))),\r\n    namedtype.OptionalNamedType('resetCause', univ.Integer(namedValues=namedval.NamedValues(('hard', 0), ('soft', 1), ('internalWatchdog', 2), ('brownOut', 3))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n)\r\n\r\n\r\nclass ErrorNotification(univ.Sequence):\r\n    pass\r\n\r\n\r\nErrorNotification.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('errorEntry', ErrorEntry().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0)))\r\n)\r\n\r\n\r\nclass StatusNotification(univ.Sequence):\r\n    pass\r\n\r\n\r\nStatusNotification.tagSet = univ.Sequence.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 27))\r\nStatusNotification.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('hardwareError', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('singleAxisTouchError', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('touchesIgnored', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('lowSignalError', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('error', ErrorNotification().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),\r\n    namedtype.OptionalNamedType('errorLog', ErrorLog().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 5)))\r\n)\r\n\r\n\r\nclass Vector(univ.Sequence):\r\n    pass\r\n\r\n\r\nVector.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('dataType', univ.Enumerated(namedValues=namedval.NamedValues(('uint8', 0), ('int8', 1), ('uint12', 2), ('int12', 3), ('uint16', 4), ('int16', 5), ('uint24', 6), ('int24', 7), ('uint32', 8), ('int32', 9), ('uint64', 10), ('int64', 11), ('float', 12), ('double', 13))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('shape', univ.SequenceOf(componentType=univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('data', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n)\r\n\r\n\r\nclass VariableSizeIntegerString(univ.Choice):\r\n    pass\r\n\r\n\r\nVariableSizeIntegerString.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('uint8', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.NamedType('uint12', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.NamedType('uint16', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n)\r\n\r\n\r\nclass RawData(univ.SequenceOf):\r\n    pass\r\n\r\n\r\nRawData.componentType = VariableSizeIntegerString()\r\n\r\n\r\nclass BootCompleteNotification(univ.Sequence):\r\n    pass\r\n\r\n\r\nBootCompleteNotification.tagSet = univ.Sequence.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 3))\r\nBootCompleteNotification.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('asicStatus', univ.Integer(namedValues=namedval.NamedValues(('asicExists', 0), ('asicNotFound', 1))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.NamedType('resetSource', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.NamedType('globalState', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n)\r\n\r\n\r\nclass TouchNotification(univ.OctetString):\r\n    pass\r\n\r\n\r\nTouchNotification.tagSet = univ.OctetString.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 2))\r\n\r\n\r\nclass DeviceAddress(univ.OctetString):\r\n    pass\r\n\r\n\r\nDeviceAddress.tagSet = univ.OctetString.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 0))\r\nDeviceAddress.subtypeSpec = constraint.ValueSizeConstraint(2, 2)\r\n\r\n\r\nclass SignedInteger(univ.Integer):\r\n    pass\r\n\r\n\r\nclass GestureNotification(univ.Sequence):\r\n    pass\r\n\r\n\r\nGestureNotification.tagSet = univ.Sequence.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 4))\r\nGestureNotification.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('gestureStatus', univ.Integer(namedValues=namedval.NamedValues(('detection', 0), ('update', 1), ('stop', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('gestureIdentifier', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.NamedType('gestureType', univ.Integer(namedValues=namedval.NamedValues(('tap', 0), ('longPress', 1), ('swipe', 2), ('pan', 3), ('pinch', 4), ('rotation', 5), ('grab', 6), ('rimTap', 7))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('originX', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('originY', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n    namedtype.OptionalNamedType('sizeX', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n    namedtype.OptionalNamedType('sizeY', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n    namedtype.OptionalNamedType('deltaX', SignedInteger().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n    namedtype.OptionalNamedType('deltaY', SignedInteger().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8)))\r\n)\r\n\r\n\r\nclass Notification(univ.Sequence):\r\n    pass\r\n\r\n\r\nNotification.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('deviceAddress', DeviceAddress()),\r\n    namedtype.NamedType('notificationMessage', univ.Choice(componentType=namedtype.NamedTypes(\r\n        namedtype.NamedType('singleTouch', TouchNotification()),\r\n        namedtype.NamedType('touchNotifications', univ.SequenceOf(componentType=TouchNotification()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.NamedType('bootCompleteNotification', BootCompleteNotification()),\r\n        namedtype.NamedType('ledLevels', RawData().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 11))),\r\n        namedtype.NamedType('coreSignals', RawData().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 14))),\r\n        namedtype.NamedType('airSignals', Vector().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 17))),\r\n        namedtype.NamedType('airMaximum', Vector().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n        namedtype.NamedType('statusNotification', StatusNotification()),\r\n        namedtype.NamedType('gestureNotifications', univ.SequenceOf(componentType=GestureNotification()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n    ))\r\n    ),\r\n    namedtype.OptionalNamedType('notificationTimestamp', Timestamp()),\r\n    namedtype.OptionalNamedType('notificationLatency', Latency())\r\n)\r\n\r\n\r\nclass LedPdPlacement(univ.Integer):\r\n    pass\r\n\r\n\r\nLedPdPlacement.namedValues = namedval.NamedValues(\r\n    ('pdFirstPdLast', 0),\r\n    ('pdFirstLedLast', 1),\r\n    ('ledFirstPdLast', 2),\r\n    ('ledFirstLedLast', 3)\r\n)\r\n\r\n\r\nclass DiodeComponentInformation(univ.Sequence):\r\n    pass\r\n\r\n\r\nDiodeComponentInformation.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('componentOpen', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('componentOpenApplicable', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('componentShort', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('componentShortApplicable', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3)))\r\n)\r\n\r\n\r\nclass VisibleLedDriverInformation(univ.Sequence):\r\n    pass\r\n\r\n\r\nVisibleLedDriverInformation.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('index', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('visibleLeds', DiodeComponentInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n    namedtype.OptionalNamedType('offline', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n)\r\n\r\n\r\nclass AsicInformation(univ.Sequence):\r\n    pass\r\n\r\n\r\nAsicInformation.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('index', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('irLeds', DiodeComponentInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n    namedtype.OptionalNamedType('irPds', DiodeComponentInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),\r\n    namedtype.OptionalNamedType('offline', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.OptionalNamedType('timeout', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n    namedtype.OptionalNamedType('overTemperatureExternalSensor', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n    namedtype.OptionalNamedType('porFault', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n    namedtype.OptionalNamedType('analogOrVbgFault', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n    namedtype.OptionalNamedType('memoryOverflow', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),\r\n    namedtype.OptionalNamedType('internalThermalShutdown', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),\r\n    namedtype.OptionalNamedType('proxResultOverflow', ErrorFlags().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10)))\r\n)\r\n\r\n\r\nclass ErrorInformation(univ.Sequence):\r\n    pass\r\n\r\n\r\nErrorInformation.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('systemTests', SystemErrorInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),\r\n    namedtype.OptionalNamedType('asics', univ.SequenceOf(componentType=AsicInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('visibleLedDrivers', univ.SequenceOf(componentType=VisibleLedDriverInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n)\r\n\r\n\r\nclass Thresholds(univ.Sequence):\r\n    pass\r\n\r\n\r\nThresholds.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('low', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('high', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))\r\n)\r\n\r\n\r\nclass VisibleLedDriverThresholds(univ.Sequence):\r\n    pass\r\n\r\n\r\nVisibleLedDriverThresholds.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('visibleLedDriverIdentifier', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('visibleLedOpenThresholds', Thresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n    namedtype.OptionalNamedType('visibleLedShortThresholds', Thresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2)))\r\n)\r\n\r\n\r\nclass AsicThresholds(univ.Sequence):\r\n    pass\r\n\r\n\r\nAsicThresholds.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('asicIdentifier', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('irLedOpenThresholds', Thresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n    namedtype.OptionalNamedType('irLedShortThresholds', Thresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),\r\n    namedtype.OptionalNamedType('irPdOpenThresholds', Thresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3))),\r\n    namedtype.OptionalNamedType('irPdShortThresholds', Thresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4)))\r\n)\r\n\r\n\r\nclass ErrorThresholds(univ.Sequence):\r\n    pass\r\n\r\n\r\nErrorThresholds.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('asicsThresholds', univ.SequenceOf(componentType=AsicThresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('visibleLedDriversThresholds', univ.SequenceOf(componentType=VisibleLedDriverThresholds().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))\r\n)\r\n\r\n\r\nclass OpenShortInformation(univ.Sequence):\r\n    pass\r\n\r\n\r\nOpenShortInformation.tagSet = univ.Sequence.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 23))\r\nOpenShortInformation.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('asicIndex', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.NamedType('ledOpen', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.NamedType('ledShort', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('pdOpen', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.NamedType('pdShort', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n)\r\n\r\n\r\nclass StorageIdentifier(univ.Integer):\r\n    pass\r\n\r\n\r\nStorageIdentifier.subtypeSpec = constraint.ValueRangeConstraint(0, 127)\r\n\r\n\r\nclass StorageArea(univ.Sequence):\r\n    pass\r\n\r\n\r\nStorageArea.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('storageIdentifier', StorageIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n    namedtype.OptionalNamedType('storageDescription', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n    namedtype.OptionalNamedType('storageType', univ.Integer(namedValues=namedval.NamedValues(('rom', 0), ('flash', 1), ('eeprom', 2), ('ram', 3), ('asicRegister', 4), ('asicSram', 5))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    namedtype.OptionalNamedType('storageLocation', univ.Integer(namedValues=namedval.NamedValues(('internal', 0), ('external', 1), ('removable', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n    namedtype.NamedType('storageSize', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n)\r\n\r\n\r\nclass AsicType(univ.Integer):\r\n    pass\r\n\r\n\r\nAsicType.namedValues = namedval.NamedValues(\r\n    ('nn1001', 1),\r\n    ('nn1002', 2),\r\n    ('nn1003', 3)\r\n)\r\n\r\n\r\nclass TouchDescriptor(univ.BitString):\r\n    pass\r\n\r\n\r\nTouchDescriptor.tagSet = univ.BitString.tagSet.tagImplicitly(tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 1))\r\nTouchDescriptor.namedValues = namedval.NamedValues(\r\n    ('id', 0),\r\n    ('event', 1),\r\n    ('loc-x-byte1', 2),\r\n    ('loc-x-byte2', 3),\r\n    ('loc-x-byte3', 4),\r\n    ('loc-y-byte1', 5),\r\n    ('loc-y-byte2', 6),\r\n    ('loc-y-byte3', 7),\r\n    ('loc-z-byte1', 8),\r\n    ('loc-z-byte2', 9),\r\n    ('loc-z-byte3', 10),\r\n    ('size-x-byte1', 11),\r\n    ('size-x-byte2', 12),\r\n    ('size-x-byte3', 13),\r\n    ('size-y-byte1', 14),\r\n    ('size-y-byte2', 15),\r\n    ('size-y-byte3', 16),\r\n    ('size-z-byte1', 17),\r\n    ('size-z-byte2', 18),\r\n    ('size-z-byte3', 19),\r\n    ('orientation', 20),\r\n    ('confidence', 21),\r\n    ('pressure', 22)\r\n)\r\n\r\n\r\nclass Message(univ.Sequence):\r\n    pass\r\n\r\n\r\nMessage.componentType = namedtype.NamedTypes(\r\n    namedtype.OptionalNamedType('deviceAddress', DeviceAddress()),\r\n    namedtype.OptionalNamedType('enable', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('disable', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('enable', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('reset', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 5))),\r\n    namedtype.OptionalNamedType('touchFormat', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('touchDescriptor', TouchDescriptor())\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 6))),\r\n    namedtype.OptionalNamedType('operationMode', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('detection', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('signals', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('ledLevels', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n        namedtype.OptionalNamedType('detectionHid', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n        namedtype.OptionalNamedType('gestures', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 7))),\r\n    namedtype.OptionalNamedType('frequency', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('finger', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('stylus', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('idle', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 8))),\r\n    namedtype.OptionalNamedType('resolution', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('x', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('y', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('z', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 9))),\r\n    namedtype.OptionalNamedType('openShort', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('openShortInfo', univ.SequenceOf(componentType=OpenShortInformation()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('errorCount', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 10))),\r\n    namedtype.OptionalNamedType('deviceInformation', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('platformInformation', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.OptionalNamedType('platformVersionMajor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.OptionalNamedType('platformVersionMinor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n            namedtype.OptionalNamedType('protocolVersionMajor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n            namedtype.OptionalNamedType('protocolVersionMinor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n            namedtype.OptionalNamedType('firmwareVersionMajor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n            namedtype.OptionalNamedType('firmwareVersionMinor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n            namedtype.OptionalNamedType('hardwareIdentifier', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n            namedtype.OptionalNamedType('hardwareVersion', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n            namedtype.OptionalNamedType('asicType', AsicType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),\r\n            namedtype.OptionalNamedType('numberOfAsics', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),\r\n            namedtype.OptionalNamedType('mcuUniqueIdentifier', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 32)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10))),\r\n            namedtype.OptionalNamedType('projectReference', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),\r\n            namedtype.OptionalNamedType('platformReference', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),\r\n            namedtype.OptionalNamedType('buildTime', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),\r\n            namedtype.OptionalNamedType('buildDate', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),\r\n        namedtype.OptionalNamedType('deviceInstanceInformation', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.OptionalNamedType('productVersionMajor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.OptionalNamedType('productVersionMinor', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n            namedtype.OptionalNamedType('physicalWidth', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n            namedtype.OptionalNamedType('physicalHeight', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n            namedtype.OptionalNamedType('numberOfSignalAxes', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 32767)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n            namedtype.OptionalNamedType('signalsPerSignalAxis', univ.SequenceOf(componentType=univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n            namedtype.OptionalNamedType('ledsPerPhysicalAxis', univ.SequenceOf(componentType=univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),\r\n            namedtype.OptionalNamedType('pdsPerPhysicalAxis', univ.SequenceOf(componentType=univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),\r\n            namedtype.OptionalNamedType('ledPdPlacementPerPhysicalAxis', univ.SequenceOf(componentType=LedPdPlacement().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 1))),\r\n        namedtype.OptionalNamedType('storageInformation', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.NamedType('storageAreas', univ.SequenceOf(componentType=StorageArea().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.NamedType('maxReadSize', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n            namedtype.NamedType('maxWriteSize', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),\r\n        namedtype.OptionalNamedType('lightingInformation', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.OptionalNamedType('numberOfLeds', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.OptionalNamedType('bitsPerLedChannel', univ.SequenceOf(componentType=univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 12))),\r\n    namedtype.OptionalNamedType('deviceCount', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('totalNumberOfDevices', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('coreDevices', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('airDevices', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n        namedtype.OptionalNamedType('plusDevices', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n        namedtype.OptionalNamedType('lightingDevices', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 15))),\r\n    namedtype.OptionalNamedType('status', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('counters', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.OptionalNamedType('currentContacts', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.OptionalNamedType('scanningCounter', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n            namedtype.OptionalNamedType('preparedTouchCounter', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n            namedtype.OptionalNamedType('sentTouchCounter', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n            namedtype.OptionalNamedType('invalidTouchCounter', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 13))),\r\n    namedtype.OptionalNamedType('resultCode', univ.Integer(namedValues=namedval.NamedValues(('ok', 0), ('fail', 1))).subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 20))),\r\n    namedtype.OptionalNamedType('deviceConfiguration', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('numberOfTrackedTouches', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('trackingMinDistanceMove', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 16383)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('subTouchActiveArea', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.OptionalNamedType('lowBoundX', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 16383)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.OptionalNamedType('lowBoundY', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 16383)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n            namedtype.OptionalNamedType('highBoundX', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 16383)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n            namedtype.OptionalNamedType('highBoundY', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 16383)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n            namedtype.OptionalNamedType('reverseX', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n            namedtype.OptionalNamedType('reverseY', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),\r\n        namedtype.OptionalNamedType('referenceSignalConfig', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n        namedtype.OptionalNamedType('sizeRestriction', univ.Sequence(componentType=namedtype.NamedTypes(\r\n            namedtype.OptionalNamedType('maxSizeEnabled', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n            namedtype.OptionalNamedType('maxSize', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n            namedtype.OptionalNamedType('minSizeEnabled', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n            namedtype.OptionalNamedType('minSize', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3)))\r\n        ))\r\n        .subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),\r\n        namedtype.OptionalNamedType('detectionMode', univ.Integer(namedValues=namedval.NamedValues(('default', 0), ('finger', 1), ('mergeTouches', 32), ('insensitiveFTIR', 64))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),\r\n        namedtype.OptionalNamedType('numberOfReportedTouches', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 19))),\r\n    namedtype.OptionalNamedType('diagnosticsSettings', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('fixedStrength', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('forceCalibration', univ.Integer(namedValues=namedval.NamedValues(('noCalibration', 0), ('calibrateLedLevels', 1), ('calibrateLedLevelsWithHighestASICGain', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('rawSignalFiltering', univ.Integer(namedValues=namedval.NamedValues(('disabled', 0), ('enabled', 1))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n        namedtype.OptionalNamedType('calibrationStorageAreaInUse', StorageIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n        namedtype.OptionalNamedType('signalMaximum', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 21))),\r\n    namedtype.OptionalNamedType('storageOperation', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.NamedType('storageIdentifier', StorageIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.NamedType('operationType', univ.Integer(namedValues=namedval.NamedValues(('read', 0), ('write', 1), ('delete', 2))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.NamedType('offset', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n        namedtype.NamedType('size', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),\r\n        namedtype.OptionalNamedType('payload', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),\r\n        namedtype.OptionalNamedType('operationStatusCode', univ.Integer(namedValues=namedval.NamedValues(('success', 0), ('genericError', 1), ('outOfBounds', 2), ('mediaNotPresent', 3), ('identifierError', 4), ('bufferOverflow', 5), ('writeProtected', 6), ('deleteNotApplicable', 7))).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 25))),\r\n    namedtype.OptionalNamedType('signalsLayout', Vector().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 18))),\r\n    namedtype.OptionalNamedType('lighting', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('presenceBitMask', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.OptionalNamedType('state', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.OptionalNamedType('globalIntensity', univ.Integer().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 26))),\r\n    namedtype.OptionalNamedType('lowSignal', univ.Sequence(componentType=namedtype.NamedTypes(\r\n        namedtype.OptionalNamedType('lowSignalInfo', univ.BitString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)))\r\n    ))\r\n    .subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 28))),\r\n    namedtype.OptionalNamedType('errorCounterClear', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 31))),\r\n    namedtype.OptionalNamedType('errorInformation', ErrorInformation().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 32))),\r\n    namedtype.OptionalNamedType('errorLog', univ.Integer(namedValues=namedval.NamedValues(('currentSession', -1), ('allSessions', -2))).subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 33))),\r\n    namedtype.OptionalNamedType('errorThresholds', ErrorThresholds().subtype(implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 34)))\r\n)\r\n\r\n\r\nclass ProtocolMessage(univ.Choice):\r\n    pass\r\n\r\n\r\nProtocolMessage.componentType = namedtype.NamedTypes(\r\n    namedtype.NamedType('request', Message().subtype(implicitTag=tag.Tag(tag.tagClassPrivate, tag.tagFormatConstructed, 14))),\r\n    namedtype.NamedType('response', Message().subtype(implicitTag=tag.Tag(tag.tagClassPrivate, tag.tagFormatConstructed, 15))),\r\n    namedtype.NamedType('notification', Notification().subtype(implicitTag=tag.Tag(tag.tagClassPrivate, tag.tagFormatConstructed, 16)))\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/61", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/61/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/61/events", "html_url": "https://github.com/etingof/pyasn1/issues/61", "id": 252321523, "node_id": "MDU6SXNzdWUyNTIzMjE1MjM=", "number": 61, "title": "no longer able to parse cert created with openssl", "user": {"login": "maximermilov", "id": 15332486, "node_id": "MDQ6VXNlcjE1MzMyNDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/15332486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximermilov", "html_url": "https://github.com/maximermilov", "followers_url": "https://api.github.com/users/maximermilov/followers", "following_url": "https://api.github.com/users/maximermilov/following{/other_user}", "gists_url": "https://api.github.com/users/maximermilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximermilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximermilov/subscriptions", "organizations_url": "https://api.github.com/users/maximermilov/orgs", "repos_url": "https://api.github.com/users/maximermilov/repos", "events_url": "https://api.github.com/users/maximermilov/events{/privacy}", "received_events_url": "https://api.github.com/users/maximermilov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513982, "node_id": "MDU6TGFiZWwzMzE1MTM5ODI=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-23T15:20:52Z", "updated_at": "2017-08-24T11:12:22Z", "closed_at": "2017-08-24T03:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test example works with pyasn1 0.1.8.\r\nStops working after upgrading to 0.3.2\r\n\r\n```bash\r\n\u2192 openssl req -new -sha1 -x509 \\\r\n-days 3650 -extensions v3_ca \\\r\n-keyout ca.key \\\r\n-out ca_public_cert.pem \\\r\n-passout env:CAPASS\r\n> > > > Generating a 2048 bit RSA private key\r\n..............................................+++\r\n............................................................................................................+++\r\nwriting new private key to 'ca.key'\r\n-----\r\nYou are about to be asked to enter information that will be incorporated\r\ninto your certificate request.\r\nWhat you are about to enter is what is called a Distinguished Name or a DN.\r\nThere are quite a few fields but you can leave some blank\r\nFor some fields there will be a default value,\r\nIf you enter '.', the field will be left blank.\r\n-----\r\nCountry Name (2 letter code) [AU]:\r\nState or Province Name (full name) [Some-State]:\r\nLocality Name (eg, city) []:NYC\r\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:\r\nOrganizational Unit Name (eg, section) []:1\r\nCommon Name (e.g. server FQDN or YOUR name) []:ASD\r\nEmail Address []:\r\n\u2192 VE/bin/python test.py\r\n\u2192 VE/bin/pip install --upgrade pyasn1\r\nCollecting pyasn1\r\n  Downloading pyasn1-0.3.2-py2.py3-none-any.whl (63kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 71kB 2.6MB/s \r\nInstalling collected packages: pyasn1\r\n  Found existing installation: pyasn1 0.1.8\r\n    Uninstalling pyasn1-0.1.8:\r\n      Successfully uninstalled pyasn1-0.1.8\r\nSuccessfully installed pyasn1-0.3.2\r\n\u2192 VE/bin/python test.py\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 25, in <module>\r\n    encaps_seq = der_decoder.decode(base64.b64decode(cert))\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 382, in valueDecoder\r\n    component, head = decodeFun(head, asn1Spec)\r\n  File \"/usr/local/google/home/maximermilov/tmp/2/VE/local/lib/python2.7/site-packages/pyasn1/codec/ber/decoder.py\", line 1015, in __call__\r\n    '%s not in asn1Spec: %r' % (tagSet, asn1Spec)\r\npyasn1.error.PyAsn1Error: [0:32:16] not in asn1Spec: TagMap()\r\n```\r\n\r\n```python\r\nimport base64\r\nfrom pyasn1.codec.der import decoder as der_decoder\r\n\r\ncert = \"\"\"MIIDsDCCApigAwIBAgIJAM/gviWR8zldMA0GCSqGSIb3DQEBBQUAMG0xCzAJBgNV\r\nBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMQwwCgYDVQQHDANOWUMxITAfBgNV\r\nBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEKMAgGA1UECwwBMTEMMAoGA1UE\r\nAwwDQVNEMB4XDTE3MDgyMzE1MTA0OVoXDTI3MDgyMTE1MTA0OVowbTELMAkGA1UE\r\nBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxDDAKBgNVBAcMA05ZQzEhMB8GA1UE\r\nCgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMQowCAYDVQQLDAExMQwwCgYDVQQD\r\nDANBU0QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDArjzLvlWXAApZ\r\nt0qXdNHT1Xn19ik8r33ioqDD2dFALUOkbSeMds10A7b6lGHb3e0nfYm84i+EbWvu\r\neDzzydkj+DvkFkx7xVdz/MPukA0LGd/uoEW25mI3ZLScECVsdX5ZPiV8DigPV/Hn\r\ne/2sT7SVpLsUBxwyEsUBcnnDRKMx3FvmrCn/ZdfcvkarPIuHXPF+t+3gOvyWXwQ1\r\nyrWo9eYczMNJ82Mm6GxVIp5UsWtMhHHMpLeSu/uudB4fkzdaBtEx20eMe9ZPBjYI\r\n5q+i0VECuUUVAQoo9PI7tTkvOBRACvZ1WAgf3gFj/XsHLVXxr7zRweYLkj+MxSP4\r\n8nJF0o71AgMBAAGjUzBRMB0GA1UdDgQWBBTkWG/uEpxWU2VI3O0dcawxxEoatTAf\r\nBgNVHSMEGDAWgBTkWG/uEpxWU2VI3O0dcawxxEoatTAPBgNVHRMBAf8EBTADAQH/\r\nMA0GCSqGSIb3DQEBBQUAA4IBAQAtMLyDdCvllyI6hM+XPWb4RmyivNtuaisVIZiP\r\ntYa0/lD1K3w/jq29TPqYjS7p7ophuVL+AgtmomfrGnQHEEwch6ApBVc+rHUEXfcm\r\nAY4n81mHWOTgHrjCYNmqQ7CAGed5YVRPI+g+2zdxnrNUO4u9GWD5g/UrN0NWur+k\r\nV3PqKtZwzLqXCPYpArLeNkburFopFXCQOhMnR/E9BOTM1/50In09dC9uOSbg+p2x\r\n4BD7Xg4Li9i+ypysTtoBOwc5xD3C2I7Z6Arlx++t4UIXPGuUYpIUJSWdJEqzMoXT\r\nMvH09gS0d33qCxiO9BYqyEH7Bmp6Z4Zz7ZCxkWhZab+XNPVx\"\"\"\r\n\r\nencaps_seq = der_decoder.decode(base64.b64decode(cert))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/55", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/55/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/55/events", "html_url": "https://github.com/etingof/pyasn1/issues/55", "id": 246235351, "node_id": "MDU6SXNzdWUyNDYyMzUzNTE=", "number": 55, "title": "0.3.1 no longer supports 0.1.x interface to GeneralizedTime/UTCTime", "user": {"login": "hwine", "id": 132412, "node_id": "MDQ6VXNlcjEzMjQxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/132412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwine", "html_url": "https://github.com/hwine", "followers_url": "https://api.github.com/users/hwine/followers", "following_url": "https://api.github.com/users/hwine/following{/other_user}", "gists_url": "https://api.github.com/users/hwine/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwine/subscriptions", "organizations_url": "https://api.github.com/users/hwine/orgs", "repos_url": "https://api.github.com/users/hwine/repos", "events_url": "https://api.github.com/users/hwine/events{/privacy}", "received_events_url": "https://api.github.com/users/hwine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-28T04:28:58Z", "updated_at": "2017-07-31T16:20:16Z", "closed_at": "2017-07-30T08:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hadn't pinned my version of pyasn1 yet on a new project, and got surprised by fresh installs into docker images. 0.3.1 gives the error:\r\n```\r\n'Uninitialized ASN.1 value (\"__nonzero__\" attribute looked up)'\r\n```\r\nwhen invoked by a library originally from Google Code (see [this note](https://github.com/hwine/fx-sig-verify/blob/pyasn1_regression/src/fx_sig_verify/verify_sigs/README.md) for history). Some brief ``pdb`` work showed it related to ``GeneralizedTime()`` objects.\r\n\r\n**STR:**\r\n1. ``git clone -b pyasn1_regression https://github.com/hwine/fx-sig-verify\r\n1. ``cd fx-sig-verify``\r\n1. Setup and activate venv\r\n    1. ``pip install -r requirements.txt`` # this will use pyasn1>=0.3.1\r\n    1. ``pip install -e .``\r\n1. Show issue\r\n    1. ``fx-sig-verify tests/data/32bit.exe``  # throws exception\r\n        ```\r\n        $ pip freeze | grep pyasn1\r\n        pyasn1==0.3.1\r\n        $ fx-sig-verify tests/data/32bit.exe\r\n        verbose 1 based on True\r\n        Processing tests/data/32bit.exe\r\n        Processing file of size 246056 (at 0)\r\n        fail for tests/data/32bit.exe\r\n        errors:\r\n            failed to process local file tests/data/32bit.exe 'PyAsn1Error('Uninitialized ASN.1 value (\"__nonzero__\" attribute looked up)',)'\r\n        ```\r\n    1. ``pip install --upgrade pyasn1==0.2.3``  # rollback to working verision\r\n    1. ``fx-sig-verify tests/data/32bit.exe``  # no exception\r\n        ```\r\n        $ pip freeze | grep pyasn1\r\n        pyasn1==0.2.3\r\n        $ fx-sig-verify tests/data/32bit.exe\r\n        verbose 1 based on True\r\n        Processing tests/data/32bit.exe\r\n        Processing file of size 246056 (at 0)\r\n        pass for tests/data/32bit.exe\r\n        ```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/54", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/54/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/54/events", "html_url": "https://github.com/etingof/pyasn1/issues/54", "id": 245934807, "node_id": "MDU6SXNzdWUyNDU5MzQ4MDc=", "number": 54, "title": "Empty value is constructed instead of None in pyasn1 0.3.1", "user": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-27T06:07:14Z", "updated_at": "2017-07-27T16:30:59Z", "closed_at": "2017-07-27T16:30:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! again. thanks for the fix #51. That specific issue was resolved. However `pyasn1==0.3.1` and `pyasn1-modules==0.0.10` doesn't work for https://github.com/snowflakedb/snowflake-connector-python due to changed behavior. Here is an test code. Please try this with:\r\n* `pyasn1==0.3.1` and `pyasn1-modules==0.0.10`\r\n* `pyasn1==0.2.3` and `pyasn1-modules==0.0.9`\r\n\r\n```\r\nfrom pyasn1.codec.der import decoder as der_decoder\r\nfrom pyasn1.type import (univ, namedtype, tag, namedval, useful)\r\nfrom pyasn1_modules import (rfc2459)\r\n\r\n\r\nclass Version(univ.Integer):\r\n    namedValues = namedval.NamedValues(\r\n        ('v1', 0)\r\n    )\r\n\r\n\r\nclass CertID(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('hashAlgorithm', rfc2459.AlgorithmIdentifier()),\r\n        namedtype.NamedType('issuerNameHash', univ.OctetString()),\r\n        namedtype.NamedType('issuerKeyHash', univ.OctetString()),\r\n        namedtype.NamedType('serialNumber', rfc2459.CertificateSerialNumber()))\r\n\r\n\r\nclass Request(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('reqCert', CertID()),\r\n        namedtype.OptionalNamedType(\r\n            'singleRequestExtensions',\r\n            rfc2459.Extensions().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    0))))\r\n\r\n\r\nclass TBSRequest(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.DefaultedNamedType(\r\n            'version', Version(0).subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple,\r\n                                    0))),\r\n        namedtype.OptionalNamedType(\r\n            'requestorName',\r\n            rfc2459.GeneralName().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    1)\r\n            )),\r\n        namedtype.NamedType('requestList',\r\n                            univ.SequenceOf(componentType=Request())),\r\n        namedtype.OptionalNamedType(\r\n            'requestExtensions',\r\n            rfc2459.Extensions().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    2)\r\n            ))\r\n    )\r\n\r\n\r\nclass Certs(univ.SequenceOf):\r\n    componentType = rfc2459.Certificate()\r\n\r\n\r\nclass Signature(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('signatureAlgorithm',\r\n                            rfc2459.AlgorithmIdentifier()),\r\n        namedtype.NamedType('signature', univ.BitString()),\r\n        namedtype.NamedType(\r\n            'certs', Certs().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)\r\n            )\r\n        )\r\n    )\r\n\r\n\r\nclass OCSPRequest(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('tbsRequest', TBSRequest()),\r\n        namedtype.OptionalNamedType(\r\n            'optionalSignature', Signature().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple,\r\n                                    0)))\r\n    )\r\n\r\n\r\n# OCSP Response\r\nclass OCSPResponseStatus(univ.Enumerated):\r\n    namedValues = namedval.NamedValues(\r\n        ('successful', 0),\r\n        ('malformedRequest', 1),\r\n        ('internalError', 2),\r\n        ('tryLater', 3),\r\n        # ('not-used', 4),\r\n        ('sigRequired', 5),\r\n        ('unauthorized', 6)\r\n    )\r\n\r\n\r\nclass ResponseBytes(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('responseType', univ.ObjectIdentifier()),\r\n        namedtype.NamedType('response', univ.OctetString())\r\n    )\r\n\r\n\r\nclass OCSPResponse(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('responseStatus', OCSPResponseStatus()),\r\n        namedtype.OptionalNamedType('responseBytes', ResponseBytes().subtype(\r\n            explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)\r\n        ))\r\n    )\r\n\r\n\r\nKeyHash = univ.OctetString\r\nUnknownInfo = univ.Null\r\n\r\n\r\nclass RevokedInfo(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('revocationTime', useful.GeneralizedTime()),\r\n        namedtype.OptionalNamedType(\r\n            'revocationReason',\r\n            rfc2459.CRLReason().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    0)\r\n            ))\r\n    )\r\n\r\n\r\nclass CertStatus(univ.Choice):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('good', univ.Null().subtype(\r\n            implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)\r\n        )),\r\n        namedtype.NamedType('revoked', RevokedInfo().subtype(\r\n            implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)\r\n        )),\r\n        namedtype.NamedType('unknown', UnknownInfo().subtype(\r\n            implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)\r\n        ))\r\n    )\r\n\r\n\r\nclass SingleResponse(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('certID', CertID()),\r\n        namedtype.NamedType('certStatus', CertStatus()),\r\n        namedtype.NamedType('thisUpdate', useful.GeneralizedTime()),\r\n        namedtype.OptionalNamedType(\r\n            'nextUpdate',\r\n            useful.GeneralizedTime().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    0)\r\n            )),\r\n        namedtype.OptionalNamedType(\r\n            'singleExtensions',\r\n            rfc2459.Extensions().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    2)\r\n            ))\r\n    )\r\n\r\n\r\nclass ResponderID(univ.Choice):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('byName', rfc2459.Name().subtype(\r\n            explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),\r\n        namedtype.NamedType('byKey', KeyHash().subtype(\r\n            explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),\r\n    )\r\n\r\n\r\nclass ResponseData(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.DefaultedNamedType('version', Version(0).subtype(\r\n            explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),\r\n        namedtype.NamedType('responderID', ResponderID()),\r\n        namedtype.NamedType('producedAt', useful.GeneralizedTime()),\r\n        namedtype.NamedType('responses',\r\n                            univ.SequenceOf(componentType=SingleResponse())),\r\n        namedtype.OptionalNamedType(\r\n            'responseExtensions',\r\n            rfc2459.Extensions().subtype(\r\n                explicitTag=tag.Tag(tag.tagClassContext,\r\n                                    tag.tagFormatSimple,\r\n                                    1)\r\n            ))\r\n    )\r\n\r\n\r\nclass BasicOCSPResponse(univ.Sequence):\r\n    componentType = namedtype.NamedTypes(\r\n        namedtype.NamedType('tbsResponseData', ResponseData()),\r\n        namedtype.NamedType('signatureAlgorithm',\r\n                            rfc2459.AlgorithmIdentifier()),\r\n        namedtype.NamedType('signature', univ.BitString()),\r\n        namedtype.OptionalNamedType('certs', Certs().subtype(\r\n            explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)\r\n        ))\r\n    )\r\n\r\n\r\ns = bytearray.fromhex('308202b630819fa21604145379bf5aaa2b4acf5480e1d89bc09df2b20366cb180f32303137303732363130303533355a30743072304a300906052b0e03021a05000414cd30d24c343a82ab1f0570158ad7a107762992e904145379bf5aaa2b4acf5480e1d89bc09df2b20366cb021100c3dedf76cfd786bea1af8befefa4dd388000180f32303137303732363130303533355aa011180f32303137303830323130303533355a300d06092a864886f70d01010c050003820201005346aa8492bf8fd2df4d6fb7ca070ef7c66b0654236de4007ec4609dea96344fd819e7154b3912d91b513da18f3a562cb839a448e36954f48ddbfda5b5a113e3ee148f1d1fcbee4a343981f342bde9dbc7ef894c59bd38938e05b8d6fd5cbc99f5a6bb1ee403e04c69f32a5179ee3829c9700c3ce7c39967f19d927c5738d17c73e6c10f2705d47220c43c2f6705f56520a24bfe3c160c725940233d8ca3046e89fc78fa185d7fe26c35f464df1733f1db61589ed2b05c3c87426ca144fde600aef2fd3d0ab648f764e1664820be7f4455a781e1eca65dddbda439e2aaacf12dc3ff6c1c5b222698319db9e8e6b6c220db4fc34938d98f46aa2bec68735e9d539daeafaff0fcd1c02aba002cdfcfcf499715bb8787d5432f7b2288fd51e0c8621294d5c0629037cf21cd0c5c42da18eaea386bef9a8b7e5b54b7dc96956d876f7a5458d91b2d47f5e7714e14700143b66c97bf039ce93807810513ec8c1b4db17f5f2f4e407aa2183e87a0ec459448e45f35a92d05878c6585e84736bdc61cede75504cda95431ce6a61bdcb63eec016c4bcfd75530f1c0104da5bac47855a3638f496874ae7ae30f77774fe5e9f399b30f63110453ab544f4edf6faa8fa7674ec079823be3b01fb5d08e4c581e107620fb7c54db6dcf941db1ebf7086e0edadd240a83aefaeef4e851592dab3c0833d328658082b418ec6cb1d0435b9c923f9')\r\nst = univ.OctetString(value=bytes(s))\r\n\r\nbasic_ocsp_response, _ = der_decoder.decode(st, BasicOCSPResponse())\r\nprint(basic_ocsp_response['certs'])\r\n```\r\n\r\nAs you notice, the first case returns:\r\n```\r\nCerts(tagSet=TagSet((), Tag(tagClass=0, tagFormat=32, tagId=16), Tag(tagClass=128, tagFormat=32, tagId=0)))\r\n```\r\nbut the second case returns:\r\n```\r\nNone\r\n```\r\nIs this an expected change? If so, how should I check if the value exists? `hasValue()`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/53", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/53/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/53/events", "html_url": "https://github.com/etingof/pyasn1/issues/53", "id": 245902080, "node_id": "MDU6SXNzdWUyNDU5MDIwODA=", "number": 53, "title": "DER decoder is not thread-safe.", "user": {"login": "rmmh", "id": 211868, "node_id": "MDQ6VXNlcjIxMTg2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/211868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmmh", "html_url": "https://github.com/rmmh", "followers_url": "https://api.github.com/users/rmmh/followers", "following_url": "https://api.github.com/users/rmmh/following{/other_user}", "gists_url": "https://api.github.com/users/rmmh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmmh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmmh/subscriptions", "organizations_url": "https://api.github.com/users/rmmh/orgs", "repos_url": "https://api.github.com/users/rmmh/repos", "events_url": "https://api.github.com/users/rmmh/events{/privacy}", "received_events_url": "https://api.github.com/users/rmmh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-27T01:43:33Z", "updated_at": "2017-08-02T17:14:20Z", "closed_at": "2017-08-02T17:14:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "This causes problems for upstream oauth2client and GoogleCloudPlatform/gsutil#446.\r\n\r\nThe global pyasn1.codec.der.decoder.decode() function cannot be called safely by multiple threads, since it mutates shared state as it's decoding. This should either be documented or fixed.\r\n\r\nExample stack traces look like:\r\n```\r\nTraceback (most recent call last):\r\n  File \"repro.py\", line 40, in doit\r\n    pyasn1.codec.der.decoder.decode(key_bytes, asn1Spec=_PKCS8_SPEC)\r\n  File \"/home/rmmh/pyasn1/pyasn1/codec/ber/decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/home/rmmh/pyasn1/pyasn1/codec/ber/decoder.py\", line 384, in valueDecoder\r\n    asn1Object, component.effectiveTagSet, idx\r\n  File \"/home/rmmh/pyasn1/pyasn1/codec/ber/decoder.py\", line 478, in _getComponentPositionByType\r\n    return asn1Object.getComponentPositionNearType(tagSet, idx)\r\n  File \"/home/rmmh/pyasn1/pyasn1/type/univ.py\", line 2294, in getComponentPositionNearType\r\n    return self.componentType.getPositionNearType(tagSet, idx)\r\n  File \"/home/rmmh/pyasn1/pyasn1/type/namedtype.py\", line 378, in getPositionNearType\r\n    raise error.PyAsn1Error('Type position out of range')\r\nPyAsn1Error: Type position out of range\r\nTraceback (most recent call last):\r\n  File \"repro.py\", line 40, in doit\r\n    pyasn1.codec.der.decoder.decode(key_bytes, asn1Spec=_PKCS8_SPEC)\r\n  File \"/home/rmmh/pyasn1/pyasn1/codec/ber/decoder.py\", line 1008, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/home/rmmh/pyasn1/pyasn1/codec/ber/decoder.py\", line 384, in valueDecoder\r\n    asn1Object, component.effectiveTagSet, idx\r\n  File \"/home/rmmh/pyasn1/pyasn1/codec/ber/decoder.py\", line 478, in _getComponentPositionByType\r\n    return asn1Object.getComponentPositionNearType(tagSet, idx)\r\n  File \"/home/rmmh/pyasn1/pyasn1/type/univ.py\", line 2294, in getComponentPositionNearType\r\n    return self.componentType.getPositionNearType(tagSet, idx)\r\n  File \"/home/rmmh/pyasn1/pyasn1/type/namedtype.py\", line 375, in getPositionNearType\r\n    return idx + self.__ambigiousTypes[idx].getPositionByType(tagSet)\r\n  File \"/home/rmmh/pyasn1/pyasn1/type/namedtype.py\", line 268, in getPositionByType\r\n    raise error.PyAsn1Error('Type %s not found' % (tagSet,))\r\nPyAsn1Error: Type [0:0:2] not found\r\n```\r\n\r\nHere's a test script to reproduce the problem. Run it like `while :; do python repro.py; done`. This broke starting with v0.2.3, and is still broken in v0.3.1 (the current head):\r\n```python\r\nimport StringIO\r\nimport thread\r\nimport threading\r\nimport time\r\nimport traceback\r\n\r\n##### reduced from oauth2client/_pure_python_crypt.py\r\nimport pyasn1.codec.der\r\nfrom pyasn1_modules import pem\r\nfrom pyasn1_modules.rfc5208 import PrivateKeyInfo\r\n\r\n# openssl genrsa 128 | openssl pkcs8 -topk8 -nocrypt\r\nprivate_key = '''\r\n-----BEGIN PRIVATE KEY-----\r\nMHkCAQAwDQYJKoZIhvcNAQEBBQAEZTBjAgEAAhEA21r9c7vaSvSGeMdxqwd1gwID\r\nAQABAhEAqYVwSnjrAvD4lPq/wukgAQIJAO15hoI6gaODAgkA7HedWRHwRgECCHIw\r\nIk6ShW2zAghg3FpSqttuAQIJAOzQGuAR1uhh\r\n-----END PRIVATE KEY-----\r\n'''\r\n\r\n_PKCS1_MARKER = ('-----BEGIN RSA PRIVATE KEY-----',\r\n                 '-----END RSA PRIVATE KEY-----')\r\n_PKCS8_MARKER = ('-----BEGIN PRIVATE KEY-----',\r\n                 '-----END PRIVATE KEY-----')\r\n_PKCS8_SPEC = PrivateKeyInfo()\r\n\r\nmarker_id, key_bytes = pem.readPemBlocksFromFile(\r\n    StringIO.StringIO(private_key), _PKCS1_MARKER, _PKCS8_MARKER)\r\n\r\nassert marker_id == 1  # PCKS_8\r\n#########################\r\n\r\nTHREADS = 10\r\nevent = threading.Event()\r\nout_lock = threading.Lock()\r\n\r\ndef doit():\r\n    event.wait()\r\n    try:\r\n        pyasn1.codec.der.decoder.decode(key_bytes, asn1Spec=_PKCS8_SPEC)\r\n    except:\r\n        with out_lock:\r\n            traceback.print_exc()\r\n\r\nfor _ in range(THREADS):\r\n    thread.start_new_thread(doit, ())\r\n\r\nevent.set()\r\ntime.sleep(.02)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/52", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/52/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/52/events", "html_url": "https://github.com/etingof/pyasn1/issues/52", "id": 245853159, "node_id": "MDU6SXNzdWUyNDU4NTMxNTk=", "number": 52, "title": "With 0.3.1 all ldap3 tests fail", "user": {"login": "cannatag", "id": 1319333, "node_id": "MDQ6VXNlcjEzMTkzMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1319333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cannatag", "html_url": "https://github.com/cannatag", "followers_url": "https://api.github.com/users/cannatag/followers", "following_url": "https://api.github.com/users/cannatag/following{/other_user}", "gists_url": "https://api.github.com/users/cannatag/gists{/gist_id}", "starred_url": "https://api.github.com/users/cannatag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cannatag/subscriptions", "organizations_url": "https://api.github.com/users/cannatag/orgs", "repos_url": "https://api.github.com/users/cannatag/repos", "events_url": "https://api.github.com/users/cannatag/events{/privacy}", "received_events_url": "https://api.github.com/users/cannatag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-26T21:00:36Z", "updated_at": "2017-08-03T20:05:37Z", "closed_at": "2017-08-03T20:05:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ilya, with  version 0.3.1 I get the following error on every test:\r\n```\r\n...\r\n  File \"C:\\Python\\OpenSource\\ldap3\\ldap3\\operation\\bind.py\", line 124, in bind_response_to_dict\r\n    'saslCreds': bytes(response['serverSaslCreds']) if response['serverSaslCreds'] is not None else None}\r\n  File \"C:\\Python\\Python36\\lib\\site-packages\\pyasn1\\type\\univ.py\", line 965, in __bytes__\r\n    return bytes(self._value)\r\nTypeError: cannot convert 'NoValue' object to bytes\r\n  File \"C:\\Python\\Python36\\lib\\site-packages\\pyasn1\\type\\univ.py\", line 965, in __bytes__\r\n    return bytes(self._value)\r\nTypeError: cannot convert 'NoValue' object to bytes\r\n\r\n```\r\n\r\nAll tests were ok with version 0.2.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/51", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/51/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/51/events", "html_url": "https://github.com/etingof/pyasn1/issues/51", "id": 245821647, "node_id": "MDU6SXNzdWUyNDU4MjE2NDc=", "number": 51, "title": "pyasn1 0.3.1 doesn't work with pyasn1-module 0.0.9", "user": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-26T19:00:46Z", "updated_at": "2017-07-27T04:45:51Z", "closed_at": "2017-07-27T04:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyasn1 0.3.1 caused a regression with pyasn1-module 0.0.9:\r\n\r\n```\r\nvirtualenv-3.4 /tmp/a\r\nsource /tmp/a/bin/activate\r\npip install pyasn1 pyasn1-modules\r\npython -c 'from pyasn1_modules import (rfc2560)'\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/a/lib/python3.4/site-packages/pyasn1_modules/rfc2560.py\", line 137, in <module>\r\n    class ResponseData(univ.Sequence):\r\n  File \"/tmp/a/lib/python3.4/site-packages/pyasn1_modules/rfc2560.py\", line 143, in ResponseData\r\n    namedtype.NamedType('responses', univ.SequenceOf(SingleResponse())),\r\nTypeError: __init__() takes 1 positional argument but 2 were given\r\n```\r\nIs this combination of library supported?\r\n\r\nA workaround is \r\n```\r\npip install -U pyasn1==0.2.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/43", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/43/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/43/events", "html_url": "https://github.com/etingof/pyasn1/issues/43", "id": 242254240, "node_id": "MDU6SXNzdWUyNDIyNTQyNDA=", "number": 43, "title": "GeneralisedTime and UTCTime <-> python datetime", "user": {"login": "danni", "id": 129472, "node_id": "MDQ6VXNlcjEyOTQ3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/129472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danni", "html_url": "https://github.com/danni", "followers_url": "https://api.github.com/users/danni/followers", "following_url": "https://api.github.com/users/danni/following{/other_user}", "gists_url": "https://api.github.com/users/danni/gists{/gist_id}", "starred_url": "https://api.github.com/users/danni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danni/subscriptions", "organizations_url": "https://api.github.com/users/danni/orgs", "repos_url": "https://api.github.com/users/danni/repos", "events_url": "https://api.github.com/users/danni/events{/privacy}", "received_events_url": "https://api.github.com/users/danni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-12T04:29:36Z", "updated_at": "2017-07-14T09:56:07Z", "closed_at": "2017-07-14T09:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be super convenient if you could move between the time types and Python `datetime` objects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/40", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/40/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/40/events", "html_url": "https://github.com/etingof/pyasn1/issues/40", "id": 241039107, "node_id": "MDU6SXNzdWUyNDEwMzkxMDc=", "number": 40, "title": "DER encoder doesn't sort SET by tags", "user": {"login": "Erant", "id": 725343, "node_id": "MDQ6VXNlcjcyNTM0Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/725343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erant", "html_url": "https://github.com/Erant", "followers_url": "https://api.github.com/users/Erant/followers", "following_url": "https://api.github.com/users/Erant/following{/other_user}", "gists_url": "https://api.github.com/users/Erant/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erant/subscriptions", "organizations_url": "https://api.github.com/users/Erant/orgs", "repos_url": "https://api.github.com/users/Erant/repos", "events_url": "https://api.github.com/users/Erant/events{/privacy}", "received_events_url": "https://api.github.com/users/Erant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-06T18:04:15Z", "updated_at": "2017-07-11T00:25:36Z", "closed_at": "2017-07-11T00:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The DER specification specifies that the contents of a SET must be ordered by their tags. This doesn't seem to be happening, the ordering is random.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/39", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/39/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/39/events", "html_url": "https://github.com/etingof/pyasn1/issues/39", "id": 233339525, "node_id": "MDU6SXNzdWUyMzMzMzk1MjU=", "number": 39, "title": "BitString should be able to accept bytes/bytesarray", "user": {"login": "danni", "id": 129472, "node_id": "MDQ6VXNlcjEyOTQ3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/129472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danni", "html_url": "https://github.com/danni", "followers_url": "https://api.github.com/users/danni/followers", "following_url": "https://api.github.com/users/danni/following{/other_user}", "gists_url": "https://api.github.com/users/danni/gists{/gist_id}", "starred_url": "https://api.github.com/users/danni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danni/subscriptions", "organizations_url": "https://api.github.com/users/danni/orgs", "repos_url": "https://api.github.com/users/danni/repos", "events_url": "https://api.github.com/users/danni/events{/privacy}", "received_events_url": "https://api.github.com/users/danni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-03T02:52:21Z", "updated_at": "2017-07-30T09:29:39Z", "closed_at": "2017-07-30T09:29:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The BitString type should accept `bytes` as one of its options. At the moment you have to convert to hex via `hexlify` before you can use bytes.\r\n\r\n(It's possible this is an oversight from Python 2 support, and the assumption is you can cast from bytes to str freely?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/37", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/37/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/37/events", "html_url": "https://github.com/etingof/pyasn1/issues/37", "id": 226420317, "node_id": "MDU6SXNzdWUyMjY0MjAzMTc=", "number": 37, "title": "0.2.3 backward compatibulity issue.", "user": {"login": "abhsob", "id": 7380223, "node_id": "MDQ6VXNlcjczODAyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7380223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhsob", "html_url": "https://github.com/abhsob", "followers_url": "https://api.github.com/users/abhsob/followers", "following_url": "https://api.github.com/users/abhsob/following{/other_user}", "gists_url": "https://api.github.com/users/abhsob/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhsob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhsob/subscriptions", "organizations_url": "https://api.github.com/users/abhsob/orgs", "repos_url": "https://api.github.com/users/abhsob/repos", "events_url": "https://api.github.com/users/abhsob/events{/privacy}", "received_events_url": "https://api.github.com/users/abhsob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-04T21:56:53Z", "updated_at": "2017-07-30T09:32:10Z", "closed_at": "2017-07-30T09:32:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed parmiko 2.1.1 using pip which downloaded pyasn1 version 0.2.3. Caused issues for pysnmp-4.3.2\r\n\r\npysnmp-4.3.2-py2.7/pysnmp/proto/api/v1.py\", line 58, in setDefaults\r\n    1, self._errorStatus, verifyConstraints=False\r\n  File \"/usr/lib/python2.6/site-packages/pyasn1/type/univ.py\", line 2123, in setComponentByPosition\r\n    raise error.PyAsn1Error('Component value is tag-incompatible: %r vs %r' % (value, componentType))\r\nPyAsn1Error: Component value is tag-incompatible: Integer('noError', NamedValues(('noError', 0), ('tooBig', 1), ('noSuchName', 2), ('badValue', 3), ('readOnly', 4), ('genErr', 5), ('noAccess', 6), ('wrongType', 7), ('wrongLength', 8), ('wrongEncoding', 9), ('wrongValue', 10), ('noCreation', 11), ('inconsistentValue', 12), ('resourceUnavailable', 13), ('commitFailed', 14), ('undoFailed', 15), ('authorizationError', 16), ('notWritable', 17), ('inconsistentName', 18))) vs Integer(subtypeSpec=ConstraintsIntersection(ConstraintsIntersection(), ValueRangeConstraint(0, Integer(2147483647))))\r\n\r\nReverted pyasn1 to version 0.1.9 and the code works. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/36", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/36/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/36/events", "html_url": "https://github.com/etingof/pyasn1/issues/36", "id": 223531647, "node_id": "MDU6SXNzdWUyMjM1MzE2NDc=", "number": 36, "title": "0.2.4 release is missing", "user": {"login": "MuxZeroNet", "id": 24784041, "node_id": "MDQ6VXNlcjI0Nzg0MDQx", "avatar_url": "https://avatars0.githubusercontent.com/u/24784041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuxZeroNet", "html_url": "https://github.com/MuxZeroNet", "followers_url": "https://api.github.com/users/MuxZeroNet/followers", "following_url": "https://api.github.com/users/MuxZeroNet/following{/other_user}", "gists_url": "https://api.github.com/users/MuxZeroNet/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuxZeroNet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuxZeroNet/subscriptions", "organizations_url": "https://api.github.com/users/MuxZeroNet/orgs", "repos_url": "https://api.github.com/users/MuxZeroNet/repos", "events_url": "https://api.github.com/users/MuxZeroNet/events{/privacy}", "received_events_url": "https://api.github.com/users/MuxZeroNet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-04-22T01:34:09Z", "updated_at": "2017-07-26T18:09:39Z", "closed_at": "2017-07-26T17:40:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nAccording to the [CHANGELOG](https://github.com/etingof/pyasn1/blob/master/CHANGES.rst#revision-024-released-xx-03-2017), there is a v0.2.4 release. I suppose it has been out, but it cannot be found in the [releases](https://github.com/etingof/pyasn1/releases) tab.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/35", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/35/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/35/events", "html_url": "https://github.com/etingof/pyasn1/issues/35", "id": 219394295, "node_id": "MDU6SXNzdWUyMTkzOTQyOTU=", "number": 35, "title": "Missing doc/source/conf.py in pyasn1-0.2.3.tar.gz hosted by pypi", "user": {"login": "zmedico", "id": 3420795, "node_id": "MDQ6VXNlcjM0MjA3OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3420795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmedico", "html_url": "https://github.com/zmedico", "followers_url": "https://api.github.com/users/zmedico/followers", "following_url": "https://api.github.com/users/zmedico/following{/other_user}", "gists_url": "https://api.github.com/users/zmedico/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmedico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmedico/subscriptions", "organizations_url": "https://api.github.com/users/zmedico/orgs", "repos_url": "https://api.github.com/users/zmedico/repos", "events_url": "https://api.github.com/users/zmedico/events{/privacy}", "received_events_url": "https://api.github.com/users/zmedico/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-04T21:46:20Z", "updated_at": "2017-04-04T21:51:44Z", "closed_at": "2017-04-04T21:51:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to build the documentation using the source from pypi's pyasn1-0.2.3.tar.gz, it fails as follows because `doc/source/conf.py` is missing from the tarball: \r\n```\r\n$ python ./setup.py build_sphinx\r\nrunning build_sphinx\r\ncreating ~/pyasn1-0.2.3/build\r\ncreating ~/pyasn1-0.2.3/build/sphinx\r\ncreating ~/pyasn1-0.2.3/build/sphinx/doctrees\r\ncreating ~/pyasn1-0.2.3/build/sphinx/html\r\nRunning Sphinx v1.3.1\r\nerror: [Errno 2] No such file or directory: 'conf.py'\r\n```\r\nWill you include `doc/source/conf.py` in the future? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/34", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/34/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/34/events", "html_url": "https://github.com/etingof/pyasn1/issues/34", "id": 219150960, "node_id": "MDU6SXNzdWUyMTkxNTA5NjA=", "number": 34, "title": "DER encoding error", "user": {"login": "Danfocus", "id": 11483933, "node_id": "MDQ6VXNlcjExNDgzOTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/11483933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Danfocus", "html_url": "https://github.com/Danfocus", "followers_url": "https://api.github.com/users/Danfocus/followers", "following_url": "https://api.github.com/users/Danfocus/following{/other_user}", "gists_url": "https://api.github.com/users/Danfocus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Danfocus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Danfocus/subscriptions", "organizations_url": "https://api.github.com/users/Danfocus/orgs", "repos_url": "https://api.github.com/users/Danfocus/repos", "events_url": "https://api.github.com/users/Danfocus/events{/privacy}", "received_events_url": "https://api.github.com/users/Danfocus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-04T06:20:49Z", "updated_at": "2017-04-04T06:33:07Z", "closed_at": "2017-04-04T06:32:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nCannot encode with version 0.2.4\r\n\r\nHow to reproduce\r\n```\r\n>>> from pyasn1.codec.der import encoder\r\n>>> from pyasn1.type import univ\r\n>>> seq = univ.Sequence()\r\n>>> seq.setComponentByPosition(0, univ.ObjectIdentifier(\"1.2.643.2.2.35.1\"))\r\nSequence().setComponentByPosition(0, ObjectIdentifier('1.2.643.2.2.35.1'))\r\n>>> encoder.encode(seq)\r\nTraceback (most recent call last):\r\n  File \"<pyshell#489>\", line 1, in <module>\r\n    encoder.encode(seq)\r\n  File \"C:\\Python36\\lib\\site-packages\\pyasn1\\codec\\der\\encoder.py\", line 40, in __call__\r\n    return encoder.Encoder.__call__(self, client, defMode, maxChunkSize)\r\n  File \"C:\\Python36\\lib\\site-packages\\pyasn1\\codec\\cer\\encoder.py\", line 149, in __call__\r\n    return encoder.Encoder.__call__(self, client, defMode, maxChunkSize)\r\n  File \"C:\\Python36\\lib\\site-packages\\pyasn1\\codec\\ber\\encoder.py\", line 474, in __call__\r\n    self, value, defMode, maxChunkSize\r\n  File \"C:\\Python36\\lib\\site-packages\\pyasn1\\codec\\ber\\encoder.py\", line 61, in encode\r\n    encodeFun, value, defMode, maxChunkSize\r\n  File \"C:\\Python36\\lib\\site-packages\\pyasn1\\codec\\ber\\encoder.py\", line 347, in encodeValue\r\n    if namedTypes[idx].isOptional and not value[idx].isValue:\r\nTypeError: 'NoneType' object is not subscriptable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/20", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/20/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/20/events", "html_url": "https://github.com/etingof/pyasn1/issues/20", "id": 207177184, "node_id": "MDU6SXNzdWUyMDcxNzcxODQ=", "number": 20, "title": "Wrong constraint verification", "user": {"login": "Danfocus", "id": 11483933, "node_id": "MDQ6VXNlcjExNDgzOTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/11483933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Danfocus", "html_url": "https://github.com/Danfocus", "followers_url": "https://api.github.com/users/Danfocus/followers", "following_url": "https://api.github.com/users/Danfocus/following{/other_user}", "gists_url": "https://api.github.com/users/Danfocus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Danfocus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Danfocus/subscriptions", "organizations_url": "https://api.github.com/users/Danfocus/orgs", "repos_url": "https://api.github.com/users/Danfocus/repos", "events_url": "https://api.github.com/users/Danfocus/events{/privacy}", "received_events_url": "https://api.github.com/users/Danfocus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-13T10:32:31Z", "updated_at": "2017-02-14T08:58:08Z", "closed_at": "2017-02-14T08:58:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Constraints (eg ValueSizeConstraint) ignores multibyte encodings\r\n\r\nHow to reproduce:\r\n```\r\nfrom pyasn1.type import char, constraint\r\n\r\nchar.UTF8String(\"\u0444\").subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 1))\r\n```\r\n```\r\n>>> '\u0444'.encode('utf-8')\r\nb'\\xd1\\x84'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/19", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/19/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/19/events", "html_url": "https://github.com/etingof/pyasn1/issues/19", "id": 206273539, "node_id": "MDU6SXNzdWUyMDYyNzM1Mzk=", "number": 19, "title": "Iteration is broken in Set in 0.2.2", "user": {"login": "aalba6675", "id": 5254809, "node_id": "MDQ6VXNlcjUyNTQ4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5254809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalba6675", "html_url": "https://github.com/aalba6675", "followers_url": "https://api.github.com/users/aalba6675/followers", "following_url": "https://api.github.com/users/aalba6675/following{/other_user}", "gists_url": "https://api.github.com/users/aalba6675/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalba6675/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalba6675/subscriptions", "organizations_url": "https://api.github.com/users/aalba6675/orgs", "repos_url": "https://api.github.com/users/aalba6675/repos", "events_url": "https://api.github.com/users/aalba6675/events{/privacy}", "received_events_url": "https://api.github.com/users/aalba6675/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-08T17:50:05Z", "updated_at": "2017-02-09T02:30:39Z", "closed_at": "2017-02-09T02:30:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reproducer Version 0.2.2\r\n\r\n>>> from pyasn1.type import univ\r\n>>> my_set = univ.Set()\r\n>>> \r\n>>> i1 = univ.Integer(123)\r\n>>> i2 = univ.Integer(456)\r\n>>> my_set[0] = i1\r\n>>> my_set[1] = i2\r\n>>> for k in abc:\r\n...     print(k)\r\n## and nothing happens\r\n\r\nIn 0.1.9:\r\n>>> from pyasn1.type import univ\r\n>>> my_set = univ.Set()\r\n>>> \r\n>>> i1 = univ.Integer(123)\r\n>>> i1 = univ.Integer(123)\r\n>>> i2 = univ.Integer(456)\r\n>>> my_set[0] = i1\r\n>>> my_set[1] = i2\r\n>>> for k in abc:\r\n...     print(k)\r\n... \r\n123\r\n456\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/17", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/17/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/17/events", "html_url": "https://github.com/etingof/pyasn1/issues/17", "id": 206237366, "node_id": "MDU6SXNzdWUyMDYyMzczNjY=", "number": 17, "title": "Cannot get the size of NoValue object", "user": {"login": "bwalks", "id": 842539, "node_id": "MDQ6VXNlcjg0MjUzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/842539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwalks", "html_url": "https://github.com/bwalks", "followers_url": "https://api.github.com/users/bwalks/followers", "following_url": "https://api.github.com/users/bwalks/following{/other_user}", "gists_url": "https://api.github.com/users/bwalks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwalks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwalks/subscriptions", "organizations_url": "https://api.github.com/users/bwalks/orgs", "repos_url": "https://api.github.com/users/bwalks/repos", "events_url": "https://api.github.com/users/bwalks/events{/privacy}", "received_events_url": "https://api.github.com/users/bwalks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-08T15:49:47Z", "updated_at": "2017-02-08T18:13:43Z", "closed_at": "2017-02-08T18:13:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In previous versions, doing `sys.getsizeof(NoValue())` worked properly. In 0.2.2, the following exception is thrown:\r\n\r\n```python\r\n>>> import sys\r\n>>> sys.getsizeof(NoValue())\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Python/2.7/site-packages/pyasn1/type/base.py\", line 145, in plug\r\n    raise error.PyAsn1Error('Uninitialized ASN.1 value (\"%s\" attribute looked up)' % name)\r\npyasn1.error.PyAsn1Error: Uninitialized ASN.1 value (\"__sizeof__\" attribute looked up)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/14", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/14/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/14/events", "html_url": "https://github.com/etingof/pyasn1/issues/14", "id": 201003945, "node_id": "MDU6SXNzdWUyMDEwMDM5NDU=", "number": 14, "title": "Build new release with fix for \"BytesWarning pyasn1\\codec\\ber\\decoder.py line 95\"", "user": {"login": "sybrenstuvel", "id": 1092128, "node_id": "MDQ6VXNlcjEwOTIxMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1092128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sybrenstuvel", "html_url": "https://github.com/sybrenstuvel", "followers_url": "https://api.github.com/users/sybrenstuvel/followers", "following_url": "https://api.github.com/users/sybrenstuvel/following{/other_user}", "gists_url": "https://api.github.com/users/sybrenstuvel/gists{/gist_id}", "starred_url": "https://api.github.com/users/sybrenstuvel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sybrenstuvel/subscriptions", "organizations_url": "https://api.github.com/users/sybrenstuvel/orgs", "repos_url": "https://api.github.com/users/sybrenstuvel/repos", "events_url": "https://api.github.com/users/sybrenstuvel/events{/privacy}", "received_events_url": "https://api.github.com/users/sybrenstuvel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-16T12:13:19Z", "updated_at": "2017-02-05T09:09:38Z", "closed_at": "2017-02-05T09:09:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm the author of the Python-RSA library. [One of my open tickets](https://github.com/sybrenstuvel/python-rsa/issues/80) is waiting for a release of PyASN1 that would close the [\"BytesWarning pyasn1\\codec\\ber\\decoder.py line 95\"](https://sourceforge.net/p/pyasn1/discussion/324581/thread/45aadffe/) issue. The issue itself was closed 10 months ago, and the [last release on Pypi](https://pypi.python.org/pypi/pyasn1) is 16 months old, so I was wondering when you'll do another release to PyPi.\r\n\r\nCheers,\r\nSybren\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/11", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/11/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/11/events", "html_url": "https://github.com/etingof/pyasn1/issues/11", "id": 177405414, "node_id": "MDU6SXNzdWUxNzc0MDU0MTQ=", "number": 11, "title": "DER and CER encoding not canonical", "user": {"login": "real-or-random", "id": 1071625, "node_id": "MDQ6VXNlcjEwNzE2MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1071625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/real-or-random", "html_url": "https://github.com/real-or-random", "followers_url": "https://api.github.com/users/real-or-random/followers", "following_url": "https://api.github.com/users/real-or-random/following{/other_user}", "gists_url": "https://api.github.com/users/real-or-random/gists{/gist_id}", "starred_url": "https://api.github.com/users/real-or-random/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions", "organizations_url": "https://api.github.com/users/real-or-random/orgs", "repos_url": "https://api.github.com/users/real-or-random/repos", "events_url": "https://api.github.com/users/real-or-random/events{/privacy}", "received_events_url": "https://api.github.com/users/real-or-random/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331513984, "node_id": "MDU6TGFiZWwzMzE1MTM5ODQ=", "url": "https://api.github.com/repos/etingof/pyasn1/labels/enhancement", "name": "enhancement", "color": "edffab", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-16T11:39:45Z", "updated_at": "2017-10-17T21:38:27Z", "closed_at": "2017-10-17T21:38:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "DER/CER encoding is supposed to be canonical, i.e., there is only one valid substrate for a value.\n\nHowever:\n\n```\n>>> from pyasn1.type import univ\n>>> from pyasn1.codec.der import der_encoder, der_decoder\n\n>>> substrate1 = der_encoder.encode(univ.OctetString(\"long string\"))\n>>> substrate2 = der_encoder.encode(univ.OctetString(\"long string\"), maxChunkSize=2)\n\n>>> substrate1 != substrate2\nTrue\n\n>>> der_decoder.decode(substrate1)\n(OctetString(b'long string', tagSet=TagSet((), Tag(tagClass=0, tagFormat=32, tagId=4))), b'')\n\n>>> der_decoder.decode(substrate2)\n(OctetString(b'long string', tagSet=TagSet((), Tag(tagClass=0, tagFormat=32, tagId=4))), b'')\n```\n\nThe same happens with CER.\n\nThe problem here is that BER encoding actually forbids chunked strings, and CER exactly specifies when they are allowed. (See 9.2 and 10.2 in the X.690 spec)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/10", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/10/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/10/events", "html_url": "https://github.com/etingof/pyasn1/issues/10", "id": 160376044, "node_id": "MDU6SXNzdWUxNjAzNzYwNDQ=", "number": 10, "title": "there is a INTEGER in Sequence", "user": {"login": "astwyg", "id": 8462079, "node_id": "MDQ6VXNlcjg0NjIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8462079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astwyg", "html_url": "https://github.com/astwyg", "followers_url": "https://api.github.com/users/astwyg/followers", "following_url": "https://api.github.com/users/astwyg/following{/other_user}", "gists_url": "https://api.github.com/users/astwyg/gists{/gist_id}", "starred_url": "https://api.github.com/users/astwyg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astwyg/subscriptions", "organizations_url": "https://api.github.com/users/astwyg/orgs", "repos_url": "https://api.github.com/users/astwyg/repos", "events_url": "https://api.github.com/users/astwyg/events{/privacy}", "received_events_url": "https://api.github.com/users/astwyg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-15T09:22:34Z", "updated_at": "2016-06-20T08:32:32Z", "closed_at": "2016-06-20T08:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi guys,\n\ni am new in ASN.1 coding, but there is a mission for me, to encode some data to a bin file, so i find this outstanding repo to do the job.\n\nmy data is like:\n\n``` xml\n<!-- message 1 -->\n<APPLICATION_1>\n   <APPLICATION_33>\n      <APPLICATION_50>0A</APPLICATION_50>\n      <APPLICATION_53>30303633</APPLICATION_53>\n      <APPLICATION_54>3230313630343239313533303030</APPLICATION_54>\n      <APPLICATION_55>0A</APPLICATION_55>\n   </APPLICATION_33>\n   <APPLICATION_32></APPLICATION_32>\n   <APPLICATION_34>\n      <APPLICATION_50>5A</APPLICATION_50>\n      <APPLICATION_53>30303633</APPLICATION_53>\n      <APPLICATION_57>00</APPLICATION_57>\n      <APPLICATION_63>00</APPLICATION_63>\n   </APPLICATION_34>\n</APPLICATION_1>\n```\n\ni wrote a script like this:\n\n``` python\n# -*- coding: utf-8 -*-\nfrom pyasn1.type import univ, namedtype, tag\nfrom pyasn1.codec.der import encoder\nimport struct\n\n\nclass Header(univ.Sequence):\n    tagSet = univ.Integer.tagSet.tagExplicitly(\n        tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 33)\n    )\n    componentType = namedtype.NamedTypes(\n        namedtype.NamedType(\n            'APPLICATION_50',\n            univ.Integer().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 50)\n            )\n        ),\n        namedtype.NamedType(\n            'APPLICATION_53',\n            univ.OctetString().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 53)\n            )\n        ),\n        namedtype.NamedType(\n            'APPLICATION_54',\n            univ.OctetString().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 54)\n            )\n        ),\n        namedtype.NamedType(\n            'APPLICATION_55',\n            univ.Integer().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 55)\n            )\n        ),\n    )\n\n\nclass Tail(univ.Sequence):\n    tagSet = univ.Integer.tagSet.tagExplicitly(\n        tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 34)\n    )\n    componentType = namedtype.NamedTypes(\n        namedtype.NamedType(\n            'APPLICATION_50',\n            univ.Integer().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 50)\n            )\n        ),\n        namedtype.NamedType(\n            'APPLICATION_53',\n            univ.OctetString().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 53)\n            )\n        ),\n        namedtype.NamedType(\n            'APPLICATION_57',\n            univ.OctetString().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 57)\n            )\n        ),\n        namedtype.NamedType(\n            'APPLICATION_63',\n            univ.Integer().subtype(\n                implicitTag=tag.Tag(tag.tagClassApplication, tag.tagFormatConstructed, 63)\n            )\n        ),\n    )\n\n\nclass Record(univ.Sequence):\n    tagSet = univ.Integer.tagSet.tagExplicitly(\n        tag.Tag(tag.tagClassApplication, tag.tagFormatSimple, 1)\n    )\n    componentType = namedtype.NamedTypes(\n        namedtype.NamedType(\n            'APPLICATION_33',\n            Header()\n        ),\n        namedtype.NamedType(\n            'APPLICATION_34',\n            Tail()\n        )\n    )\n\n\ndef trans():\n\n    header = Header()\n    header.setComponentByName('APPLICATION_50', 10)\n    header.setComponentByName('APPLICATION_53', \"0063\")\n    header.setComponentByName('APPLICATION_54', \"20160429153000\")\n    header.setComponentByName('APPLICATION_55', 10)\n\n    tail = Tail()\n    tail.setComponentByName(\"APPLICATION_50\", 10)\n    tail.setComponentByName(\"APPLICATION_53\", \"0063\")\n    tail.setComponentByName(\"APPLICATION_57\", \"00\")\n    tail.setComponentByName(\"APPLICATION_63\", 10)\n\n    record = Record()\n    record.setComponentByName(\"APPLICATION_33\", header)\n    record.setComponentByName(\"APPLICATION_34\", tail)\n\n    print(record.prettyPrint())\n    asn1 = encoder.encode(record)\n    with open(\"dist.der\",\"wb\") as f:\n        f.write(asn1)\n    print(asn1.encode(\"hex\"))\n\n\nif __name__ == \"__main__\":\n    trans()\n```\n\nthe coder works fine, but the result seems not good, a INTEGER is appears unexpected, i decoded the result to XML, which is:\n\n``` XML\n<!-- message 1 -->\n<APPLICATION_1>\n   <INTEGER>\n      <APPLICATION_33>\n         <INTEGER>\n            <APPLICATION_50>0A</APPLICATION_50>\n            <APPLICATION_53>30303633</APPLICATION_53>\n            <APPLICATION_54>3230313630343239313533303030</APPLICATION_54>\n            <APPLICATION_55>0A</APPLICATION_55>\n         </INTEGER>\n      </APPLICATION_33>\n      <APPLICATION_34>\n         <INTEGER>\n            <APPLICATION_50>0A</APPLICATION_50>\n            <APPLICATION_53>30303633</APPLICATION_53>\n            <APPLICATION_57>3030</APPLICATION_57>\n            <APPLICATION_63>0A</APPLICATION_63>\n         </INTEGER>\n      </APPLICATION_34>\n   </INTEGER>\n</APPLICATION_1>\n```\n\ni think there is something wrong in the define of `Header` and `Tail` class, but i cannot figure out them.\n\nany help is greatly appreciated!\n\nRegards.\n\nAether WANG\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/etingof/pyasn1/issues/8", "repository_url": "https://api.github.com/repos/etingof/pyasn1", "labels_url": "https://api.github.com/repos/etingof/pyasn1/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/etingof/pyasn1/issues/8/comments", "events_url": "https://api.github.com/repos/etingof/pyasn1/issues/8/events", "html_url": "https://github.com/etingof/pyasn1/issues/8", "id": 157855711, "node_id": "MDU6SXNzdWUxNTc4NTU3MTE=", "number": 8, "title": "Hexa Value Constraint", "user": {"login": "Mourhamo", "id": 17826439, "node_id": "MDQ6VXNlcjE3ODI2NDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/17826439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mourhamo", "html_url": "https://github.com/Mourhamo", "followers_url": "https://api.github.com/users/Mourhamo/followers", "following_url": "https://api.github.com/users/Mourhamo/following{/other_user}", "gists_url": "https://api.github.com/users/Mourhamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mourhamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mourhamo/subscriptions", "organizations_url": "https://api.github.com/users/Mourhamo/orgs", "repos_url": "https://api.github.com/users/Mourhamo/repos", "events_url": "https://api.github.com/users/Mourhamo/events{/privacy}", "received_events_url": "https://api.github.com/users/Mourhamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-01T08:57:18Z", "updated_at": "2016-06-02T14:54:42Z", "closed_at": "2016-06-02T14:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\n\nI think it is a new issue, it is regarding to the size constraint:\nfile : constraint.py \nfunction : ValueSizeConstraint \nline 106 : l = len(value) \n\nIf ASN1 file define a variable with the terms : \"fileID OCTET STRING (SIZE(2))\"\nThat means,it has to be an octet string of length 2 Octets\n\neg: fileID = '0102'\n\nor in the function ValueSizeConstraint (in constraint.py)\nin line 106 we count the number of string characters and not octets\n\nto day : line 106 : l = len(value) \nI corrected by : line 106 : l = len(value)/2 \nto count the number of OCTETs and not the string characters\n\nin my case it correct the problem\n\nRegards\n\nMourad\n", "performed_via_github_app": null, "score": 1.0}]}