{"total_count": 165, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1234", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1234/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1234/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1234", "id": 672440351, "node_id": "MDU6SXNzdWU2NzI0NDAzNTE=", "number": 1234, "title": "http://python-hyper.org/h2/ is a broken link", "user": {"login": "scr-oath", "id": 41922797, "node_id": "MDQ6VXNlcjQxOTIyNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/41922797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scr-oath", "html_url": "https://github.com/scr-oath", "followers_url": "https://api.github.com/users/scr-oath/followers", "following_url": "https://api.github.com/users/scr-oath/following{/other_user}", "gists_url": "https://api.github.com/users/scr-oath/gists{/gist_id}", "starred_url": "https://api.github.com/users/scr-oath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scr-oath/subscriptions", "organizations_url": "https://api.github.com/users/scr-oath/orgs", "repos_url": "https://api.github.com/users/scr-oath/repos", "events_url": "https://api.github.com/users/scr-oath/events{/privacy}", "received_events_url": "https://api.github.com/users/scr-oath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-04T01:34:38Z", "updated_at": "2020-08-04T18:40:03Z", "closed_at": "2020-08-04T18:40:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://python-hyper.org/h2/ gets a 404 error and is linked from the README.md on this site.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1231", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1231/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1231/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1231/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1231", "id": 668096488, "node_id": "MDU6SXNzdWU2NjgwOTY0ODg=", "number": 1231, "title": "ValueError: Stream ID must be non-zero", "user": {"login": "mhils", "id": 1019198, "node_id": "MDQ6VXNlcjEwMTkxOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1019198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhils", "html_url": "https://github.com/mhils", "followers_url": "https://api.github.com/users/mhils/followers", "following_url": "https://api.github.com/users/mhils/following{/other_user}", "gists_url": "https://api.github.com/users/mhils/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhils/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhils/subscriptions", "organizations_url": "https://api.github.com/users/mhils/orgs", "repos_url": "https://api.github.com/users/mhils/repos", "events_url": "https://api.github.com/users/mhils/events{/privacy}", "received_events_url": "https://api.github.com/users/mhils/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T19:42:58Z", "updated_at": "2020-07-30T07:03:26Z", "closed_at": "2020-07-30T07:03:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Caught this one while fuzzing @mitmproxy: `receive_data` raises a ValueError under specific circumstances, it should raise a ProtocolError instead.\r\n```python\r\nimport h2.connection\r\nconn = h2.connection.H2Connection()\r\nconn.send_headers(1, [\r\n    (':authority', 'example.com'),\r\n    (':path', '/'),\r\n    (':scheme', 'https'),\r\n    (':method', 'GET'),\r\n])\r\nconn.reset_stream(1)\r\n# the following raises ValueError: Stream ID must be non-zero\r\nconn.receive_data(b'\\x00\\x00\\x07\\x05\\x04\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x84\\x86\\x82')  \r\n```\r\n([full traceback](https://gist.github.com/mhils/1fd3f5c9fde98253e0f0eb8a58dae907))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1226", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1226/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1226/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1226/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1226", "id": 645649004, "node_id": "MDU6SXNzdWU2NDU2NDkwMDQ=", "number": 1226, "title": "https://python-hyper.org/h2/ returns 403 Forbidden", "user": {"login": "scr-oath", "id": 41922797, "node_id": "MDQ6VXNlcjQxOTIyNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/41922797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scr-oath", "html_url": "https://github.com/scr-oath", "followers_url": "https://api.github.com/users/scr-oath/followers", "following_url": "https://api.github.com/users/scr-oath/following{/other_user}", "gists_url": "https://api.github.com/users/scr-oath/gists{/gist_id}", "starred_url": "https://api.github.com/users/scr-oath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scr-oath/subscriptions", "organizations_url": "https://api.github.com/users/scr-oath/orgs", "repos_url": "https://api.github.com/users/scr-oath/repos", "events_url": "https://api.github.com/users/scr-oath/events{/privacy}", "received_events_url": "https://api.github.com/users/scr-oath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T15:19:02Z", "updated_at": "2020-06-25T18:02:11Z", "closed_at": "2020-06-25T18:02:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SSIA (Subject says it all)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1224", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1224/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1224/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1224", "id": 622321193, "node_id": "MDU6SXNzdWU2MjIzMjExOTM=", "number": 1224, "title": "Proxy not used when using hyper as an adapter in requests", "user": {"login": "txtsd", "id": 768728, "node_id": "MDQ6VXNlcjc2ODcyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/768728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txtsd", "html_url": "https://github.com/txtsd", "followers_url": "https://api.github.com/users/txtsd/followers", "following_url": "https://api.github.com/users/txtsd/following{/other_user}", "gists_url": "https://api.github.com/users/txtsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/txtsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txtsd/subscriptions", "organizations_url": "https://api.github.com/users/txtsd/orgs", "repos_url": "https://api.github.com/users/txtsd/repos", "events_url": "https://api.github.com/users/txtsd/events{/privacy}", "received_events_url": "https://api.github.com/users/txtsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-21T07:55:02Z", "updated_at": "2020-05-21T18:23:16Z", "closed_at": "2020-05-21T18:23:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport requests\r\nfrom hyper.contrib import HTTP20Adapter\r\ns = requests.session()\r\ns.mount('https://httpbin.org', HTTP20Adapter())\r\ns.proxies = {\r\n     'http': 'http://192.168.1.2:8888/',\r\n     'https': 'https://192.168.1.2:8888/'\r\n}\r\ns.get('https://httpbin.org/anything')\r\n```\r\n\r\nThis sends a request, but it does not go through the defined proxy. Without the adapter, it does go through the proxy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1222", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1222/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1222/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1222/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1222", "id": 619333236, "node_id": "MDU6SXNzdWU2MTkzMzMyMzY=", "number": 1222, "title": "Expand client examples", "user": {"login": "Molanda", "id": 989199, "node_id": "MDQ6VXNlcjk4OTE5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/989199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Molanda", "html_url": "https://github.com/Molanda", "followers_url": "https://api.github.com/users/Molanda/followers", "following_url": "https://api.github.com/users/Molanda/following{/other_user}", "gists_url": "https://api.github.com/users/Molanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Molanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Molanda/subscriptions", "organizations_url": "https://api.github.com/users/Molanda/orgs", "repos_url": "https://api.github.com/users/Molanda/repos", "events_url": "https://api.github.com/users/Molanda/events{/privacy}", "received_events_url": "https://api.github.com/users/Molanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-16T00:05:54Z", "updated_at": "2020-07-31T12:38:07Z", "closed_at": "2020-07-31T12:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for providing this framework.\r\n\r\nI have adapted the Twisted `post_request.py` example as a Tornado client, which I am using to connect to the Apple Push Notification service.\r\n\r\nHowever, the example is hard coded for a single stream and it is unclear how to properly process multiple streams of data with a client.\r\n\r\nIn the example, the connection is closed in `StreamEnded`.  This is probably not the correct place for this when using multiple streams.  Should the client also handle `ConnectionTerminated`?\r\n\r\nThe first stream's header and data is sent in `SettingsAcknowledged`.  If we want to keep this connection open and send additional streams with headers and data, where in the flow would that happen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1219", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1219/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1219/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1219/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1219", "id": 585933194, "node_id": "MDU6SXNzdWU1ODU5MzMxOTQ=", "number": 1219, "title": "Debug output: encoding generator object \ud83d\ude05", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-23T05:06:16Z", "updated_at": "2020-08-06T01:14:10Z", "closed_at": "2020-08-05T20:28:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running a simple client using `h2` with log level DEBUG:\r\n\r\n```\r\nDEBUG:hpack.hpack:Adding (b'foo', b'bar') to the header table\r\nDEBUG:hpack.hpack:Encoding 2 with 7 bits\r\nDEBUG:hpack.hpack:Encoding 3 with 7 bits\r\nDEBUG:hpack.hpack:Encoded header block to b'\\x83\\x87A\\x8a\\xa0\\xe4\\x1d\\x13\\x9d\\t\\xb8 \\xbe\\xefD\\x8ba\\x96$/s\\x10\\xac\\x0ccX_@\\x82\\x94\\xe7\\x83\\x8cv\\x7f'\r\nDEBUG:hpack.hpack:HPACK encoding <generator object _check_path_header.<locals>.inner at 0x7fda203e94a0>\r\n```\r\nThe last debug line looks odd.\r\nI'm guessing that data is [probably] sent correctly on the line.\r\nIn that case it's only the `hpack` debug that's funky.\r\n\r\nCode in question is here: https://github.com/python-hyper/hyper-h2/blob/13005074d14c7d32f8eaf1683b854446a09d09d3/h2/utilities.py#L490-L513 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1216", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1216/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1216/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1216/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1216", "id": 579048102, "node_id": "MDU6SXNzdWU1NzkwNDgxMDI=", "number": 1216, "title": "Documentation: search result links are broken...", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-11T06:55:40Z", "updated_at": "2020-08-02T11:49:31Z", "closed_at": "2020-08-02T11:49:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "TL;DR The search results have links with extra `.rst` in them.\r\n\r\nFor example:\r\n* go to https://python-hyper.org/projects/h2/en/stable/index.html\r\n* search for \"increment\" in the search box\r\n* you are sent to https://python-hyper.org/projects/h2/en/stable/search.html?q=increment&check_keywords=yes&area=default\r\n* click the first result, \"Advanced usage\"\r\n* you are taken to https://python-hyper.org/projects/h2/en/stable/advanced-usage.rst.html?highlight=increment which is a 404\r\n* the correct link is https://python-hyper.org/projects/h2/en/stable/advanced-usage.html?highlight=increment", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1210", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1210/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1210/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1210/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1210", "id": 551966679, "node_id": "MDU6SXNzdWU1NTE5NjY2Nzk=", "number": 1210, "title": "Flow control: WINDOW_UPDATE swallowed on closed streams", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-19T18:53:13Z", "updated_at": "2020-02-08T11:23:28Z", "closed_at": "2020-02-08T11:23:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Imagine the following scenario:\r\n\r\n* client sends `HEADERS` for a request + `end_stream` to the server\r\n* server sends `HEADERS` for response and starts sending a few `DATA` frames\r\n* client continuously sends `WINDOW_UPDATE` for the consumed data\r\n* server sends more `DATA` frames\r\n* client sends `RST_STREAM` to cancel this stream\r\n* client has a few unprocessed `DATA` frames in it's incoming buffer\r\n* and the server might have already sent a few more before having canceled the stream\r\n\r\nThe problem here seems to be that the client thinks the stream is already closed. Receiving `DATA` frames on a closed streams causes a `h2.exceptions.StreamClosedError`\r\nhttps://github.com/python-hyper/hyper-h2/blob/306609aa72c5ad4860a72fc4caa5db9ef5ab5b26/h2/stream.py#L317\r\n\r\nThis exception is then swallowed and replaced with more generic error handling\r\nhttps://github.com/python-hyper/hyper-h2/blob/306609aa72c5ad4860a72fc4caa5db9ef5ab5b26/h2/connection.py#L1487\r\n\r\nThis means the client is completely unaware that it just tried to process a `DATA` frame, yet it did!\r\nSince there was no proper `DataReceived` event for the user to handle, nobody will call `acknowledge_received_data` to update the flow control and send a `WINDOW_UPDATE`.\r\n\r\nNow we have effectively starved the whole h2 connection because one \"rogue\" stream was taking all the available connection flow window and nobody is able to update it because the information about the `DATA` frame is swallowed by the exception handling.\r\n\r\n*A short PoC script*\r\nIt wraps one of the `H2Connection` functions to add a debug print for the root cause and it prints the remaining flow window size. After a few seconds this will go to 0, and therefore halting all streams in the connection.\r\n\r\nThe expected output of the script is a continuous output of `DATA` frames of stream 1, every second or so, with 61 bytes, and then many smaller ones for the additional requests.\r\n\r\nIf you call the script without any CLI args, it only create the first continuous stream, just to demontrate that the `acknowledge_received_data` works in principle.\r\n\r\nIf you call the script with a single CLI arg `foo`, the script will generate a few more requests, and then send a `RST_STREAM` shortly after. This causes a lot of unprocessed `DATA` frames to be swallowed, and the input flow window will shortly after be starved to 0.\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport certifi\r\nimport h2.connection\r\nimport h2.events\r\n\r\nimport traceback\r\nimport sys\r\nimport errno\r\nimport socket\r\nimport ssl\r\nimport time\r\n\r\nSERVER_NAME = 'http2.golang.org'\r\n\r\nsocket.setdefaulttimeout(15)\r\n\r\nclass FoobarH2Connection(h2.connection.H2Connection):\r\n    def _receive_data_frame(self, frame):\r\n        try:\r\n            return super()._receive_data_frame(frame)\r\n        except Exception as e:\r\n            print(\"Exception detected - swallowing the DataFrame and flow_controlled_length:\", e.__dict__, c._inbound_flow_control_window_manager.current_window_size)\r\n            raise e\r\n\r\nc = FoobarH2Connection()\r\nc.initiate_connection()\r\n\r\nctx = ssl.create_default_context(cafile=certifi.where())\r\nctx.set_alpn_protocols(['h2', 'http/1.1'])\r\n\r\ns = socket.create_connection((SERVER_NAME, 443))\r\ns = ctx.wrap_socket(s, server_hostname=SERVER_NAME)\r\n\r\ns.sendall(c.data_to_send())\r\n\r\nheaders = [\r\n    (':method', 'GET'),\r\n    (':path', '/clockstream'),\r\n    (':authority', SERVER_NAME),\r\n    (':scheme', 'https'),\r\n]\r\nc.send_headers(1, headers, end_stream=True)\r\ns.sendall(c.data_to_send())\r\n\r\ncount = 2\r\nwhile True:\r\n    data = s.recv(65536 * 1024)\r\n    if not data:\r\n        break\r\n\r\n    count += 1\r\n    if count % 2 == 1 and len(sys.argv) > 1:\r\n        headers = [\r\n            (':method', 'GET'),\r\n            (':path', '/file/gopher.png'),\r\n            (':authority', SERVER_NAME),\r\n            (':scheme', 'https'),\r\n        ]\r\n        c.send_headers(count, headers, end_stream=True)\r\n        s.sendall(c.data_to_send())\r\n        time.sleep(0.25)\r\n        c.reset_stream(count)\r\n\r\n    events = c.receive_data(data)\r\n    for event in events:\r\n        if isinstance(event, h2.events.DataReceived):\r\n            print(event, c._inbound_flow_control_window_manager.current_window_size)\r\n            c.acknowledge_received_data(event.flow_controlled_length, event.stream_id)\r\n\r\n    s.sendall(c.data_to_send())\r\n```\r\n\r\nThe output on my system is:\r\n```\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 3, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 49151\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 3, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 47867\r\n<DataReceived stream_id:1, flow_controlled_length:1180, data:23207e314b42206f66206a756e6b20746f20666f> 46687\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 3, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 46687\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 5, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 30303\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 5, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 29019\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 5, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 29019\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 7, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 12635\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 7, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 11351\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 7, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 11351\r\nException detected - swallowing the DataFrame and flow_controlled_length: <class 'h2.exceptions.StreamClosedError'> {'stream_id': 9, 'error_code': <ErrorCodes.STREAM_CLOSED: 5>, '_events': []} 0\r\n...\r\n<after 15 seconds we fail as expected with a socket.timeout: The read operation timed out>\r\n```\r\n\r\nref https://github.com/mitmproxy/mitmproxy/issues/3780", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1207", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1207/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1207/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1207/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1207", "id": 545063976, "node_id": "MDU6SXNzdWU1NDUwNjM5NzY=", "number": 1207, "title": "Consider using blocklist", "user": {"login": "annevk", "id": 1544111, "node_id": "MDQ6VXNlcjE1NDQxMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1544111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annevk", "html_url": "https://github.com/annevk", "followers_url": "https://api.github.com/users/annevk/followers", "following_url": "https://api.github.com/users/annevk/following{/other_user}", "gists_url": "https://api.github.com/users/annevk/gists{/gist_id}", "starred_url": "https://api.github.com/users/annevk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annevk/subscriptions", "organizations_url": "https://api.github.com/users/annevk/orgs", "repos_url": "https://api.github.com/users/annevk/repos", "events_url": "https://api.github.com/users/annevk/events{/privacy}", "received_events_url": "https://api.github.com/users/annevk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-03T16:30:49Z", "updated_at": "2020-01-03T19:04:21Z", "closed_at": "2020-01-03T19:04:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When grepping another codebase I got\r\n```\r\ntools/third_party/h2/examples/fragments/client_https_setup_fragment.py:    # blacklist defined in this section allows only the AES GCM and ChaCha20\r\ntools/third_party/h2/examples/fragments/server_https_setup_fragment.py:    # blacklist defined in this section allows only the AES GCM and ChaCha20\r\n```\r\nIt'd be nice to replace that with blocklist or equivalent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1206", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1206/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1206/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1206/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1206", "id": 537482253, "node_id": "MDU6SXNzdWU1Mzc0ODIyNTM=", "number": 1206, "title": "Handle header values with whitespace pragmatically.", "user": {"login": "tomchristie", "id": 647359, "node_id": "MDQ6VXNlcjY0NzM1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomchristie", "html_url": "https://github.com/tomchristie", "followers_url": "https://api.github.com/users/tomchristie/followers", "following_url": "https://api.github.com/users/tomchristie/following{/other_user}", "gists_url": "https://api.github.com/users/tomchristie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomchristie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomchristie/subscriptions", "organizations_url": "https://api.github.com/users/tomchristie/orgs", "repos_url": "https://api.github.com/users/tomchristie/repos", "events_url": "https://api.github.com/users/tomchristie/events{/privacy}", "received_events_url": "https://api.github.com/users/tomchristie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T10:53:56Z", "updated_at": "2019-12-13T15:45:31Z", "closed_at": "2019-12-13T15:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Raised via https://github.com/encode/httpx/issues/632\r\n\r\nCurrently header values with trailing whitespace are causing a ProtocolError to be raised. This is technically correct, but pragmatically it'd probably be a good idea for `hyper-h2` to handle the case, silently trimming the whitespace.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1205", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1205/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1205/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1205/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1205", "id": 516134386, "node_id": "MDU6SXNzdWU1MTYxMzQzODY=", "number": 1205, "title": "StreamClosedError on receiving WINDOW_UPDATE on a stream in a \"closed\" state", "user": {"login": "seleznevae", "id": 16498414, "node_id": "MDQ6VXNlcjE2NDk4NDE0", "avatar_url": "https://avatars2.githubusercontent.com/u/16498414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seleznevae", "html_url": "https://github.com/seleznevae", "followers_url": "https://api.github.com/users/seleznevae/followers", "following_url": "https://api.github.com/users/seleznevae/following{/other_user}", "gists_url": "https://api.github.com/users/seleznevae/gists{/gist_id}", "starred_url": "https://api.github.com/users/seleznevae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seleznevae/subscriptions", "organizations_url": "https://api.github.com/users/seleznevae/orgs", "repos_url": "https://api.github.com/users/seleznevae/repos", "events_url": "https://api.github.com/users/seleznevae/events{/privacy}", "received_events_url": "https://api.github.com/users/seleznevae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-01T14:07:51Z", "updated_at": "2020-02-08T14:32:40Z", "closed_at": "2020-02-08T14:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI am writing http2 client on c++ using `libnghttp2` and test it with server written on python and use hyper-h2 for the server (hyper-h2 version is `v3.1.1`).\r\n\r\nI've encountered an error when hyper-h2 generates `StreamClosedError` on receiving `WINDOW_UPDATE` for a stream that is in closed stated. This problem seems similar to https://github.com/python-hyper/hyper-h2/issues/1183 but it is not quite the same.\r\n\r\nShort description of the timeline from client's point of view:\r\n```\r\n> Client initiates connection and makes request (stream_id = 1)\r\n< Client receives response\r\n> Client tries to do 3 requests simultaneously (streams_id = 3, 5, 7)\r\n< Client receives part of the response for stream_id 3\r\n> Client sends WINDOW_UPDATE for connection (stream_id = 0) and for stream_id = 3\r\n< Client receives rest of the response for stream_id 3\r\n< Client receives part of the response for stream_id 5\r\n< Client receives GOAWAY\r\n```\r\n\r\n\r\nShort description of the timeline from server's point of view:\r\n```\r\n> Server accepts connection and receives request (stream_id = 1)\r\n< Server replies to stream_id = 1 (stream_id = 1 is in closed state)\r\n> Server receives request (stream_id = 3)\r\n> Server receives request (stream_id = 5)\r\n< Server sends first part of the reply for stream_id = 3\r\n< Server sends rest of the reply for stream_id = 3 (stream_id == 3 is now in 'closed' state)\r\n< Server sends first part of reply (stream_id = 5) (window is to small to send all data)\r\n> Server receives request (stream_id = 7) (at this point closed stream with id == 3 is moved from container that holds streams to '_closed_streams' container)\r\n> Server receives WINDOW_UPDATE for connection (stream_id == 0)\r\n> Server receives WINDOW_UPDATE for connection (stream_id == 3). At this point '_get_stream_by_id' fails because it can't find stream with id == 3 (this stream is now in container 'Connection._closed_streams' of the connection) and StreamClosedError is generated.\r\n< Server sends GOAWAY and closes connection\r\n```\r\n\r\nSo the main problem is that stream with id == 3 is closed by `h2`. Then after receiving another request this closed stream is moved to `Connection._closed_streams`. And when WINDOW_UPDATE for id == 3 arrives, hyper-h2 cannot find stream with such id.\r\n\r\nHere are more detailed logs of the server (Logs from `hyper-h2` code itself have tag [hyper-h2]. Also I logged states of  `Connection._closed_streams` and  `Connection.streams` when an error occurred):\r\n```\r\nStarting http2 server\r\nStarting http2 server\r\nH2Protocol __init__\r\nconnection_made\r\n\r\ndata_received: size = 76\r\n[hyper-h2] [_receive_settings_frame]; id = 0\r\n[hyper-h2] [_receive_headers_frame] stream_id = 1\r\n RemoteSettingsChanged event\r\n RequestReceived event; stream_id = 1\r\n StreamEnded event; stream_id = 1\r\n  send_data; stream_id = 1; data_to_send = 491\r\n   remained_to_send = 491; local_flow_control_window = 65535\r\n    self.conn.send_data chunksize = 491; stream_id = 1\r\n\r\ndata_received: size = 9\r\n[hyper-h2] [_receive_settings_frame]; id = 0\r\n\r\ndata_received: size = 75\r\n[hyper-h2] [_receive_headers_frame] stream_id = 3\r\n[hyper-h2] [_open_streams] pop stream_id =1 (moving it to self._closed_streams)\r\n[hyper-h2] [_receive_headers_frame] stream_id = 5\r\n RequestReceived event; stream_id = 3\r\n StreamEnded event; stream_id = 3\r\n RequestReceived event; stream_id = 5\r\n StreamEnded event; stream_id = 5\r\n  send_data; stream_id = 3; data_to_send = 32769\r\n   remained_to_send = 32769; local_flow_control_window = 65044\r\n    self.conn.send_data chunksize = 16384; stream_id = 3\r\n   remained_to_send = 16385; local_flow_control_window = 48660\r\n    self.conn.send_data chunksize = 16384; stream_id = 3\r\n   remained_to_send = 1; local_flow_control_window = 32276\r\n    self.conn.send_data chunksize = 1; stream_id = 3\r\n  send_data; stream_id = 5; data_to_send = 32769\r\n   remained_to_send = 32769; local_flow_control_window = 32275\r\n    self.conn.send_data chunksize = 16384; stream_id = 5\r\n   remained_to_send = 16385; local_flow_control_window = 15891\r\n    self.conn.send_data chunksize = 15891; stream_id = 5\r\n   remained_to_send = 494; local_flow_control_window = 0\r\n    wait_for_flow_control; stream_id = 5\r\n\r\ndata_received: size = 36\r\n[hyper-h2] [_receive_headers_frame] stream_id = 7\r\n[hyper-h2] [_open_streams] pop stream_id =3 (moving it to self._closed_streams)\r\n RequestReceived event; stream_id = 7\r\n StreamEnded event; stream_id = 7\r\n  send_data; stream_id = 7; data_to_send = 32769\r\n   remained_to_send = 32769; local_flow_control_window = 0\r\n    wait_for_flow_control; stream_id = 7\r\n\r\ndata_received: size = 13\r\n[hyper-h2] [_receive_window_update_frame] stream_id = 0; window_increment = 33250\r\n WindowUpdated event; stream_id = 0; delta = 33250\r\n\r\ndata_received: size = 13\r\n[hyper-h2] [_receive_window_update_frame] stream_id = 3; window_increment = 32768\r\n[hyper-h2] [_get_stream_by_id] failed to find stream_id =3\r\n     self.streams = {5: <H2Stream id:5 state:<StreamState.HALF_CLOSED_REMOTE: 4>>, 7: <H2Stream id:7 state:<StreamState.HALF_CLOSED_REMOTE: 4>>}\r\n     self._closed_streams = SizeLimitDict([(1, <StreamClosedBy.SEND_END_STREAM: 0>), (3, <StreamClosedBy.SEND_END_STREAM: 0>)])\r\nStreamClosedError; error_code = 5; stream_id = 3\r\nClosing transport\r\n  wait_for_flow_control END; stream_id = 5\r\n    self.conn.send_data chunksize = 494; stream_id = 5\r\n  wait_for_flow_control END; stream_id = 7\r\n    self.conn.send_data chunksize = 16384; stream_id = 7\r\nconnection_lost\r\n```\r\n\r\nAnd here logs of the client:\r\n```\r\n 13:49:16.560  INFO: [http2] Send Frame Callback: frame HTTP2_SETTINGS(streamId:0)(length:12)(flags:None)\r\n 13:49:16.560  INFO: [http2] Http2Stream constructor\r\n 13:49:16.560  INFO: [http2] Submit request; streamId = 1\r\n 13:49:16.561  INFO: [http2] Send Frame Callback: frame HTTP2_HEADERS(streamId:1)(length:22)(flags:|END_STREAM|END_HEADERS|ACK)\r\n 13:49:16.561  INFO: [http2] Recv Frame Callback: frame HTTP2_SETTINGS(streamId:0)(length:42)(flags:None)\r\n 13:49:16.561  INFO: [http2] Send Frame Callback: frame HTTP2_SETTINGS(streamId:0)(length:0)(flags:|END_STREAM|ACK)\r\n 13:49:16.562  INFO: [http2] Recv Frame Callback: frame HTTP2_SETTINGS(streamId:0)(length:0)(flags:|END_STREAM|ACK)\r\n 13:49:16.563  INFO: [http2] Recv Frame Callback: frame HTTP2_HEADERS(streamId:1)(length:32)(flags:|END_HEADERS)\r\n 13:49:16.563  INFO: [http2] Recv Frame Callback: frame HTTP2_DATA(streamId:1)(length:491)(flags:|END_STREAM|ACK)\r\n 13:49:16.563  INFO: [http2] Close Stream Callback streamId = 1; errorCode = 0\r\n 13:49:16.563  INFO: [http2] ~Http2Stream() destructor (streamId = 1)(errors:no errors)\r\n 13:49:16.571  INFO: [http2] Submit request; streamId = 3\r\n 13:49:16.571  INFO: [http2] Send Frame Callback: frame HTTP2_HEADERS(streamId:3)(length:30)(flags:|END_STREAM|END_HEADERS|ACK)\r\n 13:49:16.572  INFO: [http2] Submit request; streamId = 5\r\n 13:49:16.572  INFO: [http2] Send Frame Callback: frame HTTP2_HEADERS(streamId:5)(length:27)(flags:|END_STREAM|END_HEADERS|ACK)\r\n 13:49:16.572  INFO: [http2] Submit request; streamId = 7\r\n 13:49:16.572  INFO: [http2] Send Frame Callback: frame HTTP2_HEADERS(streamId:7)(length:27)(flags:|END_STREAM|END_HEADERS|ACK)\r\n 13:49:16.574  INFO: [http2] Recv Frame Callback: frame HTTP2_HEADERS(streamId:3)(length:9)(flags:|END_HEADERS)\r\n 13:49:16.574  INFO: [http2] Recv Frame Callback: frame HTTP2_HEADERS(streamId:5)(length:4)(flags:|END_HEADERS)\r\n 13:49:16.575  INFO: [http2] Recv Frame Callback: frame HTTP2_DATA(streamId:3)(length:16384)(flags:None)\r\n 13:49:16.575  INFO: [http2] Send Frame Callback: frame HTTP2_WINDOW_UPDATE(window_size_increment:33250)(streamId:0)(length:4)(flags:None)\r\n 13:49:16.576  INFO: [http2] Recv Frame Callback: frame HTTP2_DATA(streamId:3)(length:16384)(flags:None)\r\n 13:49:16.576  INFO: [http2] Send Frame Callback: frame HTTP2_WINDOW_UPDATE(window_size_increment:32768)(streamId:3)(length:4)(flags:None)\r\n 13:49:16.576  INFO: [http2] Recv Frame Callback: frame HTTP2_DATA(streamId:3)(length:1)(flags:|END_STREAM|ACK)\r\n 13:49:16.576  INFO: [http2] Close Stream Callback streamId = 3; errorCode = 0\r\n 13:49:16.576  INFO: [http2] ~Http2Stream() destructor (streamId = 3)(errors:no errors)\r\n 13:49:16.577  INFO: [http2] Recv Frame Callback: frame HTTP2_DATA(streamId:5)(length:16384)(flags:None)\r\n 13:49:16.577  INFO: [http2] Recv Frame Callback: frame HTTP2_DATA(streamId:5)(length:15891)(flags:None)\r\n 13:49:16.577  INFO: [http2] Recv Frame Callback: frame HTTP2_HEADERS(streamId:7)(length:4)(flags:|END_HEADERS)\r\n 13:49:16.578  INFO: [http2] Recv Frame Callback: frame HTTP2_GOAWAY(error_code:5)(last_stream_id:7)(streamId:0)(length:8)(flags:None)\r\n 13:49:16.578  INFO: [http2] terminateSession; error = GOAWAY_FRAME recieved\r\n 13:49:16.578  INFO: [http2] ~Http2Stream() destructor (streamId = 7)(errors:GOAWAY_FRAME recieved)\r\n 13:49:16.578  INFO: [http2] ~Http2Stream() destructor (streamId = 5)(errors:GOAWAY_FRAME recieved)\r\n```\r\nIf more detailed logs for client or server are needed I can provide them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1204", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1204/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1204/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1204/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1204", "id": 508562428, "node_id": "MDU6SXNzdWU1MDg1NjI0Mjg=", "number": 1204, "title": "Are server written in hyper-h2 backward compatible", "user": {"login": "blueray453", "id": 855297, "node_id": "MDQ6VXNlcjg1NTI5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/855297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueray453", "html_url": "https://github.com/blueray453", "followers_url": "https://api.github.com/users/blueray453/followers", "following_url": "https://api.github.com/users/blueray453/following{/other_user}", "gists_url": "https://api.github.com/users/blueray453/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueray453/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueray453/subscriptions", "organizations_url": "https://api.github.com/users/blueray453/orgs", "repos_url": "https://api.github.com/users/blueray453/repos", "events_url": "https://api.github.com/users/blueray453/events{/privacy}", "received_events_url": "https://api.github.com/users/blueray453/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-17T15:39:39Z", "updated_at": "2019-10-17T15:56:42Z", "closed_at": "2019-10-17T15:56:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found a tutorial on you documentation.\r\n\r\nhttps://python-hyper.org/projects/h2/en/stable/basic-usage.html\r\n\r\nIf I follow the tutorial, then will it be backward compatible to HTTP/1.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1202", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1202/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1202/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1202/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1202", "id": 496685143, "node_id": "MDU6SXNzdWU0OTY2ODUxNDM=", "number": 1202, "title": "Updates from [requires.io] are failing because pytest has dropped Python 2.7 support", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-21T18:19:16Z", "updated_at": "2020-02-08T14:29:54Z", "closed_at": "2020-02-08T14:29:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I went to investigate the failures from those emails; if you look in Travis you see the following error:\r\n\r\n> Collecting pytest==5.1.3 (from -r /home/travis/build/python-hyper/hyper-h2/test_requirements.txt (line 1))\r\n>\r\n>  Could not find a version that satisfies the requirement pytest==5.1.3 (from -r /home/travis/build/python-hyper/hyper-h2/test_requirements.txt (line 1)) (from versions: 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.7.0, 2.7.1, 2.7.2, 2.7.3, 2.8.0, 2.8.1, 2.8.2, 2.8.3, 2.8.4, 2.8.5, 2.8.6, 2.8.7, 2.9.0, 2.9.1, 2.9.2, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.2.0, 3.2.1, 3.2.2, 3.2.3, 3.2.4, 3.2.5, 3.3.0, 3.3.1, 3.3.2, 3.4.0, 3.4.1, 3.4.2, 3.5.0, 3.5.1, 3.6.0, 3.6.1, 3.6.2, 3.6.3, 3.6.4, 3.7.0, 3.7.1, 3.7.2, 3.7.3, 3.7.4, 3.8.0, 3.8.1, 3.8.2, 3.9.1, 3.9.2, 3.9.3, 3.10.0, 3.10.1, 4.0.0, 4.0.1, 4.0.2, 4.1.0, 4.1.1, 4.2.0, 4.2.1, 4.3.0, 4.3.1, 4.4.0, 4.4.1, 4.4.2, 4.5.0, 4.6.0, 4.6.1, 4.6.2, 4.6.3, 4.6.4, 4.6.5)\r\n>\r\n> No matching distribution found for pytest==5.1.3 (from -r /home/travis/build/python-hyper/hyper-h2/test_requirements.txt (line 1))\r\n\r\npytest dropped support for Python 2.7 [in their 5.x series](https://docs.pytest.org/en/latest/py27-py34-deprecation.html), thus this error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1196", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1196/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1196/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1196/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1196", "id": 474841492, "node_id": "MDU6SXNzdWU0NzQ4NDE0OTI=", "number": 1196, "title": "Tolerate receiving frames on a closed stream", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-30T21:59:46Z", "updated_at": "2019-07-31T23:14:14Z", "closed_at": "2019-07-31T23:14:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We encountered this issue while running HTTPX against duckduckgo.com using HTTP/2:\r\n\r\nhttps://github.com/encode/httpx/issues/173\r\n\r\nBasically DDG would emit headers, data with end_stream=True, then emit a window update for that stream. h2 would error out on the window update because the stream is closed. Can h2 be changed to tolerate receiving non-response frames on a closed stream?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1194", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1194/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1194/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1194/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1194", "id": 470216372, "node_id": "MDU6SXNzdWU0NzAyMTYzNzI=", "number": 1194, "title": "Tests fail with pytest 5.x series", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-19T08:59:46Z", "updated_at": "2020-03-15T20:28:41Z", "closed_at": "2020-03-15T20:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The new pytest goes with new raises behaviour and as such some tests fails:\r\n```\r\n[   69s] + PYTHONPATH=:/home/abuild/rpmbuild/BUILDROOT/python-h2-3.1.0-3.4.x86_64/usr/lib/python3.7/site-packages\r\n[   69s] + py.test-3.7 --ignore=_build.python2 --ignore=_build.python3 --ignore=_build.pypy3 -v\r\n[   70s] ============================= test session starts ==============================\r\n[   70s] platform linux -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0 -- /usr/bin/python3\r\n[   70s] cachedir: .pytest_cache\r\n[   70s] hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/abuild/rpmbuild/BUILD/h2-3.1.0/.hypothesis/examples')\r\n[   70s] rootdir: /home/abuild/rpmbuild/BUILD/h2-3.1.0\r\n[   70s] plugins: xdist-1.29.0, forked-1.0.2, cov-2.7.1, hypothesis-4.24.3\r\n[   71s] collecting ... collected 1417 items\r\n```\r\n\r\n```\r\n[  105s] =================================== FAILURES ===================================\r\n[  105s] ______ TestInvalidFrameSequences.test_pseudo_headers_rejected_in_trailer _______\r\n[  105s] \r\n[  105s] self = <test_invalid_headers.TestInvalidFrameSequences object at 0x7f6c7389d470>\r\n[  105s] frame_factory = <helpers.FrameFactory object at 0x7f6c7373fb38>\r\n[  105s] \r\n[  105s]     def test_pseudo_headers_rejected_in_trailer(self, frame_factory):\r\n[  105s]         \"\"\"\r\n[  105s]         Ensure we reject pseudo headers included in trailers\r\n[  105s]         \"\"\"\r\n[  105s]         trailers = [(':path', '/'), ('extra', 'value')]\r\n[  105s]     \r\n[  105s]         c = h2.connection.H2Connection(config=self.server_config)\r\n[  105s]         c.receive_data(frame_factory.preamble())\r\n[  105s]         c.clear_outbound_data_buffer()\r\n[  105s]     \r\n[  105s]         header_frame = frame_factory.build_headers_frame(\r\n[  105s]             self.base_request_headers\r\n[  105s]         )\r\n[  105s]         trailer_frame = frame_factory.build_headers_frame(\r\n[  105s]             trailers, flags=[\"END_STREAM\"]\r\n[  105s]         )\r\n[  105s]         head = header_frame.serialize()\r\n[  105s]         trailer = trailer_frame.serialize()\r\n[  105s]     \r\n[  105s]         c.receive_data(head)\r\n[  105s]         # Raise exception if pseudo header in trailer\r\n[  105s]         with pytest.raises(h2.exceptions.ProtocolError) as e:\r\n[  105s]             c.receive_data(trailer)\r\n[  105s] >       assert \"pseudo-header in trailer\" in str(e)\r\n[  105s] E       AssertionError: assert 'pseudo-header in trailer' in '<ExceptionInfo ProtocolError tblen=9>'\r\n[  105s] E        +  where '<ExceptionInfo ProtocolError tblen=9>' = str(<ExceptionInfo ProtocolError tblen=9>)\r\n[  105s] \r\n[  105s] test/test_invalid_headers.py:207: AssertionError\r\n[  105s] ==================== 1 failed, 1416 passed in 35.85 seconds ====================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1189", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1189/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1189/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1189/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1189", "id": 451158809, "node_id": "MDU6SXNzdWU0NTExNTg4MDk=", "number": 1189, "title": "TLS cert on https://python-hyper.org/ expired", "user": {"login": "ranman", "id": 175163, "node_id": "MDQ6VXNlcjE3NTE2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/175163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranman", "html_url": "https://github.com/ranman", "followers_url": "https://api.github.com/users/ranman/followers", "following_url": "https://api.github.com/users/ranman/following{/other_user}", "gists_url": "https://api.github.com/users/ranman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranman/subscriptions", "organizations_url": "https://api.github.com/users/ranman/orgs", "repos_url": "https://api.github.com/users/ranman/repos", "events_url": "https://api.github.com/users/ranman/events{/privacy}", "received_events_url": "https://api.github.com/users/ranman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-02T06:31:22Z", "updated_at": "2019-06-02T08:57:02Z", "closed_at": "2019-06-02T08:57:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The TLS cert on python-hyper.org expired today May 31st.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1188", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1188/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1188/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1188/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1188", "id": 427951264, "node_id": "MDU6SXNzdWU0Mjc5NTEyNjQ=", "number": 1188, "title": "python-hyper.org down", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T23:11:19Z", "updated_at": "2019-04-21T14:02:47Z", "closed_at": "2019-04-21T14:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Readme links documentation to https://python-hyper.org/h2/ which appears to be down.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1186", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1186/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1186/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1186/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1186", "id": 413865494, "node_id": "MDU6SXNzdWU0MTM4NjU0OTQ=", "number": 1186, "title": "more performace gain", "user": {"login": "drv1234", "id": 38866571, "node_id": "MDQ6VXNlcjM4ODY2NTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/38866571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drv1234", "html_url": "https://github.com/drv1234", "followers_url": "https://api.github.com/users/drv1234/followers", "following_url": "https://api.github.com/users/drv1234/following{/other_user}", "gists_url": "https://api.github.com/users/drv1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/drv1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drv1234/subscriptions", "organizations_url": "https://api.github.com/users/drv1234/orgs", "repos_url": "https://api.github.com/users/drv1234/repos", "events_url": "https://api.github.com/users/drv1234/events{/privacy}", "received_events_url": "https://api.github.com/users/drv1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-24T20:41:18Z", "updated_at": "2019-02-24T21:14:09Z", "closed_at": "2019-02-24T21:14:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\nI am working in a PeV team (Performance Verification). \r\nRecently HTTP2 came into the picture one of our product and because of our test framework is written in python we choose h2 lib to extend our framework.\r\nIt works fine except one thing: the performance. I saw the previous issue but there is an other one. In hyper doc there is some words about using nghttp2 (https://hyper.readthedocs.io/en/latest/advanced.html#nghttp2). \r\nIs there any way to apply it in h2 too?\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1183", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1183/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1183/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1183/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1183", "id": 406032854, "node_id": "MDU6SXNzdWU0MDYwMzI4NTQ=", "number": 1183, "title": "StreamClosedError when receiving RST_STREAM on a stream closed by remote", "user": {"login": "standy66", "id": 1818586, "node_id": "MDQ6VXNlcjE4MTg1ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1818586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/standy66", "html_url": "https://github.com/standy66", "followers_url": "https://api.github.com/users/standy66/followers", "following_url": "https://api.github.com/users/standy66/following{/other_user}", "gists_url": "https://api.github.com/users/standy66/gists{/gist_id}", "starred_url": "https://api.github.com/users/standy66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/standy66/subscriptions", "organizations_url": "https://api.github.com/users/standy66/orgs", "repos_url": "https://api.github.com/users/standy66/repos", "events_url": "https://api.github.com/users/standy66/events{/privacy}", "received_events_url": "https://api.github.com/users/standy66/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-02T23:13:55Z", "updated_at": "2019-07-07T00:10:49Z", "closed_at": "2019-07-07T00:10:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to make h2 state machine behave itself correctly when communicating with gRPC Core peers. Right now h2 raises `StreamClosedError` when receiving *RST_STREAM* on a closed stream that was closed by remote, e.g.\r\n\r\n```\r\n# Local (h2) -> Remote (gRPC Core)\r\n-> HEADERS frame\r\n-> DATA frame with END_STREAM flag set  # stream is now half-closed (local)\r\n<- HEADERS frame\r\n<- DATA frame\r\n<- HEADERS frame with END_STREAM flag set  # stream is now closed\r\n<- RST_STREAM\r\n```\r\n\r\nUnfortunately, this is what gRPC Core does for unary RPC calls, because it cannot accept more data than a single message, delivered in one or possibly multiple *DATA* frames. I am not sure if it's prohibited the the RFC or not, but it is what it is. The workaround I am using for now is to [monkey patch h2's stream transition dictionary](https://github.com/standy66/purerpc/blob/anyio/src/purerpc/grpclib/connection.py#L21) so it ignores any future *RST_STREAM* and *WINDOW_UPDATE* events on a remotely closed stream.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1168", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1168/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1168/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1168/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1168", "id": 362306849, "node_id": "MDU6SXNzdWUzNjIzMDY4NDk=", "number": 1168, "title": "Optimal method for NAT traversal?", "user": {"login": "SynchronicitydotAI", "id": 43277231, "node_id": "MDQ6VXNlcjQzMjc3MjMx", "avatar_url": "https://avatars0.githubusercontent.com/u/43277231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SynchronicitydotAI", "html_url": "https://github.com/SynchronicitydotAI", "followers_url": "https://api.github.com/users/SynchronicitydotAI/followers", "following_url": "https://api.github.com/users/SynchronicitydotAI/following{/other_user}", "gists_url": "https://api.github.com/users/SynchronicitydotAI/gists{/gist_id}", "starred_url": "https://api.github.com/users/SynchronicitydotAI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SynchronicitydotAI/subscriptions", "organizations_url": "https://api.github.com/users/SynchronicitydotAI/orgs", "repos_url": "https://api.github.com/users/SynchronicitydotAI/repos", "events_url": "https://api.github.com/users/SynchronicitydotAI/events{/privacy}", "received_events_url": "https://api.github.com/users/SynchronicitydotAI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-20T18:23:09Z", "updated_at": "2020-02-08T14:33:48Z", "closed_at": "2020-02-08T14:33:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great project. I am curious if there are any research articles or opinions floating around out there for the optimal method of NAT traversal with HTTP/2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1166", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1166/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1166/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1166/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1166", "id": 347723567, "node_id": "MDU6SXNzdWUzNDc3MjM1Njc=", "number": 1166, "title": "Can new version be pushed to PyPi?", "user": {"login": "hellysmile", "id": 1834317, "node_id": "MDQ6VXNlcjE4MzQzMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1834317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellysmile", "html_url": "https://github.com/hellysmile", "followers_url": "https://api.github.com/users/hellysmile/followers", "following_url": "https://api.github.com/users/hellysmile/following{/other_user}", "gists_url": "https://api.github.com/users/hellysmile/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellysmile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellysmile/subscriptions", "organizations_url": "https://api.github.com/users/hellysmile/orgs", "repos_url": "https://api.github.com/users/hellysmile/repos", "events_url": "https://api.github.com/users/hellysmile/events{/privacy}", "received_events_url": "https://api.github.com/users/hellysmile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-05T19:17:26Z", "updated_at": "2019-01-22T17:40:54Z", "closed_at": "2019-01-22T17:40:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can new minor version be pushed to PyPi with https://github.com/python-hyper/hyper-h2/issues/1163 ?\r\n\r\nOr, is there any roadmap for upcoming 3.1.0 release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1163", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1163/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1163/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1163", "id": 346785861, "node_id": "MDU6SXNzdWUzNDY3ODU4NjE=", "number": 1163, "title": "h2.connection.H2Connection._open_streams causes memory leak", "user": {"login": "hellysmile", "id": 1834317, "node_id": "MDQ6VXNlcjE4MzQzMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1834317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellysmile", "html_url": "https://github.com/hellysmile", "followers_url": "https://api.github.com/users/hellysmile/followers", "following_url": "https://api.github.com/users/hellysmile/following{/other_user}", "gists_url": "https://api.github.com/users/hellysmile/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellysmile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellysmile/subscriptions", "organizations_url": "https://api.github.com/users/hellysmile/orgs", "repos_url": "https://api.github.com/users/hellysmile/repos", "events_url": "https://api.github.com/users/hellysmile/events{/privacy}", "received_events_url": "https://api.github.com/users/hellysmile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-01T22:01:11Z", "updated_at": "2018-08-05T14:18:30Z", "closed_at": "2018-08-05T14:18:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If connection is long-running object, it keeps all past closed streams in `_closed_streams`, which are actually not used anywhere. This causes memory leak over time.\r\n\r\nhttps://github.com/python-hyper/hyper-h2/blob/master/h2/connection.py#L404", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1159", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1159/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1159/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1159", "id": 337195293, "node_id": "MDU6SXNzdWUzMzcxOTUyOTM=", "number": 1159, "title": "getting this error     from enum import Enum, IntEnum ImportError: cannot import name IntEnum", "user": {"login": "markmark1", "id": 6416539, "node_id": "MDQ6VXNlcjY0MTY1Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6416539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markmark1", "html_url": "https://github.com/markmark1", "followers_url": "https://api.github.com/users/markmark1/followers", "following_url": "https://api.github.com/users/markmark1/following{/other_user}", "gists_url": "https://api.github.com/users/markmark1/gists{/gist_id}", "starred_url": "https://api.github.com/users/markmark1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markmark1/subscriptions", "organizations_url": "https://api.github.com/users/markmark1/orgs", "repos_url": "https://api.github.com/users/markmark1/repos", "events_url": "https://api.github.com/users/markmark1/events{/privacy}", "received_events_url": "https://api.github.com/users/markmark1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-30T07:36:50Z", "updated_at": "2019-09-24T13:51:50Z", "closed_at": "2019-04-21T14:39:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "    from enum import Enum, IntEnum\r\nImportError: cannot import name IntEnum\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1155", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1155/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1155/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1155/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1155", "id": 326155910, "node_id": "MDU6SXNzdWUzMjYxNTU5MTA=", "number": 1155, "title": "Documentation and examples reference http2bin.org", "user": {"login": "jordaneremieff", "id": 1376648, "node_id": "MDQ6VXNlcjEzNzY2NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1376648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jordaneremieff", "html_url": "https://github.com/jordaneremieff", "followers_url": "https://api.github.com/users/jordaneremieff/followers", "following_url": "https://api.github.com/users/jordaneremieff/following{/other_user}", "gists_url": "https://api.github.com/users/jordaneremieff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jordaneremieff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jordaneremieff/subscriptions", "organizations_url": "https://api.github.com/users/jordaneremieff/orgs", "repos_url": "https://api.github.com/users/jordaneremieff/repos", "events_url": "https://api.github.com/users/jordaneremieff/events{/privacy}", "received_events_url": "https://api.github.com/users/jordaneremieff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T14:46:06Z", "updated_at": "2019-04-21T14:50:49Z", "closed_at": "2019-04-21T14:50:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation and some of the example files reference http2bin.org which is no longer maintained according to discussion here https://github.com/requests/httpbin/issues/309#issuecomment-339558664 and indicates to use http://nghttp2.org/httpbin as an alternative.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1106", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1106/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1106/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1106/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1106", "id": 288933749, "node_id": "MDU6SXNzdWUyODg5MzM3NDk=", "number": 1106, "title": "Bugs in the Server Plaintext Upgrade example", "user": {"login": "bortzmeyer", "id": 103188, "node_id": "MDQ6VXNlcjEwMzE4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/103188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bortzmeyer", "html_url": "https://github.com/bortzmeyer", "followers_url": "https://api.github.com/users/bortzmeyer/followers", "following_url": "https://api.github.com/users/bortzmeyer/following{/other_user}", "gists_url": "https://api.github.com/users/bortzmeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bortzmeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bortzmeyer/subscriptions", "organizations_url": "https://api.github.com/users/bortzmeyer/orgs", "repos_url": "https://api.github.com/users/bortzmeyer/repos", "events_url": "https://api.github.com/users/bortzmeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/bortzmeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-16T14:50:46Z", "updated_at": "2018-01-19T15:48:23Z", "closed_at": "2018-01-19T15:48:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Server Plaintext Upgrade in https://python-hyper.org/projects/h2/en/stable/negotiating-http2.html uses twice \"if match is not None\" when it should be \"if match is None\" since we do want these two headers to be present (just tested).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1105", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1105/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1105/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1105/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1105", "id": 288247665, "node_id": "MDU6SXNzdWUyODgyNDc2NjU=", "number": 1105, "title": "Performance", "user": {"login": "frnkvieira", "id": 6970476, "node_id": "MDQ6VXNlcjY5NzA0NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6970476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frnkvieira", "html_url": "https://github.com/frnkvieira", "followers_url": "https://api.github.com/users/frnkvieira/followers", "following_url": "https://api.github.com/users/frnkvieira/following{/other_user}", "gists_url": "https://api.github.com/users/frnkvieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/frnkvieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frnkvieira/subscriptions", "organizations_url": "https://api.github.com/users/frnkvieira/orgs", "repos_url": "https://api.github.com/users/frnkvieira/repos", "events_url": "https://api.github.com/users/frnkvieira/events{/privacy}", "received_events_url": "https://api.github.com/users/frnkvieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-12T21:12:42Z", "updated_at": "2018-01-13T14:08:57Z", "closed_at": "2018-01-13T14:08:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @Lukasa !\r\nI'm developing a new framework like Flask/Sanic (currently 5x faster than Sanic on real-world use cases :P) and I'm really excited about adding HTTP2 features. I thought about implementing this on my own but your library seems awesome (and it's hell hard to do correctly lol) !\r\nI'm worried about this HTTP2 implementation will slow down a lot my framework thanks to being pure Python (my framework make heavy use of Cython).\r\nDo you have any benchmarks or related material ? \r\n(Tried to do my own using this example https://github.com/python-hyper/hyper-h2/blob/master/examples/asyncio/asyncio-server.py and, although it runs, the response is empty. Not sure if I messed up)\r\n\r\nAnyway, thanks for the good work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1050", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1050/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1050/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1050/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1050", "id": 273698189, "node_id": "MDU6SXNzdWUyNzM2OTgxODk=", "number": 1050, "title": "Bug in settings.py: AttributeError: 'module' object has no attribute ENABLE_PUSH", "user": {"login": "iteras", "id": 17416760, "node_id": "MDQ6VXNlcjE3NDE2NzYw", "avatar_url": "https://avatars1.githubusercontent.com/u/17416760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iteras", "html_url": "https://github.com/iteras", "followers_url": "https://api.github.com/users/iteras/followers", "following_url": "https://api.github.com/users/iteras/following{/other_user}", "gists_url": "https://api.github.com/users/iteras/gists{/gist_id}", "starred_url": "https://api.github.com/users/iteras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iteras/subscriptions", "organizations_url": "https://api.github.com/users/iteras/orgs", "repos_url": "https://api.github.com/users/iteras/repos", "events_url": "https://api.github.com/users/iteras/events{/privacy}", "received_events_url": "https://api.github.com/users/iteras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-14T07:56:44Z", "updated_at": "2019-09-15T20:17:34Z", "closed_at": "2019-09-15T20:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "h2 updated from h2.settings.ENABLE_PUSH to h2.settings.SettingCodes.ENABLE_PUSH.\r\n\r\nPlease replace /hyper/http20/connection.py:411 with:\r\n {h2.settings.SettingCodes.ENABLE_PUSH: int(self._enable_push)}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1044", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1044/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1044/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1044/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1044", "id": 270020640, "node_id": "MDU6SXNzdWUyNzAwMjA2NDA=", "number": 1044, "title": "There are some faults in the basic-usage.rst", "user": {"login": "breadsh", "id": 4191576, "node_id": "MDQ6VXNlcjQxOTE1NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4191576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/breadsh", "html_url": "https://github.com/breadsh", "followers_url": "https://api.github.com/users/breadsh/followers", "following_url": "https://api.github.com/users/breadsh/following{/other_user}", "gists_url": "https://api.github.com/users/breadsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/breadsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/breadsh/subscriptions", "organizations_url": "https://api.github.com/users/breadsh/orgs", "repos_url": "https://api.github.com/users/breadsh/repos", "events_url": "https://api.github.com/users/breadsh/events{/privacy}", "received_events_url": "https://api.github.com/users/breadsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-31T16:12:19Z", "updated_at": "2020-02-08T14:37:09Z", "closed_at": "2020-02-08T14:37:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are some faults in the doc. \r\nI think it should be \r\n**config = h2.config.H2Configuration(client_side=False)\r\nconn = h2.connection.H2Connection(config=config)**\r\n#\r\nnot just \r\n**conn = h2.connection.H2Connection(client_side=False)**\r\n\r\nalso I am not very sure the result is correct.\r\n**[<h2.events.RemoteSettingsChanged object at 0x10c4ee390>]**\r\n\r\nbecause I got the result below:\r\n**[<RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=4096), ChangedSetting(setting=SettingCodes.ENABLE_PUSH, original_value=1, new_value=1), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=100), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=65535), ChangedSetting(setting=SettingCodes.MAX_FRAME_SIZE, original_value=16384, new_value=16384), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=None, new_value=65536)}>, <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.ENABLE_PUSH, original_value=1, new_value=0)}>]\r\n[<SettingsAcknowledged changed_settings:{}>]**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1043", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1043/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1043/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1043", "id": 269655649, "node_id": "MDU6SXNzdWUyNjk2NTU2NDk=", "number": 1043, "title": "[Question] How can I use the examples thru curl?", "user": {"login": "japrogramer", "id": 1387859, "node_id": "MDQ6VXNlcjEzODc4NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1387859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japrogramer", "html_url": "https://github.com/japrogramer", "followers_url": "https://api.github.com/users/japrogramer/followers", "following_url": "https://api.github.com/users/japrogramer/following{/other_user}", "gists_url": "https://api.github.com/users/japrogramer/gists{/gist_id}", "starred_url": "https://api.github.com/users/japrogramer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japrogramer/subscriptions", "organizations_url": "https://api.github.com/users/japrogramer/orgs", "repos_url": "https://api.github.com/users/japrogramer/repos", "events_url": "https://api.github.com/users/japrogramer/events{/privacy}", "received_events_url": "https://api.github.com/users/japrogramer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-30T16:01:06Z", "updated_at": "2017-10-31T17:49:43Z", "closed_at": "2017-10-31T17:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to run the asyncio-server.py example but when I try to post to it I get this error.\r\n```\r\n\u279c  curl-7.56.1 curl -H \"Content-Type: application/json\" -X POST -d '{\"username\":\"xyz\",\"password\":\"xyz\"}' --http2 http://127.0.0.1:8443                                                                         \r\ncurl: (52) Empty reply from server \r\n```\r\nWhen I visit the address thru a browser I receive a ERR_EMPTY_RESPONSE\r\nAre some examples on how to contact the server?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1042", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1042/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1042/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1042", "id": 268053382, "node_id": "MDU6SXNzdWUyNjgwNTMzODI=", "number": 1042, "title": "H2Connection initial settings should be customizable", "user": {"login": "vladmunteanu", "id": 7191745, "node_id": "MDQ6VXNlcjcxOTE3NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7191745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladmunteanu", "html_url": "https://github.com/vladmunteanu", "followers_url": "https://api.github.com/users/vladmunteanu/followers", "following_url": "https://api.github.com/users/vladmunteanu/following{/other_user}", "gists_url": "https://api.github.com/users/vladmunteanu/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladmunteanu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladmunteanu/subscriptions", "organizations_url": "https://api.github.com/users/vladmunteanu/orgs", "repos_url": "https://api.github.com/users/vladmunteanu/repos", "events_url": "https://api.github.com/users/vladmunteanu/events{/privacy}", "received_events_url": "https://api.github.com/users/vladmunteanu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-24T14:25:22Z", "updated_at": "2017-10-29T17:38:47Z", "closed_at": "2017-10-29T17:38:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For simple use cases where the user calls ``H2Connection.initiate_connection()`` and then ``H2Connection.update_settings()``, it can be noticed that 2 settings frames will be sent.\r\n\r\nThe first one contains the defaults, generated in the ``initiate_connection()`` call.\r\nThe second frame contains any user updated settings.\r\n\r\nWhile this behaviour does not violate the HTTP/2 specifications, I think we can accept some settings in the H2Connection ``__init__`` method to allow users to control the initial settings.\r\nIf the required settings are not provided, H2Connection can use the defaults.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1027", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1027/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1027/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/1027/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/1027", "id": 264911161, "node_id": "MDU6SXNzdWUyNjQ5MTExNjE=", "number": 1027, "title": "Client example with GET requests", "user": {"login": "misuzu", "id": 248143, "node_id": "MDQ6VXNlcjI0ODE0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/248143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misuzu", "html_url": "https://github.com/misuzu", "followers_url": "https://api.github.com/users/misuzu/followers", "following_url": "https://api.github.com/users/misuzu/following{/other_user}", "gists_url": "https://api.github.com/users/misuzu/gists{/gist_id}", "starred_url": "https://api.github.com/users/misuzu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misuzu/subscriptions", "organizations_url": "https://api.github.com/users/misuzu/orgs", "repos_url": "https://api.github.com/users/misuzu/repos", "events_url": "https://api.github.com/users/misuzu/events{/privacy}", "received_events_url": "https://api.github.com/users/misuzu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-12T11:50:15Z", "updated_at": "2017-10-13T08:34:38Z", "closed_at": "2017-10-13T02:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Such simple use case not covered at all", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/976", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/976/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/976/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/976", "id": 253039155, "node_id": "MDU6SXNzdWUyNTMwMzkxNTU=", "number": 976, "title": "Can not send more than 4MB of data (Fail to send large file)", "user": {"login": "CreatCodeBuild", "id": 8919794, "node_id": "MDQ6VXNlcjg5MTk3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8919794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CreatCodeBuild", "html_url": "https://github.com/CreatCodeBuild", "followers_url": "https://api.github.com/users/CreatCodeBuild/followers", "following_url": "https://api.github.com/users/CreatCodeBuild/following{/other_user}", "gists_url": "https://api.github.com/users/CreatCodeBuild/gists{/gist_id}", "starred_url": "https://api.github.com/users/CreatCodeBuild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CreatCodeBuild/subscriptions", "organizations_url": "https://api.github.com/users/CreatCodeBuild/orgs", "repos_url": "https://api.github.com/users/CreatCodeBuild/repos", "events_url": "https://api.github.com/users/CreatCodeBuild/events{/privacy}", "received_events_url": "https://api.github.com/users/CreatCodeBuild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-25T23:19:49Z", "updated_at": "2017-08-28T20:13:37Z", "closed_at": "2017-08-28T20:13:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to send a 10MB file to the client. The server stopped (paused) after 4194304 bytes.\r\n\r\nIt waits forever here\r\n```python\r\nwhile not self.connection.local_flow_control_window(stream_id):\r\n    await self.wait_for_flow_control(stream_id)\r\n```\r\nMy code is build upon your Curio example.\r\n\r\nI dig deeper and find that in connection.py\r\n```python\r\n    def local_flow_control_window(self, stream_id):\r\n        stream = self._get_stream_by_id(stream_id)\r\n        # debug print\r\n        print((self.outbound_flow_control_window, stream.outbound_flow_control_window))\r\n        return min(\r\n            self.outbound_flow_control_window,\r\n            stream.outbound_flow_control_window\r\n        )\r\n```\r\nIt prints\r\n```\r\n...\r\n(1069629439, 16384)\r\n(1069629439, 16384)\r\n(1069629439, 16384)\r\n(1069629439, 16384)\r\n(1069613055, 0)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/967", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/967/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/967/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/967/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/967", "id": 251634409, "node_id": "MDU6SXNzdWUyNTE2MzQ0MDk=", "number": 967, "title": "python-hyper.org doesn't work anymore", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-21T11:47:31Z", "updated_at": "2017-08-21T14:42:13Z", "closed_at": "2017-08-21T14:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/834", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/834/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/834/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/834/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/834", "id": 246509463, "node_id": "MDU6SXNzdWUyNDY1MDk0NjM=", "number": 834, "title": "API changes to Ping events", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-29T08:49:54Z", "updated_at": "2017-07-31T10:17:20Z", "closed_at": "2017-07-31T10:17:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Similar to https://github.com/python-hyper/wsproto/pull/36, I would appreciate bringing the h2 API & events into a similar state as wsproto.\r\n\r\nAt the moment h2 fires a `PingAcknowledged` event when it receives a PING frame with the ACK flag. But it does not fire an event for receiving an initial PING.\r\n\r\nI would propose introducing a new event: `PingReceived`,\r\nand renaming the existing `PingAcknowledged` to `PingAckReceived`.\r\nBoth events should carry the `frame.opaque_data` as `ping_data` attribute.\r\n\r\nFor backward-compatibility `PingAcknowledged` should be an empty subclass of `PingAckReceived`, and be marked as deprecated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/595", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/595/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/595/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/595", "id": 224333182, "node_id": "MDU6SXNzdWUyMjQzMzMxODI=", "number": 595, "title": "curio example doesn't terminate or print trace back when raise Exceptions", "user": {"login": "CreatCodeBuild", "id": 8919794, "node_id": "MDQ6VXNlcjg5MTk3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8919794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CreatCodeBuild", "html_url": "https://github.com/CreatCodeBuild", "followers_url": "https://api.github.com/users/CreatCodeBuild/followers", "following_url": "https://api.github.com/users/CreatCodeBuild/following{/other_user}", "gists_url": "https://api.github.com/users/CreatCodeBuild/gists{/gist_id}", "starred_url": "https://api.github.com/users/CreatCodeBuild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CreatCodeBuild/subscriptions", "organizations_url": "https://api.github.com/users/CreatCodeBuild/orgs", "repos_url": "https://api.github.com/users/CreatCodeBuild/repos", "events_url": "https://api.github.com/users/CreatCodeBuild/events{/privacy}", "received_events_url": "https://api.github.com/users/CreatCodeBuild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-26T03:26:45Z", "updated_at": "2017-04-26T23:31:53Z", "closed_at": "2017-04-26T07:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if I should ask this question in curio's issues or here.\r\n\r\nBut the curio server would not terminate even if I have a runtime error in my code. These error must be ignored by upper callers somewhere.\r\n\r\nHow can I configure that to let the program crash on errors? Since it's super hard to debug if the server ignores errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/593", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/593/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/593/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/593", "id": 224027376, "node_id": "MDU6SXNzdWUyMjQwMjczNzY=", "number": 593, "title": "What does it mean by \"no parsing layer\"", "user": {"login": "CreatCodeBuild", "id": 8919794, "node_id": "MDQ6VXNlcjg5MTk3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8919794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CreatCodeBuild", "html_url": "https://github.com/CreatCodeBuild", "followers_url": "https://api.github.com/users/CreatCodeBuild/followers", "following_url": "https://api.github.com/users/CreatCodeBuild/following{/other_user}", "gists_url": "https://api.github.com/users/CreatCodeBuild/gists{/gist_id}", "starred_url": "https://api.github.com/users/CreatCodeBuild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CreatCodeBuild/subscriptions", "organizations_url": "https://api.github.com/users/CreatCodeBuild/orgs", "repos_url": "https://api.github.com/users/CreatCodeBuild/repos", "events_url": "https://api.github.com/users/CreatCodeBuild/events{/privacy}", "received_events_url": "https://api.github.com/users/CreatCodeBuild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-25T05:42:13Z", "updated_at": "2020-02-08T15:19:11Z", "closed_at": "2020-02-08T15:19:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the readme, it states that h2 doesn't have a parsing layer.\r\n\r\nI am confused by it. My understanding is that everything h2 do is parsing the raw TCP bytes stream and negotiate the protocol (without actually doing the io off course).\r\n\r\nSo, does \"no parsing layer\" means that h2 does not explicitly implement HTTP methods such as GET, POST, instead, it only parses raw TCP streams into human comprehensible python objects.\r\n\r\nTherefore, if I want a more complete HTTP2 server, I should use those objects to implement each methods?\r\n\r\nI have some web experience as an application developer, not a framework developer. I have every little HTTP experience (I don't really know how HTTP works in detail)\r\n\r\nAny help will be thanked.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/561", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/561/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/561/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/561", "id": 223412095, "node_id": "MDU6SXNzdWUyMjM0MTIwOTU=", "number": 561, "title": "Solve our requires.io problem.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-21T15:07:47Z", "updated_at": "2020-02-08T14:54:25Z", "closed_at": "2020-02-08T14:54:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Recently Hypothesis elected to ship new patch releases for each PR that gets merged to master using an automated process (see HypothesisWorks/hypothesis-python#555). This is not inherently a problem. However, our use of requires.io means that each minor release of any of our test dependencies will cause the opening of a number of pull requests: for Hypothesis, that number currently stands at 11 and will only advance over time as we make further releases.\r\n\r\nEach of these PRs takes a certain amount of manual effort to actually merge, but more importantly triggers a number of builds that clog up the Travis queue. This was not a problem when each of these requires.io builds was intermittent (SMALL_INT number a week), but with Hypothesis' new accelerated release schedule we are likely to see a dramatic increase in the number of these builds we have to handle. This will increase the load on my already frankly quite constricted Travis-CI queue, and will also take an increased amount of manual effort to verify.\r\n\r\nThe ideal solution would be to rate-limit these PRs so that they're batched up to run about once a week. This would keep most of the benefit of this process, without leading to a higher-than-ideal workload. However, requires.io does not appear to support any rate limiting of this kind. pyup.io, a competing service, *does* offer that functionality but *does not* support running against multiple branches at once, functionality currently used heavily by hyper-h2.\r\n\r\nThis puts us in a bit of a bind. We need to do at least one of the following:\r\n\r\n- Remove the pin on test dependencies. This is a bad idea: random-ass updates of the test dependencies can cause failures that are only encountered by end-users or by contributors making feature changes, and these become hard to debug and not well surfaced. We have the pins and auto-PRs for a reason!\r\n- Widen the pin on Hypothesis. As Hypothesis is the project that has moved to a faster build schedule, we can neatly resolve this issue by pinning to *minor* releases of Hypothesis rather than patch releases. This does improve the situation, but patch releases of projects are still very useful and it'd be good to be somewhat current if we can be.\r\n- Get requires.io improved to allow us to batch the PRs.\r\n- Get pyup.io fixed to allow us to work with multiple branches and migrate to pyup.io.\r\n- Take the [logic that pyup.io uses](https://github.com/pyupio/pyup) and run our own server that just runs batch jobs against each branch (or run that using my own laptop). This is a pretty inferior option because it relies on us having our own infrastructure (gross), but does allow us to retrofit the \"pick all the branches\" option onto pyup's feature set.\r\n- Just ignore the requires.io PRs until once a week? That will have the affect of batching them, I think, while letting them sit there and be an annoyance, but maybe we can just pretend they don't exist most of the time.\r\n- Something else, I dunno?\r\n\r\nIt'd be interesting to see what thoughts contributors have about this. We may also want to submit a feature request to pyup, as [they clearly have the ability to work with arbitrary branches](https://pyup.io/docs/configuration/#changing-the-branch): they just don't let you choose more than one at once!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/544", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/544/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/544/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/544", "id": 220759728, "node_id": "MDU6SXNzdWUyMjA3NTk3Mjg=", "number": 544, "title": "no way to detect \"true\" stream close", "user": {"login": "ruz", "id": 42598, "node_id": "MDQ6VXNlcjQyNTk4", "avatar_url": "https://avatars1.githubusercontent.com/u/42598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruz", "html_url": "https://github.com/ruz", "followers_url": "https://api.github.com/users/ruz/followers", "following_url": "https://api.github.com/users/ruz/following{/other_user}", "gists_url": "https://api.github.com/users/ruz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruz/subscriptions", "organizations_url": "https://api.github.com/users/ruz/orgs", "repos_url": "https://api.github.com/users/ruz/repos", "events_url": "https://api.github.com/users/ruz/events{/privacy}", "received_events_url": "https://api.github.com/users/ruz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-10T20:24:10Z", "updated_at": "2017-04-11T10:33:42Z", "closed_at": "2017-04-11T10:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nStreamEnded event may be fired before stream is actually closed\r\n\r\nHere is a situation. Client sends POST request with data, however server responds right after receiving headers and ends the stream before all data is sent. Stream states and frames:\r\n\r\n* open\r\n* ->headers\r\n* <-headers and data+end_stream flag\r\n* half_closed_remote + StreamEnded event\r\n* ->data+end_stream flag\r\n* closed\r\n\r\nThere is no way to detect the final transition to closed state as this transition is handled by H2StreamStateMachine.send_end_stream that doesn't emit any events.\r\n\r\nThis behaviour is even documented:\r\n\r\n> The stream may not be fully closed if it has not been closed locally, but no further data or headers should be expected on that stream.\r\n\r\nIf I can not detect \"fully closed\" streams then I don't have hook to check whether I have pending requests or not. What result either in hang requests or in TooManyStreamsError exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/511", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/511/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/511/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/511", "id": 217224417, "node_id": "MDU6SXNzdWUyMTcyMjQ0MTc=", "number": 511, "title": "We must prevent a dynamic table size update exceeding the value of SETTINGS_HEADER_TABLE_SIZE.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 308125595, "node_id": "MDU6TGFiZWwzMDgxMjU1OTU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/H2Spec%20Bug", "name": "H2Spec Bug", "color": "f7c6c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T12:05:57Z", "updated_at": "2017-03-31T14:25:43Z", "closed_at": "2017-03-31T14:25:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spotted using h2spec.\r\n\r\nWe may want to do this by adding this as a property in hpack and then plumbing support through, but this is really a bug in the combined service.\r\n\r\nSee RFC 7541 \u00a7 6.3 for more.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/510", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/510/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/510/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/510", "id": 217222290, "node_id": "MDU6SXNzdWUyMTcyMjIyOTA=", "number": 510, "title": "We need to tighten up handling of pseudo-header fields.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 308125595, "node_id": "MDU6TGFiZWwzMDgxMjU1OTU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/H2Spec%20Bug", "name": "H2Spec Bug", "color": "f7c6c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-27T11:56:52Z", "updated_at": "2017-03-28T07:34:04Z", "closed_at": "2017-03-28T07:33:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We have a number of failures in h2spec caused by being overly lenient with pseudo-header fields. We need to resolve the following problems:\r\n\r\n\r\n- [x] When we receive a HEADERS frame that contains a pseudo-header field defined for response only (that is, `:status`), we MUST respond with a stream error of type PROTOCOL_ERROR. Same policing needs to be applied to sending. (#514)\r\n- [x] When we receive a HEADERS frame with an empty `:path` pseudo-header field, we MUST respond with a stream error of type PROTOCOL_ERROR. Same policing needs to be applied to sending. (#513)\r\n- [x] When we receive a HEADERS frame that omits the `:method` pseudo-header field we MUST respond with a stream error of type PROTOCOL_ERROR. The same policing needs to be applied to sending. (#513)\r\n- [x] When we receive a HEADERS frame that omits the `:scheme` pseudo-header field we MUST respond with a stream error of type PROTOCOL_ERROR. The same policing needs to be applied to sending. (#513)\r\n- [x] When we receive a HEADERS frame that omits the `:path` pseudo-header field we MUST respond with a stream error of type PROTOCOL_ERROR. The same policing needs to be applied to sending. (#513)\r\n\r\nAll of these say stream error, but hyper-h2 has generally treated errors like this as connection errors, and so we may well continue down that route here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/507", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/507/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/507/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/507", "id": 217191988, "node_id": "MDU6SXNzdWUyMTcxOTE5ODg=", "number": 507, "title": "We emit GOAWAY(FLOW_CONTROL_ERROR) when we should emit RST_STREAM(FLOW_CONTROL_ERROR)", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 308125595, "node_id": "MDU6TGFiZWwzMDgxMjU1OTU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/H2Spec%20Bug", "name": "H2Spec Bug", "color": "f7c6c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-27T09:50:21Z", "updated_at": "2017-03-28T09:27:24Z", "closed_at": "2017-03-28T09:27:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Found using h2spec.\r\n\r\nWhen the remote peer sends WINDOW_UPDATE frames that take a stream's flow control window above `2^31 - 1`, we should send a RST_STREAM frame with error code FLOW_CONTROL_ERROR on that stream. Right now, we don't do that: instead, we GOAWAY the entire connection.\r\n\r\nIt would be better to move to h2spec's view of the world and save the connection. This will change our behaviour from emitting a ProtocolError exception to emitting a StreamReset event.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/506", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/506/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/506/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/506", "id": 217068076, "node_id": "MDU6SXNzdWUyMTcwNjgwNzY=", "number": 506, "title": "pypi package missing content", "user": {"login": "caronc", "id": 850374, "node_id": "MDQ6VXNlcjg1MDM3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/850374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caronc", "html_url": "https://github.com/caronc", "followers_url": "https://api.github.com/users/caronc/followers", "following_url": "https://api.github.com/users/caronc/following{/other_user}", "gists_url": "https://api.github.com/users/caronc/gists{/gist_id}", "starred_url": "https://api.github.com/users/caronc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caronc/subscriptions", "organizations_url": "https://api.github.com/users/caronc/orgs", "repos_url": "https://api.github.com/users/caronc/repos", "events_url": "https://api.github.com/users/caronc/events{/privacy}", "received_events_url": "https://api.github.com/users/caronc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-26T17:28:12Z", "updated_at": "2017-03-26T18:10:30Z", "closed_at": "2017-03-26T18:10:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "A minor issue I noticed while trying to build your packages for CentOS/RedHat 7.x.\r\nIt appears the [packages provided on pypi](https://pypi.python.org/pypi/h2/2.6.1) (specifically the [direct link](https://pypi.python.org/packages/ad/5d/c3015afe621924f7ec5f645476780fef3ac1d32cd256ce2705b50c152026/h2-2.6.1.tar.gz)) has missing content vs what you provide on your github page (here) in you [2.6.1 release](https://github.com/python-hyper/hyper-h2/releases/tag/v2.6.1).\r\n\r\nThe only missing ones that really matter (to me and probably others) are:\r\n* test/conftest.py\r\n* test/coroutine_tests.py\r\n* test/helpers.py\r\n\r\nAt the end of the day, I hauled in your copy from github (which contains these files of course) and all tests pass with flying colors (as you already knew it would) :)\r\n\r\nSo do what you wish with this info; and thank you and your awesome community for all of the great work on this solid piece of code!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/503", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/503/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/503/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/503", "id": 216721067, "node_id": "MDU6SXNzdWUyMTY3MjEwNjc=", "number": 503, "title": "Add h2spec to CI.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-24T09:48:28Z", "updated_at": "2019-08-02T11:40:10Z", "closed_at": "2019-08-02T11:40:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be really nice if one of the CI tests we ran involved running h2spec. This is a moderately tricky thing to do because it means we need to expand one of our example servers to be good enough to pass h2spec, but that's not the end of the world.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/497", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/497/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/497/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/497", "id": 216026561, "node_id": "MDU6SXNzdWUyMTYwMjY1NjE=", "number": 497, "title": "Errors with cookie handling during decompression.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-03-22T11:10:54Z", "updated_at": "2019-08-30T10:46:37Z", "closed_at": "2017-03-22T15:03:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spotted by @hawkowl.\r\n\r\nRFC 7540 Section 8.1.2.5 reads as follows:\r\n\r\n> To allow for better compression efficiency, the Cookie header field MAY be split into separate header fields, each with one or more cookie-pairs.  If there are multiple Cookie header fields after decompression, these MUST be concatenated into a single octet string using the two-octet delimiter of 0x3B, 0x20 (the ASCII string \"; \") before being passed into a non-HTTP/2 context, such as an HTTP/1.1 connection, or a generic HTTP server application.\r\n\r\nWe are very much in violation of that MUST right now. This is breaking some Twisted applications that work with multiple cookies, whereby cookies are getting lost because Twisted (rightly) expects only a single cookie header.\r\n\r\nFor the moment, this issue tracks only the MUST. Later on we may want to tackle the other side of this (the MAY).\r\n\r\nMy belief is that the last sentence of that paragraph makes this a hyper-h2 issue, not a hpack issue: HTTP/2 contexts may want to see those headers individually, but in general we shouldn't show them to users that way. This means we need to add another step to the inbound header normalization pipeline that grabs all cookie fields and concatenates them together.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/473", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/473/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/473/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/473", "id": 209016947, "node_id": "MDU6SXNzdWUyMDkwMTY5NDc=", "number": 473, "title": "Question regarding hyper-h2 vs hyper", "user": {"login": "r0fls", "id": 1858004, "node_id": "MDQ6VXNlcjE4NTgwMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1858004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0fls", "html_url": "https://github.com/r0fls", "followers_url": "https://api.github.com/users/r0fls/followers", "following_url": "https://api.github.com/users/r0fls/following{/other_user}", "gists_url": "https://api.github.com/users/r0fls/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0fls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0fls/subscriptions", "organizations_url": "https://api.github.com/users/r0fls/orgs", "repos_url": "https://api.github.com/users/r0fls/repos", "events_url": "https://api.github.com/users/r0fls/events{/privacy}", "received_events_url": "https://api.github.com/users/r0fls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-21T01:16:31Z", "updated_at": "2017-02-21T01:31:14Z", "closed_at": "2017-02-21T01:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for the confusion, but my understanding is that https://github.com/Lukasa/hyper is a client only and the project here would be the one to use for building a server. Is that correct? Or, how are the two projects otherwise related?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/470", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/470/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/470/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/470", "id": 208691540, "node_id": "MDU6SXNzdWUyMDg2OTE1NDA=", "number": 470, "title": "Recv frame on closed state should be connection error or stream error", "user": {"login": "chhsiao90", "id": 10794200, "node_id": "MDQ6VXNlcjEwNzk0MjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/10794200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chhsiao90", "html_url": "https://github.com/chhsiao90", "followers_url": "https://api.github.com/users/chhsiao90/followers", "following_url": "https://api.github.com/users/chhsiao90/following{/other_user}", "gists_url": "https://api.github.com/users/chhsiao90/gists{/gist_id}", "starred_url": "https://api.github.com/users/chhsiao90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chhsiao90/subscriptions", "organizations_url": "https://api.github.com/users/chhsiao90/orgs", "repos_url": "https://api.github.com/users/chhsiao90/repos", "events_url": "https://api.github.com/users/chhsiao90/events{/privacy}", "received_events_url": "https://api.github.com/users/chhsiao90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-19T03:37:18Z", "updated_at": "2017-02-25T16:17:35Z", "closed_at": "2017-02-25T16:17:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, hyper-h2 always send stream error when received unexpected frame on stream in closed state.\r\n\r\nBut in [rfc7540#section-5.1](https://tools.ietf.org/html/rfc7540#section-5.1)\r\n> An endpoint MUST NOT send frames other than PRIORITY on a closed\r\n      stream.  An endpoint that receives any frame other than PRIORITY\r\n      after receiving a RST_STREAM MUST treat that as a stream error\r\n      (Section 5.4.2) of type STREAM_CLOSED.  Similarly, an endpoint\r\n      that receives any frames after receiving a frame with the\r\n      END_STREAM flag set MUST treat that as a connection error\r\n      (Section 5.4.1) of type STREAM_CLOSED, unless the frame is\r\n      permitted as described below.\r\n\r\nWhich action should be taken, connection error or stream error, depends on how the stream had been closed.\r\nIf stream is closed by RST_STREAM, it should return stream error when received unexpected frame.\r\nIf stream is closed by END_STREAM, it should return connection error when received unexpected frame.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/467", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/467/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/467/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/467", "id": 207194364, "node_id": "MDU6SXNzdWUyMDcxOTQzNjQ=", "number": 467, "title": "Update test_h2_upgrade to use new Settings equality tools.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 260623924, "node_id": "MDU6TGFiZWwyNjA2MjM5MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Testing", "name": "Testing", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-13T11:47:50Z", "updated_at": "2020-02-08T14:53:24Z", "closed_at": "2020-02-08T14:53:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Follows on from #464 and #465.\r\n\r\nNow that `Settings` objects can be compared properly for equality, we should fixup `test/test_h2_upgrade.py` to use this comparison method in `test_client_settings_are_applied`, which currently uses private implementation details to compare `Settings` objects. This is an easy one, and a natural next step for @bhavishyagopesh if they're interested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/454", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/454/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/454/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/454", "id": 204542139, "node_id": "MDU6SXNzdWUyMDQ1NDIxMzk=", "number": 454, "title": "Extend config tests in `test_config.py` to use the constructor", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 260623924, "node_id": "MDU6TGFiZWwyNjA2MjM5MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Testing", "name": "Testing", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-01T10:08:42Z", "updated_at": "2017-02-21T08:37:16Z", "closed_at": "2017-02-21T08:37:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Picking up one of @Lukasa\u2019s comments on #436: all the tests in `test_config.py` try to set attributes on `H2Configuration` directly, e.g.\r\n\r\n```python\r\ndef test_boolean_config_option_is_reflected(self, option_name, value):\r\n     \"\"\"\r\n     The value of the boolean config options, when set, is reflected\r\n     in the value.\r\n     \"\"\"\r\n     config = h2.config.H2Configuration()\r\n     setattr(config, option_name, value)\r\n     assert getattr(config, option_name) == value\r\n```\r\n\r\nThere\u2019s another way to use `H2Configuration`: by passing arguments to the constructor, e.g.\r\n\r\n```python\r\nconfig = h2.config.H2Configuration(client_side=False)\r\n```\r\n\r\nIt would be good to have some tests that exercise the constructor as well as direct attribute access.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/453", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/453/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/453/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/453", "id": 203627929, "node_id": "MDU6SXNzdWUyMDM2Mjc5Mjk=", "number": 453, "title": "Implement equality for the Settings object.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-01-27T12:49:33Z", "updated_at": "2017-02-13T11:43:15Z", "closed_at": "2017-02-13T11:43:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In #452 we merged a patch that resolved a functional issue, but the test relied on implementation details of one of our classes (`h2.settings.Settings`). It would be preferable if we could avoid that, which is best done by implementing equality for that object.\r\n\r\nThere isn't urgency on this, this would largely be a convenience feature. However, it would be nice to land this before we ship 2.6.0. This is a great patch for someone who doesn't know much about HTTP/2 but wants some OSS Python to do, as this is a nicely well-defined bit of functionality: implement the equality interface for Python 2 and 3, test it, and then fix up the test merged in #452 to use it.\r\n\r\nAnyone who wants to may take a shot at this patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/451", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/451/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/451/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/451", "id": 203440343, "node_id": "MDU6SXNzdWUyMDM0NDAzNDM=", "number": 451, "title": "Servers don't do anything with the HTTP2-Settings field.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-26T17:47:18Z", "updated_at": "2017-01-27T12:46:29Z", "closed_at": "2017-01-27T12:46:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Despite adding plaintext upgrade support in `2.3.0`, I managed to miss the fact that we don't actually *do* anything with the SETTINGS frame data sent by the remote peer. That's clearly pretty silly, so we should do something with it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/449", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/449/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/449/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/449", "id": 203298322, "node_id": "MDU6SXNzdWUyMDMyOTgzMjI=", "number": 449, "title": "HTTP2-Settings of h2c upgrade should only contains the Settings payload", "user": {"login": "chhsiao90", "id": 10794200, "node_id": "MDQ6VXNlcjEwNzk0MjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/10794200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chhsiao90", "html_url": "https://github.com/chhsiao90", "followers_url": "https://api.github.com/users/chhsiao90/followers", "following_url": "https://api.github.com/users/chhsiao90/following{/other_user}", "gists_url": "https://api.github.com/users/chhsiao90/gists{/gist_id}", "starred_url": "https://api.github.com/users/chhsiao90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chhsiao90/subscriptions", "organizations_url": "https://api.github.com/users/chhsiao90/orgs", "repos_url": "https://api.github.com/users/chhsiao90/repos", "events_url": "https://api.github.com/users/chhsiao90/events{/privacy}", "received_events_url": "https://api.github.com/users/chhsiao90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-26T06:03:21Z", "updated_at": "2017-01-27T00:22:24Z", "closed_at": "2017-01-26T17:42:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I found that when I'm doing h2c a client, and trying doing the upgrade by used```initiate_upgrade_connection``` to generate the base64 encoded HTTP2-Settings frame, it also contains unexpected frame information.\r\n\r\nrelated code: [connection.py#initiate_upgrade_connection](https://github.com/python-hyper/hyper-h2/blob/master/h2/connection.py#L592-L597)\r\nrelated rfc: [rfc7549#section-3.2](https://tools.ietf.org/html/rfc7540#section-3.2)\r\n> GET / HTTP/1.1\r\n     Host: server.example.com\r\n     Connection: Upgrade, HTTP2-Settings\r\n     Upgrade: h2c\r\n     HTTP2-Settings: <base64url encoding of HTTP/2 SETTINGS payload>\r\n\r\nIf you confirmed that it's an rfc violation and had no time to fix it, I would like to help on a PR for this.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/435", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/435/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/435/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/435", "id": 198433303, "node_id": "MDU6SXNzdWUxOTg0MzMzMDM=", "number": 435, "title": "Ignore unrecognised frames.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-01-03T09:09:13Z", "updated_at": "2017-03-08T09:53:17Z", "closed_at": "2017-03-08T09:53:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RFC 7540 says:\r\n\r\n> Implementations MUST ignore unknown or unsupported values in all extensible protocol elements.  Implementations MUST discard frames that have unknown or unsupported types.\r\n\r\nCurrently hyper-h2 contravenes this policy: it throws exceptions when it encounters unsupported frame types. This is not a good plan, especially as extension frames are in active development and could be encountered on the open web.\r\n\r\nA good question would be: how do we handle these frames? One option is to define a new event (`UnexpectedFrameReceived`) that simply hands the `hyperframe` frame object up the stack to allow the calling code to do whatever it needs. Another option is to simply swallow all unexpected frames and not emit them to user code.\r\n\r\nI lean towards doing the first, but I'd like to know what @Kriechi or @mhils think, as they're the most likely to be interested in actually accessing the unexpected frame data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/422", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/422/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/422/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/422", "id": 196213732, "node_id": "MDU6SXNzdWUxOTYyMTM3MzI=", "number": 422, "title": "Website fails with InvalidSettingsValueError: Setting 6 has invalid value 0", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-17T09:56:02Z", "updated_at": "2016-12-17T15:28:10Z", "closed_at": "2016-12-17T15:28:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\r\n\r\nI cam across this website https://www.cam.ac.uk\r\nIf I try to fetch `/` via h2, I get this error:\r\n`InvalidSettingsValueError: Setting 6 has invalid value 0`\r\n\r\nHowever, curl & Chrome seem to have no problem in loading the website.\r\n\r\nMinimal example to reproduce the error:\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport certifi\r\nimport h2.connection\r\nimport h2.events\r\n\r\nimport errno\r\nimport socket\r\nimport ssl\r\nimport time\r\n\r\nSERVER_NAME = 'www.cam.ac.uk'\r\n\r\nsocket.setdefaulttimeout(2)\r\n\r\nc = h2.connection.H2Connection()\r\nc.initiate_connection()\r\n\r\nctx = ssl.create_default_context(cafile=certifi.where())\r\nctx.set_alpn_protocols(['h2', 'http/1.1'])\r\nctx.set_npn_protocols(['h2', 'http/1.1'])\r\n\r\ns = socket.create_connection((SERVER_NAME, 443))\r\ns = ctx.wrap_socket(s, server_hostname=SERVER_NAME)\r\n\r\ns.sendall(c.data_to_send())\r\n\r\nheaders = [\r\n    (':method', 'GET'),\r\n    (':path', '/'),\r\n    (':authority', SERVER_NAME),\r\n    (':scheme', 'https'),\r\n]\r\nc.send_headers(1, headers, end_stream=True)\r\ns.sendall(c.data_to_send())\r\n\r\nwhile True:\r\n    data = s.recv(65536 * 256)\r\n    if not data:\r\n        break\r\n\r\n    events = c.receive_data(data)\r\n    s.sendall(c.data_to_send())\r\n\r\n    for event in events:\r\n        print(event)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/397", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/397/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/397/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/397", "id": 189172909, "node_id": "MDU6SXNzdWUxODkxNzI5MDk=", "number": 397, "title": "tornado example error", "user": {"login": "zii", "id": 81924, "node_id": "MDQ6VXNlcjgxOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/81924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zii", "html_url": "https://github.com/zii", "followers_url": "https://api.github.com/users/zii/followers", "following_url": "https://api.github.com/users/zii/following{/other_user}", "gists_url": "https://api.github.com/users/zii/gists{/gist_id}", "starred_url": "https://api.github.com/users/zii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zii/subscriptions", "organizations_url": "https://api.github.com/users/zii/orgs", "repos_url": "https://api.github.com/users/zii/repos", "events_url": "https://api.github.com/users/zii/events{/privacy}", "received_events_url": "https://api.github.com/users/zii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-14T17:24:35Z", "updated_at": "2016-11-14T21:55:30Z", "closed_at": "2016-11-14T21:55:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the tornado example, and view by chrome, it errored.\r\nI installed openssl 1.0.2j, compile python 2.7.12 from source.\r\nCan you help me to run it on chrome?\r\n\r\n```\r\nroot@deb0:~/py/h2/tornado# python tornado-server.py\r\nERROR:tornado.application:Exception in callback <functools.partial object at 0x7fbc17077cb0>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/ioloop.py\", line 604, in _run_callback\r\n    ret = callback()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/tcpserver.py\", line 276, in <lambda>\r\n    self.io_loop.add_future(future, lambda f: f.result())\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1021, in run\r\n    yielded = self.gen.throw(*exc_info)\r\n  File \"tornado-server.py\", line 38, in handle_stream\r\n    yield handler.handle()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1015, in run\r\n    value = future.result()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1021, in run\r\n    yielded = self.gen.throw(*exc_info)\r\n  File \"tornado-server.py\", line 50, in handle\r\n    yield self.stream.write(self.conn.data_to_send())\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1015, in run\r\n    value = future.result()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"<string>\", line 3, in raise_exc_info\r\nStreamClosedError: Stream is closed\r\nERROR:tornado.application:Exception in callback <functools.partial object at 0x7fbc1702a4c8>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/ioloop.py\", line 604, in _run_callback\r\n    ret = callback()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/tcpserver.py\", line 276, in <lambda>\r\n    self.io_loop.add_future(future, lambda f: f.result())\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1021, in run\r\n    yielded = self.gen.throw(*exc_info)\r\n  File \"tornado-server.py\", line 38, in handle_stream\r\n    yield handler.handle()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1015, in run\r\n    value = future.result()\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1024, in run\r\n    yielded = self.gen.send(value)\r\n  File \"tornado-server.py\", line 61, in handle\r\n    self.request_received(event.headers, event.stream_id)\r\n  File \"tornado-server.py\", line 80, in request_received\r\n    self.conn.send_headers(stream_id, response_headers)\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/connection.py\", line 803, in send_headers\r\n    headers, self.encoder, end_stream\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/stream.py\", line 788, in send_headers\r\n    headers, encoder, hf, hdr_validation_flags\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/stream.py\", line 1119, in _build_headers_frames\r\n    encoded_headers = encoder.encode(headers)\r\n  File \"/usr/local/lib/python2.7/site-packages/hpack/hpack.py\", line 229, in encode\r\n    for header in headers:\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/utilities.py\", line 302, in _reject_pseudo_header_fields\r\n    for header in headers:\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/utilities.py\", line 271, in _reject_connection_header\r\n    for header in headers:\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/utilities.py\", line 255, in _reject_te\r\n    for header in headers:\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/utilities.py\", line 69, in _secure_headers\r\n    for header in headers:\r\n  File \"/usr/local/lib/python2.7/site-packages/h2/utilities.py\", line 437, in _strip_surrounding_whitespace\r\n    yield (header[0].strip(), header[1].strip())\r\nAttributeError: 'int' object has no attribute 'strip'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/390", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/390/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/390/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/390", "id": 189082416, "node_id": "MDU6SXNzdWUxODkwODI0MTY=", "number": 390, "title": "Difference between 'hyper' and 'hyper-h2' and support for Requests", "user": {"login": "iitns", "id": 7313784, "node_id": "MDQ6VXNlcjczMTM3ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7313784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iitns", "html_url": "https://github.com/iitns", "followers_url": "https://api.github.com/users/iitns/followers", "following_url": "https://api.github.com/users/iitns/following{/other_user}", "gists_url": "https://api.github.com/users/iitns/gists{/gist_id}", "starred_url": "https://api.github.com/users/iitns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iitns/subscriptions", "organizations_url": "https://api.github.com/users/iitns/orgs", "repos_url": "https://api.github.com/users/iitns/repos", "events_url": "https://api.github.com/users/iitns/events{/privacy}", "received_events_url": "https://api.github.com/users/iitns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-14T10:53:07Z", "updated_at": "2016-11-14T11:41:45Z", "closed_at": "2016-11-14T10:59:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm implementing HTTP/2 client to send push notification request to APNS (token based)\r\nAnd I'm on researching stage now, and I read an [issue on `hyper`](https://github.com/Lukasa/hyper/issues/264), which led me here.\r\n\r\nI'm a bit confused differences between [`hyper`](http://hyper.readthedocs.io/en/latest/index.html) and [`hyper-h2`](https://python-hyper.org/h2/en/stable/index.html)\r\nI guess `hyper-h2` is next version of `hyper` since @Lukasa shows up in both repositories,([hyper@github](https://github.com/Lukasa/hyper), [hyper-h2@github](https://github.com/python-hyper/hyper-h2)) and I can find recent commits in `hyper-h2` repository\r\n\r\nAm I right? If not, are they intended different purpose?\r\n(for example, `hyper` supports I/O things like [`requests`](http://docs.python-requests.org/en/master/) whereas `hyper-h2` doesn't but supports high-level interfaces)\r\n\r\nIn [I/O part in `hyper-h2` documentation](https://python-hyper.org/h2/en/stable/basic-usage.html#i-o) it seems that `hyper-h2` doesn't do I/O things so I need to implement writing/receiving data or utilize other network packages, such as [`twisted`](https://twistedmatrix.com/trac/).\r\n\r\n`hyper` supports [Request Integration](http://hyper.readthedocs.io/en/latest/quickstart.html#requests-integration) but `hyper-h2` doesn't seem to.\r\nMy question is: is there any way that I can integrate `hyper-h2` into `requests` for client side?\r\n\r\nSince [Best Practices for Managing Connections by Apple](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html#//apple_ref/doc/uid/TP40008194-CH11-SW8) encourages using connection pool and `requests` supports it, It would be great `hyper-h2` supports `requests` integration\r\n\r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/373", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/373/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/373/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/373", "id": 186061527, "node_id": "MDU6SXNzdWUxODYwNjE1Mjc=", "number": 373, "title": "PUSH_PROMISE on closed stream", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 471188254, "node_id": "MDU6TGFiZWw0NzExODgyNTQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Proprietary%20Tracking%20Bug", "name": "Proprietary Tracking Bug", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-29T05:46:51Z", "updated_at": "2016-12-10T09:35:17Z", "closed_at": "2016-12-10T09:35:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We are testing @mitmproxy against http://http2-push.io, which sends pushed two streams if you request the `/` path. This works fine from curl and a simple h2 client.\r\n\r\nHowever as soon as you try to browse to that page from Firefox things start be get weird and broken. Browsing there with a fresh session works once, and then the PUSH_PROMISE frames will fail or get swallowed.\r\n\r\nIt turns out, that if you hit the client cache for `/`, the server responds with a 304, but still sends the PUSH_PROMISE frames. However, at that point the original stream is already closed, which cases hyper-h2 to yield the following error message:\r\n`h2.exceptions.ProtocolError: Attempted to push on closed stream.`\r\n\r\nAccording to RFC 7540 Section 6.6:\r\n\r\n> PUSH_PROMISE frames MUST only be sent on a peer-initiated stream that is in either the \"open\" or \"half-closed (remote)\" state.\r\n\r\nLooking at the received frames, we see:\r\n\r\n```\r\nHEADERS with stream_id=1,  code=304 and flags=(END_HEADERS and END_STREAM)\r\nPUSH_PROMISE with stream_id=1, promised_stream_id=2, and a headers fragment\r\nPUSH_PROMISE with stream_id=1, promised_stream_id=4, and a headers fragment\r\n```\r\n\r\nhyper-h2 now processes this in a way that stream 1 is closed before the PUSH_PROMISE is handled, therefore generating above error code - which is totally valid following the reasoning above.\r\n\r\nThis error does not happen if we have a clean cache, and therefore get the following frames from the server:\r\n\r\n```\r\nHEADERS with stream_id=1,  code=200 and flags=END_HEADERS\r\nPUSH_PROMISE with stream_id=1, promised_stream_id=2, and a headers fragment\r\nPUSH_PROMISE with stream_id=1, promised_stream_id=4, and a headers fragment\r\nDATA with stream_id=1,  some data and flags=END_STREAM\r\n```\r\n\r\nHere is a minimal example using hyper-h2 as client to trigger that error:\r\n\r\n``` python\r\nimport certifi\r\nimport h2.connection\r\nimport h2.events\r\n\r\nimport traceback\r\nimport errno\r\nimport socket\r\nimport ssl\r\nimport time\r\n\r\nSERVER_NAME = 'http2-push.io'\r\n\r\nsocket.setdefaulttimeout(2)\r\n\r\nc = h2.connection.H2Connection()\r\nc.initiate_connection()\r\n\r\nctx = ssl.create_default_context(cafile=certifi.where())\r\nctx.set_alpn_protocols(['h2', 'http/1.1'])\r\nctx.set_npn_protocols(['h2', 'http/1.1'])\r\n\r\ns = socket.create_connection((SERVER_NAME, 443))\r\ns = ctx.wrap_socket(s, server_hostname=SERVER_NAME)\r\n\r\ns.sendall(c.data_to_send())\r\n\r\nheaders = [\r\n    (':method', 'GET'),\r\n    (':path', '/'),\r\n    (':authority', SERVER_NAME),\r\n    (':scheme', 'https'),\r\n    ('user-agent', 'custom-python-script'),\r\n    # omitting this header to get a working push:\r\n    ('cookie', \"__cfduid=d5c239ad129872798300aad6d474b69021479849732; _ga=GA1.2.1109854913.1477608538\"),\r\n    (b'if-modified-since', b\"Thu, 27 Oct 2016 11:02:40 GMT\"),\r\n]\r\nc.send_headers(1, headers, end_stream=True)\r\ns.sendall(c.data_to_send())\r\n\r\n\r\nwhile True:\r\n    data = s.recv(65536 * 256)\r\n    if not data:\r\n        break\r\n\r\n    try:\r\n        events = c.receive_data(data)\r\n        s.sendall(c.data_to_send())\r\n    except Exception as e:\r\n        print(traceback.format_exc())\r\n        break\r\n\r\n    for event in events:\r\n        print(event)\r\n```\r\n\r\nAs far as we can tell at the moment, this seems to be a bug in whatever webserver software http2-push.io is using. Looking at the response headers, it looks like: `('server', 'cloudflare-nginx')`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/371", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/371/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/371/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/371", "id": 185816582, "node_id": "MDU6SXNzdWUxODU4MTY1ODI=", "number": 371, "title": "hyper-h2-2.5.0 test failures", "user": {"login": "dol-sen", "id": 950866, "node_id": "MDQ6VXNlcjk1MDg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/950866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dol-sen", "html_url": "https://github.com/dol-sen", "followers_url": "https://api.github.com/users/dol-sen/followers", "following_url": "https://api.github.com/users/dol-sen/following{/other_user}", "gists_url": "https://api.github.com/users/dol-sen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dol-sen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dol-sen/subscriptions", "organizations_url": "https://api.github.com/users/dol-sen/orgs", "repos_url": "https://api.github.com/users/dol-sen/repos", "events_url": "https://api.github.com/users/dol-sen/events{/privacy}", "received_events_url": "https://api.github.com/users/dol-sen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-28T01:06:38Z", "updated_at": "2017-03-23T14:14:47Z", "closed_at": "2017-03-23T14:14:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am the gentoo package maintainer for hyper-h2 as part of the buildbot group of pkgs that I maintain.\nIt appears that the test suite is missing the helpers.py and coroutine_tests.py files from the tarball.  I also see test/conftest.py in the main repo is also not included.  I had not added the test capability to the ebuild before this release.\n\nAre any of these tests not relavent for testing on user systems?  ie: pre-release sanity tests.\n\n` >>> Source compiled.\n\n> > > Test phase: dev-python/hyper-h2-2.5.0\n> > > - python2_7: running distutils-r1_run_phase python_test\n> > >   ========================================================== test session starts ===========================================================\n> > >   platform linux2 -- Python 2.7.12, pytest-3.0.3, py-1.4.31, pluggy-0.4.0 -- /usr/bin/python2.7\n> > >   cachedir: .cache\n> > >   rootdir: /var/tmp/portage/dev-python/hyper-h2-2.5.0/work/h2-2.5.0, inifile: \n> > >   plugins: hypothesis-3.5.3, xdist-1.15.0, cov-2.3.1\n> > >   collecting ... collected 685 items / 2 errors\n\n================================================================= ERRORS =================================================================\n_______________________________________________ ERROR collecting test/test_basic_logic.py ________________________________________________\nImportError while importing test module '/var/tmp/portage/dev-python/hyper-h2-2.5.0/work/h2-2.5.0/test/test_basic_logic.py'.\nOriginal error message:\n'No module named helpers'\nMake sure your test modules/packages have valid Python names.\n____________________________________________ ERROR collecting test/test_interacting_stacks.py ____________________________________________\nImportError while importing test module '/var/tmp/portage/dev-python/hyper-h2-2.5.0/work/h2-2.5.0/test/test_interacting_stacks.py'.\nOriginal error message:\n'No module named coroutine_tests'\nMake sure your test modules/packages have valid Python names.\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 2 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n======================================================== 2 error in 1.27 seconds =========================================================\n- ERROR: dev-python/hyper-h2-2.5.0::gentoo failed (test phase):\n-   Tests failed under python2.7\n  `\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/369", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/369/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/369/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/369", "id": 185762033, "node_id": "MDU6SXNzdWUxODU3NjIwMzM=", "number": 369, "title": "Provide base class for events", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-27T19:43:18Z", "updated_at": "2016-10-28T09:10:57Z", "closed_at": "2016-10-28T09:10:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now I'm trying to add more type information to the mitmproxy HTTP/2 stack and stumbled upon the fact that alle h2 events are just objects. I would like to see a generic `h2.events.Event` class or something similar.\nDoes it make sense to provide a base class for all events?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/367", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/367/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/367/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/367", "id": 185434103, "node_id": "MDU6SXNzdWUxODU0MzQxMDM=", "number": 367, "title": "2.5.0 possible backward-incompatibility", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-10-26T15:49:19Z", "updated_at": "2016-10-28T07:11:46Z", "closed_at": "2016-10-26T21:09:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\n\nwe are getting a test failure in @mitmproxy with the latest h2 release (2.5.0):\n\nCalling `h2_conn.send_headers(event.stream_id, headers)` with these `headers`\n\n```\n[(':status', '200'), ('priority_exclusive', True), ('priority_depends_on', 42424242), ('priority_weight', 42)]\n```\n\nresults in the following traceback:\n\n```\nTraceback (most recent call last):\n  File \".../mitmproxy/test/mitmproxy/protocol/test_http2.py\", line 77, in handle\n    if not self.server.handle_server_event(event, h2_conn, self.rfile, self.wfile):\n  File \".../mitmproxy/test/mitmproxy/protocol/test_http2.py\", line 305, in handle_server_event\n    h2_conn.send_headers(event.stream_id, headers)\n  File \".../h2/connection.py\", line 803, in send_headers\n    headers, self.encoder, end_stream\n  File \".../h2/stream.py\", line 788, in send_headers\n    headers, encoder, hf, hdr_validation_flags\n  File \".../h2/stream.py\", line 1119, in _build_headers_frames\n    encoded_headers = encoder.encode(headers)\n  File \".../hpack/hpack.py\", line 229, in encode\n    for header in headers:\n  File \".../h2/utilities.py\", line 302, in _reject_pseudo_header_fields\n    for header in headers:\n  File \".../h2/utilities.py\", line 271, in _reject_connection_header\n    for header in headers:\n  File \".../h2/utilities.py\", line 255, in _reject_te\n    for header in headers:\n  File \".../h2/utilities.py\", line 69, in _secure_headers\n    for header in headers:\n  File \".../h2/utilities.py\", line 437, in _strip_surrounding_whitespace\n    yield (header[0].strip(), header[1].strip())\nAttributeError: 'bool' object has no attribute 'strip'\n```\n\nWith earlier versions of h2 this code was working just fine.\nI guess `('priority_exclusive', True)` has to be a `str` now, and not bool?\nI could not see any mentioning of that in the changlelog - if this was done by choice, or maybe it is a side effect?\n\nref https://github.com/mitmproxy/mitmproxy/pull/1671\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/362", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/362/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/362/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/362", "id": 183693582, "node_id": "MDU6SXNzdWUxODM2OTM1ODI=", "number": 362, "title": "Allow more leniency in Hypothesis health checks on Travis.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-18T13:55:58Z", "updated_at": "2016-10-19T14:31:29Z", "closed_at": "2016-10-19T14:31:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Travis keeps spuriously failing on PyPy tests because of Hypothesis taking a long time to generate examples. Rather than keep manually resetting this, we should adjust the code to be more generous in the time allotted to find examples when running on Travis.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/359", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/359/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/359/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/359", "id": 183356749, "node_id": "MDU6SXNzdWUxODMzNTY3NDk=", "number": 359, "title": "Provide SettingsEnum to dynamically list and print", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-17T08:39:33Z", "updated_at": "2017-02-17T14:39:18Z", "closed_at": "2017-02-17T14:39:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Similar to #303\n\nIt would be nice to have a list/dict/enum of all valid settings (key + names).\nThis can be useful for printing debug information or just plain logging of changed settings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/358", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/358/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/358/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/358", "id": 183276835, "node_id": "MDU6SXNzdWUxODMyNzY4MzU=", "number": 358, "title": "Add documentation with example code for plaintext upgrade.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-16T16:46:14Z", "updated_at": "2016-10-18T07:47:18Z", "closed_at": "2016-10-18T07:47:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For servers and clients.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/357", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/357/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/357/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/357", "id": 182674427, "node_id": "MDU6SXNzdWUxODI2NzQ0Mjc=", "number": 357, "title": "Frame data missing or invalid", "user": {"login": "keremnc", "id": 3498221, "node_id": "MDQ6VXNlcjM0OTgyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3498221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keremnc", "html_url": "https://github.com/keremnc", "followers_url": "https://api.github.com/users/keremnc/followers", "following_url": "https://api.github.com/users/keremnc/following{/other_user}", "gists_url": "https://api.github.com/users/keremnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/keremnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keremnc/subscriptions", "organizations_url": "https://api.github.com/users/keremnc/orgs", "repos_url": "https://api.github.com/users/keremnc/repos", "events_url": "https://api.github.com/users/keremnc/events{/privacy}", "received_events_url": "https://api.github.com/users/keremnc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-13T01:39:59Z", "updated_at": "2017-09-17T19:54:13Z", "closed_at": "2016-10-13T01:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`\nkcelik@kcelik-pc:~/http2_server$ hyper GET http://http2bin.org/get\nTraceback (most recent call last):\n  File \"/usr/local/bin/hyper\", line 9, in <module>\n    load_entry_point('hyper==0.7.0', 'console_scripts', 'hyper')()\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/cli.py\", line 259, in main\n    data = request(args)\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/cli.py\", line 249, in request\n    response = conn.get_response()\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/common/connection.py\", line 140, in get_response\n    self._conn._connect_upgrade(e.sock)\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 400, in _connect_upgrade\n    self._recv_cb()\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 771, in _recv_cb\n    self._single_read()\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 669, in _single_read\n    events = conn.receive_data(data)\n  File \"/usr/local/lib/python2.7/dist-packages/h2/connection.py\", line 1298, in receive_data\n    for frame in self.incoming_buffer:\n  File \"/usr/local/lib/python2.7/dist-packages/h2/frame_buffer.py\", line 165, in next\n    raise FrameDataMissingError(\"Frame data missing or invalid\")\nh2.exceptions.FrameDataMissingError: Frame data missing or invalid\n`\n\nPython 2.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/356", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/356/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/356/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/356", "id": 182674370, "node_id": "MDU6SXNzdWUxODI2NzQzNzA=", "number": 356, "title": "Frame data missing or invalid", "user": {"login": "keremnc", "id": 3498221, "node_id": "MDQ6VXNlcjM0OTgyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3498221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keremnc", "html_url": "https://github.com/keremnc", "followers_url": "https://api.github.com/users/keremnc/followers", "following_url": "https://api.github.com/users/keremnc/following{/other_user}", "gists_url": "https://api.github.com/users/keremnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/keremnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keremnc/subscriptions", "organizations_url": "https://api.github.com/users/keremnc/orgs", "repos_url": "https://api.github.com/users/keremnc/repos", "events_url": "https://api.github.com/users/keremnc/events{/privacy}", "received_events_url": "https://api.github.com/users/keremnc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-13T01:39:30Z", "updated_at": "2016-10-14T19:41:31Z", "closed_at": "2016-10-14T19:41:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "`kcelik@kcelik-pc:~/http2_server$ hyper GET http://http2bin.org/get`\n`Traceback (most recent call last)`:\n&nbsp;`File \"/usr/local/bin/hyper\", line 9, in <module>`\n&nbsp;&nbsp;`load_entry_point('hyper==0.7.0', 'console_scripts', 'hyper')()`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/hyper/cli.py\", line 259, in main`\n&nbsp;&nbsp;`data = request(args)`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/hyper/cli.py\", line 249, in request`\n&nbsp;&nbsp;`response = conn.get_response()`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/hyper/common/connection.py\", line 140, in get_response`\n&nbsp;&nbsp;`self._conn._connect_upgrade(e.sock)`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 400, in _connect_upgrade`\n&nbsp;&nbsp;`self._recv_cb()`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 771, in _recv_cb`\n&nbsp;&nbsp;`self._single_read()`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 669, in _single_read`\n&nbsp;&nbsp;`events = conn.receive_data(data)`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/h2/connection.py\", line 1298, in receive_data`\n&nbsp;&nbsp;`for frame in self.incoming_buffer:`\n&nbsp;`File \"/usr/local/lib/python2.7/dist-packages/h2/frame_buffer.py\", line 165, in next`\n&nbsp;&nbsp;`raise FrameDataMissingError(\"Frame data missing or invalid\")`\n`h2.exceptions.FrameDataMissingError: Frame data missing or invalid`\n\nPython 2.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/351", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/351/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/351/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/351", "id": 181825475, "node_id": "MDU6SXNzdWUxODE4MjU0NzU=", "number": 351, "title": "ImportError: cannot import name IntEnum", "user": {"login": "harry1064", "id": 6297435, "node_id": "MDQ6VXNlcjYyOTc0MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6297435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harry1064", "html_url": "https://github.com/harry1064", "followers_url": "https://api.github.com/users/harry1064/followers", "following_url": "https://api.github.com/users/harry1064/following{/other_user}", "gists_url": "https://api.github.com/users/harry1064/gists{/gist_id}", "starred_url": "https://api.github.com/users/harry1064/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harry1064/subscriptions", "organizations_url": "https://api.github.com/users/harry1064/orgs", "repos_url": "https://api.github.com/users/harry1064/repos", "events_url": "https://api.github.com/users/harry1064/events{/privacy}", "received_events_url": "https://api.github.com/users/harry1064/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-10-08T13:13:05Z", "updated_at": "2016-10-25T13:37:32Z", "closed_at": "2016-10-25T13:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFile \"apnsClient.py\", line 1, in <module>\n    from hyper import HTTPConnection\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/__init__.py\", line 11, in <module>\n    from .common.connection import HTTPConnection\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/common/connection.py\", line 10, in <module>\n    from ..http20.connection import HTTP20Connection\n  File \"/usr/local/lib/python2.7/dist-packages/hyper/http20/connection.py\", line 8, in <module>\n    import h2.connection\n  File \"/usr/local/lib/python2.7/dist-packages/h2/connection.py\", line 10, in <module>\n    from enum import Enum, IntEnum\nImportError: cannot import name IntEnum\n```\n\nI am using Python 2.7.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/339", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/339/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/339/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/339", "id": 179537767, "node_id": "MDU6SXNzdWUxNzk1Mzc3Njc=", "number": 339, "title": "docs - basic usage step 4: Handling Events", "user": {"login": "anilkunchalaece", "id": 17523245, "node_id": "MDQ6VXNlcjE3NTIzMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/17523245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anilkunchalaece", "html_url": "https://github.com/anilkunchalaece", "followers_url": "https://api.github.com/users/anilkunchalaece/followers", "following_url": "https://api.github.com/users/anilkunchalaece/following{/other_user}", "gists_url": "https://api.github.com/users/anilkunchalaece/gists{/gist_id}", "starred_url": "https://api.github.com/users/anilkunchalaece/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anilkunchalaece/subscriptions", "organizations_url": "https://api.github.com/users/anilkunchalaece/orgs", "repos_url": "https://api.github.com/users/anilkunchalaece/repos", "events_url": "https://api.github.com/users/anilkunchalaece/events{/privacy}", "received_events_url": "https://api.github.com/users/anilkunchalaece/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-27T16:04:37Z", "updated_at": "2016-09-27T16:21:55Z", "closed_at": "2016-09-27T16:21:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "If use the same code in step4: Handing Events Section i am getting the Following Error\n\n![screenshot from 2016-09-27 21 32 10](https://cloud.githubusercontent.com/assets/17523245/18881677/e791279e-84f9-11e6-9a07-4b0f2678d874.png)\n\nif i changed the Header section to the following it is working\n`headers={b':status': '200'},`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/321", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/321/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/321/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/321", "id": 178170460, "node_id": "MDU6SXNzdWUxNzgxNzA0NjA=", "number": 321, "title": "Sending informational responses does not emit the appropriate internal event.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-20T20:22:27Z", "updated_at": "2016-09-21T07:13:36Z", "closed_at": "2016-09-21T07:13:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, sending informational responses emits `_HeadersSent`, not `_ResponseSent`. We should fix that up.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/318", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/318/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/318/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/318", "id": 177877200, "node_id": "MDU6SXNzdWUxNzc4NzcyMDA=", "number": 318, "title": "hyper should validate the header fields in a PUSH_PROMISE frame", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-19T19:40:32Z", "updated_at": "2016-11-04T16:12:07Z", "closed_at": "2016-11-04T16:12:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[RFC 7540 section 8.2.1](https://tools.ietf.org/html/rfc7540#section-8.2.1):\n\n> The header fields in `PUSH_PROMISE` and any subsequent `CONTINUATION` frames MUST be a valid and complete set of request header fields (Section&nbsp;8.1.2.3).  The server MUST include a method in the `:method` pseudo-header field that is safe and cacheable.  If a client receives a `PUSH_PROMISE` that does not include a complete and valid set of header fields or the `:method` pseudo-header field identifies a method that is not safe, it MUST respond with a stream error (Section&nbsp;5.4.2) of type `PROTOCOL_ERROR`.\n\nBreaking this down somewhat, I think this means:\n- \"valid and complete set of request header fields\" \u2013 your header needs to have a :method, :scheme, :authority/Host and :path header.\n- \"safe and cacheable :method pseudo-header\" \u2013 combining [RFC&nbsp;7231 \u00a7&nbsp;4.2.1](https://tools.ietf.org/html/rfc7231#section-4.2.1) and [RFC&nbsp;7231 \u00a7&nbsp;4.2.3](https://tools.ietf.org/html/rfc7231#section-4.2.3), that only allows GET and HEAD.\n\nThe first can be checked with an extra check at the end of the `_reject_pseudo_header_fields()` validation step; the second should probably be spun off into its own like `_reject_te()`.\n\nNot sure (off the top of my head) whether we can distinguish a PUSH_PROMISE frame using the current set of `hdr_validation_flags`. If not, we\u2019ll need to add the ability to do that as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/314", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/314/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/314/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/314", "id": 177461760, "node_id": "MDU6SXNzdWUxNzc0NjE3NjA=", "number": 314, "title": "Emit  _RequestHeadersSent internal event", "user": {"login": "sunu", "id": 1142203, "node_id": "MDQ6VXNlcjExNDIyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunu", "html_url": "https://github.com/sunu", "followers_url": "https://api.github.com/users/sunu/followers", "following_url": "https://api.github.com/users/sunu/following{/other_user}", "gists_url": "https://api.github.com/users/sunu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunu/subscriptions", "organizations_url": "https://api.github.com/users/sunu/orgs", "repos_url": "https://api.github.com/users/sunu/repos", "events_url": "https://api.github.com/users/sunu/events{/privacy}", "received_events_url": "https://api.github.com/users/sunu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 444178490, "node_id": "MDU6TGFiZWw0NDQxNzg0OTA=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Refactoring", "name": "Refactoring", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-16T16:01:55Z", "updated_at": "2016-09-20T20:22:31Z", "closed_at": "2016-09-20T20:22:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In #311 we introduced `_ResponseHeadersSent`. So we should also have a `_RequestHeadersSent` for the sake of symmetry. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/313", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/313/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/313/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/313", "id": 177363896, "node_id": "MDU6SXNzdWUxNzczNjM4OTY=", "number": 313, "title": "Added TLS to sample program but gives \"ssl.SSLError: [SSL: HTTP_REQUEST]\"", "user": {"login": "laike9m", "id": 2592205, "node_id": "MDQ6VXNlcjI1OTIyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2592205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laike9m", "html_url": "https://github.com/laike9m", "followers_url": "https://api.github.com/users/laike9m/followers", "following_url": "https://api.github.com/users/laike9m/following{/other_user}", "gists_url": "https://api.github.com/users/laike9m/gists{/gist_id}", "starred_url": "https://api.github.com/users/laike9m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laike9m/subscriptions", "organizations_url": "https://api.github.com/users/laike9m/orgs", "repos_url": "https://api.github.com/users/laike9m/repos", "events_url": "https://api.github.com/users/laike9m/events{/privacy}", "received_events_url": "https://api.github.com/users/laike9m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-16T07:45:50Z", "updated_at": "2016-09-16T22:08:03Z", "closed_at": "2016-09-16T22:08:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I was trying to modify the given [sample](https://github.com/python-hyper/hyper-h2/blob/master/docs/source/basic-usage.rst#section-6-bringing-it-all-together) to support HTTPS, here's the modified code:\n\n``` python\n#!/usr/local/bin/python3\n\nimport http.server, ssl\n\nimport json\nimport socket\n\nimport h2.connection\nimport h2.events\n\ndef send_response(conn, event):\n    stream_id = event.stream_id\n    response_data = json.dumps(dict(event.headers)).encode('utf-8')\n\n    conn.send_headers(\n        stream_id=stream_id,\n        headers=[\n            (':status', '200'),\n            ('server', 'basic-h2-server/1.0'),\n            ('content-length', str(len(response_data))),\n            ('content-type', 'application/json'),\n        ],\n    )\n    conn.send_data(\n        stream_id=stream_id,\n        data=response_data,\n        end_stream=True\n    )\n\ndef handle(sock):\n    conn = h2.connection.H2Connection(client_side=False)\n    conn.initiate_connection()\n    sock.sendall(conn.data_to_send())\n\n    while True:\n        data = sock.recv(65535)\n        if not data:\n            break\n\n        events = conn.receive_data(data)\n        for event in events:\n            if isinstance(event, h2.events.RequestReceived):\n                send_response(conn, event)\n\n        data_to_send = conn.data_to_send()\n        if data_to_send:\n            sock.sendall(data_to_send)\n\ncertfile=\"path-to-self-signed-cert\"\nkeyfile=\"path-to-key\"\n\nsock = socket.socket()\nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nsock.bind(('0.0.0.0', 8081))\nsock.listen(5)\n\nssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)\nssl_context.options |= (\n    ssl.OP_NO_TLSv1 | ssl.OP_NO_TLSv1_1 | ssl.OP_NO_COMPRESSION\n)\nssl_context.set_ciphers(\"ECDHE+AESGCM\")\nssl_context.load_cert_chain(certfile=certfile, keyfile=keyfile)\nssl_context.set_alpn_protocols([\"h2\"])\n\nwhile True:\n    conn = sock.accept()[0]\n    sslconn = ssl_context.wrap_socket(conn, server_side=True)\n    handle(sslconn)\n```\n\nThe ssl part of code is directly copied from the [asyncio sample](https://github.com/python-hyper/hyper-h2/blob/master/examples/asyncio/asyncio-server.py).\n\nAnd below is the client code:\n\n``` python\nimport ssl\n\ntry:\n    _create_unverified_https_context = ssl._create_unverified_context\nexcept AttributeError:\n    pass\nelse:\n    ssl._create_default_https_context = _create_unverified_https_context\n\nfrom hyper import HTTPConnection\n\nconn = HTTPConnection('localhost:8081')\nconn.request('GET', '/')\nresp = conn.get_response()\n\nprint(resp.read())\n```\n\nRunning both, an error occurred on server side:\n\n``` bash\nTraceback (most recent call last):\n  File \"/Users/yaoz/Dev/HTTP2/h2-https-server.py\", line 68, in <module>\n    sslconn = ssl_context.wrap_socket(conn, server_side=True)\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 377, in wrap_socket\n    _context=self)\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 752, in __init__\n    self.do_handshake()\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 988, in do_handshake\n    self._sslobj.do_handshake()\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 633, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLError: [SSL: HTTP_REQUEST] http request (_ssl.c:645)\n```\n\nCan't figure out why.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/302", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/302/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/302/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/302", "id": 172952981, "node_id": "MDU6SXNzdWUxNzI5NTI5ODE=", "number": 302, "title": "Unexpected GOAWAY encountered when doing early prioritization of some sites.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-24T13:34:04Z", "updated_at": "2016-08-25T21:40:50Z", "closed_at": "2016-08-25T13:04:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When using hyper-h2 to perform early stream prioritization, some sites break entirely. Specifically, if hyper-h2 is used to send a PRIORITY frame on stream 1, and then a HEADERS frame on stream 1, the following sites issue a `GOAWAY(error_code=STREAM_CLOSED, additional_data=\"invalid stream id in HEADERS frame\")`:\n- https://python.org\n- https://h2o.examp1e.net/\n\nMy understanding of RFC 7540 is that PRIORITY frames do not change stream state. _Certainly_ they do not transition the stream state to closed, meaning that STREAM_CLOSED would be an invalid error code.\n\nIn the case of python.org, they're behind Fastly, so I'd like to ping @dstufft to get the ball rolling there. Feel free to refer a relevant Fastly engineer to this issue for follow-up @dstufft. In the case of h2o.examp1e.net I don't know if there's a CDN there or not, but certainly the server itself belongs to @kazuho so I'll ping him in the first instance.\n\nThis was found by @Kriechi in the mitmproxy team as part of mitmproxy/mitmproxy#1498.\n\nThe repro script is below (requires `pip install h2 certifi` to run):\n\n``` python\n#!/usr/bin/env python2\n\nimport certifi\nimport h2.connection\nimport h2.events\n\nimport errno\nimport socket\nimport ssl\nimport time\n\nSERVER_NAME = 'www.python.org'\n\nsocket.setdefaulttimeout(2)\n\nc = h2.connection.H2Connection()\nc.initiate_connection()\n\nctx = ssl.create_default_context(cafile=certifi.where())\nctx.set_alpn_protocols(['h2', 'http/1.1'])\nctx.set_npn_protocols(['h2', 'http/1.1'])\n\ns = socket.create_connection((SERVER_NAME, 443))\ns = ctx.wrap_socket(s, server_hostname=SERVER_NAME)\n\ns.sendall(c.data_to_send())\n\nc.prioritize(1, weight=201, depends_on=0, exclusive=False)\n\nheaders = [\n    (':method', 'GET'),\n    (':path', '/'),\n    (':authority', SERVER_NAME),\n    (':scheme', 'https'),\n    ('user-agent', 'custom-python-script'),\n]\nc.send_headers(1, headers, end_stream=True)\n\ns.sendall(c.data_to_send())\n\n\nwhile True:\n    data = s.recv(65536 * 256)\n    if not data:\n        break\n\n    try:\n        events = c.receive_data(data)\n        s.sendall(c.data_to_send())\n    except:\n        break\n\n    for event in events:\n        if isinstance(event, h2.events.DataReceived):\n            print \"Received %d bytes of data\" % event.flow_controlled_length\n        elif isinstance(event, h2.events.ConnectionTerminated):\n            print \"GOAWAY\", event\n            break\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/295", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/295/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/295/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/295", "id": 172768427, "node_id": "MDU6SXNzdWUxNzI3Njg0Mjc=", "number": 295, "title": "Lookup meaningful name for error code", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-23T18:13:03Z", "updated_at": "2016-08-25T12:44:18Z", "closed_at": "2016-08-25T12:44:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now `h2.error.H2_ERRORS` only is a list of all error codes as raw values.\nIt would be nice to lookup a meaningful name for a given error code.\n\nE.g.: \n\n```\n>>> some_error_code_value = 0x7\n>>> h2.ErrorCodes.get_name(some_error_code_value)\n'REFUSED_STREAM'\n```\n\nThis would allow us to generate more meaningful error messages and debug output.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/290", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/290/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/290/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/290", "id": 172221881, "node_id": "MDU6SXNzdWUxNzIyMjE4ODE=", "number": 290, "title": "Reject response header blocks that don\u2019t include the `:status` field", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sunu", "id": 1142203, "node_id": "MDQ6VXNlcjExNDIyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunu", "html_url": "https://github.com/sunu", "followers_url": "https://api.github.com/users/sunu/followers", "following_url": "https://api.github.com/users/sunu/following{/other_user}", "gists_url": "https://api.github.com/users/sunu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunu/subscriptions", "organizations_url": "https://api.github.com/users/sunu/orgs", "repos_url": "https://api.github.com/users/sunu/repos", "events_url": "https://api.github.com/users/sunu/events{/privacy}", "received_events_url": "https://api.github.com/users/sunu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sunu", "id": 1142203, "node_id": "MDQ6VXNlcjExNDIyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunu", "html_url": "https://github.com/sunu", "followers_url": "https://api.github.com/users/sunu/followers", "following_url": "https://api.github.com/users/sunu/following{/other_user}", "gists_url": "https://api.github.com/users/sunu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunu/subscriptions", "organizations_url": "https://api.github.com/users/sunu/orgs", "repos_url": "https://api.github.com/users/sunu/repos", "events_url": "https://api.github.com/users/sunu/events{/privacy}", "received_events_url": "https://api.github.com/users/sunu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2016-08-19T21:14:06Z", "updated_at": "2016-09-20T19:31:56Z", "closed_at": "2016-09-20T19:31:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Quoting from [RFC 7540 section 8.1.2.4](https://tools.ietf.org/html/rfc7540#section-8.1.2.4):\n\n> For HTTP/2 responses, a single `\":status\"` pseudo-header field is\n>    defined that carries the HTTP status code field (see [RFC7231],\n>    Section 6).  This pseudo-header field MUST be included in all\n>    responses; otherwise, the response is malformed (Section 8.1.2.6).\n\nThis would mean adding another check in `utilities.py` to cover the possibility that this pseudo-header field is missing, and adding some new test cases in `test_invalid_headers.py`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/288", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/288/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/288/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/288", "id": 171717832, "node_id": "MDU6SXNzdWUxNzE3MTc4MzI=", "number": 288, "title": "POST request of 64K and above", "user": {"login": "kashirin-alex", "id": 5158149, "node_id": "MDQ6VXNlcjUxNTgxNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5158149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kashirin-alex", "html_url": "https://github.com/kashirin-alex", "followers_url": "https://api.github.com/users/kashirin-alex/followers", "following_url": "https://api.github.com/users/kashirin-alex/following{/other_user}", "gists_url": "https://api.github.com/users/kashirin-alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/kashirin-alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kashirin-alex/subscriptions", "organizations_url": "https://api.github.com/users/kashirin-alex/orgs", "repos_url": "https://api.github.com/users/kashirin-alex/repos", "events_url": "https://api.github.com/users/kashirin-alex/events{/privacy}", "received_events_url": "https://api.github.com/users/kashirin-alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-17T17:43:27Z", "updated_at": "2016-08-17T19:45:37Z", "closed_at": "2016-08-17T19:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "A post request go idle after 64k-1 bytes received \n-- with opera it is 24 (2Kb+) events\n-- IE it is 4 (16Kb) events\nThe settings are acknowledged while seems to be not used.\nSetting of highest values at connection start with self.conn.update_settings does not help. \n\nhere are the events output of a request with opera:\n`\n<RemoteSettingsChanged changed_settings:{3: ChangedSetting(setting=3, original_value=None, new_value=1000), 4: ChangedSetting(setting=4, original_value=65535, new_value=6291456)}>\n<WindowUpdated stream_id:0, delta:15663105>\n<RequestReceived stream_id:1, headers:[(':method', 'POST'), (':authority', 'thither.direct'), (':scheme', 'https'), (':path', '/component/administration/saveform/cms/files/modify_cms_file'), ('content-length', '480438'), ('cache-control', 'max-age=0'), ('origin', 'https://thither.direct'), ('upgrade-insecure-requests', '1'), ('user-agent', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.82 Safari/537.36 OPR/39.0.2256.48'), ('content-type', 'multipart/form-data; boundary=----WebKitFormBoundaryIaq0FT3vVtOmXti3'), ('accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'), ('referer', 'https://thither.direct/component/administration/details/cms/files/modify_cms_file/?CMSfilePathName=/material/assets/css/:components.css'), ('accept-encoding', 'gzip, deflate, lzma, br'), ('accept-language', 'en-US,en;q=0.8'), ('cookie', 'TD-adm=122331657601169140331')]>\n<PriorityUpdated stream_id:1, weight:256, depends_on:0, exclusive:True>\n<DataReceived stream_id:1, flow_controlled_length:2852, data:2d2d2d2d2d2d5765624b6974466f726d426f756e>\n1 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:5f66696c656c697374206c692c0d0a2e70617373>\n2 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:61722d6d6f62696c652d6465746163686564202e>\n3 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:6d6174657269616c2d636f6e74656e74203e2073>\n4 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:676174696f6e2d64697669646572207b0d0a2020>\n5 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2124, data:6c74202e6e617669676174696f6e206c69203e20>\n6 : 2124\n<DataReceived stream_id:1, flow_controlled_length:2852, data:6c67203e206c69203e2061203e207370616e207b>\n7 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:202e736964656261722d64657461636865642e61>\n8 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:7465723b0d0a2020202070616464696e672d6c65>\n9 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:20746f703a20303b0d0a2020202070616464696e>\n10 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:723a6e6f74282e736964656261722d6465666175>\n11 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2124, data:61756c74202e6e61762d6a757374696669656420>\n12 : 2124\n<DataReceived stream_id:1, flow_controlled_length:2852, data:61796f75742d626f786564203e202e6e61766261>\n13 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:2d7472616e73666f726d3a20726f746174652833>\n14 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:3b0d0a2020626f726465722d636f6c6f723a2023>\n15 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:6e652d6865696768743a20313b0d0a2020626f72>\n16 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:6e2d6f757420696e66696e6974653b0d0a20202d>\n17 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2124, data:0a20206865696768743a20333070783b0d0a2020>\n18 : 2124\n<DataReceived stream_id:1, flow_controlled_length:2852, data:656c61746976653b0d0a202077696474683a2032>\n19 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:7075745b747970653d636865636b626f785d207b>\n20 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:74697665202e63686f696365207370616e3a6166>\n21 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:697a653a20313470783b0d0a20206c696e652d68>\n22 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2852, data:363470783b0d0a7d0d0a2e636865636b626f782d>\n23 : 2852\n<DataReceived stream_id:1, flow_controlled_length:2123, data:2c0d0a2e626f6f7473747261702d737769746368>\n24 : 2123\n<SettingsAcknowledged changed_settings:{3: ChangedSetting(setting=3, original_value=100, new_value=128)}>\n<SettingsAcknowledged changed_settings:{}>\n`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/284", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/284/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/284/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/284", "id": 169995806, "node_id": "MDU6SXNzdWUxNjk5OTU4MDY=", "number": 284, "title": "Seemingly inconsistent behaviour around H2Configuration objects", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-08T18:47:11Z", "updated_at": "2016-08-08T19:26:59Z", "closed_at": "2016-08-08T19:26:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spotted while trying to write tests for #261. Spinning this out as a separate issue because I don\u2019t think it\u2019s related to my changes, and I can readily reproduce it on master (commit d840a63).\n\nWe have the following test in `test_invalid_headers.py`:\n\n``` python\ndef test_transfer_encoding_trailers_is_valid(self, frame_factory):\n    \"\"\"\n    Transfer-Encoding trailers is allowed by the filter.\n    \"\"\"\n    headers = (\n        self.base_request_headers + [('te', 'trailers')]\n    )\n\n    c = h2.connection.H2Connection(client_side=False)\n    c.receive_data(frame_factory.preamble())\n\n    f = frame_factory.build_headers_frame(headers)\n    data = f.serialize()\n\n    events = c.receive_data(data)\n    assert len(events) == 1\n    request_event = events[0]\n    assert request_event.headers == headers\n```\n\nPassing on CI and locally, which is fine. But then I replace this line:\n\n``` python\n    c = h2.connection.H2Connection(client_side=False)\n```\n\nwith this, which I think should have the equivalent behaviour:\n\n``` python\n    config = h2.config.H2Configuration(client_side=False)\n    c = h2.connection.H2Connection(config=config)\n```\n\nSplat:\n\n```\n================================================================ FAILURES =================================================================\n___________________________________ TestInvalidFrameSequences.test_transfer_encoding_trailers_is_valid ____________________________________\n\nself = <test_invalid_headers.TestInvalidFrameSequences object at 0x104b7e2e8>, frame_factory = <helpers.FrameFactory object at 0x104b7e278>\n\n    def test_transfer_encoding_trailers_is_valid(self, frame_factory):\n        \"\"\"\n            Transfer-Encoding trailers is allowed by the filter.\n            \"\"\"\n        headers = (\n            self.base_request_headers + [('te', 'trailers')]\n        )\n\n        config = h2.config.H2Configuration(client_side=False)\n        c = h2.connection.H2Connection(config=config)\n        c.receive_data(frame_factory.preamble())\n\n        f = frame_factory.build_headers_frame(headers)\n        data = f.serialize()\n\n        events = c.receive_data(data)\n>       assert len(events) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\ntest/test_invalid_headers.py:86: AssertionError\n======================================================== 1 failed in 0.03 seconds =========================================================\n```\n\nI\u2019m going to keep digging and see if I can get to the bottom of this, because I can\u2019t see any obvious reason why the change in approach would lead to different behaviour.\n\n(Context is that my changes add several new fields to the config object, which can\u2019t be passed as kwargs to `H2Connection`. I need to pass in an `H2Configuration` object for my test, but keep hitting this error.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/283", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/283/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/283/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/283", "id": 169987063, "node_id": "MDU6SXNzdWUxNjk5ODcwNjM=", "number": 283, "title": "Tidy up the repeated code in H2Configuration", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-08T18:05:36Z", "updated_at": "2016-08-19T21:05:33Z", "closed_at": "2016-08-19T21:05:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When we merge #261, we\u2019re going to have four boolean config options on `H2Configuration`. Each of these options has a getter/setter, but the associated code is very similar \u2013 it enforces that you can only set boolean values here.\n\nIt would be good to use something like a descriptor to reduce the amount of repeated code here.\n\nSplitting off from #261 to avoid that growing in size any further.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/278", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/278/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/278/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/278", "id": 169754916, "node_id": "MDU6SXNzdWUxNjk3NTQ5MTY=", "number": 278, "title": "Branch mismatch in docs", "user": {"login": "kracekumar", "id": 311929, "node_id": "MDQ6VXNlcjMxMTkyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/311929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kracekumar", "html_url": "https://github.com/kracekumar", "followers_url": "https://api.github.com/users/kracekumar/followers", "following_url": "https://api.github.com/users/kracekumar/following{/other_user}", "gists_url": "https://api.github.com/users/kracekumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/kracekumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kracekumar/subscriptions", "organizations_url": "https://api.github.com/users/kracekumar/orgs", "repos_url": "https://api.github.com/users/kracekumar/repos", "events_url": "https://api.github.com/users/kracekumar/events{/privacy}", "received_events_url": "https://api.github.com/users/kracekumar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-06T16:41:43Z", "updated_at": "2016-08-06T16:51:17Z", "closed_at": "2016-08-06T16:43:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The documentation [step 6](http://hyper.readthedocs.io/en/development/contributing.html#steps) specifies `Send a GitHub Pull Request to the main repository\u2019s development branch.`. Unfortunately `development` directory is missing. Should it say as `Send a GitHub Pull Request to the main repository\u2019s master branch`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/273", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/273/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/273/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/273", "id": 169118200, "node_id": "MDU6SXNzdWUxNjkxMTgyMDA=", "number": 273, "title": "Default and allow setting of SETTINGS_MAX_HEADER_LIST_SIZE.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-03T12:21:06Z", "updated_at": "2016-08-04T15:46:53Z", "closed_at": "2016-08-04T15:46:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to python-hyper/hpack#55.\n\nOnce that patch lands, hyper-h2 should start emitting SETTINGS_MAX_HEADER_LIST_SIZE and enforcing it appropriately using the HPACK module. This will adequately notify remote peers that they will encounter problems if they try to send too many headers: specifically, we'll GOAWAY them so fast it'll make their head spin.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/272", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/272/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/272/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/272", "id": 169096784, "node_id": "MDU6SXNzdWUxNjkwOTY3ODQ=", "number": 272, "title": "Add integrated window management.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-03T10:16:40Z", "updated_at": "2016-10-20T09:39:17Z", "closed_at": "2016-10-20T09:39:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Having had discussions with Tatsuhiro last week, I think it may be worthwhile to investigate hyper-h2's current policy on HTTP/2 window management.\n\nRight now we expect users to manage their flow control window themselves, by calling `increment_flow_control_window`. This causes frames to be emitted directly. That allows users to carefully tailor their flow control management to their particular use-case, which is nice, but for 99% of users this isn't important. Instead, they'll fall back to the 'naive' flow control algorithm, which incurs quite a lot of overhead.\n\nIt would be nice, then, to add the ability to have a default flow control behaviour. To get this we need an API that allows users to report when they have consumed data, but not necessarily emit a frame. This could either piggyback on the current API (`increment_flow_control_window`), or it could use a new API: either could work.\n\nWe'll need a flag that allows enabling this behaviour. It'll default to `False` for the moment, for backward compatibility purposes, but for 3.0 we'll swap it to `True`: only users like mitmproxy actually require this to be turned off, so `True` would be the ideal default.\n\nI suspect we can check the best algorithm by looking at nghttp2, but at a simple level we should avoid emitting per-stream WINDOW_UPDATE frames until the flow control window has been more than 50% consumed, at which point we should emit WINDOW_UPDATE frames for the entire chunk.\n\nWe also need to think about connection-level flow control. I don't have good thoughts here yet, I'll ponder more.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/271", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/271/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/271/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/271", "id": 168914689, "node_id": "MDU6SXNzdWUxNjg5MTQ2ODk=", "number": 271, "title": "Reject header fields with invalid whitespace characters.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T15:26:06Z", "updated_at": "2016-08-31T14:29:55Z", "closed_at": "2016-08-31T14:29:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Relevant: golang/go#16572.\n\nWe should forbid implementations from emitting header fields with invalid whitespace characters. Generally, that means surrounding whitespace of any kind, either leading or trailing, from both header field names and header field values.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/263", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/263/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/263/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/263", "id": 166914514, "node_id": "MDU6SXNzdWUxNjY5MTQ1MTQ=", "number": 263, "title": "Does hyper reject trailers that contain pseudo-header fields?", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-07-21T20:50:00Z", "updated_at": "2016-09-05T12:53:10Z", "closed_at": "2016-09-05T12:53:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Spotted in [RFC 7540 section 8.1.2.1](https://tools.ietf.org/html/rfc7540#section-8.1.2):\n\n> Pseudo-header fields MUST NOT appear in trailers.\n\nDoes hyper enforce this rule? Should it?\n\nI\u2019d expect this rule to be enforced in the `validate_headers()` pipeline, but that\u2019s only just learnt how to distinguish between trailers and non-trailers, so I don\u2019t think it would have been able to enforce this rule.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/262", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/262/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/262/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/262", "id": 166681289, "node_id": "MDU6SXNzdWUxNjY2ODEyODk=", "number": 262, "title": "It\u2019s possible to send header blocks from hyper-as-server that hyper-as-client will reject", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-20T21:02:05Z", "updated_at": "2016-08-30T12:17:49Z", "closed_at": "2016-08-30T12:17:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Picking up a comment from #261:\n\nWe do a series of checks in the `validate_headers` pipeline for incoming header blocks, in particular:\n- [x] All fields should be lowercase.\n- [x] A Transfer-Encoding header must have value \"trailers\"\n- [x] No blocks with the Connection header.\n- [x] No duplicate pseudo-header fields and/or pseudo-header fields coming after an ordinary header field.\n- [x] No header blocks with bad :authority/Host headers.\n\nBut we don\u2019t enforce all these rules on header blocks that we send, which suggests that it\u2019s possible to send a header block with hyper that we\u2019d reject if we received. Which seems odd.\n\n(1) is achieved by the `_lowercase_header_names` pipeline, and I\u2019m adding (5) in #261. I think we should be enforcing (2)-(4) on header blocks that we send as well.\n\nDoes that seem sensible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/255", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/255/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/255/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/255", "id": 165079470, "node_id": "MDU6SXNzdWUxNjUwNzk0NzA=", "number": 255, "title": "hyper-h2 content length tracking doesn't work with HEAD requests", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-12T13:24:13Z", "updated_at": "2020-05-08T09:07:52Z", "closed_at": "2016-07-22T11:02:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Responses to HEAD requests may have a Content-Length header that corresponds to what their body _would_ be, but provide no body. Our content-length tracking doesn't respect that. We should fix it!\n\nSee also: #254.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/253", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/253/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/253/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/253", "id": 164653377, "node_id": "MDU6SXNzdWUxNjQ2NTMzNzc=", "number": 253, "title": "Flow control issues in the curio example server", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-09T06:40:15Z", "updated_at": "2016-07-12T16:29:32Z", "closed_at": "2016-07-12T16:29:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(By \"flow control\" here I mean coordinating on reading/writing to a socket, _not_ HTTP/2 flow control. I don't know another term for this?)\n\n1) The code calls `sock.sendall` from multiple parallel tasks. This is bad, because `sendall` is not an atomic operation, so the writes could get intermixed on the wire. There needs to be one linearization point where data read out of `data_to_send()` is queued to go out on the wire.\n\n2) The receive loop (the `H2Server.run` method) alternates between reading and blocking on sending. This seems like risky behavior, because it creates the possibility of deadlock: if a client was written in a similar fashion, then one could potentially end up in a situation where they were both blocked in `sendall`, waiting for the other to call `recv`.\n\nI don't know how to handle these properly in the HTTP/2 context, especially when combined with HTTP/2 flow control (which I don't understand at all yet :-)), and the requirement to not allocate infinite memory for buffers (so we can't just keep calling `recv` forever without any backpressure, or queuing up unbounded amounts of data to send). I'm... not actually entirely sure that (2) even is solvable given bounded memory use, actually?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/250", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/250/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/250/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/250", "id": 164261014, "node_id": "MDU6SXNzdWUxNjQyNjEwMTQ=", "number": 250, "title": "Support sending memoryview objects in DATA frames.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-07T08:57:44Z", "updated_at": "2017-04-27T20:04:57Z", "closed_at": "2017-04-27T20:04:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Encountered this as part of working on Twisted's HTTP/2 client.\n\nWhen writing large amounts of data in a non-prioritised way (like a client would!), it's entirely possible that a stack will want to send > SETTINGS_MAX_FRAME_SIZE data in one go. This will require that the stack split the write up into multiple chunks. For large single writes or small values of SETTINGS_MAX_FRAME_SIZE this represents quite a lot of copying, which is substantially less than ideal.\n\nIt would be better, then, if we could support `memoryview` objects in DATA frames for as long as possible before concretizing to bytes. This may require some additional support in hyperframe, as ideally we'd only concretize the memoryview when we serialize the frame.\n\nAn alternative is to allow the `send_data` call to automatically chunkify your writes. That would let the `memoryview` use be entirely internal. I'm inclined not to want to do that, but it's worth noting that the option exists.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/247", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/247/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/247/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/247", "id": 163309132, "node_id": "MDU6SXNzdWUxNjMzMDkxMzI=", "number": 247, "title": "PROTOCOL_ERROR is occured when I use H2", "user": {"login": "NetWilliam", "id": 3966971, "node_id": "MDQ6VXNlcjM5NjY5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3966971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NetWilliam", "html_url": "https://github.com/NetWilliam", "followers_url": "https://api.github.com/users/NetWilliam/followers", "following_url": "https://api.github.com/users/NetWilliam/following{/other_user}", "gists_url": "https://api.github.com/users/NetWilliam/gists{/gist_id}", "starred_url": "https://api.github.com/users/NetWilliam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NetWilliam/subscriptions", "organizations_url": "https://api.github.com/users/NetWilliam/orgs", "repos_url": "https://api.github.com/users/NetWilliam/repos", "events_url": "https://api.github.com/users/NetWilliam/events{/privacy}", "received_events_url": "https://api.github.com/users/NetWilliam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-01T02:52:01Z", "updated_at": "2016-07-01T09:56:32Z", "closed_at": "2016-07-01T09:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use h2 as client to send request to apns, howerver I have met this problem in stumble test, \nmy python ssl context configure as follow:\n\n```\n    ctx = ssl.create_default_context()\n    ctx.options |= (ssl.OP_NO_TLSv1 | ssl.OP_NO_TLSv1_1 | ssl.OP_NO_COMPRESSION)\n    ctx.set_ciphers('ECDHE+AESGCM')\n    ctx.load_cert_chain(APNS_CERT)\n    ctx.check_hostname = False\n    ctx.verify_mode = ssl.CERT_NONE\n    ctx.set_alpn_protocols(['h2'])\n```\n\nhere is debug log of mock server written by go:\n\n2016/06/23 16:12:11 http2: server connection from 127.0.0.1:51079 on 0xc820016100\n2016/06/23 16:12:11 http2: Framer 0xc82034a210: wrote SETTINGS len=18, settings: MAX_FRAME_SIZE=1048576, MAX_CONCURRENT_STREAMS=250, MAX_HEADER_LIST_SIZE=1048896\n2016/06/23 16:12:11 http2: server: client 127.0.0.1:51079 said hello\n2016/06/23 16:12:11 http2: Framer 0xc82034a210: read SETTINGS len=30, settings: HEADER_TABLE_SIZE=4096, ENABLE_PUSH=1, MAX_CONCURRENT_STREAMS=100, INITIAL_WINDOW_SIZE=65535, MAX_FRAME_SIZE=16384\n2016/06/23 16:12:11 http2: server read frame SETTINGS len=30, settings: HEADER_TABLE_SIZE=4096, ENABLE_PUSH=1, MAX_CONCURRENT_STREAMS=100, INITIAL_WINDOW_SIZE=65535, MAX_FRAME_SIZE=16384\n2016/06/23 16:12:11 http2: server processing setting [HEADER_TABLE_SIZE = 4096]\n2016/06/23 16:12:11 http2: server processing setting [ENABLE_PUSH = 1]\n2016/06/23 16:12:11 http2: server processing setting [MAX_CONCURRENT_STREAMS = 100]\n2016/06/23 16:12:11 http2: server processing setting [INITIAL_WINDOW_SIZE = 65535]\n2016/06/23 16:12:11 http2: server processing setting [MAX_FRAME_SIZE = 16384]\n2016/06/23 16:12:11 http2: Framer 0xc82034a210: read SETTINGS flags=ACK len=0\n2016/06/23 16:12:11 http2: server read frame SETTINGS flags=ACK len=0\n2016/06/23 16:12:11 http2: Framer 0xc82034a210: read WINDOW_UPDATE len=4 (conn) incr=2147418112\n2016/06/23 16:12:11 http2: server read frame WINDOW_UPDATE len=4 (conn) incr=2147418112\n2016/06/23 16:12:11 http2: Framer 0xc82034a210: wrote SETTINGS flags=ACK len=0\n\n2016/06/23 16:12:15 http2: Framer 0xc82034a210: read HEADERS flags=END_HEADERS stream=1 len=20\n2016/06/23 16:12:15 http2: server read frame HEADERS flags=END_HEADERS stream=1 len=20\n2016/06/23 16:12:15 http2: server decoded header field \":method\" = \"POST\"\n2016/06/23 16:12:15 http2: server decoded header field \":path\" = \"/\"\n2016/06/23 16:12:15 http2: server decoded header field \"apns-topic\" = \"nonthingbig\"\n2016/06/23 16:12:15 http2: Framer 0xc82034a210: read DATA flags=END_STREAM stream=1 len=163 data=\"{\\\"r\\\": \\\"test-task-id\\\", \\\"l\\\": \\\"\\\", \\\"aps\\\": {\\\"badge\\\": 0, \\\"alert\\\": {\\\"body\\\": \\\"\\u6709\\u591a\\u4e45\\u6ca1\\u4e0b\\u53a8\\u623f\\u4e86\\uff1f\\\", \\\"title\\\": null}, \\\"sound\\\": \\\"default\\\"}}\"\n2016/06/23 16:12:15 http2: server read frame DATA flags=END_STREAM stream=1 len=163 data=\"{\\\"r\\\": \\\"test-task-id\\\", \\\"l\\\": \\\"\\\", \\\"aps\\\": {\\\"badge\\\": 0, \\\"alert\\\": {\\\"body\\\": \\\"\\u6709\\u591a\\u4e45\\u6ca1\\u4e0b\\u53a8\\u623f\\u4e86\\uff1f\\\", \\\"title\\\": null}, \\\"sound\\\": \\\"default\\\"}}\"\n2016/06/23 16:12:15 http2: Framer 0xc82034a210: wrote RST_STREAM stream=1 len=4 ErrCode=**PROTOCOL_ERROR**\n2016/06/23 16:12:15 http2: Framer 0xc82034a210: wrote RST_STREAM stream=1 len=4 ErrCode=**STREAM_CLOSED**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/246", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/246/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/246/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/246", "id": 162874153, "node_id": "MDU6SXNzdWUxNjI4NzQxNTM=", "number": 246, "title": "Reject mismatched :authority and Host headers", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-06-29T08:59:01Z", "updated_at": "2016-08-11T08:17:23Z", "closed_at": "2016-08-11T08:17:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to #245, and we may want to merge the work together. Read that issue before tackling this one.\n\nHTTP/2 allows for both the :authority and Host header to be present in a request header block. If they _are_ both present, however, they absolutely should be the same. We should add a stage to the header validation pipeline (possibly the same as the stage in #245) that confirms that, if present, these are both identical. If they are not identical, that's a ProtocolError.\n\nFor @python-hyper/contributors, see the message in #245 for guidance on tackling this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/245", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/245/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/245/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/245", "id": 162873118, "node_id": "MDU6SXNzdWUxNjI4NzMxMTg=", "number": 245, "title": "Reject request header blocks with neither :authority nor Host headers.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-06-29T08:53:45Z", "updated_at": "2016-08-11T08:17:05Z", "closed_at": "2016-08-11T08:17:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RFC 7540 Section 8.1.2.3 has complex rules regarding :authority and Host headers, but the basic gist of it is that there is very nearly no situation when you can have _neither_ of them. Basically the only way this could happen is if a HTTP/1.0 request with no Host header was proxied into a HTTP/2 request. I'm pretty disinterested in serving this use-case at this time, so I think we should forbid both sending and receiving header blocks of this form.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/239", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/239/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/239/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/239", "id": 160128504, "node_id": "MDU6SXNzdWUxNjAxMjg1MDQ=", "number": 239, "title": "Links to docs broken", "user": {"login": "tomviner", "id": 167319, "node_id": "MDQ6VXNlcjE2NzMxOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/167319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomviner", "html_url": "https://github.com/tomviner", "followers_url": "https://api.github.com/users/tomviner/followers", "following_url": "https://api.github.com/users/tomviner/following{/other_user}", "gists_url": "https://api.github.com/users/tomviner/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomviner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomviner/subscriptions", "organizations_url": "https://api.github.com/users/tomviner/orgs", "repos_url": "https://api.github.com/users/tomviner/repos", "events_url": "https://api.github.com/users/tomviner/events{/privacy}", "received_events_url": "https://api.github.com/users/tomviner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-14T08:49:57Z", "updated_at": "2016-06-28T07:56:57Z", "closed_at": "2016-06-21T17:23:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The header link on github, and the link in the readme point to http://python-hyper.org/h2/ which 404s.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/234", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/234/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/234/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/234", "id": 157482168, "node_id": "MDU6SXNzdWUxNTc0ODIxNjg=", "number": 234, "title": "RequestReceived should contain priority information", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2016-05-30T11:11:00Z", "updated_at": "2016-06-28T09:29:35Z", "closed_at": "2016-06-28T09:29:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A follow-up on #229 and #233:\n\nIt would be nice if the `RequestReceived` event contains priority information, if the HEADERS frame carries them. This way all available information about a new request is in the same event. `PriorityUpdated` is then only used for actual `PRIORITY` frames.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/229", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/229/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/229/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/229", "id": 156113582, "node_id": "MDU6SXNzdWUxNTYxMTM1ODI=", "number": 229, "title": "Allow depends_on and weight settings in send_headers", "user": {"login": "Kriechi", "id": 114300, "node_id": "MDQ6VXNlcjExNDMwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kriechi", "html_url": "https://github.com/Kriechi", "followers_url": "https://api.github.com/users/Kriechi/followers", "following_url": "https://api.github.com/users/Kriechi/following{/other_user}", "gists_url": "https://api.github.com/users/Kriechi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kriechi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kriechi/subscriptions", "organizations_url": "https://api.github.com/users/Kriechi/orgs", "repos_url": "https://api.github.com/users/Kriechi/repos", "events_url": "https://api.github.com/users/Kriechi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kriechi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-21T17:46:25Z", "updated_at": "2016-05-29T23:40:05Z", "closed_at": "2016-05-29T23:40:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the `send_headers` function on the connection (and stream) object does not allow us to specify a `depends_on` and `weight` setting. It would be useful to create a single HeadersFrame with these values, instead of creating an additional PriorityFrame.\n\nA related problem is that a `RequestReceived` event does not carry these values - but instead a second event (`PriorityUpdated`) is issued - which makes it unnecessary difficult to reassemble the original HeadersFrame. This might also be related to #228 for handling multiple events of the same stream etc.\n\nRight now, once I receive a `RequestReceived` event, I'm looping through all remaining events to find possible `PriorityUpdated` which I would like then to merge all values into a new `send_headers` call.\n\nLet me know if this is a feasible request - or maybe I'm just missing a nifty API feature.\nThanks.\n\n**edit**\nHow can change the priority of a stream? I couldn't find a way to generate a PriorityFrame - or do I have to do that manually with raw frames?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/222", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/222/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/222/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/222", "id": 153897199, "node_id": "MDU6SXNzdWUxNTM4OTcxOTk=", "number": 222, "title": "Server POST examples", "user": {"login": "130security", "id": 18382821, "node_id": "MDQ6VXNlcjE4MzgyODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/18382821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/130security", "html_url": "https://github.com/130security", "followers_url": "https://api.github.com/users/130security/followers", "following_url": "https://api.github.com/users/130security/following{/other_user}", "gists_url": "https://api.github.com/users/130security/gists{/gist_id}", "starred_url": "https://api.github.com/users/130security/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/130security/subscriptions", "organizations_url": "https://api.github.com/users/130security/orgs", "repos_url": "https://api.github.com/users/130security/repos", "events_url": "https://api.github.com/users/130security/events{/privacy}", "received_events_url": "https://api.github.com/users/130security/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 260627435, "node_id": "MDU6TGFiZWwyNjA2Mjc0MzU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Documentation", "name": "Documentation", "color": "bfe5bf", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-10T00:08:19Z", "updated_at": "2016-05-11T10:58:36Z", "closed_at": "2016-05-11T10:58:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Probably not the best place for it but, hey I wanted to say: great work!\nI was also curious if you've had the time to put together some additional server examples dealing with other methods (POST, etc.)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/210", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/210/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/210/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/210", "id": 150641619, "node_id": "MDU6SXNzdWUxNTA2NDE2MTk=", "number": 210, "title": "Older releases should not explode when receiving AltSvc frames.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459821, "node_id": "MDU6TGFiZWwyMjg0NTk4MjE=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-24T08:48:31Z", "updated_at": "2016-04-25T14:54:41Z", "closed_at": "2016-04-25T14:54:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Having merged a fix for #195, the 2.3.0 release of hyper-h2 will handle AltSvc properly. However, the older releases will barf on receiving an AltSvc frame, which really isn't great. We should add a change to the 2.1.X and 2.2.X branches that instead ignores the frame entirely.\n\nThis will also involve needing to do something like ef1b179955b53e798844aee5da56f9d01f2fe803 to avoid test failures.\n\nThis should be easy enough for an interested passer-by to pick up, I hope. Please feel free to ask for clarification or more information.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/208", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/208/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/208/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/208", "id": 150395675, "node_id": "MDU6SXNzdWUxNTAzOTU2NzU=", "number": 208, "title": "Support plaintext upgrade.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-22T15:09:57Z", "updated_at": "2016-04-25T16:05:48Z", "closed_at": "2016-04-25T16:05:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should support receiving (and initiating) plaintext upgrade, as defined in [RFC 7540 \u00a7 3.2](https://tools.ietf.org/html/rfc7540#section-3.2).\n\nEssentially, this just needs to be a variant on `initiate_connection` that primes the appropriate internal state. For the client side it should probably emit the `HTTP2-Settings` header field (just to make life easier for people). For the server-side it should take such a field.\n\nThen, it should initialize its internal state such that it believes that a HTTP/2 request was already received. The obvious (but wrong) way to do this is to just manufacture a request to _actually_ receive, but that affects the HPACK compression state so we can't do it. Instead, we need a hook in the `H2Stream` that allows us to create stream 1 and immediately flip it to half-closed with the appropriate state bits set. This needs to happen for both the client and the server.\n\nFor both it should _also_ emit the HTTP/2 preamble (client or server side as appropriate), because that's still required.\n\nWhile we're delaying around the Twisted side of things anyway, we should aim to land this in the 2.3.0 release. 2.3.0 is beginning to look a bit like a blockbuster!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/195", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/195/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/195/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/195", "id": 146853678, "node_id": "MDU6SXNzdWUxNDY4NTM2Nzg=", "number": 195, "title": "Add support for RFC 7838: HTTP Alternative Services", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-08T08:18:22Z", "updated_at": "2016-04-19T15:02:55Z", "closed_at": "2016-04-19T15:02:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[RFC 7838](https://www.rfc-editor.org/rfc/rfc7838.txt) is a thing now. Most HTTP specifications do not require additional work in hyper-h2 to implement because they involve adding new headers, but RFC 7838 is slightly different because it introduces a HTTP/2 frame.\n\nGiven that RFC 7838 is likely to be the building block of HTTP Opportunistic Encryption, it would be a good idea to get ahead of the curve and add support for RFC 7838 in hyper-h2.\n\nTo support this fully we need two things:\n1. We need to be able to emit an event (`AlternativeServicesReceived`) that fires when an ALTSVC Frame is received. This event should carry a list of namedtuples of (alpn token, host, port, lifetime, persist, origin). This will allow clients that wish to handle alternative services to obtain all the relevant information.\n2. We need to add a function that allows the user to advertise their alternative services. This would take a list of 6-tuples of the above form.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/194", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/194/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/194/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/194", "id": 146305523, "node_id": "MDU6SXNzdWUxNDYzMDU1MjM=", "number": 194, "title": "[Discussion] What should we do about HPACK never-indexed header fields?", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 353012655, "node_id": "MDU6TGFiZWwzNTMwMTI2NTU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Backport%20to%202.1.X", "name": "Backport to 2.1.X", "color": "f9d0c4", "default": false, "description": null}, {"id": 353012685, "node_id": "MDU6TGFiZWwzNTMwMTI2ODU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Backport%20to%202.2.X", "name": "Backport to 2.2.X", "color": "e99695", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}, {"id": 228459826, "node_id": "MDU6TGFiZWwyMjg0NTk4MjY=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Question", "name": "Question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2016-04-06T12:55:06Z", "updated_at": "2016-04-21T15:17:51Z", "closed_at": "2016-04-21T15:17:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a complex issue and I may fork it out into multiple places once we've identified work items (if any), but I'd like to briefly talk about the problem.\n\n[RFC 7541](https://tools.ietf.org/html/rfc7541) (the HPACK specification) provides support for what it calls \"never indexed\" header fields ([\u00a7 6.2.3](https://tools.ietf.org/html/rfc7541#section-6.2.3)). These fields have certain restrictions, which exist to serve one specific goal:\n\n> This representation is intended for protecting header field values that are not to be put at risk by compressing them.\n\nThe core reasoning is discussed at length in [RFC 7541 \u00a7 7.1](https://tools.ietf.org/html/rfc7541#section-7.1), but can be summarised as follows. It is possible for attackers to mount attacks similar to the [CRIME](https://en.wikipedia.org/wiki/CRIME) attack against the HPACK compression algorithm state. Put another way, if the attacker is capable of getting any entity that emits privacy-sensitive headers to emit headers of their own construction, they are potentially able to use the size of the responses to probe the compression state of the endpoint. That can expose users to the risk of having their credentials stolen: obviously very bad.\n\nRFC 7541 points out that\n\n> Attacks of this nature are possible any time that two mutually distrustful entities control requests or responses that are placed onto a single HTTP/2 connection.\n\nThe cases that worry me here are:\n- Servers or clients that allow users to inject headers without validation.\n- Intermediaries that coalesce connections in any way.\n\nHappily, RFC 7541's \"never indexed\" literals exist to solve this problem.  These header fields are sent in their literal form with one extra caveat: intermediaries MUST NOT translate them to any other form. That means that they never get added to the compression context of any HTTP/2 box in the network.\n\nThe purpose of this thread is to work out what hyper-h2 should do about this. The Python HPACK library has support for emitting headers in this form (since 1.1.0), and handles receiving them appropriately.\n\nI have two questions:\n1. How do we handle servers/clients needing to keep fields out of compression contexts? Do we give them explicit APIs to do it, or do we do it by default for specific fields (e.g. Authorization, Cookie)? Do we do both? If we give them explicit APIs, how should that API look?\n2. What about middleboxes (e.g. mitmproxy)? Right now they aren't told about headers that are emitted with never indexed semantics, which means they aren't able to meet the requirements of RFC 7541. That clearly has to change.\n\nI'd like to solicit answers to those questions from some people. I'm explicitly tagging the Hyper devs (@python-hyper/core), the mitmproxy devs (@kriechi, @mhils), and some other people who care about this sort of thing (@jimcarreer, @bagder, @tatsuhiro-t) to get your ideas about this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/193", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/193/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/193/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/193", "id": 146043534, "node_id": "MDU6SXNzdWUxNDYwNDM1MzQ=", "number": 193, "title": "Forbid pseudo-header fields not defined in RFC 7540", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 353012655, "node_id": "MDU6TGFiZWwzNTMwMTI2NTU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Backport%20to%202.1.X", "name": "Backport to 2.1.X", "color": "f9d0c4", "default": false, "description": null}, {"id": 353012685, "node_id": "MDU6TGFiZWwzNTMwMTI2ODU=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Backport%20to%202.2.X", "name": "Backport to 2.2.X", "color": "e99695", "default": false, "description": null}, {"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-05T16:38:42Z", "updated_at": "2016-04-14T20:39:21Z", "closed_at": "2016-04-14T20:39:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As specified in [RFC 7540 \u00a7 8.1.2.1](https://tools.ietf.org/html/rfc7540#section-8.1.2.1):\n\n> Endpoints MUST NOT generate pseudo-header fields other than those defined in this document.\n\nThis is easily enforced, and we should do so rather than rely on our users to do it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/190", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/190/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/190/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/190", "id": 142985910, "node_id": "MDU6SXNzdWUxNDI5ODU5MTA=", "number": 190, "title": "Missing git tag for 2.2.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-23T15:05:52Z", "updated_at": "2016-03-23T15:15:58Z", "closed_at": "2016-03-23T15:15:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice to keep the git tags and pypi releases in sync :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/186", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/186/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/186/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/186", "id": 142351370, "node_id": "MDU6SXNzdWUxNDIzNTEzNzA=", "number": 186, "title": "Add support for provisional responses.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-21T13:44:20Z", "updated_at": "2016-03-21T17:29:51Z", "closed_at": "2016-03-21T17:29:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently hyper-h2 doesn't meaningfully support receiving HEADERS blocks for provisional responses. This is stunningly unlikely, but we should probably be able to handle it in a useful way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/183", "repository_url": "https://api.github.com/repos/python-hyper/hyper-h2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/183/comments", "events_url": "https://api.github.com/repos/python-hyper/hyper-h2/issues/183/events", "html_url": "https://github.com/python-hyper/hyper-h2/issues/183", "id": 141315199, "node_id": "MDU6SXNzdWUxNDEzMTUxOTk=", "number": 183, "title": "Remove deprecated fallback for dictionaries as headers.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 228459824, "node_id": "MDU6TGFiZWwyMjg0NTk4MjQ=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Easy", "name": "Easy", "color": "159818", "default": false, "description": null}, {"id": 228459823, "node_id": "MDU6TGFiZWwyMjg0NTk4MjM=", "url": "https://api.github.com/repos/python-hyper/hyper-h2/labels/Enhancement", "name": "Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "LuRsT", "id": 263583, "node_id": "MDQ6VXNlcjI2MzU4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/263583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuRsT", "html_url": "https://github.com/LuRsT", "followers_url": "https://api.github.com/users/LuRsT/followers", "following_url": "https://api.github.com/users/LuRsT/following{/other_user}", "gists_url": "https://api.github.com/users/LuRsT/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuRsT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuRsT/subscriptions", "organizations_url": "https://api.github.com/users/LuRsT/orgs", "repos_url": "https://api.github.com/users/LuRsT/repos", "events_url": "https://api.github.com/users/LuRsT/events{/privacy}", "received_events_url": "https://api.github.com/users/LuRsT/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "LuRsT", "id": 263583, "node_id": "MDQ6VXNlcjI2MzU4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/263583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuRsT", "html_url": "https://github.com/LuRsT", "followers_url": "https://api.github.com/users/LuRsT/followers", "following_url": "https://api.github.com/users/LuRsT/following{/other_user}", "gists_url": "https://api.github.com/users/LuRsT/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuRsT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuRsT/subscriptions", "organizations_url": "https://api.github.com/users/LuRsT/orgs", "repos_url": "https://api.github.com/users/LuRsT/repos", "events_url": "https://api.github.com/users/LuRsT/events{/privacy}", "received_events_url": "https://api.github.com/users/LuRsT/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/python-hyper/hyper-h2/milestones/2", "html_url": "https://github.com/python-hyper/hyper-h2/milestone/2", "labels_url": "https://api.github.com/repos/python-hyper/hyper-h2/milestones/2/labels", "id": 1568548, "node_id": "MDk6TWlsZXN0b25lMTU2ODU0OA==", "number": 2, "title": "3.0.0", "description": null, "creator": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2016-02-07T10:31:30Z", "updated_at": "2017-03-24T09:50:08Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2016-03-16T15:47:58Z", "updated_at": "2017-03-23T11:42:45Z", "closed_at": "2017-03-23T11:42:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Remove the fallback that was deprecated in #184.\n", "performed_via_github_app": null, "score": 1.0}]}