{"total_count": 440, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/slundberg/shap/issues/1331", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1331/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1331/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1331/events", "html_url": "https://github.com/slundberg/shap/issues/1331", "id": 666233508, "node_id": "MDU6SXNzdWU2NjYyMzM1MDg=", "number": 1331, "title": "GradientExplorer, multi-input and different input shapes causing ValueError", "user": {"login": "DS-HSAA", "id": 68853180, "node_id": "MDQ6VXNlcjY4ODUzMTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/68853180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DS-HSAA", "html_url": "https://github.com/DS-HSAA", "followers_url": "https://api.github.com/users/DS-HSAA/followers", "following_url": "https://api.github.com/users/DS-HSAA/following{/other_user}", "gists_url": "https://api.github.com/users/DS-HSAA/gists{/gist_id}", "starred_url": "https://api.github.com/users/DS-HSAA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DS-HSAA/subscriptions", "organizations_url": "https://api.github.com/users/DS-HSAA/orgs", "repos_url": "https://api.github.com/users/DS-HSAA/repos", "events_url": "https://api.github.com/users/DS-HSAA/events{/privacy}", "received_events_url": "https://api.github.com/users/DS-HSAA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-27T11:50:37Z", "updated_at": "2020-07-27T12:15:49Z", "closed_at": "2020-07-27T12:09:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\naccording to [this examle](https://github.com/slundberg/shap/blob/master/notebooks/gradient_explainer/Multi-input%20Gradient%20Explainer%20MNIST%20Example.ipynb), the GradientExplorer in SHAP supports multi-input.\r\n\r\nHowever, when using different shapes for the inputs, the following error occurs:\r\n\r\n> ---------------------------------------------------------------------------\r\n> TypeError                                 Traceback (most recent call last)\r\n> TypeError: only size-1 arrays can be converted to Python scalars\r\n> \r\n> The above exception was the direct cause of the following exception:\r\n> \r\n> ValueError                                Traceback (most recent call last)\r\n> <ipython-input-11-b75425eaafab> in <module>\r\n>      21 # explain predictions of the model on four images\r\n>      22 explainer = shap.GradientExplainer(model, [background, rates])\r\n> ---> 23 shap_values = explainer.shap_values([test_x_images[:5], test_x_rate[:5]])\r\n>      24 \r\n>      25 # plot the feature attributions\r\n> \r\n> c:\\anaconda3\\envs\\project\\lib\\site-packages\\shap\\explainers\\gradient.py in shap_values(self, X, nsamples, ranked_outputs, output_rank_order, rseed, return_variances)\r\n>     104         were chosen as \"top\".\r\n>     105         \"\"\"\r\n> --> 106         return self.explainer.shap_values(X, nsamples, ranked_outputs, output_rank_order, rseed, return_variances)\r\n>     107 \r\n>     108 \r\n> \r\n> c:\\anaconda3\\envs\\project\\lib\\site-packages\\shap\\explainers\\gradient.py in shap_values(self, X, nsamples, ranked_outputs, output_rank_order, rseed, return_variances)\r\n>     265                 for l in range(len(X)):\r\n>     266                     samples = grad[l] * samples_delta[l]\r\n> --> 267                     phis[l][j] = samples.mean(0)\r\n>     268                     phi_vars[l][j] = samples.var(0) / np.sqrt(samples.shape[0]) # estimate variance of means\r\n>     269 \r\n> \r\n> ValueError: setting an array element with a sequence.\r\n\r\nThe tensorflow version is 2.2.0. The following model is used:\r\n\r\n```\r\nmodel_input1 = layers.Input(shape=(None, None, 3))\r\n\r\nx = layers.Conv2D(16,\r\n                  kernel_size=(3, 3),\r\n                  kernel_regularizer=l2(),\r\n                  kernel_initializer='he_uniform',\r\n                  use_bias=False,\r\n                  name='conv1')(model_input1)\r\nx = layers.BatchNormalization(name='conv1_bn')(x)\r\nx = layers.Activation('relu', name='conv1_act')(x)\r\nx = layers.MaxPooling2D(pool_size=(2, 2), strides=(2, 2))(x)\r\n\r\nx = layers.Conv2D(32,\r\n                  kernel_size=(3, 3),\r\n                  kernel_regularizer=l2(),\r\n                  kernel_initializer='he_uniform',\r\n                  use_bias=False,\r\n                  name='conv2')(x)\r\nx = layers.BatchNormalization(name='conv2_bn')(x)\r\nx = layers.Activation('relu', name='conv2_act')(x)\r\nx = layers.MaxPooling2D(pool_size=(2, 2), strides=(2, 2))(x)\r\n\r\nx = layers.Conv2D(32,\r\n                  kernel_size=(3, 3),\r\n                  kernel_regularizer=l2(),\r\n                  kernel_initializer='he_uniform',\r\n                  use_bias=False,\r\n                  name='conv3')(x)\r\nx = layers.BatchNormalization(name='conv3_bn')(x)\r\nx = layers.Activation('relu', name='conv3_act')(x)\r\nx = layers.MaxPooling2D(pool_size=(2, 2), strides=(2, 2))(x)\r\n\r\nx = layers.GlobalAveragePooling2D()(x)\r\n\r\nmodel_input2 = layers.Input(shape=(1,))\r\nx = layers.concatenate([x, model_input2])\r\n\r\n# Dense layer 1\r\nx = layers.Dense(32,\r\n                 activation=None,\r\n                 kernel_regularizer=l2(),\r\n                 kernel_initializer='he_uniform',\r\n                 use_bias=False,\r\n                 name='fc1')(x)\r\nx = layers.BatchNormalization(name='fc1_bn')(x)\r\nx = layers.Activation('relu', name='fc1_act')(x)\r\n\r\n# Output layer\r\noutput = layers.Dense(2, activation='softmax', name='predictions')(x)\r\nmodel = Model(inputs=[model_input1, model_input2], outputs=output, name='model')\r\n\r\n# Usa RMSprop optimizer\r\noptimizer = RMSprop(lr=1e-5)\r\n\r\n# Compile model\r\nmodel.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy'])\r\n```\r\n\r\nAny ideas on what is causing this issue?\r\n\r\nThank you very much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1330", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1330/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1330/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1330/events", "html_url": "https://github.com/slundberg/shap/issues/1330", "id": 665764447, "node_id": "MDU6SXNzdWU2NjU3NjQ0NDc=", "number": 1330, "title": "Unable to import shap", "user": {"login": "cheriewpq", "id": 61908408, "node_id": "MDQ6VXNlcjYxOTA4NDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/61908408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheriewpq", "html_url": "https://github.com/cheriewpq", "followers_url": "https://api.github.com/users/cheriewpq/followers", "following_url": "https://api.github.com/users/cheriewpq/following{/other_user}", "gists_url": "https://api.github.com/users/cheriewpq/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheriewpq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheriewpq/subscriptions", "organizations_url": "https://api.github.com/users/cheriewpq/orgs", "repos_url": "https://api.github.com/users/cheriewpq/repos", "events_url": "https://api.github.com/users/cheriewpq/events{/privacy}", "received_events_url": "https://api.github.com/users/cheriewpq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-26T11:41:17Z", "updated_at": "2020-07-26T15:52:10Z", "closed_at": "2020-07-26T15:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was able to run shap the day before with no issues but when I tried running shap (i.e. import shap) I have this error message below. May I know how to resolve this issue? I have tried re-installing shap but it didn't work\r\n\r\n![image](https://user-images.githubusercontent.com/61908408/88478069-e5b31c80-cf77-11ea-95e6-819d7428c79d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1321", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1321/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1321/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1321/events", "html_url": "https://github.com/slundberg/shap/issues/1321", "id": 661441185, "node_id": "MDU6SXNzdWU2NjE0NDExODU=", "number": 1321, "title": "support for keras input list of vectors ", "user": {"login": "jeremy-rutman", "id": 3863744, "node_id": "MDQ6VXNlcjM4NjM3NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3863744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremy-rutman", "html_url": "https://github.com/jeremy-rutman", "followers_url": "https://api.github.com/users/jeremy-rutman/followers", "following_url": "https://api.github.com/users/jeremy-rutman/following{/other_user}", "gists_url": "https://api.github.com/users/jeremy-rutman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremy-rutman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremy-rutman/subscriptions", "organizations_url": "https://api.github.com/users/jeremy-rutman/orgs", "repos_url": "https://api.github.com/users/jeremy-rutman/repos", "events_url": "https://api.github.com/users/jeremy-rutman/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremy-rutman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T06:37:12Z", "updated_at": "2020-07-20T11:59:31Z", "closed_at": "2020-07-20T11:59:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi , first off thanks for the nice module. \r\nI have a keras/tf net that takes a set of input vectors, which I can specify as a list:\r\n ```\r\n        inputs_train = [X_train_1]+X_train_1_extras+[X_train_2]+X_train_2_extras         # extras are lists of inputs \r\n        model.fit(inputs_train, y_train)\r\n ```\r\nThe inputs are of varying dimension but there are always N such inputs, or in other words they are of shape \r\nNxd1, Nxd2, Nxd3 etc. The model runs, inputs go to where they need to, all is fine so far. \r\nNow I would like to use shap but am not clear how to send these inputs, as shap wants an np array while my inputs are a list; I tried \r\n\r\n ```\r\n     x_train = np.concatenate( inputs_train, axis=1 )\r\n     background = x_train[np.random.choice(x_train.shape[0], 100, replace=False)]\r\n     explainer = shap.DeepExplainer(model, background)\r\n ```\r\nbut this hits an error \r\n\r\n```ValueError: Cannot feed value of shape (100, 217) for Tensor 'input_179:0', which has shape '(?, 188)```\r\nwhich makes sense as my first input is of shape Nx188 and all the inputs concatenated together have shape Nx217.\r\n\r\nHow might I get around this?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1288", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1288/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1288/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1288/events", "html_url": "https://github.com/slundberg/shap/issues/1288", "id": 644627552, "node_id": "MDU6SXNzdWU2NDQ2Mjc1NTI=", "number": 1288, "title": "Densenet with shap: Warning: unrecognized nn.Module: _Transition", "user": {"login": "sahithyaravi1493", "id": 44670788, "node_id": "MDQ6VXNlcjQ0NjcwNzg4", "avatar_url": "https://avatars1.githubusercontent.com/u/44670788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sahithyaravi1493", "html_url": "https://github.com/sahithyaravi1493", "followers_url": "https://api.github.com/users/sahithyaravi1493/followers", "following_url": "https://api.github.com/users/sahithyaravi1493/following{/other_user}", "gists_url": "https://api.github.com/users/sahithyaravi1493/gists{/gist_id}", "starred_url": "https://api.github.com/users/sahithyaravi1493/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sahithyaravi1493/subscriptions", "organizations_url": "https://api.github.com/users/sahithyaravi1493/orgs", "repos_url": "https://api.github.com/users/sahithyaravi1493/repos", "events_url": "https://api.github.com/users/sahithyaravi1493/events{/privacy}", "received_events_url": "https://api.github.com/users/sahithyaravi1493/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-24T13:44:47Z", "updated_at": "2020-07-07T08:29:22Z", "closed_at": "2020-07-07T08:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use the densenet121 model from pytorch,  with DeepExaplainer shap throws two warnings:\r\nWarning: unrecognized nn.Module: _Transition\r\nWarning: unrecognized nn.Module: _DenseBlock.\r\n\r\nI understand that this does not mean that the explainer has failed and shapely values are still calculated.  \r\nBut does this warning affect the shapely value calculation?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1283", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1283/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1283/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1283/events", "html_url": "https://github.com/slundberg/shap/issues/1283", "id": 643462540, "node_id": "MDU6SXNzdWU2NDM0NjI1NDA=", "number": 1283, "title": "Why exist a difference between Random Forest and Gradient Boosting using TreeExplainer?", "user": {"login": "KaikeWesleyReis", "id": 32513366, "node_id": "MDQ6VXNlcjMyNTEzMzY2", "avatar_url": "https://avatars1.githubusercontent.com/u/32513366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaikeWesleyReis", "html_url": "https://github.com/KaikeWesleyReis", "followers_url": "https://api.github.com/users/KaikeWesleyReis/followers", "following_url": "https://api.github.com/users/KaikeWesleyReis/following{/other_user}", "gists_url": "https://api.github.com/users/KaikeWesleyReis/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaikeWesleyReis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaikeWesleyReis/subscriptions", "organizations_url": "https://api.github.com/users/KaikeWesleyReis/orgs", "repos_url": "https://api.github.com/users/KaikeWesleyReis/repos", "events_url": "https://api.github.com/users/KaikeWesleyReis/events{/privacy}", "received_events_url": "https://api.github.com/users/KaikeWesleyReis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-23T01:34:44Z", "updated_at": "2020-08-20T19:39:52Z", "closed_at": "2020-08-20T19:39:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI'm trying to use `summary_plot` from SHAP in a **binary** classification. The tutorial works well for Gradient Boosting:\r\n\r\n![image](https://user-images.githubusercontent.com/32513366/85350488-a6f0f900-b4d7-11ea-8cca-37459c133264.png)\r\n\r\nBut the **EXACTLY SAME CODE** doesn't work for Random Forest:\r\n![image](https://user-images.githubusercontent.com/32513366/85350552-cb4cd580-b4d7-11ea-97d8-a64cb3b7073c.png)\r\n\r\nThis output appears to `summary_plot` as \"multi-output\" and I really don't understand... Can someone say what is happening? It's a problem with Random Forest?\r\n\r\nA funny fact: the generated list from RandomForestClassifier is a mirror, look at both  `summary_plot`:\r\n\r\n![image](https://user-images.githubusercontent.com/32513366/85350739-50d08580-b4d8-11ea-8215-87bd5ef88f50.png)\r\n\r\nThe `[1]` is the inverse of `[0]`. Just Why? I can say that shap_values[0] is related to class 0 and shap_values[1] to class 1?\r\n\r\nBtw, I really love this module!\r\n\r\n\r\n\r\n\r\n\r\n**shap version = 0.34.0\r\nModels library = sckit-learn**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1276", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1276/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1276/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1276/events", "html_url": "https://github.com/slundberg/shap/issues/1276", "id": 640896918, "node_id": "MDU6SXNzdWU2NDA4OTY5MTg=", "number": 1276, "title": "can we use shap in feature selection?", "user": {"login": "chloe-wang", "id": 22490931, "node_id": "MDQ6VXNlcjIyNDkwOTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/22490931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chloe-wang", "html_url": "https://github.com/chloe-wang", "followers_url": "https://api.github.com/users/chloe-wang/followers", "following_url": "https://api.github.com/users/chloe-wang/following{/other_user}", "gists_url": "https://api.github.com/users/chloe-wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chloe-wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chloe-wang/subscriptions", "organizations_url": "https://api.github.com/users/chloe-wang/orgs", "repos_url": "https://api.github.com/users/chloe-wang/repos", "events_url": "https://api.github.com/users/chloe-wang/events{/privacy}", "received_events_url": "https://api.github.com/users/chloe-wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T04:27:48Z", "updated_at": "2020-06-20T04:49:40Z", "closed_at": "2020-06-20T04:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The basic idea is we choose those features with higher average shap values across all samples. Not sure whether it's solid in theory.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1269", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1269/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1269/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1269/events", "html_url": "https://github.com/slundberg/shap/issues/1269", "id": 638710337, "node_id": "MDU6SXNzdWU2Mzg3MTAzMzc=", "number": 1269, "title": "Error: \"ufunc 'isfinite' not supported for the input types\"", "user": {"login": "ori-katz100", "id": 58261511, "node_id": "MDQ6VXNlcjU4MjYxNTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/58261511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ori-katz100", "html_url": "https://github.com/ori-katz100", "followers_url": "https://api.github.com/users/ori-katz100/followers", "following_url": "https://api.github.com/users/ori-katz100/following{/other_user}", "gists_url": "https://api.github.com/users/ori-katz100/gists{/gist_id}", "starred_url": "https://api.github.com/users/ori-katz100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ori-katz100/subscriptions", "organizations_url": "https://api.github.com/users/ori-katz100/orgs", "repos_url": "https://api.github.com/users/ori-katz100/repos", "events_url": "https://api.github.com/users/ori-katz100/events{/privacy}", "received_events_url": "https://api.github.com/users/ori-katz100/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-15T09:52:45Z", "updated_at": "2020-06-19T04:07:31Z", "closed_at": "2020-06-19T04:07:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using shap.KernelExplainer, since I have custom-made models. I wrote a function that returns a float64 array of the predicted probabilities for my models. The shap.KernelExplainer works, but when I try to calculate explainer.shap_values I get the above error. \r\n\r\nWhat could be the problem? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1260", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1260/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1260/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1260/events", "html_url": "https://github.com/slundberg/shap/issues/1260", "id": 635485141, "node_id": "MDU6SXNzdWU2MzU0ODUxNDE=", "number": 1260, "title": "UnicodeDecodeError: 'utf-8' codec can't decode byte", "user": {"login": "GuidoBartoli", "id": 16103676, "node_id": "MDQ6VXNlcjE2MTAzNjc2", "avatar_url": "https://avatars3.githubusercontent.com/u/16103676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuidoBartoli", "html_url": "https://github.com/GuidoBartoli", "followers_url": "https://api.github.com/users/GuidoBartoli/followers", "following_url": "https://api.github.com/users/GuidoBartoli/following{/other_user}", "gists_url": "https://api.github.com/users/GuidoBartoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuidoBartoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuidoBartoli/subscriptions", "organizations_url": "https://api.github.com/users/GuidoBartoli/orgs", "repos_url": "https://api.github.com/users/GuidoBartoli/repos", "events_url": "https://api.github.com/users/GuidoBartoli/events{/privacy}", "received_events_url": "https://api.github.com/users/GuidoBartoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-09T14:35:11Z", "updated_at": "2020-07-29T20:26:20Z", "closed_at": "2020-07-20T10:44:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using the latest XGBoost 1.1.1 with the `scikit-learn` interface. I trained a model and saved with `joblib.dump`, then I loaded it with `joblib.load` and I wanted to use `shap` package to compute feature importance, but the line `explainer = shap.TreeExplainer(model.get_booster())` gives the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"boost.py\", line 802, in <module>\r\n    explainer = shap.TreeExplainer(model.get_booster())\r\n  File \"/home/guido/.virtualenvs/ml/lib/python3.6/site-packages/shap/explainers/tree.py\", line 121, in __init__\r\n    self.model = TreeEnsemble(model, self.data, self.data_missing, model_output)\r\n  File \"/home/guido/.virtualenvs/ml/lib/python3.6/site-packages/shap/explainers/tree.py\", line 726, in __init__\r\n    xgb_loader = XGBTreeModelLoader(self.original_model)\r\n  File \"/home/guido/.virtualenvs/ml/lib/python3.6/site-packages/shap/explainers/tree.py\", line 1326, in __init__\r\n    self.name_obj = self.read_str(self.name_obj_len)\r\n  File \"/home/guido/.virtualenvs/ml/lib/python3.6/site-packages/shap/explainers/tree.py\", line 1456, in read_str\r\n    val = self.buf[self.pos:self.pos+size].decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 341: invalid start byte\r\n```\r\n\r\nThis error is not shown with the previous `xgboost 1.0.2`, so I think it is related to some new data format employed in the latest version that `shap` does not recognize.\r\n\r\nCan you reproduce this issue?\r\nMany thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1254", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1254/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1254/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1254/events", "html_url": "https://github.com/slundberg/shap/issues/1254", "id": 631908101, "node_id": "MDU6SXNzdWU2MzE5MDgxMDE=", "number": 1254, "title": "summary_plot truncating feature names", "user": {"login": "franroma-720", "id": 66493446, "node_id": "MDQ6VXNlcjY2NDkzNDQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/66493446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franroma-720", "html_url": "https://github.com/franroma-720", "followers_url": "https://api.github.com/users/franroma-720/followers", "following_url": "https://api.github.com/users/franroma-720/following{/other_user}", "gists_url": "https://api.github.com/users/franroma-720/gists{/gist_id}", "starred_url": "https://api.github.com/users/franroma-720/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franroma-720/subscriptions", "organizations_url": "https://api.github.com/users/franroma-720/orgs", "repos_url": "https://api.github.com/users/franroma-720/repos", "events_url": "https://api.github.com/users/franroma-720/events{/privacy}", "received_events_url": "https://api.github.com/users/franroma-720/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-05T20:01:31Z", "updated_at": "2020-07-14T18:32:18Z", "closed_at": "2020-07-14T18:32:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have rather long feature names in the data set I am using. The summary_plot function is cutting off the names of the features on the y axis. Is there a way around this? I have tried several different versions of the shap package (0.29.3, 0.30.0, 0.35.0) and get the same results each time.\r\n\r\nCode and screenshot are below.\r\n\r\n```python\r\n# Feature importance by SHAP value on training data\r\nexplainer = shap.TreeExplainer(bst)\r\nshap_values = explainer.shap_values(X_train,1)\r\n\r\n# Summary plot of importance by SHAP value - higher SHAP values represent higher risk of falling\r\nshap.summary_plot(shap_values, X_train, plot_type='dot', max_display=features_list_g.shape[0])\r\n```\r\n\r\n![Screen Shot 2020-06-05 at 3 59 37 PM](https://user-images.githubusercontent.com/66493446/83917904-ade0e300-a745-11ea-83f0-d3d53312057d.png)\r\n\r\nI have used this package before to produce summary plots without this issue although I do not have a record of which shap package version I was able to do that under. See screenshot below for example:\r\n![Screen Shot 2020-06-05 at 3 59 54 PM](https://user-images.githubusercontent.com/66493446/83917933-b9cca500-a745-11ea-8b07-ad17f99dde57.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1250", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1250/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1250/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1250/events", "html_url": "https://github.com/slundberg/shap/issues/1250", "id": 630419249, "node_id": "MDU6SXNzdWU2MzA0MTkyNDk=", "number": 1250, "title": "Does explainer.shap_values preserve the original order of the dataset?", "user": {"login": "palpen", "id": 9051141, "node_id": "MDQ6VXNlcjkwNTExNDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9051141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palpen", "html_url": "https://github.com/palpen", "followers_url": "https://api.github.com/users/palpen/followers", "following_url": "https://api.github.com/users/palpen/following{/other_user}", "gists_url": "https://api.github.com/users/palpen/gists{/gist_id}", "starred_url": "https://api.github.com/users/palpen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palpen/subscriptions", "organizations_url": "https://api.github.com/users/palpen/orgs", "repos_url": "https://api.github.com/users/palpen/repos", "events_url": "https://api.github.com/users/palpen/events{/privacy}", "received_events_url": "https://api.github.com/users/palpen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T00:29:23Z", "updated_at": "2020-06-04T01:33:54Z", "closed_at": "2020-06-04T01:33:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the SHAP library to explain predictions of a credit risk model. \r\nI need to concatenate the customer IDs back to the SHAP values generated by the explainer.shap_values method (the customer ID was never used to train the model). \r\n\r\nIf I were to convert the SHAP value numpy array to a dataframe with \r\n\r\n    shap_df = pd.DataFrame(shap_values[1])\r\n    shap_df.columns = X.drop('customer_id', 1).columns\r\n\r\nis it safe to do\r\n\r\n    shap_df['customer_id'] = X['customer_id']\r\n\r\n?\r\n\r\nIn other words, does the explainer.shap_values method preserve the original order of the dataset? If not, what is the recommended approach to concatenate back the customer IDs?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1249", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1249/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1249/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1249/events", "html_url": "https://github.com/slundberg/shap/issues/1249", "id": 630312737, "node_id": "MDU6SXNzdWU2MzAzMTI3Mzc=", "number": 1249, "title": "Use np.nanmean in summary.py ", "user": {"login": "SimonMeyerLauritsen", "id": 51704568, "node_id": "MDQ6VXNlcjUxNzA0NTY4", "avatar_url": "https://avatars0.githubusercontent.com/u/51704568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonMeyerLauritsen", "html_url": "https://github.com/SimonMeyerLauritsen", "followers_url": "https://api.github.com/users/SimonMeyerLauritsen/followers", "following_url": "https://api.github.com/users/SimonMeyerLauritsen/following{/other_user}", "gists_url": "https://api.github.com/users/SimonMeyerLauritsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonMeyerLauritsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonMeyerLauritsen/subscriptions", "organizations_url": "https://api.github.com/users/SimonMeyerLauritsen/orgs", "repos_url": "https://api.github.com/users/SimonMeyerLauritsen/repos", "events_url": "https://api.github.com/users/SimonMeyerLauritsen/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonMeyerLauritsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-03T20:42:57Z", "updated_at": "2020-06-04T07:55:53Z", "closed_at": "2020-06-04T07:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Scott.\r\n\r\nI use your fantastic toolbox for medical data - with a lot of missing values. \r\n\r\nMaybe one could have the option to use `np.nanmean` instead of `np.mean` when features order and mean(|SHAP value|) (average impact on model output magnitude). \r\n\r\n`feature_order = np.argsort(np.sum(np.mean(np.abs(shap_values), axis=1), axis=0))`\r\n\r\nSuch that mean is not affected be the degree of missing.\r\n\r\nKeep up your amazing work! \r\n\r\nBest,\r\nSimon", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1245", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1245/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1245/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1245/events", "html_url": "https://github.com/slundberg/shap/issues/1245", "id": 629429721, "node_id": "MDU6SXNzdWU2Mjk0Mjk3MjE=", "number": 1245, "title": "Clarification about weight vector when sampling", "user": {"login": "larroy", "id": 928489, "node_id": "MDQ6VXNlcjkyODQ4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/928489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larroy", "html_url": "https://github.com/larroy", "followers_url": "https://api.github.com/users/larroy/followers", "following_url": "https://api.github.com/users/larroy/following{/other_user}", "gists_url": "https://api.github.com/users/larroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/larroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larroy/subscriptions", "organizations_url": "https://api.github.com/users/larroy/orgs", "repos_url": "https://api.github.com/users/larroy/repos", "events_url": "https://api.github.com/users/larroy/events{/privacy}", "received_events_url": "https://api.github.com/users/larroy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T18:42:32Z", "updated_at": "2020-06-02T19:23:45Z", "closed_at": "2020-06-02T19:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for sharing this code. When going through kernel shap I'm a bit puzzled figuring out how the weight vector works when sampling, in concrete this part:\r\n\r\nhttps://github.com/slundberg/shap/blob/master/shap/explainers/kernel.py#L307\r\n\r\nIf anybody could help clarify this part I would be grateful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1240", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1240/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1240/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1240/events", "html_url": "https://github.com/slundberg/shap/issues/1240", "id": 626597991, "node_id": "MDU6SXNzdWU2MjY1OTc5OTE=", "number": 1240, "title": "Force plot with extra huge values", "user": {"login": "lavendercmt", "id": 52583754, "node_id": "MDQ6VXNlcjUyNTgzNzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/52583754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavendercmt", "html_url": "https://github.com/lavendercmt", "followers_url": "https://api.github.com/users/lavendercmt/followers", "following_url": "https://api.github.com/users/lavendercmt/following{/other_user}", "gists_url": "https://api.github.com/users/lavendercmt/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavendercmt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavendercmt/subscriptions", "organizations_url": "https://api.github.com/users/lavendercmt/orgs", "repos_url": "https://api.github.com/users/lavendercmt/repos", "events_url": "https://api.github.com/users/lavendercmt/events{/privacy}", "received_events_url": "https://api.github.com/users/lavendercmt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-28T15:20:46Z", "updated_at": "2020-07-12T18:39:17Z", "closed_at": "2020-07-12T18:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nmay I ask the reason for this result..\r\nIt is a RandomForestClassifier problem.\r\nWhen I plot the force plot for other instances they were normal..\r\n![github_forceplot](https://user-images.githubusercontent.com/52583754/83160416-75b72000-a107-11ea-84b3-ca32cc05a1c0.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1223", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1223/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1223/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1223/events", "html_url": "https://github.com/slundberg/shap/issues/1223", "id": 623240120, "node_id": "MDU6SXNzdWU2MjMyNDAxMjA=", "number": 1223, "title": "display_features argument produced randomly placed x_ticks", "user": {"login": "Olliejp", "id": 32581608, "node_id": "MDQ6VXNlcjMyNTgxNjA4", "avatar_url": "https://avatars0.githubusercontent.com/u/32581608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olliejp", "html_url": "https://github.com/Olliejp", "followers_url": "https://api.github.com/users/Olliejp/followers", "following_url": "https://api.github.com/users/Olliejp/following{/other_user}", "gists_url": "https://api.github.com/users/Olliejp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olliejp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olliejp/subscriptions", "organizations_url": "https://api.github.com/users/Olliejp/orgs", "repos_url": "https://api.github.com/users/Olliejp/repos", "events_url": "https://api.github.com/users/Olliejp/events{/privacy}", "received_events_url": "https://api.github.com/users/Olliejp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T14:14:34Z", "updated_at": "2020-05-22T14:40:45Z", "closed_at": "2020-05-22T14:40:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Thanks for your awesome work on this. One question regarding the plotting of a dependence plot. When using the display_features argument the ticks on x and y axis become all bundled together. Every time I run the code they appear in a different position. Do you know what might be causing this? I have an example below:\r\n\r\n`shap.dependence_plot(\"Occupation\", shap_values[0], X, display_features=X_display)`\r\n\r\n<img width=\"514\" alt=\"Screenshot 2020-05-22 at 16 14 18\" src=\"https://user-images.githubusercontent.com/32581608/82676831-4d32b000-9c47-11ea-8942-7b4611633774.png\">\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1212", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1212/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1212/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1212/events", "html_url": "https://github.com/slundberg/shap/issues/1212", "id": 618438320, "node_id": "MDU6SXNzdWU2MTg0MzgzMjA=", "number": 1212, "title": "Pull requested checks fail", "user": {"login": "YotamElor", "id": 18752730, "node_id": "MDQ6VXNlcjE4NzUyNzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/18752730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YotamElor", "html_url": "https://github.com/YotamElor", "followers_url": "https://api.github.com/users/YotamElor/followers", "following_url": "https://api.github.com/users/YotamElor/following{/other_user}", "gists_url": "https://api.github.com/users/YotamElor/gists{/gist_id}", "starred_url": "https://api.github.com/users/YotamElor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YotamElor/subscriptions", "organizations_url": "https://api.github.com/users/YotamElor/orgs", "repos_url": "https://api.github.com/users/YotamElor/repos", "events_url": "https://api.github.com/users/YotamElor/events{/privacy}", "received_events_url": "https://api.github.com/users/YotamElor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T18:13:48Z", "updated_at": "2020-05-26T18:42:48Z", "closed_at": "2020-05-26T18:42:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nJust submitted a pull request and one of the checks failed. The failure has nothing to do with the changes I made. I also notice that several few other pull requests failed similarly.\r\n\r\nPlease advise,\r\nThank you,\r\nYotam", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1207", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1207/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1207/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1207/events", "html_url": "https://github.com/slundberg/shap/issues/1207", "id": 616360353, "node_id": "MDU6SXNzdWU2MTYzNjAzNTM=", "number": 1207, "title": "dependence_plot() on categorical(or object) feature doesn't work", "user": {"login": "rightx2", "id": 10606994, "node_id": "MDQ6VXNlcjEwNjA2OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/10606994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rightx2", "html_url": "https://github.com/rightx2", "followers_url": "https://api.github.com/users/rightx2/followers", "following_url": "https://api.github.com/users/rightx2/following{/other_user}", "gists_url": "https://api.github.com/users/rightx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rightx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rightx2/subscriptions", "organizations_url": "https://api.github.com/users/rightx2/orgs", "repos_url": "https://api.github.com/users/rightx2/repos", "events_url": "https://api.github.com/users/rightx2/events{/privacy}", "received_events_url": "https://api.github.com/users/rightx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T05:01:17Z", "updated_at": "2020-05-12T05:11:46Z", "closed_at": "2020-05-12T05:11:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/slundberg/shap/blob/master/notebooks/plots/dependence_plot.ipynb\r\n\r\nI followed this example but `shap.dependence_plot(\"Relationship\", shap_values, X_cat)` part doesn't work:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-16-00670d358a14> in <module>\r\n      1 # You can use string-valued category features\r\n----> 2 shap.dependence_plot(\"Relationship\", shap_values, X_cat)\r\n\r\n~/opt/miniconda3/lib/python3.7/site-packages/shap/plots/dependence.py in dependence_plot(ind, shap_values, features, feature_names, display_features, interaction_index, color, axis_color, cmap, dot_size, x_jitter, alpha, title, xmin, xmax, ax, show)\r\n    106     if not hasattr(ind, \"__len__\"):\r\n    107         if interaction_index == \"auto\":\r\n--> 108             interaction_index = approximate_interactions(ind, shap_values, features)[0]\r\n    109         interaction_index = convert_name(interaction_index, shap_values, feature_names)\r\n    110     categorical_interaction = False\r\n\r\n~/opt/miniconda3/lib/python3.7/site-packages/shap/common.py in approximate_interactions(index, shap_values, X, feature_names)\r\n    305     interactions = []\r\n    306     for i in range(X.shape[1]):\r\n--> 307         val_other = X[inds, i][srt].astype(np.float)\r\n    308         v = 0.0\r\n    309         if not (i == index or np.sum(np.abs(val_other)) < 1e-8):\r\n\r\nValueError: could not convert string to float: 'Husband'\r\n```\r\n\r\n## Environment\r\n- Python 3.7.3\r\n- shap: 0.35.0\r\n- xgboost: 0.90. 1.0.2\r\n\r\n\r\nDoes API has been changed? Or Did I miss something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1193", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1193/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1193/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1193/events", "html_url": "https://github.com/slundberg/shap/issues/1193", "id": 610253814, "node_id": "MDU6SXNzdWU2MTAyNTM4MTQ=", "number": 1193, "title": "SHAP DeepExplainer with TensorFlow 2.1.0 LSTM various errors", "user": {"login": "MathiesW", "id": 64591567, "node_id": "MDQ6VXNlcjY0NTkxNTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/64591567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MathiesW", "html_url": "https://github.com/MathiesW", "followers_url": "https://api.github.com/users/MathiesW/followers", "following_url": "https://api.github.com/users/MathiesW/following{/other_user}", "gists_url": "https://api.github.com/users/MathiesW/gists{/gist_id}", "starred_url": "https://api.github.com/users/MathiesW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MathiesW/subscriptions", "organizations_url": "https://api.github.com/users/MathiesW/orgs", "repos_url": "https://api.github.com/users/MathiesW/repos", "events_url": "https://api.github.com/users/MathiesW/events{/privacy}", "received_events_url": "https://api.github.com/users/MathiesW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T17:22:21Z", "updated_at": "2020-06-02T13:05:52Z", "closed_at": "2020-06-02T13:05:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using SHAP 0.35.0 with TensorFlow 2.1.0 and an LSTM model \"model\". Depending on how I call the DeepExplainer, I get different errors:\r\n\r\n1. calling shap.DeepExplainer(model, x_train) results in **LookupError: gradient registry has no entry for: shap_TensorListStack** and **err: 'TFDeepExplainer' object has no attribute 'between_tensors**\r\n2. calling shap.DeepExplainer((model.layers[0].input, model.layers[-1].output), x_train) results in **NameError: name 'Model' is not defined**. This error refers to the line self.model = Model(model[0], model[1]) in deep_tf.py.\r\n\r\nAny suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1191", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1191/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1191/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1191/events", "html_url": "https://github.com/slundberg/shap/issues/1191", "id": 609941899, "node_id": "MDU6SXNzdWU2MDk5NDE4OTk=", "number": 1191, "title": "LSTM features would be the words and the context those words appear in. Does SHAP would evaluate just the position of the word to explain the model ( i.e column values) or does it use the exact word appearance ?", "user": {"login": "Shivayv", "id": 8288263, "node_id": "MDQ6VXNlcjgyODgyNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8288263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shivayv", "html_url": "https://github.com/Shivayv", "followers_url": "https://api.github.com/users/Shivayv/followers", "following_url": "https://api.github.com/users/Shivayv/following{/other_user}", "gists_url": "https://api.github.com/users/Shivayv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shivayv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shivayv/subscriptions", "organizations_url": "https://api.github.com/users/Shivayv/orgs", "repos_url": "https://api.github.com/users/Shivayv/repos", "events_url": "https://api.github.com/users/Shivayv/events{/privacy}", "received_events_url": "https://api.github.com/users/Shivayv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T12:51:35Z", "updated_at": "2020-06-05T14:26:06Z", "closed_at": "2020-06-05T14:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI understand that the LSTM model would use position and also the context of the word (feature) to assign the weights in the model. Does SHAP consider the position alone ? as the matrix form would only have positional values. \r\n\r\nIt is more of a theoretical question than the practical one, can you please help me explain this better ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1186", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1186/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1186/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1186/events", "html_url": "https://github.com/slundberg/shap/issues/1186", "id": 608428621, "node_id": "MDU6SXNzdWU2MDg0Mjg2MjE=", "number": 1186, "title": "\"NameError: name 'Model' is not defined\" when running example", "user": {"login": "samupino", "id": 37086974, "node_id": "MDQ6VXNlcjM3MDg2OTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/37086974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samupino", "html_url": "https://github.com/samupino", "followers_url": "https://api.github.com/users/samupino/followers", "following_url": "https://api.github.com/users/samupino/following{/other_user}", "gists_url": "https://api.github.com/users/samupino/gists{/gist_id}", "starred_url": "https://api.github.com/users/samupino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samupino/subscriptions", "organizations_url": "https://api.github.com/users/samupino/orgs", "repos_url": "https://api.github.com/users/samupino/repos", "events_url": "https://api.github.com/users/samupino/events{/privacy}", "received_events_url": "https://api.github.com/users/samupino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-28T15:54:59Z", "updated_at": "2020-08-21T04:47:43Z", "closed_at": "2020-06-05T09:21:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run the [MNIST example notebook](https://slundberg.github.io/shap/notebooks/deep_explainer/Front%20Page%20DeepExplainer%20MNIST%20Example.html) on a Kaggle notebook.\r\n\r\nI'm importing keras through the tensorflow submodule, so I changed the initial imports by adding `tensorflow.` at the beginning:\r\n```\r\nimport tensorflow.keras as keras\r\nfrom tensorflow.keras.datasets import mnist\r\nfrom tensorflow.keras.models import Sequential\r\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\r\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\r\nfrom tensorflow.keras import backend as K\r\n```\r\n\r\nI would like to explicitly pass the layers of the network to explain, but when I run the line\r\n```\r\ne = shap.DeepExplainer((model.layers[0].input, model.layers[-1].output), background)\r\n```\r\n\r\nI get the following error\r\n```\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-6-4ea374755383> in <module>\r\n     10 #e = shap.DeepExplainer(model, background)\r\n     11 # ...or pass tensors directly\r\n---> 12 e = shap.DeepExplainer((model.layers[0].input, model.layers[-1].output), background)\r\n\r\n/opt/conda/lib/python3.6/site-packages/shap/explainers/deep/__init__.py in __init__(self, model, data, session, learning_phase_flags)\r\n     78 \r\n     79         if framework == 'tensorflow':\r\n---> 80             self.explainer = TFDeepExplainer(model, data, session, learning_phase_flags)\r\n     81         elif framework == 'pytorch':\r\n     82             self.explainer = PyTorchDeepExplainer(model, data)\r\n\r\n/opt/conda/lib/python3.6/site-packages/shap/explainers/deep/deep_tf.py in __init__(self, model, data, session, learning_phase_flags)\r\n    105             if type(model) is tuple or type(model) is list:\r\n    106                 assert len(model) == 2, \"When a tuple is passed it must be of the form (inputs, outputs)\"\r\n--> 107                 self.model = Model(model[0], model[1])\r\n    108             else:\r\n    109                 self.model = model\r\n\r\nNameError: name 'Model' is not defined\r\n```\r\n\r\nMy libraries versions are:\r\n```\r\n> print(tensorflow.__version__)\r\n2.1.0\r\n> print(tensorflow.keras.__version__)\r\n2.2.4-tf\r\n> print(shap.__version__)\r\n0.35.0\r\n```\r\n\r\nI am probably missing something obvious, sorry but I am new to Python. I would like to understand if it is a version issue or something else and how to solve it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1174", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1174/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1174/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1174/events", "html_url": "https://github.com/slundberg/shap/issues/1174", "id": 605802303, "node_id": "MDU6SXNzdWU2MDU4MDIzMDM=", "number": 1174, "title": "setting an array element with a sequence when running force_plot", "user": {"login": "viirya", "id": 68855, "node_id": "MDQ6VXNlcjY4ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/68855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viirya", "html_url": "https://github.com/viirya", "followers_url": "https://api.github.com/users/viirya/followers", "following_url": "https://api.github.com/users/viirya/following{/other_user}", "gists_url": "https://api.github.com/users/viirya/gists{/gist_id}", "starred_url": "https://api.github.com/users/viirya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viirya/subscriptions", "organizations_url": "https://api.github.com/users/viirya/orgs", "repos_url": "https://api.github.com/users/viirya/repos", "events_url": "https://api.github.com/users/viirya/events{/privacy}", "received_events_url": "https://api.github.com/users/viirya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-23T19:25:53Z", "updated_at": "2020-08-16T06:44:39Z", "closed_at": "2020-08-16T06:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to apply shap to some training output from XGBoost.\r\n\r\nCurrently even I do simplest test like:\r\n\r\n```\r\nshap.force_plot(mean, shap_values = np.array([1,2,3]), matplotlib=True)\r\n```\r\n\r\nIt throws some error like:\r\n```\r\nsetting an array element with a sequence\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.4/dist-packages/shap/plots/force.py\", line 104, in force_plot\r\n    return visualize(e, plot_cmap, matplotlib, figsize=figsize, show=show, text_rotation=text_rotation)\r\n  File \"/usr/local/lib/python3.4/dist-packages/shap/plots/force.py\", line 241, in visualize\r\n    return AdditiveForceVisualizer(e, plot_cmap=plot_cmap).matplotlib(figsize=figsize, show=show, text_rotation=text_rotation)\r\n  File \"/usr/local/lib/python3.4/dist-packages/shap/plots/force.py\", line 337, in matplotlib\r\n    fig = draw_additive_plot(self.data, figsize=figsize, show=show, text_rotation=text_rotation)\r\n  File \"/usr/local/lib/python3.4/dist-packages/shap/plots/force_matplotlib.py\", line 340, in draw_additive_plot\r\n    neg_features, total_neg, pos_features, total_pos = format_data(data)\r\n  File \"/usr/local/lib/python3.4/dist-packages/shap/plots/force_matplotlib.py\", line 241, in format_data\r\n    i[0] = convert_func(pos_val)\r\nValueError: setting an array element with a sequence\r\n```\r\n\r\nAny idea what is wrong? Thanks for help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1170", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1170/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1170/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1170/events", "html_url": "https://github.com/slundberg/shap/issues/1170", "id": 605191955, "node_id": "MDU6SXNzdWU2MDUxOTE5NTU=", "number": 1170, "title": "SOS. Please Help. Shap DeepExplainer is taking extremely long time with no results", "user": {"login": "niloofardadras", "id": 15331846, "node_id": "MDQ6VXNlcjE1MzMxODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/15331846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niloofardadras", "html_url": "https://github.com/niloofardadras", "followers_url": "https://api.github.com/users/niloofardadras/followers", "following_url": "https://api.github.com/users/niloofardadras/following{/other_user}", "gists_url": "https://api.github.com/users/niloofardadras/gists{/gist_id}", "starred_url": "https://api.github.com/users/niloofardadras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niloofardadras/subscriptions", "organizations_url": "https://api.github.com/users/niloofardadras/orgs", "repos_url": "https://api.github.com/users/niloofardadras/repos", "events_url": "https://api.github.com/users/niloofardadras/events{/privacy}", "received_events_url": "https://api.github.com/users/niloofardadras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T02:27:28Z", "updated_at": "2020-04-30T19:16:35Z", "closed_at": "2020-04-30T19:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nhave tensor model which i trained with estimator API. I have 3 hidden layers and hidden units \"500/250/100\". my input is a 100 row dataframe which i have created list of column values from it to create x_train_list.  also x_test is 1 row dataframe converted to list again.\r\nI am trying to calculate Shap values with following part of code.\r\n\r\n               sess=tf.Session()\r\n                saver=tf.train.import_meta_graph('model.ckpt-3000.meta')\r\n                saver.restore(sess,tf.train.latest_checkpoint('1/'))\r\n\r\n                graph = tf.get_default_graph()\r\n                op=sess.graph.get_operations()\r\n                input=graph.get_tensor_by_name('enqueue_input/Placeholder:0')\r\n                output=graph.get_tensor_by_name('ArgMax:0')\r\n  \r\n                explainer = shap.DeepExplainer(model=(input,output),data=x_train_list,session=sess)\r\n                print(\"explainer done\")\r\n                shap_values = explainer.shap_values(x_test_list)\r\n                sess.close()\r\n\r\nso the running code does not even print \"explainer done\" and it keeps running without giving any print or results.\r\n\r\nalso I gave a shot at method used https://github.com/slundberg/shap/issues/280  (tensorflow estimator support #280 ) but still the same issue is created.\r\n\r\nit has been around 6 hours now and no results yet!!! is this due to my model size? could you please help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1163", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1163/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1163/events", "html_url": "https://github.com/slundberg/shap/issues/1163", "id": 602153499, "node_id": "MDU6SXNzdWU2MDIxNTM0OTk=", "number": 1163, "title": "Regression Coefficients Analog", "user": {"login": "ThinkHolger", "id": 59929251, "node_id": "MDQ6VXNlcjU5OTI5MjUx", "avatar_url": "https://avatars0.githubusercontent.com/u/59929251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkHolger", "html_url": "https://github.com/ThinkHolger", "followers_url": "https://api.github.com/users/ThinkHolger/followers", "following_url": "https://api.github.com/users/ThinkHolger/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkHolger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkHolger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkHolger/subscriptions", "organizations_url": "https://api.github.com/users/ThinkHolger/orgs", "repos_url": "https://api.github.com/users/ThinkHolger/repos", "events_url": "https://api.github.com/users/ThinkHolger/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkHolger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T18:21:44Z", "updated_at": "2020-07-10T11:07:13Z", "closed_at": "2020-07-10T11:07:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use XGBoost for a regression problem, but I would need the individual component values as well.\r\n\r\nIn linear regression you have coefficient vectors that you can just simply multiply with the observations xi to calculate the individual yi and the sum(yi) yields the predicted value. Is there an equivalent to the SHAP values or is this completely different? \r\n\r\nThanks and congrats on your research!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1160", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1160/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1160/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1160/events", "html_url": "https://github.com/slundberg/shap/issues/1160", "id": 601234136, "node_id": "MDU6SXNzdWU2MDEyMzQxMzY=", "number": 1160, "title": "tensorflow.estimator is not currently a supported model type!/ .MetaGraphDef'> is not currently a supported model type!", "user": {"login": "niloofardadras", "id": 15331846, "node_id": "MDQ6VXNlcjE1MzMxODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/15331846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niloofardadras", "html_url": "https://github.com/niloofardadras", "followers_url": "https://api.github.com/users/niloofardadras/followers", "following_url": "https://api.github.com/users/niloofardadras/following{/other_user}", "gists_url": "https://api.github.com/users/niloofardadras/gists{/gist_id}", "starred_url": "https://api.github.com/users/niloofardadras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niloofardadras/subscriptions", "organizations_url": "https://api.github.com/users/niloofardadras/orgs", "repos_url": "https://api.github.com/users/niloofardadras/repos", "events_url": "https://api.github.com/users/niloofardadras/events{/privacy}", "received_events_url": "https://api.github.com/users/niloofardadras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-16T16:37:53Z", "updated_at": "2020-04-23T02:05:36Z", "closed_at": "2020-04-23T02:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nAfter Trying to solve this issue for days i have decided to post. \r\nI am using tensorflow estimator API to train my model. However I am getting multiple issues trying to use shap to explain feature importance of my model. I am using anaconda environment python 3.6\r\n\r\n1. my inputs are dataframes\r\n2. I have a model function which i train the model with tf.estimator.EstimatorSpec\r\n3 my nn is created as bellow\r\nnn = tf.estimator.Estimator(\r\n                model_fn=model_fn,\r\n                params=model_params,\r\n                config=trainingConfig\r\n        )\r\n4. nn.train is deployed.\r\n\r\n5.to get shap values:\r\n            e = shap.DeepExplainer(nn,x_train.loc[1:100,:])\r\n            shap_values = e.shap_values(x_test.loc[10,:])\r\n\r\n\r\nhere is the error I am getting \r\n\"ERROR - Read sys.argv: Traceback (most recent call last):\r\n  File \"C:/Users/nhossein/PycharmProjects/ShapExplain/run_experiments.py\", line 217, in main\r\n    df=train_model_with_validation_and_confidence.train(parameters, Dataa, my_labb,count)\r\n  File \"C:\\Users\\nhossein\\PycharmProjects\\ShapExplain\\train_model_with_validation_and_confidence.py\", line 437, in train\r\n    e = shap.DeepExplainer(nn,x_train.loc[1:100,:])\r\n  File \"C:\\Anaconda3\\envs\\AzureEvn\\lib\\site-packages\\shap\\explainers\\deep\\__init__.py\", line 80, in __init__\r\n    self.explainer = TFDeepExplainer(model, data, session, learning_phase_flags)\r\n  File \"C:\\Anaconda3\\envs\\AzureEvn\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 92, in __init__\r\n    assert False, str(type(model)) + \" is not currently a supported model type!\"\r\nAssertionError: <class 'tensorflow_estimator.python.estimator.estimator.Estimator'> is not currently a supported model type!\"\r\n\r\nalso I have tries using the created model meta and index files and it gives error that estimator graph is not currently supported", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1155", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1155/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1155/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1155/events", "html_url": "https://github.com/slundberg/shap/issues/1155", "id": 600297873, "node_id": "MDU6SXNzdWU2MDAyOTc4NzM=", "number": 1155, "title": "Force Plots are Coupled to IPython", "user": {"login": "timothyrenner", "id": 6687064, "node_id": "MDQ6VXNlcjY2ODcwNjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6687064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timothyrenner", "html_url": "https://github.com/timothyrenner", "followers_url": "https://api.github.com/users/timothyrenner/followers", "following_url": "https://api.github.com/users/timothyrenner/following{/other_user}", "gists_url": "https://api.github.com/users/timothyrenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/timothyrenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timothyrenner/subscriptions", "organizations_url": "https://api.github.com/users/timothyrenner/orgs", "repos_url": "https://api.github.com/users/timothyrenner/repos", "events_url": "https://api.github.com/users/timothyrenner/events{/privacy}", "received_events_url": "https://api.github.com/users/timothyrenner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-15T13:28:03Z", "updated_at": "2020-04-24T20:32:57Z", "closed_at": "2020-04-24T20:32:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Force plots are designed to run in an interactive environment. However this prevents non-interactive use-cases like jinja template based reports, for example. I'd like to be able to use these plots in an end-to-end non-interactive pipeline with a SHAP report produced as an artifact. This requires the force plots to be decoupled from the Jupyter / IPython environment.\r\n\r\nI've submitted a PR (https://github.com/slundberg/shap/pull/1154) with one implementation of this decoupling, but obviously if there's a better way to solve this I'd be happy to help with that as well if you need it. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1149", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1149/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1149/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1149/events", "html_url": "https://github.com/slundberg/shap/issues/1149", "id": 598485224, "node_id": "MDU6SXNzdWU1OTg0ODUyMjQ=", "number": 1149, "title": "pip install shap- error (on jupyter notebook ( on ubuntu))", "user": {"login": "kaivalya-sinha", "id": 42041874, "node_id": "MDQ6VXNlcjQyMDQxODc0", "avatar_url": "https://avatars3.githubusercontent.com/u/42041874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaivalya-sinha", "html_url": "https://github.com/kaivalya-sinha", "followers_url": "https://api.github.com/users/kaivalya-sinha/followers", "following_url": "https://api.github.com/users/kaivalya-sinha/following{/other_user}", "gists_url": "https://api.github.com/users/kaivalya-sinha/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaivalya-sinha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaivalya-sinha/subscriptions", "organizations_url": "https://api.github.com/users/kaivalya-sinha/orgs", "repos_url": "https://api.github.com/users/kaivalya-sinha/repos", "events_url": "https://api.github.com/users/kaivalya-sinha/events{/privacy}", "received_events_url": "https://api.github.com/users/kaivalya-sinha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-12T13:30:36Z", "updated_at": "2020-04-19T15:24:59Z", "closed_at": "2020-04-19T15:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n@slundberg ,\r\nwhile pip install shap is working fine on ubuntu terminal, but while on jupyter notebook it showing an error saying - ' Running setup.py install for shap ... error ' , ' error: command 'gcc' failed with exit status 1 '. \r\n\r\nI tried using conda install -c conda-forge shap but I am unable to run it on jupyter. I tried doing pip install conda, but it shows the same kind of error as for shap. \r\n\r\nPlease help, I tried searching for a solution, but couldn't find one. \r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1145", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1145/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1145/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1145/events", "html_url": "https://github.com/slundberg/shap/issues/1145", "id": 596667409, "node_id": "MDU6SXNzdWU1OTY2Njc0MDk=", "number": 1145, "title": "Force_plot function with link=logit displays incorrect results for feature importance", "user": {"login": "ehuijzer", "id": 23448081, "node_id": "MDQ6VXNlcjIzNDQ4MDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/23448081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuijzer", "html_url": "https://github.com/ehuijzer", "followers_url": "https://api.github.com/users/ehuijzer/followers", "following_url": "https://api.github.com/users/ehuijzer/following{/other_user}", "gists_url": "https://api.github.com/users/ehuijzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuijzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuijzer/subscriptions", "organizations_url": "https://api.github.com/users/ehuijzer/orgs", "repos_url": "https://api.github.com/users/ehuijzer/repos", "events_url": "https://api.github.com/users/ehuijzer/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuijzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T15:30:53Z", "updated_at": "2020-04-23T15:59:43Z", "closed_at": "2020-04-23T15:59:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description**\r\nForce_plot does not display correct feature importance in case of link=logit\r\n- identical logit shap values result in different importance\r\n- base value + feature importance effects <> output value\r\n\r\n**Steps/Code to Reproduce**\r\n```\r\nimport shap\r\nimport numpy as np\r\nshap.force_plot(base_value=-3,\r\n                shap_values=np.array([1,1,-1]),\r\n                feature_names=['PosFeat1', 'PosFeat2', 'NegFeat1'],\r\n                matplotlib=True,\r\n                link=\"logit\")\r\n```\r\n![afbeelding](https://user-images.githubusercontent.com/23448081/78800094-562f3100-79bb-11ea-95cc-f69a426bc4da.png)\r\n\r\n**Expected Results**\r\nPosFeat1, PosFeat2 and NegFeat1 all have exactly the same shap value (either positive or negative).\r\nEach feature is represented by same size effect in plot.\r\nDifference in length of negative and positive effects should equal difference base value vs output value\r\n\r\n**Actual Results**\r\nPosFeat2 effect is smaller than PosFeat1 effect.\r\nSum PosFeat effect - NegFeat1 effect < Output value - Base value\r\n\r\n**Analysis**\r\nLogit function is not linear, therefore the calculation of the effect is dependent of the order (and base value) of the calculation.\r\n\r\n**Proposed solution**\r\n1. Approximate the logistic function by a linear function\r\n2. Calculate the slope: (proba output value - proba base value) / sum shap values\r\n(Special case sum=0; use derivative of logistic: exp(shap) / (exp(shap) + 1)^2\r\n3. Multiply all shap values by the slope\r\n\r\nThis way identical shap values result in identical probability effects.\r\nBase value and feature effects sum up to the output value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1144", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1144/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1144/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1144/events", "html_url": "https://github.com/slundberg/shap/issues/1144", "id": 596145736, "node_id": "MDU6SXNzdWU1OTYxNDU3MzY=", "number": 1144, "title": "SHAP version in Anaconda is not updated for the last release", "user": {"login": "tjiagoM", "id": 7031523, "node_id": "MDQ6VXNlcjcwMzE1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7031523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjiagoM", "html_url": "https://github.com/tjiagoM", "followers_url": "https://api.github.com/users/tjiagoM/followers", "following_url": "https://api.github.com/users/tjiagoM/following{/other_user}", "gists_url": "https://api.github.com/users/tjiagoM/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjiagoM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjiagoM/subscriptions", "organizations_url": "https://api.github.com/users/tjiagoM/orgs", "repos_url": "https://api.github.com/users/tjiagoM/repos", "events_url": "https://api.github.com/users/tjiagoM/events{/privacy}", "received_events_url": "https://api.github.com/users/tjiagoM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-07T20:54:21Z", "updated_at": "2020-04-07T21:32:22Z", "closed_at": "2020-04-07T21:32:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, the title is self explanatory, but the version available in anaconda: https://anaconda.org/conda-forge/shap\r\n\r\nIs not the last release, yet. Could you please update it? :) Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1142", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1142/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1142/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1142/events", "html_url": "https://github.com/slundberg/shap/issues/1142", "id": 596060312, "node_id": "MDU6SXNzdWU1OTYwNjAzMTI=", "number": 1142, "title": "possible bug in unwound_path_sum", "user": {"login": "haifengl", "id": 5502052, "node_id": "MDQ6VXNlcjU1MDIwNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5502052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haifengl", "html_url": "https://github.com/haifengl", "followers_url": "https://api.github.com/users/haifengl/followers", "following_url": "https://api.github.com/users/haifengl/following{/other_user}", "gists_url": "https://api.github.com/users/haifengl/gists{/gist_id}", "starred_url": "https://api.github.com/users/haifengl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haifengl/subscriptions", "organizations_url": "https://api.github.com/users/haifengl/orgs", "repos_url": "https://api.github.com/users/haifengl/repos", "events_url": "https://api.github.com/users/haifengl/events{/privacy}", "received_events_url": "https://api.github.com/users/haifengl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-07T18:17:54Z", "updated_at": "2020-04-07T19:00:49Z", "closed_at": "2020-04-07T19:00:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "If one_fraction != 0, total won't be updated and thus return 0. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1132", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1132/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1132/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1132/events", "html_url": "https://github.com/slundberg/shap/issues/1132", "id": 592554546, "node_id": "MDU6SXNzdWU1OTI1NTQ1NDY=", "number": 1132, "title": "Shap dependency plot stacks observations on the y axis", "user": {"login": "AlexPapas", "id": 29041538, "node_id": "MDQ6VXNlcjI5MDQxNTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/29041538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexPapas", "html_url": "https://github.com/AlexPapas", "followers_url": "https://api.github.com/users/AlexPapas/followers", "following_url": "https://api.github.com/users/AlexPapas/following{/other_user}", "gists_url": "https://api.github.com/users/AlexPapas/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexPapas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexPapas/subscriptions", "organizations_url": "https://api.github.com/users/AlexPapas/orgs", "repos_url": "https://api.github.com/users/AlexPapas/repos", "events_url": "https://api.github.com/users/AlexPapas/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexPapas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-02T11:20:35Z", "updated_at": "2020-04-02T11:32:32Z", "closed_at": "2020-04-02T11:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1130", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1130/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1130/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1130/events", "html_url": "https://github.com/slundberg/shap/issues/1130", "id": 592439780, "node_id": "MDU6SXNzdWU1OTI0Mzk3ODA=", "number": 1130, "title": "Difference Between SHAP in XGBoost and shap.TreeExplainer?", "user": {"login": "sandrawing", "id": 50237270, "node_id": "MDQ6VXNlcjUwMjM3Mjcw", "avatar_url": "https://avatars0.githubusercontent.com/u/50237270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrawing", "html_url": "https://github.com/sandrawing", "followers_url": "https://api.github.com/users/sandrawing/followers", "following_url": "https://api.github.com/users/sandrawing/following{/other_user}", "gists_url": "https://api.github.com/users/sandrawing/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrawing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrawing/subscriptions", "organizations_url": "https://api.github.com/users/sandrawing/orgs", "repos_url": "https://api.github.com/users/sandrawing/repos", "events_url": "https://api.github.com/users/sandrawing/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrawing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T08:10:06Z", "updated_at": "2020-04-02T12:54:32Z", "closed_at": "2020-04-02T12:23:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for the wonderful package! I noticed that using pred_contribs=True on XGBoost predict function, we can get also get the SHAP values. So are the values from XGBoost the same as those from shap.TreeExplainer in shap package? Do they have the same meaning? What is the difference between SHAP values in XGBoost and shap.TreeExplainer?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1125", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1125/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1125/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1125/events", "html_url": "https://github.com/slundberg/shap/issues/1125", "id": 591251601, "node_id": "MDU6SXNzdWU1OTEyNTE2MDE=", "number": 1125, "title": "how much memory does it take for the NHANES-I dataset with tree shap calculation for thousands of sub-trees xgboost model?", "user": {"login": "rayeaster", "id": 1487283, "node_id": "MDQ6VXNlcjE0ODcyODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1487283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayeaster", "html_url": "https://github.com/rayeaster", "followers_url": "https://api.github.com/users/rayeaster/followers", "following_url": "https://api.github.com/users/rayeaster/following{/other_user}", "gists_url": "https://api.github.com/users/rayeaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayeaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayeaster/subscriptions", "organizations_url": "https://api.github.com/users/rayeaster/orgs", "repos_url": "https://api.github.com/users/rayeaster/repos", "events_url": "https://api.github.com/users/rayeaster/events{/privacy}", "received_events_url": "https://api.github.com/users/rayeaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T16:35:34Z", "updated_at": "2020-04-03T09:18:19Z", "closed_at": "2020-04-03T09:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "@slundberg \r\n\r\nin the paper [\"Consistent Individualized Featue Attribution For Tree Ensembles\"](https://arxiv.org/pdf/1802.03888.pdf), it mentioned NHANES-I dataset as following quote:\r\n\r\n> To explore these visualizations we trained an XGBoost Cox proportional hazards model on survival data from the classic NHANES\r\n> I dataset [18] using the NHANES I Epidemiologic Followup Study\r\n> [7]. After selection for the presence of basic blood test data we\r\n> obtained data for 9,932 individuals followed for up to 20 years after\r\n> baseline data collection for mortality. Based on a 80/20 train/test\r\n> split we chose to use 7,000 trees of maximum depth 3, \u03b7 = 0.001,\r\n> and 50% instance sub-sampling. We then used these parameters\r\n> and trained on all individuals to generate the final model.\r\n\r\njust curious how much memory will tree shap algorithm take to complete the `summary_plot` calculation for entire dataset?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1122", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1122/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1122/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1122/events", "html_url": "https://github.com/slundberg/shap/issues/1122", "id": 589430614, "node_id": "MDU6SXNzdWU1ODk0MzA2MTQ=", "number": 1122, "title": "Shap LSTM (Keras, TensorFlow) ValueError: shape mismatch: objects cannot be broadcast to a single shape", "user": {"login": "stringcode86", "id": 4541819, "node_id": "MDQ6VXNlcjQ1NDE4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4541819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringcode86", "html_url": "https://github.com/stringcode86", "followers_url": "https://api.github.com/users/stringcode86/followers", "following_url": "https://api.github.com/users/stringcode86/following{/other_user}", "gists_url": "https://api.github.com/users/stringcode86/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringcode86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringcode86/subscriptions", "organizations_url": "https://api.github.com/users/stringcode86/orgs", "repos_url": "https://api.github.com/users/stringcode86/repos", "events_url": "https://api.github.com/users/stringcode86/events{/privacy}", "received_events_url": "https://api.github.com/users/stringcode86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T21:50:36Z", "updated_at": "2020-03-30T15:43:10Z", "closed_at": "2020-03-30T15:43:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im trying to plot summary from simple LSTM model. Im getting `ValueError: shape mismatch: objects cannot be broadcast to a single shape` when calling shap.summary_plot. [Colab that reproduces the issue](https://colab.research.google.com/drive/1TnT6YVfp-VHyl3tf_C3_53a5XRYrhzK8)\r\n\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.models import Sequential\r\nfrom tensorflow.keras.layers import Dense, Dropout, BatchNormalization, LSTM\r\nimport shap\r\n\r\n# Create random training values.\r\n#\r\n# train_x is [\r\n#   [\r\n#        [0.3, 0.54 ... 0.8],\r\n#        [0.4, 0.6 ... 0.55],\r\n#        ...\r\n#   ],\r\n#   [\r\n#        [0.3, 0.54 ... 0.8],\r\n#        [0.4, 0.6 ... 0.55],\r\n#        ...\r\n#   ],\r\n#   ...\r\n# ]\r\n#\r\n# train_y is corresponding classification of train_x sequences, always 0 or 1\r\n# [0, 1, 0, 1, 0, ... 0]\r\n\r\nSAMPLES_CNT = 1000\r\n\r\ntrain_x = np.random.rand(SAMPLES_CNT,5,4)\r\ntrain_y = np.vectorize(lambda x: int(round(x)))(np.random.rand(SAMPLES_CNT))\r\n\r\nval_x = np.random.rand(int(SAMPLES_CNT * 0.1),5,4)\r\nval_y = np.vectorize(lambda x: int(round(x)))(np.random.rand(int(SAMPLES_CNT * 0.1)))\r\n\r\n# Train model\r\n\r\nmodel = Sequential()\r\nmodel.add(LSTM(32,input_shape=train_x.shape[1:], return_sequences=False, stateful=False))\r\nmodel.add(Dense(1, activation='sigmoid'))\r\n\r\nmodel.compile(optimizer=tf.keras.optimizers.Adam(lr=0.001, decay=1e-6),\r\n              loss='binary_crossentropy',metrics=['accuracy'])\r\n\r\nfit = model.fit(train_x, train_y, batch_size=64, epochs=2, \r\n                validation_data=(val_x, val_y), shuffle=False)\r\n\r\nexplainer = shap.DeepExplainer(model, train_x[:10])\r\nshap_vals = explainer.shap_values(val_x[:10])\r\nshap.summary_plot(shap_vals, val_x[:10], plot_type=\"bar\")\r\n```\r\n\r\ncrashes with stack trace\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n\r\n<ipython-input-78-906a7898852e> in <module>\r\n----> 1 shap.summary_plot(shap_vals, val_x[:10], feature_names=feature_names, plot_type=\"bar\")\r\n      2 \r\n\r\n/usr/local/lib/python3.7/site-packages/shap/plots/summary.py in summary_plot(shap_values, features, feature_names, max_display, plot_type, color, axis_color, title, alpha, show, sort, color_bar, plot_size, layered_violin_max_num_bins, class_names, class_inds, color_bar_label, auto_size_plot)\r\n    442             pl.barh(\r\n    443                 y_pos, global_shap_values[feature_inds], 0.7, left=left_pos, align='center',\r\n--> 444                 color=color(i), label=class_names[ind]\r\n    445             )\r\n    446             left_pos += global_shap_values[feature_inds]\r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/pyplot.py in barh(y, width, height, left, align, **kwargs)\r\n   2421 def barh(y, width, height=0.8, left=None, *, align='center', **kwargs):\r\n   2422     return gca().barh(\r\n-> 2423         y, width, height=height, left=left, align=align, **kwargs)\r\n   2424 \r\n   2425 \r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/axes/_axes.py in barh(self, y, width, height, left, align, **kwargs)\r\n   2544         kwargs.setdefault('orientation', 'horizontal')\r\n   2545         patches = self.bar(x=left, height=height, width=width, bottom=y,\r\n-> 2546                            align=align, **kwargs)\r\n   2547         return patches\r\n   2548 \r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\r\n   1563     def inner(ax, *args, data=None, **kwargs):\r\n   1564         if data is None:\r\n-> 1565             return func(ax, *map(sanitize_sequence, args), **kwargs)\r\n   1566 \r\n   1567         bound = new_sig.bind(ax, *args, **kwargs)\r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/axes/_axes.py in bar(self, x, height, width, bottom, align, **kwargs)\r\n   2339         x, height, width, y, linewidth = np.broadcast_arrays(\r\n   2340             # Make args iterable too.\r\n-> 2341             np.atleast_1d(x), height, width, y, linewidth)\r\n   2342 \r\n   2343         # Now that units have been converted, set the tick locations.\r\n\r\n<__array_function__ internals> in broadcast_arrays(*args, **kwargs)\r\n\r\n/usr/local/lib/python3.7/site-packages/numpy/lib/stride_tricks.py in broadcast_arrays(*args, **kwargs)\r\n    262     args = [np.array(_m, copy=False, subok=subok) for _m in args]\r\n    263 \r\n--> 264     shape = _broadcast_shape(*args)\r\n    265 \r\n    266     if all(array.shape == shape for array in args):\r\n\r\n/usr/local/lib/python3.7/site-packages/numpy/lib/stride_tricks.py in _broadcast_shape(*args)\r\n    189     # use the old-iterator because np.nditer does not handle size 0 arrays\r\n    190     # consistently\r\n--> 191     b = np.broadcast(*args[:32])\r\n    192     # unfortunately, it cannot handle 32 or more arguments directly\r\n    193     for pos in range(32, len(args), 31):\r\n\r\nValueError: shape mismatch: objects cannot be broadcast to a single shape\r\n```\r\nUsing TensorFlow 1.15.2. Am I doing something wrong or is this a bug ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1115", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1115/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1115/events", "html_url": "https://github.com/slundberg/shap/issues/1115", "id": 586077538, "node_id": "MDU6SXNzdWU1ODYwNzc1Mzg=", "number": 1115, "title": "How to connect it with fronend?", "user": {"login": "vaibhavkumar049", "id": 36812649, "node_id": "MDQ6VXNlcjM2ODEyNjQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/36812649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhavkumar049", "html_url": "https://github.com/vaibhavkumar049", "followers_url": "https://api.github.com/users/vaibhavkumar049/followers", "following_url": "https://api.github.com/users/vaibhavkumar049/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhavkumar049/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhavkumar049/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhavkumar049/subscriptions", "organizations_url": "https://api.github.com/users/vaibhavkumar049/orgs", "repos_url": "https://api.github.com/users/vaibhavkumar049/repos", "events_url": "https://api.github.com/users/vaibhavkumar049/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhavkumar049/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T09:55:31Z", "updated_at": "2020-03-24T09:49:45Z", "closed_at": "2020-03-24T09:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Flask backend and a vue front end, I want to render this graph in the front end, any idea how should I approach \r\n![Screenshot from 2020-03-23 15-21-38](https://user-images.githubusercontent.com/36812649/77304317-460c2600-6d1a-11ea-95ab-6a36db0584d6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1112", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1112/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1112/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1112/events", "html_url": "https://github.com/slundberg/shap/issues/1112", "id": 584578345, "node_id": "MDU6SXNzdWU1ODQ1NzgzNDU=", "number": 1112, "title": "questionable YearMade vs SalePrice for Kaggle bulldozer dependence plot", "user": {"login": "parrt", "id": 178777, "node_id": "MDQ6VXNlcjE3ODc3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/178777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parrt", "html_url": "https://github.com/parrt", "followers_url": "https://api.github.com/users/parrt/followers", "following_url": "https://api.github.com/users/parrt/following{/other_user}", "gists_url": "https://api.github.com/users/parrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/parrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parrt/subscriptions", "organizations_url": "https://api.github.com/users/parrt/orgs", "repos_url": "https://api.github.com/users/parrt/repos", "events_url": "https://api.github.com/users/parrt/events{/privacy}", "received_events_url": "https://api.github.com/users/parrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-19T17:28:46Z", "updated_at": "2020-03-25T15:57:23Z", "closed_at": "2020-03-25T15:57:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Scott!! Heh, I'm trying to compare SHAP to a variety of techniques as I work on my own for partial dependence.  I have a case, with enclosed code/results, that I think does not get the right answer. I'm hoping that I am simply not using SHAP properly.   This is a real data set so impossible to know the true answer, but I think the results from SHAP are implausible.  ALE, for example, shows a plausible result which is that older bulldozers are worth less:\r\n\r\n<img width=\"150\" alt=\"Screen Shot 2020-03-19 at 10 21 29 AM\" src=\"https://user-images.githubusercontent.com/178777/77095672-79258100-69cb-11ea-8f1c-a8b63e7a3e21.png\">\r\n\r\nHere is what `shap.dependence_plot()` shows (with marginal plot on the left):\r\n\r\n<img width=\"330\" alt=\"Screen Shot 2020-03-19 at 10 23 57 AM\" src=\"https://user-images.githubusercontent.com/178777/77095922-d28db000-69cb-11ea-99a2-e2778a74e52d.png\">\r\n\r\nThat partial dependence plot looks pretty random.\r\n\r\nI enclose a small 10k sample of the bulldozer data set and complete file to exhibit this behavior. Here are the most important lines (Bulldozer RF OOB R^2 0.81).\r\n\r\n```python\r\nshap_test_size=300\r\nrf = RandomForestRegressor(n_estimators=150, n_jobs=-1,  max_features=0.9,min_samples_leaf=1, oob_score=True)\r\nrf.fit(X, y)\r\n\r\nexplainer = shap.TreeExplainer(rf, data=shap.sample(X, 100),\r\n                               feature_perturbation='interventional')\r\nshap_values = explainer.shap_values(X.sample(n=shap_test_size),\r\n                                    check_additivity=False)\r\n\r\nshap.dependence_plot(\"YearMade\", shap_values, X.sample(n=shap_test_size),\r\n                     interaction_index=None, ax=axes[1], dot_size=5,\r\n                     show=False, alpha=.5)\r\n```\r\n\r\nI'm hoping that I'm doing something obviously wrong.\r\n\r\n[bulldozer10k.zip](https://github.com/slundberg/shap/files/4356060/bulldozer10k.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1109", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1109/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1109/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1109/events", "html_url": "https://github.com/slundberg/shap/issues/1109", "id": 584366067, "node_id": "MDU6SXNzdWU1ODQzNjYwNjc=", "number": 1109, "title": "A question about KernelExplainer input", "user": {"login": "shangwen777", "id": 19768560, "node_id": "MDQ6VXNlcjE5NzY4NTYw", "avatar_url": "https://avatars2.githubusercontent.com/u/19768560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shangwen777", "html_url": "https://github.com/shangwen777", "followers_url": "https://api.github.com/users/shangwen777/followers", "following_url": "https://api.github.com/users/shangwen777/following{/other_user}", "gists_url": "https://api.github.com/users/shangwen777/gists{/gist_id}", "starred_url": "https://api.github.com/users/shangwen777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shangwen777/subscriptions", "organizations_url": "https://api.github.com/users/shangwen777/orgs", "repos_url": "https://api.github.com/users/shangwen777/repos", "events_url": "https://api.github.com/users/shangwen777/events{/privacy}", "received_events_url": "https://api.github.com/users/shangwen777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T12:08:10Z", "updated_at": "2020-03-19T12:53:18Z", "closed_at": "2020-03-19T12:53:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Scott,\r\n\r\nI was a bit confused about the input of KernelExplainer. I wrote a prediction call function for Learning Fair Representation Algorithm:\r\n\r\ndef prediction(M_nk, w, N, k):\r\n    yhat = np.zeros(N)\r\n    for i in range(N):\r\n        for j in range(k):\r\n            yhat[i] += M_nk[i, j] * w[j]\r\n        yhat[i] = 1e-6 if yhat[i] <= 0 else yhat[i]\r\n        yhat[i] = 0.999 if yhat[i] >= 1 else yhat[i]\r\n    return yhat\r\n\r\ndef call_FLR(X_test):\r\n    dists= distances(X_test, v, alpha, Ns, d, k)\r\n    M_nks = M_nk(dists, Ns, k)\r\n    M_ks = M_k(M_nks, Ns, k)\r\n    yhat = prediction(M_nks, w, Ns, k)\r\n    return yhat\r\n\r\nexplainer = shap.KernelExplainer(call_FLR(X_test), X_test, link = 'logit')\r\n\r\nBut I got an error message as below. Could you please advise?\r\n\r\nThank you!\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-65-e13bf243e4ac> in <module>()\r\n----> 1 explainer = shap.KernelExplainer(call_FLR(X_test), X_test, link = 'logit')\r\n\r\n~/libraries/nb_env/lib64/python3.6/site-packages/shap/explainers/kernel.py in __init__(self, model, data, link, **kwargs)\r\n     95         self.keep_index_ordered = kwargs.get(\"keep_index_ordered\", False)\r\n     96         self.data = convert_to_data(data, keep_index=self.keep_index)\r\n---> 97         model_null = match_model_to_data(self.model, self.data)\r\n     98 \r\n     99         # enforce our current input type limitations\r\n\r\n~/libraries/nb_env/lib64/python3.6/site-packages/shap/common.py in match_model_to_data(model, data)\r\n     87             out_val = model.f(data.convert_to_df())\r\n     88         else:\r\n---> 89             out_val = model.f(data.data)\r\n     90     except:\r\n     91         print(\"Provided model function fails when applied to the provided data set.\")\r\n\r\nTypeError: 'numpy.ndarray' object is not callable\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1106", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1106/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1106/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1106/events", "html_url": "https://github.com/slundberg/shap/issues/1106", "id": 584099841, "node_id": "MDU6SXNzdWU1ODQwOTk4NDE=", "number": 1106, "title": "hi, ", "user": {"login": "jyayoub", "id": 50388041, "node_id": "MDQ6VXNlcjUwMzg4MDQx", "avatar_url": "https://avatars0.githubusercontent.com/u/50388041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyayoub", "html_url": "https://github.com/jyayoub", "followers_url": "https://api.github.com/users/jyayoub/followers", "following_url": "https://api.github.com/users/jyayoub/following{/other_user}", "gists_url": "https://api.github.com/users/jyayoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyayoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyayoub/subscriptions", "organizations_url": "https://api.github.com/users/jyayoub/orgs", "repos_url": "https://api.github.com/users/jyayoub/repos", "events_url": "https://api.github.com/users/jyayoub/events{/privacy}", "received_events_url": "https://api.github.com/users/jyayoub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T01:24:31Z", "updated_at": "2020-03-19T01:26:38Z", "closed_at": "2020-03-19T01:26:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1100", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1100/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1100/events", "html_url": "https://github.com/slundberg/shap/issues/1100", "id": 581379268, "node_id": "MDU6SXNzdWU1ODEzNzkyNjg=", "number": 1100, "title": "shap.force_plot() not working with TF 2.1", "user": {"login": "brookewenig", "id": 6416014, "node_id": "MDQ6VXNlcjY0MTYwMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6416014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brookewenig", "html_url": "https://github.com/brookewenig", "followers_url": "https://api.github.com/users/brookewenig/followers", "following_url": "https://api.github.com/users/brookewenig/following{/other_user}", "gists_url": "https://api.github.com/users/brookewenig/gists{/gist_id}", "starred_url": "https://api.github.com/users/brookewenig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brookewenig/subscriptions", "organizations_url": "https://api.github.com/users/brookewenig/orgs", "repos_url": "https://api.github.com/users/brookewenig/repos", "events_url": "https://api.github.com/users/brookewenig/events{/privacy}", "received_events_url": "https://api.github.com/users/brookewenig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-14T21:28:05Z", "updated_at": "2020-06-02T23:00:09Z", "closed_at": "2020-03-29T02:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm porting over some code to TF 2.1 (from 1.14) with SHAP 0.35, and I'm hitting this issue with force_plot() that I don't hit with TF 1.14:\r\n\r\nI get this error: `TypeError: Object of type EagerTensor is not JSON serializable` when I run this code:                 \r\nshap.force_plot(shap_explainer.expected_value[0], shap_values[0], X_test[0:1], feature_names=feature_names).\r\n\r\nAny help would be greatly appreciated! \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1095", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1095/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1095/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1095/events", "html_url": "https://github.com/slundberg/shap/issues/1095", "id": 579178588, "node_id": "MDU6SXNzdWU1NzkxNzg1ODg=", "number": 1095, "title": "GradientExplainer missing expected_value", "user": {"login": "tommontgomery450", "id": 37197027, "node_id": "MDQ6VXNlcjM3MTk3MDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/37197027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommontgomery450", "html_url": "https://github.com/tommontgomery450", "followers_url": "https://api.github.com/users/tommontgomery450/followers", "following_url": "https://api.github.com/users/tommontgomery450/following{/other_user}", "gists_url": "https://api.github.com/users/tommontgomery450/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommontgomery450/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommontgomery450/subscriptions", "organizations_url": "https://api.github.com/users/tommontgomery450/orgs", "repos_url": "https://api.github.com/users/tommontgomery450/repos", "events_url": "https://api.github.com/users/tommontgomery450/events{/privacy}", "received_events_url": "https://api.github.com/users/tommontgomery450/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T10:59:52Z", "updated_at": "2020-03-11T11:25:10Z", "closed_at": "2020-03-11T11:25:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been doing binary classification using a dense neural network. The output layer has a single neuron with a sigmoid activation.\r\n\r\nWhen I tried to use the explainer.expected_value I saw that this property was not on the GradientExplainer and that the line of code that sets this is commented out (Looks like this has been that way since gradient.py was first added)\r\n\r\nUsing self.expected_value = self.run(self.model_output, self.model_inputs, self.data).mean(0) in the GradientExplainer gives me the average probability (for class 1) However if I sum up the Shap values for a single sample and add the expected_value as calculated it does not sum to the probability predicted by the NN.\r\n\r\nSince the NN is outputting a probability of class 1 I would expect this to be the case. Can you shed any light on this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1077", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1077/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1077/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1077/events", "html_url": "https://github.com/slundberg/shap/issues/1077", "id": 573834359, "node_id": "MDU6SXNzdWU1NzM4MzQzNTk=", "number": 1077, "title": "ValueError: Operation 'switched_dropout_3/dropout/mul_1' has no attr named '_XlaCompile'.", "user": {"login": "tobiasharren", "id": 49845179, "node_id": "MDQ6VXNlcjQ5ODQ1MTc5", "avatar_url": "https://avatars3.githubusercontent.com/u/49845179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasharren", "html_url": "https://github.com/tobiasharren", "followers_url": "https://api.github.com/users/tobiasharren/followers", "following_url": "https://api.github.com/users/tobiasharren/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasharren/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasharren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasharren/subscriptions", "organizations_url": "https://api.github.com/users/tobiasharren/orgs", "repos_url": "https://api.github.com/users/tobiasharren/repos", "events_url": "https://api.github.com/users/tobiasharren/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasharren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-02T09:26:32Z", "updated_at": "2020-07-24T15:22:55Z", "closed_at": "2020-07-24T15:22:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am having a bit of trouble with both the DeepExplainer and the GradientExplainer. I think I know roughly what the problem is, but I can't seem to find out how to fix it.\r\n\r\nI use a MultitaskRegressor Model from Deepchem (based on Keras), which consists of the following layers:\r\n[<tensorflow.python.keras.engine.input_layer.InputLayer object at 0x7efc92f7fb38>, <tensorflow.python.keras.layers.core.Dense object at 0x7efc92f7f390>, <tensorflow.python.keras.engine.input_layer.InputLayer object at 0x7efcd66d9908>, <deepchem.models.layers.SwitchedDropout object at 0x7efc92f7ff28>, <tensorflow.python.keras.layers.core.Dense object at 0x7efc92f340f0>, <deepchem.models.layers.SwitchedDropout object at 0x7efc92f440b8>, <tensorflow.python.keras.layers.core.Dense object at 0x7efc92efdb70>, <deepchem.models.layers.SwitchedDropout object at 0x7efc92f44438>, <tensorflow.python.keras.layers.core.Dense object at 0x7efc92ede9b0>, <deepchem.models.layers.SwitchedDropout object at 0x7efc92f44da0>, <tensorflow.python.keras.layers.core.Dense object at 0x7efc92e81a58>, <tensorflow.python.keras.layers.core.Reshape object at 0x7efc92f7fdd8>]\r\n\r\nI added a new reshape layer on top, so the output has only one dimension (I only have one output, so thats ok)\r\nI also checked that my inputs have the right format, so the call to session.run in deep_tf will be correctly executed and returns the expected values\r\n\r\noutput = tf.reshape(self.model.model.output, [-1, 1])\r\n\r\n(the strange notations are due to deepchems and my classes)\r\n\r\n\r\nThe problem lies probably with this SwitchedDropout Layer.\r\nThe Deepchem Definition is: \r\n\r\nclass SwitchedDropout(tf.keras.layers.Layer):\r\n  \"\"\"Apply dropout based on an input.\r\n\r\n  This is required for uncertainty prediction.  The standard Keras Dropout\r\n  layer only performs dropout during training, but we sometimes need to do it\r\n  during prediction.  The second input to this layer should be a scalar equal to\r\n  0 or 1, indicating whether to perform dropout.\r\n  \"\"\"\r\n\r\n  def __init__(self, rate, **kwargs):\r\n    self.rate = rate\r\n    super(SwitchedDropout, self).__init__(**kwargs)\r\n\r\n  def call(self, inputs):\r\n    rate = self.rate * tf.squeeze(inputs[1])\r\n    return tf.nn.dropout(inputs[0], rate=rate)\r\n\r\n\r\nI can build the DeepExplainer/GradientExplainer without issue, but when I try to get the shap values I get the following error message:\r\n\r\n  File \"/EXT/Tobha/.conda/envs/test_BA_Tobias_std_deepchem-2-3-0_py36_20200114/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 2639, in get_attr\r\n    c_api.TF_OperationGetAttrValueProto(self._c_op, name, buf)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Operation 'switched_dropout_3/dropout/mul_1' has no attr named '_XlaCompile'\r\n\r\n\r\nAs far as I have understood dropout layers should not be used in shap, since they are only used for training. But since this layer was written to explicitly also be used in prediction this probably leads to the problems. \r\nAre there any ideas on how I can bypass this?\r\n\r\n\r\nI use tensorflow 1.14 and the newest shap version from conda with python 3.6\r\n\r\n\r\n\r\n\r\n\r\n\r\nThanks in advance for any help.\r\n\r\nbest regard Tobias", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1069", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1069/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1069/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1069/events", "html_url": "https://github.com/slundberg/shap/issues/1069", "id": 571737201, "node_id": "MDU6SXNzdWU1NzE3MzcyMDE=", "number": 1069, "title": "Summary plot, multiclass - feature ordering and global shap value ordering are different", "user": {"login": "RandallJEllis", "id": 7551835, "node_id": "MDQ6VXNlcjc1NTE4MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7551835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RandallJEllis", "html_url": "https://github.com/RandallJEllis", "followers_url": "https://api.github.com/users/RandallJEllis/followers", "following_url": "https://api.github.com/users/RandallJEllis/following{/other_user}", "gists_url": "https://api.github.com/users/RandallJEllis/gists{/gist_id}", "starred_url": "https://api.github.com/users/RandallJEllis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RandallJEllis/subscriptions", "organizations_url": "https://api.github.com/users/RandallJEllis/orgs", "repos_url": "https://api.github.com/users/RandallJEllis/repos", "events_url": "https://api.github.com/users/RandallJEllis/events{/privacy}", "received_events_url": "https://api.github.com/users/RandallJEllis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T00:09:52Z", "updated_at": "2020-02-27T03:03:08Z", "closed_at": "2020-02-27T03:02:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/slundberg/shap/blob/master/shap/plots/summary.py, for the multiclass case, line 191 creates the feature ordering for plotting, and line 441 calculates global shap values for each class. Here is line 191 for feature ordering: \r\n\r\n```\r\nif multi_class:\r\n            feature_order = np.argsort(np.sum(np.mean(np.abs(shap_values), axis=0), axis=0))\r\n```\r\n\r\nThe operations inside the argsort expression give different **and** differently ordered outputs than the summed outputs of this line: \r\n\r\n```\r\nfor i, ind in enumerate(class_inds):\r\n            global_shap_values = np.abs(shap_values[ind]).mean(0)\r\n```\r\n\r\nThe summed outputs seen in the stacked bar plot in the same loop are not equal to the output of the expression inside of np.argsort above:\r\n\r\n```\r\nfor i, ind in enumerate(class_inds):\r\n            global_shap_values = np.abs(shap_values[ind]).mean(0)\r\n            pl.barh(\r\n                y_pos, global_shap_values[feature_inds], 0.7, left=left_pos, align='center',\r\n                color=color(i), label=class_names[ind]\r\n            )\r\n            left_pos += global_shap_values[feature_inds]\r\n```\r\n\r\nHere is a reproducible example, with two classes:\r\n\r\n```\r\nshap_values = [array([[ 0.000125, -0.00025 ,  0.001312,  0.00025 , -0.001625,  0.007125, -0.00025 ,  0.000125,  0.00025 ,  0.001312,\r\n         0.007125, -0.001625],\r\n       [ 0.000125, -0.00075 ,  0.000375, -0.00225 , -0.000625, -0.000125, -0.00075 ,  0.000125, -0.00225 ,  0.000375,\r\n        -0.000125, -0.000625],\r\n       [-0.000875, -0.00025 ,  0.000375,  0.00025 , -0.000625, -0.000125, -0.00025 , -0.000875,  0.00025 ,  0.000375,\r\n        -0.000125, -0.000625],\r\n       [ 0.000125, -0.00025 ,  0.000375,  0.00025 , -0.001625,  0.002375, -0.00025 ,  0.000125,  0.00025 ,  0.000375,\r\n         0.002375, -0.001625],\r\n       [ 0.000125, -0.00025 ,  0.000375,  0.00075 , -0.001625, -0.000125, -0.00025 ,  0.000125,  0.00075 ,  0.000375,\r\n        -0.000125, -0.001625],\r\n       [-0.000875, -0.00025 ,  0.000375,  0.00025 , -0.001625, -0.000125, -0.00025 , -0.000875,  0.00025 ,  0.000375,\r\n        -0.000125, -0.001625],\r\n       [-0.000875, -0.00025 ,  0.001312,  0.00075 , -0.000625, -0.000375, -0.00025 , -0.000875,  0.00075 ,  0.001312,\r\n        -0.000375, -0.000625],\r\n       [ 0.000125, -0.00025 ,  0.001312,  0.00025 , -0.001625, -0.000375, -0.00025 ,  0.000125,  0.00025 ,  0.001312,\r\n        -0.000375, -0.001625],\r\n       [ 0.000125, -0.00075 ,  0.001312, -0.00225 , -0.000625, -0.000375, -0.00075 ,  0.000125, -0.00225 ,  0.001312,\r\n        -0.000375, -0.000625],\r\n       [ 0.000125, -0.00025 ,  0.000375,  0.00025 , -0.000625, -0.000125, -0.00025 ,  0.000125,  0.00025 ,  0.000375,\r\n        -0.000125, -0.000625]]), array([[-0.000125,  0.00025 , -0.001312, -0.00025 ,  0.001625, -0.007125,  0.00025 , -0.000125, -0.00025 , -0.001312,\r\n        -0.007125,  0.001625],\r\n       [-0.000125,  0.00075 , -0.000375,  0.00225 ,  0.000625,  0.000125,  0.00075 , -0.000125,  0.00225 , -0.000375,\r\n         0.000125,  0.000625],\r\n       [ 0.000875,  0.00025 , -0.000375, -0.00025 ,  0.000625,  0.000125,  0.00025 ,  0.000875, -0.00025 , -0.000375,\r\n         0.000125,  0.000625],\r\n       [-0.000125,  0.00025 , -0.000375, -0.00025 ,  0.001625, -0.002375,  0.00025 , -0.000125, -0.00025 , -0.000375,\r\n        -0.002375,  0.001625],\r\n       [-0.000125,  0.00025 , -0.000375, -0.00075 ,  0.001625,  0.000125,  0.00025 , -0.000125, -0.00075 , -0.000375,\r\n         0.000125,  0.001625],\r\n       [ 0.000875,  0.00025 , -0.000375, -0.00025 ,  0.001625,  0.000125,  0.00025 ,  0.000875, -0.00025 , -0.000375,\r\n         0.000125,  0.001625],\r\n       [ 0.000875,  0.00025 , -0.001312, -0.00075 ,  0.000625,  0.000375,  0.00025 ,  0.000875, -0.00075 , -0.001312,\r\n         0.000375,  0.000625],\r\n       [-0.000125,  0.00025 , -0.001312, -0.00025 ,  0.001625,  0.000375,  0.00025 , -0.000125, -0.00025 , -0.001312,\r\n         0.000375,  0.001625],\r\n       [-0.000125,  0.00075 , -0.001312,  0.00225 ,  0.000625,  0.000375,  0.00075 , -0.000125,  0.00225 , -0.001312,\r\n         0.000375,  0.000625],\r\n       [-0.000125,  0.00025 , -0.000375, -0.00025 ,  0.000625,  0.000125,  0.00025 , -0.000125, -0.00025 , -0.000375,\r\n         0.000125,  0.000625]])]\r\n\r\nshap.summary_plot(shap_values, plot_type=\"bar\")\r\n```\r\n\r\nTake note of the values of the bars on the x-axis. Now, let's check the orderings and values in lines 191 and 441, taking sums with line 441:\r\n\r\n```\r\n#line 191\r\nfeature_order = np.argsort(np.sum(np.mean(np.abs(shap_values), axis=0), axis=0))\r\nfeature_order_values = np.sort(np.sum(np.mean(np.abs(shap_values), axis=0), axis=0))\r\n\r\n#line 441\r\nglobal_shap_order = np.argsort(np.abs(shap_values[0]).mean(0) + np.abs(shap_values[1]).mean(0))\r\nglobal_shap_values = np.sort(np.abs(shap_values[0]).mean(0) + np.abs(shap_values[1]).mean(0))\r\n```\r\n\r\nCheck the equality of feature_order and global_shap_order:\r\n```\r\nnp.array_equal(feature_order, global_shap_order)\r\n```\r\n\r\nThis outputs false, and printing the values themselves show that global_shap_values matches the bar plot values, but the feature_order_values are much higher:\r\n```\r\nprint(feature_order_values, '\\n', global_shap_values)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1066", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1066/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1066/events", "html_url": "https://github.com/slundberg/shap/issues/1066", "id": 571128706, "node_id": "MDU6SXNzdWU1NzExMjg3MDY=", "number": 1066, "title": "pytest doesn't produce consistent results", "user": {"login": "rightx2", "id": 10606994, "node_id": "MDQ6VXNlcjEwNjA2OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/10606994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rightx2", "html_url": "https://github.com/rightx2", "followers_url": "https://api.github.com/users/rightx2/followers", "following_url": "https://api.github.com/users/rightx2/following{/other_user}", "gists_url": "https://api.github.com/users/rightx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rightx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rightx2/subscriptions", "organizations_url": "https://api.github.com/users/rightx2/orgs", "repos_url": "https://api.github.com/users/rightx2/repos", "events_url": "https://api.github.com/users/rightx2/events{/privacy}", "received_events_url": "https://api.github.com/users/rightx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T07:41:57Z", "updated_at": "2020-02-26T11:22:17Z", "closed_at": "2020-02-26T11:22:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I run `pytest -k test_deep -s`  3 times in a row, but passed 2 times only ...\r\n\r\nNeed to fix seed or something. I will send pull request soon.\r\n\r\nBelow is history\r\n\r\n```\r\n(base) Chois@mycomputer:~/shap$ pytest -k test_deep -s\r\n======================================= test session starts =======================================\r\nplatform linux -- Python 3.7.4, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/Chois/shap\r\ncollected 88 items / 82 deselected / 6 selected\r\n\r\ntests/explainers/test_deep.py sssDownloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to mnist_data/MNIST/raw/train-images-idx3-ubyte.gz\r\n9920512it [00:05, 1944327.79it/s]\r\nExtracting mnist_data/MNIST/raw/train-images-idx3-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to mnist_data/MNIST/raw/train-labels-idx1-ubyte.gz\r\n32768it [00:00, 49176.81it/s]\r\nExtracting mnist_data/MNIST/raw/train-labels-idx1-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to mnist_data/MNIST/raw/t10k-images-idx3-ubyte.gz\r\n1654784it [00:02, 703473.99it/s]\r\nExtracting mnist_data/MNIST/raw/t10k-images-idx3-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to mnist_data/MNIST/raw/t10k-labels-idx1-ubyte.gz\r\n8192it [00:00, 19138.31it/s]\r\nExtracting mnist_data/MNIST/raw/t10k-labels-idx1-ubyte.gz to mnist_data/MNIST/raw\r\nProcessing...\r\nDone!\r\nRunning test on interim layer\r\nTrain Epoch: 1 [0/60000 (0%)]   Loss: 0.090099\r\nTrain Epoch: 1 [1280/60000 (2%)]    Loss: 0.090328\r\nRunning test on whole model\r\nTrain Epoch: 1 [0/60000 (0%)]   Loss: 0.091516\r\nTrain Epoch: 1 [1280/60000 (2%)]    Loss: 0.090683\r\n.Train Epoch: 1 [0/506 (0%)]    Loss: 503.008514\r\nTrain Epoch: 1 [256/506 (50%)]  Loss: 766.144958\r\n.Train Epoch: 1 [0/506 (0%)]    Loss: 1628.259766\r\nTrain Epoch: 1 [1012/506 (50%)] Loss: 4810.717773\r\nTrain Epoch: 1 [0/506 (0%)] Loss: 3396.286133\r\nTrain Epoch: 1 [1012/506 (50%)] Loss: 2523.672607\r\n.\r\n\r\n======================================== warnings summary =========================================\r\n/home/Chois/miniconda3/lib/python3.7/site-packages/nose/importer.py:12\r\n  the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n\r\ntests/explainers/test_deep.py::test_pytorch_mnist_cnn\r\n  Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n==================== 3 passed, 3 skipped, 82 deselected, 2 warnings in 13.18s =====================\r\n(base) Chois@mycomputer:~/shap$ pytest -k test_deep -s\r\n======================================= test session starts =======================================\r\nplatform linux -- Python 3.7.4, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/Chois/shap\r\ncollected 88 items / 82 deselected / 6 selected\r\n\r\ntests/explainers/test_deep.py sssDownloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to mnist_data/MNIST/raw/train-images-idx3-ubyte.gz\r\n9920512it [00:07, 1394949.83it/s]\r\nExtracting mnist_data/MNIST/raw/train-images-idx3-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to mnist_data/MNIST/raw/train-labels-idx1-ubyte.gz\r\n32768it [00:00, 50425.19it/s]\r\nExtracting mnist_data/MNIST/raw/train-labels-idx1-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to mnist_data/MNIST/raw/t10k-images-idx3-ubyte.gz\r\n1654784it [00:03, 529012.61it/s]\r\nExtracting mnist_data/MNIST/raw/t10k-images-idx3-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to mnist_data/MNIST/raw/t10k-labels-idx1-ubyte.gz\r\n8192it [00:00, 18314.63it/s]\r\nExtracting mnist_data/MNIST/raw/t10k-labels-idx1-ubyte.gz to mnist_data/MNIST/raw\r\nProcessing...\r\nDone!\r\nRunning test on interim layer\r\nTrain Epoch: 1 [0/60000 (0%)]   Loss: 0.091646\r\nTrain Epoch: 1 [1280/60000 (2%)]    Loss: 0.091288\r\nRunning test on whole model\r\nTrain Epoch: 1 [0/60000 (0%)]   Loss: 0.091562\r\nTrain Epoch: 1 [1280/60000 (2%)]    Loss: 0.091164\r\n.Train Epoch: 1 [0/506 (0%)]    Loss: 491.191467\r\nTrain Epoch: 1 [256/506 (50%)]  Loss: 752.134277\r\n.Train Epoch: 1 [0/506 (0%)]    Loss: 15223.615234\r\nTrain Epoch: 1 [1012/506 (50%)] Loss: 13968.725586\r\nTrain Epoch: 1 [0/506 (0%)] Loss: 2479.997314\r\nTrain Epoch: 1 [1012/506 (50%)] Loss: 4829.720215\r\n.\r\n\r\n======================================== warnings summary =========================================\r\n/home/Chois/miniconda3/lib/python3.7/site-packages/nose/importer.py:12\r\n  the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n\r\ntests/explainers/test_deep.py::test_pytorch_mnist_cnn\r\n  Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n==================== 3 passed, 3 skipped, 82 deselected, 2 warnings in 16.05s =====================\r\n(base) Chois@mycomputer:~/shap$ pytest -k test_deep -s\r\n======================================= test session starts =======================================\r\nplatform linux -- Python 3.7.4, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/Chois/shap\r\ncollected 88 items / 82 deselected / 6 selected\r\n\r\ntests/explainers/test_deep.py sssDownloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to mnist_data/MNIST/raw/train-images-idx3-ubyte.gz\r\n9920512it [00:06, 1526654.11it/s]\r\nExtracting mnist_data/MNIST/raw/train-images-idx3-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to mnist_data/MNIST/raw/train-labels-idx1-ubyte.gz\r\n32768it [00:00, 52031.63it/s]\r\nExtracting mnist_data/MNIST/raw/train-labels-idx1-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to mnist_data/MNIST/raw/t10k-images-idx3-ubyte.gz\r\n1654784it [00:08, 191662.68it/s]\r\nExtracting mnist_data/MNIST/raw/t10k-images-idx3-ubyte.gz to mnist_data/MNIST/raw\r\nDownloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to mnist_data/MNIST/raw/t10k-labels-idx1-ubyte.gz\r\n8192it [00:00, 17809.51it/s]\r\nExtracting mnist_data/MNIST/raw/t10k-labels-idx1-ubyte.gz to mnist_data/MNIST/raw\r\nProcessing...\r\nDone!\r\nRunning test on interim layer\r\nTrain Epoch: 1 [0/60000 (0%)]   Loss: 0.092349\r\nTrain Epoch: 1 [1280/60000 (2%)]    Loss: 0.091887\r\nRunning test on whole model\r\nTrain Epoch: 1 [0/60000 (0%)]   Loss: 0.089468\r\nTrain Epoch: 1 [1280/60000 (2%)]    Loss: 0.089875\r\n.Train Epoch: 1 [0/506 (0%)]    Loss: 487.916534\r\nTrain Epoch: 1 [256/506 (50%)]  Loss: 747.277283\r\n.Train Epoch: 1 [0/506 (0%)]    Loss: 505.373444\r\nTrain Epoch: 1 [1012/506 (50%)] Loss: 768.959778\r\nF\r\n\r\n============================================ FAILURES =============================================\r\n__________________________________ test_pytorch_multiple_inputs ___________________________________\r\n\r\n    def test_pytorch_multiple_inputs():\r\n        _skip_if_no_pytorch()\r\n\r\n        def _run_pytorch_multiple_inputs_test(disconnected):\r\n            \"\"\"Testing multiple inputs\r\n            \"\"\"\r\n            import torch\r\n            from torch import nn\r\n            from torch.nn import functional as F\r\n            from torch.utils.data import TensorDataset, DataLoader\r\n            from sklearn.datasets import load_boston\r\n            import shap\r\n\r\n            X, y = load_boston(return_X_y=True)\r\n            num_features = X.shape[1]\r\n            x1 = X[:, num_features // 2:]\r\n            x2 = X[:, :num_features // 2]\r\n            data = TensorDataset(torch.tensor(x1).float(),\r\n                                 torch.tensor(x2).float(),\r\n                                 torch.tensor(y).float())\r\n            loader = DataLoader(data, batch_size=128)\r\n\r\n            class Net(nn.Module):\r\n                def __init__(self, num_features, disconnected):\r\n                    super(Net, self).__init__()\r\n                    self.disconnected = disconnected\r\n                    if disconnected:\r\n                        num_features = num_features // 2 + 1\r\n                    self.linear = nn.Linear(num_features, 2)\r\n                    self.output = nn.Sequential(\r\n                        nn.MaxPool1d(2),\r\n                        nn.ReLU()\r\n                    )\r\n\r\n                def forward(self, x1, x2):\r\n                    if self.disconnected:\r\n                        x = self.linear(x1).unsqueeze(1)\r\n                    else:\r\n                        x = self.linear(torch.cat((x1, x2), dim=-1)).unsqueeze(1)\r\n                    return self.output(x).squeeze(1)\r\n\r\n            model = Net(num_features, disconnected)\r\n            optimizer = torch.optim.Adam(model.parameters())\r\n\r\n            def train(model, device, train_loader, optimizer, epoch):\r\n                model.train()\r\n                num_examples = 0\r\n                for batch_idx, (data1, data2, target) in enumerate(train_loader):\r\n                    num_examples += target.shape[0]\r\n                    data1, data2, target = data1.to(device), data2.to(device), target.to(device)\r\n                    optimizer.zero_grad()\r\n                    output = model(data1, data2)\r\n                    loss = F.mse_loss(output.squeeze(1), target)\r\n                    loss.backward()\r\n                    optimizer.step()\r\n                    if batch_idx % 2 == 0:\r\n                        print('Train Epoch: {} [{}/{} ({:.0f}%)]\\tLoss: {:.6f}'.format(\r\n                            epoch, batch_idx * len(data), len(train_loader.dataset),\r\n                                   100. * batch_idx / len(train_loader), loss.item()))\r\n\r\n            device = torch.device('cpu')\r\n            train(model, device, loader, optimizer, 1)\r\n\r\n            next_x1, next_x2, next_y = next(iter(loader))\r\n            np.random.seed(0)\r\n            inds = np.random.choice(next_x1.shape[0], 20, replace=False)\r\n            background = [next_x1[inds, :], next_x2[inds, :]]\r\n            e = shap.DeepExplainer(model, background)\r\n            test_x1, test_x2, test_y = next(iter(loader))\r\n            shap_x1, shap_x2 = e.shap_values([test_x1[:1], test_x2[:1]])\r\n\r\n            model.eval()\r\n            model.zero_grad()\r\n            with torch.no_grad():\r\n                diff = (model(test_x1[:1], test_x2[:1]) - model(*background)).detach().numpy().mean(0)\r\n            sums = np.array([shap_x1[i].sum() + shap_x2[i].sum() for i in range(len(shap_x1))])\r\n            d = np.abs(sums - diff).sum()\r\n            assert d / np.abs(diff).sum() < 0.001, \"Sum of SHAP values does not match difference! %f\" % (\r\n                    d / np.abs(diff).sum())\r\n\r\n>       _run_pytorch_multiple_inputs_test(disconnected=True)\r\n\r\ntests/explainers/test_deep.py:465:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ndisconnected = True\r\n\r\n    def _run_pytorch_multiple_inputs_test(disconnected):\r\n        \"\"\"Testing multiple inputs\r\n        \"\"\"\r\n        import torch\r\n        from torch import nn\r\n        from torch.nn import functional as F\r\n        from torch.utils.data import TensorDataset, DataLoader\r\n        from sklearn.datasets import load_boston\r\n        import shap\r\n\r\n        X, y = load_boston(return_X_y=True)\r\n        num_features = X.shape[1]\r\n        x1 = X[:, num_features // 2:]\r\n        x2 = X[:, :num_features // 2]\r\n        data = TensorDataset(torch.tensor(x1).float(),\r\n                             torch.tensor(x2).float(),\r\n                             torch.tensor(y).float())\r\n        loader = DataLoader(data, batch_size=128)\r\n\r\n        class Net(nn.Module):\r\n            def __init__(self, num_features, disconnected):\r\n                super(Net, self).__init__()\r\n                self.disconnected = disconnected\r\n                if disconnected:\r\n                    num_features = num_features // 2 + 1\r\n                self.linear = nn.Linear(num_features, 2)\r\n                self.output = nn.Sequential(\r\n                    nn.MaxPool1d(2),\r\n                    nn.ReLU()\r\n                )\r\n\r\n            def forward(self, x1, x2):\r\n                if self.disconnected:\r\n                    x = self.linear(x1).unsqueeze(1)\r\n                else:\r\n                    x = self.linear(torch.cat((x1, x2), dim=-1)).unsqueeze(1)\r\n                return self.output(x).squeeze(1)\r\n\r\n        model = Net(num_features, disconnected)\r\n        optimizer = torch.optim.Adam(model.parameters())\r\n\r\n        def train(model, device, train_loader, optimizer, epoch):\r\n            model.train()\r\n            num_examples = 0\r\n            for batch_idx, (data1, data2, target) in enumerate(train_loader):\r\n                num_examples += target.shape[0]\r\n                data1, data2, target = data1.to(device), data2.to(device), target.to(device)\r\n                optimizer.zero_grad()\r\n                output = model(data1, data2)\r\n                loss = F.mse_loss(output.squeeze(1), target)\r\n                loss.backward()\r\n                optimizer.step()\r\n                if batch_idx % 2 == 0:\r\n                    print('Train Epoch: {} [{}/{} ({:.0f}%)]\\tLoss: {:.6f}'.format(\r\n                        epoch, batch_idx * len(data), len(train_loader.dataset),\r\n                               100. * batch_idx / len(train_loader), loss.item()))\r\n\r\n        device = torch.device('cpu')\r\n        train(model, device, loader, optimizer, 1)\r\n\r\n        next_x1, next_x2, next_y = next(iter(loader))\r\n        np.random.seed(0)\r\n        inds = np.random.choice(next_x1.shape[0], 20, replace=False)\r\n        background = [next_x1[inds, :], next_x2[inds, :]]\r\n        e = shap.DeepExplainer(model, background)\r\n        test_x1, test_x2, test_y = next(iter(loader))\r\n        shap_x1, shap_x2 = e.shap_values([test_x1[:1], test_x2[:1]])\r\n\r\n        model.eval()\r\n        model.zero_grad()\r\n        with torch.no_grad():\r\n            diff = (model(test_x1[:1], test_x2[:1]) - model(*background)).detach().numpy().mean(0)\r\n        sums = np.array([shap_x1[i].sum() + shap_x2[i].sum() for i in range(len(shap_x1))])\r\n        d = np.abs(sums - diff).sum()\r\n>       assert d / np.abs(diff).sum() < 0.001, \"Sum of SHAP values does not match difference! %f\" % (\r\n                d / np.abs(diff).sum())\r\nE       AssertionError: Sum of SHAP values does not match difference! nan\r\nE       assert (0.0 / 0.0) < 0.001\r\nE        +  where 0.0 = <built-in method sum of numpy.ndarray object at 0x7f16f8c3a4e0>()\r\nE        +    where <built-in method sum of numpy.ndarray object at 0x7f16f8c3a4e0> = array([0.], dtype=float32).sum\r\nE        +      where array([0.], dtype=float32) = <ufunc 'absolute'>(array([0.], dtype=float32))\r\nE        +        where <ufunc 'absolute'> = np.abs\r\n\r\ntests/explainers/test_deep.py:462: AssertionError\r\n======================================== warnings summary =========================================\r\n/home/Chois/miniconda3/lib/python3.7/site-packages/nose/importer.py:12\r\n  the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n\r\ntests/explainers/test_deep.py::test_pytorch_mnist_cnn\r\n  Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n\r\ntests/explainers/test_deep.py::test_pytorch_multiple_inputs\r\n  invalid value encountered in double_scalars\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1061", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1061/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1061/events", "html_url": "https://github.com/slundberg/shap/issues/1061", "id": 569011402, "node_id": "MDU6SXNzdWU1NjkwMTE0MDI=", "number": 1061, "title": "shap.TreeExplainer fails when CatBoost has a categorical feature.", "user": {"login": "arose13", "id": 3430249, "node_id": "MDQ6VXNlcjM0MzAyNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3430249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arose13", "html_url": "https://github.com/arose13", "followers_url": "https://api.github.com/users/arose13/followers", "following_url": "https://api.github.com/users/arose13/following{/other_user}", "gists_url": "https://api.github.com/users/arose13/gists{/gist_id}", "starred_url": "https://api.github.com/users/arose13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arose13/subscriptions", "organizations_url": "https://api.github.com/users/arose13/orgs", "repos_url": "https://api.github.com/users/arose13/repos", "events_url": "https://api.github.com/users/arose13/events{/privacy}", "received_events_url": "https://api.github.com/users/arose13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-21T15:09:00Z", "updated_at": "2020-02-21T17:48:19Z", "closed_at": "2020-02-21T17:47:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Shapley isn't working for some reason and I'm getting incredibly obscure errors. Even though CatBoost is throwing the error it must be because of shap as the CatBoost models still work when called directly. I think the problem is because shap calls `get_feature_importance()` with a deprecated argument.\r\n\r\nThe error is\r\n```python\r\nTraceback (most recent call last):\r\n  File \"C:/Users/antho/.PyCharm2019.3/config/scratches/scratch_5.py\", line 17, in <module>\r\n    shap_values = explainer.shap_values(x)\r\n  File \"C:\\Users\\antho\\Miniconda3\\lib\\site-packages\\shap\\explainers\\tree.py\", line 247, in shap_values\r\n    phi = self.model.original_model.get_feature_importance(data=X, fstr_type='ShapValues')\r\n  File \"C:\\Users\\antho\\Miniconda3\\lib\\site-packages\\catboost\\core.py\", line 2322, in get_feature_importance\r\n    fstr, feature_names = self._calc_fstr(type, data, thread_count, verbose, shap_mode)\r\n  File \"C:\\Users\\antho\\Miniconda3\\lib\\site-packages\\catboost\\core.py\", line 1287, in _calc_fstr\r\n    return self._object._calc_fstr(type.name, pool, thread_count, verbose, shap_mode)\r\n  File \"_catboost.pyx\", line 4084, in _catboost._CatBoost._calc_fstr\r\n  File \"_catboost.pyx\", line 4114, in _catboost._CatBoost._calc_fstr\r\n_catboost.CatBoostError: c:/goagent/pipelines/buildmaster/catboost.git/catboost/libs/data/model_dataset_compatibility.cpp:47: Feature CHAS is Categorical in model but marked different in the dataset\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\nit's probably due to calling a deprecated argument `fstr_type='ShapValues'`...\r\n```python\r\nFile \"C:\\Users\\antho\\Miniconda3\\lib\\site-packages\\shap\\explainers\\tree.py\", line 247, in shap_values\r\n    phi = self.model.original_model.get_feature_importance(data=X, fstr_type='ShapValues')\r\n```\r\n\r\nThe code required to get this error\r\n```python\r\nimport shap\r\nimport pandas as pd\r\nfrom catboost import CatBoostRegressor\r\nfrom sklearn.datasets import load_boston\r\n\r\nbunch = load_boston()\r\nx, y = load_boston(True)\r\nx = pd.DataFrame(x, columns=bunch.feature_names)\r\nx['CHAS'] = x['CHAS'].astype(str)\r\nprint(x)\r\n\r\nmodel = CatBoostRegressor(1000, cat_features=['CHAS'], verbose=False)\r\nmodel.fit(x, y)\r\n\r\nif __name__ == '__main__':\r\n    explainer = shap.TreeExplainer(model)\r\n    shap_values = explainer.shap_values(x)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1059", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1059/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1059/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1059/events", "html_url": "https://github.com/slundberg/shap/issues/1059", "id": 568823279, "node_id": "MDU6SXNzdWU1Njg4MjMyNzk=", "number": 1059, "title": "TFDeepExplainer not working with 1-layer NN + Softmax", "user": {"login": "Zahlii", "id": 218582, "node_id": "MDQ6VXNlcjIxODU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/218582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zahlii", "html_url": "https://github.com/Zahlii", "followers_url": "https://api.github.com/users/Zahlii/followers", "following_url": "https://api.github.com/users/Zahlii/following{/other_user}", "gists_url": "https://api.github.com/users/Zahlii/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zahlii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zahlii/subscriptions", "organizations_url": "https://api.github.com/users/Zahlii/orgs", "repos_url": "https://api.github.com/users/Zahlii/repos", "events_url": "https://api.github.com/users/Zahlii/events{/privacy}", "received_events_url": "https://api.github.com/users/Zahlii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-21T09:01:52Z", "updated_at": "2020-02-27T04:14:52Z", "closed_at": "2020-02-27T04:14:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using TF 2.1.0  + SHAP ~HEAD\r\n\r\nMinimum failing example:\r\n\r\n```python\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom shap import DeepExplainer\r\n\r\nx = pd.DataFrame(\r\n    {\r\n        \"B\": np.random.random(size=(100,)),\r\n    }\r\n)\r\ny = x.B\r\ny = y.map(lambda zz: chr(int(zz * 2 + 65))).str.get_dummies()\r\n\r\nd = tf.keras.models.Sequential()\r\nd.add(tf.keras.layers.Dense(y.shape[1], input_shape=(x.shape[1],), activation=\"softmax\"))\r\nd.summary()\r\nd.compile(loss=\"categorical_crossentropy\", optimizer=\"Adam\")\r\nd.fit(x.values, y.values, epochs=2)\r\n\r\ne = DeepExplainer(d, x.values)\r\nprint(e.shap_values(x.values))\r\n```\r\n\r\n    /usr/local/lib/python3.7/site-packages/shap/explainers/deep/deep_tf.py:236 grad_graph  *\r\n        x_grad = tape.gradient(out, shap_rAnD)\r\n    /usr/local/lib/python3.7/site-packages/tensorflow_core/python/eager/backprop.py:1029 gradient\r\n        unconnected_gradients=unconnected_gradients)\r\n    /usr/local/lib/python3.7/site-packages/tensorflow_core/python/eager/imperative_grad.py:77 imperative_grad\r\n        compat.as_str(unconnected_gradients.value))\r\n    /usr/local/lib/python3.7/site-packages/tensorflow_core/python/eager/backprop.py:141 _gradient_function\r\n        return grad_fn(mock_op, *out_grads)\r\n    /usr/local/lib/python3.7/site-packages/shap/explainers/deep/deep_tf.py:352 custom_grad\r\n        return op_handlers[op.type](self, op, *grads)\r\n    /usr/local/lib/python3.7/site-packages/shap/explainers/deep/deep_tf.py:449 softmax\r\n        in0 = op.inputs[0]\r\n\r\n    TypeError: 'NoneType' object is not subscriptable\r\n\r\n\r\nIt indeed seems the op's input is None.\r\nHowever, I couldn't find out yet at which point it is set to None.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1050", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1050/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1050/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1050/events", "html_url": "https://github.com/slundberg/shap/issues/1050", "id": 566421279, "node_id": "MDU6SXNzdWU1NjY0MjEyNzk=", "number": 1050, "title": "dependence plot with interaction values not working", "user": {"login": "cmottac", "id": 22749071, "node_id": "MDQ6VXNlcjIyNzQ5MDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/22749071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmottac", "html_url": "https://github.com/cmottac", "followers_url": "https://api.github.com/users/cmottac/followers", "following_url": "https://api.github.com/users/cmottac/following{/other_user}", "gists_url": "https://api.github.com/users/cmottac/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmottac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmottac/subscriptions", "organizations_url": "https://api.github.com/users/cmottac/orgs", "repos_url": "https://api.github.com/users/cmottac/repos", "events_url": "https://api.github.com/users/cmottac/events{/privacy}", "received_events_url": "https://api.github.com/users/cmottac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T16:56:34Z", "updated_at": "2020-02-20T09:28:16Z", "closed_at": "2020-02-20T09:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\nI am trying to create a dependence plot with the shap_interaction_values. This doesn't seem to work.\r\nFor instance, cell 10 in this [example notebook](https://github.com/slundberg/shap/blob/master/notebooks/tree_explainer/Fitting%20a%20Linear%20Simulation%20with%20XGBoost.ipynb) produces an error:\r\n> IndexError: shape mismatch: indexing arrays could not be broadcast together with shapes (2500,) (2,)\r\n\r\nCould you please help me on that?\r\nThank you in advance,\r\nCarlo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1036", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1036/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1036/events", "html_url": "https://github.com/slundberg/shap/issues/1036", "id": 562174774, "node_id": "MDU6SXNzdWU1NjIxNzQ3NzQ=", "number": 1036, "title": "Installation error in virtualenv on Linux", "user": {"login": "lrdsouza", "id": 48129660, "node_id": "MDQ6VXNlcjQ4MTI5NjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/48129660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrdsouza", "html_url": "https://github.com/lrdsouza", "followers_url": "https://api.github.com/users/lrdsouza/followers", "following_url": "https://api.github.com/users/lrdsouza/following{/other_user}", "gists_url": "https://api.github.com/users/lrdsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrdsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrdsouza/subscriptions", "organizations_url": "https://api.github.com/users/lrdsouza/orgs", "repos_url": "https://api.github.com/users/lrdsouza/repos", "events_url": "https://api.github.com/users/lrdsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/lrdsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-09T13:11:56Z", "updated_at": "2020-03-17T08:05:05Z", "closed_at": "2020-02-09T13:44:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to install the SHAP package in a virtual environment that I use on a computer at my university, but the following error appears:\r\n\r\n`Collecting shap\r\n  Using cached shap-0.34.0.tar.gz (264 kB)\r\nRequirement already satisfied: numpy in ./virtual/lib/python3.6/site-packages (from shap) (1.17.3)\r\nRequirement already satisfied: scipy in ./virtual/lib/python3.6/site-packages (from shap) (1.3.1)\r\nRequirement already satisfied: scikit-learn in ./virtual/lib/python3.6/site-packages (from shap) (0.21.3)\r\nRequirement already satisfied: pandas in ./virtual/lib/python3.6/site-packages (from shap) (0.25.3)\r\nRequirement already satisfied: tqdm>4.25.0 in ./virtual/lib/python3.6/site-packages (from shap) (4.36.1)\r\nRequirement already satisfied: joblib>=0.11 in ./virtual/lib/python3.6/site-packages (from scikit-learn->shap) (0.14.0)\r\nRequirement already satisfied: python-dateutil>=2.6.1 in ./virtual/lib/python3.6/site-packages (from pandas->shap) (2.8.0)\r\nRequirement already satisfied: pytz>=2017.2 in ./virtual/lib/python3.6/site-packages (from pandas->shap) (2019.3)\r\nRequirement already satisfied: six>=1.5 in ./virtual/lib/python3.6/site-packages (from python-dateutil>=2.6.1->pandas->shap) (1.12.0)\r\nBuilding wheels for collected packages: shap\r\n  Building wheel for shap (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /home/leonardo/virtual/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-tzo_jona/shap/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-tzo_jona/shap/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-g05zm_5w\r\n       cwd: /tmp/pip-install-tzo_jona/shap/\r\n  Complete output (71 lines):\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.6\r\n  creating build/lib.linux-x86_64-3.6/shap\r\n  copying shap/__init__.py -> build/lib.linux-x86_64-3.6/shap\r\n  copying shap/datasets.py -> build/lib.linux-x86_64-3.6/shap\r\n  copying shap/common.py -> build/lib.linux-x86_64-3.6/shap\r\n  creating build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/kernel.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/pytree.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/explainer.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/linear.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/__init__.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/permutation.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/partition.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/gradient.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/tree.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/mimic.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/sampling.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  copying shap/explainers/bruteforce.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n  creating build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  copying shap/explainers/other/maple.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  copying shap/explainers/other/lime.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  copying shap/explainers/other/coefficent.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  copying shap/explainers/other/__init__.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  copying shap/explainers/other/treegain.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  copying shap/explainers/other/random.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n  creating build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n  copying shap/explainers/deep/deep_pytorch.py -> build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n  copying shap/explainers/deep/__init__.py -> build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n  copying shap/explainers/deep/deep_tf.py -> build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n  creating build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/waterfall.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/embedding.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/colors.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/summary.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/force.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/force_matplotlib.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/partial_dependence.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/__init__.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/monitoring.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/image.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/dependence.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/decision.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/bar.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  copying shap/plots/colorconv.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n  creating build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/plots.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/measures.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/__init__.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/experiments.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/methods.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/metrics.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  copying shap/benchmark/models.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n  creating build/lib.linux-x86_64-3.6/shap/plots/resources\r\n  copying shap/plots/resources/logoSmallGray.png -> build/lib.linux-x86_64-3.6/shap/plots/resources\r\n  copying shap/plots/resources/bundle.js -> build/lib.linux-x86_64-3.6/shap/plots/resources\r\n  copying shap/tree_shap.h -> build/lib.linux-x86_64-3.6/shap\r\n  running build_ext\r\n  numpy.get_include() /home/leonardo/virtual/lib/python3.6/site-packages/numpy/core/include\r\n  building 'shap._cext' extension\r\n  creating build/temp.linux-x86_64-3.6\r\n  creating build/temp.linux-x86_64-3.6/shap\r\n  x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.6m -I/home/leonardo/virtual/include/python3.6m -I/home/leonardo/virtual/lib/python3.6/site-packages/numpy/core/include -c shap/_cext.cc -o build/temp.linux-x86_64-3.6/shap/_cext.o\r\n  shap/_cext.cc:3:10: fatal error: Python.h: No such file or directory\r\n   #include <Python.h>\r\n            ^~~~~~~~~~\r\n  compilation terminated.\r\n  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n\r\n  ERROR: Failed building wheel for shap\r\n  Running setup.py clean for shap\r\nFailed to build shap\r\nInstalling collected packages: shap\r\n    Running setup.py install for shap ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /home/leonardo/virtual/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-tzo_jona/shap/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-tzo_jona/shap/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-33kyy1ha/install-record.txt --single-version-externally-managed --compile --install-headers /home/leonardo/virtual/include/site/python3.6/shap\r\n         cwd: /tmp/pip-install-tzo_jona/shap/\r\n    Complete output (71 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.6\r\n    creating build/lib.linux-x86_64-3.6/shap\r\n    copying shap/__init__.py -> build/lib.linux-x86_64-3.6/shap\r\n    copying shap/datasets.py -> build/lib.linux-x86_64-3.6/shap\r\n    copying shap/common.py -> build/lib.linux-x86_64-3.6/shap\r\n    creating build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/kernel.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/pytree.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/explainer.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/linear.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/__init__.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/permutation.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/partition.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/gradient.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/tree.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/mimic.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/sampling.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    copying shap/explainers/bruteforce.py -> build/lib.linux-x86_64-3.6/shap/explainers\r\n    creating build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    copying shap/explainers/other/maple.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    copying shap/explainers/other/lime.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    copying shap/explainers/other/coefficent.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    copying shap/explainers/other/__init__.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    copying shap/explainers/other/treegain.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    copying shap/explainers/other/random.py -> build/lib.linux-x86_64-3.6/shap/explainers/other\r\n    creating build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n    copying shap/explainers/deep/deep_pytorch.py -> build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n    copying shap/explainers/deep/__init__.py -> build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n    copying shap/explainers/deep/deep_tf.py -> build/lib.linux-x86_64-3.6/shap/explainers/deep\r\n    creating build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/waterfall.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/embedding.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/colors.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/summary.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/force.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/force_matplotlib.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/partial_dependence.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/__init__.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/monitoring.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/image.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/dependence.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/decision.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/bar.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    copying shap/plots/colorconv.py -> build/lib.linux-x86_64-3.6/shap/plots\r\n    creating build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/plots.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/measures.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/__init__.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/experiments.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/methods.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/metrics.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    copying shap/benchmark/models.py -> build/lib.linux-x86_64-3.6/shap/benchmark\r\n    creating build/lib.linux-x86_64-3.6/shap/plots/resources\r\n    copying shap/plots/resources/logoSmallGray.png -> build/lib.linux-x86_64-3.6/shap/plots/resources\r\n    copying shap/plots/resources/bundle.js -> build/lib.linux-x86_64-3.6/shap/plots/resources\r\n    copying shap/tree_shap.h -> build/lib.linux-x86_64-3.6/shap\r\n    running build_ext\r\n    numpy.get_include() /home/leonardo/virtual/lib/python3.6/site-packages/numpy/core/include\r\n    building 'shap._cext' extension\r\n    creating build/temp.linux-x86_64-3.6\r\n    creating build/temp.linux-x86_64-3.6/shap\r\n    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.6m -I/home/leonardo/virtual/include/python3.6m -I/home/leonardo/virtual/lib/python3.6/site-packages/numpy/core/include -c shap/_cext.cc -o build/temp.linux-x86_64-3.6/shap/_cext.o\r\n    shap/_cext.cc:3:10: fatal error: Python.h: No such file or directory\r\n     #include <Python.h>\r\n              ^~~~~~~~~~\r\n    compilation terminated.\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /home/leonardo/virtual/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-tzo_jona/shap/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-tzo_jona/shap/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-33kyy1ha/install-record.txt --single-version-externally-managed --compile --install-headers /home/leonardo/virtual/include/site/python3.6/shap Check the logs for full command output.`\r\n\r\nGrateful for the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1034", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1034/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1034/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1034/events", "html_url": "https://github.com/slundberg/shap/issues/1034", "id": 561244577, "node_id": "MDU6SXNzdWU1NjEyNDQ1Nzc=", "number": 1034, "title": "On generating a general waterfall_plot for a multi-class classification", "user": {"login": "ivan-marroquin", "id": 28459534, "node_id": "MDQ6VXNlcjI4NDU5NTM0", "avatar_url": "https://avatars1.githubusercontent.com/u/28459534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-marroquin", "html_url": "https://github.com/ivan-marroquin", "followers_url": "https://api.github.com/users/ivan-marroquin/followers", "following_url": "https://api.github.com/users/ivan-marroquin/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-marroquin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-marroquin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-marroquin/subscriptions", "organizations_url": "https://api.github.com/users/ivan-marroquin/orgs", "repos_url": "https://api.github.com/users/ivan-marroquin/repos", "events_url": "https://api.github.com/users/ivan-marroquin/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-marroquin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T20:14:51Z", "updated_at": "2020-02-08T22:49:42Z", "closed_at": "2020-02-08T22:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am using Python 3.6.5 on a windows machine with Shap version 0.34.0.\r\n\r\nIn the case of a multi-class classification, a way to generate a waterfall_plot is by using this command:\r\n\r\nshap.waterfall_plot(shap_explainer.expected_value[0], shap_values[0][0], features= pd_test_inputs.iloc[0,:], feature_names= feature_names, show= False)\r\n\r\nThe produced display is based on the first row of samples in both \"shap_values\" and \"pd_test_inputs\"\r\n\r\nIf I would like to build a general waterfall_plot that includes all samples in both \"shap_values\" and \"pd_test_inputs\", what command would be the most indicated:\r\n\r\na) shap.waterfall_plot(shap_explainer.expected_value[0], np.sum(shap_values[0], axis= 0), features= np.sum(pd_test_inputs, axis= 0))\r\n\r\nwhich produced the figure named \"waterfall_first_version.png\" in zip file\r\n\r\nb) shap.waterfall_plot(shap_explainer.expected_value[0], np.sum(np.abs(shap_values[0]), axis= 0), features= np.sum(np.abs(pd_test_inputs), axis= 0))\r\n\r\nwhich produced the figure named \"waterfall_second_version.png\" in zip file\r\n\r\nAlso, I have this suggestion: for symbols in the plot that can't have text inside because of their small size, is it possible to post the text to the right of the symbol?\r\n\r\nOne more thing. Along the x-axis, I noticed this text E[f(X)].  What value is associated with this text?\r\n\r\nMany thanks,\r\n\r\nIvan\r\n\r\n\r\n[multi-class_waterfall_plot.zip](https://github.com/slundberg/shap/files/4167537/multi-class_waterfall_plot.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1033", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1033/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1033/events", "html_url": "https://github.com/slundberg/shap/issues/1033", "id": 561182298, "node_id": "MDU6SXNzdWU1NjExODIyOTg=", "number": 1033, "title": "How to re-scale Shapley values to the original dataset magnitude?", "user": {"login": "sorinmuchi", "id": 6254724, "node_id": "MDQ6VXNlcjYyNTQ3MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6254724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sorinmuchi", "html_url": "https://github.com/sorinmuchi", "followers_url": "https://api.github.com/users/sorinmuchi/followers", "following_url": "https://api.github.com/users/sorinmuchi/following{/other_user}", "gists_url": "https://api.github.com/users/sorinmuchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sorinmuchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sorinmuchi/subscriptions", "organizations_url": "https://api.github.com/users/sorinmuchi/orgs", "repos_url": "https://api.github.com/users/sorinmuchi/repos", "events_url": "https://api.github.com/users/sorinmuchi/events{/privacy}", "received_events_url": "https://api.github.com/users/sorinmuchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-06T18:10:59Z", "updated_at": "2020-07-05T17:37:43Z", "closed_at": "2020-02-06T18:39:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Question\r\nIf I've used a `MinMaxScaler` to normalize my target variable between `[-1, 1]`.  \r\n\r\nHow can I re-scale the Shapley values, so that their magnitude is proportional to that of the target variable `y` in the unscaled dataset?\r\n\r\n\r\n### Motivation\r\nNaively using `inverse_transform` on the `shap_values[0]` matrix does not work, since if I understand correctly the Shapley values represent a change in `y_i`, due to the value of `X_ij`.\r\n\r\nHowever the fact that she Shapley values are scaled to a different range than the target variable makes interpreting them non trivial, especially when looking at the absolute impact of a feature in a `dependence_plot` or a `force_plot`.\r\n \r\n### For reference\r\nThe Shapley values were generated using a `KernelExplainer` on an MLP Regression problem. Scaling of both the independent variables and target variable is generally considered necessary for `MLP Regressors` to converge. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1032", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1032/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1032/events", "html_url": "https://github.com/slundberg/shap/issues/1032", "id": 561038379, "node_id": "MDU6SXNzdWU1NjEwMzgzNzk=", "number": 1032, "title": "SHAP for revealing interdependence of word positions", "user": {"login": "octolis", "id": 46808738, "node_id": "MDQ6VXNlcjQ2ODA4NzM4", "avatar_url": "https://avatars0.githubusercontent.com/u/46808738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/octolis", "html_url": "https://github.com/octolis", "followers_url": "https://api.github.com/users/octolis/followers", "following_url": "https://api.github.com/users/octolis/following{/other_user}", "gists_url": "https://api.github.com/users/octolis/gists{/gist_id}", "starred_url": "https://api.github.com/users/octolis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/octolis/subscriptions", "organizations_url": "https://api.github.com/users/octolis/orgs", "repos_url": "https://api.github.com/users/octolis/repos", "events_url": "https://api.github.com/users/octolis/events{/privacy}", "received_events_url": "https://api.github.com/users/octolis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T14:12:54Z", "updated_at": "2020-02-17T11:36:34Z", "closed_at": "2020-02-17T11:36:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthank you for your great package! \r\nI'm working on the following task. I have a dataset of biological sequences (strings containing ~100-150 letters, every letter is considered as a word and every sequence is a 'sentence'). I've trained a biGRU that is able to distinguish between an original sequence and a sequence with a slightly perturbed order of symbols. I was able to find that some of the positions within the sequences are more important (e.g. having the higher weights) for the prediction. Now what I need is to find whether some of the important positions are interdependent. My question is if it is possible to use SHAP for such a problem and, if yes, I'd appreciate any hints or considerations on the implementation.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1031", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1031/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1031/events", "html_url": "https://github.com/slundberg/shap/issues/1031", "id": 560506122, "node_id": "MDU6SXNzdWU1NjA1MDYxMjI=", "number": 1031, "title": "Issues regarding waterfall_plot on multi-class classification", "user": {"login": "ivan-marroquin", "id": 28459534, "node_id": "MDQ6VXNlcjI4NDU5NTM0", "avatar_url": "https://avatars1.githubusercontent.com/u/28459534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-marroquin", "html_url": "https://github.com/ivan-marroquin", "followers_url": "https://api.github.com/users/ivan-marroquin/followers", "following_url": "https://api.github.com/users/ivan-marroquin/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-marroquin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-marroquin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-marroquin/subscriptions", "organizations_url": "https://api.github.com/users/ivan-marroquin/orgs", "repos_url": "https://api.github.com/users/ivan-marroquin/repos", "events_url": "https://api.github.com/users/ivan-marroquin/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-marroquin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-05T17:01:35Z", "updated_at": "2020-02-06T00:34:44Z", "closed_at": "2020-02-05T18:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have Python 3.6.5 and I am using Shap version 0.34.0 on a windows machine.  The model was trained using XGBClassifier from xgboost 0.90. The trained model consists of six classes.\r\n\r\nI noticed these issues:\r\na) When using command: shap.waterfall_plot(shap_explainer.expected_value, shap_values[0], features= pd_test_inputs.iloc[0,:], feature_names= feature_names, show= True)\r\n\r\ngives this warning message: \r\n\r\nwaterfall_plot requires a scalar expected_value of the model output as the first parameter, but you have passed an array as the first parameter! Try shap.waterfall_plot(explainer.expected_value, shap_values[0], X[0]) or for multi-output models try shap.waterfall_plot(explainer.expected_value[0], shap_values[0][0], X[0]).\r\n\r\nHowever, the command: print(\" shap explainer Expected Values \", shap_explainer.expected_value) gives a single numerical value.\r\n\r\nis it possible that shap_explainer.expected_value is not working? It seems that this command should generate an array with # samples equal to # classes\r\n\r\nb) When using command: shap.waterfall_plot(shap_explainer.expected_value[0], shap_values[0], features= pd_test_inputs, feature_names= feature_names, show= True)\r\n\r\ngives this warning message: The waterfall_plot can currently only plot a single explanation but a matrix of explanations was passed!\r\n\r\nHowever, \"shap_values[0]\" and \"pd_test_inputs\" are matrices of # samples x # features, and according to docstrings the command waterfall_plot should be able to handle them.\r\n\r\nc) When using the command: shap.waterfall_plot(shap_explainer.expected_value[0], shap_values[0][0], features= pd_test_inputs.iloc[0,:], feature_names= feature_names, show= False)\r\n\r\nproduces the waterfall plot. But, how this command can compute the evidence of all other features when only one was provided (features= pd_test_inputs.iloc[0,:])? Also, what does the values on the vertical axis mean? What about the values in the plot itself? \r\n\r\nThe expected value is -1.70, it seems that the position of E[f(X)] is incorrect along the x-axis.\r\n\r\nI attached a zip file to reproduce the reported incident. Hope this helps,\r\n\r\nIvan\r\n\r\n\r\n[testing_shap_waterfall_plot.zip](https://github.com/slundberg/shap/files/4160945/testing_shap_waterfall_plot.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1030", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1030/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1030/events", "html_url": "https://github.com/slundberg/shap/issues/1030", "id": 560489250, "node_id": "MDU6SXNzdWU1NjA0ODkyNTA=", "number": 1030, "title": "plot_type=\"compact_dot\" not working anymore", "user": {"login": "teto1991", "id": 15910227, "node_id": "MDQ6VXNlcjE1OTEwMjI3", "avatar_url": "https://avatars2.githubusercontent.com/u/15910227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teto1991", "html_url": "https://github.com/teto1991", "followers_url": "https://api.github.com/users/teto1991/followers", "following_url": "https://api.github.com/users/teto1991/following{/other_user}", "gists_url": "https://api.github.com/users/teto1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/teto1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teto1991/subscriptions", "organizations_url": "https://api.github.com/users/teto1991/orgs", "repos_url": "https://api.github.com/users/teto1991/repos", "events_url": "https://api.github.com/users/teto1991/events{/privacy}", "received_events_url": "https://api.github.com/users/teto1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-05T16:33:59Z", "updated_at": "2020-02-05T18:49:20Z", "closed_at": "2020-02-05T17:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nat the moment (Python 3.7.5 and shap 0.34) when using the command summary_plot on the interaction values (`shap.summary_plot(interaction_vals, X, max_display=5, plot_type=\"compact_dot\")`) I get a \"normal\" summary, similar to the one for shap values. \r\nWhen removing the option `plot_type` or with `plot_type=\"dot\"` instead I get the correct graph. Given the command runs smoothly no error is produced.\r\nLooking at the documentations and older commits this should be a novel bug. In previous versions of shap (not sure from which one) there was no issue. \r\n\r\n\r\n \r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1028", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1028/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1028/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1028/events", "html_url": "https://github.com/slundberg/shap/issues/1028", "id": 558863185, "node_id": "MDU6SXNzdWU1NTg4NjMxODU=", "number": 1028, "title": "Feature Request: add support for sklearn.ensemble.HistGradientBoostingRegressor / Classifier to TreeExplainer", "user": {"login": "ogrisel", "id": 89061, "node_id": "MDQ6VXNlcjg5MDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogrisel", "html_url": "https://github.com/ogrisel", "followers_url": "https://api.github.com/users/ogrisel/followers", "following_url": "https://api.github.com/users/ogrisel/following{/other_user}", "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions", "organizations_url": "https://api.github.com/users/ogrisel/orgs", "repos_url": "https://api.github.com/users/ogrisel/repos", "events_url": "https://api.github.com/users/ogrisel/events{/privacy}", "received_events_url": "https://api.github.com/users/ogrisel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-03T06:02:34Z", "updated_at": "2020-02-19T19:48:56Z", "closed_at": "2020-02-08T01:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Steps to reproduce:\r\n\r\n```python\r\nimport shap\r\nfrom sklearn.ensemble import GradientBoostingRegressor\r\nfrom sklearn.experimental import enable_hist_gradient_boosting\r\nfrom sklearn.ensemble import HistGradientBoostingRegressor\r\n\r\n# load JS visualization code to notebook\r\nshap.initjs()\r\n\r\n# train a tree-based model\r\nX, y = shap.datasets.diabetes()\r\n\r\n# model = GradientBoostingRegressor().fit(X, y)  # works for exact GBRT\r\nmodel = HistGradientBoostingRegressor().fit(X, y)\r\n\r\n# explain the model's predictions using SHAP\r\nexplainer = shap.TreeExplainer(model)\r\nshap_values = explainer.shap_values(X)\r\n\r\n# visualize the first prediction's explanation (use matplotlib=True\r\n# to avoid Javascript)\r\nshap.force_plot(explainer.expected_value, shap_values[0, :], X.iloc[0, :])\r\n\r\n```\r\n```python-traceback\r\n/tmp/shap_demo.py in \r\n     15 # explain the model's predictions using SHAP\r\n     16 \r\n---> 17 explainer = shap.TreeExplainer(model)\r\n     18 \r\n     19 shap_values = explainer.shap_values(X)\r\n\r\n~/miniconda3/envs/pylatest/lib/python3.7/site-packages/shap/explainers/tree.py in __init__(self, model, data, model_output, feature_perturbation, **deprecated_options)\r\n    110         self.feature_perturbation = feature_perturbation\r\n    111         self.expected_value = None\r\n--> 112         self.model = TreeEnsemble(model, self.data, self.data_missing)\r\n    113 \r\n    114         if feature_perturbation not in feature_perturbation_codes:\r\n\r\n~/miniconda3/envs/pylatest/lib/python3.7/site-packages/shap/explainers/tree.py in __init__(self, model, data, data_missing)\r\n    752             self.tree_output = \"probability\"\r\n    753         else:\r\n--> 754             raise Exception(\"Model type not yet supported by TreeExplainer: \" + str(type(model)))\r\n    755 \r\n    756         # build a dense numpy version of all the tree objects\r\n\r\nException: Model type not yet supported by TreeExplainer: \r\n```\r\n\r\n## Implementation notes\r\n\r\nThe code of the new `HistGradientBoostingRegressor` classifier is different from other tree-based models in scikit-learn but it should quite easy to adapt the code to leverage de structure of the `model._predictors` collection. The source code of the `TreePredictor` datastructure is here:\r\n\r\nhttps://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/predictor.py\r\nhttps://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/_predictor.pyx\r\n\r\n\r\nThe nodes of the predictors are detailed in https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/common.pxd\r\nwhich is mapped to the PREDICTOR_RECORD_DTYPE array datatype:\r\nhttps://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/common.pyx\r\n\r\n```python\r\nPREDICTOR_RECORD_DTYPE = np.dtype([\r\n    ('value', Y_DTYPE),\r\n    ('count', np.uint32),\r\n    ('feature_idx', np.uint32),\r\n    ('threshold', X_DTYPE),\r\n    ('missing_go_to_left', np.uint8),\r\n    ('left', np.uint32),\r\n    ('right', np.uint32),\r\n    ('gain', Y_DTYPE),\r\n    ('depth', np.uint32),\r\n    ('is_leaf', np.uint8),\r\n    ('bin_threshold', X_BINNED_DTYPE),\r\n])\r\n```\r\n\r\nThis is considered private API of scikit-learn but it should be quite easy to update the explainer code in the unlikely case of change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1026", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1026/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1026/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1026/events", "html_url": "https://github.com/slundberg/shap/issues/1026", "id": 558102872, "node_id": "MDU6SXNzdWU1NTgxMDI4NzI=", "number": 1026, "title": "Call of the shap_values() raises ValueError", "user": {"login": "devforfu", "id": 6022009, "node_id": "MDQ6VXNlcjYwMjIwMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6022009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devforfu", "html_url": "https://github.com/devforfu", "followers_url": "https://api.github.com/users/devforfu/followers", "following_url": "https://api.github.com/users/devforfu/following{/other_user}", "gists_url": "https://api.github.com/users/devforfu/gists{/gist_id}", "starred_url": "https://api.github.com/users/devforfu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devforfu/subscriptions", "organizations_url": "https://api.github.com/users/devforfu/orgs", "repos_url": "https://api.github.com/users/devforfu/repos", "events_url": "https://api.github.com/users/devforfu/events{/privacy}", "received_events_url": "https://api.github.com/users/devforfu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-31T12:27:12Z", "updated_at": "2020-01-31T21:08:53Z", "closed_at": "2020-01-31T19:19:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following model that uses `SGDClassifier`:\r\n```python\r\nfrom sklearn.linear_model import SGDClassifier\r\nsgd = SGDClassifier()\r\nX, y = create_dataset()  # pandas data frame and numpy array, respectively\r\nsgd.fit(X, y)\r\nmean, cov = X.mean(), X.cov()\r\nexp = shap.LinearExplainer(sgd, (mean, cov))\r\nshap_values = exp.shap_values(X)\r\n```\r\nIt is very similar to the example provided in the README. However, I am getting the error:\r\n```\r\nValueError: Length of passed values is <num_of_rows>, index implies <num_of_cols>\r\n```\r\nI cannot understand what it really means. I've tried to transpose the matrix but in this case, I am getting the error:\r\n```\r\nValueError: operands could not be broadcast together with shapes ...\r\n```\r\nDo you know what it could be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1025", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1025/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1025/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1025/events", "html_url": "https://github.com/slundberg/shap/issues/1025", "id": 558093134, "node_id": "MDU6SXNzdWU1NTgwOTMxMzQ=", "number": 1025, "title": "Add NGBoost support in TreeExplainer", "user": {"login": "GitAnalyst", "id": 23650341, "node_id": "MDQ6VXNlcjIzNjUwMzQx", "avatar_url": "https://avatars1.githubusercontent.com/u/23650341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GitAnalyst", "html_url": "https://github.com/GitAnalyst", "followers_url": "https://api.github.com/users/GitAnalyst/followers", "following_url": "https://api.github.com/users/GitAnalyst/following{/other_user}", "gists_url": "https://api.github.com/users/GitAnalyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/GitAnalyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GitAnalyst/subscriptions", "organizations_url": "https://api.github.com/users/GitAnalyst/orgs", "repos_url": "https://api.github.com/users/GitAnalyst/repos", "events_url": "https://api.github.com/users/GitAnalyst/events{/privacy}", "received_events_url": "https://api.github.com/users/GitAnalyst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T12:05:50Z", "updated_at": "2020-01-31T20:46:15Z", "closed_at": "2020-01-31T20:46:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, there is a new tree algorithm in town called Natural Gradient Boosting - [NGBoost](https://stanfordmlgroup.github.io/projects/ngboost/). It doesn't have documentation yet, but its main appeal is that it brings probabilistic predictions, which is something new for regression tasks. It would be great to add this to TreeExplainer support, it follows Scikit-Learn conventions.\r\nExample:\r\n```python\r\nimport shap\r\nimport ngboost\r\nfrom ngboost.learners import default_tree_learner\r\nfrom ngboost.distns import Normal\r\nfrom ngboost.scores import MLE\r\n\r\ndataset = load_boston()\r\nX, y = dataset.data, dataset.target\r\n\r\nmodel = NGBRegressor(Base=default_tree_learner, Dist=Normal, Score=MLE).fit(X, y)\r\nprint(type(model))\r\n```\r\nReturns type:\r\n```\r\n<class 'ngboost.api.NGBRegressor'>\r\n```\r\nTreeExplainer returns an exception:\r\n```python\r\nexplainer = shap.TreeExplainer(model)\r\nshap_values = explainer.shap_values(X)\r\n```\r\n```\r\nException: Model type not yet supported by TreeExplainer\r\n```\r\n\r\nModel predicts as usual:\r\n```python\r\nX_sample = X[0:3,:]\r\nngb.predict(X_sample) # point predictions\r\n```\r\nAnd for each observation we can predict probability distribution:\r\n```python\r\ndist = ngb.pred_dist(X_sample)\r\nprint(dist.loc[0:3]) # mean (same as point prediction)\r\nprint(dist.scale[0:3]) # standard deviation associated to point prediction\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1024", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1024/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1024/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1024/events", "html_url": "https://github.com/slundberg/shap/issues/1024", "id": 557577474, "node_id": "MDU6SXNzdWU1NTc1Nzc0NzQ=", "number": 1024, "title": "Output Value wrong", "user": {"login": "jrinvictus", "id": 52086067, "node_id": "MDQ6VXNlcjUyMDg2MDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/52086067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrinvictus", "html_url": "https://github.com/jrinvictus", "followers_url": "https://api.github.com/users/jrinvictus/followers", "following_url": "https://api.github.com/users/jrinvictus/following{/other_user}", "gists_url": "https://api.github.com/users/jrinvictus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrinvictus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrinvictus/subscriptions", "organizations_url": "https://api.github.com/users/jrinvictus/orgs", "repos_url": "https://api.github.com/users/jrinvictus/repos", "events_url": "https://api.github.com/users/jrinvictus/events{/privacy}", "received_events_url": "https://api.github.com/users/jrinvictus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-30T15:41:23Z", "updated_at": "2020-02-04T15:59:07Z", "closed_at": "2020-02-03T14:48:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Python 3.7\r\nShap 0.33.0**\r\n\r\nI'm seeing different output values compared to the predicted value.  Using the FICO Heloc dataset, for row 13 in the X_test df, the probability should be .45 but the output value in the force_plot is showing .28.  I have reproduced the code below.\r\n\r\nHere are some other values that aren't lining up:\r\ni=17\r\npred = .52\r\noutput value = .72\r\n\r\ni=20\r\npred = .15\r\noutput value = .01\r\n\r\ni=33\r\npred = .99\r\noutput value = .9\r\n\r\n```\r\nimport pandas as pd #for manipulating data\r\nimport numpy as np #for manipulating data\r\nfrom sklearn.model_selection import train_test_split\r\nimport xgboost as xgb\r\nimport shap\r\n\r\ndf=pd.read_csv('heloc_dataset.csv')\r\n\r\ntarget='RiskPerformance'\r\ny=df['RiskPerformance']\r\ndf=df.drop(['RiskPerformance'],1)\r\n\r\nX_train,X_test,y_train,y_test = train_test_split(df, y, test_size=0.2, random_state=100)\r\n\r\nfeature_names=X_train.columns\r\n\r\nmodel = xgb.XGBClassifier(max_depth=6,\r\n                    subsample=.5,\r\n                    objective='binary:logistic',\r\n                    n_estimators=50,\r\n                    learning_rate = 1)\r\n\r\nmodel.fit(X_train.values, y_train.values)\r\n\r\nexplainer = shap.TreeExplainer(model)\r\nexpected_value = explainer.expected_value\r\nshap_values = explainer.shap_values(X_test)\r\n\r\ni=12\r\nmodel.predict_proba(X_test.iloc[i])\r\n\r\nshap.force_plot(expected_value, shap_values[i], X_test.iloc[i], link='logit', matplotlib=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1020", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1020/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1020/events", "html_url": "https://github.com/slundberg/shap/issues/1020", "id": 556794430, "node_id": "MDU6SXNzdWU1NTY3OTQ0MzA=", "number": 1020, "title": "Stacked force plot visualisation bug?", "user": {"login": "alexcoca", "id": 30216068, "node_id": "MDQ6VXNlcjMwMjE2MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/30216068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcoca", "html_url": "https://github.com/alexcoca", "followers_url": "https://api.github.com/users/alexcoca/followers", "following_url": "https://api.github.com/users/alexcoca/following{/other_user}", "gists_url": "https://api.github.com/users/alexcoca/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcoca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcoca/subscriptions", "organizations_url": "https://api.github.com/users/alexcoca/orgs", "repos_url": "https://api.github.com/users/alexcoca/repos", "events_url": "https://api.github.com/users/alexcoca/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcoca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-29T11:14:49Z", "updated_at": "2020-03-06T10:47:24Z", "closed_at": "2020-02-04T17:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @slundberg,\r\n\r\nFirst, thanks for your work on this library, it's amazing!\r\n\r\nI was experimenting with explaining an SVM multiclass classification on the Wine dataset. When playing with the stacked force plots,  I selected the the `effects` of a particular as the `y` axis and also sorted the `x` in ascending order for the same value. I'm nonetheless puzzled, as my expectation is that the I'm displaying the shap values, but this doesn't seem the case? \r\n\r\nIn the image attached, you can see that shap value for instance `2` is `0.1588` but the point I clicked on is at the bottom of the through whereas the the shap value for instance `15` which comes before this is `0.1049`. Yet, the `y` value of `15` on the graph is higher than the `y` value of `2`... I would be grateful if you could explain what this plot displays in case I am confused... The only way this could occur is if the feature effect was calculated with respect to different \"baseline\" values for the two instance, but this cannot be the case since we start with the same value as the separate force plots show ...\r\n\r\n![image](https://user-images.githubusercontent.com/30216068/73351867-d3397e00-4287-11ea-9f47-99d377943da4.png)\r\n\r\nThank you in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1017", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1017/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1017/events", "html_url": "https://github.com/slundberg/shap/issues/1017", "id": 554957513, "node_id": "MDU6SXNzdWU1NTQ5NTc1MTM=", "number": 1017, "title": "Fetch argument None has invalid type <class 'NoneType'> error", "user": {"login": "luizhav90", "id": 45186035, "node_id": "MDQ6VXNlcjQ1MTg2MDM1", "avatar_url": "https://avatars2.githubusercontent.com/u/45186035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luizhav90", "html_url": "https://github.com/luizhav90", "followers_url": "https://api.github.com/users/luizhav90/followers", "following_url": "https://api.github.com/users/luizhav90/following{/other_user}", "gists_url": "https://api.github.com/users/luizhav90/gists{/gist_id}", "starred_url": "https://api.github.com/users/luizhav90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luizhav90/subscriptions", "organizations_url": "https://api.github.com/users/luizhav90/orgs", "repos_url": "https://api.github.com/users/luizhav90/repos", "events_url": "https://api.github.com/users/luizhav90/events{/privacy}", "received_events_url": "https://api.github.com/users/luizhav90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-24T21:15:31Z", "updated_at": "2020-04-27T18:50:35Z", "closed_at": "2020-01-24T21:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to evaluate a tensorflow model. But I keep hitting the folowing error when I access the shap_values:\r\n\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-17-9e7c19739be9>\", line 1, in <module>\r\n    runfile('/Prod codes/NN_TF_nested_SHAP.py', wdir='/Prod codes')\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 668, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\spyder_kernels\\customize\\spydercustomize.py\", line 108, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n\r\n  File \"G/Prod codes/NN_TF_nested_SHAP.py\", line 319, in <module>\r\n    shap_values = e.shap_values(X_test)\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\shap\\explainers\\gradient.py\", line 108, in shap_values\r\n    return self.explainer.shap_values(X, nsamples, ranked_outputs, output_rank_order)\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\shap\\explainers\\gradient.py\", line 248, in shap_values\r\n    grads.append(self.run(self.gradient(find), self.model_inputs, batch))\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\shap\\explainers\\gradient.py\", line 295, in run\r\n    return self.session.run(out, feed_dict)\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 889, in run\r\n    # Validate and process fetches.\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1105, in _run\r\n    return []\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 414, in __init__\r\n    for fetch in self._fetch_mapper.unique_fetches():\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 234, in for_fetch\r\n    # Look for a handler in the registered expansions.\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 341, in __init__\r\n    return self._unique_fetches\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 341, in <listcomp>\r\n    return self._unique_fetches\r\n\r\n  File \"\\.conda\\envs\\TF14\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 231, in for_fetch\r\n    elif isinstance(fetch, dict):\r\n\r\nTypeError: Fetch argument None has invalid type <class 'NoneType'>\r\n\r\n```\r\n\r\nI embedded my training inside the function run_train... made it easier to implement cross-validation...\r\nI also create the graph inside a function that returns the graph and a list of tensors\r\n\r\n```\r\nwith tf.Session(graph=graph) as sess:\r\n    \r\n    losses, accs, val_accs = run_train(sess, X_train, y_train, X_val, y_val, tensors,opt_model_hp)\r\n    acc_test, y_score, test_logits  = sess.run([tensors[\"accuracy\"], tensors[\"predicted\"], tensors[\"logits\"]], feed_dict={'X:0': X_test, 'y:0': y_test})\r\n    \r\n    #SHAP\r\n    e = shap.GradientExplainer((tensors[\"input\"],tensors[\"output\"]),X_train,session=sess)\r\n    shap_values = e.shap_values(X_test)\r\n```  \r\nAny ideas??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/1013", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/1013/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/1013/events", "html_url": "https://github.com/slundberg/shap/issues/1013", "id": 554280258, "node_id": "MDU6SXNzdWU1NTQyODAyNTg=", "number": 1013, "title": "AssertionError: Additivity check failed in TreeExplainer! Please report this on GitHub.", "user": {"login": "Research2017", "id": 27821120, "node_id": "MDQ6VXNlcjI3ODIxMTIw", "avatar_url": "https://avatars3.githubusercontent.com/u/27821120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Research2017", "html_url": "https://github.com/Research2017", "followers_url": "https://api.github.com/users/Research2017/followers", "following_url": "https://api.github.com/users/Research2017/following{/other_user}", "gists_url": "https://api.github.com/users/Research2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/Research2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Research2017/subscriptions", "organizations_url": "https://api.github.com/users/Research2017/orgs", "repos_url": "https://api.github.com/users/Research2017/repos", "events_url": "https://api.github.com/users/Research2017/events{/privacy}", "received_events_url": "https://api.github.com/users/Research2017/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T16:51:40Z", "updated_at": "2020-01-28T21:41:43Z", "closed_at": "2020-01-28T21:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am getting the following error message asking to report this on Github.\r\n\r\nTraining until validation scores don't improve for 50 rounds\r\n[1000]\tvalid_0's binary_logloss: 0.671314\r\nEarly stopping, best iteration is:\r\n[1912]\tvalid_0's binary_logloss: 0.66831\r\n 97%|=================== | 4470/4601 [00:32<00:00]       Traceback (most recent call last):\r\n  File \"Epi.py\", line 80, in <module>\r\n    shap_values = explainer.shap_values(teX)\r\n  File \"/usr/local/lib/python3.7/site-packages/shap/explainers/tree.py\", line 327, in shap_values\r\n    self.assert_additivity(out, self.model.predict(X))\r\n  File \"/usr/local/lib/python3.7/site-packages/shap/explainers/tree.py\", line 438, in assert_additivity\r\n    assert np.max(np.abs(val - model_output) / (np.abs(val) + 1e-2)) < 1e-2, err_msg\r\nAssertionError: Additivity check failed in TreeExplainer! Please report this on GitHub.\r\n\r\nCould you tell me how to fix this, please?\r\n\r\nMany thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/998", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/998/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/998/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/998/events", "html_url": "https://github.com/slundberg/shap/issues/998", "id": 549823267, "node_id": "MDU6SXNzdWU1NDk4MjMyNjc=", "number": 998, "title": "Corrected sum of SHAP values ", "user": {"login": "bgreenwell", "id": 3777755, "node_id": "MDQ6VXNlcjM3Nzc3NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3777755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgreenwell", "html_url": "https://github.com/bgreenwell", "followers_url": "https://api.github.com/users/bgreenwell/followers", "following_url": "https://api.github.com/users/bgreenwell/following{/other_user}", "gists_url": "https://api.github.com/users/bgreenwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgreenwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgreenwell/subscriptions", "organizations_url": "https://api.github.com/users/bgreenwell/orgs", "repos_url": "https://api.github.com/users/bgreenwell/repos", "events_url": "https://api.github.com/users/bgreenwell/events{/privacy}", "received_events_url": "https://api.github.com/users/bgreenwell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-14T21:17:06Z", "updated_at": "2020-02-05T22:13:18Z", "closed_at": "2020-02-05T22:13:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@slundberg I\u2019m curious about the approach used to correct the sum of the SHAP values on lines 140-151 in sampling.py. Just curious as to why this particular approach was used as opposed to a simple rescaling? Thanks in advance \ud83d\ude4f.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/992", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/992/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/992/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/992/events", "html_url": "https://github.com/slundberg/shap/issues/992", "id": 547808302, "node_id": "MDU6SXNzdWU1NDc4MDgzMDI=", "number": 992, "title": "marginal effect dependence plot error", "user": {"login": "aymoawad", "id": 29211837, "node_id": "MDQ6VXNlcjI5MjExODM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29211837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aymoawad", "html_url": "https://github.com/aymoawad", "followers_url": "https://api.github.com/users/aymoawad/followers", "following_url": "https://api.github.com/users/aymoawad/following{/other_user}", "gists_url": "https://api.github.com/users/aymoawad/gists{/gist_id}", "starred_url": "https://api.github.com/users/aymoawad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aymoawad/subscriptions", "organizations_url": "https://api.github.com/users/aymoawad/orgs", "repos_url": "https://api.github.com/users/aymoawad/repos", "events_url": "https://api.github.com/users/aymoawad/events{/privacy}", "received_events_url": "https://api.github.com/users/aymoawad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-10T01:08:13Z", "updated_at": "2020-03-03T15:44:17Z", "closed_at": "2020-02-04T18:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Minor issue, just bringing it to your attention: it looks like the `shap.dependence_plot((\"feat_name\",\"feat_name\"), shap_interaction_values, X)` to extract marginal effect (or interactional effects) does not work anymore in 0.34. It was a convenient syntax.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/991", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/991/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/991/events", "html_url": "https://github.com/slundberg/shap/issues/991", "id": 547599318, "node_id": "MDU6SXNzdWU1NDc1OTkzMTg=", "number": 991, "title": "Waterfall_plot info", "user": {"login": "teto1991", "id": 15910227, "node_id": "MDQ6VXNlcjE1OTEwMjI3", "avatar_url": "https://avatars2.githubusercontent.com/u/15910227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teto1991", "html_url": "https://github.com/teto1991", "followers_url": "https://api.github.com/users/teto1991/followers", "following_url": "https://api.github.com/users/teto1991/following{/other_user}", "gists_url": "https://api.github.com/users/teto1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/teto1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teto1991/subscriptions", "organizations_url": "https://api.github.com/users/teto1991/orgs", "repos_url": "https://api.github.com/users/teto1991/repos", "events_url": "https://api.github.com/users/teto1991/events{/privacy}", "received_events_url": "https://api.github.com/users/teto1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-09T16:51:21Z", "updated_at": "2020-01-09T19:19:40Z", "closed_at": "2020-01-09T18:46:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was eager to try the new waterfall plot feature and I got no problem creating the plot with one sample:\r\n\r\n`shap.waterfall_plot(explainer.expected_value, shap_values[0,:], feature_names=X.columns.values, max_display=5, show=True)`\r\n![image](https://user-images.githubusercontent.com/15910227/72086203-d1267400-3306-11ea-9d46-2aa8430d2be0.png)\r\n\r\n\r\nThen I wanted to try it over multiple samples, e.g.: \r\n`shap.waterfall_plot(explainer.expected_value, shap_values[:10,:], feature_names=X.columns.values, max_display=20, show=True)`\r\nor\r\n`shap.waterfall_plot(explainer.expected_value, train_shap_values[:10,:], features=X.iloc[:10,:], max_display=20, show=True)`\r\nbut both return errors (despite being different errors).\r\n\r\nSince there is no clear info about the waterfall plot, I was wandering if it is actually possible to produce this type of plot for multiple samples. I couldn't find any info neither among the issues nor in readthedocs. \r\n\r\nThank you for any hints, and great job to all the people that contributed to SHAP! \r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/984", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/984/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/984/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/984/events", "html_url": "https://github.com/slundberg/shap/issues/984", "id": 545346283, "node_id": "MDU6SXNzdWU1NDUzNDYyODM=", "number": 984, "title": "Tree.Explainer giving different shap values when training xgboost with sparse matrix vs. Pandas DataFrame", "user": {"login": "dwoodlock", "id": 5075821, "node_id": "MDQ6VXNlcjUwNzU4MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5075821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwoodlock", "html_url": "https://github.com/dwoodlock", "followers_url": "https://api.github.com/users/dwoodlock/followers", "following_url": "https://api.github.com/users/dwoodlock/following{/other_user}", "gists_url": "https://api.github.com/users/dwoodlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwoodlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwoodlock/subscriptions", "organizations_url": "https://api.github.com/users/dwoodlock/orgs", "repos_url": "https://api.github.com/users/dwoodlock/repos", "events_url": "https://api.github.com/users/dwoodlock/events{/privacy}", "received_events_url": "https://api.github.com/users/dwoodlock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-04T23:43:03Z", "updated_at": "2020-01-05T22:14:56Z", "closed_at": "2020-01-05T22:14:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I train an XGBoost model with data created from a Pandas DataFrame, I get very different shap_values than when I train the model with the same data as a sparse matrix.  I don't know why and I don't know which is correct.  I would like sparse to work as I'm using the 'out of core' learning feature of xgboost beta which only works from libsvm files (which behave in the manner that sparse matrices do).  \r\n\r\nTo recreate, take your Census Income Classification for XGBoost notebook and change your second code cell to:\r\nX, y = shap.datasets.adult()\r\nX_display, y_display = shap.datasets.adult(display=True)\r\n\r\ncols = X.columns\r\nX = scipy.sparse.csr_matrix(X.values)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=7)\r\nd_train = xgboost.DMatrix(X_train, label=y_train, feature_names=cols)\r\nd_test = xgboost.DMatrix(X_test, label=y_test, feature_names=cols) \r\n\r\nYou'll see the features that are important in the summary plot have changed.  Please advise.  \r\nDon\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/980", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/980/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/980/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/980/events", "html_url": "https://github.com/slundberg/shap/issues/980", "id": 544935137, "node_id": "MDU6SXNzdWU1NDQ5MzUxMzc=", "number": 980, "title": "TypeError thrown with latest Numpy version (1.18.0)", "user": {"login": "sagrawal128", "id": 44296801, "node_id": "MDQ6VXNlcjQ0Mjk2ODAx", "avatar_url": "https://avatars3.githubusercontent.com/u/44296801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagrawal128", "html_url": "https://github.com/sagrawal128", "followers_url": "https://api.github.com/users/sagrawal128/followers", "following_url": "https://api.github.com/users/sagrawal128/following{/other_user}", "gists_url": "https://api.github.com/users/sagrawal128/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagrawal128/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagrawal128/subscriptions", "organizations_url": "https://api.github.com/users/sagrawal128/orgs", "repos_url": "https://api.github.com/users/sagrawal128/repos", "events_url": "https://api.github.com/users/sagrawal128/events{/privacy}", "received_events_url": "https://api.github.com/users/sagrawal128/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-03T10:25:54Z", "updated_at": "2020-01-03T10:33:22Z", "closed_at": "2020-01-03T10:33:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all!\r\nThanks for the wonderful library!\r\nI would like to highlight that the shap plots would be throwing the following error with the latest numpy version:\r\n`Typeerror: 'float' object cannot be interpreted as an integer`\r\nThis is because the `np.linspace` in the code is still using float division for `num` argument whereas numpy has made it strict to set `num` argument as an integer from 1.18.0. Check the numpy change here: https://github.com/numpy/numpy/commit/f4dfe833e3e037bb69113f7250fad3699f918cfc\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/979", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/979/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/979/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/979/events", "html_url": "https://github.com/slundberg/shap/issues/979", "id": 544496300, "node_id": "MDU6SXNzdWU1NDQ0OTYzMDA=", "number": 979, "title": "IndexError: list index out of range", "user": {"login": "ibuda", "id": 42291858, "node_id": "MDQ6VXNlcjQyMjkxODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/42291858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuda", "html_url": "https://github.com/ibuda", "followers_url": "https://api.github.com/users/ibuda/followers", "following_url": "https://api.github.com/users/ibuda/following{/other_user}", "gists_url": "https://api.github.com/users/ibuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuda/subscriptions", "organizations_url": "https://api.github.com/users/ibuda/orgs", "repos_url": "https://api.github.com/users/ibuda/repos", "events_url": "https://api.github.com/users/ibuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-02T09:04:24Z", "updated_at": "2020-02-01T07:17:05Z", "closed_at": "2020-02-01T07:17:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I updated the package to the latest version 0.34 to reproduce some of the newly reported issues and noticed that for some reason the fix #745 is not included in current package.  \r\n\r\nhttps://github.com/slundberg/shap/blob/cf4e9b04bd369be0949d67cc15a1743f8a5c1b1b/shap/explainers/tree.py#L1362\r\n\r\nFor those who face this same issue, you can install the latest version from git repository by running:\r\n```\r\npip install git+https://github.com/slundberg/shap\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/974", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/974/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/974/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/974/events", "html_url": "https://github.com/slundberg/shap/issues/974", "id": 542830433, "node_id": "MDU6SXNzdWU1NDI4MzA0MzM=", "number": 974, "title": "no output after shap.initjs() no js symbol", "user": {"login": "trackerlyj", "id": 8487563, "node_id": "MDQ6VXNlcjg0ODc1NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8487563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trackerlyj", "html_url": "https://github.com/trackerlyj", "followers_url": "https://api.github.com/users/trackerlyj/followers", "following_url": "https://api.github.com/users/trackerlyj/following{/other_user}", "gists_url": "https://api.github.com/users/trackerlyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/trackerlyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trackerlyj/subscriptions", "organizations_url": "https://api.github.com/users/trackerlyj/orgs", "repos_url": "https://api.github.com/users/trackerlyj/repos", "events_url": "https://api.github.com/users/trackerlyj/events{/privacy}", "received_events_url": "https://api.github.com/users/trackerlyj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-27T10:36:03Z", "updated_at": "2019-12-29T05:59:10Z", "closed_at": "2019-12-29T05:59:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nthanks for this fantastic tool\r\nbut I can not see any figure after shap.force_plot() ,with no error or warning \r\nI am using anaconda ipynotebook ,py3.6 \r\n![WX20191227-183914](https://user-images.githubusercontent.com/8487563/71514132-3c6c5100-28d8-11ea-977c-d11e71175485.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/973", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/973/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/973/events", "html_url": "https://github.com/slundberg/shap/issues/973", "id": 542687871, "node_id": "MDU6SXNzdWU1NDI2ODc4NzE=", "number": 973, "title": "TypeError Shap Value", "user": {"login": "santiagovasquez99", "id": 59267103, "node_id": "MDQ6VXNlcjU5MjY3MTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/59267103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santiagovasquez99", "html_url": "https://github.com/santiagovasquez99", "followers_url": "https://api.github.com/users/santiagovasquez99/followers", "following_url": "https://api.github.com/users/santiagovasquez99/following{/other_user}", "gists_url": "https://api.github.com/users/santiagovasquez99/gists{/gist_id}", "starred_url": "https://api.github.com/users/santiagovasquez99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santiagovasquez99/subscriptions", "organizations_url": "https://api.github.com/users/santiagovasquez99/orgs", "repos_url": "https://api.github.com/users/santiagovasquez99/repos", "events_url": "https://api.github.com/users/santiagovasquez99/events{/privacy}", "received_events_url": "https://api.github.com/users/santiagovasquez99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-26T22:48:51Z", "updated_at": "2019-12-27T20:47:59Z", "closed_at": "2019-12-27T20:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have training Decision Tree model:  \r\n\r\n`clf = DecisionTreeClassifier(random_state=1)\r\nparam_grid = {'classifier__max_depth':np.arange(5, 15),\r\n              'classifier__criterion':['gini', 'entropy'],\r\n              'classifier__min_samples_leaf':np.arange(5, 20, 5)}\r\ngrid_search = GridSearchCV(model_pipeline,\r\n                           param_grid=param_grid,\r\n                           n_jobs=5,\r\n                           cv = 3,\r\n                           verbose=2)\r\ngrid_search.fit(X_train, y_train)` \r\n\r\n`k_explainer = shap.KernelExplainer(clf.predict,\r\n                                   X_train.iloc[row_to_show],\r\n                                   feature_dependence=\"independent\",\r\n                                   model_output=\"probability\")`\r\n\r\n`shap_values = k_explainer.shap_values(np.array(X_train.iloc[row_to_show]), l1_reg=\"bic\")`\r\n\r\nAnd I have this error \r\n\r\n![Screenshot from 2019-12-26 13-32-52](https://user-images.githubusercontent.com/59267103/71492744-a832b900-2807-11ea-99fc-a92bb89f65ec.png)\r\nurl)\r\n\r\n@slundberg Your help is much appreciated.\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/971", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/971/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/971/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/971/events", "html_url": "https://github.com/slundberg/shap/issues/971", "id": 542122263, "node_id": "MDU6SXNzdWU1NDIxMjIyNjM=", "number": 971, "title": "\"ValueError: minvalue must be less than or equal to maxvalue\" when calling summary_plot", "user": {"login": "daanpdebruin", "id": 30701176, "node_id": "MDQ6VXNlcjMwNzAxMTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/30701176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daanpdebruin", "html_url": "https://github.com/daanpdebruin", "followers_url": "https://api.github.com/users/daanpdebruin/followers", "following_url": "https://api.github.com/users/daanpdebruin/following{/other_user}", "gists_url": "https://api.github.com/users/daanpdebruin/gists{/gist_id}", "starred_url": "https://api.github.com/users/daanpdebruin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daanpdebruin/subscriptions", "organizations_url": "https://api.github.com/users/daanpdebruin/orgs", "repos_url": "https://api.github.com/users/daanpdebruin/repos", "events_url": "https://api.github.com/users/daanpdebruin/events{/privacy}", "received_events_url": "https://api.github.com/users/daanpdebruin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-24T13:00:38Z", "updated_at": "2019-12-24T13:12:25Z", "closed_at": "2019-12-24T13:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This can happens when all shap_values of a feature are equal.\r\n\r\nIn summary_plot vmin and vmax are calculated like this:\r\n\r\n`vmin = np.nanpercentile(values, 5)`\r\n`vmax = np.nanpercentile(values, 95)`\r\n\r\nThis results in vmin being equal to vmax when all values are equal. However due to rounding differences, sometimes vmin > vmax at ~ the 10th decimal place. This results in matplotlib colors error\r\nWould be solved by rounding vmin and vmax to a certain number of digits (for example 5)\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj)\r\n    339                 pass\r\n    340             else:\r\n--> 341                 return printer(obj)\r\n    342             # Finally look for special method names\r\n    343             method = get_real_method(obj, self.print_method)\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/IPython/core/pylabtools.py in <lambda>(fig)\r\n    242 \r\n    243     if 'png' in formats:\r\n--> 244         png_formatter.for_type(Figure, lambda fig: print_figure(fig, 'png', **kwargs))\r\n    245     if 'retina' in formats or 'png2x' in formats:\r\n    246         png_formatter.for_type(Figure, lambda fig: retina_figure(fig, **kwargs))\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/IPython/core/pylabtools.py in print_figure(fig, fmt, bbox_inches, **kwargs)\r\n    126 \r\n    127     bytes_io = BytesIO()\r\n--> 128     fig.canvas.print_figure(bytes_io, **kw)\r\n    129     data = bytes_io.getvalue()\r\n    130     if fmt == 'svg':\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\r\n   2054                         orientation=orientation,\r\n   2055                         dryrun=True,\r\n-> 2056                         **kwargs)\r\n   2057                     renderer = self.figure._cachedRenderer\r\n   2058                     bbox_artists = kwargs.pop(\"bbox_extra_artists\", None)\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs)\r\n    525 \r\n    526         else:\r\n--> 527             FigureCanvasAgg.draw(self)\r\n    528             renderer = self.get_renderer()\r\n    529             with cbook._setattr_cm(renderer, dpi=self.figure.dpi), \\\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py in draw(self)\r\n    386         self.renderer = self.get_renderer(cleared=True)\r\n    387         with RendererAgg.lock:\r\n--> 388             self.figure.draw(self.renderer)\r\n    389             # A GUI class may be need to update a window using this draw, so\r\n    390             # don't forget to call the superclass.\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/figure.py in draw(self, renderer)\r\n   1707             self.patch.draw(renderer)\r\n   1708             mimage._draw_list_compositing_images(\r\n-> 1709                 renderer, self, artists, self.suppressComposite)\r\n   1710 \r\n   1711             renderer.close_group('figure')\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite)\r\n    133     if not_composite or not has_images:\r\n    134         for a in artists:\r\n--> 135             a.draw(renderer)\r\n    136     else:\r\n    137         # Composite any adjacent images together\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/axes/_base.py in draw(self, renderer, inframe)\r\n   2645             renderer.stop_rasterizing()\r\n   2646 \r\n-> 2647         mimage._draw_list_compositing_images(renderer, self, artists)\r\n   2648 \r\n   2649         renderer.close_group('axes')\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite)\r\n    133     if not_composite or not has_images:\r\n    134         for a in artists:\r\n--> 135             a.draw(renderer)\r\n    136     else:\r\n    137         # Composite any adjacent images together\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/collections.py in draw(self, renderer)\r\n    864     def draw(self, renderer):\r\n    865         self.set_sizes(self._sizes, self.figure.dpi)\r\n--> 866         Collection.draw(self, renderer)\r\n    867 \r\n    868 \r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/collections.py in draw(self, renderer)\r\n    253         renderer.open_group(self.__class__.__name__, self.get_gid())\r\n    254 \r\n--> 255         self.update_scalarmappable()\r\n    256 \r\n    257         transform, transOffset, offsets, paths = self._prepare_points()\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/collections.py in update_scalarmappable(self)\r\n    761             return\r\n    762         if self._is_filled:\r\n--> 763             self._facecolors = self.to_rgba(self._A, self._alpha)\r\n    764         elif self._is_stroked:\r\n    765             self._edgecolors = self.to_rgba(self._A, self._alpha)\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/cm.py in to_rgba(self, x, alpha, bytes, norm)\r\n    287         x = ma.asarray(x)\r\n    288         if norm:\r\n--> 289             x = self.norm(x)\r\n    290         rgba = self.cmap(x, alpha=alpha, bytes=bytes)\r\n    291         return rgba\r\n~/.conda/envs/project-cards/lib/python3.6/site-packages/matplotlib/colors.py in __call__(self, value, clip)\r\n    962             result.fill(0)   # Or should it be all masked?  Or 0.5?\r\n    963         elif vmin > vmax:\r\n--> 964             raise ValueError(\"minvalue must be less than or equal to maxvalue\")\r\n    965         else:\r\n    966             if clip:\r\nValueError: minvalue must be less than or equal to maxvalue\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/964", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/964/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/964/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/964/events", "html_url": "https://github.com/slundberg/shap/issues/964", "id": 540534323, "node_id": "MDU6SXNzdWU1NDA1MzQzMjM=", "number": 964, "title": "Unable to run for a Keras wide & deep-type model ", "user": {"login": "dashaw", "id": 13472493, "node_id": "MDQ6VXNlcjEzNDcyNDkz", "avatar_url": "https://avatars3.githubusercontent.com/u/13472493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dashaw", "html_url": "https://github.com/dashaw", "followers_url": "https://api.github.com/users/dashaw/followers", "following_url": "https://api.github.com/users/dashaw/following{/other_user}", "gists_url": "https://api.github.com/users/dashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dashaw/subscriptions", "organizations_url": "https://api.github.com/users/dashaw/orgs", "repos_url": "https://api.github.com/users/dashaw/repos", "events_url": "https://api.github.com/users/dashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/dashaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486901330, "node_id": "MDU6TGFiZWw0ODY5MDEzMzA=", "url": "https://api.github.com/repos/slundberg/shap/labels/todo", "name": "todo", "color": "cccccc", "default": false, "description": "This issue had an outstanding action to take."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-19T20:08:52Z", "updated_at": "2020-01-08T01:46:12Z", "closed_at": "2020-01-08T01:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Popular [wide & deep model](https://arxiv.org/pdf/1606.07792.pdf) is the combination of two networks\r\n- Assume the wide network is represented as one entire array, while the deep network contains one or more word embeddings\r\n- Then, the input into a Keras model could be formed like so\r\n```\r\ncombined_model = keras.Model([numeric_wide_input,embed_input_1,embed_input_2,embed_input_3], merged_out)\r\ncombined_model.compile(optimizer = 'adam', loss = 'binary_crossentropy')\r\ncombined_model.fit(x=[x_train,train_embed_1,train_embed_2,train_embed_3], \r\n                                   y = y_train)\r\n# where x_train is of type pd.DataFrame\r\n# where train_embed_1,2,3 are of type numpy.ndarray\r\n```\r\n- A keras network like this (from what I can tell) cannot be used within Shap\r\n```\r\nimport shap\r\n# example data\r\nfoo_train = [x_train[new_numeric_features][1:10],\r\n                                train_pad_dv[1:10],train_pad_prch[1:10],train_pad_div[1:10]]\r\n\r\n# form explainer\r\nexplainer = shap.KernelExplainer(combined_model,data=foo_train)\r\n\r\n# get shap values\r\nshap_values = explainer.shap_values(foo_train)\r\n\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-37-4469b5a632da> in <module>()\r\n      5 \r\n      6 # form explainer\r\n----> 7 explainer = shap.KernelExplainer(combined_model,data=foo_train)\r\n      8 \r\n      9 # get shap values\r\n\r\n~/anaconda3/envs/tensorflow_p36/lib/python3.6/site-packages/shap/explainers/kernel.py in __init__(self, model, data, link, **kwargs)\r\n     94         self.keep_index = kwargs.get(\"keep_index\", False)\r\n     95         self.keep_index_ordered = kwargs.get(\"keep_index_ordered\", False)\r\n---> 96         self.data = convert_to_data(data, keep_index=self.keep_index)\r\n     97         model_null = match_model_to_data(self.model, self.data)\r\n     98 \r\n\r\n~/anaconda3/envs/tensorflow_p36/lib/python3.6/site-packages/shap/common.py in convert_to_data(val, keep_index)\r\n    176         return SparseData(val)\r\n    177     else:\r\n--> 178         assert False, \"Unknown type passed as data object: \"+str(type(val))\r\n    179 \r\n    180 class Link:\r\n\r\nAssertionError: Unknown type passed as data object: <class 'list'>\r\n```\r\n- Obviously due to the fact that the input data is not in an expected dataframe but is several arrays. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/948", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/948/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/948/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/948/events", "html_url": "https://github.com/slundberg/shap/issues/948", "id": 537197661, "node_id": "MDU6SXNzdWU1MzcxOTc2NjE=", "number": 948, "title": "LSTM model with multistep forecast", "user": {"login": "jonatan-klock", "id": 44395235, "node_id": "MDQ6VXNlcjQ0Mzk1MjM1", "avatar_url": "https://avatars2.githubusercontent.com/u/44395235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonatan-klock", "html_url": "https://github.com/jonatan-klock", "followers_url": "https://api.github.com/users/jonatan-klock/followers", "following_url": "https://api.github.com/users/jonatan-klock/following{/other_user}", "gists_url": "https://api.github.com/users/jonatan-klock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonatan-klock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonatan-klock/subscriptions", "organizations_url": "https://api.github.com/users/jonatan-klock/orgs", "repos_url": "https://api.github.com/users/jonatan-klock/repos", "events_url": "https://api.github.com/users/jonatan-klock/events{/privacy}", "received_events_url": "https://api.github.com/users/jonatan-klock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T20:30:42Z", "updated_at": "2019-12-13T05:19:17Z", "closed_at": "2019-12-13T05:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an LSTM model applied for time series prediction. It is a multivariate and multi-step model. I.e I predict 2 steps into the future. I have successfully applied the repo to illustrate feature importance with one output time-step, how to apply the repo to n future time steps?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/945", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/945/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/945/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/945/events", "html_url": "https://github.com/slundberg/shap/issues/945", "id": 536971798, "node_id": "MDU6SXNzdWU1MzY5NzE3OTg=", "number": 945, "title": "DeepExplainer: Strange results using loaded model", "user": {"login": "bmffb", "id": 46780168, "node_id": "MDQ6VXNlcjQ2NzgwMTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/46780168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmffb", "html_url": "https://github.com/bmffb", "followers_url": "https://api.github.com/users/bmffb/followers", "following_url": "https://api.github.com/users/bmffb/following{/other_user}", "gists_url": "https://api.github.com/users/bmffb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmffb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmffb/subscriptions", "organizations_url": "https://api.github.com/users/bmffb/orgs", "repos_url": "https://api.github.com/users/bmffb/repos", "events_url": "https://api.github.com/users/bmffb/events{/privacy}", "received_events_url": "https://api.github.com/users/bmffb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-12T13:16:25Z", "updated_at": "2019-12-13T12:01:53Z", "closed_at": "2019-12-13T12:01:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have reproduced the MNIST handwriting DeepExplainer results using my own model architecture. Producing a SHAP image_plot \"directly\" after the model training gave me the expected result (\"result_shap_mnist_direct.png\"). The model was saved into a file (\"test_mnist.h5\").\r\nResulting image_plot:\r\n![result_shap_mnist_direct](https://user-images.githubusercontent.com/46780168/70715066-c79af380-1ce9-11ea-8408-16a64c71d167.png)\r\n\r\nUsing a extra script where I load this model (and the MNIST image data) I get a \"strange\" result in the SHAP image_plot. \r\n**Is the saved model missing something SHAP is needing?**\r\n\r\nCode:\r\nfrom keras.models import load_model\r\nimport shap\r\n\r\nmodel = load_model(model_name)\r\nbackground = x_train[np.random.choice(x_train.shape[0], 100, replace=False)]\r\ne = shap.DeepExplainer(model, background)\r\nshap_values = e.shap_values(x_test[1:5])\r\nshap.image_plot(shap_values, -x_test[1:5])\r\nplt.savefig('result_shap_mnist_load_model.png')\r\n\r\nResulting image_plot:\r\n![result_shap_mnist_load_model](https://user-images.githubusercontent.com/46780168/70715067-c79af380-1ce9-11ea-8750-14515336c8af.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/944", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/944/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/944/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/944/events", "html_url": "https://github.com/slundberg/shap/issues/944", "id": 536938970, "node_id": "MDU6SXNzdWU1MzY5Mzg5NzA=", "number": 944, "title": "AttributeError: 'Index' object has no attribute 'to_list' in function decision_plot", "user": {"login": "davidgar", "id": 32150716, "node_id": "MDQ6VXNlcjMyMTUwNzE2", "avatar_url": "https://avatars3.githubusercontent.com/u/32150716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidgar", "html_url": "https://github.com/davidgar", "followers_url": "https://api.github.com/users/davidgar/followers", "following_url": "https://api.github.com/users/davidgar/following{/other_user}", "gists_url": "https://api.github.com/users/davidgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidgar/subscriptions", "organizations_url": "https://api.github.com/users/davidgar/orgs", "repos_url": "https://api.github.com/users/davidgar/repos", "events_url": "https://api.github.com/users/davidgar/events{/privacy}", "received_events_url": "https://api.github.com/users/davidgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-12T12:08:00Z", "updated_at": "2019-12-17T10:17:24Z", "closed_at": "2019-12-17T10:17:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to call the function \"shap.decision_plot\", I get the aforementioned error. It seems that it is an issue related to the use of \"to_list()\".\r\n\r\n`explainer = shap.TreeExplainer(rf_model)`\r\n`shap.decision_plot(explainer.expected_value[1], explainer.shap_values(X6.iloc[64])[1], X6.iloc[64])`\r\n\r\n\r\n> AttributeError                            Traceback (most recent call last)\r\n> <ipython-input-247-2128bd02d594> in <module>\r\n> ----> 1 shap.decision_plot(explainer.expected_value[1], explainer.shap_values(X6.iloc[64])[1], X6.iloc[64])\r\n> \r\n> ~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\shap\\plots\\decision.py in decision_plot(base_value, shap_values, features, feature_names, feature_order, feature_display_range, highlight, link, plot_color, axis_color, y_demarc_color, alpha, color_bar, auto_size_plot, title, xlim, show, return_objects, ignore_warnings, matplotlib)\r\n>     323     elif str(type(features)) == \"<class 'pandas.core.series.Series'>\":\r\n>     324         if feature_names is None:\r\n> --> 325             feature_names = features.index.to_list()\r\n>     326         features = features.values\r\n>     327     elif isinstance(features, list):\r\n> \r\n> AttributeError: 'Index' object has no attribute 'to_list'\r\n\r\nAny help would be really appreciated.\r\nThank you very much.\r\n\r\nRegards,\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/941", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/941/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/941/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/941/events", "html_url": "https://github.com/slundberg/shap/issues/941", "id": 536678873, "node_id": "MDU6SXNzdWU1MzY2Nzg4NzM=", "number": 941, "title": "Additivity check failed in TreeExplainer", "user": {"login": "knaaptime", "id": 4213368, "node_id": "MDQ6VXNlcjQyMTMzNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4213368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knaaptime", "html_url": "https://github.com/knaaptime", "followers_url": "https://api.github.com/users/knaaptime/followers", "following_url": "https://api.github.com/users/knaaptime/following{/other_user}", "gists_url": "https://api.github.com/users/knaaptime/gists{/gist_id}", "starred_url": "https://api.github.com/users/knaaptime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knaaptime/subscriptions", "organizations_url": "https://api.github.com/users/knaaptime/orgs", "repos_url": "https://api.github.com/users/knaaptime/repos", "events_url": "https://api.github.com/users/knaaptime/events{/privacy}", "received_events_url": "https://api.github.com/users/knaaptime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-11T23:56:27Z", "updated_at": "2020-04-10T05:08:41Z", "closed_at": "2019-12-12T00:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nthanks for the great package. I'm getting \r\n` AssertionError: Additivity check failed in TreeExplainer! Please report this on GitHub. Consider retrying with the feature_dependence='independent'` \r\n\r\nwhen trying to use `shap` in our [`package`](https://github.com/pysal/tobler) (you can see the error [here](https://travis-ci.com/knaaptime/tobler/jobs/266316023)). Everything has been working fine until this week, so i'm not totally sure where to go about troubleshooting, but it looks like this bug was newly introduced. Any thoughts?\r\n\r\nthanks again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/940", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/940/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/940/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/940/events", "html_url": "https://github.com/slundberg/shap/issues/940", "id": 536542866, "node_id": "MDU6SXNzdWU1MzY1NDI4NjY=", "number": 940, "title": "eidfcciknhrfvvidihihudblcbukcngrbrenekrgbnit", "user": {"login": "mehdiesadri", "id": 1088424, "node_id": "MDQ6VXNlcjEwODg0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1088424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehdiesadri", "html_url": "https://github.com/mehdiesadri", "followers_url": "https://api.github.com/users/mehdiesadri/followers", "following_url": "https://api.github.com/users/mehdiesadri/following{/other_user}", "gists_url": "https://api.github.com/users/mehdiesadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehdiesadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehdiesadri/subscriptions", "organizations_url": "https://api.github.com/users/mehdiesadri/orgs", "repos_url": "https://api.github.com/users/mehdiesadri/repos", "events_url": "https://api.github.com/users/mehdiesadri/events{/privacy}", "received_events_url": "https://api.github.com/users/mehdiesadri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T18:30:46Z", "updated_at": "2019-12-11T18:52:16Z", "closed_at": "2019-12-11T18:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/939", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/939/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/939/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/939/events", "html_url": "https://github.com/slundberg/shap/issues/939", "id": 536542823, "node_id": "MDU6SXNzdWU1MzY1NDI4MjM=", "number": 939, "title": "eidfcciknhrfcgfitcgreertgbglbigiitffjgnulvid", "user": {"login": "mehdiesadri", "id": 1088424, "node_id": "MDQ6VXNlcjEwODg0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1088424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehdiesadri", "html_url": "https://github.com/mehdiesadri", "followers_url": "https://api.github.com/users/mehdiesadri/followers", "following_url": "https://api.github.com/users/mehdiesadri/following{/other_user}", "gists_url": "https://api.github.com/users/mehdiesadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehdiesadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehdiesadri/subscriptions", "organizations_url": "https://api.github.com/users/mehdiesadri/orgs", "repos_url": "https://api.github.com/users/mehdiesadri/repos", "events_url": "https://api.github.com/users/mehdiesadri/events{/privacy}", "received_events_url": "https://api.github.com/users/mehdiesadri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T18:30:41Z", "updated_at": "2019-12-11T18:52:16Z", "closed_at": "2019-12-11T18:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/938", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/938/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/938/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/938/events", "html_url": "https://github.com/slundberg/shap/issues/938", "id": 536542740, "node_id": "MDU6SXNzdWU1MzY1NDI3NDA=", "number": 938, "title": "-", "user": {"login": "mehdiesadri", "id": 1088424, "node_id": "MDQ6VXNlcjEwODg0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1088424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehdiesadri", "html_url": "https://github.com/mehdiesadri", "followers_url": "https://api.github.com/users/mehdiesadri/followers", "following_url": "https://api.github.com/users/mehdiesadri/following{/other_user}", "gists_url": "https://api.github.com/users/mehdiesadri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehdiesadri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehdiesadri/subscriptions", "organizations_url": "https://api.github.com/users/mehdiesadri/orgs", "repos_url": "https://api.github.com/users/mehdiesadri/repos", "events_url": "https://api.github.com/users/mehdiesadri/events{/privacy}", "received_events_url": "https://api.github.com/users/mehdiesadri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T18:30:26Z", "updated_at": "2019-12-11T18:55:33Z", "closed_at": "2019-12-11T18:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/933", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/933/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/933/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/933/events", "html_url": "https://github.com/slundberg/shap/issues/933", "id": 534413463, "node_id": "MDU6SXNzdWU1MzQ0MTM0NjM=", "number": 933, "title": "Is it Valid to Aggregate SHAP values to Sets of of Features?", "user": {"login": "john-curry871", "id": 54810008, "node_id": "MDQ6VXNlcjU0ODEwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/54810008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-curry871", "html_url": "https://github.com/john-curry871", "followers_url": "https://api.github.com/users/john-curry871/followers", "following_url": "https://api.github.com/users/john-curry871/following{/other_user}", "gists_url": "https://api.github.com/users/john-curry871/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-curry871/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-curry871/subscriptions", "organizations_url": "https://api.github.com/users/john-curry871/orgs", "repos_url": "https://api.github.com/users/john-curry871/repos", "events_url": "https://api.github.com/users/john-curry871/events{/privacy}", "received_events_url": "https://api.github.com/users/john-curry871/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-07T15:13:51Z", "updated_at": "2019-12-11T09:05:55Z", "closed_at": "2019-12-11T09:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "SHAP values seem to be additive and e.g. the overall feature importance plot simply adds the absolute SHAP values per feature and compares them. This allows us to use SHAP for global importance aswell as local importance. We could also get feature importance for a particular subset of data records the same way.\r\n\r\nBy the same token, is it valid to get aggregate SHAP values for sets of variables? e.g. \"Height\", \"Weight\" and \"Eye Colour\" into \"HumanDescription\" or \"Temperature\", \"Humidity\" and \"Air-Pressure\" into \"Weather\"and rank them accordingly.\r\n\r\nhttps://stackoverflow.com/questions/59193277/is-it-valid-to-aggregate-shap-values-to-sets-of-of-features\r\nSorry its more of a question than an issue.  Just reposting it here so it might catch your eye.  I think that a good answer to this will really help to clarify the valid use cases for SHAP. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/932", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/932/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/932/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/932/events", "html_url": "https://github.com/slundberg/shap/issues/932", "id": 533461614, "node_id": "MDU6SXNzdWU1MzM0NjE2MTQ=", "number": 932, "title": "Documentation on shap.GradientExplainer", "user": {"login": "bmffb", "id": 46780168, "node_id": "MDQ6VXNlcjQ2NzgwMTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/46780168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmffb", "html_url": "https://github.com/bmffb", "followers_url": "https://api.github.com/users/bmffb/followers", "following_url": "https://api.github.com/users/bmffb/following{/other_user}", "gists_url": "https://api.github.com/users/bmffb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmffb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmffb/subscriptions", "organizations_url": "https://api.github.com/users/bmffb/orgs", "repos_url": "https://api.github.com/users/bmffb/repos", "events_url": "https://api.github.com/users/bmffb/events{/privacy}", "received_events_url": "https://api.github.com/users/bmffb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-05T16:33:33Z", "updated_at": "2019-12-13T09:07:23Z", "closed_at": "2019-12-12T19:54:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would appreciate if there would be more documentation on the shap.GradientExplainer function.\r\nWhere are the **indexes** coming from (here from the example) and what do they mean?\r\n\r\nshap_values,**indexes** = e.shap_values(map2layer(to_explain, 7), ranked_outputs=2)\r\n\r\nHow is this working for a binary classification?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/931", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/931/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/931/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/931/events", "html_url": "https://github.com/slundberg/shap/issues/931", "id": 533458867, "node_id": "MDU6SXNzdWU1MzM0NTg4Njc=", "number": 931, "title": "Documentation on shap.image_plot", "user": {"login": "bmffb", "id": 46780168, "node_id": "MDQ6VXNlcjQ2NzgwMTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/46780168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmffb", "html_url": "https://github.com/bmffb", "followers_url": "https://api.github.com/users/bmffb/followers", "following_url": "https://api.github.com/users/bmffb/following{/other_user}", "gists_url": "https://api.github.com/users/bmffb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmffb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmffb/subscriptions", "organizations_url": "https://api.github.com/users/bmffb/orgs", "repos_url": "https://api.github.com/users/bmffb/repos", "events_url": "https://api.github.com/users/bmffb/events{/privacy}", "received_events_url": "https://api.github.com/users/bmffb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T16:28:54Z", "updated_at": "2019-12-12T08:06:04Z", "closed_at": "2019-12-11T20:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the package.\r\nI would greatly appreciate if there would be more documentation on the shap.image_plot , especially for the labels and the labelpad arguments. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/928", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/928/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/928/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/928/events", "html_url": "https://github.com/slundberg/shap/issues/928", "id": 532747662, "node_id": "MDU6SXNzdWU1MzI3NDc2NjI=", "number": 928, "title": "Recent sklearn 0.22 update breaks TreeExplainer", "user": {"login": "wamartin-aml", "id": 42586848, "node_id": "MDQ6VXNlcjQyNTg2ODQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/42586848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wamartin-aml", "html_url": "https://github.com/wamartin-aml", "followers_url": "https://api.github.com/users/wamartin-aml/followers", "following_url": "https://api.github.com/users/wamartin-aml/following{/other_user}", "gists_url": "https://api.github.com/users/wamartin-aml/gists{/gist_id}", "starred_url": "https://api.github.com/users/wamartin-aml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wamartin-aml/subscriptions", "organizations_url": "https://api.github.com/users/wamartin-aml/orgs", "repos_url": "https://api.github.com/users/wamartin-aml/repos", "events_url": "https://api.github.com/users/wamartin-aml/events{/privacy}", "received_events_url": "https://api.github.com/users/wamartin-aml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-04T15:11:09Z", "updated_at": "2019-12-10T21:40:09Z", "closed_at": "2019-12-10T21:40:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Model type not yet supported by TreeExplainer: <class 'sklearn.ensemble._forest.RandomForestClassifier'>` is just one fun example. Models that previously worked fine are broken. Haven't yet looked into what's actually broken.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/925", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/925/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/925/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/925/events", "html_url": "https://github.com/slundberg/shap/issues/925", "id": 532295740, "node_id": "MDU6SXNzdWU1MzIyOTU3NDA=", "number": 925, "title": "How would I go about using KernelExplainer for a sum product ensemble of 10 GAM models?", "user": {"login": "nickcorona", "id": 7490453, "node_id": "MDQ6VXNlcjc0OTA0NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickcorona", "html_url": "https://github.com/nickcorona", "followers_url": "https://api.github.com/users/nickcorona/followers", "following_url": "https://api.github.com/users/nickcorona/following{/other_user}", "gists_url": "https://api.github.com/users/nickcorona/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickcorona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickcorona/subscriptions", "organizations_url": "https://api.github.com/users/nickcorona/orgs", "repos_url": "https://api.github.com/users/nickcorona/repos", "events_url": "https://api.github.com/users/nickcorona/events{/privacy}", "received_events_url": "https://api.github.com/users/nickcorona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-03T22:01:51Z", "updated_at": "2020-06-16T15:55:30Z", "closed_at": "2020-06-16T15:18:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I work in insurance where we price frequency and severity of claims separate for each coverage in an insurance policy. Frequency is the number of times a customer claims, and severity is how severe a claim is.\r\n\r\nSay there are 5 different coverage IDs: 1, 2, 3, 4, and 5. Any particular policy may or may not have any of the given coverages. And for each coverage, we train a frequency and severity model.\r\n\r\nHow we get to total loss (our target) for any observation is `severity_1 * frequency_1 + severity_2 * frequency_2 + severity_3 * frequency_3 + severity_4 * frequency_4 + severity_5 * frequency_5`.\r\n\r\nI'm trying to figure out how I can create a prediction function or run a kernel explainer on each of the individual 10 models and somehow combine the SHAP values to get something sensible to explain why total losses for certain segments of the business are having large premium changes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/921", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/921/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/921/events", "html_url": "https://github.com/slundberg/shap/issues/921", "id": 530847407, "node_id": "MDU6SXNzdWU1MzA4NDc0MDc=", "number": 921, "title": "How to get the contribution of each features? (Force plot)", "user": {"login": "cejwlim11", "id": 58390417, "node_id": "MDQ6VXNlcjU4MzkwNDE3", "avatar_url": "https://avatars3.githubusercontent.com/u/58390417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cejwlim11", "html_url": "https://github.com/cejwlim11", "followers_url": "https://api.github.com/users/cejwlim11/followers", "following_url": "https://api.github.com/users/cejwlim11/following{/other_user}", "gists_url": "https://api.github.com/users/cejwlim11/gists{/gist_id}", "starred_url": "https://api.github.com/users/cejwlim11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cejwlim11/subscriptions", "organizations_url": "https://api.github.com/users/cejwlim11/orgs", "repos_url": "https://api.github.com/users/cejwlim11/repos", "events_url": "https://api.github.com/users/cejwlim11/events{/privacy}", "received_events_url": "https://api.github.com/users/cejwlim11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-02T02:14:26Z", "updated_at": "2020-05-01T13:42:14Z", "closed_at": "2020-05-01T13:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to calculate the contribution of each features.\r\nMy model is LightGBM Classifier.\r\n\r\nFor example,\r\nHow can I get the contribution of feature 'PAY_0' ?  (below figure's length)\r\n\r\nCode is below.\r\nshap.force_plot( explainer.expected_value[1], shap_values[1][n], feature_names = test_X.columns,\r\n                     features = test_X.iloc[n,:], link = 'logit', matplotlib = False )\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/58390417/69925679-bc2f1780-14f4-11ea-94d9-194cb9e094ac.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/920", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/920/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/920/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/920/events", "html_url": "https://github.com/slundberg/shap/issues/920", "id": 530723405, "node_id": "MDU6SXNzdWU1MzA3MjM0MDU=", "number": 920, "title": "<Simple SHAP value calculation Question> #force_plot, shap_value, local_interpretation", "user": {"login": "cejwlim11", "id": 58390417, "node_id": "MDQ6VXNlcjU4MzkwNDE3", "avatar_url": "https://avatars3.githubusercontent.com/u/58390417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cejwlim11", "html_url": "https://github.com/cejwlim11", "followers_url": "https://api.github.com/users/cejwlim11/followers", "following_url": "https://api.github.com/users/cejwlim11/following{/other_user}", "gists_url": "https://api.github.com/users/cejwlim11/gists{/gist_id}", "starred_url": "https://api.github.com/users/cejwlim11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cejwlim11/subscriptions", "organizations_url": "https://api.github.com/users/cejwlim11/orgs", "repos_url": "https://api.github.com/users/cejwlim11/repos", "events_url": "https://api.github.com/users/cejwlim11/events{/privacy}", "received_events_url": "https://api.github.com/users/cejwlim11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-01T12:24:53Z", "updated_at": "2019-12-02T02:14:54Z", "closed_at": "2019-12-02T02:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for amazing package.\r\n\r\nI have a simple calculation question.\r\nI have a trouble to calculate 'Contribution of feature'.\r\n\r\nModel : LightGBM (Python 3.7)\r\nObjective : Classification\r\n\r\nMy shap values are below. ( There are 6 features )\r\n![image](https://user-images.githubusercontent.com/58390417/69913939-8b61ca80-1481-11ea-8344-957594c290bb.png)\r\n\r\n\r\nAnd Model's Prediction and Base value are below.\r\nprediction : 27.62%\r\nbase value : 19.29%\r\n![image](https://user-images.githubusercontent.com/58390417/69913944-99afe680-1481-11ea-81f9-0d68b8c254cc.png)\r\n\r\nI want to calculate individual feature's contribution.\r\nQuestion) How can I calculate the contribution?\r\n\r\nI thought below solution.\r\nFor example, \r\n'Contribution of PAY_0' \r\n= (shap value(PAY_0) / sum of shap values) * (prediction - base value)\r\n= 0.706214 / (-0.344984 + -0.033723 + 0.012379 + 0.019236 + -0.013549 + 0.706214 )  * 0.0083371\r\n= 0.170378\r\n= 17.03%\r\n\r\nI don't know the right way.\r\nThanks.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/917", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/917/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/917/events", "html_url": "https://github.com/slundberg/shap/issues/917", "id": 529756466, "node_id": "MDU6SXNzdWU1Mjk3NTY0NjY=", "number": 917, "title": "Bug in Linear Explainer Correlation Correction", "user": {"login": "Snake707", "id": 222521, "node_id": "MDQ6VXNlcjIyMjUyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/222521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Snake707", "html_url": "https://github.com/Snake707", "followers_url": "https://api.github.com/users/Snake707/followers", "following_url": "https://api.github.com/users/Snake707/following{/other_user}", "gists_url": "https://api.github.com/users/Snake707/gists{/gist_id}", "starred_url": "https://api.github.com/users/Snake707/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Snake707/subscriptions", "organizations_url": "https://api.github.com/users/Snake707/orgs", "repos_url": "https://api.github.com/users/Snake707/repos", "events_url": "https://api.github.com/users/Snake707/events{/privacy}", "received_events_url": "https://api.github.com/users/Snake707/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T08:13:50Z", "updated_at": "2019-12-11T20:56:21Z", "closed_at": "2019-12-05T09:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Considering a model made of two features that have correlation r, we were estimating Shap values for values of r between -1 and 1. In the current implementation the correction works the reverse way:\r\nFor correlation r=1 the features share their total shap values. However one can observe the opposite behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/916", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/916/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/916/events", "html_url": "https://github.com/slundberg/shap/issues/916", "id": 529755367, "node_id": "MDU6SXNzdWU1Mjk3NTUzNjc=", "number": 916, "title": "Linear Explainer Blow Ups", "user": {"login": "Snake707", "id": 222521, "node_id": "MDQ6VXNlcjIyMjUyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/222521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Snake707", "html_url": "https://github.com/Snake707", "followers_url": "https://api.github.com/users/Snake707/followers", "following_url": "https://api.github.com/users/Snake707/following{/other_user}", "gists_url": "https://api.github.com/users/Snake707/gists{/gist_id}", "starred_url": "https://api.github.com/users/Snake707/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Snake707/subscriptions", "organizations_url": "https://api.github.com/users/Snake707/orgs", "repos_url": "https://api.github.com/users/Snake707/repos", "events_url": "https://api.github.com/users/Snake707/events{/privacy}", "received_events_url": "https://api.github.com/users/Snake707/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T08:11:23Z", "updated_at": "2019-12-11T20:55:32Z", "closed_at": "2019-12-05T09:07:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are able to observe blowups in Shapley Values (order of magnitude >> 9) when having more than three correlated features and using the correlation correction implemented in the Linear Explainer. This usually happens when the correlation is near 1 even though the covariance matrix retains full rank.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/914", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/914/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/914/events", "html_url": "https://github.com/slundberg/shap/issues/914", "id": 529358557, "node_id": "MDU6SXNzdWU1MjkzNTg1NTc=", "number": 914, "title": "Error saving the summary plot output image", "user": {"login": "pablo-var", "id": 24613382, "node_id": "MDQ6VXNlcjI0NjEzMzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/24613382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pablo-var", "html_url": "https://github.com/pablo-var", "followers_url": "https://api.github.com/users/pablo-var/followers", "following_url": "https://api.github.com/users/pablo-var/following{/other_user}", "gists_url": "https://api.github.com/users/pablo-var/gists{/gist_id}", "starred_url": "https://api.github.com/users/pablo-var/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pablo-var/subscriptions", "organizations_url": "https://api.github.com/users/pablo-var/orgs", "repos_url": "https://api.github.com/users/pablo-var/repos", "events_url": "https://api.github.com/users/pablo-var/events{/privacy}", "received_events_url": "https://api.github.com/users/pablo-var/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T13:50:18Z", "updated_at": "2019-12-12T00:13:25Z", "closed_at": "2019-12-12T00:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a problem in order to persist the summary plot returned by the method `summary_plot`. The error is related to matplotlib. I have copied an example of shapely values and features in order to replicate the error easily. \r\n\r\n```\r\nimport shap\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nshap_values = np.array([[-3.52528531e-02, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n         6.66592448e-02,  9.40882144e-03, -0.00000000e+00,\r\n        -4.65822581e-02, -0.00000000e+00, -0.00000000e+00,\r\n        -1.96588383e-02, -0.00000000e+00, -1.50642840e-01,\r\n        -0.00000000e+00,  1.53519656e-03, -8.21487123e-02,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n         0.00000000e+00, -2.04150877e-01,  0.00000000e+00,\r\n         0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -2.65342382e-03, -2.65342382e-03,\r\n        -2.65342382e-03, -2.65342382e-03, -2.65342382e-03,\r\n        -2.65342382e-03,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  5.62796974e-03,\r\n        -6.45685756e-18, -0.00000000e+00,  0.00000000e+00,\r\n        -0.00000000e+00,  8.83651397e-02,  2.50063405e-03,\r\n         1.73311816e-02],\r\n       [ 3.73826088e-02, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00,  0.00000000e+00,\r\n         7.33286502e-01,  9.40882144e-03, -0.00000000e+00,\r\n        -4.65822581e-02, -0.00000000e+00, -0.00000000e+00,\r\n        -1.96588383e-02, -0.00000000e+00,  5.93518908e-01,\r\n        -0.00000000e+00,  7.87303030e-03, -8.21487123e-02,\r\n        -0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00,  1.55095951e+00,  0.00000000e+00,\r\n         0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00,  6.68144088e-02,  6.68144088e-02,\r\n         6.68144088e-02,  6.68144088e-02,  6.68144088e-02,\r\n         6.68144088e-02,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  5.62796974e-03,\r\n        -6.45685756e-18, -0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00, -1.57588031e-01,  2.50063405e-03,\r\n         1.73311816e-02],\r\n       [ 1.92999131e-02,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00, -0.00000000e+00,  0.00000000e+00,\r\n         6.66592448e-02,  9.40882144e-03, -0.00000000e+00,\r\n        -4.65822581e-02, -0.00000000e+00, -0.00000000e+00,\r\n        -1.96588383e-02, -0.00000000e+00,  7.08532346e-02,\r\n         0.00000000e+00,  1.53519656e-03, -8.21487123e-02,\r\n         0.00000000e+00,  0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00,  0.00000000e+00,\r\n        -0.00000000e+00,  4.96986783e-02, -0.00000000e+00,\r\n        -0.00000000e+00, -0.00000000e+00, -0.00000000e+00,\r\n        -0.00000000e+00, -2.65342382e-03, -2.65342382e-03,\r\n        -2.65342382e-03, -2.65342382e-03, -2.65342382e-03,\r\n        -2.65342382e-03,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\r\n         0.00000000e+00,  0.00000000e+00,  5.62796974e-03,\r\n        -6.45685756e-18, -0.00000000e+00,  0.00000000e+00,\r\n        -0.00000000e+00,  8.83651397e-02,  2.50063405e-03,\r\n         1.73311816e-02]])\r\n\r\nX = np.array([[-2.92870087e-01, -1.76292702e-01, -6.65522870e-01,\r\n        -6.97774658e-01, -5.81717698e-01, -5.58035614e-01,\r\n        -4.56307053e-01, -7.36903089e-01, -6.44679190e-01,\r\n         1.77826542e+00, -4.07209039e-01, -4.60330652e-02,\r\n        -8.39745115e-02, -6.72488689e-02, -3.94426780e-02,\r\n        -3.68810705e-01, -1.46637323e-01,  4.31717123e-03,\r\n        -1.84050056e+00,  1.41583947e+00, -4.49539186e-01,\r\n        -1.98762259e+00, -1.47396792e+00, -7.95766336e-01,\r\n        -9.63958373e-02, -9.64157091e-02, -1.01738576e+00,\r\n        -6.04674503e-01,  8.42989080e-01,  1.47832551e+00,\r\n        -3.48381637e-01, -3.58933956e-02, -4.41531609e-02,\r\n        -4.41531609e-02, -1.10734561e-01, -1.10734561e-01,\r\n        -1.10734561e-01, -1.10734561e-01, -1.10734561e-01,\r\n        -1.10734561e-01,  4.20975455e-01,  4.20975455e-01,\r\n         4.20923799e-01,  4.20975455e-01,  4.20975455e-01,\r\n         4.20975455e-01,  4.20975455e-01,  4.10592119e-01,\r\n        -1.94367856e-01, -3.16418766e-01,  3.16418766e-01,\r\n        -1.40712008e+00,  1.54499549e+00, -2.04990070e-01,\r\n        -3.97665281e-01],\r\n       [-1.04787538e+00, -2.26236956e-01, -4.77792824e-01,\r\n        -4.80746445e-01, -4.94588512e-01, -4.11090895e-01,\r\n        -3.11594730e-01, -6.27708379e-01,  5.29899223e-01,\r\n         7.99785594e+00, -4.07209039e-01, -4.60330652e-02,\r\n        -8.39745115e-02, -6.72488689e-02, -3.94426780e-02,\r\n        -3.68810705e-01, -1.49122457e-01, -5.51716576e+00,\r\n        -8.34304886e-01,  3.56390172e+00, -4.49539186e-01,\r\n        -6.69236410e-01, -2.57338421e-01, -9.10216041e-02,\r\n        -2.32691673e-01, -6.88540205e-02, -1.05389468e-01,\r\n        -8.09387927e-01,  7.40732759e+00,  2.42780115e+00,\r\n        -6.33310711e-01, -3.58933956e-02, -4.41531609e-02,\r\n        -4.41531609e-02,  9.03060427e+00,  9.03060427e+00,\r\n         9.03060427e+00,  9.03060427e+00,  9.03060427e+00,\r\n         9.03060427e+00,  4.20975455e-01,  4.20975455e-01,\r\n         4.20923799e-01,  4.20975455e-01,  4.20975455e-01,\r\n         4.20975455e-01,  4.20975455e-01,  4.10592119e-01,\r\n        -1.94367856e-01, -3.16418766e-01,  3.16418766e-01,\r\n         7.10671404e-01, -6.47251082e-01, -2.04990070e-01,\r\n        -3.97665281e-01],\r\n       [-8.59915799e-01,  1.37354369e-02,  2.91787253e+00,\r\n         2.78630081e+00,  3.08392983e+00,  3.34866017e+00,\r\n         3.33324658e+00, -4.46825420e-01,  2.70689398e-01,\r\n         1.77826542e+00, -4.07209039e-01, -4.60330652e-02,\r\n        -8.39745115e-02, -6.72488689e-02, -3.94426780e-02,\r\n        -3.68810705e-01, -1.46637323e-01, -1.63912499e+00,\r\n        -3.27984778e-01,  1.41583947e+00, -4.49539186e-01,\r\n        -5.61927435e-02, -2.72397074e-01, -9.47364582e-01,\r\n        -9.63958373e-02,  1.00110317e-01,  1.29277186e+00,\r\n        -1.22694204e+00,  1.79241906e+00,  6.26030838e-01,\r\n        -6.93455893e-01, -3.58933956e-02, -4.41531609e-02,\r\n        -4.41531609e-02, -1.10734561e-01, -1.10734561e-01,\r\n        -1.10734561e-01, -1.10734561e-01, -1.10734561e-01,\r\n        -1.10734561e-01,  4.20975455e-01,  4.20975455e-01,\r\n         4.20923799e-01,  4.20975455e-01,  4.20975455e-01,\r\n         4.20975455e-01,  4.20975455e-01,  4.10592119e-01,\r\n        -1.94367856e-01, -3.16418766e-01,  3.16418766e-01,\r\n        -1.40712008e+00,  1.54499549e+00, -2.04990070e-01,\r\n        -3.97665281e-01]])\r\n\r\n# Error\r\nshap.summary_plot(shap_values, X, show=False)\r\nplt.savefig('global_summary.jpg')\r\n```\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/913", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/913/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/913/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/913/events", "html_url": "https://github.com/slundberg/shap/issues/913", "id": 529210675, "node_id": "MDU6SXNzdWU1MjkyMTA2NzU=", "number": 913, "title": "dependence.py:  Redundant sort", "user": {"login": "koyurion", "id": 32454333, "node_id": "MDQ6VXNlcjMyNDU0MzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/32454333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koyurion", "html_url": "https://github.com/koyurion", "followers_url": "https://api.github.com/users/koyurion/followers", "following_url": "https://api.github.com/users/koyurion/following{/other_user}", "gists_url": "https://api.github.com/users/koyurion/gists{/gist_id}", "starred_url": "https://api.github.com/users/koyurion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koyurion/subscriptions", "organizations_url": "https://api.github.com/users/koyurion/orgs", "repos_url": "https://api.github.com/users/koyurion/repos", "events_url": "https://api.github.com/users/koyurion/events{/privacy}", "received_events_url": "https://api.github.com/users/koyurion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T09:08:38Z", "updated_at": "2019-12-12T00:18:09Z", "closed_at": "2019-12-12T00:17:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the **dependence.py**, the process of **jitter** exists a operation of redundant sort\uff0cas showed in the follow image. As  np.unique() returns the sorted unique elements of an array. So the operation that **np.sort(xvals)** seems redundant.\r\n![image](https://user-images.githubusercontent.com/32454333/69709534-8971d180-1138-11ea-8134-34f4a10b4faf.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/912", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/912/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/912/events", "html_url": "https://github.com/slundberg/shap/issues/912", "id": 528559533, "node_id": "MDU6SXNzdWU1Mjg1NTk1MzM=", "number": 912, "title": "depedence_plot: graph size differ", "user": {"login": "koyurion", "id": 32454333, "node_id": "MDQ6VXNlcjMyNDU0MzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/32454333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koyurion", "html_url": "https://github.com/koyurion", "followers_url": "https://api.github.com/users/koyurion/followers", "following_url": "https://api.github.com/users/koyurion/following{/other_user}", "gists_url": "https://api.github.com/users/koyurion/gists{/gist_id}", "starred_url": "https://api.github.com/users/koyurion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koyurion/subscriptions", "organizations_url": "https://api.github.com/users/koyurion/orgs", "repos_url": "https://api.github.com/users/koyurion/repos", "events_url": "https://api.github.com/users/koyurion/events{/privacy}", "received_events_url": "https://api.github.com/users/koyurion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-26T08:16:11Z", "updated_at": "2019-12-12T00:31:17Z", "closed_at": "2019-12-12T00:31:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to omit and practise  the notebook of **dependence_plot.ipynb.** I find that the graph size is different when I set that the \"interaction_index\" is  same as the \"ind\"  but the \"ind\"  is set as the index and column name respetively. **When the \"ind\"  is set as the column name, the graph is larger.**\r\n\r\n![2019-11-26 161454](https://user-images.githubusercontent.com/32454333/69611046-f36e7600-1067-11ea-87c6-def9cd2f00bb.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/908", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/908/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/908/events", "html_url": "https://github.com/slundberg/shap/issues/908", "id": 527314001, "node_id": "MDU6SXNzdWU1MjczMTQwMDE=", "number": 908, "title": "question", "user": {"login": "ahmedabbas81", "id": 32098502, "node_id": "MDQ6VXNlcjMyMDk4NTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/32098502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedabbas81", "html_url": "https://github.com/ahmedabbas81", "followers_url": "https://api.github.com/users/ahmedabbas81/followers", "following_url": "https://api.github.com/users/ahmedabbas81/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedabbas81/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedabbas81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedabbas81/subscriptions", "organizations_url": "https://api.github.com/users/ahmedabbas81/orgs", "repos_url": "https://api.github.com/users/ahmedabbas81/repos", "events_url": "https://api.github.com/users/ahmedabbas81/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedabbas81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-22T17:10:52Z", "updated_at": "2019-12-11T23:38:06Z", "closed_at": "2019-12-11T23:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\n\r\nIn order to get the input contributions to 2 hidden layers NN output and the NN is NOT ### convolutional NN\r\n\r\ne = shap.DeepExplainer(model, background)\r\n\r\nDoes the above line set the reference activation for every neuron in the network?\r\n\r\nshap_values = e.shap_values(x_test[1:5])\r\n\r\nand this line gets the contributions in the 3D list shap_values? It has the contributions of every input feature in every input instance to each of the output neurons, is that correct?\r\n\r\nAnd there are no more code lines required in the code.\r\n\r\nDo I understand correctly?\r\nLooking forward for an answer.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/906", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/906/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/906/events", "html_url": "https://github.com/slundberg/shap/issues/906", "id": 525337652, "node_id": "MDU6SXNzdWU1MjUzMzc2NTI=", "number": 906, "title": "Attribute error when I run the code of \"Example of loading a custom tree model into SHAP\" notebook", "user": {"login": "LeiTong02", "id": 26090828, "node_id": "MDQ6VXNlcjI2MDkwODI4", "avatar_url": "https://avatars2.githubusercontent.com/u/26090828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeiTong02", "html_url": "https://github.com/LeiTong02", "followers_url": "https://api.github.com/users/LeiTong02/followers", "following_url": "https://api.github.com/users/LeiTong02/following{/other_user}", "gists_url": "https://api.github.com/users/LeiTong02/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeiTong02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeiTong02/subscriptions", "organizations_url": "https://api.github.com/users/LeiTong02/orgs", "repos_url": "https://api.github.com/users/LeiTong02/repos", "events_url": "https://api.github.com/users/LeiTong02/events{/privacy}", "received_events_url": "https://api.github.com/users/LeiTong02/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-19T23:58:57Z", "updated_at": "2019-11-20T04:17:01Z", "closed_at": "2019-11-20T04:16:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to run the code of \"Example of loading a custom tree model into SHAP\" notebook, but get the following error from Sklearn GBM classifier which don't have the attribute of prior.\r\n<img width=\"1141\" alt=\"image\" src=\"https://user-images.githubusercontent.com/26090828/69196787-612a1780-0b27-11ea-9e6b-98b7b1396efe.png\">\r\nAny suggestions for this issue?\r\n\r\nEnvironment: \r\nshap                 0.32.0 \r\nscikit-learn         0.22.dev0\r\npython              3.6.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/904", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/904/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/904/events", "html_url": "https://github.com/slundberg/shap/issues/904", "id": 525111695, "node_id": "MDU6SXNzdWU1MjUxMTE2OTU=", "number": 904, "title": "No output from shap.force_plot()?", "user": {"login": "rmahesh123", "id": 29958932, "node_id": "MDQ6VXNlcjI5OTU4OTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/29958932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmahesh123", "html_url": "https://github.com/rmahesh123", "followers_url": "https://api.github.com/users/rmahesh123/followers", "following_url": "https://api.github.com/users/rmahesh123/following{/other_user}", "gists_url": "https://api.github.com/users/rmahesh123/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmahesh123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmahesh123/subscriptions", "organizations_url": "https://api.github.com/users/rmahesh123/orgs", "repos_url": "https://api.github.com/users/rmahesh123/repos", "events_url": "https://api.github.com/users/rmahesh123/events{/privacy}", "received_events_url": "https://api.github.com/users/rmahesh123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-19T16:14:49Z", "updated_at": "2020-02-24T22:26:15Z", "closed_at": "2020-02-24T22:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to give the local explanation of a particular row on my testing dataset.\r\n\r\nGot an error for V20, and it is requiring that I rewrite the function like this:\r\n`shap.summary_plot(explainer.expected_value[0], shap_values[0])` \r\n \r\nMy working code up to that point is:\r\n\r\n`import shap` \r\n`explainer = shap.TreeExplainer(rfc)`\r\n `shap_values = explainer.shap_values(X_test)`\r\n\r\n `shap.force_plot(explainer.expected_value[1], shap_values[1])` \r\n\r\nThe output of the second row (1) comes up with nothing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/903", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/903/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/903/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/903/events", "html_url": "https://github.com/slundberg/shap/issues/903", "id": 525058411, "node_id": "MDU6SXNzdWU1MjUwNTg0MTE=", "number": 903, "title": "Additivity check failed in TreeExplainer", "user": {"login": "EtienneT", "id": 265924, "node_id": "MDQ6VXNlcjI2NTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EtienneT", "html_url": "https://github.com/EtienneT", "followers_url": "https://api.github.com/users/EtienneT/followers", "following_url": "https://api.github.com/users/EtienneT/following{/other_user}", "gists_url": "https://api.github.com/users/EtienneT/gists{/gist_id}", "starred_url": "https://api.github.com/users/EtienneT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EtienneT/subscriptions", "organizations_url": "https://api.github.com/users/EtienneT/orgs", "repos_url": "https://api.github.com/users/EtienneT/repos", "events_url": "https://api.github.com/users/EtienneT/events{/privacy}", "received_events_url": "https://api.github.com/users/EtienneT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-19T14:51:30Z", "updated_at": "2019-11-19T14:53:12Z", "closed_at": "2019-11-19T14:53:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Updated to shap 0.32.1 from 0.30 and now with the exact same code I get this error:\r\n\r\nAdditivity check failed in TreeExplainer! Please report this on GitHub.\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-20-9bd530204955> in <module>\r\n     35     explainer = shap.TreeExplainer(model)\r\n---> 36     shap_values = explainer.shap_values(X)\r\n     37     shap_df = pd.DataFrame(shap_values, columns=X.columns)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\shap\\explainers\\tree.py in shap_values(self, X, y, tree_limit, approximate, check_additivity)\r\n    215 \r\n    216                 if check_additivity and model_output_vals is not None:\r\n--> 217                     self.assert_additivity(out, model_output_vals)\r\n    218 \r\n    219                 return out\r\n\r\n~\\Anaconda3\\lib\\site-packages\\shap\\explainers\\tree.py in assert_additivity(self, phi, model_output)\r\n    392                 assert np.max(np.abs(self.expected_value[i] + phi[i].sum(-1) - model_output[:,i])) < 1e-3, err_msg\r\n    393         else:\r\n--> 394             assert np.max(np.abs(self.expected_value + phi.sum(-1) - model_output)) < 1e-3, err_msg\r\n    395 \r\n    396 \r\n\r\nAssertionError: Additivity check failed in TreeExplainer! Please report this on GitHub. Consider retrying with the feature_dependence='independent' option.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/893", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/893/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/893/events", "html_url": "https://github.com/slundberg/shap/issues/893", "id": 520947321, "node_id": "MDU6SXNzdWU1MjA5NDczMjE=", "number": 893, "title": "AttributeError: module 'shap' has no attribute 'initjs'", "user": {"login": "christophelebrun", "id": 50588617, "node_id": "MDQ6VXNlcjUwNTg4NjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/50588617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christophelebrun", "html_url": "https://github.com/christophelebrun", "followers_url": "https://api.github.com/users/christophelebrun/followers", "following_url": "https://api.github.com/users/christophelebrun/following{/other_user}", "gists_url": "https://api.github.com/users/christophelebrun/gists{/gist_id}", "starred_url": "https://api.github.com/users/christophelebrun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christophelebrun/subscriptions", "organizations_url": "https://api.github.com/users/christophelebrun/orgs", "repos_url": "https://api.github.com/users/christophelebrun/repos", "events_url": "https://api.github.com/users/christophelebrun/events{/privacy}", "received_events_url": "https://api.github.com/users/christophelebrun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T12:56:07Z", "updated_at": "2019-11-11T12:59:39Z", "closed_at": "2019-11-11T12:59:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n\r\nJust trying to run the example, and get this error.\r\n\r\nAny idea ?\r\n\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-64-5629a311798a> in <module>\r\n      3 \r\n      4 # load JS visualization code to notebook\r\n----> 5 shap.initjs()\r\n      6 \r\n      7 # train XGBoost model\r\n\r\nAttributeError: module 'shap' has no attribute 'initjs'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/892", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/892/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/892/events", "html_url": "https://github.com/slundberg/shap/issues/892", "id": 520381332, "node_id": "MDU6SXNzdWU1MjAzODEzMzI=", "number": 892, "title": "SHAP regressions are not local", "user": {"login": "ClearExplanationsAI", "id": 53900394, "node_id": "MDQ6VXNlcjUzOTAwMzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/53900394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClearExplanationsAI", "html_url": "https://github.com/ClearExplanationsAI", "followers_url": "https://api.github.com/users/ClearExplanationsAI/followers", "following_url": "https://api.github.com/users/ClearExplanationsAI/following{/other_user}", "gists_url": "https://api.github.com/users/ClearExplanationsAI/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClearExplanationsAI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClearExplanationsAI/subscriptions", "organizations_url": "https://api.github.com/users/ClearExplanationsAI/orgs", "repos_url": "https://api.github.com/users/ClearExplanationsAI/repos", "events_url": "https://api.github.com/users/ClearExplanationsAI/events{/privacy}", "received_events_url": "https://api.github.com/users/ClearExplanationsAI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-09T10:24:34Z", "updated_at": "2019-11-25T01:00:20Z", "closed_at": "2019-11-25T01:00:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would very grateful for views on an apparent drawback of Kernel SHAP: its kernel weightings do not lead to local regressions.  For a local regression, the kernel weightings should be greatest for observations that are in the same neighbourhood as x (the observation to be explained). Instead SHAP\u2019s weightings \u03c0x\u2019(z\u2019) have high values when z\u2019 is very close or very far from x\u2019 in binary space. For example, with the IRIS dataset the weightings for [1,0,0,0] and [1,1,1,0] are both 0.25, whilst [1,1,0,0] has a weighting of 0.125.  Yet [1,1,0,0] is nearer to x\u2019 than [1,0,0,0]. \r\nFurthermore, SHAP\u2019s synthetic data uses the full range of feature values found in the training dataset. These being used to calculate the conditioned expectations E[f(z)| zs], before being assigned a value of zero in binary space.  The subsequent regression is therefore based on data that is not local to x.\r\nSHAP\u2019s kernel weightings are needed to get Shapley Values, with their desirable properties. But this is at the cost of generating regression coefficients that do not describe the behaviour of the AI system in the neighbourhood around x.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/890", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/890/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/890/events", "html_url": "https://github.com/slundberg/shap/issues/890", "id": 520136339, "node_id": "MDU6SXNzdWU1MjAxMzYzMzk=", "number": 890, "title": "TreeExplainer with feature_dependence='independent' should raise an error if no background dataset passed", "user": {"login": "ssaamm", "id": 3611210, "node_id": "MDQ6VXNlcjM2MTEyMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3611210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssaamm", "html_url": "https://github.com/ssaamm", "followers_url": "https://api.github.com/users/ssaamm/followers", "following_url": "https://api.github.com/users/ssaamm/following{/other_user}", "gists_url": "https://api.github.com/users/ssaamm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssaamm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssaamm/subscriptions", "organizations_url": "https://api.github.com/users/ssaamm/orgs", "repos_url": "https://api.github.com/users/ssaamm/repos", "events_url": "https://api.github.com/users/ssaamm/events{/privacy}", "received_events_url": "https://api.github.com/users/ssaamm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 486901330, "node_id": "MDU6TGFiZWw0ODY5MDEzMzA=", "url": "https://api.github.com/repos/slundberg/shap/labels/todo", "name": "todo", "color": "cccccc", "default": false, "description": "This issue had an outstanding action to take."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-08T17:22:35Z", "updated_at": "2019-11-12T17:20:11Z", "closed_at": "2019-11-12T17:20:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nThe [docs](https://github.com/slundberg/shap/blob/18267b69b22089853e4d0d419e494fee10406899/shap/explainers/tree.py#L62-L63) and [code](https://github.com/slundberg/shap/blob/18267b69b22089853e4d0d419e494fee10406899/shap/explainers/tree.py#L92-L95) make it seem like a `TreeExplainer` object initialized with `feature_dependence='independent'` requires the `data` parameter to also be specified.\r\n\r\nThis code seems to run just fine, though, despite not passing `data`:\r\n\r\n```python\r\nimport xgboost\r\nimport shap\r\n\r\nX,y = shap.datasets.boston()\r\nmodel = xgboost.train({\"learning_rate\": 0.01}, xgboost.DMatrix(X, label=y), 100)\r\n\r\nexplainer = shap.TreeExplainer(model, feature_dependence='independent')\r\nshap_values = explainer.shap_values(X)\r\nprint(len(shap_values))\r\n```\r\n\r\n```$ python shap_test.py\r\n506\r\n```\r\n\r\nHere are relevant versions, if they help:\r\n\r\n```\r\n$ python -V\r\nPython 3.6.8\r\n$ pip freeze\r\njoblib==0.14.0\r\nnumpy==1.17.3\r\npandas==0.25.3\r\npkg-resources==0.0.0\r\npython-dateutil==2.8.1\r\npytz==2019.3\r\nscikit-learn==0.21.3\r\nscipy==1.3.1\r\nshap==0.32.1\r\nsix==1.13.0\r\ntqdm==4.37.0\r\nxgboost==0.90\r\n```\r\n\r\nThanks,\r\nSamuel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/889", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/889/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/889/events", "html_url": "https://github.com/slundberg/shap/issues/889", "id": 520106713, "node_id": "MDU6SXNzdWU1MjAxMDY3MTM=", "number": 889, "title": "PyPI release of 0.32.1 only contains Windows wheels", "user": {"login": "sndrtj", "id": 7782240, "node_id": "MDQ6VXNlcjc3ODIyNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7782240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sndrtj", "html_url": "https://github.com/sndrtj", "followers_url": "https://api.github.com/users/sndrtj/followers", "following_url": "https://api.github.com/users/sndrtj/following{/other_user}", "gists_url": "https://api.github.com/users/sndrtj/gists{/gist_id}", "starred_url": "https://api.github.com/users/sndrtj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sndrtj/subscriptions", "organizations_url": "https://api.github.com/users/sndrtj/orgs", "repos_url": "https://api.github.com/users/sndrtj/repos", "events_url": "https://api.github.com/users/sndrtj/events{/privacy}", "received_events_url": "https://api.github.com/users/sndrtj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-08T16:23:51Z", "updated_at": "2019-11-08T22:21:54Z", "closed_at": "2019-11-08T16:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The PyPI release of 0.32.1 only contains Windows wheels. There are no Mac wheels, and no source tarball either. \r\n\r\nThis effectively means 0.32.1 is uninstallable through PyPI on any platform other than Windows. \r\n\r\nVersion 0.32.0 _does_ have Mac wheels, as well as a source tarball.\r\n\r\nSee: https://pypi.org/project/shap/0.32.1/#files\r\nand:  https://pypi.org/project/shap/0.32.0/#files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/888", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/888/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/888/events", "html_url": "https://github.com/slundberg/shap/issues/888", "id": 520070612, "node_id": "MDU6SXNzdWU1MjAwNzA2MTI=", "number": 888, "title": "module 'shap' has no attribute 'visualize', required to reproduce Figure 4 of the tree SHAP paper", "user": {"login": "mikejump", "id": 24352765, "node_id": "MDQ6VXNlcjI0MzUyNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/24352765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikejump", "html_url": "https://github.com/mikejump", "followers_url": "https://api.github.com/users/mikejump/followers", "following_url": "https://api.github.com/users/mikejump/following{/other_user}", "gists_url": "https://api.github.com/users/mikejump/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikejump/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikejump/subscriptions", "organizations_url": "https://api.github.com/users/mikejump/orgs", "repos_url": "https://api.github.com/users/mikejump/repos", "events_url": "https://api.github.com/users/mikejump/events{/privacy}", "received_events_url": "https://api.github.com/users/mikejump/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-08T15:16:43Z", "updated_at": "2019-11-09T00:22:10Z", "closed_at": "2019-11-09T00:21:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The SHAP-based supervised clustering algorithm's output is summarised in Figure 4 of the tree SHAP paper, with this corresponding notebook: https://github.com/slundberg/shap/blob/master/notebooks/tree_explainer/tree_shap_paper/Figure%204%20-%20Supervised%20Clustering%20Adult%20Census%20Data.ipynb\r\n\r\nI want to get the same visualisation for my own notebook, but running the line,\r\nshap.visualize(shap_values[:2000,:], X_display.iloc[:2000,:], link=shap.LogitLink())\r\n\r\ngives \"AttributeError: module 'shap' has no attribute 'visualize'\".\r\n\r\nI cannot find this function in the library, so it may be missing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/887", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/887/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/887/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/887/events", "html_url": "https://github.com/slundberg/shap/issues/887", "id": 520068279, "node_id": "MDU6SXNzdWU1MjAwNjgyNzk=", "number": 887, "title": "Tree Explainer error in latest version", "user": {"login": "lukemreese", "id": 23705827, "node_id": "MDQ6VXNlcjIzNzA1ODI3", "avatar_url": "https://avatars3.githubusercontent.com/u/23705827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukemreese", "html_url": "https://github.com/lukemreese", "followers_url": "https://api.github.com/users/lukemreese/followers", "following_url": "https://api.github.com/users/lukemreese/following{/other_user}", "gists_url": "https://api.github.com/users/lukemreese/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukemreese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukemreese/subscriptions", "organizations_url": "https://api.github.com/users/lukemreese/orgs", "repos_url": "https://api.github.com/users/lukemreese/repos", "events_url": "https://api.github.com/users/lukemreese/events{/privacy}", "received_events_url": "https://api.github.com/users/lukemreese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-11-08T15:12:20Z", "updated_at": "2020-03-12T10:54:44Z", "closed_at": "2019-11-21T02:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Additivity assertion error just started popping up after latest update. Model is xgboost regression. Same error when run with shap.TreeExplainer(model, feature_dependence = 'independent')\r\n\r\nThis was not happening two days ago. Running on databricks runtime 5.5.\r\n\r\n\r\nAssertionError                            Traceback (most recent call last)\r\n<command-4498218228352399> in <module>()\r\n      2 \r\n      3 explainer = shap.TreeExplainer(model)\r\n----> 4 shap_values = explainer.shap_values(X, y=y.values)\r\n\r\n/databricks/python/lib/python3.6/site-packages/shap/explainers/tree.py in shap_values(self, X, y, tree_limit, approximate, check_additivity)\r\n    215 \r\n    216                 if check_additivity and model_output_vals is not None:\r\n--> 217                     self.assert_additivity(out, model_output_vals)\r\n    218 \r\n    219                 return out\r\n\r\n/databricks/python/lib/python3.6/site-packages/shap/explainers/tree.py in assert_additivity(self, phi, model_output)\r\n    392                 assert np.max(np.abs(self.expected_value[i] + phi[i].sum(-1) - model_output[:,i])) < 1e-3, err_msg\r\n    393         else:\r\n--> 394             assert np.max(np.abs(self.expected_value + phi.sum(-1) - model_output)) < 1e-3, err_msg\r\n    395 \r\n    396 \r\n\r\nAssertionError: Additivity check failed in TreeExplainer! Please report this on GitHub. Consider retrying with the feature_dependence='independent' option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/872", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/872/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/872/events", "html_url": "https://github.com/slundberg/shap/issues/872", "id": 513554289, "node_id": "MDU6SXNzdWU1MTM1NTQyODk=", "number": 872, "title": "shap.TreeExplainer writes to local disk with no option to turn off", "user": {"login": "bschreck", "id": 3237925, "node_id": "MDQ6VXNlcjMyMzc5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3237925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bschreck", "html_url": "https://github.com/bschreck", "followers_url": "https://api.github.com/users/bschreck/followers", "following_url": "https://api.github.com/users/bschreck/following{/other_user}", "gists_url": "https://api.github.com/users/bschreck/gists{/gist_id}", "starred_url": "https://api.github.com/users/bschreck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bschreck/subscriptions", "organizations_url": "https://api.github.com/users/bschreck/orgs", "repos_url": "https://api.github.com/users/bschreck/repos", "events_url": "https://api.github.com/users/bschreck/events{/privacy}", "received_events_url": "https://api.github.com/users/bschreck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T20:58:25Z", "updated_at": "2020-07-22T16:48:54Z", "closed_at": "2020-07-22T16:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "TreeExplainer saves to a hardcoded 'cb_model.json' on initialization from a catboost model:\r\n```\r\nTreeEnsemble(model, self.data, self.data_missing)\r\n```\r\n\r\nWe need the explainer on a read-only drive for serving in production, so this doesn't work with the following traceback:\r\n\r\n```\r\nFile \"/usr/local/lib/python3.6/site-packages/shap/explainers/tree.py\", line 87, in __init__\r\nself.model = TreeEnsemble(model, self.data, self.data_missing)\r\nFile \"/usr/local/lib/python3.6/site-packages/shap/explainers/tree.py\", line 644, in __init__\r\ncb_loader = CatBoostTreeModelLoader(model)\r\nFile \"/usr/local/lib/python3.6/site-packages/shap/explainers/tree.py\", line 1219, in __init__\r\ncb_model.save_model(\"cb_model.json\", format=\"json\")\r\nFile \"/usr/local/lib/python3.6/site-packages/catboost/core.py\", line 2419, in save_model\r\nself._save_model(fname, format, export_parameters, pool)\r\nFile \"/usr/local/lib/python3.6/site-packages/catboost/core.py\", line 1252, in _save_model\r\nself._object._save_model(output_file, format, params_string, pool)\r\nFile \"_catboost.pyx\", line 3875, in _catboost._CatBoost._save_model\r\nFile \"_catboost.pyx\", line 3886, in _catboost._CatBoost._save_model\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/866", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/866/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/866/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/866/events", "html_url": "https://github.com/slundberg/shap/issues/866", "id": 512012239, "node_id": "MDU6SXNzdWU1MTIwMTIyMzk=", "number": 866, "title": "Add support for Spark DecisionTreeRegressionModel", "user": {"login": "QuentinAmbard", "id": 96781, "node_id": "MDQ6VXNlcjk2Nzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/96781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuentinAmbard", "html_url": "https://github.com/QuentinAmbard", "followers_url": "https://api.github.com/users/QuentinAmbard/followers", "following_url": "https://api.github.com/users/QuentinAmbard/following{/other_user}", "gists_url": "https://api.github.com/users/QuentinAmbard/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuentinAmbard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuentinAmbard/subscriptions", "organizations_url": "https://api.github.com/users/QuentinAmbard/orgs", "repos_url": "https://api.github.com/users/QuentinAmbard/repos", "events_url": "https://api.github.com/users/QuentinAmbard/events{/privacy}", "received_events_url": "https://api.github.com/users/QuentinAmbard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-24T15:15:10Z", "updated_at": "2019-10-25T20:32:35Z", "closed_at": "2019-10-25T20:32:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to implement a support for Spark DecisionTreeRegressionModel.\r\n\r\nI'm currently trying with a simple `pyspark.ml.regression.DecisionTreeRegressionModel`: https://github.com/QuentinAmbard/shap/blob/%2338_spark_tree_explainer/tests/explainers/test_tree.py#L257\r\n\r\nIn my implementation, when I build the tree from the spark model, I'm defining the shap `self.values` as being the predictions from spark tree (\r\nhttps://github.com/QuentinAmbard/shap/blob/%2338_spark_tree_explainer/shap/explainers/tree.py#L819)\r\nIs that what it is supposed to be for a regressionTree?\r\nSomething seems to be wrong and I can't find what: when I try to sum the shape values, it's completely off (https://github.com/QuentinAmbard/shap/blob/%2338_spark_tree_explainer/tests/explainers/test_tree.py#L269)\r\n\r\nAm I forgetting something else ?\r\n\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/861", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/861/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/861/events", "html_url": "https://github.com/slundberg/shap/issues/861", "id": 509874787, "node_id": "MDU6SXNzdWU1MDk4NzQ3ODc=", "number": 861, "title": "XGBRegressors new default objective name unknown to TreeExplainer", "user": {"login": "bereRadeck", "id": 23076975, "node_id": "MDQ6VXNlcjIzMDc2OTc1", "avatar_url": "https://avatars3.githubusercontent.com/u/23076975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bereRadeck", "html_url": "https://github.com/bereRadeck", "followers_url": "https://api.github.com/users/bereRadeck/followers", "following_url": "https://api.github.com/users/bereRadeck/following{/other_user}", "gists_url": "https://api.github.com/users/bereRadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/bereRadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bereRadeck/subscriptions", "organizations_url": "https://api.github.com/users/bereRadeck/orgs", "repos_url": "https://api.github.com/users/bereRadeck/repos", "events_url": "https://api.github.com/users/bereRadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/bereRadeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T10:30:40Z", "updated_at": "2019-10-22T00:33:21Z", "closed_at": "2019-10-22T00:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The XGBRegressors default objective 'reg:linear' is now deprecated in favor of 'reg:squarrederror', but using the new default objective name will give you the Exception 'Model does not have a known objective or output type!'  when \r\n`model = xgb.XGBRegressor(gbtree='gbtree', objective='reg:squarederror').fit(x,y)`\r\n`explainer = shap.TreeExplainer(model, x, feature_dependence=\"independent\", model_output=\"logloss\")`\r\nI think this is because the objective_name_map of the TreeEnsemble class needs to be updated, it contains 'reg:linear' but not 'reg:squarrederror'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/slundberg/shap/issues/860", "repository_url": "https://api.github.com/repos/slundberg/shap", "labels_url": "https://api.github.com/repos/slundberg/shap/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/slundberg/shap/issues/860/comments", "events_url": "https://api.github.com/repos/slundberg/shap/issues/860/events", "html_url": "https://github.com/slundberg/shap/issues/860", "id": 509856790, "node_id": "MDU6SXNzdWU1MDk4NTY3OTA=", "number": 860, "title": "TreeExplainer inconsistent parameter naming: 'log_loss' vs 'logloss'", "user": {"login": "bereRadeck", "id": 23076975, "node_id": "MDQ6VXNlcjIzMDc2OTc1", "avatar_url": "https://avatars3.githubusercontent.com/u/23076975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bereRadeck", "html_url": "https://github.com/bereRadeck", "followers_url": "https://api.github.com/users/bereRadeck/followers", "following_url": "https://api.github.com/users/bereRadeck/following{/other_user}", "gists_url": "https://api.github.com/users/bereRadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/bereRadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bereRadeck/subscriptions", "organizations_url": "https://api.github.com/users/bereRadeck/orgs", "repos_url": "https://api.github.com/users/bereRadeck/repos", "events_url": "https://api.github.com/users/bereRadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/bereRadeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T09:55:41Z", "updated_at": "2019-10-22T00:35:32Z", "closed_at": "2019-10-22T00:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nthis is just a small issue: In the doc-string of the TreeExplainer class the parameter values for \"model_output\" are given as  \"margin\", \"probability\", or \"log_loss\", but in the code \"logloss\" is used. Using the naming as proposed in the doc-string will give you e.g. an UnboundLocalError in the get_transform function of the TreeExplainer class, because checks like\r\n`elif model_output == \"logloss\"`  will be False", "performed_via_github_app": null, "score": 1.0}]}