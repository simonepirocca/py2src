{"total_count": 38, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/141", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/141/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/141/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/141", "id": 578250108, "node_id": "MDU6SXNzdWU1NzgyNTAxMDg=", "number": 141, "title": "cytoolz.curry missing _partial attribute", "user": {"login": "groutr", "id": 10678620, "node_id": "MDQ6VXNlcjEwNjc4NjIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10678620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groutr", "html_url": "https://github.com/groutr", "followers_url": "https://api.github.com/users/groutr/followers", "following_url": "https://api.github.com/users/groutr/following{/other_user}", "gists_url": "https://api.github.com/users/groutr/gists{/gist_id}", "starred_url": "https://api.github.com/users/groutr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groutr/subscriptions", "organizations_url": "https://api.github.com/users/groutr/orgs", "repos_url": "https://api.github.com/users/groutr/repos", "events_url": "https://api.github.com/users/groutr/events{/privacy}", "received_events_url": "https://api.github.com/users/groutr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-09T23:38:58Z", "updated_at": "2020-03-10T18:28:27Z", "closed_at": "2020-03-10T18:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ran across this modifying dask to use cytoolz when available.  dask uses the _partial attribute of a curry instance to normalize a function. However, cytoolz doesn't implement this _partial attribute.\r\n\r\ncytoolz needs to expose a _partial attribute, even if it doesn't use it internally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/136", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/136/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/136/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/136", "id": 505423014, "node_id": "MDU6SXNzdWU1MDU0MjMwMTQ=", "number": 136, "title": "Fails to build on Python 3.8", "user": {"login": "cheeseandcereal", "id": 11189778, "node_id": "MDQ6VXNlcjExMTg5Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/11189778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheeseandcereal", "html_url": "https://github.com/cheeseandcereal", "followers_url": "https://api.github.com/users/cheeseandcereal/followers", "following_url": "https://api.github.com/users/cheeseandcereal/following{/other_user}", "gists_url": "https://api.github.com/users/cheeseandcereal/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheeseandcereal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheeseandcereal/subscriptions", "organizations_url": "https://api.github.com/users/cheeseandcereal/orgs", "repos_url": "https://api.github.com/users/cheeseandcereal/repos", "events_url": "https://api.github.com/users/cheeseandcereal/events{/privacy}", "received_events_url": "https://api.github.com/users/cheeseandcereal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-10-10T17:58:52Z", "updated_at": "2019-11-12T00:44:25Z", "closed_at": "2019-11-04T02:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python 3.8, cytoolz cannot build/install.\r\n\r\nIt appears to fail while compiling the dicttoolz.c file.\r\n\r\nSee here for the full log:\r\nhttps://pastebin.com/hrYA77um\r\n\r\nIf you have docker, you can quickly/easily replicate this with `docker run python:3.8-rc python -m pip install cytoolz==0.10.0`\r\n\r\nNote that this appears to be related (and would be resolved) by fixing #134, as I can confirm that cloning the repository and using the `0.10.0` tag, I can successfully build and install the package with `python setup.py build --cython` after removing all of the generated .c files on python 3.8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/134", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/134/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/134/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/134", "id": 498415455, "node_id": "MDU6SXNzdWU0OTg0MTU0NTU=", "number": 134, "title": "make cython an install time dependency and do not ship .c files in sdist", "user": {"login": "tacaswell", "id": 199813, "node_id": "MDQ6VXNlcjE5OTgxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tacaswell", "html_url": "https://github.com/tacaswell", "followers_url": "https://api.github.com/users/tacaswell/followers", "following_url": "https://api.github.com/users/tacaswell/following{/other_user}", "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions", "organizations_url": "https://api.github.com/users/tacaswell/orgs", "repos_url": "https://api.github.com/users/tacaswell/repos", "events_url": "https://api.github.com/users/tacaswell/events{/privacy}", "received_events_url": "https://api.github.com/users/tacaswell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-25T17:12:31Z", "updated_at": "2019-11-05T05:02:52Z", "closed_at": "2019-11-04T02:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The .c files generated by cython are not forward compatible so the current sdist will not install on cpython master (and given the errors, I assume 3.8b4, but I have not tried). \r\n\r\nHaving a cython dependency when installing from source is not too bad (cython can be pip-installed and you need a compiler either way) and wheels can be used to serve users who need to have no install time dependencies.\r\n\r\nThis is the opposite request of #4.\r\n\r\nInstalling from the repository works correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/127", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/127/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/127/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/127", "id": 435991510, "node_id": "MDU6SXNzdWU0MzU5OTE1MTA=", "number": 127, "title": "Segmentation fault when using keymap on os.environ", "user": {"login": "CMCDragonkai", "id": 640797, "node_id": "MDQ6VXNlcjY0MDc5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/640797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMCDragonkai", "html_url": "https://github.com/CMCDragonkai", "followers_url": "https://api.github.com/users/CMCDragonkai/followers", "following_url": "https://api.github.com/users/CMCDragonkai/following{/other_user}", "gists_url": "https://api.github.com/users/CMCDragonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMCDragonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMCDragonkai/subscriptions", "organizations_url": "https://api.github.com/users/CMCDragonkai/orgs", "repos_url": "https://api.github.com/users/CMCDragonkai/repos", "events_url": "https://api.github.com/users/CMCDragonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/CMCDragonkai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T04:17:39Z", "updated_at": "2019-07-11T19:14:29Z", "closed_at": "2019-07-11T19:14:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "See here:\r\n\r\n```py\r\nimport os\r\nfrom cytoolz import dicttoolz\r\n\r\nparameters_extra = dicttoolz.keymap(\r\n    lambda k: {\r\n        env_prefix + 'PARAMETERS_MODEL_TYPE': 'model_type',\r\n        env_prefix + 'PARMAETERS_CLASS_COUNT': 'class_count',\r\n        env_prefix + 'PARAMETERS_IMAGE_SIZE': 'image_size',\r\n        env_prefix + 'PARAMETERS_CHANNEL_COUNT': 'channel_count',\r\n        env_prefix + 'PARAMETERS_CHANNEL_MEAN': 'channel_mean',\r\n        env_prefix + 'PARAMETERS_CHANNEL_STDDEV': 'channel_stddev'\r\n    }.get(k, k), os.environ)\r\n```\r\n\r\nI have to end up converting it to a dictionary first via `vars(os.environ)`. Which is fine, but shouldn't result in a segfault if I don't.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/123", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/123/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/123/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/123", "id": 343679874, "node_id": "MDU6SXNzdWUzNDM2Nzk4NzQ=", "number": 123, "title": "Incorrect results from cytoolz.sliding_window", "user": {"login": "Gerenuk", "id": 3168512, "node_id": "MDQ6VXNlcjMxNjg1MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3168512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gerenuk", "html_url": "https://github.com/Gerenuk", "followers_url": "https://api.github.com/users/Gerenuk/followers", "following_url": "https://api.github.com/users/Gerenuk/following{/other_user}", "gists_url": "https://api.github.com/users/Gerenuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gerenuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gerenuk/subscriptions", "organizations_url": "https://api.github.com/users/Gerenuk/orgs", "repos_url": "https://api.github.com/users/Gerenuk/repos", "events_url": "https://api.github.com/users/Gerenuk/events{/privacy}", "received_events_url": "https://api.github.com/users/Gerenuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-23T15:22:22Z", "updated_at": "2019-07-10T16:44:54Z", "closed_at": "2019-07-10T16:44:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code incorrectly produces an empty list\r\n\r\n    from cytoolz import pipe\r\n    import cytoolz\r\n    import toolz\r\n\r\n    pipe([\"aaaaa\", \"bbbbbbbb\"],\r\n         cytoolz.curried.map(lambda x:list(cytoolz.sliding_window(7, x))),\r\n         list,\r\n        )\r\n\r\nwith cytoolz 0.9.0.1 on Python 3.6.\r\n\r\nNote that using toolz.sliding_window would give correct results.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/122", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/122/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/122/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/122", "id": 333884458, "node_id": "MDU6SXNzdWUzMzM4ODQ0NTg=", "number": 122, "title": "Test failure with python 3.7", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-20T00:30:49Z", "updated_at": "2019-07-31T03:18:35Z", "closed_at": "2019-07-10T16:43:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n+ py.test-3.7 cytoolz\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.0rc1, pytest-3.6.1, py-1.5.3, pluggy-0.6.0\r\nrootdir: /builddir/build/BUILDROOT/python-cytoolz-0.9.0.1-1.fc29.x86_64/usr/lib64/python3.7/site-packages, inifile:\r\ncollected 190 items\r\n\r\n=================================== FAILURES ===================================\r\n_______________________ test_introspect_builtin_modules ________________________\r\n    def test_introspect_builtin_modules():\r\n        mods = [builtins, functools, itertools, operator, cytoolz,\r\n                cytoolz.functoolz, cytoolz.itertoolz, cytoolz.dicttoolz, cytoolz.recipes]\r\n    \r\n        blacklist = set()\r\n    \r\n        def add_blacklist(mod, attr):\r\n            if hasattr(mod, attr):\r\n                blacklist.add(getattr(mod, attr))\r\n    \r\n        add_blacklist(builtins, 'basestring')\r\n        add_blacklist(builtins, 'NoneType')\r\n        add_blacklist(builtins, '__metaclass__')\r\n        add_blacklist(builtins, 'sequenceiterator')\r\n    \r\n        def is_missing(modname, name, func):\r\n            if name.startswith('_') and not name.startswith('__'):\r\n                return False\r\n            if name.startswith('__pyx_unpickle_') or name.endswith('_cython__'):\r\n                return False\r\n            try:\r\n                if issubclass(func, BaseException):\r\n                    return False\r\n            except TypeError:\r\n                pass\r\n            try:\r\n                return (callable(func)\r\n                        and func.__module__ is not None\r\n                        and modname in func.__module__\r\n                        and is_partial_args(func, (), {}) is not True\r\n                        and func not in blacklist)\r\n            except AttributeError:\r\n                return False\r\n    \r\n        missing = {}\r\n        for mod in mods:\r\n            modname = mod.__name__\r\n            for name, func in vars(mod).items():\r\n                if is_missing(modname, name, func):\r\n                    if modname not in missing:\r\n                        missing[modname] = []\r\n                    missing[modname].append(name)\r\n        if missing:\r\n            messages = []\r\n            for modname, names in sorted(missing.items()):\r\n                msg = '{0}:\\n    {1}'.format(modname, '\\n    '.join(sorted(names)))\r\n                messages.append(msg)\r\n            message = 'Missing introspection for the following callables:\\n\\n'\r\n>           raise AssertionError(message + '\\n\\n'.join(messages))\r\nE           AssertionError: Missing introspection for the following callables:\r\nE           \r\nE           builtins:\r\nE               breakpoint\r\ncytoolz/tests/test_inspect_args.py:442: AssertionError\r\n===================== 1 failed, 189 passed in 1.63 seconds =====================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/120", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/120/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/120/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/120", "id": 294482117, "node_id": "MDU6SXNzdWUyOTQ0ODIxMTc=", "number": 120, "title": "undefined symbol: PyFPE_jbuf on stock Ubuntu 17.10", "user": {"login": "carver", "id": 205327, "node_id": "MDQ6VXNlcjIwNTMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/205327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carver", "html_url": "https://github.com/carver", "followers_url": "https://api.github.com/users/carver/followers", "following_url": "https://api.github.com/users/carver/following{/other_user}", "gists_url": "https://api.github.com/users/carver/gists{/gist_id}", "starred_url": "https://api.github.com/users/carver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carver/subscriptions", "organizations_url": "https://api.github.com/users/carver/orgs", "repos_url": "https://api.github.com/users/carver/repos", "events_url": "https://api.github.com/users/carver/events{/privacy}", "received_events_url": "https://api.github.com/users/carver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-05T17:45:03Z", "updated_at": "2018-05-08T17:44:13Z", "closed_at": "2018-02-05T19:58:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to import after a successful install gives:\r\n\r\n```sh\r\n    from cytoolz import (\r\n  File \"~/venv/lib/python3.6/site-packages/cytoolz/__init__.py\", line 3, in <module>\r\n    from .functoolz import *\r\nImportError:~/venv/lib/python3.6/site-packages/cytoolz/functoolz.cpython-36m-x86_64-linux-gnu.so: undefined symbol: PyFPE_jbuf\r\n```\r\n\r\nIt appears that cytoolz was built against a cpython with `--with-fpectl` on, which causes the above error when run on a cpython that is built without the flag. Ubuntu had the flag in the stock python in 17.04, then removed the flag in 17.10\r\n\r\nHere is the unresolved issue with Python devs discussing how to handle it: https://bugs.python.org/issue29137\r\n\r\nIs it possible to release a cytoolz that is built against a cpython without the flag? I don't see the fpectl module imported in pytoolz. (I'm pretty clueless in the area, so pardon my ignorance).\r\n\r\nSome other relevant discussions, which mostly suggest building your own cpython (or cytoolz) locally as the only known workaround:\r\n- https://stackoverflow.com/a/47703373/8412986\r\n- https://github.com/numpy/numpy/issues/8415\r\n- https://github.com/ethereum/web3.py/issues/554", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/118", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/118/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/118/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/118", "id": 287097324, "node_id": "MDU6SXNzdWUyODcwOTczMjQ=", "number": 118, "title": "cytoolz not working in pypy", "user": {"login": "mosynaq", "id": 7660183, "node_id": "MDQ6VXNlcjc2NjAxODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7660183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mosynaq", "html_url": "https://github.com/mosynaq", "followers_url": "https://api.github.com/users/mosynaq/followers", "following_url": "https://api.github.com/users/mosynaq/following{/other_user}", "gists_url": "https://api.github.com/users/mosynaq/gists{/gist_id}", "starred_url": "https://api.github.com/users/mosynaq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mosynaq/subscriptions", "organizations_url": "https://api.github.com/users/mosynaq/orgs", "repos_url": "https://api.github.com/users/mosynaq/repos", "events_url": "https://api.github.com/users/mosynaq/events{/privacy}", "received_events_url": "https://api.github.com/users/mosynaq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T13:57:19Z", "updated_at": "2018-01-10T15:00:36Z", "closed_at": "2018-01-10T15:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just installed cytoolz on pypy 2.7.13 and ran the following:\r\n```bash\r\n$ pypy\r\n>>>> import cytoolz\r\n```\r\nand I got:\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: No module named cytools\r\n>>>> import cytoolz\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/pypy2.7/dist-packages/cytoolz/__init__.py\", line 1, in <module>\r\n    from .itertoolz import *\r\nImportError: unable to load extension module '/usr/local/lib/pypy2.7/dist-packages/cytoolz/itertoolz.pypy-41-x86_64-linux-gnu.so': /usr/local/lib/pypy2.7/dist-packages/cytoolz/itertoolz.pypy-41-x86_64-linux-gnu.so: undefined symbol: PyPyString_Check\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/116", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/116/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/116/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/116", "id": 285193246, "node_id": "MDU6SXNzdWUyODUxOTMyNDY=", "number": 116, "title": "Test failure: test_curried_doctests.test_doctests", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-30T09:20:12Z", "updated_at": "2018-03-06T05:55:37Z", "closed_at": "2018-03-06T05:55:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nERROR: test_curried_doctests.test_doctests\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/fpypv9j5xcnh2x5pv3hv59a3cqkl4cgc-python2.7-nose-1.3.7/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/nix/store/hzmv4zkz2wrl3kfr28n2hirfizlid5v4-python2.7-cytoolz-0.9.0/lib/python2.7/site-packages/cytoolz/tests/test_curried_doctests.py\", line 10, in test_doctests\r\n    assert doctest.testmod(cytoolz).failed == 0\r\n  File \"/nix/store/hr461qqci171p6k53wwz52ifyp2h9g9l-python-2.7.14/lib/python2.7/doctest.py\", line 1910, in testmod\r\n    for test in finder.find(m, name, globs=globs, extraglobs=extraglobs):\r\n  File \"/nix/store/hr461qqci171p6k53wwz52ifyp2h9g9l-python-2.7.14/lib/python2.7/doctest.py\", line 926, in find\r\n    self._find(tests, obj, name, module, source_lines, globs, {})\r\n  File \"/nix/store/hr461qqci171p6k53wwz52ifyp2h9g9l-python-2.7.14/lib/python2.7/doctest.py\", line 995, in _find\r\n    (type(val),))\r\nValueError: DocTestFinder.find: __test__ values must be strings, functions, methods, classes, or modules: <type 'cython_function_or_method'>\r\n```\r\n\r\nThe failure occurs with Python 2.7, but not with 3.5 or 3.6.\r\n\r\nBuild log:\r\nhttps://nix-cache.s3.amazonaws.com/log/gd87cl101zp1jm669ri024q85ivd9pnl-python2.7-cytoolz-0.9.0.drv\r\n\r\nBuild job:\r\nhttps://hydra.nixos.org/build/66843545", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/106", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/106/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/106/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/106", "id": 261113721, "node_id": "MDU6SXNzdWUyNjExMTM3MjE=", "number": 106, "title": "take() and post iteration statements don't play well", "user": {"login": "kaushik-work", "id": 6299530, "node_id": "MDQ6VXNlcjYyOTk1MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6299530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaushik-work", "html_url": "https://github.com/kaushik-work", "followers_url": "https://api.github.com/users/kaushik-work/followers", "following_url": "https://api.github.com/users/kaushik-work/following{/other_user}", "gists_url": "https://api.github.com/users/kaushik-work/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaushik-work/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaushik-work/subscriptions", "organizations_url": "https://api.github.com/users/kaushik-work/orgs", "repos_url": "https://api.github.com/users/kaushik-work/repos", "events_url": "https://api.github.com/users/kaushik-work/events{/privacy}", "received_events_url": "https://api.github.com/users/kaushik-work/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-27T20:50:51Z", "updated_at": "2017-09-28T13:08:25Z", "closed_at": "2017-09-28T13:08:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The setup\r\n\r\n```\r\nimport cytoolz.curried as cyt\r\n\r\n\r\ndef source(N=10):\r\n    for n in range(N):\r\n        yield n\r\n    print('source: After all is done')\r\n        \r\ndef foo(i):\r\n    for n in i:\r\n        print(n)\r\n        yield n\r\n    print('foo: After all is done')\r\n```\r\n\r\nThis works as expected\r\n\r\n```\r\nr1 = source()\r\nr2 = foo\r\n\r\nfor x in cyt.pipe(r1, r2):\r\n    pass\r\n\r\n--->\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\nsource: After all is done\r\nfoo: After all is done\r\n```\r\n\r\nThis does not\r\n\r\n```\r\nr1 = source()\r\nr2 = foo\r\n\r\nfor x in cyt.pipe(r1, r2, cyt.take(5)):\r\n    pass\r\n\r\n--->\r\n\r\n0\r\n1\r\n2\r\n3\r\n4\r\n```\r\nThis is not expected behavior. I would expect the post StopIteration statements to work here too. One can argue that `source` has been abruptly terminated, so it's post iteration won't work, but `foo` knows nothing about `source`: it should definitely behave like the iterator has run out.\r\n\r\nThanks!\r\n-Kaushik\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/104", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/104/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/104/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/104", "id": 260704484, "node_id": "MDU6SXNzdWUyNjA3MDQ0ODQ=", "number": 104, "title": "cytoolz.get() produces \"Segmentation fault\" with numpy array", "user": {"login": "andyisimprovised", "id": 1066590, "node_id": "MDQ6VXNlcjEwNjY1OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1066590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyisimprovised", "html_url": "https://github.com/andyisimprovised", "followers_url": "https://api.github.com/users/andyisimprovised/followers", "following_url": "https://api.github.com/users/andyisimprovised/following{/other_user}", "gists_url": "https://api.github.com/users/andyisimprovised/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyisimprovised/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyisimprovised/subscriptions", "organizations_url": "https://api.github.com/users/andyisimprovised/orgs", "repos_url": "https://api.github.com/users/andyisimprovised/repos", "events_url": "https://api.github.com/users/andyisimprovised/events{/privacy}", "received_events_url": "https://api.github.com/users/andyisimprovised/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-26T17:21:36Z", "updated_at": "2017-09-27T06:50:38Z", "closed_at": "2017-09-26T20:11:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThe \"Segmentation fault\" is reproducible with the following code snippet\r\n\r\n```python\r\nimport cytoolz\r\nimport numpy\r\nx = numpy.asarray([0])\r\ncytoolz.get(0, x)\r\n```\r\n\r\nUsing the normal `toolz` module does not result in failure.  Using a normal python `list` object does not result in failure with `cytoolz`, either, as should be expected.\r\n\r\nIt should be said that I am running these versions of numpy and cytoolz:\r\n\r\n```\r\nnumpy==1.13.1\r\ncytoolz==0.8.2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/103", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/103/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/103/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/103", "id": 248557269, "node_id": "MDU6SXNzdWUyNDg1NTcyNjk=", "number": 103, "title": "'cytoolz.functoolz.Compose' object has no attribute '__module__'", "user": {"login": "djrtwo", "id": 1433595, "node_id": "MDQ6VXNlcjE0MzM1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1433595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrtwo", "html_url": "https://github.com/djrtwo", "followers_url": "https://api.github.com/users/djrtwo/followers", "following_url": "https://api.github.com/users/djrtwo/following{/other_user}", "gists_url": "https://api.github.com/users/djrtwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrtwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrtwo/subscriptions", "organizations_url": "https://api.github.com/users/djrtwo/orgs", "repos_url": "https://api.github.com/users/djrtwo/repos", "events_url": "https://api.github.com/users/djrtwo/events{/privacy}", "received_events_url": "https://api.github.com/users/djrtwo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-07T23:16:01Z", "updated_at": "2017-12-17T17:25:40Z", "closed_at": "2017-12-16T16:39:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When porting to cytoolz from toolz, I ran into the problem where the some previous library code was expecting `Compose` to have `__module__` defined. I'm new to the project, but would expect the goal to be to generally to be able to move to cytoolz from toolz without any issues.\r\n\r\nShould this be defined in Compose? If so, I can work to add it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/102", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/102/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/102/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/102", "id": 243023442, "node_id": "MDU6SXNzdWUyNDMwMjM0NDI=", "number": 102, "title": "`partition` partitions into tuples, not into chunks of original type", "user": {"login": "wrobell", "id": 105664, "node_id": "MDQ6VXNlcjEwNTY2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/105664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrobell", "html_url": "https://github.com/wrobell", "followers_url": "https://api.github.com/users/wrobell/followers", "following_url": "https://api.github.com/users/wrobell/following{/other_user}", "gists_url": "https://api.github.com/users/wrobell/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrobell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrobell/subscriptions", "organizations_url": "https://api.github.com/users/wrobell/orgs", "repos_url": "https://api.github.com/users/wrobell/repos", "events_url": "https://api.github.com/users/wrobell/events{/privacy}", "received_events_url": "https://api.github.com/users/wrobell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-14T15:02:03Z", "updated_at": "2017-07-28T13:47:38Z", "closed_at": "2017-07-28T13:47:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having a byte array\r\n```\r\ndata = bytearray(range(1000))\r\n```\r\nI would like to partition it into chunks\r\n```\r\nchunks = partition(10, data)\r\n```\r\nand parse the chunks with `struct`\r\n```\r\nitems = (struct.unpack('...', item) for item in chunks)\r\n```\r\nThis does not work in Python 3. The `item` has to be a buffer not tuple, so a workaround is needed\r\n```\r\nitems = (struct.unpack('...', bytes(item)) for item in chunks)\r\n```\r\n\r\nIt would be great if above operation could be performed without the workaround.\r\nCould `partition` and `partition_all` functions preserve the type of the input sequence?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/101", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/101/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/101/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/101", "id": 242865350, "node_id": "MDU6SXNzdWUyNDI4NjUzNTA=", "number": 101, "title": "cannot cimport cytoolz", "user": {"login": "llllllllll", "id": 3064397, "node_id": "MDQ6VXNlcjMwNjQzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3064397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llllllllll", "html_url": "https://github.com/llllllllll", "followers_url": "https://api.github.com/users/llllllllll/followers", "following_url": "https://api.github.com/users/llllllllll/following{/other_user}", "gists_url": "https://api.github.com/users/llllllllll/gists{/gist_id}", "starred_url": "https://api.github.com/users/llllllllll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llllllllll/subscriptions", "organizations_url": "https://api.github.com/users/llllllllll/orgs", "repos_url": "https://api.github.com/users/llllllllll/repos", "events_url": "https://api.github.com/users/llllllllll/events{/privacy}", "received_events_url": "https://api.github.com/users/llllllllll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-14T00:22:56Z", "updated_at": "2017-12-16T21:17:42Z", "closed_at": "2017-12-16T21:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "in `__init__.py` `functoolz.memoize` is patched to be `curry(functoolz.memoize). `functoolz.pxd` defines `memoize` as a `cdef class` so the code fails at import time with: `cytoolz.functoolz.memoize is not a type object`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/97", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/97/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/97/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/97", "id": 205103665, "node_id": "MDU6SXNzdWUyMDUxMDM2NjU=", "number": 97, "title": "Failing test: test_serialization.test_curried_exceptions", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-03T09:02:47Z", "updated_at": "2017-12-17T17:22:58Z", "closed_at": "2017-12-17T17:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following test fails with cytoolz 0.8.2 and Python 2.7 and 3.5.\r\n\r\n```\r\n======================================================================\r\nERROR: test_serialization.test_curried_exceptions\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/6hi80zli5wmih067bj51lcilgcx6jg62-python2.7-nose-1.3.7/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/nix/store/k6phaf0pr611kj7yic8hmg6lvfacfbyv-python2.7-cytoolz-0.8.2/lib/python2.7/site-packages/cytoolz/tests/test_serialization.py\", line 65, in test_curried_exceptions\r\n    merge = pickle.loads(pickle.dumps(cytoolz.curried.exceptions.merge))\r\nAttributeError: 'module' object has no attribute 'exceptions'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/87", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/87/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/87/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/87", "id": 186195788, "node_id": "MDU6SXNzdWUxODYxOTU3ODg=", "number": 87, "title": "Compilation fails with Cython>=0.25", "user": {"login": "achidlow", "id": 5511888, "node_id": "MDQ6VXNlcjU1MTE4ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5511888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achidlow", "html_url": "https://github.com/achidlow", "followers_url": "https://api.github.com/users/achidlow/followers", "following_url": "https://api.github.com/users/achidlow/following{/other_user}", "gists_url": "https://api.github.com/users/achidlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/achidlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achidlow/subscriptions", "organizations_url": "https://api.github.com/users/achidlow/orgs", "repos_url": "https://api.github.com/users/achidlow/repos", "events_url": "https://api.github.com/users/achidlow/events{/privacy}", "received_events_url": "https://api.github.com/users/achidlow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-31T03:27:03Z", "updated_at": "2016-10-31T15:13:34Z", "closed_at": "2016-10-31T15:13:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Cython.Compiler.Options.directive_defaults`, which is used in `setup.py` to turn `embedsignature` and `binding` on [has been removed](https://github.com/cython/cython/blob/master/CHANGES.rst#other-changes-1). It's replace `get_directive_defaults()` doesn't look like it will do the same thing. \r\n\r\nI propose setting compiler directives via [compiler_directives](http://cython.readthedocs.io/en/latest/src/reference/compilation.html#in-setup-py) option to `cythonize`. It should do exactly the same thing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/85", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/85/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/85/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/85", "id": 185347022, "node_id": "MDU6SXNzdWUxODUzNDcwMjI=", "number": 85, "title": "cytoolz cimport fails", "user": {"login": "achidlow", "id": 5511888, "node_id": "MDQ6VXNlcjU1MTE4ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5511888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achidlow", "html_url": "https://github.com/achidlow", "followers_url": "https://api.github.com/users/achidlow/followers", "following_url": "https://api.github.com/users/achidlow/following{/other_user}", "gists_url": "https://api.github.com/users/achidlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/achidlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achidlow/subscriptions", "organizations_url": "https://api.github.com/users/achidlow/orgs", "repos_url": "https://api.github.com/users/achidlow/repos", "events_url": "https://api.github.com/users/achidlow/events{/privacy}", "received_events_url": "https://api.github.com/users/achidlow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-26T09:54:25Z", "updated_at": "2016-10-26T16:35:43Z", "closed_at": "2016-10-26T16:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "`from cytoolz cimport isdistinct` fails to compile, as `tail` is `cimport`ed in `__init__.pxd` but not declared in `itertoolz.pxd`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/81", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/81/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/81/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/81", "id": 175221984, "node_id": "MDU6SXNzdWUxNzUyMjE5ODQ=", "number": 81, "title": "Setup github releases", "user": {"login": "gdonval", "id": 2644113, "node_id": "MDQ6VXNlcjI2NDQxMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2644113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdonval", "html_url": "https://github.com/gdonval", "followers_url": "https://api.github.com/users/gdonval/followers", "following_url": "https://api.github.com/users/gdonval/following{/other_user}", "gists_url": "https://api.github.com/users/gdonval/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdonval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdonval/subscriptions", "organizations_url": "https://api.github.com/users/gdonval/orgs", "repos_url": "https://api.github.com/users/gdonval/repos", "events_url": "https://api.github.com/users/gdonval/events{/privacy}", "received_events_url": "https://api.github.com/users/gdonval/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-06T11:17:38Z", "updated_at": "2016-12-05T04:28:49Z", "closed_at": "2016-12-05T04:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please [setup releases](https://help.github.com/articles/creating-releases/) on Github as you did with `Toolz`, it is better for packaging than cloning the whole repository and history and then checking out a given tag.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/80", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/80/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/80/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/80", "id": 158564321, "node_id": "MDU6SXNzdWUxNTg1NjQzMjE=", "number": 80, "title": "Add & Push tags for Releases", "user": {"login": "mindw", "id": 578872, "node_id": "MDQ6VXNlcjU3ODg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/578872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindw", "html_url": "https://github.com/mindw", "followers_url": "https://api.github.com/users/mindw/followers", "following_url": "https://api.github.com/users/mindw/following{/other_user}", "gists_url": "https://api.github.com/users/mindw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindw/subscriptions", "organizations_url": "https://api.github.com/users/mindw/orgs", "repos_url": "https://api.github.com/users/mindw/repos", "events_url": "https://api.github.com/users/mindw/events{/privacy}", "received_events_url": "https://api.github.com/users/mindw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-05T17:16:50Z", "updated_at": "2016-12-05T04:27:58Z", "closed_at": "2016-12-05T04:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "0.8.0 etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/78", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/78/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/78/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/78", "id": 158079932, "node_id": "MDU6SXNzdWUxNTgwNzk5MzI=", "number": 78, "title": "Failled installation on windows", "user": {"login": "tadas-subonis", "id": 247218, "node_id": "MDQ6VXNlcjI0NzIxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/247218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tadas-subonis", "html_url": "https://github.com/tadas-subonis", "followers_url": "https://api.github.com/users/tadas-subonis/followers", "following_url": "https://api.github.com/users/tadas-subonis/following{/other_user}", "gists_url": "https://api.github.com/users/tadas-subonis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tadas-subonis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tadas-subonis/subscriptions", "organizations_url": "https://api.github.com/users/tadas-subonis/orgs", "repos_url": "https://api.github.com/users/tadas-subonis/repos", "events_url": "https://api.github.com/users/tadas-subonis/events{/privacy}", "received_events_url": "https://api.github.com/users/tadas-subonis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-02T07:55:04Z", "updated_at": "2016-06-02T23:54:55Z", "closed_at": "2016-06-02T23:54:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried doing pip install cytoolz but got this:\n\n```\ndicttoolz.obj : warning LNK4197: export 'PyInit_dicttoolz' specified multiple times; using first specification\n\n   Creating library build\\temp.win-amd64-3.3\\Release\\cytoolz\\dicttoolz.lib and object build\\temp.win-amd64-3.3\\Release\\cytoolz\\dicttoolz.exp\n\nbuilding 'cytoolz.functoolz' extension\n\nC:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\\Python33-64bit\\include -IC:\\Python33-64bit\\include /Tccytoolz/functoolz.c /Fobuild\\temp.win-amd64-3.3\\Release\\cytoolz/functoolz.obj\n\nfunctoolz.c\n\nC:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\\Python33-64bit\\libs /LIBPATH:C:\\Python33-64bit\\PCbuild\\amd64 /EXPORT:PyInit_functoolz build\\temp.win-amd64-3.3\\Release\\cytoolz/functoolz.obj /OUT:build\\lib.win-amd64-3.3\\cytoolz\\functoolz.pyd /IMPLIB:build\\temp.win-amd64-3.3\\Release\\cytoolz\\functoolz.lib /MANIFESTFILE:build\\temp.win-amd64-3.3\\Release\\cytoolz\\functoolz.pyd.manifest\n\nfunctoolz.obj : warning LNK4197: export 'PyInit_functoolz' specified multiple times; using first specification\n\n   Creating library build\\temp.win-amd64-3.3\\Release\\cytoolz\\functoolz.lib and object build\\temp.win-amd64-3.3\\Release\\cytoolz\\functoolz.exp\n\nbuilding 'cytoolz.itertoolz' extension\n\nC:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\\Python33-64bit\\include -IC:\\Python33-64bit\\include /Tccytoolz/itertoolz.c /Fobuild\\temp.win-amd64-3.3\\Release\\cytoolz/itertoolz.obj\n\nitertoolz.c\n\nC:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\\Python33-64bit\\libs /LIBPATH:C:\\Python33-64bit\\PCbuild\\amd64 /EXPORT:PyInit_itertoolz build\\temp.win-amd64-3.3\\Release\\cytoolz/itertoolz.obj /OUT:build\\lib.win-amd64-3.3\\cytoolz\\itertoolz.pyd /IMPLIB:build\\temp.win-amd64-3.3\\Release\\cytoolz\\itertoolz.lib /MANIFESTFILE:build\\temp.win-amd64-3.3\\Release\\cytoolz\\itertoolz.pyd.manifest\n\nitertoolz.obj : warning LNK4197: export 'PyInit_itertoolz' specified multiple times; using first specification\n\n   Creating library build\\temp.win-amd64-3.3\\Release\\cytoolz\\itertoolz.lib and object build\\temp.win-amd64-3.3\\Release\\cytoolz\\itertoolz.exp\n\nbuilding 'cytoolz.curried/exceptions' extension\n\ncreating build\\temp.win-amd64-3.3\\Release\\cytoolz\\curried\n\nC:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\\Python33-64bit\\include -IC:\\Python33-64bit\\include /Tccytoolz/curried/exceptions.c /Fobuild\\temp.win-amd64-3.3\\Release\\cytoolz/curried/exceptions.obj\n\nexceptions.c\n\nC:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\\Python33-64bit\\libs /LIBPATH:C:\\Python33-64bit\\PCbuild\\amd64 /EXPORT:PyInit_curried/exceptions build\\temp.win-amd64-3.3\\Release\\cytoolz/curried/exceptions.obj /OUT:build\\lib.win-amd64-3.3\\cytoolz\\curried/exceptions.pyd /IMPLIB:build\\temp.win-amd64-3.3\\Release\\cytoolz/curried\\exceptions.lib /MANIFESTFILE:build\\temp.win-amd64-3.3\\Release\\cytoolz/curried\\exceptions.pyd.manifest\n\nLINK : error LNK2001: unresolved external symbol PyInit_curried/exceptions\n\nbuild\\temp.win-amd64-3.3\\Release\\cytoolz/curried\\exceptions.lib : fatal error LNK1120: 1 unresolved externals\n\nerror: command '\"C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\amd64\\link.exe\"' failed with exit status 1120\n\n----------------------------------------\n```\n\nHas anyone experienced anything similar? I am using Python 3.3.5 on Win64\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/75", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/75/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/75/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/75", "id": 149610652, "node_id": "MDU6SXNzdWUxNDk2MTA2NTI=", "number": 75, "title": "Include LICENSE.txt in tarball", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-19T23:24:10Z", "updated_at": "2016-10-21T01:52:34Z", "closed_at": "2016-10-21T01:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please include LICENSE.txt in the source tarball.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/73", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/73/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/73/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/73", "id": 128345153, "node_id": "MDU6SXNzdWUxMjgzNDUxNTM=", "number": 73, "title": "Tests fail with Python 3.5", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-23T18:40:43Z", "updated_at": "2016-01-27T00:26:23Z", "closed_at": "2016-01-27T00:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Several tests fail with Python 3.5. I also noticed 3.5 is not tested by Travis.\n\n```\n======================================================================\nERROR: test_docstrings.test_get_in_doctest\n----------------------------------------------------------------------\nKeyError: 'y'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/nix/store/nk6l3r684z1fh6pzrbm6xrzkcz9knj57-python3.5-nose-1.3.7/lib/python3.5/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_docstrings.py\", line 85, in test_get_in_doctest\n    raises(KeyError, lambda: cytoolz.get_in(['y'], {}, no_default=True))\n  File \"cytoolz/utils.pyx\", line 13, in cytoolz.utils.raises (cytoolz/utils.c:905)\n    lamda()\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_docstrings.py\", line 85, in <lambda>\n    raises(KeyError, lambda: cytoolz.get_in(['y'], {}, no_default=True))\n  File \"cytoolz/dicttoolz.pyx\", line 471, in cytoolz.dicttoolz.get_in (cytoolz/dicttoolz.c:6126)\n    cpdef object get_in(object keys, object coll, object default=None, object no_default=False):\n  File \"cytoolz/dicttoolz.pyx\", line 510, in cytoolz.dicttoolz.get_in (cytoolz/dicttoolz.c:5923)\n    raise item\nSystemError: <class 'KeyError'> returned a result with an error set\n\n======================================================================\nERROR: test_itertoolz.test_get\n----------------------------------------------------------------------\nIndexError: string index out of range\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/nix/store/nk6l3r684z1fh6pzrbm6xrzkcz9knj57-python3.5-nose-1.3.7/lib/python3.5/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_itertoolz.py\", line 179, in test_get\n    assert raises(IndexError, lambda: get(10, 'ABC'))\n  File \"cytoolz/utils.pyx\", line 13, in cytoolz.utils.raises (cytoolz/utils.c:905)\n    lamda()\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_itertoolz.py\", line 179, in <lambda>\n    assert raises(IndexError, lambda: get(10, 'ABC'))\n  File \"cytoolz/itertoolz.pyx\", line 613, in cytoolz.itertoolz.get (cytoolz/itertoolz.c:10271)\n    cpdef object get(object ind, object seq, object default=no_default):\n  File \"cytoolz/itertoolz.pyx\", line 680, in cytoolz.itertoolz.get (cytoolz/itertoolz.c:10069)\n    raise val\nSystemError: <class 'IndexError'> returned a result with an error set\n\n======================================================================\nERROR: test_none_safe.test_dicttoolz\n----------------------------------------------------------------------\nTypeError: 'NoneType' object is not subscriptable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/nix/store/nk6l3r684z1fh6pzrbm6xrzkcz9knj57-python3.5-nose-1.3.7/lib/python3.5/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_none_safe.py\", line 55, in test_dicttoolz\n    assert raises(TypeError, lambda: get_in([0, 1], None, no_default=True))\n  File \"cytoolz/utils.pyx\", line 13, in cytoolz.utils.raises (cytoolz/utils.c:905)\n    lamda()\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_none_safe.py\", line 55, in <lambda>\n    assert raises(TypeError, lambda: get_in([0, 1], None, no_default=True))\n  File \"cytoolz/dicttoolz.pyx\", line 471, in cytoolz.dicttoolz.get_in (cytoolz/dicttoolz.c:6126)\n    cpdef object get_in(object keys, object coll, object default=None, object no_default=False):\n  File \"cytoolz/dicttoolz.pyx\", line 510, in cytoolz.dicttoolz.get_in (cytoolz/dicttoolz.c:5923)\n    raise item\nSystemError: <class 'TypeError'> returned a result with an error set\n\n======================================================================\nERROR: test_none_safe.test_itertoolz\n----------------------------------------------------------------------\nTypeError: 'NoneType' object is not subscriptable\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/nix/store/nk6l3r684z1fh6pzrbm6xrzkcz9knj57-python3.5-nose-1.3.7/lib/python3.5/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_none_safe.py\", line 183, in test_itertoolz\n    assert raises(TypeError, lambda: get(1, None))\n  File \"cytoolz/utils.pyx\", line 13, in cytoolz.utils.raises (cytoolz/utils.c:905)\n    lamda()\n  File \"/nix/store/fgcf8i2dq5jn5bm0abpsxjccmbzdcak2-python3.5-cytoolz-0.7.4/lib/python3.5/site-packages/cytoolz/tests/test_none_safe.py\", line 183, in <lambda>\n    assert raises(TypeError, lambda: get(1, None))\n  File \"cytoolz/itertoolz.pyx\", line 613, in cytoolz.itertoolz.get (cytoolz/itertoolz.c:10271)\n    cpdef object get(object ind, object seq, object default=no_default):\n  File \"cytoolz/itertoolz.pyx\", line 680, in cytoolz.itertoolz.get (cytoolz/itertoolz.c:10069)\n    raise val\nSystemError: <class 'TypeError'> returned a result with an error set\n\n----------------------------------------------------------------------\nRan 145 tests in 0.139s\n\nFAILED (errors=4)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/70", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/70/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/70/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/70", "id": 111014431, "node_id": "MDU6SXNzdWUxMTEwMTQ0MzE=", "number": 70, "title": "what about cytoolz 0.7.4 (on par with toolz 0.7.4) ?", "user": {"login": "stonebig", "id": 4312421, "node_id": "MDQ6VXNlcjQzMTI0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stonebig", "html_url": "https://github.com/stonebig", "followers_url": "https://api.github.com/users/stonebig/followers", "following_url": "https://api.github.com/users/stonebig/following{/other_user}", "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}", "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions", "organizations_url": "https://api.github.com/users/stonebig/orgs", "repos_url": "https://api.github.com/users/stonebig/repos", "events_url": "https://api.github.com/users/stonebig/events{/privacy}", "received_events_url": "https://api.github.com/users/stonebig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-12T16:52:11Z", "updated_at": "2015-10-22T10:17:23Z", "closed_at": "2015-10-21T05:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/69", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/69/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/69/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/69", "id": 103499153, "node_id": "MDU6SXNzdWUxMDM0OTkxNTM=", "number": 69, "title": "cytoolz.curried.sliding_window fails?", "user": {"login": "jni", "id": 492549, "node_id": "MDQ6VXNlcjQ5MjU0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/492549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jni", "html_url": "https://github.com/jni", "followers_url": "https://api.github.com/users/jni/followers", "following_url": "https://api.github.com/users/jni/following{/other_user}", "gists_url": "https://api.github.com/users/jni/gists{/gist_id}", "starred_url": "https://api.github.com/users/jni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jni/subscriptions", "organizations_url": "https://api.github.com/users/jni/orgs", "repos_url": "https://api.github.com/users/jni/repos", "events_url": "https://api.github.com/users/jni/events{/privacy}", "received_events_url": "https://api.github.com/users/jni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-27T12:41:36Z", "updated_at": "2016-08-11T04:41:51Z", "closed_at": "2016-08-10T15:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nIn [22]: from toolz import curried as C\n\nIn [23]: C.sliding_window(2)\nOut[23]: <function sliding_window at 0x106673048>\n```\n\nvs\n\n``` python\nIn [19]: from cytoolz import curried as CC\n\nIn [20]: CC.sliding_window(2)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-20-dfdf6311db18> in <module>()\n----> 1 CC.sliding_window(2)\n\n/Users/jni/conda/envs/anaconda/lib/python3.4/site-packages/cytoolz/functoolz.pyx in cytoolz.functoolz.curry.__call__ (cytoolz/functoolz.c:3300)()\n    254             if required_args == -1 or len(args) < required_args:\n    255                 return curry(self.func, *args, **kwargs)\n--> 256         raise val\n    257\n    258     def __get__(self, instance, owner):\n\nTypeError:\n```\n\nany ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/63", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/63/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/63/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/63", "id": 69972305, "node_id": "MDU6SXNzdWU2OTk3MjMwNQ==", "number": 63, "title": "Possible memory leak in pluck", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-21T22:57:10Z", "updated_at": "2015-04-25T15:57:10Z", "closed_at": "2015-04-25T15:57:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code snippet leaks memory.  It doesn't if I change `cytoolz` to `toolz`.\n\n```\n$ wget http://data.githubarchive.org/2015-05-09-4.json.gz\n```\n\n``` Python\nIn [1]: import json\n\nIn [2]: import gzip\n\nIn [3]: from cytoolz.curried import pipe, map, filter, pluck\n\nIn [4]: def loads(line):  # I have some bad lines\n    try: return json.loads(line)\n    except: return None\n   ...:     \n\nIn [5]: pipe('2013-05-09-4.json.gz', gzip.open, \n                                     map(loads), \n                                     filter(None), \n                                     pluck('repository', default=None), \n                                     min)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/61", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/61/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/61/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/61", "id": 65445556, "node_id": "MDU6SXNzdWU2NTQ0NTU1Ng==", "number": 61, "title": "Unable to use CyToolz.curry", "user": {"login": "jni", "id": 492549, "node_id": "MDQ6VXNlcjQ5MjU0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/492549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jni", "html_url": "https://github.com/jni", "followers_url": "https://api.github.com/users/jni/followers", "following_url": "https://api.github.com/users/jni/following{/other_user}", "gists_url": "https://api.github.com/users/jni/gists{/gist_id}", "starred_url": "https://api.github.com/users/jni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jni/subscriptions", "organizations_url": "https://api.github.com/users/jni/orgs", "repos_url": "https://api.github.com/users/jni/repos", "events_url": "https://api.github.com/users/jni/events{/privacy}", "received_events_url": "https://api.github.com/users/jni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-31T13:05:30Z", "updated_at": "2015-03-31T15:31:28Z", "closed_at": "2015-03-31T15:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am I doing this wrong?\n\n``` python\nIn [14]: import cytoolz as tlz\n\nIn [56]: list(tlz.take(2, [10, 20, 30, 40, 50]))\nOut[56]: [10, 20]\n\nIn [57]: take = tlz.curry(take)\n\nIn [58]: list(take(2)([10, 20, 30, 40, 50]))\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-58-a8b3d340ff95> in <module>()\n----> 1 list(take(2)([10, 20, 30, 40, 50]))\n\n/Users/nuneziglesiasj/anaconda/envs/py3k/lib/python3.4/site-packages/cytoolz/functoolz.so in cytoolz.functoolz.curry.__call__ (cytoolz/functoolz.c:3247)()\n\nIndexError: \n```\n\n(Using Toolz, the message is: `IndexError: index 10 is out of bounds for size 1`.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/55", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/55/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/55/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/55", "id": 59726779, "node_id": "MDU6SXNzdWU1OTcyNjc3OQ==", "number": 55, "title": "Missing trailing value in merge_sorted", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-03T23:47:04Z", "updated_at": "2015-03-04T03:47:32Z", "closed_at": "2015-03-04T03:47:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "``` python\nIn [1]: data = [[(1, 2), (0, 4), (3, 6)], [(5, 3), (6, 5), (8, 8)], [(9, 1), (9, 8), (9, 9)]]\n\nIn [2]: import toolz\n\nIn [3]: list(toolz.merge_sorted(*data, key=lambda x: x[1]))\nOut[3]: [(9, 1), (1, 2), (5, 3), (0, 4), (6, 5), (3, 6), (8, 8), (9, 8), (9, 9)]\n\nIn [4]: import cytoolz\n\nIn [5]: list(cytoolz.merge_sorted(*data, key=lambda x: x[1]))\nOut[5]: [(9, 1), (1, 2), (5, 3), (0, 4), (6, 5), (3, 6), (8, 8), (9, 8), 9]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/54", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/54/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/54/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/54", "id": 58636208, "node_id": "MDU6SXNzdWU1ODYzNjIwOA==", "number": 54, "title": "Cython Version", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-02-23T19:35:24Z", "updated_at": "2015-02-24T17:40:34Z", "closed_at": "2015-02-24T17:30:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried building with Cython and got the exception below. I'm pretty sure this is due to using a very old version of Cython as it seems to be something they fixed ( http://trac.cython.org/ticket/542 ).\n\n```\nNotImplementedError(\"New relative imports.\")\n```\n\nIt would be nice to know what version Cython cytoolz aims to be compatible with. Could we please get a note in the Readme? If I'm just missing it, I would appreciate a helpful pointer. Thanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/53", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/53/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/53/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/53", "id": 54135838, "node_id": "MDU6SXNzdWU1NDEzNTgzOA==", "number": 53, "title": "Release GIL?", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-13T00:41:09Z", "updated_at": "2016-08-10T15:33:59Z", "closed_at": "2016-08-10T15:33:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Is there anything stopping us from doing this?  Is it unsafe in any way?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/49", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/49/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/49/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/49", "id": 44115595, "node_id": "MDU6SXNzdWU0NDExNTU5NQ==", "number": 49, "title": "Error compared to pytoolz (get() takes at least 2 positional arguments)", "user": {"login": "CarstVaartjes", "id": 2722815, "node_id": "MDQ6VXNlcjI3MjI4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarstVaartjes", "html_url": "https://github.com/CarstVaartjes", "followers_url": "https://api.github.com/users/CarstVaartjes/followers", "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}", "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions", "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs", "repos_url": "https://api.github.com/users/CarstVaartjes/repos", "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}", "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-26T23:29:16Z", "updated_at": "2015-03-04T04:30:05Z", "closed_at": "2015-03-04T04:30:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nI get issues with cytoolz which i do not get with the normal toolz:\n\n```\nimport toolz\nimport cytoolz\n\n# id, name, Payment, gender, city, payment2\naccounts = [\n    (1, 'Alice',   100, 'F', 'AMS',  1),  \n    (2, 'Bob',     200, 'M', 'AMS',  2),\n    (3, 'Charlie', 150, 'M', 'ROT',  4),\n    (4, 'Dennis',   50, 'M', 'AMS',  8),\n    (5, 'Edith',    30, 'F', 'AMS', 16),\n    (6, 'Bob',     200, 'M', 'UTR',  2),\n    (7, 'Charlie', 150, 'M', 'AMS',  4),\n    (8, 'Dennis',   50, 'M', 'ROT',  8),\n    (9, 'Edith',    30, 'F', 'STT', 16)\n]\n\ntoolz.groupby(toolz.curried.get(3), accounts)\ncytoolz.groupby(cytoolz.get(3), accounts)\n```\n\ntoolz works perfect:\n\n```\nIn [24]: toolz.groupby(toolz.curried.get(3), accounts)\nOut[24]: \n{'F': [(1, 'Alice', 100, 'F', 'AMS', 1),\n  (5, 'Edith', 30, 'F', 'AMS', 16),\n  (9, 'Edith', 30, 'F', 'STT', 16)],\n 'M': [(2, 'Bob', 200, 'M', 'AMS', 2),\n  (3, 'Charlie', 150, 'M', 'ROT', 4),\n  (4, 'Dennis', 50, 'M', 'AMS', 8),\n  (6, 'Bob', 200, 'M', 'UTR', 2),\n  (7, 'Charlie', 150, 'M', 'AMS', 4),\n  (8, 'Dennis', 50, 'M', 'ROT', 8)]}\n```\n\nbut cytoolz leads to an error:\n\n```\nIn [25]: cytoolz.groupby(cytoolz.get(3), accounts)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-25-68314669d209> in <module>()\n----> 1 cytoolz.groupby(cytoolz.get(3), accounts)\n\n/srv/python/venv/local/lib/python2.7/site-packages/cytoolz/itertoolz.so in cytoolz.itertoolz.get (cytoolz/itertoolz.c:9002)()\n\nTypeError: get() takes at least 2 positional arguments (1 given)\n```\n\nHow can I solve this?\n\nEdit: is it because cytoolz does not have a \"curried\" version of get?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/32", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/32/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/32/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/32", "id": 35239482, "node_id": "MDU6SXNzdWUzNTIzOTQ4Mg==", "number": 32, "title": "Curried functions not serializable", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-08T15:48:52Z", "updated_at": "2014-06-24T13:48:37Z", "closed_at": "2014-06-24T13:48:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "cytoolz.curry doesn't seem to be picklable.  \n\n``` Python\nIn [1]: from cytoolz.curried import get\nIn [2]: import pickle\nIn [3]: pickle.dumps(get(0))\nTypeError: can't pickle curry objects\n```\n\nI think serialization is important.  This is also a case where something works in pytoolz but doesn't work in cytoolz.  Probably I should have had a test somewhere about this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/24", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/24/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/24/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/24", "id": 32740012, "node_id": "MDU6SXNzdWUzMjc0MDAxMg==", "number": 24, "title": "curried.merge_with fails", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-05-03T04:58:11Z", "updated_at": "2014-05-03T22:12:38Z", "closed_at": "2014-05-03T20:50:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I had this problem in pytoolz too.  I'll see if I can fix this tomorrow.  I ran across this while playing with a demo for talk on Sunday.\n\n``` Python\nIn [1]: from cytoolz import merge_with\n\nIn [2]: merge_with(sum, [{'a': 1}, {'a': 2}])\nOut[2]: {'a': 3}\n\nIn [3]: from cytoolz.curried import merge_with\n\nIn [4]: merge_with(sum, [{'a': 1}, {'a': 2}])\nOut[4]: <built-in function merge_with>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/17", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/17/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/17/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/17", "id": 32540473, "node_id": "MDU6SXNzdWUzMjU0MDQ3Mw==", "number": 17, "title": "Should *.pyx files be distributed?", "user": {"login": "eriknw", "id": 2058401, "node_id": "MDQ6VXNlcjIwNTg0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2058401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriknw", "html_url": "https://github.com/eriknw", "followers_url": "https://api.github.com/users/eriknw/followers", "following_url": "https://api.github.com/users/eriknw/following{/other_user}", "gists_url": "https://api.github.com/users/eriknw/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriknw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriknw/subscriptions", "organizations_url": "https://api.github.com/users/eriknw/orgs", "repos_url": "https://api.github.com/users/eriknw/repos", "events_url": "https://api.github.com/users/eriknw/events{/privacy}", "received_events_url": "https://api.github.com/users/eriknw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-30T14:39:38Z", "updated_at": "2015-03-04T04:30:52Z", "closed_at": "2015-03-04T04:30:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "*.pxd files are distributed to allow other modules developed in Cython to use the C API.  We don't need to include *.pyx files because *.c files are distributed instead.  If *.pyx files were distributed and uploaded to PyPI, would it be possible for users to choose to use their version of Cython when installing `cytoolz` with pip?  Should *.pyx files simply be there for reference?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/9", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/9/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/9/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/9", "id": 31199416, "node_id": "MDU6SXNzdWUzMTE5OTQxNg==", "number": 9, "title": "unified testing via `toolz`", "user": {"login": "eriknw", "id": 2058401, "node_id": "MDQ6VXNlcjIwNTg0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2058401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriknw", "html_url": "https://github.com/eriknw", "followers_url": "https://api.github.com/users/eriknw/followers", "following_url": "https://api.github.com/users/eriknw/following{/other_user}", "gists_url": "https://api.github.com/users/eriknw/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriknw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriknw/subscriptions", "organizations_url": "https://api.github.com/users/eriknw/orgs", "repos_url": "https://api.github.com/users/eriknw/repos", "events_url": "https://api.github.com/users/eriknw/events{/privacy}", "received_events_url": "https://api.github.com/users/eriknw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-04-09T22:11:40Z", "updated_at": "2017-12-16T18:41:05Z", "closed_at": "2017-12-16T18:41:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the interest of development speed, the tests from `toolz` were basically just copied over to `cytoolz`.  This is not easily sustainable.  We would like all toolz-related tests to reside in `toolz`.  Moreover, we would like a way to run the tests for toolz such as `toolz.tests.run()`, and to provide an optional toolz-like package on which to run the tests such as `toolz.tests.run(cytoolz)`.\n\nThis issue does not cover testing CyToolz C API, which I regard as very low priority at the moment.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/7", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/7/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/7/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/7", "id": 31071564, "node_id": "MDU6SXNzdWUzMTA3MTU2NA==", "number": 7, "title": "Set up continuous integration testing", "user": {"login": "eriknw", "id": 2058401, "node_id": "MDQ6VXNlcjIwNTg0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2058401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriknw", "html_url": "https://github.com/eriknw", "followers_url": "https://api.github.com/users/eriknw/followers", "following_url": "https://api.github.com/users/eriknw/following{/other_user}", "gists_url": "https://api.github.com/users/eriknw/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriknw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriknw/subscriptions", "organizations_url": "https://api.github.com/users/eriknw/orgs", "repos_url": "https://api.github.com/users/eriknw/repos", "events_url": "https://api.github.com/users/eriknw/events{/privacy}", "received_events_url": "https://api.github.com/users/eriknw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-08T13:48:15Z", "updated_at": "2014-04-18T17:41:50Z", "closed_at": "2014-04-18T17:41:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "...preferably with TravisCI.\n\nBuild matrix should include building with (*.pyx) and without (*.c) Cython.  This is related to #4.  What about Cython versions (I use bleeding edge Cython btw)?\n\nA lot of project use Cython...\n\nastropy, blaze, chaco, cymunk, fatiando, glue, kivy, mpi4py, numpy, pandas, PyOP2, pystruct, scikit-fuzzy, scikit-image, scikit-learn, scipy, statsmodels, uncertainties, and others listed at https://github.com/cython/cython/wiki/projects\n\n...and several of them also use CI.  This is not unexplored territory, but we still need to figure out a solution for us.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/6", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/6/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/6/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/6", "id": 31041228, "node_id": "MDU6SXNzdWUzMTA0MTIyOA==", "number": 6, "title": "Should the `not None` argument descriptor be used anywhere?", "user": {"login": "eriknw", "id": 2058401, "node_id": "MDQ6VXNlcjIwNTg0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2058401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriknw", "html_url": "https://github.com/eriknw", "followers_url": "https://api.github.com/users/eriknw/followers", "following_url": "https://api.github.com/users/eriknw/following{/other_user}", "gists_url": "https://api.github.com/users/eriknw/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriknw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriknw/subscriptions", "organizations_url": "https://api.github.com/users/eriknw/orgs", "repos_url": "https://api.github.com/users/eriknw/repos", "events_url": "https://api.github.com/users/eriknw/events{/privacy}", "received_events_url": "https://api.github.com/users/eriknw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-08T03:47:17Z", "updated_at": "2014-04-16T16:39:20Z", "closed_at": "2014-04-16T16:39:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Arguments that are strongly typed as Python objects may still be None unless `not None`  is used in the function definition (such as `cpdef dict valmap(object func, dict d not None)`).\n\nIt may be possible for some functions to seg-fault instead of raising an exception if they receive None as input.  I don't know if this can happen anywhere in `cytoolz`, but we should find out, because we don't like seg-faults!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/5", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/5/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/5/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/5", "id": 31038830, "node_id": "MDU6SXNzdWUzMTAzODgzMA==", "number": 5, "title": "easily include `cytoolz` via `cimport` in other Cython projects", "user": {"login": "eriknw", "id": 2058401, "node_id": "MDQ6VXNlcjIwNTg0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2058401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriknw", "html_url": "https://github.com/eriknw", "followers_url": "https://api.github.com/users/eriknw/followers", "following_url": "https://api.github.com/users/eriknw/following{/other_user}", "gists_url": "https://api.github.com/users/eriknw/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriknw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriknw/subscriptions", "organizations_url": "https://api.github.com/users/eriknw/orgs", "repos_url": "https://api.github.com/users/eriknw/repos", "events_url": "https://api.github.com/users/eriknw/events{/privacy}", "received_events_url": "https://api.github.com/users/eriknw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-08T02:34:39Z", "updated_at": "2014-04-09T21:58:46Z", "closed_at": "2014-04-09T21:58:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In order for other packages that use Cython to use cytoolz' C bindings (such as `cimport cytoolz`), the location of cytoolz' shared libraries (*.so) and header files (*.pxd) need to be added to the appropriate paths.\n\nFirst, `cytoolz` should have convenience functions (such as `cytoolz.get_libraries()`, `cytoolz.get_library_dir()`, and `cytoolz.get_include_dir()`) that make this easy.  Second, there should be an example that shows how to use these in a `setup.py` file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytoolz/cytoolz/issues/4", "repository_url": "https://api.github.com/repos/pytoolz/cytoolz", "labels_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/4/comments", "events_url": "https://api.github.com/repos/pytoolz/cytoolz/issues/4/events", "html_url": "https://github.com/pytoolz/cytoolz/issues/4", "id": 31038483, "node_id": "MDU6SXNzdWUzMTAzODQ4Mw==", "number": 4, "title": "distribute *.c files", "user": {"login": "eriknw", "id": 2058401, "node_id": "MDQ6VXNlcjIwNTg0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2058401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriknw", "html_url": "https://github.com/eriknw", "followers_url": "https://api.github.com/users/eriknw/followers", "following_url": "https://api.github.com/users/eriknw/following{/other_user}", "gists_url": "https://api.github.com/users/eriknw/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriknw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriknw/subscriptions", "organizations_url": "https://api.github.com/users/eriknw/orgs", "repos_url": "https://api.github.com/users/eriknw/repos", "events_url": "https://api.github.com/users/eriknw/events{/privacy}", "received_events_url": "https://api.github.com/users/eriknw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-08T02:24:15Z", "updated_at": "2014-04-24T15:16:31Z", "closed_at": "2014-04-24T15:16:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should make it possible for a user to compile and install `cytoolz` using \"setup.py\") or `pip`) even if they don't have Cython.  It is typical to distribute *.c files generated by Cython for this purpose.  Several other packages do this, and we can look at them for guidance.\n\nI can only test compilation on Linux.  I don't have easy access to Windows or OS X.\n", "performed_via_github_app": null, "score": 1.0}]}