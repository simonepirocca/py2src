{"total_count": 15, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/57", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/57/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/57/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/57", "id": 605552067, "node_id": "MDU6SXNzdWU2MDU1NTIwNjc=", "number": 57, "title": "Use stdin in child process", "user": {"login": "pawamoy", "id": 3999221, "node_id": "MDQ6VXNlcjM5OTkyMjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3999221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawamoy", "html_url": "https://github.com/pawamoy", "followers_url": "https://api.github.com/users/pawamoy/followers", "following_url": "https://api.github.com/users/pawamoy/following{/other_user}", "gists_url": "https://api.github.com/users/pawamoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawamoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawamoy/subscriptions", "organizations_url": "https://api.github.com/users/pawamoy/orgs", "repos_url": "https://api.github.com/users/pawamoy/repos", "events_url": "https://api.github.com/users/pawamoy/events{/privacy}", "received_events_url": "https://api.github.com/users/pawamoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-23T13:48:14Z", "updated_at": "2020-04-23T21:18:02Z", "closed_at": "2020-04-23T21:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible?\r\n\r\nI'd like to spawn a process that reads stdin.\r\n\r\n```\r\ncat requirements.txt | ./script_that_spawns.py safety --check --stdin\r\n```\r\n\r\nWhen doing so and trying to read `safety` output, it blocks, and I have to interrupt it with control-c:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/pawamoy/.cache/pypoetry/virtualenvs/mkdocstrings-ytlBmpdO-py3.8/bin/failprint\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/pawamoy/.cache/pypoetry/virtualenvs/mkdocstrings-ytlBmpdO-py3.8/lib/python3.8/site-packages/failprint/cli.py\", line 125, in main\r\n    return run(\r\n  File \"/home/pawamoy/.cache/pypoetry/virtualenvs/mkdocstrings-ytlBmpdO-py3.8/lib/python3.8/site-packages/failprint/cli.py\", line 54, in run\r\n    output.append(process.read())\r\n  File \"/home/pawamoy/.cache/pypoetry/virtualenvs/mkdocstrings-ytlBmpdO-py3.8/lib/python3.8/site-packages/ptyprocess/ptyprocess.py\", line 818, in read\r\n    b = super(PtyProcessUnicode, self).read(size)\r\n  File \"/home/pawamoy/.cache/pypoetry/virtualenvs/mkdocstrings-ytlBmpdO-py3.8/lib/python3.8/site-packages/ptyprocess/ptyprocess.py\", line 516, in read\r\n    s = self.fileobj.read1(size)\r\nKeyboardInterrupt\r\n```\r\n\r\nHere is the actual Python code I'm using:\r\n\r\n```python\r\nprocess = PtyProcessUnicode.spawn(cmd)\r\n\r\noutput = []\r\n\r\nwhile True:\r\n    try:\r\n        output.append(process.read())\r\n    except EOFError:\r\n        break\r\n\r\nprocess.close()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/46", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/46/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/46/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/46", "id": 334587077, "node_id": "MDU6SXNzdWUzMzQ1ODcwNzc=", "number": 46, "title": "Release?", "user": {"login": "jcrist", "id": 2783717, "node_id": "MDQ6VXNlcjI3ODM3MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcrist", "html_url": "https://github.com/jcrist", "followers_url": "https://api.github.com/users/jcrist/followers", "following_url": "https://api.github.com/users/jcrist/following{/other_user}", "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions", "organizations_url": "https://api.github.com/users/jcrist/orgs", "repos_url": "https://api.github.com/users/jcrist/repos", "events_url": "https://api.github.com/users/jcrist/events{/privacy}", "received_events_url": "https://api.github.com/users/jcrist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-21T17:25:44Z", "updated_at": "2018-06-22T08:43:09Z", "closed_at": "2018-06-22T08:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just ran into https://github.com/pexpect/ptyprocess/pull/38, and can confirm installing from master fixes the issue. It would be nice to have a new release of `ptyprocess` that includes that fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/44", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/44/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/44/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/44", "id": 281272589, "node_id": "MDU6SXNzdWUyODEyNzI1ODk=", "number": 44, "title": "ptyprocess 0.5.1 and 0.5.2 appear to be missing the setup.py file.", "user": {"login": "bignordique", "id": 16339062, "node_id": "MDQ6VXNlcjE2MzM5MDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/16339062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignordique", "html_url": "https://github.com/bignordique", "followers_url": "https://api.github.com/users/bignordique/followers", "following_url": "https://api.github.com/users/bignordique/following{/other_user}", "gists_url": "https://api.github.com/users/bignordique/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignordique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignordique/subscriptions", "organizations_url": "https://api.github.com/users/bignordique/orgs", "repos_url": "https://api.github.com/users/bignordique/repos", "events_url": "https://api.github.com/users/bignordique/events{/privacy}", "received_events_url": "https://api.github.com/users/bignordique/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-12T06:31:46Z", "updated_at": "2017-12-12T15:39:08Z", "closed_at": "2017-12-12T15:39:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/42", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/42/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/42/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/42", "id": 239972103, "node_id": "MDU6SXNzdWUyMzk5NzIxMDM=", "number": 42, "title": "0.5.2 not really released?", "user": {"login": "SnarkBoojum", "id": 4647429, "node_id": "MDQ6VXNlcjQ2NDc0Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4647429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SnarkBoojum", "html_url": "https://github.com/SnarkBoojum", "followers_url": "https://api.github.com/users/SnarkBoojum/followers", "following_url": "https://api.github.com/users/SnarkBoojum/following{/other_user}", "gists_url": "https://api.github.com/users/SnarkBoojum/gists{/gist_id}", "starred_url": "https://api.github.com/users/SnarkBoojum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SnarkBoojum/subscriptions", "organizations_url": "https://api.github.com/users/SnarkBoojum/orgs", "repos_url": "https://api.github.com/users/SnarkBoojum/repos", "events_url": "https://api.github.com/users/SnarkBoojum/events{/privacy}", "received_events_url": "https://api.github.com/users/SnarkBoojum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-01T20:57:53Z", "updated_at": "2017-07-01T21:20:14Z", "closed_at": "2017-07-01T21:20:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The 0.5.2 release doesn't appear in github's list of releases: perhaps you forgot to tag it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/40", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/40/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/40/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/40", "id": 237879490, "node_id": "MDU6SXNzdWUyMzc4Nzk0OTA=", "number": 40, "title": "Incorrect distributive in WHEEL format", "user": {"login": "Cykooz", "id": 163725, "node_id": "MDQ6VXNlcjE2MzcyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/163725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cykooz", "html_url": "https://github.com/Cykooz", "followers_url": "https://api.github.com/users/Cykooz/followers", "following_url": "https://api.github.com/users/Cykooz/following{/other_user}", "gists_url": "https://api.github.com/users/Cykooz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cykooz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cykooz/subscriptions", "organizations_url": "https://api.github.com/users/Cykooz/orgs", "repos_url": "https://api.github.com/users/Cykooz/repos", "events_url": "https://api.github.com/users/Cykooz/events{/privacy}", "received_events_url": "https://api.github.com/users/Cykooz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-22T15:12:26Z", "updated_at": "2017-06-22T15:40:30Z", "closed_at": "2017-06-22T15:40:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had tried to install the ptyprocess package from \"whl\" file  and got an error:\r\n\r\n```\r\n$ ./bin/wheel install -d ~/wheels/ ptyprocess\r\nTraceback (most recent call last):\r\n  File \"./bin/wheel\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/tool/__init__.py\", line 356, in main\r\n    args.func(args)\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/tool/__init__.py\", line 299, in install_f\r\n    args.wheel_dirs, args.force, args.list_files)\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/tool/__init__.py\", line 221, in install\r\n    wf.install(force=force)\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/install.py\", line 268, in install\r\n    if self.parsed_wheel_info['Root-Is-Purelib'] == 'true':\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/decorator.py\", line 17, in __get__\r\n    val = self.wrapped(inst)\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/install.py\", line 238, in parsed_wheel_info\r\n    return read_pkg_info_bytes(self.zipfile.read(self.wheelinfo_name))\r\n  File \"/usr/lib/python2.7/zipfile.py\", line 935, in read\r\n    return self.open(name, \"r\", pwd).read()\r\n  File \"/usr/lib/python2.7/zipfile.py\", line 630, in read\r\n    data = self.read1(n)\r\n  File \"/usr/lib/python2.7/zipfile.py\", line 692, in read1\r\n    self._update_crc(data, eof=eof)\r\n  File \"/home/cykooz/testvenv/local/lib/python2.7/site-packages/wheel/install.py\", line 463, in _update_crc\r\n    raise BadWheelFile(\"Bad hash for file %r\" % ef.name)\r\nwheel.install.BadWheelFile: Bad hash for file 'ptyprocess-0.5.1.dist-info/WHEEL'\r\n```\r\nThis is because of hashes of files (saved in file ptyprocess-0.5.1-py2.py3-none-any.whl/ptyprocess-0.5.1.dist-info/RECORD) stored in invalid format. Instead of using BASE64-encoded SHA256-digest your hashes stored as HEX-string from SHA256 digest.\r\n\r\nPlease, rebuild WHL distributive of your package and put it into pypi.python.org.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/35", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/35/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/35/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/35", "id": 195353009, "node_id": "MDU6SXNzdWUxOTUzNTMwMDk=", "number": 35, "title": "A minor issue found via static analysis", "user": {"login": "tzickel", "id": 7489847, "node_id": "MDQ6VXNlcjc0ODk4NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7489847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tzickel", "html_url": "https://github.com/tzickel", "followers_url": "https://api.github.com/users/tzickel/followers", "following_url": "https://api.github.com/users/tzickel/following{/other_user}", "gists_url": "https://api.github.com/users/tzickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/tzickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tzickel/subscriptions", "organizations_url": "https://api.github.com/users/tzickel/orgs", "repos_url": "https://api.github.com/users/tzickel/repos", "events_url": "https://api.github.com/users/tzickel/events{/privacy}", "received_events_url": "https://api.github.com/users/tzickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-13T20:00:34Z", "updated_at": "2018-02-07T16:37:00Z", "closed_at": "2018-02-07T16:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "ExceptionPexpect is not defined.\r\nhttps://github.com/pexpect/ptyprocess/blob/8f1ba73b82a4b4fbe342fef1498cd35362f63982/ptyprocess/_fork_pty.py#L66\r\n\r\nFound using cython and\r\nhttps://gist.github.com/tzickel/ea4541b12c1298a8092c3ec5043ef77e\r\n```\r\npip install -I --root temp_ptyprocess ptyprocess\r\npython checkcython.py temp_ptyprocess\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/31", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/31/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/31/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/31", "id": 130760437, "node_id": "MDU6SXNzdWUxMzA3NjA0Mzc=", "number": 31, "title": "ptyprocess 0.5.1", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-02-02T17:50:53Z", "updated_at": "2017-06-28T13:44:59Z", "closed_at": "2017-06-28T13:44:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI was wondering if we could make ptyprocess 0.5.1 available for [legacy] easy-install installations\n\nThanks\n\nCarlos \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/27", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/27/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/27/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/27", "id": 121301193, "node_id": "MDU6SXNzdWUxMjEzMDExOTM=", "number": 27, "title": "Logging of stdout and stderr", "user": {"login": "JohnLonginotto", "id": 8248575, "node_id": "MDQ6VXNlcjgyNDg1NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8248575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnLonginotto", "html_url": "https://github.com/JohnLonginotto", "followers_url": "https://api.github.com/users/JohnLonginotto/followers", "following_url": "https://api.github.com/users/JohnLonginotto/following{/other_user}", "gists_url": "https://api.github.com/users/JohnLonginotto/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnLonginotto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnLonginotto/subscriptions", "organizations_url": "https://api.github.com/users/JohnLonginotto/orgs", "repos_url": "https://api.github.com/users/JohnLonginotto/repos", "events_url": "https://api.github.com/users/JohnLonginotto/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnLonginotto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-09T17:45:38Z", "updated_at": "2020-04-23T13:43:41Z", "closed_at": "2015-12-10T15:56:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi :)\n\nI would like to subprocess any given command and log its stdout and stderr separately. This would seem like an easy thing to do, but im having no luck because:\n1) Processes which detect that their stdout/stderr are not ttys will modify their output\n2) Processes which detect that their stdout/stderr are not the same file path will assume theres stdout redirection and modify their output.\n\nSo in jumps ptys and ptyprocess to the resuce. Tie the stdout and stderr to a pty, you get 1 file path like  /dev/tty0021, and isatty() returns true for both. Problem is - now we can't distinguish stdout from stderr.\nOk, no problem, just make two ptys - one for stdout and one for stderr. But now although both pass isatty(), their file paths will now look like /dev/tty0021 and /dev/tty0022 (for example).\nThe subprocess reacts as if you weren't using a pty in the first place, and you log nothing.\n\nI have been trying for four months to figure a way around this, and because you are the expert in ptys I thought i might ask you directly - could you think of a way to log stdout and stderr separatly in your program, and still fool a script like this: https://bpaste.net/show/000d6f70ef41\n\nTHANK YOU :D \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/21", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/21/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/21/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/21", "id": 74148007, "node_id": "MDU6SXNzdWU3NDE0ODAwNw==", "number": 21, "title": "pypi tar.gz has __pycache__/.pyc files in tests directory", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 134359127, "node_id": "MDU6TGFiZWwxMzQzNTkxMjc=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-07T22:25:30Z", "updated_at": "2015-05-20T21:31:49Z", "closed_at": "2015-05-20T21:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nGetting https://pypi.python.org/packages/source/p/ptyprocess/ptyprocess-0.4.tar.gz to ./ptyprocess-0.4.tar.gz\n$ tar tf ./ptyprocess-0.4.tar.gz\nptyprocess-0.4/\nptyprocess-0.4/ptyprocess/\nptyprocess-0.4/ptyprocess/util.py\nptyprocess-0.4/ptyprocess/ptyprocess.py\nptyprocess-0.4/ptyprocess/_fork_pty.py\nptyprocess-0.4/ptyprocess/__init__.py\nptyprocess-0.4/setup.py\nptyprocess-0.4/PKG-INFO\nptyprocess-0.4/tests/\nptyprocess-0.4/tests/test_preexec_fn.py\nptyprocess-0.4/tests/test_spawn.py\nptyprocess-0.4/tests/test_invalid_binary.py\nptyprocess-0.4/tests/__pycache__/\nptyprocess-0.4/tests/__pycache__/__init__.cpython-34.pyc\nptyprocess-0.4/tests/__pycache__/test_spawn.cpython-27-PYTEST.pyc\nptyprocess-0.4/tests/__pycache__/test_preexec_fn.cpython-34-PYTEST.pyc\nptyprocess-0.4/tests/__pycache__/test_preexec_fn.cpython-27-PYTEST.pyc\nptyprocess-0.4/tests/__pycache__/test_spawn.cpython-34-PYTEST.pyc\nptyprocess-0.4/tests/__pycache__/test_invalid_binary.cpython-27-PYTEST.pyc\nptyprocess-0.4/tests/__pycache__/test_invalid_binary.cpython-34-PYTEST.pyc\nptyprocess-0.4/tests/__init__.pyc\nptyprocess-0.4/tests/__init__.py\nptyprocess-0.4/README.rst\n```\n\nThis results in build errors on EL7:\n\n```\n+ py.test\n============================= test session starts ==============================\nplatform linux2 -- Python 2.7.5 -- pytest-2.3.5\ncollected 0 items / 3 errors\n==================================== ERRORS ====================================\n________________ ERROR collecting tests/test_invalid_binary.py _________________\nimport file mismatch:\nimported module 'tests.test_invalid_binary' has this __file__ attribute:\n  /home/takluyver/Code/ptyprocess/tests/test_invalid_binary.py\nwhich is not the same as the test file we want to collect:\n  /builddir/build/BUILD/ptyprocess-0.4/tests/test_invalid_binary.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules\n__________________ ERROR collecting tests/test_preexec_fn.py ___________________\nimport file mismatch:\nimported module 'tests.test_preexec_fn' has this __file__ attribute:\n  /home/takluyver/Code/ptyprocess/tests/test_preexec_fn.py\nwhich is not the same as the test file we want to collect:\n  /builddir/build/BUILD/ptyprocess-0.4/tests/test_preexec_fn.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules\n_____________________ ERROR collecting tests/test_spawn.py _____________________\nimport file mismatch:\nimported module 'tests.test_spawn' has this __file__ attribute:\n  /home/takluyver/Code/ptyprocess/tests/test_spawn.py\nwhich is not the same as the test file we want to collect:\n  /builddir/build/BUILD/ptyprocess-0.4/tests/test_spawn.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules\n=========================== 3 error in 0.04 seconds ============================\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/13", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/13/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/13/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/13", "id": 68349007, "node_id": "MDU6SXNzdWU2ODM0OTAwNw==", "number": 13, "title": "Wait() should return normally if the child process has already terminated", "user": {"login": "reynir", "id": 348527, "node_id": "MDQ6VXNlcjM0ODUyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/348527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reynir", "html_url": "https://github.com/reynir", "followers_url": "https://api.github.com/users/reynir/followers", "following_url": "https://api.github.com/users/reynir/following{/other_user}", "gists_url": "https://api.github.com/users/reynir/gists{/gist_id}", "starred_url": "https://api.github.com/users/reynir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reynir/subscriptions", "organizations_url": "https://api.github.com/users/reynir/orgs", "repos_url": "https://api.github.com/users/reynir/repos", "events_url": "https://api.github.com/users/reynir/events{/privacy}", "received_events_url": "https://api.github.com/users/reynir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 134359127, "node_id": "MDU6TGFiZWwxMzQzNTkxMjc=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-14T11:51:27Z", "updated_at": "2015-04-26T21:06:45Z", "closed_at": "2015-04-26T21:06:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling `wait()` on a PtyProcess object whose process has already terminated will raise an exception. This behavior is unexpected[1].\nI have made a small [test](https://gist.github.com/reynir/6616b43999449f26d299) to show case the behavior. Using `p.isalive() && p.wait()` will only make the race condition worse in my tests.\n\n[1]: subprocess.Popen.wait() returns normally even when the process has already terminated, although it doesn't say so explicitly in the documentation. In [java](http://docs.oracle.com/javase/7/docs/api/java/lang/Process.html#waitFor%28%29) the `waitFor()` method _\"returns immediately if the subprocess has already terminated.\"_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/12", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/12/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/12/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/12", "id": 63597477, "node_id": "MDU6SXNzdWU2MzU5NzQ3Nw==", "number": 12, "title": "test failure on FreeBSD", "user": {"login": "emaste", "id": 1034582, "node_id": "MDQ6VXNlcjEwMzQ1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1034582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emaste", "html_url": "https://github.com/emaste", "followers_url": "https://api.github.com/users/emaste/followers", "following_url": "https://api.github.com/users/emaste/following{/other_user}", "gists_url": "https://api.github.com/users/emaste/gists{/gist_id}", "starred_url": "https://api.github.com/users/emaste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emaste/subscriptions", "organizations_url": "https://api.github.com/users/emaste/orgs", "repos_url": "https://api.github.com/users/emaste/repos", "events_url": "https://api.github.com/users/emaste/events{/privacy}", "received_events_url": "https://api.github.com/users/emaste/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-03-23T01:19:52Z", "updated_at": "2015-04-27T03:23:26Z", "closed_at": "2015-04-27T03:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the tests on FreeBSD 11 I see:\n\n```\n% py.test  \n============================= test session starts ==============================\nplatform freebsd11 -- Python 2.7.9 -- py-1.4.26 -- pytest-2.6.4\ncollected 5 items \n\ntests/test_invalid_binary.py .\ntests/test_preexec_fn.py ..\ntests/test_spawn.py FF\n\n\n=================================== FAILURES ===================================\n__________________________ PtyTestCase.test_spawn_sh ___________________________\n\nself = <tests.test_spawn.PtyTestCase testMethod=test_spawn_sh>\n\n    def test_spawn_sh(self):\n        env = os.environ.copy()\n        env['FOO'] = 'rebar'\n        p = PtyProcess.spawn(['sh'], env=env)\n        p.read()\n        p.write(b'echo $FOO\\n')\n        time.sleep(0.1)\n        response = p.read()\n>       assert b'rebar' in response\nE       AssertionError: assert 'rebar' in 'echo $FOO\\r\\n'\n\ntests/test_spawn.py:15: AssertionError\n______________________ PtyTestCase.test_spawn_unicode_sh _______________________\n\nself = <tests.test_spawn.PtyTestCase testMethod=test_spawn_unicode_sh>\n\n    def test_spawn_unicode_sh(self):\n        env = os.environ.copy()\n        env['FOO'] = 'rebar'\n        p = PtyProcessUnicode.spawn(['sh'], env=env)\n        p.read()\n        p.write(u'echo $FOO\\n')\n        time.sleep(0.1)\n        response = p.read()\n>       assert u'rebar' in response\n\\n'     AssertionError: assert 'rebar' in 'echo $FOO\n\ntests/test_spawn.py:31: AssertionError\n====================== 2 failed, 3 passed in 0.80 seconds ======================\n```\n\nThe expected output is produced, it is just not returned by the second `p.read()` in the test. Inserting a dummy `p.read()` before `response = p.read()` gets the tests passing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/9", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/9/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/9/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/9", "id": 58494228, "node_id": "MDU6SXNzdWU1ODQ5NDIyOA==", "number": 9, "title": "FreeBSD fails fork_pty: OSError: [Errno 6] Device not configured: '/dev/tty'", "user": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 134359127, "node_id": "MDU6TGFiZWwxMzQzNTkxMjc=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-02-22T07:36:45Z", "updated_at": "2015-03-26T11:18:23Z", "closed_at": "2015-02-22T21:15:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Got a FreeBSD (digital ocean droplet, `freebsd.pexpect.org`) build agent prepared. It raises exception very early in critical codepath causing test runner to fork and eventually the build agent is killed by the kernel due to an OOM condition.\n\nError is in method `pty_make_controlling_tty` at:\n\n``` python\n        # Verify we now have a controlling tty.\n        fd = os.open(\"/dev/tty\", os.O_WRONLY)\n```\n\n```\n[freebsd@freebsd ~]$ sudo -u teamcity -s\n$ cd /opt/TeamCity/work/210ae16cc3f30c30/ptyprocess\n$ . `which virtualenvwrapper.sh`\n$ mkvirtualenv pexpect27 --python=`which python2.7`\n$ pip install -e .\n$ cd ../pexpect\n$ python\nPython 2.7.9 (default, Jan  8 2015, 21:47:19)\n[GCC 4.2.1 Compatible FreeBSD Clang 3.3 (tags/RELEASE_33/final 183502)] on freebsd10\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pexpect\n>>> bash = pexpect.spawn('/bin/bash')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pexpect/pty_spawn.py\", line 189, in __init__\n    self._spawn(command, args, preexec_fn)\n  File \"pexpect/pty_spawn.py\", line 281, in _spawn\n    cwd=self.cwd, **kwargs)\n  File \"/opt/TeamCity/work/210ae16cc3f30c30/ptyprocess/ptyprocess/ptyprocess.py\", line 220, in spawn\n    pid, fd = _fork_pty.fork_pty()\n  File \"/opt/TeamCity/work/210ae16cc3f30c30/ptyprocess/ptyprocess/_fork_pty.py\", line 30, in fork_pty\n    pty_make_controlling_tty(child_fd)\n  File \"/opt/TeamCity/work/210ae16cc3f30c30/ptyprocess/ptyprocess/_fork_pty.py\", line 76, in pty_make_controlling_tty\n    fd = os.open(\"/dev/tty\", os.O_WRONLY)\nOSError: [Errno 6] Device not configured: '/dev/tty'\n```\n\n`/dev/tty` may be opened under normal conditions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/7", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/7/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/7/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/7", "id": 53630657, "node_id": "MDU6SXNzdWU1MzYzMDY1Nw==", "number": 7, "title": "Race condition in tests?", "user": {"login": "tomspur", "id": 303559, "node_id": "MDQ6VXNlcjMwMzU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/303559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomspur", "html_url": "https://github.com/tomspur", "followers_url": "https://api.github.com/users/tomspur/followers", "following_url": "https://api.github.com/users/tomspur/following{/other_user}", "gists_url": "https://api.github.com/users/tomspur/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomspur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomspur/subscriptions", "organizations_url": "https://api.github.com/users/tomspur/orgs", "repos_url": "https://api.github.com/users/tomspur/repos", "events_url": "https://api.github.com/users/tomspur/events{/privacy}", "received_events_url": "https://api.github.com/users/tomspur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-07T13:10:15Z", "updated_at": "2015-01-15T18:24:36Z", "closed_at": "2015-01-15T18:24:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seems to be some kind of race condition in the testsuite on both python-3.4 and python-2.7 here on Fedora 21 (it seems to occour more often in python-3.4 though).\n\nThis is the log of the tests:\n    self = <tests.test_spawn.PtyTestCase testMethod=test_spawn_sh>\n\n```\n    def test_spawn_sh(self):\n        env = os.environ.copy()\n        env['FOO'] = 'rebar'\n        p = PtyProcess.spawn(['sh'], env=env)\n        p.read()\n        p.write(b'echo $FOO\\n')\n        time.sleep(0.1)\n        response = p.read()\n        assert b'rebar' in response\n\n        p.sendeof()\n        p.read()\n\n        with self.assertRaises(EOFError):\n>           p.read()\nE           AssertionError: EOFError not raised\n\ntests/test_spawn.py:21: AssertionError\n```\n\nWhat could cause these random tests? How can I help debugging it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/5", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/5/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/5/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/5", "id": 50070337, "node_id": "MDU6SXNzdWU1MDA3MDMzNw==", "number": 5, "title": "Document PC_MAX_CANON limitations", "user": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 134359129, "node_id": "MDU6TGFiZWwxMzQzNTkxMjk=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-25T19:08:21Z", "updated_at": "2015-04-27T03:24:06Z", "closed_at": "2015-04-27T03:24:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From https://github.com/pexpect/pexpect/pull/79\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/ptyprocess/issues/3", "repository_url": "https://api.github.com/repos/pexpect/ptyprocess", "labels_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/3/comments", "events_url": "https://api.github.com/repos/pexpect/ptyprocess/issues/3/events", "html_url": "https://github.com/pexpect/ptyprocess/issues/3", "id": 46159836, "node_id": "MDU6SXNzdWU0NjE1OTgzNg==", "number": 3, "title": "Potential performance issue with unbuffered IO and the PtyProcess readline method", "user": {"login": "anwilli5", "id": 1797109, "node_id": "MDQ6VXNlcjE3OTcxMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1797109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anwilli5", "html_url": "https://github.com/anwilli5", "followers_url": "https://api.github.com/users/anwilli5/followers", "following_url": "https://api.github.com/users/anwilli5/following{/other_user}", "gists_url": "https://api.github.com/users/anwilli5/gists{/gist_id}", "starred_url": "https://api.github.com/users/anwilli5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anwilli5/subscriptions", "organizations_url": "https://api.github.com/users/anwilli5/orgs", "repos_url": "https://api.github.com/users/anwilli5/repos", "events_url": "https://api.github.com/users/anwilli5/events{/privacy}", "received_events_url": "https://api.github.com/users/anwilli5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 134359129, "node_id": "MDU6TGFiZWwxMzQzNTkxMjk=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 134359130, "node_id": "MDU6TGFiZWwxMzQzNTkxMzA=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 204584419, "node_id": "MDU6TGFiZWwyMDQ1ODQ0MTk=", "url": "https://api.github.com/repos/pexpect/ptyprocess/labels/needs-tests", "name": "needs-tests", "color": "f7c6c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-10-18T02:01:44Z", "updated_at": "2016-02-14T23:03:13Z", "closed_at": "2016-02-14T23:03:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calls to self.fileobj.readline() from the PtyProcess readline() method read data one byte at a time (most likely since fileobj is opened with 'buffering=0'.)  Thus, this program:\n\n``` python\nfrom ptyprocess import PtyProcess, PtyProcessUnicode\np = PtyProcess.spawn(['perl',  '-e', '''use 5.010; foreach my $letter ('a'..'z'){ say $letter x 1000; }'''])\nwhile(1):\n    try:\n        print p.readline()\n    except EOFError:\n        break\np.close()\n```\n\nHas pretty poor performance (output from strace):\n\n```\n% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n 93.48    0.465020          18     26214         1 read\n  2.28    0.011353          23       489       381 open\n  0.84    0.004197        4197         1           clone\n  0.61    0.003037          19       160       113 stat\n```\n\nIs there a compelling reason to specify that the fileobj should have unbuffered IO?\n\nThe PtyProcess read() method does not experience this behavior because it uses a default buffer size of 1024.\n", "performed_via_github_app": null, "score": 1.0}]}