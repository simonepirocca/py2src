{"total_count": 991, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/secdev/scapy/issues/2806", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2806/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2806/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2806/events", "html_url": "https://github.com/secdev/scapy/issues/2806", "id": 697806891, "node_id": "MDU6SXNzdWU2OTc4MDY4OTE=", "number": 2806, "title": "Can't recognize some TLS ClientHello pkts.", "user": {"login": "Macr0phag3", "id": 20874963, "node_id": "MDQ6VXNlcjIwODc0OTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/20874963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Macr0phag3", "html_url": "https://github.com/Macr0phag3", "followers_url": "https://api.github.com/users/Macr0phag3/followers", "following_url": "https://api.github.com/users/Macr0phag3/following{/other_user}", "gists_url": "https://api.github.com/users/Macr0phag3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Macr0phag3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Macr0phag3/subscriptions", "organizations_url": "https://api.github.com/users/Macr0phag3/orgs", "repos_url": "https://api.github.com/users/Macr0phag3/repos", "events_url": "https://api.github.com/users/Macr0phag3/events{/privacy}", "received_events_url": "https://api.github.com/users/Macr0phag3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-10T11:26:15Z", "updated_at": "2020-09-10T13:48:21Z", "closed_at": "2020-09-10T13:48:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "- [x] Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n#### Brief description\r\n\r\nCan't recognize some TLS ClientHello pkts.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.4.dev9`\r\n-   Python version: `3.7.3`\r\n-   Operating System: `macOS 10.14.6 Mojave`\r\n\r\n#### How to reproduce\r\n\r\n```\r\nIn [1]: from scapy.all import *\r\n\r\nIn [2]: pkt = rdpcap('debug.pcap')\r\n\r\nIn [3]: pkt[0]\r\nOut[3]: <Ether  dst=5c:e8:83:78:4e:fb src=f4:8c:50:03:4d:19 type=IPv4 |<IP  version=4 ihl=5 tos=0x0 len=139 id=31565 flags=DF frag=0 ttl=128 proto=tcp chksum=0xffec src=10.88.4.210 dst=114.116.253.148 |<TCP  sport=15664 dport=8086 seq=766806923 ack=1943415827 dataofs=5 reserved=0 flags=PA window=16698 chksum=0x8c14 urgptr=0 |<Raw  load='\\x16\\x03\\x01\\x00^\\x01\\x00\\x00Z\\x03\\x01_Z\\x02G\\x1e\\xf3nB\\x9eT\\xaao(\\x18\\xdd~UaG=A\\xa9\\x9a\\x9a9\\xeb\\x8e{\\xc4\\x90\\xe1\\xcd\\x00\\x00\\x18\\xc0\\x14\\xc0\\x13\\x005\\x00/\\xc0\\n\\xc0\\t\\x008\\x002\\x00\\n\\x00\\x13\\x00\\x05\\x00\\x04\\x01\\x00\\x00\\x19\\x00\\n\\x00\\x06\\x00\\x04\\x00\\x17\\x00\\x18\\x00\\x0b\\x00\\x02\\x01\\x00\\x00\\x17\\x00\\x00\\xff\\x01\\x00\\x01\\x00' |>>>>\r\n```\r\n\r\n**wireshark\uff1a**\r\n![image](https://user-images.githubusercontent.com/20874963/92722517-4ec0e900-f39a-11ea-9321-375c8bdc1466.png)\r\n\r\n**scapy\uff1a**\r\n![image](https://user-images.githubusercontent.com/20874963/92722547-597b7e00-f39a-11ea-8eb4-f4ad62751ff6.png)\r\n\r\n#### Actual result\r\n**scapy\uff1a**\r\n![image](https://user-images.githubusercontent.com/20874963/92722547-597b7e00-f39a-11ea-8eb4-f4ad62751ff6.png)\r\n\r\n#### Expected result\r\n**wireshark\uff1a**\r\n![image](https://user-images.githubusercontent.com/20874963/92722517-4ec0e900-f39a-11ea-9321-375c8bdc1466.png)\r\n\r\n#### Related resources\r\n\r\ntry this pcap:\r\n[debug.pcap.zip](https://github.com/secdev/scapy/files/5201241/debug.pcap.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2793", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2793/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2793/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2793/events", "html_url": "https://github.com/secdev/scapy/issues/2793", "id": 690892708, "node_id": "MDU6SXNzdWU2OTA4OTI3MDg=", "number": 2793, "title": "Scapy does not recognize tcpreplay on Windows", "user": {"login": "adamvm", "id": 5563693, "node_id": "MDQ6VXNlcjU1NjM2OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5563693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamvm", "html_url": "https://github.com/adamvm", "followers_url": "https://api.github.com/users/adamvm/followers", "following_url": "https://api.github.com/users/adamvm/following{/other_user}", "gists_url": "https://api.github.com/users/adamvm/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamvm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamvm/subscriptions", "organizations_url": "https://api.github.com/users/adamvm/orgs", "repos_url": "https://api.github.com/users/adamvm/repos", "events_url": "https://api.github.com/users/adamvm/events{/privacy}", "received_events_url": "https://api.github.com/users/adamvm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1340386506, "node_id": "MDU6TGFiZWwxMzQwMzg2NTA2", "url": "https://api.github.com/repos/secdev/scapy/labels/needs%20additional%20info", "name": "needs additional info", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-09-02T10:07:20Z", "updated_at": "2020-09-09T05:13:04Z", "closed_at": "2020-09-09T05:13:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nIn Windows 10 system tcpreplay win32 binaries are present and added to path, but sendpfast returns exception\r\n\r\n\r\n#### Environment\r\n\r\n-   Scapy version: scapy 2.4.3\r\n-   Python version: 3.7\r\n-   Operating System: Windows 10 64-bit\r\n\r\n#### How to reproduce\r\n\r\np = Ether() / IP(src=None, dst=\"192.168.255.1\") / TCP(dport=23, flags='S')\r\nsendpfast(p, pps=8000, loop=1, iface='ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter')\r\n\r\n#### Actual result\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\nNameError: name 'sendpfast' is not defined\r\nfrom scapy.sendrecv import sendp, sr, sendpfast\r\nsendpfast(p, pps=8000, loop=1, iface='ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter')\r\nTraceback (most recent call last):\r\n  File \"C:\\Robot\\venv\\lib\\site-packages\\scapy\\sendrecv.py\", line 385, in sendpfast\r\n    stderr=subprocess.PIPE)\r\n  File \"C:\\Python37\\lib\\subprocess.py\", line 775, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"C:\\Python37\\lib\\subprocess.py\", line 1119, in _execute_child\r\n    args = list2cmdline(args)\r\n  File \"C:\\Python37\\lib\\subprocess.py\", line 530, in list2cmdline\r\n    needquote = (\" \" in arg) or (\"\\t\" in arg) or not arg\r\nTypeError: argument of type 'NoneType' is not iterable\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\Robot\\venv\\lib\\site-packages\\scapy\\sendrecv.py\", line 398, in sendpfast\r\n    log_runtime.info(stdout.decode())\r\n  File \"C:\\Robot\\venv\\lib\\site-packages\\scapy\\utils.py\", line 555, in __exit__\r\n    raise OSError(msg)\r\nOSError: Could not execute sendpfast(), is it installed ?\r\nsendpfast(p, pps=8000, loop=1, iface='ASIX AX88179 USB 3.0 to Gigabit Ethernet Adapter')\r\nTraceback (most recent call last):\r\n  File \"C:\\Robot\\venv\\lib\\site-packages\\scapy\\sendrecv.py\", line 385, in sendpfast\r\n    stderr=subprocess.PIPE)\r\n  File \"C:\\Python37\\lib\\subprocess.py\", line 775, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"C:\\Python37\\lib\\subprocess.py\", line 1119, in _execute_child\r\n    args = list2cmdline(args)\r\n  File \"C:\\Python37\\lib\\subprocess.py\", line 530, in list2cmdline\r\n    needquote = (\" \" in arg) or (\"\\t\" in arg) or not arg\r\nTypeError: argument of type 'NoneType' is not iterable\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\Robot\\venv\\lib\\site-packages\\scapy\\sendrecv.py\", line 398, in sendpfast\r\n    log_runtime.info(stdout.decode())\r\n  File \"C:\\Robot\\venv\\lib\\site-packages\\scapy\\utils.py\", line 555, in __exit__\r\n    raise OSError(msg)\r\nOSError: Could not execute sendpfast(), is it installed ?\r\n```\r\n\r\n#### Expected result\r\n\r\npackets should be sent\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n![image](https://user-images.githubusercontent.com/5563693/91968215-99948e00-ed14-11ea-85e2-d42edbad5d28.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2791", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2791/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2791/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2791/events", "html_url": "https://github.com/secdev/scapy/issues/2791", "id": 690255538, "node_id": "MDU6SXNzdWU2OTAyNTU1Mzg=", "number": 2791, "title": "Scapy unable to recognize TLS packet with no message", "user": {"login": "edunham-443", "id": 55013061, "node_id": "MDQ6VXNlcjU1MDEzMDYx", "avatar_url": "https://avatars3.githubusercontent.com/u/55013061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edunham-443", "html_url": "https://github.com/edunham-443", "followers_url": "https://api.github.com/users/edunham-443/followers", "following_url": "https://api.github.com/users/edunham-443/following{/other_user}", "gists_url": "https://api.github.com/users/edunham-443/gists{/gist_id}", "starred_url": "https://api.github.com/users/edunham-443/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edunham-443/subscriptions", "organizations_url": "https://api.github.com/users/edunham-443/orgs", "repos_url": "https://api.github.com/users/edunham-443/repos", "events_url": "https://api.github.com/users/edunham-443/events{/privacy}", "received_events_url": "https://api.github.com/users/edunham-443/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691058, "node_id": "MDU6TGFiZWwyNjc2OTEwNTg=", "url": "https://api.github.com/repos/secdev/scapy/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-01T15:48:55Z", "updated_at": "2020-09-05T16:57:22Z", "closed_at": "2020-09-05T16:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThings to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n-->\r\n\r\n#### Brief description\r\n\r\nScapy is unable to recognize a TLS packet that has no message.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.4rc2\r\n-   Python version: `Python 3.6.9`\r\n-   Operating System: `Ubuntu 18.04.4`\r\n\r\n#### How to reproduce\r\n\r\nload_layer(\"tls\")\r\npkt = TLS(bytes(TLS()))\r\npkt.show2()\r\n\r\n#### Actual result\r\n\r\n###[ Encrypted Content ]### \r\n  load      = '\\x00\\x03\\x03\\x00\\x00'\r\n\r\n#### Expected result\r\n\r\n###[ TLS ]### \r\n  type      = handshake\r\n  version   = TLS 1.2\r\n  len       = 115    [deciphered_len= 115]\r\n  iv        = b''\r\n  \\msg       \\\r\n  mac       = b''\r\n  pad       = b''\r\n  padlen    = None\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2788", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2788/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2788/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2788/events", "html_url": "https://github.com/secdev/scapy/issues/2788", "id": 689172996, "node_id": "MDU6SXNzdWU2ODkxNzI5OTY=", "number": 2788, "title": "sniff packets wrong order", "user": {"login": "lizitong67", "id": 49505270, "node_id": "MDQ6VXNlcjQ5NTA1Mjcw", "avatar_url": "https://avatars3.githubusercontent.com/u/49505270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lizitong67", "html_url": "https://github.com/lizitong67", "followers_url": "https://api.github.com/users/lizitong67/followers", "following_url": "https://api.github.com/users/lizitong67/following{/other_user}", "gists_url": "https://api.github.com/users/lizitong67/gists{/gist_id}", "starred_url": "https://api.github.com/users/lizitong67/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lizitong67/subscriptions", "organizations_url": "https://api.github.com/users/lizitong67/orgs", "repos_url": "https://api.github.com/users/lizitong67/repos", "events_url": "https://api.github.com/users/lizitong67/events{/privacy}", "received_events_url": "https://api.github.com/users/lizitong67/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691058, "node_id": "MDU6TGFiZWwyNjc2OTEwNTg=", "url": "https://api.github.com/repos/secdev/scapy/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-31T12:35:20Z", "updated_at": "2020-09-01T16:11:13Z", "closed_at": "2020-09-01T16:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanna use the sniff() to capture packets and the _iface_ is an **interface list**. But the order of packets(timestamp is different from what captured by Wireshark) is wrong, how could I resolve the problem?\r\n \r\nFor example, the order of packets captured by Wireshark is 1 2 3, but what captured by sniff() is 3 2 1\r\n\r\n`pkts = sniff(filter=\"proto ospf\", iface=veth_list, prn=send_to_analyser) `", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2787", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2787/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2787/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2787/events", "html_url": "https://github.com/secdev/scapy/issues/2787", "id": 689122018, "node_id": "MDU6SXNzdWU2ODkxMjIwMTg=", "number": 2787, "title": "struct.error when opening malformed pcap", "user": {"login": "Google-Autofuzz", "id": 27442508, "node_id": "MDQ6VXNlcjI3NDQyNTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/27442508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Google-Autofuzz", "html_url": "https://github.com/Google-Autofuzz", "followers_url": "https://api.github.com/users/Google-Autofuzz/followers", "following_url": "https://api.github.com/users/Google-Autofuzz/following{/other_user}", "gists_url": "https://api.github.com/users/Google-Autofuzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Google-Autofuzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Google-Autofuzz/subscriptions", "organizations_url": "https://api.github.com/users/Google-Autofuzz/orgs", "repos_url": "https://api.github.com/users/Google-Autofuzz/repos", "events_url": "https://api.github.com/users/Google-Autofuzz/events{/privacy}", "received_events_url": "https://api.github.com/users/Google-Autofuzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "p-l-", "id": 5064814, "node_id": "MDQ6VXNlcjUwNjQ4MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5064814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p-l-", "html_url": "https://github.com/p-l-", "followers_url": "https://api.github.com/users/p-l-/followers", "following_url": "https://api.github.com/users/p-l-/following{/other_user}", "gists_url": "https://api.github.com/users/p-l-/gists{/gist_id}", "starred_url": "https://api.github.com/users/p-l-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p-l-/subscriptions", "organizations_url": "https://api.github.com/users/p-l-/orgs", "repos_url": "https://api.github.com/users/p-l-/repos", "events_url": "https://api.github.com/users/p-l-/events{/privacy}", "received_events_url": "https://api.github.com/users/p-l-/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "p-l-", "id": 5064814, "node_id": "MDQ6VXNlcjUwNjQ4MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5064814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p-l-", "html_url": "https://github.com/p-l-", "followers_url": "https://api.github.com/users/p-l-/followers", "following_url": "https://api.github.com/users/p-l-/following{/other_user}", "gists_url": "https://api.github.com/users/p-l-/gists{/gist_id}", "starred_url": "https://api.github.com/users/p-l-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p-l-/subscriptions", "organizations_url": "https://api.github.com/users/p-l-/orgs", "repos_url": "https://api.github.com/users/p-l-/repos", "events_url": "https://api.github.com/users/p-l-/events{/privacy}", "received_events_url": "https://api.github.com/users/p-l-/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-31T11:11:59Z", "updated_at": "2020-09-02T07:15:44Z", "closed_at": "2020-09-02T07:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nScapy crashes when opening a malformed pcap file.\r\n\r\n\r\n\r\n#### Environment\r\n\r\n-   Scapy version: scapy-2.4.4rc2.dev38\r\n-   Python version: 3.8\r\n-   Operating System: Debian\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n```python\r\n$ cat test.py \r\nimport sys\r\nimport scapy\r\nimport scapy.utils\r\n\r\nscapy.utils.rdpcap(sys.argv[1])\r\n\r\n$ python3 test.py ./clusterfuzz-testcase-minimized-fuzz_scapy-5720462057013248 \r\nTraceback (most recent call last):\r\n  File \"test.py\", line 5, in <module>\r\n    scapy.utils.rdpcap(sys.argv[1])\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 951, in rdpcap\r\n    return fdesc.read_all(count=count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1343, in read_all\r\n    res = RawPcapNgReader.read_all(self, count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1093, in read_all\r\n    p = self.read_packet()\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1322, in read_packet\r\n    rp = super(PcapNgReader, self).read_packet(size=size)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1239, in read_packet\r\n    res = self.blocktypes.get(blocktype,\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1269, in read_block_idb\r\n    self.interfaces.append(struct.unpack(self.endian + \"HxxI\", block[:8]) +\r\nstruct.error: unpack requires a buffer of 8 bytes\r\n```\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 5, in <module>\r\n    scapy.utils.rdpcap(sys.argv[1])\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 951, in rdpcap\r\n    return fdesc.read_all(count=count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1343, in read_all\r\n    res = RawPcapNgReader.read_all(self, count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1093, in read_all\r\n    p = self.read_packet()\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1322, in read_packet\r\n    rp = super(PcapNgReader, self).read_packet(size=size)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1239, in read_packet\r\n    res = self.blocktypes.get(blocktype,\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1269, in read_block_idb\r\n    self.interfaces.append(struct.unpack(self.endian + \"HxxI\", block[:8]) +\r\nstruct.error: unpack requires a buffer of 8 bytes\r\n```\r\n#### Expected result\r\n\r\nNot a crash\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n[clusterfuzz-testcase-minimized-fuzz_scapy-5720462057013248.tar.gz](https://github.com/secdev/scapy/files/5149957/clusterfuzz-testcase-minimized-fuzz_scapy-5720462057013248.tar.gz)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2786", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2786/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2786/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2786/events", "html_url": "https://github.com/secdev/scapy/issues/2786", "id": 687435020, "node_id": "MDU6SXNzdWU2ODc0MzUwMjA=", "number": 2786, "title": "Bug: layers/dhcp.py  DHCPOptions[33] and DHCPOptions[46] duplicate symbol", "user": {"login": "anr-private", "id": 4354456, "node_id": "MDQ6VXNlcjQzNTQ0NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4354456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anr-private", "html_url": "https://github.com/anr-private", "followers_url": "https://api.github.com/users/anr-private/followers", "following_url": "https://api.github.com/users/anr-private/following{/other_user}", "gists_url": "https://api.github.com/users/anr-private/gists{/gist_id}", "starred_url": "https://api.github.com/users/anr-private/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anr-private/subscriptions", "organizations_url": "https://api.github.com/users/anr-private/orgs", "repos_url": "https://api.github.com/users/anr-private/repos", "events_url": "https://api.github.com/users/anr-private/events{/privacy}", "received_events_url": "https://api.github.com/users/anr-private/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-27T18:00:37Z", "updated_at": "2020-09-05T18:00:39Z", "closed_at": "2020-09-05T18:00:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "DHCPOptions[33] and [46] are both called \"static-routes\". I believe [33] is correct but [46] is incorrect. Per RFC-2132 sect 8.7, [46] is \"NetBIOS over TCP/IP Node Type Option\". The error also causes DHCPRevOptions issue (obviously, duplicate symbol/string).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2785", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2785/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2785/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2785/events", "html_url": "https://github.com/secdev/scapy/issues/2785", "id": 686442503, "node_id": "MDU6SXNzdWU2ODY0NDI1MDM=", "number": 2785, "title": "TLS decryption fails (IndexError: index out of range)", "user": {"login": "strayge", "id": 2664578, "node_id": "MDQ6VXNlcjI2NjQ1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2664578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strayge", "html_url": "https://github.com/strayge", "followers_url": "https://api.github.com/users/strayge/followers", "following_url": "https://api.github.com/users/strayge/following{/other_user}", "gists_url": "https://api.github.com/users/strayge/gists{/gist_id}", "starred_url": "https://api.github.com/users/strayge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strayge/subscriptions", "organizations_url": "https://api.github.com/users/strayge/orgs", "repos_url": "https://api.github.com/users/strayge/repos", "events_url": "https://api.github.com/users/strayge/events{/privacy}", "received_events_url": "https://api.github.com/users/strayge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-26T16:07:29Z", "updated_at": "2020-09-02T09:36:01Z", "closed_at": "2020-09-02T09:36:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThings to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n-->\r\n\r\n#### Brief description\r\n\r\nDecryption failed with exception.\r\n\r\nGot this error with combo of curl client (`7.58.0 OpenSSL/1.1.1` or `7.68.0 OpenSSL/1.1.1f`) and server with `OpenSSL/1.1.1` stricted to `TLSv1.2`.\r\n\r\nWith cipher `TLS_RSA_WITH_AES_256_GCM_SHA384` (instead of `TLS_RSA_WITH_AES_256_CBC_SHA256`) same client/server combo didn't raise exception, but `TLSApplicationData` contains wrong binary data (instead of decoded http request).\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.4rc2.dev30`\r\n-   Python version: `Python 3.7.5`\r\n-   Operating System: `Ubuntu 18.04.3 LTS`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n[scapy_1804_12_12_cbc.pcap](https://drive.google.com/file/d/1ImPISwaQgnzh2j5rr4AeSEa9fI41mYWO/view?usp=sharing)\r\n[ssl.key](https://drive.google.com/file/d/12sKUSuKCsNmApqfc9mF683IwC1T7LE59/view?usp=sharing)\r\n```python3\r\nfrom scapy.all import *\r\nload_layer('tls')\r\npcap = rdpcap('scapy_1804_12_12_cbc.pcap')\r\nkey = PrivKey('ssl.key')\r\nr1 = TLS(pcap[0].load)\r\nr1.tls_session.server_rsa_key = key\r\nr2 = TLS(pcap[1].load, tls_session=r1.tls_session.mirror())\r\nr3 = TLS(pcap[2].load, tls_session=r2.tls_session.mirror())\r\nr4 = TLS(pcap[3].load, tls_session=r3.tls_session.mirror())\r\nr5 = TLS(pcap[4].load, tls_session=r4.tls_session.mirror())\r\n```\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n```python3\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-10-59b2d1bfbd3d> in <module>\r\n----> 1 r5 = TLS(pcap[4].load, tls_session=r4.tls_session.mirror())\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/base_classes.py in __call__(cls, *args, **kargs)\r\n    264                 cls = config.conf.raw_layer\r\n    265         i = cls.__new__(cls, cls.__name__, cls.__bases__, cls.__dict__)\r\n--> 266         i.__init__(*args, **kargs)\r\n    267         return i\r\n    268\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/record.py in __init__(self, *args, **kargs)\r\n    302     def __init__(self, *args, **kargs):\r\n    303         self.deciphered_len = kargs.get(\"deciphered_len\", None)\r\n--> 304         super(TLS, self).__init__(*args, **kargs)\r\n    305\r\n    306     @classmethod\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/session.py in __init__(self, _pkt, post_transform, _internal, _underlayer, tls_session, **fields)\r\n    902         Packet.__init__(self, _pkt=_pkt, post_transform=post_transform,\r\n    903                         _internal=_internal, _underlayer=_underlayer,\r\n--> 904                         **fields)\r\n    905\r\n    906     def __getattr__(self, attr):\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/packet.py in __init__(self, _pkt, post_transform, _internal, _underlayer, **fields)\r\n    156         self.sniffed_on = None\r\n    157         if _pkt:\r\n--> 158             self.dissect(_pkt)\r\n    159             if not _internal:\r\n    160                 self.dissection_done(self)\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/packet.py in dissect(self, s)\r\n    873         s = self.pre_dissect(s)\r\n    874\r\n--> 875         s = self.do_dissect(s)\r\n    876\r\n    877         s = self.post_dissect(s)\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/packet.py in do_dissect(self, s)\r\n    837             if not s:\r\n    838                 break\r\n--> 839             s, fval = f.getfield(self, s)\r\n    840             # We need to track fields with mutable values to discard\r\n    841             # .raw_packet_cache when needed.\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/basefields.py in getfield(self, pkt, s)\r\n    202             # from another TLS record (hence the last byte from s would not be\r\n    203             # the last byte from the current record padding).\r\n--> 204             tmp_len = orb(s[pkt.padlen - 1])\r\n    205             return s[tmp_len:], self.m2i(pkt, s[:tmp_len])\r\n    206         return s, None\r\n\r\nIndexError: index out of range\r\n```\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\nDecoded data.\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2778", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2778/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2778/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2778/events", "html_url": "https://github.com/secdev/scapy/issues/2778", "id": 684470777, "node_id": "MDU6SXNzdWU2ODQ0NzA3Nzc=", "number": 2778, "title": "Broken TLS session while server choose TLSv1.2 instead of TLSv1.3", "user": {"login": "strayge", "id": 2664578, "node_id": "MDQ6VXNlcjI2NjQ1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2664578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strayge", "html_url": "https://github.com/strayge", "followers_url": "https://api.github.com/users/strayge/followers", "following_url": "https://api.github.com/users/strayge/following{/other_user}", "gists_url": "https://api.github.com/users/strayge/gists{/gist_id}", "starred_url": "https://api.github.com/users/strayge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strayge/subscriptions", "organizations_url": "https://api.github.com/users/strayge/orgs", "repos_url": "https://api.github.com/users/strayge/repos", "events_url": "https://api.github.com/users/strayge/events{/privacy}", "received_events_url": "https://api.github.com/users/strayge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1317786288, "node_id": "MDU6TGFiZWwxMzE3Nzg2Mjg4", "url": "https://api.github.com/repos/secdev/scapy/labels/tls", "name": "tls", "color": "56088e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-24T08:23:55Z", "updated_at": "2020-09-10T12:42:33Z", "closed_at": "2020-09-10T12:42:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThings to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n-->\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\nBroken TLS session while parsing dump from server with disabled TLSv1.3.\r\n\r\nClient supports both TLS 1.2 and 1.3:\r\n```\r\n   |   |###[ TLS Extension - Supported Versions (for ClientHello) ]###\r\n   |   |  type      = supported_versions\r\n   |   |  len       = 5\r\n   |   |  versionslen= 4\r\n   |   |  versions  = [TLS 1.3, TLS 1.2]\r\n```\r\nBut server works only with TLS 1.2:\r\n```\r\n   |###[ TLS Handshake - Server Hello ]###\r\n   |  msgtype   = server_hello\r\n   |  msglen    = 81\r\n   |  version   = TLS 1.2\r\n```\r\nLooks like TLSSession saves TLSv1.3 from `ClientHello` and do not downgraded with `ServerHello`.\r\n\r\nIf restrict client to TLSv1.2 (curl `--tls-max 1.2` option) it start works as expected.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.4rc2.dev30`\r\n-   Python version: `3.7.5`\r\n-   Operating System: `Ubuntu 18.04.3 LTS`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n[scapy_client_tls13_server_tls12.pcap](https://drive.google.com/file/d/1yy0BRSwQKVLSlqnYv9hY0W0GbgoYFCED/view)\r\n```python3\r\nfrom scapy.all import *\r\nload_layer('tls')\r\npcap = rdpcap('scapy_client_tls13_server_tls12.pcap')\r\nr1 = TLS(pcap[0].load)\r\nr2 = TLS(pcap[1].load, tls_session=r1.tls_session.mirror())\r\n```\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n\r\n```python3\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-5-4c9f13dcdcd8> in <module>\r\n----> 1 r2 = TLS(pcap[1].load, tls_session=r1.tls_session.mirror())\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/base_classes.py in __call__(cls, *args, **kargs)\r\n    264                 cls = config.conf.raw_layer\r\n    265         i = cls.__new__(cls, cls.__name__, cls.__bases__, cls.__dict__)\r\n--> 266         i.__init__(*args, **kargs)\r\n    267         return i\r\n    268\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/record.py in __init__(self, *args, **kargs)\r\n    302     def __init__(self, *args, **kargs):\r\n    303         self.deciphered_len = kargs.get(\"deciphered_len\", None)\r\n--> 304         super(TLS, self).__init__(*args, **kargs)\r\n    305\r\n    306     @classmethod\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/session.py in __init__(self, _pkt, post_transform, _internal, _underlayer, tls_session, **fields)\r\n    902         Packet.__init__(self, _pkt=_pkt, post_transform=post_transform,\r\n    903                         _internal=_internal, _underlayer=_underlayer,\r\n--> 904                         **fields)\r\n    905\r\n    906     def __getattr__(self, attr):\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/packet.py in __init__(self, _pkt, post_transform, _internal, _underlayer, **fields)\r\n    156         self.sniffed_on = None\r\n    157         if _pkt:\r\n--> 158             self.dissect(_pkt)\r\n    159             if not _internal:\r\n    160                 self.dissection_done(self)\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/packet.py in dissect(self, s)\r\n    873         s = self.pre_dissect(s)\r\n    874\r\n--> 875         s = self.do_dissect(s)\r\n    876\r\n    877         s = self.post_dissect(s)\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/packet.py in do_dissect(self, s)\r\n    837             if not s:\r\n    838                 break\r\n--> 839             s, fval = f.getfield(self, s)\r\n    840             # We need to track fields with mutable values to discard\r\n    841             # .raw_packet_cache when needed.\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/record.py in getfield(self, pkt, s)\r\n    166                 if isinstance(p, _GenericTLSSessionInheritance):\r\n    167                     if not p.tls_session.frozen:\r\n--> 168                         p.post_dissection_tls_session_update(raw_msg)\r\n    169\r\n    170                 lst.append(p)\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/session.py in post_dissection_tls_session_update(self, msg_str)\r\n    924\r\n    925     def post_dissection_tls_session_update(self, msg_str):\r\n--> 926         self.tls_session_update(msg_str)\r\n    927\r\n    928     def copy(self):\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/handshake.py in tls_session_update(self, msg_str)\r\n    648             s.prcs = readConnState(ciphersuite=cs_cls,\r\n    649                                    connection_end=connection_end,\r\n--> 650                                    tls_version=s.tls_version)\r\n    651             if not s.middlebox_compatibility:\r\n    652                 s.triggered_prcs_commit = True\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/session.py in __init__(self, **kargs)\r\n    279 class readConnState(connState):\r\n    280     def __init__(self, **kargs):\r\n--> 281         connState.__init__(self, read_or_write=\"read\", **kargs)\r\n    282\r\n    283\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/session.py in __init__(self, connection_end, read_or_write, seq_num, compression_alg, ciphersuite, tls_version)\r\n     89             from scapy.layers.tls.crypto.suites import TLS_NULL_WITH_NULL_NULL\r\n     90             ciphersuite = TLS_NULL_WITH_NULL_NULL\r\n---> 91         self.ciphersuite = ciphersuite(tls_version=tls_version)\r\n     92\r\n     93         if not self.ciphersuite.usable:\r\n\r\n~/scapy_venv/lib/python3.7/site-packages/scapy/layers/tls/crypto/suites.py in __init__(self, tls_version)\r\n    140         \"\"\"\r\n    141         super(_GenericCipherSuite, self).__init__()\r\n--> 142         if tls_version <= 0x301:\r\n    143             self.key_block_len = self._key_block_len_v1_0\r\n    144\r\n\r\nTypeError: '<=' not supported between instances of 'NoneType' and 'int'\r\n```\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\n\r\nCorrect work of TLSSession (saves TLSv1.2 as `tls_version` on parsing `ServerHello`) in that case.\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2776", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2776/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2776/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2776/events", "html_url": "https://github.com/secdev/scapy/issues/2776", "id": 684274085, "node_id": "MDU6SXNzdWU2ODQyNzQwODU=", "number": 2776, "title": "volatile.py: class RandString(RandField) - TypeError: can't concat str to bytes", "user": {"login": "axlgit", "id": 57374262, "node_id": "MDQ6VXNlcjU3Mzc0MjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/57374262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axlgit", "html_url": "https://github.com/axlgit", "followers_url": "https://api.github.com/users/axlgit/followers", "following_url": "https://api.github.com/users/axlgit/following{/other_user}", "gists_url": "https://api.github.com/users/axlgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/axlgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axlgit/subscriptions", "organizations_url": "https://api.github.com/users/axlgit/orgs", "repos_url": "https://api.github.com/users/axlgit/repos", "events_url": "https://api.github.com/users/axlgit/events{/privacy}", "received_events_url": "https://api.github.com/users/axlgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-23T23:11:19Z", "updated_at": "2020-08-24T07:44:06Z", "closed_at": "2020-08-24T07:44:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\nDONE\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: scapy==2.4.4rc2.dev30\r\n-   Python version: 3.7.9\r\n-   Operating System: Windows 10\r\n\r\n\r\n#### How to reproduce\r\n\r\nProblem described here:\r\n\r\nhttps://stackoverflow.com/questions/63552660/scapy-2-4-4-py-3-7-9-typeerror-cant-concat-str-to-bytes\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2774", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2774/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2774/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2774/events", "html_url": "https://github.com/secdev/scapy/issues/2774", "id": 682285391, "node_id": "MDU6SXNzdWU2ODIyODUzOTE=", "number": 2774, "title": "Fail to build the documentation offline with the latest master doc/scapy file", "user": {"login": "tianzry", "id": 19747979, "node_id": "MDQ6VXNlcjE5NzQ3OTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/19747979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tianzry", "html_url": "https://github.com/tianzry", "followers_url": "https://api.github.com/users/tianzry/followers", "following_url": "https://api.github.com/users/tianzry/following{/other_user}", "gists_url": "https://api.github.com/users/tianzry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tianzry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tianzry/subscriptions", "organizations_url": "https://api.github.com/users/tianzry/orgs", "repos_url": "https://api.github.com/users/tianzry/repos", "events_url": "https://api.github.com/users/tianzry/events{/privacy}", "received_events_url": "https://api.github.com/users/tianzry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-20T01:38:07Z", "updated_at": "2020-08-20T18:01:25Z", "closed_at": "2020-08-20T18:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nFail to build the documentation offline with the latest master doc/scapy\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `c03d8d4227761a369f3f449ac5dafb3e21c364dd`\r\n-   Python version: ` 3.7.4`\r\n-   Operating System: `Windows 10 x64 `\r\n\r\n- Sphinx version: 3.0.1 (also try the latest Sphinx, the error was same)\r\n- Docutils version: 0.16 release\r\n- Jinja2 version: 2.11.2\r\n\r\n#### How to reproduce\r\n\r\n1. download the latest master code from url: https://github.com/secdev/scapy/archive/master.zip\r\n2. build the doc offline as the tutorial  https://scapy.readthedocs.io/en/latest/installation.html#build-the-documentation-offline\r\n\r\n#### Actual result\r\n\r\nD:\\scapy_20200820\\doc\\scapy>make.bat html\r\nRunning Sphinx v3.0.1\r\n\r\nException occurred:\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\subprocess.py\", line 1178, in _execute_child\r\n    startupinfo)\r\nFileNotFoundError: [WinError 2] The system could not find the specified file\r\n\r\n**the sphinx error log show as following:**\r\n\r\n Sphinx version: 3.0.1\r\n Python version: 3.7.4 (CPython)\r\n Docutils version: 0.16 release\r\n Jinja2 version: 2.11.2\r\n Last messages:\r\n\r\n Loaded extensions:\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\sphinx\\cmd\\build.py\", line 279, in build_main\r\n    args.tags, args.verbosity, args.jobs, args.keep_going)\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\sphinx\\application.py\", line 277, in __init__\r\n    self._init_builder()\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\sphinx\\application.py\", line 333, in _init_builder\r\n    self.events.emit('builder-inited')\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\sphinx\\events.py\", line 107, in emit\r\n    results.append(listener.handler(self.app, *args))\r\n  File \"D:\\scapy_20200820\\doc\\scapy\\_ext\\scapy_doc.py\", line 142, in builder_inited_handler\r\n    subprocess.call(['tox', '-e', 'apitree'])\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\subprocess.py\", line 323, in call\r\n    with Popen(*popenargs, **kwargs) as p:\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\subprocess.py\", line 775, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"c:\\users\\xxx\\appdata\\local\\programs\\python\\python37-32\\lib\\subprocess.py\", line 1178, in _execute_child\r\n    startupinfo)\r\nFileNotFoundError: [WinError 2]\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2766", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2766/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2766/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2766/events", "html_url": "https://github.com/secdev/scapy/issues/2766", "id": 679670682, "node_id": "MDU6SXNzdWU2Nzk2NzA2ODI=", "number": 2766, "title": "Use scapy to verify the initialization and connection process defined in the rfc1928 for a SOCKS5 Proxy.", "user": {"login": "hongyi-zhao", "id": 11155854, "node_id": "MDQ6VXNlcjExMTU1ODU0", "avatar_url": "https://avatars2.githubusercontent.com/u/11155854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hongyi-zhao", "html_url": "https://github.com/hongyi-zhao", "followers_url": "https://api.github.com/users/hongyi-zhao/followers", "following_url": "https://api.github.com/users/hongyi-zhao/following{/other_user}", "gists_url": "https://api.github.com/users/hongyi-zhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/hongyi-zhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hongyi-zhao/subscriptions", "organizations_url": "https://api.github.com/users/hongyi-zhao/orgs", "repos_url": "https://api.github.com/users/hongyi-zhao/repos", "events_url": "https://api.github.com/users/hongyi-zhao/events{/privacy}", "received_events_url": "https://api.github.com/users/hongyi-zhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-16T01:37:45Z", "updated_at": "2020-08-16T23:39:36Z", "closed_at": "2020-08-16T23:39:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nOn Ubuntu 20.04, I've Tor listening on 127.0.0.1:9050 as a socks5 proxy. I want to verify the initialization and connection process defined in the rfc1928 with scapy when I'm using the proxy to access some websites, say, by curl as following:\r\n\r\n$ curl -v -x socks5://127.0.0.1:9050 http://clients3.google.com/generate_204\r\n\r\nAny hints for this problem?\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2764", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2764/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2764/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2764/events", "html_url": "https://github.com/secdev/scapy/issues/2764", "id": 679506517, "node_id": "MDU6SXNzdWU2Nzk1MDY1MTc=", "number": 2764, "title": "sniff() dies when EOF on offline kwarg", "user": {"login": "stryngs", "id": 12008469, "node_id": "MDQ6VXNlcjEyMDA4NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/12008469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stryngs", "html_url": "https://github.com/stryngs", "followers_url": "https://api.github.com/users/stryngs/followers", "following_url": "https://api.github.com/users/stryngs/following{/other_user}", "gists_url": "https://api.github.com/users/stryngs/gists{/gist_id}", "starred_url": "https://api.github.com/users/stryngs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stryngs/subscriptions", "organizations_url": "https://api.github.com/users/stryngs/orgs", "repos_url": "https://api.github.com/users/stryngs/repos", "events_url": "https://api.github.com/users/stryngs/events{/privacy}", "received_events_url": "https://api.github.com/users/stryngs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691057, "node_id": "MDU6TGFiZWwyNjc2OTEwNTc=", "url": "https://api.github.com/repos/secdev/scapy/labels/discussion", "name": "discussion", "color": "cc317c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-15T05:44:44Z", "updated_at": "2020-08-16T23:40:57Z", "closed_at": "2020-08-16T23:40:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.  I found out by running sniff(offline='<blah>') that sniff() will die out when the end of the file is reached.  I am now using scapy to parse ubertooth packets.  The way I leverage it, I stream the raw ubertooth to a file and then read that in via sniff w/ offline.\r\n\r\nIf the bluetooth traffic is slower than the rate scapy can consume, it hits the EOF.  Once EOF sniff() dies.  A while true loop is my current idea for a workaround but am really wondering if there is a way to add in a parameter to keep sniff() open and tail -f so to speak.  I don't even know if this is possible and failed in my attempts.\r\n\r\nCurious your thoughts.  Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2763", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2763/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2763/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2763/events", "html_url": "https://github.com/secdev/scapy/issues/2763", "id": 679499037, "node_id": "MDU6SXNzdWU2Nzk0OTkwMzc=", "number": 2763, "title": "Error when getting raw bytes from parsed TLS layer", "user": {"login": "knwng", "id": 26247277, "node_id": "MDQ6VXNlcjI2MjQ3Mjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/26247277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knwng", "html_url": "https://github.com/knwng", "followers_url": "https://api.github.com/users/knwng/followers", "following_url": "https://api.github.com/users/knwng/following{/other_user}", "gists_url": "https://api.github.com/users/knwng/gists{/gist_id}", "starred_url": "https://api.github.com/users/knwng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knwng/subscriptions", "organizations_url": "https://api.github.com/users/knwng/orgs", "repos_url": "https://api.github.com/users/knwng/repos", "events_url": "https://api.github.com/users/knwng/events{/privacy}", "received_events_url": "https://api.github.com/users/knwng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1317786288, "node_id": "MDU6TGFiZWwxMzE3Nzg2Mjg4", "url": "https://api.github.com/repos/secdev/scapy/labels/tls", "name": "tls", "color": "56088e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-15T04:41:29Z", "updated_at": "2020-08-18T14:19:17Z", "closed_at": "2020-08-18T14:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nHi guys, I'm trying to read and parse a pcap file, find tls record and dump them as raw bytes. But I got exception when dealing with a TLS Handshake - Server Key Exchange with None in params and sig fields.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.4rc2.dev20\r\n-   Python version: 3.7.4\r\n-   Operating System: 7.7.1908\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\nYou can get the pcap file from here [192.168.165.217_49183_156.38.206.18_443_1593515552.pcap](https://drive.google.com/file/d/1iyIHMY5tWIuNQjggQMawIliQndh9ojB8/view?usp=sharing)\r\n\r\nYou can run the following file by `python poc.py` to reproduce the bug:\r\n\r\npoc.py:\r\n```\r\nfrom scapy.config import conf\r\nfrom scapy.all import load_layer\r\nfrom scapy.sendrecv import sniff\r\nfrom scapy.sessions import TCPSession\r\nfrom scapy.layers.tls.record import TLS\r\nfrom scapy.layers.tls.record_sslv2 import SSLv2\r\n\r\nload_layer('tls')\r\nconf.tls_session_enable = True\r\n\r\ndef extract_tls_payloads(fn, length):\r\n    tls_pkts = sniff(offline=fn, session=TCPSession, lfilter=lambda x: TLS in x or SSLv2 in x)\r\n    total_length = 0\r\n    payloads = []\r\n    for i, p in enumerate(tls_pkts):\r\n        if p.haslayer(TLS):\r\n            try:\r\n                payload = bytes(p[TLS])\r\n            except BaseException as e:\r\n                print(f'get tls failed {e}')\r\n                p.show()\r\n                raise\r\n        elif p.haslayer(SSLv2):\r\n            try:\r\n                payload = bytes(p[SSLv2])\r\n            except BaseException as e:\r\n                print(f'get ssl failed {e}')\r\n                p.show()\r\n                raise\r\n        else:\r\n            continue\r\n        payload = [int(x) for x in payload]\r\n        valid_length = min(len(payload), length - total_length)\r\n        payload = payload[:valid_length]\r\n        payloads.append(payload)\r\n        total_length += len(payload)\r\n        if total_length >= length:\r\n            break\r\n    return payloads\r\n\r\ndef test_failed_fn():\r\n    data_root = '/data1/wangqian/eta_1_pkt/train/white/'\r\n    fn = '192.168.165.217_49183_156.38.206.18_443_1593515552.pcap'\r\n    extract_tls_payloads(os.path.join(data_root, fn), 900)\r\n\r\nif __name__ == '__main__':\r\n    test_failed_fn()\r\n```\r\n\r\n#### Actual result\r\n\r\nThe poc will raise an exception as following:\r\n```\r\nTraceback (most recent call last):\r\n  File \"utils/poc.py\", line 51, in <module>\r\n    test_failed_fn()\r\n  File \"utils/poc.py\", line 47, in test_failed_fn\r\n    extract_tls_payloads(os.path.join(data_root, fn), 900)\r\n  File \"utils/poc.py\", line 19, in extract_tls_payloads\r\n    payload = bytes(p[TLS])\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/layers/tls/session.py\", line 966, in __bytes__\r\n    built_packet = super(_GenericTLSSessionInheritance, self).__bytes__()\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/packet.py\", line 492, in __bytes__\r\n    return self.build()\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/packet.py\", line 612, in build\r\n    p = self.do_build()\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/packet.py\", line 594, in do_build\r\n    pkt = self.self_build()\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/packet.py\", line 575, in self_build\r\n    p = f.addfield(self, p, val)\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/layers/tls/record.py\", line 207, in addfield\r\n    res += self.i2m(pkt, p)\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/layers/tls/record.py\", line 194, in i2m\r\n    cur = raw(p)\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/compat.py\", line 53, in raw\r\n    return bytes(x)\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/layers/tls/session.py\", line 966, in __bytes__\r\n    built_packet = super(_GenericTLSSessionInheritance, self).__bytes__()\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/packet.py\", line 492, in __bytes__\r\n    return self.build()\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/layers/tls/handshake.py\", line 1028, in build\r\n    m = s.client_random + s.server_random + raw(p)\r\n  File \"/data1/wangqian/venv_py3/lib/python3.7/site-packages/scapy/compat.py\", line 53, in raw\r\n    return bytes(x)\r\nTypeError: 'NoneType' object cannot be interpreted as an integer\r\n\r\n```\r\n\r\nand it'll also show the packet detail:\r\n\r\n```\r\n###[ Ethernet ]###\r\n  dst       = 52:55:10:00:02:02\r\n  src       = 52:54:00:12:34:56\r\n  type      = IPv4\r\n###[ IP ]###\r\n     version   = 4\r\n     ihl       = 5\r\n     tos       = 0x0\r\n     len       = 1480\r\n     id        = 3544\r\n     flags     =\r\n     frag      = 0\r\n     ttl       = 64\r\n     proto     = tcp\r\n     chksum    = 0x969d\r\n     src       = 156.38.206.18\r\n     dst       = 192.168.165.217\r\n     \\options   \\\r\n###[ TCP ]###\r\n        sport     = https\r\n        dport     = 49183\r\n        seq       = 7808002\r\n        ack       = 62833955\r\n        dataofs   = 5\r\n        reserved  = 0\r\n        flags     = A\r\n        window    = 9000\r\n        chksum    = 0xb9e\r\n        urgptr    = 0\r\n        options   = []\r\n###[ TLS ]###\r\n           type      = handshake\r\n           version   = TLS 1.2\r\n           len       = 3636    [deciphered_len= 1435]\r\n           iv        = b''\r\n           \\msg       \\\r\n            |###[ TLS Handshake - Server Hello ]###\r\n            |  msgtype   = server_hello\r\n            |  msglen    = 77\r\n            |  version   = TLS 1.2\r\n            |  gmt_unix_time= Tue, 30 Jun 2020 03:46:06 +0000 (1593488766)\r\n            |  random_bytes= 88dfdc237d27a0ffa2e2b5ec0e93a8e0de015b135b4615312078c6cc\r\n            |  sidlen    = 32\r\n            |  sid       = '`)\\x00\\x00\\x8aZ\\x90l\\xda\\x0b\\xe1\\xec[i\\x13\\xa7\\x8e\\xb9a\\x98\"\\x8a7L\\x9d\\x90\\xe0\\x01\\x06c$9'\r\n            |  cipher    = TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\n            |  comp      = null\r\n            |  extlen    = 5\r\n            |  \\ext       \\\r\n            |   |###[ TLS Extension - Renegotiation Indication ]###\r\n            |   |  type      = renegotiation_info\r\n            |   |  len       = 1\r\n            |   |  reneg_conn_len= 0\r\n            |   |  renegotiated_connection= ''\r\n            |###[ TLS Handshake - Server Key Exchange ]###\r\n            |  msgtype   = server_key_exchange\r\n            |  msglen    = 9306124\r\n            |  params    = (None, <Raw  load='\\x8b\\x00\\x06n0\\x82\\x06j0\\x82\\x05R\\xa0\\x03\\x02\\x01\\x02\\x02\\x10EY\\xe8\\x1c\\x1e\\x9a\\xe0?X\\xaa\\xc3\\xbc\\xcd`jh0\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x0b\\x05\\x000\\x81\\x8f1\\x0b0\\t\\x06\\x03U\\x04\\x06\\x13\\x02GB1\\x1b0\\x19\\x06\\x03U\\x04\\x08\\x13\\x\r\n12Greater Manchester1\\x100\\x0e\\x06\\x03U\\x04\\x07\\x13\\x07Salford1\\x180\\x16\\x06\\x03U\\x04\\n\\x13\\x0fSectigo Limited1705\\x06\\x03U\\x04\\x03\\x13.Sectigo RSA Domain Validation Secure Server CA0\\x1e\\x17\\r190309000000Z\\x17\\r210308235959Z0W1!0\\x1f\\x06\\x03U\\x04\\x0b\\x13\\x18Domain Contro\r\nl Validated1\\x1d0\\x1b\\x06\\x03U\\x04\\x0b\\x13\\x14PositiveSSL Wildcard1\\x130\\x11\\x06\\x03U\\x04\\x03\\x0c\\n*.mql5.net0\\x82\\x01\"0\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x01\\x05\\x00\\x03\\x82\\x01\\x0f\\x000\\x82\\x01\\n\\x02\\x82\\x01\\x01\\x00\\xcb\\xbcn=\\xbaGd\\xe1XB\\x07\\xc9\\xb1\\xc8/\\x86\\xaa4Z\\xbdNk\\x\r\nfb\\xffR\\x8f\\xe4\\x1c^\\x91m8\\xb9^\\x97\\xa5\\xd3N\\xfb\\x80\\x92\\x8ap\\xda\\x15\\x9f\\xee\\xe7\\xb3\\xc8?\\xb0>~\\xaa\\x07\\x91\\xb1\\x99q\\xe2\\xe5\\xc8\\x9b\\x1d5\\xa0\\x96,\\x98\\xdaW\\x93\\x95\\x8e%\\xe8\\xd4L\\xeb\\xcbSg\\x15\"\\xba\\xb7\\xc7\\x1f\\xe9\\xd6\\x1a\\xe6E\\x1d\\xc8\\x1e%\\xd36\\xe0/r\\xd1\\xce1C\\xce\\x91&\\xa\r\n1\\x08*R\\xbf\\x8cu\\xb0\\xda\\x0e\\x1e2\\xd66\\x1df&3\\x9b\\x03\\x0b\\xcam:\\xf7\\x12\\xd9ud(\\xae\\xdc\\xbci\\x85\\xbd\\xcf\\xeb{\\x15:\\xbd\\x0e\\x11\\x1bi\\xd8\\xff]y~E\\x15\\x95\\xee\\xe9\\xea\\xc6Cr</\\x0b\\xe8\\xc2\\x9d\\xe3\\x83\\x07R\\xeb1\\xf0\\x93<|.\\xf8G\\xab\\xa8=\\xac\\x16\\x1d\\xf9\\x93%\\x1b;)\\xb2FN\\x15\\xc4\\x\r\n17\\xa9}\\xb0\\x80\\xba\\xfb\\xc8\\x15-G\\x9e\\x05\\xe9\\xf6\\xc76\\xc1\\x9af\\xa3\\x91\\n\\xa4\\x80,\\x11=\\x87\\xec\\xf9\\xd6iJ\\xd0\\xbe\\xc3K\\x99J\\xe7&\\xc4\\x86\\x84:W\\xc4/\\x7f\\x02\\x03\\x01\\x00\\x01\\xa3\\x82\\x02\\xf70\\x82\\x02\\xf30\\x1f\\x06\\x03U\\x1d#\\x04\\x180\\x16\\x80\\x14\\x8d\\x8c^\\xc4T\\xad\\x8a\\xe1w\\xe9\\\r\nx9b\\xf9\\x9b\\x05\\xe1\\xb8\\x01\\x8da\\xe10\\x1d\\x06\\x03U\\x1d\\x0e\\x04\\x16\\x04\\x14z\\x87\\xb6T\\xcbt:a\\x03\\xef:\\x1f_\\xad\\xc0\\x1cT\\x15\\x9d\\xe30\\x0e\\x06\\x03U\\x1d\\x0f\\x01\\x01\\xff\\x04\\x04\\x03\\x02\\x05\\xa00\\x0c\\x06\\x03U\\x1d\\x13\\x01\\x01\\xff\\x04\\x020\\x000\\x1d\\x06\\x03U\\x1d%\\x04\\x160\\x14\\x06\\\r\nx08+\\x06\\x01\\x05\\x05\\x07\\x03\\x01\\x06\\x08+\\x06\\x01\\x05\\x05\\x07\\x03\\x020I\\x06\\x03U\\x1d \\x04B0@04\\x06\\x0b+\\x06\\x01\\x04\\x01\\xb21\\x01\\x02\\x02\\x070%0#\\x06\\x08+\\x06\\x01\\x05\\x05\\x07\\x02\\x01\\x16\\x17https://sectigo.com/CPS0\\x08\\x06\\x06g\\x81\\x0c\\x01\\x02\\x010\\x81\\x84\\x06\\x08+\\x06\\x01\r\n\\x05\\x05\\x07\\x01\\x01\\x04x0v0O\\x06\\x08+\\x06\\x01\\x05\\x05\\x070\\x02\\x86Chttp://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt0#\\x06\\x08+\\x06\\x01\\x05\\x05\\x070\\x01\\x86\\x17http://ocsp.sectigo.com0\\x1f\\x06\\x03U\\x1d\\x11\\x04\\x180\\x16\\x82\\n*.mql5.net\\x82\\x08mql5.net0\\x\r\n82\\x01\\x7f\\x06\\n+\\x06\\x01\\x04\\x01\\xd6y\\x02\\x04\\x02\\x04\\x82\\x01o\\x04\\x82\\x01k\\x01i\\x00v\\x00\\xbb\\xd9\\xdf\\xbc\\x1f\\x8aq\\xb5\\x93\\x94#\\x97\\xaa\\x92{G8W\\x95\\n\\xabR\\xe8\\x1a\\x90\\x96d6\\x8e\\x1e\\xd1\\x85\\x00\\x00\\x01icH\\xf8\\x9b\\x00\\x00\\x04\\x03\\x00G0E\\x02 =\\xab\\xac\\xefa \\xc3\\xf3J\\xbb] w8\r\n\\xc1+\\xa9\\x1b8\\xcc\\x94LP,T\\xe0\\x07\\xe8\\x87\\x93s\\xf5\\x02!\\x00\\xf4D\\x0e\\x86a\\xc9M\\x8b\\xc5\\xf8\\xec\\x821\\x9b\\xbf]^\\xacB1p\\xfc\\x8a\\n\\x07\\xefz\\xb6\\x82 \\xe0\\xd5\\x00v\\x00D\\x94e.\\xb0\\xee\\xce\\xaf\\xc4@\\x07\\xd8\\xa8\\xfe(\\xc0\\xda\\xe6\\x82\\xbe\\xd8\\xcb1\\xb5?\\xd33\\x96\\xb5\\xb6\\x81\\xa8\\x00\\x\r\n00\\x01icH\\xf8\\xdb\\x00\\x00\\x04\\x03\\x00G0E\\x02 ]\\x91\\x03.5\\xaaA\\xa82\\xf4Bg\\x08\\xf7\\xf1\\x948N\\x08,\\xf5\\x96\\x01\\x08\\xdcM]&7J\\xebv\\x02!\\x00\\xeb\\x90\\r\\xd5k\\xf9\\xa3L<\\xc67]\\xc5]\\x16\\xb2\\x10\\xed\\xd5\\x9b\\xec\\xdc$\\xe1\\xd5r+\\x99\\x19\\xdbb\\xe4\\x00w\\x00\\\\\\xdcC\\x92\\xfe\\xe6\\xabED\\xb1^\\x9\r\na\\xd4V\\xe6\\x107\\xfb\\xd5\\xfaG\\xdc\\xa1s\\x94\\xb2^\\xe6\\xf6\\xc7\\x0e\\xca\\x00\\x00\\x01icH\\xf8\\xe5\\x00\\x00\\x04\\x03\\x00H0F\\x02!\\x00\\x8f\\xf5W\\xd5 \\xea\\x02\\xc4v\\x1b\\xd0h\\x03\\xe7`\\xec\\xdfp\\xd7\\xb8\\x10\\xd9nb7\\xadDp\\xf6V\\xa0l\\x02!\\x00\\xa9\\x935\\x94\\xe3\\xdb' |<Padding  |>>)\r\n            |  sig       = None\r\n           mac       = b''\r\n           pad       = b''\r\n           padlen    = None\r\n```\r\n\r\nWe can see that TLSServerKeyExchange.params contains a None, which raises the exception.\r\n\r\n#### Expected result\r\n\r\nA bytes string of TLS record is expected.\r\n\r\nI'm willing to provide a PR but it may take some time. Any help is welcome, thanks guys.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2758", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2758/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2758/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2758/events", "html_url": "https://github.com/secdev/scapy/issues/2758", "id": 677911759, "node_id": "MDU6SXNzdWU2Nzc5MTE3NTk=", "number": 2758, "title": "Errror in decoding MCS information in Radiotap header", "user": {"login": "Nischals", "id": 2862842, "node_id": "MDQ6VXNlcjI4NjI4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2862842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nischals", "html_url": "https://github.com/Nischals", "followers_url": "https://api.github.com/users/Nischals/followers", "following_url": "https://api.github.com/users/Nischals/following{/other_user}", "gists_url": "https://api.github.com/users/Nischals/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nischals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nischals/subscriptions", "organizations_url": "https://api.github.com/users/Nischals/orgs", "repos_url": "https://api.github.com/users/Nischals/repos", "events_url": "https://api.github.com/users/Nischals/events{/privacy}", "received_events_url": "https://api.github.com/users/Nischals/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-12T19:05:29Z", "updated_at": "2020-08-17T16:33:05Z", "closed_at": "2020-08-17T16:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThings to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n-->\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\nMCS fileds from radiotap header like MCS index, guard interval, BW etc \r\n![packet_screenshot](https://user-images.githubusercontent.com/2862842/90057508-1b892c80-dcfe-11ea-934b-536b11543d15.PNG)\r\nare not decoded correctly while reading the radiotap header from a wireshark capture\r\n#### Environment\r\n\r\n-   Scapy version: Both in 2.4.3 release version and current development version\r\n-   Python version: 3.8.5\r\n-   Operating System: Windows 10\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\nLoad a 802.11 pcap/wcap wireshark capture and observe the radiotap header contents\r\n#### Actual result\r\n{'version': 0,\r\n 'pad': 0,\r\n 'len': 44,\r\n 'present': <Flag 1837131 (TSFT+Flags+Channel+dBm_AntNoise+Antenna+ChannelPlus+MCS+A_MPDU)>, \r\n'Ext': None,\r\n 'mac_timestamp': 60187170,\r\n 'Flags': <Flag 16 (FCS)>, \r\n'Rate': None,\r\n 'ChannelFrequency': 2412, \r\n'ChannelFlags': <Flag 1152 (2GHz+Dynamic_CCK_OFDM)>,\r\n 'dBm_AntSignal': None,\r\n 'dBm_AntNoise': -80, \r\n'Lock_Quality': None, \r\n'Antenna': 0, \r\n'RXFlags': None, \r\n'TXFlags': None, \r\n'ChannelPlusFlags': <Flag 66688 (2GHz+Dynamic_CCK_OFDM+20MHz)>, \r\n'ChannelPlusFrequency': 2412,\r\n 'ChannelPlusNumber': 1, \r\n'knownMCS': <Flag 34 (MCS_index+STBC_streams)>,\r\n 'Ness_LSB': 0, \r\n'STBC_streams': 0, \r\n'FEC_type': 1, \r\n'HT_format': 1, \r\n**'guard_interval': 1,\r\n 'MCS_bandwidth': 3, \r\n'MCS_index': 8,**\r\n 'A_MPDU_ref': 1428,\r\n 'A_MPDU_flags': <Flag 4 (KnownLastSubframe)>,\r\n 'KnownVHT': None, \r\n'PresentVHT': None,\r\n 'VHT_bandwidth': None, \r\n'mcs_nss': None,\r\n 'GroupID': None, \r\n'PartialAID': None,\r\n 'timestamp': None,\r\n 'ts_accuracy': None,\r\n 'ts_position': None,\r\n 'ts_flags': None,\r\n 'he_data1': None, \r\n'he_data2': None, \r\n'he_data3': None, \r\n'he_data4': None,\r\n 'he_data5': None,\r\n 'he_data6': None,\r\n 'hemu_flags1': None,\r\n 'hemu_flags2': None, \r\n'RU_channel1': None,\r\n 'RU_channel2': None,\r\n 'hemuou_per_user_1': None, \r\n'hemuou_per_user_2': None, \r\n'hemuou_per_user_position': None,\r\n 'hemuou_per_user_known': None,\r\n 'lsig_data1': None,\r\n 'lsig_length': None,\r\n 'lsig_rate': None, 'notdecoded': b''}\r\n<#### Expected result\r\nMCS information must be decoded correctly\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2753", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2753/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2753/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2753/events", "html_url": "https://github.com/secdev/scapy/issues/2753", "id": 673991096, "node_id": "MDU6SXNzdWU2NzM5OTEwOTY=", "number": 2753, "title": "function 'answers' does not work", "user": {"login": "Qnner", "id": 32847418, "node_id": "MDQ6VXNlcjMyODQ3NDE4", "avatar_url": "https://avatars3.githubusercontent.com/u/32847418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qnner", "html_url": "https://github.com/Qnner", "followers_url": "https://api.github.com/users/Qnner/followers", "following_url": "https://api.github.com/users/Qnner/following{/other_user}", "gists_url": "https://api.github.com/users/Qnner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qnner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qnner/subscriptions", "organizations_url": "https://api.github.com/users/Qnner/orgs", "repos_url": "https://api.github.com/users/Qnner/repos", "events_url": "https://api.github.com/users/Qnner/events{/privacy}", "received_events_url": "https://api.github.com/users/Qnner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-06T03:44:08Z", "updated_at": "2020-08-21T03:54:39Z", "closed_at": "2020-08-21T03:54:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThings to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n-->\r\n\r\n#### Brief description\r\nI'm trying match a http request to a http response, I'v see an issue linked:https://github.com/secdev/scapy/issues/2208\r\nMaybe I know what he mean in that issue. he mean that sometimes function 'answers' does not work, a pcap not work when use or not TCPsession, two work when not use TCPsession but no TCPsession worked.\r\n soon I will give my code & pcaps\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `scapy version 2.3.4`\r\n-   Python version: `2.7`\r\n-   Operating System: `Windows and Centos 7.6`\r\n\r\n<!-- if needed - further information to get a picture of y\r\n[pcaps.zip](https://github.com/secdev/scapy/files/5032400/pcaps.zip)\r\nour setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n```python\r\nrequests = []\r\n\r\ndef test(packet):\r\n   if packet.haslayer(HTTPRequest):\r\n        requests.append(packet)\r\n   elif packet.haslayer(HTTPResponse):\r\n       for p in requests:\r\n           # print p\r\n           if packet.answers(p) != 0:\r\n               print \"hit\"\r\n\r\n\r\nif __name__ == '__main__':\r\n    load_layer(\"http\")\r\n    conf.contribs[\"http\"][\"auto_compression\"] = True\r\n    # sniff(offline=r'both_not_work.pcap', prn=test)\r\n    sniff(offline=r'D:\\TCPSession_not_work.pcap', prn=test, session=TCPSession)\r\n    # sniff(offline=r'D:\\use_tcpSession_not_work.pcapng', prn=test)\r\n```\r\n\r\n#### Actual result\r\nprint nothing, not hit output\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\nprint 'hit'\r\n\r\n\r\n#### Related resources\r\n\r\n[pcaps.zip](https://github.com/secdev/scapy/files/5032410/pcaps.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2747", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2747/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2747/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2747/events", "html_url": "https://github.com/secdev/scapy/issues/2747", "id": 672882599, "node_id": "MDU6SXNzdWU2NzI4ODI1OTk=", "number": 2747, "title": "enhancement DHCP Layer - missing TFTP options in DHCPOptions", "user": {"login": "azdolinski", "id": 15941777, "node_id": "MDQ6VXNlcjE1OTQxNzc3", "avatar_url": "https://avatars3.githubusercontent.com/u/15941777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdolinski", "html_url": "https://github.com/azdolinski", "followers_url": "https://api.github.com/users/azdolinski/followers", "following_url": "https://api.github.com/users/azdolinski/following{/other_user}", "gists_url": "https://api.github.com/users/azdolinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdolinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdolinski/subscriptions", "organizations_url": "https://api.github.com/users/azdolinski/orgs", "repos_url": "https://api.github.com/users/azdolinski/repos", "events_url": "https://api.github.com/users/azdolinski/events{/privacy}", "received_events_url": "https://api.github.com/users/azdolinski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691054, "node_id": "MDU6TGFiZWwyNjc2OTEwNTQ=", "url": "https://api.github.com/repos/secdev/scapy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T15:29:34Z", "updated_at": "2020-09-08T13:38:22Z", "closed_at": "2020-09-08T13:38:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nin scapy/scapy/layers/dhcp.py - options related to TFTP in DHCPOptions are missing\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.4r2 - file: scapy/scapy/layers/dhcp.py\r\n \\+ 66: \"tftp_server_name\"\r\n \\+ 150: IPField(\"tftp_server_address\", \"0.0.0.0\"),\r\n\r\n[Screenshot From Wireshark](https://ibb.co/rvvD1L7)\r\n\r\n#### Actual result\r\n\r\nNot able to add these parameters when building pkt\r\n\r\n#### Expected result\r\n\r\nadd those two lines to - scapy/scapy/layers/dhcp.py -> DHCPOptions  in next release\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2744", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2744/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2744/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2744/events", "html_url": "https://github.com/secdev/scapy/issues/2744", "id": 671587444, "node_id": "MDU6SXNzdWU2NzE1ODc0NDQ=", "number": 2744, "title": "when sniff a response used gzip, decompress fail", "user": {"login": "Qnner", "id": 32847418, "node_id": "MDQ6VXNlcjMyODQ3NDE4", "avatar_url": "https://avatars3.githubusercontent.com/u/32847418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qnner", "html_url": "https://github.com/Qnner", "followers_url": "https://api.github.com/users/Qnner/followers", "following_url": "https://api.github.com/users/Qnner/following{/other_user}", "gists_url": "https://api.github.com/users/Qnner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qnner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qnner/subscriptions", "organizations_url": "https://api.github.com/users/Qnner/orgs", "repos_url": "https://api.github.com/users/Qnner/repos", "events_url": "https://api.github.com/users/Qnner/events{/privacy}", "received_events_url": "https://api.github.com/users/Qnner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-02T09:56:51Z", "updated_at": "2020-08-07T18:29:52Z", "closed_at": "2020-08-07T18:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThings to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n-->\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `scapy version 2.3.4`\r\n-   Python version: `2.7`\r\n-   Operating System: `Windows and Centos 7.6`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\nwhen I sniff a http response which's header, Content_Encoding is gzip, I can not get the json file correctly\uff0c\r\nI noticed that\r\n \"Perform decompression / defragmentation\r\non all TCP streams simultaneously, but\r\nonly acts passively.\" in https://scapy.readthedocs.io/en/latest/layers/http.html\r\n\r\nand \"This will decode HTTP packets using Content_Length or chunks, and will also decompress the packets when needed. Note: on failure, decompression will be ignored.\" in https://scapy.readthedocs.io/en/latest/api/scapy.layers.http.html\r\n\r\nbut I still cannot decompress my response.\r\n\r\nt tried add a new line in scapy.layer.http.py(near line 288 in function 'post_dissect'):\r\nlike this:\r\n```python\r\n        # Decompress\r\n        try:\r\n            if \"deflate\" in encodings:\r\n                import zlib\r\n                s = zlib.decompress(s)\r\n            elif \"gzip\" in encodings:\r\n                print \"======> hit gzip\"\r\n                s = gzip_decompress(s)\r\n            elif \"compress\" in encodings:\r\n                import lzw\r\n                s = lzw.decompress(s)\r\n        except Exception as e:\r\n            print '===> hit Exception'\r\n            print e\r\n            # Cannot decompress - probably incomplete data\r\n            pass\r\n        return s\r\n```\r\n\r\nand I am sure now that my code run this Decompress yet, but not success.\r\n\r\nhere is my original code\uff1a\r\n\r\n```python\r\ndef packet_parse(pkt):\r\n    if pkt.haslayer(HTTPRequest):\r\n        return\r\n    elif pkt.haslayer(HTTPResponse):\r\n        print pkt[HTTPResponse]\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    load_layer(\"http\")\r\n    conf.contribs[\"http\"][\"auto_compression\"] = True\r\n    sniff(offline=r'C:\\Users\\test1\\Downloads\\http-chunked-gzip.pcap', prn=packet_parse, session=TCPSession)\r\n```\r\n\r\n#### Actual result\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n```\r\nHTTP/1.1 200 OK\r\nServer: cloudflare-nginx\r\nDate: Wed, 06 Jan 2016 20:42:10 GMT\r\nContent-Type: text/html\r\nTransfer-Encoding: chunked\r\nConnection: close\r\nSet-Cookie: __cfduid=d8d37b52eaa3137bdfd7fd67a4ffc8a7a1452112929; expires=Thu, 05-Jan-17 20:42:09 GMT; path=/; domain=.wireshark.org; HttpOnly\r\nX-Frame-Options: SAMEORIGIN\r\nStrict-Transport-Security: max-age=31536000;\r\nX-Slogan: It's a great product with a great story to tell. I'm pumped!\r\nX-Mod-Pagespeed: 1.9.32.11-7550\r\nVary: Accept-Encoding\r\nCache-control: max-age=0, no-cache, no-store\r\nX-Slogan: Go deep.\r\nCF-RAY: 260a3f709d7b0761-AMS\r\nContent-Encoding: gzip\r\n\r\n\u001f      \u0003   \ufffd\ufffd     106c\r\n\ufffdx\ufffd\ufffd}\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdM\ufffdI6\ufffd\u000e\u001e\u0012i\ufffdaw\ufffd\ufffd\u0011bU\u0002\ufffd!/ \ufffd(\ufffd\u001c\ufffd\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffdsHl*z;\ufffd\ufffd\u000f\ufffd\ufffd\ufffdslB\ufffd3\ufffd\ufffd\u077f\ufffd\ufffd^\ufffd\u000f\ufffd\ufffd_\ufffd4\ufffd{7a\u001a\ufffd\ufffd\ufffdw\ufffd2m\ufffd\u001b\u001c^\ufffdi\ufffdzW\ufffd\u0014\u0398\ufffd\u077d='\u0014\u001c\ufffd\ufffd\ufffd\u000e\ufffdO_tNN\ufffd=??k\ufffd\u000e\u039f\ufffd\ufffd4\u001d\ufffde\u0017\ufffda\ufffd\ufffdi\ufffdE\ufffd\t\ufffd\u0010\u0018Z\ufffd\u000f\ufffd\ufffd\ufffdW\ufffd\ufffd*\ufffdh\ufffdP\ufffdM\ufffdL\u000e\ufffd\ufffd\ufffdV\ufffd\ufffd]\u000f\u000f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd(\ufffd\ufffd\ufffdJ\ufffdRM\ufffdS.#5uDw\ufffd(:\ufffd\ufffd\ufffd\ufffd\ufffdX\ufffd\ufffd\ufffd\ufffd\ufffd\u05b20)\ufffdN\u050dT\ufffd\ufffd\ufffdh\ufffd\ufffdR\u0666c\ufffdM\ufffdX\ufffdtTw\ufffd\ufffd\ufffduw\ufffdJf,\u0184G\ufffd\ufffd\u0012\ufffd{\u000ev\ufffdo\ufffdD3\ufffd\ufffd6\u000f\ufffds\u07cd\ufffdP#\ufffdx.\ufffd\ufffdw\u035e3\ufffdF^\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd]\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffdPb\ufffd\ufffdNy\"\ufffdn\ufffd]\ufffd\ufffdHy\u0019\ufffd\ufffd\ufffd\ufffd9\ufffd\u001a\ufffd%:\ufffd\ufffd\u0010G\ufffd\u001d\ufffd]\u045f8\ufffd\ufffd\ufffdG\ufffd\u000b\ufffd\u001as$Y\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd|\ufffd\ufffd7\ufffd\ufffdnY\ufffd\u0017Q\ufffdu\u0004\u0019\ufffdI\ufffd?\u0002\ufffde\\\ufffd\ufffd6\ufffdZ\ufffd\ufffd\ufffd\ufffd\ufffdY\ufffd\ufffdj8\ufffd\ufffd\u02f8\ufffd\ufffd\u0004\ufffd,\ufffd3\u0014hWF\ufffd\ufffd\ufffd\ufffd\u02f0\ufffd>\ufffd\ufffd\ufffd\u000e\ufffdM\ufffd\u0019\ufffd\ufffd\ufffd\ufffd\ufffd/\ufffd\ufffd&\ufffdjjP\ufffdh5\ufffdy\ufffdwo\ufffdG3/c\u001a\ufffd\ufffdV\u0011z\\\u001a\ufffd\ufffd\u0004GJ\ufffd\ufffd3\ufffd;\ufffd]\ufffd\ufffdN\uc8938#&\f\u0016\ufffd\ufffdH\ufffd\ufffd5\ufffd\ufffd{\u0014\u0006\ufffd\ufffdv\u04fdw)y\ufffd\ufffd\u0015:I\u0777\ufffdX\ufffdS\ufffd\ufffd{\ufffd{G\ufffdw \ufffd\ufffd*\ufffdw\ufffdS\ufffd\f\u0012k3\u0017\u007f\ufffd\ufffd\ufffd{\ufffd\ufffdEi\ufffd\ufffd<\u02d7n\ufffd\ufffd\ufffd\ufffd4E\ufffd L\ufffd6h\ufffd?\f_\ufffd\ufffd\u001b\ufffd\ufffdc\u02ed\ufffd\ufffd\u001d\u00191az\f\ufffd\ufffd7\ufffdRp\ufffd\ufffdy\ufffd~\u0678s,\ufffd\u001c\ufffdF\u044d\ufffdq3\ufffd#\ufffda\u0002\ufffd\ufffdQ\ufffd\ufffd\ufffd#%\ufffd\ufffdb\ufffdb\ufffd,\ufffd\ufffd\ufffd\u007f\ufffd\ufffd\u0773\ufffdo\ufffd\u00063\ufffdY\u001e\ufffdJ\u001ecD5\ufffd\ufffd$\u0013s\ufffd\ufffd_;\ufffd\ufffdI\ufffd\ufffd\ufffd0\ufffd\ufffd6\ufffd-\ufffdP\ufffdF\ufffdZ\u0005\u0011Oi\ufffd\ufffd#6\ufffdV\ufffd\ufffd\ufffd\u0001v\ufffda\ufffdQ\ufffd\ufffd3\ufffd\ufffd}\ufffd\ufffd\u0654G6\ufffdF8\ufffd!\ufffd\u014b\u0003\\r\u02d9pM\ufffd\u0004v\ufffd^\ufffd\u0001\ufffd\ufffd\u061dp\ufffdfJ\u06c7 s4e\u0007\ufffde\u0002\ufffdT\u0005\\\ufffd;\ufffd\ufffdeY\ufffd,c\ufffd\ufffd{\ufffd\ufffd\u000b4\t\ufffd}\ufffd\ufffdM0E\ufffd\ufffdj\u001f\ufffd\ufffd1\ufffd\ufffdr\u001b&\ufffd\ufffd\ufffdK/4\ufffd\u0001)F\ufffduM\ufffd\u0011e\ufffdX@47\ufffd\u0007\ufffd|3b)\u0017\ufffd\ufffd@\ufffd:\u012f\u0006L\ufffd\ufffdn\ufffd:\ufffdZ\ufffd~\ufffd\ufffd|\ufffdj9O[-\ufffdY\ufffd\ufffd(i\ufffd2\ufffdCj\ufffd\ufffd\ufffd\ufffdO\u0347\r\nJ\ufffd\ufffdK\ufffdc\ufffd\ufffd\u007f\ufffd\ufffd/\ufffd\ufffd\ufffd\u001c\ufffd:\\\u001a\ufffdJ\u0006\ufffdIr\u0004O\ufffd\ufffd\ufffd\ufffd\ufffd\u06a8\ufffdu&\ufffdF\ufffdXy\ufffd\ufffd\u001b\ufffdB9\u04ef\ufffd\ufffdkgF\ufffd\u04195\ufffd\t\ufffdm\u043e\ufffd3\ufffd\u0013\ufffdIo\ufffdX\ufffd\ufffd\u000b\ufffd\ufffd\ufffd*Q\u0017\ufffd+\ufffd\ufffd\\+\u0644\u01cc\ufffd\ufffd\ufffd\ufffdq.V\ufffdS3\ufffd<j\u001e'\ufffd\u072f\ufffd\ufffd\ufffdVY\ufffd\ufffdkvz\"qj\u001a\ufffdk\ufffd\ufffdJ@\ufffd?\ufffd\ufffd\ufffd\u000e\ufffd\ufffdhX\ufffdB\u000b\ufffd\ufffd\ufffdqi1\ufffd\u0491\u0154\ufffd6h\ufffd\ufffd\ufffd\ufffd\ufffdCh\ufffd\ufffd\ufffdQ\ufffd\ufffd\ufffdY\ufffd\ufffd\ufffd\ufffdl)\ufffdB\ufffd\ufffdx)\u02bc\u0010\ufffd\ufffd\u000bTn\ufffd\u0006\ufffd^\ufffd\u001e\ufffdu\ufffd\ufffdj7\u0002\ufffd2\ufffd\ufffd;\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\u001c\ufffd~ T\ufffd-\ufffd\ufffd)\u001d\ufffd\ufffd\u0789P\ufffd\r\n\ufffd\ufffdzl\ufffd\ufffds\ufffd~\ufffd\ufffd\ufffdh\ufffd^\ufffd\ufffdf\ufffdv\ufffdTh|2yY\ufffd\ufffd\u000fb\r\n\ufffd\ufffdy\ufffd\u001f\ufffd\u000e\ufffd\ufffd^\u0007\ufffdHu\ufffd\u001fs;\ufffd\ufffd\ufffd\ufffd\ufffdl\ufffd\ufffd=b]\ufffd\u0011\u001b\ufffd\ufffd\ufffdv\u0007\ufffd \ufffd\ufffd\ufffd\ufffd\ufffdI\ufffdr\ufffd\ufffdYnU\ufffd,F\ufffd\ufffd%\ufffdh,\ufffd\ufffd\\D\ufffd\ufffd8\ufffd\ufffd\ufffdF\ufffd|\ufffd:\ufffd\ufffdH1\u001a\ufffd\ufffd\\\ufffd S\ufffd(\ufffdkW\ufffd\r\n\ufffd\ufffd%\u001a[\u0001\ufffd\ufffdX=K6YnN\ufffdO\ufffd\ufffdT\ufffd\ufffd&\u0002\u04d6\ufffde\ufffd\ufffdiN\ufffd#\u056f\ufffdi0TD\ufffd*2\ufffd$,R\ufffd\u0005\ufffdS\ufffdR\u0011\u001buTg,\ufffd\ufffd\ufffd\u000f\ufffdy+\ufffd5\ufffdr\ufffd\ufffdt\ufffd\ufffd\ufffdj\ufffd\u0015z\ufffd1\u001fB\ufffd\ufffdns\ufffd\ufffd\ufffd\ufffd\u0014].\ufffdV\ufffd}\u00167\ufffd\ufffd`\u0005Bc\ufffd\ufffd\u001e\ufffdT\ufffd\ufffdZk9\ufffdB5A\ufffdF/O\ufffdh\ufffd;\ufffd\u0011\ufffda\ufffd\u059a)\ufffdI\ufffdC8h}qT\ufffdP\ufffdA\ufffd\ufffdn\u0007\ufffd/\ufffdg\ufffd\ufffdY\ufffd\ufffd@7P\u05aat;\u00f3\ufffd\u0017\ufffduGV\ufffdYa \ufffd\u0005\ufffdC\ufffd\ufffd\ufffd\ufffd}\ufffd\u0002J`\u001f\ufffdmN \ufffd\ufffd\ufffd\ufffd\ufffdJ\ufffdi\ufffd;P\ufffd8DiQ7\ufffdcY\ufffdu7,\u000f\u0014]\u02c4(r\u069aP\ufffd\u01a5vt\ufffd\u0011\ufffd\\\u6665\ufffdT\ufffdBn\ufffd\ufffdX\ufffd\ufffd\ufffdn\ufffd\u0669nm\ufffd\ufffd\ufffd\ufffd\u0014*le\\&yZ\ufffdK\ufffd\ufffd\u0006\ufffd\u001b\ufffd`\ufffd2\ufffd{\ufffd\ufffd\ufffd\ufffd\ufffd^kD\ufffd\ufffd\ufffdkJV\ufffdJ\ufffd\u0015C\ufffd\ufffdx\ufffd\ufffd\u001a/\ufffd\u000f\ufffdV\u9f16y\ufffdn5\ufffd@\ufffd\ufffd\ufffd\ufffd\ufffdSib\ufffd\ufffd|\ufffdaV-\u079aH\ufffd3P\ufffd\ufffd(O\ufffd\ufffd\"\\\ufffd\u02a8\ufffd^\ufffd\ufffdv\ufffd>\u001a[&a\u001b\ufffdmU\ufffd\ufffd\u000b\ufffd\u007fD\ufffdrZu\ufffd\ufffdK\u0308\ufffd\ufffd\ufffd\ufffdl\ufffd\ufffd\ufffd\u000fr\uc93dH\ufffdK\ufffd\u0003%:B\ufffd\ufffd\u0007\u05e4r`\ufffd\u0010R\ufffd\ufffd&\ufffd\ufffd\u001a\ufffd\ufffd\u0006\u0007\u0014\ufffd\u0018\ufffd\ufffd\ufffd\u001e\ufffd\ufffd\ufffd\ufffd\u0005\ufffd\ufffd3.\ufffd\u0007\ufffd20>\ufffd\ufffd\u00052-\ufffd\u0006\u007f\ufffd\u0141R\ufffdO\ufffd\ufffdK\u0012h\ufffdo\ufffd\ufffdj*0\ufffd\u0011\ufffd\ufffd[5\ufffd4\ufffd\ufffd\ufffd{\ufffd\ufffd|\ufffd\ufffd\ufffd\ufffd\u001f\ufffd.m\ufffd*\ufffdb\ufffd\ufffd\u0004>~\ufffd\ufffd\u0004\ufffdJn\ufffd\ufffdw\ufffd&\ufffd\u02b6`\ufffda\"\ufffdP\ufffd|\ufffd\ufffd\ufffd\u0179\ufffd\u0003z\ufffdSe.+\ufffd\u000f\ufffd\ufffd\ufffdU\ufffd\ufffdA\u0159M\ufffdm\ufffd\ufffdw\ufffd\ufffdP\ufffd\ufffd\u03baiE\u007f\ufffd\ufffdn\ufffd\ufffd\ufffdQW\ufffd5K\u0007\u0005<\ufffdQC\u00b8.\ufffd\ufffdN\ufffdc\ufffd\ufffd\ufffda\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdv$V\ufffdU\ufffdt\ufffde%\ufffd!t\ufffd\ufffdfa\ufffd\ufffd(\u001fe\ufffd\u000bO\ufffd\ufffd\ufffdf\ufffd\ufffdC\ufffdz\ufffd\ufffd\ufffdp\u0016W\ufffd\ufffd\ufffd\f\ufffd\ufffd\ufffd\ufffdK\u001c\ufffd\u000f[q\ufffd\u04d6\u0005\u0001}\ufffd\u0001\ufffd\u0002a\ufffd \ufffd\ufffd66\ufffd\ufffd\ufffd\ufffd\u0005\ufffd>\ufffdc\ufffd\ufffd\u049f\ufffd:\ufffd\ufffd\ufffdOpY\ufffd<i\ufffdx\ufffd9\ufffd\ufffd\u007f\ufffd\ufffd\ufffdv\ufffd\ufffdX?\ufffd\ufffd,X\u001e\ufffdl\ufffd\ufffdV\ufffd;\ufffd\u04e7\ufffd\ufffd_\"\ufffd\ufffdF\ufffd1\ufffd\ufffdN\ufffdM \ufffd\ufffd<\ufffda\ufffdtd\ufffd\ufffda\ufffd\u0004\ufffd6\u0001>\ufffdZ\f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd6Q\ufffdl9\ufffdy\u04a6\u007f\ufffdG^+\ufffd\u05aa\ufffd\ufffd{,\u000b\ufffd\ufffdzh\ufffd67c\u0012\ufffd\\\u000e\\Bi\ufffd\u0006-\r\n\ufffd{\ufffd,\uda5d\udebeO\u0015*E|4B\ufffd)\ufffd\ufffd\ufffd\ufffd\u000b\r\n \ufffd2k\u000e\ufffd\ufffdY\ufffd\ufffd\u0019\ufffd\r\n`M_<GZ\ufffd\ufffdp\u0012\ufffd\u0003\u0017\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdm\u0007noo\ufffdo\ufffd.O\u001d\ufffd\u000f\ufffd\u001c8\u00119Z\ufffd\ufffd*\ufffd\u000f\ufffd\u0013\u0007\r\nE\ufffd5\ufffd1\ufffd)\ufffd\"\ufffd\ufffd\ufffd\u0281\ufffdgg\u0017\ufffdN\ufffd:\ufffd\u001ba\ufffd2Z\u0769\ufffdY\ufffd\ufffd\u0014\ufffd\fC=\ufffd\u029c=\ufffd(/\ufffd0-\ufffd\ufffd\u000b\u0019a]\ufffd\u001a\f\u001d\ufffd\u0018\ufffd\ufffd\ufffd\ufffdu\ufffd{*-\ufffd2\u000e\f\ufffd\ufffdn'\ufffd\u000e\f\u0006\ufffd\ufffd\ufffdr\ufffd\ufffd\ufffd\ufffdm)\ufffd\ufffdm\u07ff\ufffd\ufffdwV,L\u0005\u0013\ufffd\ufffd0qi\u001b\ufffd\ufffd\ufffd1\ufffd7\ufffdj\u0005\ufffdo#\ufffdL?\ufffd<\u001c\ufffd(6\ufffdjl\ufffd\ufffd7\ufffd\ufffdr[\ufffd\ufffd\ufffd)\u0001\u007f\ufffd\ufffdt\ufffdV\u0019\r\n\u0013\ufffd2\u0003'\ufffd\ufffd\ufffdp\ufffdWi|B\u0013,\ufffd\ufffd\ufffd\ufffd\ufffdcq\ufffdf\u000b\ufffdi\ufffd\ufffd\ufffdI\\\ufffd\u000b\ufffd\ufffdQ(\ufffdF\ufffdo\ufffd\u000e\ufffd\ufffd\ufffd\u001e\ufffd(L\u0585L\ufffd6\u0002\f\ufffdm\ufffdm\ufffd\ufffd\u0015\u001f#|\u02c4X\ufffdO\ufffd\ufffd\u0010'aB\ufffdU\u0012=\ufffdv\u000b\ufffd\ufffd\r\nf\u010c\ufffdg\u1600\ufffdk\\\ufffd\u00017\ufffd\ud8e2\udcc6\ufffd\u0014]2ZC\ufffd?   \ufffd\ufffd\r\ne1e\r\n\u0001\ufffd\ufffd\u0005\ufffdGs\ufffd\ufffd^9+T\ufffd\ufffdh\ufffd\u001dt\ufffd\ufffd\u0272I\ufffd[\ufffd\r\naz\ufffd+v\ufffd\u0560L\u0425%\ufffdm\ufffd=\ufffd\ufffdm\ufffd\ufffd\ufffd\ufffd\ufffd=P\u024f\ufffd\ufffd\ufffd\u000b\u0007\ufffdx\ufffd\u0015\ufffd\u001b\ufffd\u001cs5\ufffd\ufffd\ufffd\ufffd\ufffd\u0017c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdb\u7fb7\ufffdx\u0002\u0007;005C \u001d\u001fpM\ufffdFi\u0015p\u0588;\ufffd5v\ufffd.\u0001\ufffd\ufffdE(\ufffd\ufffd\ufffdZ:\u001e\ufffd\uc6a6\ufffd^\ufffd\r\n\ufffd\ufffd\ufffd\ufffdI\u00136\ufffd\u03ab\ufffdJ\u001fKU\ufffd\ufffd\ufffd\ufffdv\ufffd\ufffd}\ufffd\ufffddHb\ufffdx;\ufffdc@Wp\ufffd' \ufffdI<a\ufffdY\ufffd\ufffd\t\ufffd\ufffd\ufffd\ufffd\u001fGW\ufffd\ufffdvT^\ufffdF|\ufffdy\ufffd\t\u001b\u0012\ufffd^\ufffd\ufffd+\ufffd\ufffd]\u0643]\ufffd4\u0006\u000e$\ufffdD\ufffd\ufffd\ufffd\ufffd\r\n;\ufffd\ufffd\r\nq\ufffd\"h\ufffd\ufffd\ufffdl\ufffd\u0007L\ufffd}\ufffd4Q\u0014\u0005\ufffd9@\ufffdKx\u0003\ufffd\ufffd/\ufffdV\ufffdt\u0007S\ufffdu\ufffd\r\nd'\u0015XE\ufffd\ufffd\ufffd\ufffdXx\ufffd\u03a9 n\ufffd\ufffdM\ufffdV&!\ufffdC$\ufffd\ufffd\ufffd]:P\ufffdx\ufffd-f\u0636&EJY=~\ufffd(\ufffdw\r\n;\u0012\ufffd\"\ufffdu#\u001e\u0011Lvo8\ufffd\ufffd\ufffdy\ufffd0\ufffd\ufffd\ufffd\u0002\ufffd\ufffd\ufffd\ufffd\\%\u0019\ufffdr\ufffdiy>\ufffd87\u010f>\ufffd\u001a\ufffd\ufffd\ufffdn\u0650;\ufffdDJ\u0005Ut\ufffd\u001b\ufffd`\ufffd\ufffdO\ufffd\ufffdm;]G3\\wm\ufffd\ufffd\u000f\u001fJ\ufffdn\ufffd\u001e\ufffd\ufffdq\r\n\ufffdg\u0648\ufffd~F\ufffd\ufffdb\u001dN\ufffd\ufffd+j\ufffd\u0017\ufffd\ufffd\ufffd&9\ufffdS\ufffd\u04ba\ufffd\ufffd\ufffd\u0196\ufffdX l\ufffd~\u000f\ufffd=\ufffd\u0010\u0018\ufffd{_\ufffd\ufffdg\ufffd-\ufffd\u0007\ufffdn\ufffd\ufffd\ufffd\ufffdc:\ufffd\ufffd\ufffd\ufffdjZ\r\n\ufffd\ufffd\\T\ufffd\u0012J<\ufffd5\ufffdw\u000e2\ufffdR\u000e\u0007%okP\ufffdum\ufffd\ufffdw0\ufffd\ufffd\ufffdn\ufffd$LuM]<a\u0013\u0135\ufffd|p\u007f\ufffdwJ\ufffd\u000f\ufffd\u001a=\u001a\u0015\ufffdVq\u001e\u001b=[c\u0014\ufffd%\ufffd\u0517\ufffd2\ufffd&\ufffd7\ufffd\ufffd1Py\ufffd\u0003V\ufffd\ufffdF.\ufffd\ufffd\u001e\u0101\u000e\ufffd{\u0013,\ufffd\u0015\ufffd\ufffd\ufffd\\~\ufffd~\ufffd~Z\u02bb\ufffd9\ufffd\ufffd\ufffd\u9285\u00147\ufffd\u073b\ufffd\r\n\ufffd_\ufffd7\ufffd\ufffd*\u000e\ufffd\ufffdr\ufffd\ufffdw\u000f\u000eV`\ufffd\ufffd)\ufffd\ufffd4LO\ufffd\ufffd\u000f\ufffd\u001f\ufffd\ufffd\ufffd\ufffd\u0013\u000fJ\ufffdv\ufffd\ufffd\u001de\ufffdA\ufffdaCs\ufffd\ufffd\ufffd@\ufffd\ufffd\ufffd\u00147\ufffdN\ufffd\ufffd6\ufffd%\ufffd9\ufffdU\u001f\u000bQ\"\ufffdO\ufffd\ufffdSm\u001a\ufffd)\ufffdq_8\u07eaq\ufffd5=\ufffdus\ufffd\u001a\ufffd%\ufffd\u001c85\ufffd\ufffd\ufffdS\ufffd\ufffd\u03ea\f*\ufffd\ufffd\u0014B\ufffd4\ufffd\u0012\ufffdlm\ufffdF\ufffd\ufffd\ufffdQ\ufffd\ufffd\u0013n\u0405l1V\ufffdy\ufffdQ\ufffd\ufffd\u078d\u0109\ufffd,m\ufffd4b\tU\ufffd\ufffd\ufffdj\ufffd-V\ufffd\ufffd+\ufffd\ufffd\ufffd(n+\u0016\u007f\ufffd\ufffd\ufffd\ufffd\ufffd0L\ufffd\u0013\ufffd\u8401E\ufffdJ*\ufffd\ufffdX\ufffd6J\ufffd\ufffdH:\ufffdwqF\ufffdo\ufffd-\ufffd=-\ufffd\ufffd\ufffd\ufffdb\u000f\u03851\u0006\ufffd\u0018\u0019\u000b\ufffdt\ufffd1Mc5\u001a\ufffdk\ufffd\ufffd5\u0004\ufffd\ufffdxD\ufffd\ufffdnU=EPI+\u007fj\u0013E=(8\ufffd%\ufffdu\u063c\ufffd\ufffdI\ufffd\ufffdF\ufffd\ufffd\ufffd\uc8f1q\ufffdp\ufffd$\ufffd'\ufffdd\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\ufffdB\u06695\ufffdJ\ufffd \u007f\ufffd\u000b\ufffd\u0017\ufffd\ufffd\ufffdz\u0010_\ufffdn\ufffd\ufffdY\ufffd\ufffd\ufffd\ufffdfk\ufffdV\u05a8u\ufffd\ufffd$\ufffdHSZE\ufffd\ufffd7\ufffd;\ufffd\ufffd>@\ufffdK\ufffds\u03a9\ufffd<t\u0015f\ufffd\ufffdY\u0001\ufffd\ufffd-d\ufffd\ufffd<\ufffd\ufffd\ufffd\ufffd\ufffd\\\ufffd\ufffdA\ufffd\u007fg\ufffd\u0006\ufffdh\u07a6\u0016_\ufffdN\ufffdt`\ufffd\ufffdk[\ufffd6\u0004\ufffdu\u04d6\ufffd'E\r\n\u001b\ufffd\ufffd\ufffd\ufffdSWoA\u0011=K\u0269\ufffd\ufffd&M\u001a\ufffdXSs\ufffdD\ufffd\ufffd\ufffd\ufffd0\ufffd\ufffd\ufffd.\ufffdB\ufffd\ufffd\ufffd\u052e\ufffd$\ufffd57i\ufffdh6}\u001d\ufffd\ufffdg\ufffd\ufffd\fw\ufffdX\ufffd\ufffd\ufffd\ufffd\ufffdV\ufffd)\ufffd\ufffdZ\ufffd\ufffdp\ufffd\ufffdp\ufffd\ufffd\ufffd\ufffd\ufffdD\u0599\ufffd\ufffd\ufffdcR\ufffd\ufffdx\ufffdB\ufffd9\ufffdlq>\ufffdy\ufffd\r\nL\ufffd9\ufffd/F/\ufffd\ufffd\ufffdm\ufffd{\ufffd\u0010\ufffd<\ufffd\ufffd\u0115\ufffduO\ufffdj\ufffd\ufffd>!\ufffd\u000bty3\ufffdk\ufffd}\ufffd\ufffdEn\ufffd\u0006k\ufffdST\ufffd\ufffd,5\ufffd{]\ufffd=\ufffd\ufffd\ufffd\u001cw\ufffd\ufffdn\ufffd\ufffd\ufffd\u066e\ufffd>\u0003\ufffd8\ufffdtO\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdY\ufffd\ufffdc\u033cv\u054e\ufffd3\\i\ufffdP\ufffd\ufffdh\ufffd\ufffd\r\na\ufffd\ufffd\ufffd\u001e\ufffdo\ufffd*\u00055MuP?{e!\ufffd\r\n\ufffdx\u06b5-\u001a\ufffd\ufffd\u001e\ufffd?\ufffd\ufffd\ufffd\u000fNXw\u0001Z\ufffd\ufffd\ufffd\ufffd\u0007\ufffd \ufffd4\ufffd\ufffd\ufffd#\ufffd\u000f\ufffdl\u618b\ufffd\u0014\ufffdz\ufffd\ufffd\u0005\ufffd\ufffdf\ufffd\ufffdJ\ufffd\ufffde\ufffd\u001d\ufffdg\ufffd\ufffdM^(\ufffd\ufffdQ\u001e\u0014|\ufffdc7\ufffd$9\u001f\ufffd\u0003qm\u001a;\ufffd6\ufffd{g%:\ufffd.o\u001ef\ufffd:\ufffd\u0011\ufffd\u001dnsg\ufffdz\ufffd\ufffd)\r\n\ufffd\ufffd)\ufffd\ufffd|\ufffdq\ufffd\ufffd\ufffdU\ufffd\ufffd\ufffd\u00058g1\ufffd\u0006\ufffd\ufffd\ufffdtO\ufffd\ufffd\ufffdJ[\ufffd`l\ufffd+m\ufffd\\\ufffd\ufffd\ufffdvg(\u00014\ufffd~\ufffd8a\u0006o\ufffd<\u0001\u0013\ufffd\ufffd}O\ufffd\ufffd\ufffd\ufffd\ufffdY\ufffd\u000bc\ufffdU\ufffd\ufffd\ufffdY\u05eanbj\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\u0005\ufffd;c3\ufffd*id\ufffdpWI{\ufffd\ufffd\ufffd4\ufffd,h\ufffd8\u001fPkX%\ufffd\ufffdJ\ufffd\u0007\ufffd-lJ-\ufffd\ufffd\u0006F\ufffd\ufffdzTu\u0016\ufffd\ufffdI\ufffd\ufffdn\ufffd\ufffd86\u0005~\ufffd\u0001\ufffd\u0012/J95\ufffdo\ufffd\u000eD\ufffd\ufffd\ufffd\ufffdS\ufffd\ufffd4\ufffdM/\ufffd\ufffd\ufffdl\ufffd\ufffdT\ufffd\\\ufffdPrevf\ufffd{{\ufffdtJ\u001d\ufffd/\ufffd\ufffd\u001e7Y\u0018K\ufffd\ufffdyU\ufffd)\ufffd\u00015ah\ufffd#\ufffdx\ufffd\u001d\ufffd\ufffd\u0016\u0766\ufffd\\\ufffd(\ufffd\ufffd)\ufffd\ufffd\ufffd\ufffd|\ufffd\ufffdK\ufffd<\ufffds-\u0175\u001b\u0006\ufffd\ufffdn\ufffd\u051adU\ufffd.\ufffd\ufffdV4]\ufffdw\ufffdF\ufffdIu\ufffdy\u072bQ,\u0015\ufffdw\ufffd\ufffd\ufffd\ufffd\u051a\ufffd`\ufffd:V~\u04f0\u001a\ufffd\u001c?\ufffd,K\ufffd\ufffdT\ufffdX\ufffd\ufffd`@\\+\ufffd\u0016x\u0219 \u0012\ufffd\ufffd]\ufffd@vv3\ufffd\ufffd4('.-}\u000fp\ufffd\ufffdH\ufffd\ufffd\ufffd`,w}\ufffd\u0010\ufffd^\ufffd\ufffd\u001d\ufffd1o\ufffd%\u0019\u0003\ufffd\ufffdg\ufffdx\ufffd/s\ufffd?   \ufffd\ufffd\r\n1e8f\r\n\ufffd]K\ufffd\ufffd8r\ufffd+\ufffd\ufffd\ufffd(\ufffdgfwg\ufffdX]\u03e9Gw\ufffdU\u04fd\ufffdKG\ufffd\ufffdH\ufffd \ufffd\ufffdC*\ufffd\ufffd\u001f\ufffd\ufffd\u00de|\ufffd\ufffd\ufffdo\ufffd\ufffd\u001c\ufffd\ufffd\ufffd[`\t\ufffd\ufffdz29\f\u0015\t\u0002\ufffd\ufffd\ufffd/o `\u0002\ufffd\ufffdH\u06c39n\ufffd\ufffd\ufffdO\ufffd\ufffdE*%a8>\ufffdk\ufffd[W\ufffd\u0003@\ufffd+!\u001aW$\ufffd\u011e\ufffdm\u0018\ufffd\u001d\ufffd\u001f\u001c\u007f\ufffd\ufffd\ufffd\ufffd\ufffd\u000e\ufffdu(Voe\ufffd\ufffd\u001b\u06fc\u047f\u0015V\ufffd\\G_dqI\ufffdC\ufffd\ufffd{\u0019\u007f\ufffd\ufffd~x\ufffd\ufffd\ufffdt\ufffd\u001c\ufffd\ufffdI\ufffd\ufffd\ufffd_\u0013z%A\ufffd\ufffd6d\u0775\ufffd\ufffd\ufffd$\ufffd\ufffd1}\ufffd-\ufffdRX\ufffd\ufffd\ufffdb\ufffd\ufffd\u0010o_\ufffd\ufffd\ufffdr\t\ufffdo\ufffd\ufffd\u000f\u0345\ufffd8\ufffdO!4H\ufffdo\ufffdI\ufffd\ufffd\ufffd\u001c\u0002\ufffd8*\ufffd\ufffd\u007fJ\ufffd\ufffd\ufffd\ufffd\u0019\ufffd\ufffd*\ufffd\u000e\ufffd\ufffd)\ufffd+\ufffd)\u001c\ufffd\ufffd\ufffd`\ufffd\ufffd\u000f\ufffd>\ufffd\ufffd\ufffd\u0007\u00e6\fB\ufffd\ufffd\ufffdg\u000bDh\ufffd\u001a\ufffdM,[6\ufffd\ufffd\ufffdp\ufffd\ufffd\u0013\ufffd\ufffd\u03f6P:\ufffd\f\ufffdo\ufffdyuh\ufffd]Z\u0011\ufffd\ufffdn\ufffd<\ufffd<\ufffdHW\u00070\ufffd\u0002Wg^\ufffdr\ufffdJ\u0012\ufffd\u001aA\u001aO\ufffd\f\ufffds\u0006V\ufffd\ufffd\ufffd\ufffd\u0006U>hR\ufffd\ufffdF\ufffd\u001a\ufffd\ufffd\u001cj\ufffd\ufffd\u0004\u03a69\u000e\ufffd\ufffd0\ufffd\ufffd@\ufffd#H\ufffd\ufffd\ufffd#\ufffd\ufffd&)\ufffd(l\ufffd\u000fF\ufffd\u0217\ufffd\ufffdRt4\ufffdCS\ufffd\u001f\ufffd?\ufffd~\ufffd\ufffd\ufffd{k\ufffd\ufffd#'\ufffd|M\u001e:>\ufffd\ufffd?\ufffd\ufffd\ufffd1\ufffd\ufffd\ufffd\ud214A\ufffd\ufffd\ufffd\ufffd '\u0017C\ufffd) E\ufffdR\ufffd:\f\ufffd\ufffdUpD\ufffd\u0011\ufffd#it\u0014#Td\ufffd~\u0001\ufffd\u007f\ufffd\u0520KD4\ufffd\ufffd\u0546\ufffdS\ufffd\ufffd\ufffd(\ufffd|\u020f\ufffd\ufffd;~Fk\ufffd\ufffd\ufffdL\ufffd\ufffd\ufffd\ufffdN\ufffd\ufffd\ufffdB\u000e\ufffd]\ufffd`u^\u0004!\u0017?\ufffd\ufffd)\u0005\ufffd\ufffd(\ufffd\ufffd\u0017=\ufffd]\ufffd\ufffd=8\u045d\ufffd\u039f\u001c\r\n{\u001a!\ufffd,\ufffd9\ufffdP\ufffd~\u0007J\ufffd\ufffd] \u0007\ufffd\ufffd\ufffd\ufffd\u001c\ufffdJ\ufffd\ufffd\ufffdM\u001d\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u00059\ufffd\ufffd2y\ufffd\ufffd\ufffd\ufffd\u001cv/\ufffdL\ufffdG%\ufffd\u0005\u0012\u05d1\ufffdp\ufffds*\ufffd]]b\u062e\ufffd\ufffdh\u0003\ufffd+\ufffd~\ufffd\ufffd~\u007f\ufffd\ufffdW\u000emt\ufffd\u001b?Q\ufffd~\ufffd\ufffd@\ufffd\ufffd\ufffd\ufffd\ufffd\u0007\u000f\ufffdu\ufffd\ufffd\u04efg\u0017\ufffd\ufffd*8~yurg\ufffd\u001e\u0013\ufffd\ufffd\ufffd4>,\ufffd\ufffd\ufffd\u0676\ufffdz\ufffd\u0333\ufffd\u0012\u0104\ufffd\ufffd0kVwh\ufffd%-\ufffd-E\ufffd1N\ufffd\u0006\ufffd\ufffd\ufffd\ufffd\u0012\u0012@s2\ufffd\ufffd\ufffd\ufffd\ufffd\u067b\ufffd\ufffd\u001dh\ufffd\ufffdR\ufffdW\ufffd\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd[G\ufffd\ufffdD\u001c]\ufffd\u000f\ufffd\ufffd\u000bu\ufffd\ufffd\u00a1\ufffd\ufffdd!\ufffd\u007ftqO\ufffdy\ufffd\ufffdO(\ufffd\u0630[AIkV\ufffd\ufffdN\ufffd\ufffd\ufffd[^\ufffdV\ufffd\u001a\ufffd\ufffduq>\ufffdi\ufffdH\ufffd*\ufffd\r\ne\ufffdU,\ufffdS\ufffd\ufffd\u0004\ufffd\u04a8\ufffd\u0018\r\n\u000ey\r\n\ufffd\u03e3\u0012\ufffd70\ufffd\ufffd\ufffd\u0015\ufffd\ufffd`\ufffdPz\ufffd[w\u001b\ufffd\u0142\u04df\ufffd\ufffd\ufffds\ufffdt+\u0654\ufffd\r\n\ufffdi?:xrD,Sg\ufffd\ufffd\ufffd9Y x\u0012(i\ufffd\ufffd\f\ufffd\fW\ufffd>n\u000f\ufffd\ufffd}hZ\ufffd+\ufffd\ufffdg\ufffd^\ufffd\r\n\u001c\ufffdJ\ufffd\u0014j\ufffd\"\ufffd|#-\ufffdR\ufffd\ufffd\u0005vZ \ufffd\ufffd\ufffd0[\ufffd|]S0\u0005\ufffd\\\u02ba|\ufffd\u001d`{\ufffd\"\ufffd\ufffd9\ufffd\ufffd\u0006\ufffd\ufffda\ufffd\ufffd{ \ufffd\ufffd'\ufffd\ufffdM\u0016\ufffd<\u06a7\ufffd\ufffd\ufffd\ufffd\u0003v'\ufffdLKc\ufffd+\ufffd\ufffd\ufffdzo#\ufffdW\ufffd\ufffdh\"\ufffd\ufffd\u0011\ufffd6\ufffdy\ufffd~<\u001a\ufffd[3\ufffdLI\ufffd\u000f\ufffdN\ufffdKV\ufffd\ufffdA\fVd`]\u001b{h\r\n\\W\ufffd\u06ac\ufffd\u053e\ufffd\ufffdp$\ufffd 6\ufffd\ufffd\ufffd\ufffdC\ufffd\f\u0013\ufffdNVs\ufffd\u02b4\u001fl\ufffd\ufffd\ufffdX\ufffd\f\ufffd&\ufffdw\ufffd\ufffd\ufffd\u0005y\ufffd\u000b=\ufffd;\ufffd\u0010\ufffd\u001d\u06d1\ufffd\u0016mM\ufffd\ufffd\ufffd~\ufffd\ufffdC2B\ufffd\ufffd,\ufffd\u001c\ufffdd\ufffd\u0013\ufffd\u0780\ufffd\u001d{\u0017\ufffd!\u001e\u001f\ufffdU4\ufffd\ufffd\ufffd\\\ufffdI\u0014$\ufffdrp\ufffdQV\ufffdA\ufffdXz.]\ufffd\ufffd\r\n\u001a\ufffd[R\ufffd\ufffd:\ufffd\u0006\ufffdAC\u001d\ufffd\ufffdX1\u001c\ufffd'\ufffd\u000f\ufffd\ufffd|\ufffd\"\ufffdP\ufffdE#\ufffd[\ufffd\ufffd\ufffd\ufffd\ufffdT\ufffd\ufffdE\ufffd\ufffd\ufffd\u0014*\ufffd\ufffd\ufffdd\ufffduL\ufffd\u0012\ufffd\ufffd:\u0003\ufffd\ufffd\ufffd\u000f\ufffd\u0018>\u0002\ufffd>\ufffd\ufffdV\ufffd\ufffd7%\ufffd\u0019QY\u0003M\ufffdf\ufffd^\r\n\ufffd\ufffd\ufffd\ufffd\f9o\ufffd\ufffd$\ufffd\ufffd\ufffd\ufffd\ufffd&;\ufffd{\ufffdpm\ufffda\ufffd_2x\ufffdJ+\ufffdj \u001d\ufffd\u0012\ufffd\u0002,\ufffd\ufffdm\ufffdK\u0015n\ufffd\ufffdt\u00192A\ufffd?\t\ufffd\ufffd78n\ufffd\r\n\ufffdL. #\ufffd\"\ufffd\ufffdv\ufffd\ufffd~\ufffd/@\ufffd?c\ufffd\u007f\u0018\ufffd\ufffd\u0018k\ufffd\ufffd\ufffd?\ufffd-R\ufffd\ufffdk\ufffd\ufffd\u049a\u001d\u0010\ufffd\u001cQ[\ufffdEj\ufffd$]\ufffdV\ufffd.\ufffdX\ufffdP'\u001d~{\u0425D\ufffd\ufffd.\ufffd$[\ufffdA\ufffdz\ufffd\u0016]g.~+\ufffd\ufffdt\ufffdL\ufffd\u0005\ufffdV\ufffd\ufffd\ufffd\u0006\ufffd\u0001\u0013\ufffd\ufffd\u0550\ufffd\ufffd\ufffd\u0013_&=\ufffdN\ufffd|e\ufffd\ufffd'O\ufffd\u0018\ufffdt\ufffd,\ufffd\u05b1w \ufffd\ufffd`e\\W\ufffdyV\ufffd\ufffdN(\ufffd\r\n\u007f\u0016V\u001b#WY\ufffd\ufffd\ufffd\u00032\ufffd\ufffd\ufffdI\ufffd\u0005\ufffdV\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd=k\"\ufffd\ufffd\ufffdk\u03fd9\u0019\ufffd!\u001a\ufffd\ufffd\u007f\ufffd\ufffd-\ufffd\u001c\ufffd\ufffd\u007fw~\ufffd\ufffd\ufffd:H\ufffdSW\ufffd\ufffd>\ufffd\u001eUUMolF\ufffd\u001b\ufffd\ufffd_8\ufffd\ufffdP\ufffdP\\\ufffdU\u01b1\ufffd\ufffd\ufffd\ufffd@\ufffd\ufffdh\ufffd\u0007\ufffdj\ufffd\ufffdx\ufffd\u010d\ufffd\ufffd\u000f\ufffd\ufffd\ufffd \u0388p[\ufffd\u0268\ufffd\ufffd0oj~\ufffd\u000b#R\ufffd\ufffd\ufffdR\ufffdq\ufffd\ufffdCY\ufffdw/\u007f\ufffd;8.}UQ\ufffdb\ufffdm\ufffd>M\ufffd=\ufffd\ufffd6\ufffds\ufffd,\ufffd\ufffdS\ufffd\ufffdv\ufffd\ufffd=Q\u0016\u001d\u0004\ufffdP\ufffd.?b\ufffd*\u001a\ufffd|lwF\ufffd\ufffdB'hj\ufffd\ufffd'\u0012\ufffd'\u000e\ufffd\ufffd\u00be\u0015\u001au\f<\ufffd\ufffd\ufffdj\ufffd\ufffd\ufffd\ufffd\ufffd^\ufffd\u00044\ufffd\ufffd\ufffdJb\ufffdC\f\u007f\ufffdJ4\ufffd\ufffd\ufffd\u0007%\ufffdt^\u0017O\ufffdG\ufffd\ufffd<\ufffd\ufffd\u000e~\u0193\u001f\ufffd{\ufffdtuq\ufffd/><\ufffdz\ufffdW\ufffd\ufffd\ufffd\ufffdb\ufffd]\ufffdA\u0462\ufffd:\ufffd<\ufffd\ufffd\ufffd\u0719\ufffd\ufffd\ufffdV\ufffd,a\ufffd\ufffd\ufffdh-\ufffd\u0292\u0017,V[!\ufffd\ufffd<\ufffd\u007f\\\ufffdy\ufffd\ufffd\ufffd}\ufffd^\ufffd\ufffdvl\ufffdmX\ufffd3\ufffd\ufffd\ufffd\ufffd\u0019\ufffdp\ufffd?\ufffd\ufffd\ufffde\u000f\ufffd\ufffdv\ufffd9;b\ufffd^\ufffd\ufffd\ufffd\u0007\ufffdAg\ufffd\ufffd\r\n\ufffd+\ufffd\ufffd9\u007f\ufffdC\ufffd\ufffd]\r\n+s\ufffdPT\ufffd\ufffdf]X\ufffd\ufffd%\ufffd`\ufffd\"\ufffd\u001f\ufffd\u0185\ufffd\ufffdf0\ufffdi@\u07f9\u0012+\ufffd \u0018\ufffd\u0019~\u000b\"[\ufffdp\ufffd\ufffdM\ufffd\u001e\ufffd\u0016fB\ufffd\ufffd\u0016(\ufffdq\ufffdsp\ufffd\ufffd#V\u0017\ufffd\ufffd2\ufffdg\ufffdYX/\u0006\ufffd\u0004\u0003\ufffdD\u0013\u0007#\u000e\ufffdGO\ufffdv&\u0004\r\n\ufffd\ufffd\ufffd\u0011\ufffdQ9\ufffd-\ufffdxt\ufffd,\ufffd~\ufffd\ufffd7\u0016?\u0014\ufffd\ufffd\ufffd\ufffd$\ufffd\u001aK\ufffd\ufffd\u0001\ufffdDp\f\t\ufffd\ufffd<\u0006&\u07eb\ufffd\ufffdf\ufffdx ]\u00025M\u0007@\ufffdO\u001eG\ufffd\u015cH\ufffd\ufffd\ufffdJb\u0013X\u001b}\ufffd\ufffd!\ufffd\u0011ul\ufffd\ufffdy\u0012\u0001\ufffdF\ufffdh\ufffd\ufffd\ufffd(\ufffdM\ufffd\ufffd\u0017\ufffd|\u0018\ufffd\ufffd\u03e6_Ec\f,p\ufffd\ufffdl\u0010c3\ufffd y\u0019dk2\ufffd%\ufffd\ufffdgQ\ufffdWl\ufffd\ufffdLK\ufffdq\ufffd\u0433;\ufffd\ufffd\ufffd+\ufffd\ufffd\ufffd?\ufffd\ufffd\u00dcw\u001e\u07d1\ufffd\ufffd\ufffd\ufffd\u0019\ufffd\u012d\ufffd\ufffd\u001fV\ufffd2q\ufffd^&)2\ufffd\ufffd=\ufffd\ufffd\u0015\ufffd\u0006\ufffd\u001cP\ufffdBdKZ\ufffd\ufffd\u03eb2\u001d\ufffd\ufffd\u000fBCN2\ufffdU4F\ufffd\u051bh\ufffd<A/\ufffdm\ufffd\u001ezp\ufffd\ufffd\ufffd\u035f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd|gz\u0002\ufffd\u0016#\u001f\ufffdC}\ufffd\u0002\ufffd\\y\u05d1)\u0002Dt\ufffd\ufffd8}@Ae\ufffd3\ufffd\ufffd77ur\ufffd\ufffdr#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\\d\ufffd$.\ufffd*\ufffd&\ufffd\ufffd\ufffdD\ufffd\ufffdUm*\u0018\ufffd\u0012\u0014J\u00039g\ufffd\ufffd\ufffdc\u001f8\ufffd\ufffd7\ufffd\ufffdq\ufffd]\u001b'\u0014\ufffd8]\ufffdE]\u0017\ufffd\u0002\ufffdp\ufffd_\ufffdq\ufffd\u0004d\ufffd\ufffd\ufffd&i\ufffd\ufffd\ufffd\ufffdW\u001b\ufffdA\ufffd}^\u0005\ufffdS+\u00142\ufffd\ufffd\ufffdL\ufffd\u0019\ufffd\u016b\ufffd\u0007\ufffdF\u0019\u010dd\ufffd\ufffd\ufffdh_\ufffdyV\ufffd,\ufffd\u0018v\ufffd} \ufffd\ufffd\ufffdy\ufffd\u001c\ufffdQ`\u001c\ufffd\u0315\ufffd\ufffd\ufffd`(\ufffd`\ufffd\ufffdp\ufffdd\ufffd\r\nU\ufffdP\ufffd\ufffd.\ufffd\u000e\u0470[#zL\ufffd\ufffd\ufffd!\ufffdE\ufffdaT\ufffd\\\ufffd\ufffd\ufffd\ufffd`\ufffdy\ufffd\"mCe\ufffd\ufffd\u000fQ0Hs\ufffd\ufffd\ufffdDQ\ufffd\ufffd!\ufffd$\ufffd'\ufffd\u027a\ufffdk4\u0348\ufffdH\r\nr\ufffdl\ufffd\u0002h\ufffd&\u000f\ufffdi\ufffd\ufffd\ufffd-(!\ufffdMk\ufffd\ufffdTQ\u0017\ufffd\"G\ufffd\ufffd\r\n5A\ufffd\u0018\u000f\ufffdq;\ufffd\ufffdb\u001d\u0001\ufffd\ufffd^\ufffd\u0595\ufffd\\)\ufffd_\ufffd]3\u0012#\ufffd]\ufffd9\ufffd_\"\u00b2k\ufffd\u0011\ufffd\ufffd\u001a\ufffd\ufffd'\ufffd4\ufffd'\ufffd\ufffd\u001eBV\ufffdH\ufffd/\u0015\ufffd\ufffd\ufffd\ufffd\u0015\u0011\u078fBkCC\ufffd$\ufffd\ufffd\u001d?\ufffd\ufffd\ufffd\ufffds\ufffd\ub7c0k\ufffd\ufffdK}\u001a&%[\ufffdn\ufffd\ufffdV\ufffd\ufffd\fZ\ufffd\ufffdG(\ufffd\\\ufffd\ufffd-\ufffdJ\ufffd;%\ufffd\u001dG\u0018g\ufffd\u0019\ufffdwJ\ufffd\u0015\ufffd\u0411\ufffd\u0017\ufffdb\ufffd\ufffd\ufffd\u029a}\u0011M&\ufffd+\ufffdh:\ufffd\"\ufffd\ufffdE\ufffdL\ufffd\ufffd\u0019p\ufffdE\u06dc=\ufffd~\ufffd-M7<\ufffd\u0005\ufffdy\ufffd\ufffd*\ufffd\ufffd\u001d\ufffd\ufffd\u0471\ufffd#r\ufffd\u0012@6\ufffdAO\ufffd\ufffd_p\u0018$\r\n\ufffd\ufffd<\ufffd\r\n\ufffd\f\u0588\r\n\u0003\u0013\ufffd\ufffd7\ufffd/Ux\ufffd\ufffdxti\ufffd\ufffdF\u007fUC\ufffdH?\u001d\ufffd\ufffd4\ufffdP\r\n\ufffd\ufffd\ufffd\ufffdeZ\ufffdbA\ufffd<\u0382\ufffd\u87d5\u04e1\ufffd\u0003\r\n\ufffd\ufffdX\ufffd\ufffdu\ufffd\ufffd\u0019\u0002\ufffdd!\ufffd^@/p\ufffda\ufffd\ufffd\u0007E\ufffdG1\u051c;\ufffd\ufffd]\u0007\ufffd\u001b\u0014\ufffd=~\ufffdh\ufffd]\u051d\ufffdZA\u007f\t\ufffd\ufffd\u0019v\ufffdK\u0007\ufffd\ufffd\ufffd\u001f]<\ufffd\ufffd\u0017>I\ufffd\ufffd\ufffd\u001bI9\ufffd\u0017\ufffd\ufffd.t\ufffd\u0005\ufffd+\ufffd\u0019v\u05e1\ufffd\ufffd\ufffd\u0013h7Te\ufffd\ufffd\u0007D\ufffd\ufffdK\ufffdJ\ufffd\ufffdh\ufffdJ\ufffd\ufffdM\ufffd\ufffd\ufffd\r\n\ufffd\ufffd\ufffdD\ufffd\ufffdOo\ufffdj\u0011\ufffd\ufffd\ufffdf\ufffd'\ufffdt\ufffdd\ufffd\ufffd\ufffd\r\nm\ufffdsD\ufffd\ufffd.\ufffd0\ufffd)l\ufffd\ufffd4\u0018\ufffd\ufffdN\ufffd\ufffd@\ufffd\ufffdr\ufffdF\ufffdi\ufffd\ufffd~o\ufffdD\ufffdE\ufffd\ufffd\ufffd`m\ufffd\ufffd\ufffd\u0011\ufffd\u001br\u0186\ufffd>\ufffd8\ufffd\ufffdT\u0018\ufffd\ufffd\u0616\ufffd*\ufffd\ufffdy-wf \u001b~\ufffd\ufffdw?\ufffdZ\ufffdq+(E\ufffd\u00f97\t\ufffdP\ufffd\ufffd\ufffd\ufffde\ufffd\ufffdN\u001aa\u001d`\ufffd<\ufffd}\ufffd\ufffd\ufffd\ufffd9\ufffd\ufffd\ufffd\\^_H\ufffdf\ufffd\ufffd\ufffd.\ufffd\ufffd\ufffdx\ufffd\u0307\ufffd\ufffd*\u0019\ufffd(\u0002ip\u001b\ufffd\u001b\ufffd+\u1231,s\ufffd\ufffd5\ufffdl\ufffd\u00b4\r\ng\ufffdms\ufffd6\r\nd\ufffduV\ufffdn4\ufffd#\ufffdR(1R\ufffdn\ufffd\ufffd\ufffd\u0702E\u0356/Be\ufffdG\u0001\u056c\ufffd:^@\t(7\ufffdcxa\\6\ufffd\ufffdj\ufffd\ufffd<S\ufffd\ufffd\f\ufffdh_\ufffd>\r\n\u000e*\ufffd+\u0013\u0003u\ufffd\u02dfm\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdG\ufffd8\u0019\u001c#}\ufffd\ufffd\ufffd\ufffd\u001fPk8\ud8ba\udd0b\ufffd\u000bf\ufffd\u001d\ufffd\ufffd\ufffd\u0018\ufffd\ufffd\u0001\ufffdue\ufffd\u0014\ufffd\ufffd \u0002>\ufffd\ufffd\f\ufffd\ufffd\u0003\ufffd-\ufffd\ufffd\ufffd\u0006y\ufffd\ufffdt(\ufffdX!\ufffdOg\ufffd\r\n\ufffd\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffd5\u001b\u0014\ufffd\ufffdy\ufffd\ufffd\u0013y\ufffdj\ufffdB~T\u0494V\u0014\ufffd\u0016oP\ufffdD7\u0018\ufffd\u001e\ufffd\ufffd\ufffd\u2bee\u00184N0'\ufffd;t\ufffd\ufffdT\u077b\u0011{\ufffdM\ufffd#^D\ufffd'\ufffdYA#\u0007i\ufffdb\ufffd\"/\ufffdn\ufffd\ufffd\ufffd\ufffdU91\u0015\u001e\ufffd\u0616\ufffd\ufffd\ufffdh\ufffd\ufffdd>p\ufffdO35H\ufffd\u0002\ufffd\u06d5\\\ufffdc\ufffd\u000b\ufffdR0r5\ufffd\u0012\ufffdYh\u0004\t\ufffdnKi\u0765\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0005\ufffd\ufffd\ufffd\u0001\u0013Q\ufffd({d-\ufffdb\ufffd\ufffd\ufffd\ufffdS\ufffd\u00030\ufffd\ufffd\ufffd\ufffdP\ufffd\ufffd^\ufffd\ufffd \ufffd\u001a\ufffdM\ufffd}g\ufffd\u0005\ufffd\ufffd_d>\ufffdp'w\ufffdK]\ufffd\ufffdY\u0010R-mh\ufffd\u000e\ufffdy\ufffd I\ufffdy\ufffdn\f\ufffd\u03f1\ufffd\ufffd+X\ufffd\ufffd+DO<\ufffd\ufffdZ`Y\ufffd+\ufffdE\ufffd\u0012\ufffd\ufffd\u01cb=\ufffdy\u001c\ufffd[ \\\u011e\ufffd\ufffd\u0010\ufffd\ufffd\ufffd\ufffd8\ufffd\ufffd4 \u001eu\ufffd\ufffd8\ufffd1\ufffdZ\ufffdU\u001c\ufffd\ufffd\ufffd }!\ufffdHc\ufffdoM\ufffd\ufffd\u0005\u0011\ufffd\u001e\ufffd\ufffd:\ufffd\ufffd8Q\ufffdZ\ufffdc\u7f96\u078fD\ufffd1Q\ufffd\ufffd\u02bd\u0018\ufffdOI\ufffd}P\ufffd\u0007\ufffd\ufffdOnT\ufffd@'\ufffd\u0012\ufffd7A\ufffd\ufffdu[\ufffd\ufffd\ufffd\ufffd3\ufffd^\u000fb#Q\ufffdw\ufffd1\ufffd\ufffdF\ufffdut\u033a\u04f9\ufffd\ufffd\u001b\ufffd\ufffd=B\ufffd\ufffd\ufffd\ufffd>>\ufffds\u0006\ufffd\ufffd\u01d6-p\ufffd\ufffdq\u0405\ufffdY;\ufffd-wx&\u001e\ufffd[]\ufffd\ufffd\u0002{\ufffd\u001c\ufffd\u001b\u0005M\ufffd\ufffd\ufffd\u001c\ufffd6\ufffd\".\u000bj\ufffd'\ufffd\ufffd\r\n\ufffdS\ufffd0\ufffdj\ufffd\ufffdc\ufffd*9i\ufffdYv\ufffd\ufffd6R\u0001H\u0680V\ufffdF\u000b`/\ufffd\ufffd\ufffd\u0013\r\n\ufffd\u000b\u0015\ufffd7\ufffdB\ufffd\ufffd~V\u0003\ufffd_!\ufffd\ufffd,\ufffdX9\ufffd\ufffdi `T\ufffdd\ufffd\u001a\ufffd\u0094\ufffd\ufffd4\ufffd\ufffd\ufffd\u0004\ufffd\ufffd\ufffd0\ufffd\ufffdB\ufffd9=K0\ufffd\u0007\ufffd\\\u0465\ufffd#\ufffd\ufffd\u0018e\ufffd\ufffdM=\ufffd\ufffdK\ufffd\ufffd5\ufffd\ufffd\ufffd\u0012 \ufffd\ufffd\ufffdy\ufffd\ufffds\ufffd\u001f\ufffdh\ufffd\ufffd<\ufffd\ufffda\":\ufffd3( \ufffd+\u0012\ufffd-aE\ufffd\ufffd\u046aF\ufffd~\ufffdk\ufffd\r\n\u0007\ufffd\ufffdh\ufffd\ufffd\ufffd:'\ufffd\ufffdb*\ufffd\ufffd@l\ufffd\ufffd8\u0710\ufffd\ufffdf\ufffdA\u0005Q\t\ufffd\ufffd\ufffd\u000b\ufffd0~'6\ufffd.`\u0003\ufffd6\ufffd\ufffdDu\ufffd]\ufffdu\ufffds\ufffd\ufffd\ufffd\u0001M\ufffd\ufffdE\"2T\ufffd\ufffdK\ufffd\ufffd\u00167\ufffd\u0018\u07c5\ufffd?:\ufffd\u0006\ufffd*Q\ufffd\u0490\ufffd{\u0018\u05ab,*\ufffd8(\ufffd\ufffd\ufffdY-\ufffd{\u001c\ufffd\u0002\ufffd\ufffdma\ufffd-\ufffd\ufffd\ufffd\ufffd;8\ufffd\ufffd\u000e5\ufffd\ufffd\ufffd(q\ufffd4m\u0014\ufffdwY\ufffd\ufffd\ufffd6\ufffd\ufffdz\ufffd\ufffdD\ufffd\ufffds\ufffd\ufffdQn\u0015}\u0011A\ufffdDF~\ufffd\ufffd\ufffd(\ufffdI\u0002\u0005\ufffd\u0006da\u0016\ufffd\ufffd\ufffd\\\ufffdfj\u001a\ufffd%\u0002\ufffd7\ufffdfj\ufffd\ufffdlsn\ufffdXc\ufffd\u02e2\ufffdlNS\ufffd\u001eT\ufffd\ufffdA\u01dc6\ufffd\ufffd+\u0018\ufffd\ufffd\u0013\ufffd\ufffd~\ufffd@\u04c0]l\ufffdrk\ufffd~[\u001e}u\ufffd\ufffd?\ufffd7&\ufffdY\ufffdT\u0011\u80625\u0754\ufffd\ufffdh\f\ufffd\u0015\ufffd\ufffd\ufffd\ufffd\u007f\u0001T\ufffd\ufffd:\ufffd6H \u001b=\ufffd\ufffd)\ufffd\u0013ep{\ufffd\ufffd\ufffd/\ufffdu\fx5\ufffd5\ufffd!\ufffd\ufffdl\ufffdTL\u007f\ufffd\ufffd5\ufffdQ1\ufffd+\ufffd\u0013\ufffd\ufffd\ufffd\ufffd6+\ufffdg\ufffd\ufffd\ufffdhp\ufffd[\ufffd\ufffd6\ufffd\u000f\ufffd\u001fW\ufffd8\ufffd/Zt\ufffd\ufffd@\ufffdlA\u0556|\ufffd\u000b\ufffd~\u001f\ufffd<E\ufffd\ufffd\u0002\u0014\u000e3 -\ufffd\ufffdz2\u03f8\u02eb\ufffd\u0014\ufffd\ufffd\ufffdq\u001054\ufffd\ufffdsn\u0003\ufffd\ufffd\u001b\"\ufffd\ufffd\ufffdM\u0006g\u0013\ufffdd\ufffd\ufffd\ufffd\ufffd\u063d\ufffdu8\ufffd\ufffd\ufffdojzr\u0338S\ufffdl\ufffd\u001cz\ufffd\ufffd9\u000f\ufffd\ufffd\ufffd\ufffdA\ufffdf\ufffdC\ufffd\u0016\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd@\ufffd\ufffdaO\u0001Il\ufffd\ufffdj\ufffd\ufffd\ufffd\ufffd8\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd7\ufffd\u000b\ufffd\ufffdY5\ufffd\ufffd\u0016\u0007\ufffdJ\ufffd\u0003v>T\ufffd\ufffd\r\n\ufffd\u0018\ufffdy\u0193\ufffd\ufffd5)\ufffd:\ufffd[7\ufffd:^\u0013w\ufffd\to\ufffd\u06b6\u0003\ufffd\ufffdN\ufffd\r\nY\ufffd\u001c\ufffdi\ufffd=\ufffd\u03fdd8\ufffd;\ufffd\u0004(\ufffd\ufffd\u0019?#j 7\ufffd}\ufffd \ufffd\ufffd\u0011\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdtn] \u0014\u0013E\ufffd\ufffdZ\ufffd%\ufffd\ufffd\u000fuz\ufffd\u0017\ufffd\ufffdH\ufffd(U,jS\ufffd\u0010\u0311\ufffd\ufffdJ'\ufffd,\u042et\u001d\ufffd\ufffd\ufffd=\u01d2\ufffd\ufffd \u07dd\ufffd1:\ufffdR\u0016\u001e\ufffd\ufffd\ufffd\ufffdoY\ufffd\ufffd\u001c]1clMjg\ufffd?   \ufffd\ufffd\r\n1ffa\r\n\ufffd\ufffd\ufffd\ufffd\u0018k\ufffd\ufffd\ufffd\ufffd\ufffdlE'\ufffd\ufffd\ufffdg\ufffd\u0006\ufffd\ufffd*\ufffde\ufffd\ufffd\ufffd\ufffd\ufffdt\ufffd\ufffd\u011f\ufffdM\ufffd\ufffdR\ufffdg X\ufffd\u073ee6\ufffd([\ufffd\u0006\u0019\ufffdW\u021b\ufffd\ufffd\u0189w\ufffd\ufffd\u001d\ufffd\u0018\ub42f)\ufffd\ufffd\ufffd\ufffdh\ufffd\ufffd4\ufffd\ufffd>\u0005\u000e8\ufffd\r\nWv6\ufffdbnsn\ufffd\u000f\u0011\ufffd\u00122\ufffd\ufffdpWh\ufffd\u000eTC\u0014d\ufffdj\ufffdr\ufffd?\ufffdW1'h\u000f~\u000f\u0003\ufffd?\ufffdv\u02c9\u0017D\ufffd\ufffd\ufffd\ufffdH\ufffd\ufffd\ufffd\ufffd&\\\ufffd4t\u0002\u0002\u0013}ak\ufffd0\ufffdV\ufffd\ufffdo\u0005X\ufffd\ufffd!>\u0017\ufffd\u0018\ufffd\ufffd\u0002.me\u01202\ufffdm\u001dv~\u001bn\ufffd\u01f5\ufffdT\ufffd\ufffd\u0018DQ\u001e\ufffd.6\ufffd\u0014<e\u001d=\ufffd@\ufffd\ufffd\ufffd @\tC\ufffd\ufc36\ufffd\ufffd\u0014\u0015\ufffd)\ufffd\ufffd\ufffdeNx\ufffdh\ufffd\ufffd\ufffd\ufffd\\\ufffd\u007fF\u0004\ufffd\u0004m\ufffd$\ufffd\r\n\t\ufffd\u000e\ufffd8H@U\u06e2N\ufffd\u03a5u\ufffd!+\ufffd\u481dR\ufffd\ufffd$\"\ufffdo~GJ\ufffd\ufffd\ufffd\ufffdP\u0010\ufffd\u0002\u001c\u000b#Wq\u0005\ufffd{\t\ufffd\ufffdy\ufffd\ufffd\ufffd\u0011 \ufffdj\ufffd|h\ufffd3\ufffd\ufffd\u0012\ufffdh\ufffd\ufffd\ufffd\ufffd`\u001e)W\ufffd<\ufffd\ufffd\t\ufffdP,j\ufffd\ufffdw!=\ufffdGW\u0011\ufffd\ufffdJ\u0006\ufffd\u000f\u000b\ufffd\ufffd\ufffd&8\ufffd\ufffdlXm\ufffd\u0006\ufffdS\ufffdXsJ\u0002\ufffdtf\ufffd+\ufffdU\ufffd\ufffd'N<!/0\ufffd:\ufffd\u000b\ufffd/\ufffd U\ufffd\ufffdW\ufffdp\ufffd\ufffd\ufffd\ufffd\u000b\u0003\r\n\ufffdXgZ\ufffd\ufffdsU\u0013\ufffd\ufffd]{\ufffdi\ufffdz\ufffd\ufffd\u000eu\ufffd\f\ufffd2k!`\u0004\ufffd\r\n\ufffd\\\ufffdXh\ufffd\ufffdj9<\ufffd\u0006(\ufffd\"f.\ufffdv\ufffd\ufffd\ufffd\ufffd\ufffd\u0003\ufffd\ufffd\ufffdx\u0014\ufffd@\u0013Wn7\u07fa\")\u0019\ufffdy^\ufffd^\u2604\u064d,\ufffd\u0004\ufffd\u0004v&5\ufffd\fxB\ufffd\r\n\ufffd\ufffd\u0002;m-|\ufffdu\u0002a\ufffd\f\ufffd\ufffdc\u070a\u0004\ufffd\ufffd@\r\ntD\ufffd'b\ufffd\ufffdI\ufffd\ufffd+q\ufffdSe\u001a9\u001e\ufffd\u0006g\ufffd\u0012\ufffd\u01c4\u000f$\ufffd,\ufffd(\u000b\ufffd\r\nO\ufffd\u0681\ufffd\f\ufffdc\u000eq\ufffd\ufffdm^*\u03b0\ufffd\ufffd\ufffd\u0016\u0012\u0018(\ufffd,\u0002\ufffd\u0018\ufffd\ufffd\u000b\u000f\ufffdm;\ufffdc\t1\ufffd'\u001aX~\u00de\u0010\ufffd\ufffd\ufffd\ufffd\ufffdt4\ufffdl\ufffdZ\ufffd\\\ufffd\u001e\ufffdR\ufffd\ufffdrFv\ufffd\ufffd\ufffdx\ufffd\u00018\ufffd\ufffdCB\ufffd\ufffdT\u0004\ufffd\ufffd4b\ufffd\ufffd\u001eO\ufffd\ufffd\\\u001aV\ufffd\ufffd$\u007fI\ufffd\u03973\ufffd\ufffd\ufffd\u0012-\ufffd\ufffd:\u007fA\u0015#\ufffd=\ufffdd\u001e\ufffd\ufffd\u00012\ufffd\ufffd0\ufffdVX\u0016\ufffdI\ufffd\ufffdQ\ufffd\ufffd\u0006\u001b\ufffd+s\ufffdm\ufffd\ufffdXh\u075a\ufffdc\ufffd\ufffd\ufffdUY.\ufffd\ufffdqA#\ufffd\ufffd\u001d\ufffd7\u001bj`%_mwt\u000b\ufffdY\ufffd>\u0010R\ufffdz9\ufffdgl\ufffd\u06b2BX\ufffd\ufffd\ufffd0fH5\ufffdB\u0019!E\u074fE\ufffdFc,(\ufffd\ufffd\u000b\u001c\u0018#J[\ufffdO\ufffdD\ufffd=\t|x\ufffd9\ufffd?N\ufffd9\u00149\ufffd\u02c5\ufffdE\u056a/R\ufffdL\u001c\u0015\ufffd\ufffd\u000b\ufffd\ufffdTU\ufffdY\ufffd\u0012\ufffdBe \ufffdsxm\ufffd\ufffd\ufffd`\u001b\u0245\ufffd<\ufffd_F\ufffd\u0016m\ufffd\ufffd=PN\ufffd\ufffd:LP\ufffd\ufffd\ufffd.\ufffd\ufffd1\ufffd}\ufffdK\ufffd\f/\ufffd\u0379Fw\ufffdH\u0010 Gp[H%\ufffdK\ufffd#\u001b\ufffd\ufffd\ufffd}\ufffd'AgZ\ufffd\ufffd7&q\ufffd\ufffd%\ufffd\ufffd\u0010Z3l=\ufffd \ufffd\u0010\"\ufffdX8\u0015\\a7\u0016q0\ufffd\u001f\u0019\ufffd\u0001\ufffd>\ufffd\u0001\ufffdG\u04a8\ufffd\u0539l\u0012Ek\ufffd\ufffdcj\ufffd|\ufffd6\ufffd\ufffd\ufffd\ufffd\u0015\u0479\u025b\ufffd\ufffdk\ufffd<\ufffdU\ufffd<!\ufffdl6X\ufffdL\ufffd\u0006\ufffdz\ufffd\u001b\ufffd\u000b\ufffd\u0018We\ufffd\ufffdtVV}l\ufffdD\u0016\ufffdE\ufffd\u001c\u0013H\ufffd\ufffdB\ufffd\u0006[\t\ufffdw\ufffd3\ufffd\ufffd\r\n\ufffd8\ufffdB\u0014\ufffd\ufffd\ufffd\ufffd\ufffdsJ\ufffd4\"\ufffdkR\ufffd1\u000e\ufffd\ufffdc\ufffdO%\ufffd\\+\ufffd\ufffd~\ufffd\ufffd`]\ufffd\u0012\u0019\u0003\ufffdW\u001a\ufffd\ufffd\ufffd\ufffd\u0003\ufffdW\ufffd_2\u0001z\u0016\ufffd\ufffd\\\ufffd\ufffd>\ufffdm\ufffd\ufffd\ufffd9'\ufffd\ufffd\ufffdV\ufffd\ufffd1Ac\u0005@\ufffdX\ufffdy\ufffdp\ufffd\u0004\ufffd\ufffd\ufffd\u0013\td\ufffdd\ufffd\ufffd\ufffdi\u001a\ufffd\ufffd\ufffd\ufffdBh\ufffd\u0003\u057c]\ufffd:\u000e\ufffd\r\n&\ufffd%\ufffd&\ufffd)\\]T\ufffd:\ufffd\ufffd\ufffdT\ufffd\ufffd\ufffdI\ufffd(AN\tb\u035c9-E`\ufffdK\r\n'8\ufffd\ufffd H\ufffd\ufffd\ufffd#{\r\n\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffdu\ufffdw\ufffd\u001a\u0007 >U`\ufffd\u07bbR*\u0011GH\ufffd\ufffd\ufffd\ufffdt4\u0011\ufffd\r\n\ufffd\ufffd^\ufffd\u0016\ufffd\ufffdV\ufffd\\\ufffd\ufffdn'\ufffdF\ufffdA\ufffd\u0013[T\ufffd\ufffd.\u6f43\u0011\u0001\ufffd\u0092\ufffdvI.\ufffdB\ufffd\ufffdv\ufffd\ufffd{\ufffd\ufffd\ufffd\ufffd\u0015\ufffd&E@\ufffd0r\ufffdQ\ufffd+\ufffd\ufffdA\ufffd\ufffd=}-L\ufffd&\u0012\ufffd\ufffd\ufffd\u0016\ufffdR3\ufffd\u0002O\ufffdazY\ufffdf\ufffd\ufffd\u001cn^\ufffdY\ufffd\u001a.\ufffd\fL\ufffd\ufffd\ufffd\ufffd\u007f\ufffd\ufffd?-\ufffd\ufffd\"Km\u0465k6|\ufffd-\u0004\u0018\u0004D\ufffdE\u0002\ufffd\ufffd\u01fb \ufffdn\u0014'=\ufffdV\ufffd\ufffdPt\u0016\ufffd\ufffd\ufffdr\ufffdPv`\ufffd\ufffdk.H\ufffdBh2\ufffd\r\n[\ufffdY\u0663\ufffd\u007fh\ufffd%\u4fa5#\ufffd\ufffd\ufffdb\ufffd8\ufffd\ufffdB\ufffd\ufffd%M\ufffd\u0003\ufffdY\ufffd\ufffd0~#!\ufffd\ufffd\u045d\ufffdBNs!yh\ufffd:\ufffd;==;}\ufffd\ufffd\u075b\u04f7o|\ufffd\ufffd\ufffdY\ufffd\u0005E \u0740\r\nb\ufffd I\u06d7\ufffdd\ufffdl\ufffdK\ufffd\ufffd\ufffd\u0357.\u01f3\ufffd\u0013\"\\\u0002/\u0014\u0516\ufffdN\ufffd\u0018`\ufffd\ufffdI\u0018\u0018\ufffdq\ufffd\u0019\u001d\ufffd\ufffd]\ufffd(z\ufffd\ufffd\u0383o\u0017\u0013Wh\u0005\u001dK\ufffd\ufffd\ufffd[y\ufffd9l\u0002Fj\ufffd\ufffd\u000f\ufffd\ufffd\u0001^T\ufffd*\u0007<\ufffd\ufffd\ufffd\u0005\ufffdT\ufffd\ufffdl\ufffd;\ufffdK\ufffd/\u001cm\ufffd\ufffd8\ufffd\ufffd\ufffd\u04a8\ufffd@\ufffd\ufffdk8J\ufffd!\ufffd\u0218\u0004!\u0007\ufffd\ufffdn\ufffdT\ufffd\ufffd%\ufffd\u0013\ufffdT\u0007\ufffd\ufffd\ufffd\u0004\ufffd(\ufffdr\ufffd|S\ufffd\u0016E\ufffdr\u00c1z\u0013\u001c-\ufffd\ufffd\u0016:}\ufffd\ufffd@\ufffd\ufffd\ufffd}\ufffdj{D\ufffd\u0002\ufffd\ufffd\ufffdD\ufffd\ufffdZ\u0002\r\nM,]\ufffdJ\ufffd\ufffd\u001a\ufffd\ufffdg6\ufffd_(\ufffd\ufffd\ufffd\ufffd\ufffd\u0013<$\ufffdR\ufffd\u0011\u0005\u01fa*<\ufffd0[\ufffdi+0v\ufffd\ufffd0\u058bL\teSj\ufffdZAW\ufffd\ufffd\ufffdu\ufffd\ufffdE.\ufffd^\ufffd2\u0708\u0011\ufffd\ufffd\u05e4Tk\u0016\u067e4e\ufffd\u001b\u0001:Wl\ufffd\u001d\ufffd$Y\ufffd\u04a9HS\ufffd\ufffd\ufffd\ufffd\f-\ufffd4\ufffd\ufffdO\ufffd9\ufffdN`\ufffdG6W@h\ufffdSP\u0015I_e\ufffde\ufffd\u0014\ufffd\ufffd%\ufffd1t\ufffd:\ufffd\f\ufffd\u000b\ufffd\u0004]\ufffdK\ufffd\ufffd\ufffd \ufffd\ufffd\r\n\ufffda\u03e5h\ufffda\tK[\ufffd\ufffd/\ufffdH)r)R\ufffd]\ufffd\ufffdK\ufffd\ufffd\ufffdL\ufffdb\u001f\ufffd\ufffd4\ufffd\ufffdb\ufffd\u0528\ufffdZ\u007f\ufffd \ufffd*ry\ufffd\ufffd_i\ufffd\ufffdh}\u0016\ufffd\u001cc\ufffd\u0006\u3493\ufffd)\u0014G\u0715v;h\ufffd\u00043\ufffdY\ufffd\ufffdW\ufffd*\ufffdh&\u0016\ufffd\ufffd\ufffd\u000bl\ufffdY\u0015j\ufffdR\ufffd\ufffd-\fU\u0011\ufffdoW\ufffd\ufffd4y\ufffd?`.\u0017\ufffd\u054f}\u0014\ufffd\ufffdn\ufffdf%\ufffd5\ufffd\ufffda\ufffdc\udbf7\udc5bg Y\ufffd\ufffd8\ufffdx\ufffd\u001e\ufffd\u06f0\r\n\ufffdJ,\ufffdXdl\r\n\ufffdC\ufffd\u0017\u0003\u001f\ufffd\u06e7^iXg\ufffd\ufffd\ufffd\"@x\u902aSz\ufffddF\ufffd\ufffd\ufffd%]9\ufffdJ\ufffd\ufffd\ufffd9aB\ufffd\ufffd\ufffd\u0622\ufffd)\ufffdN0O\ufffd\u001a\u0018Z+\ufffdCd\ufffd\ufffd\ufffd\ufffd\ufffdNT\ufffd6\ufffdp\ufffdN\ufffd\u0004\ufffd\ufffdP\u001a\ufffd\ufffd\ufffd\ufffd\ufffd\u0011\ufffd,\ufffd\ufffd\u065c?\ufffd\ufffd\ufffd;\ufffd\ufffdl\ufffd\ufffd\ufffd\ufffd^\u0003/,TE\ufffd\ufffd[kX\u029a\u0001\ufffdp\u0016p\ufffdIS\ufffdP\u00028R\ufffdT\ufffd\ufffd l\u0012c\\\ufffd\ufffd|\u04e4\ufffd\ufffd5.we+\u0002\u0016v/Z\r\n\ufffd-\ufffd\ufffdvH\ufffd0\u007fGRDESg%`\ufffd\ufffdqx\ufffd^N\ufffd\u0002\ufffd|aT\u0004\ufffdn\ufffd\ufffdJr ;Y=V\ufffd\u00137\ufffdk\ufffd\ufffd(B\ufffd [\ufffd \ufffdU\u001d7x\ufffd\u000e!\ufffd \ufffd\u0001\ufffdF\ufffd\\q\ufffdP+\ufffd\ufffd\u0017\ufffd\u0010\ufffd\ufffd\u0002N\ufffd`8w_P\ufffd\ufffd\ufffd\ufffd\ufffd4\u001c=c,\ufffd\ufffd9\ufffd\"O'\ufffd\u000e\ufffdw\ufffd\ufffdpJp`t.+\ufffdR\ufffd\ufffd\u007f;E\ufffdP\t\ufffd\u01f3t\ufffd\ufffdFX\ufffd\ufffd\ufffd\ufffd4iQ8\u07dd\uc151=\ufffd`Q\ufffdT7bV0{\u0003y\u0141\ufffd\ufffdH.\ufffd\ufffdx\ufffd\u0006\ufffd\ufffdTtn\ufffd\ufffd\u012c6\ufffdM}M\u0405\u0010y8\u0012\ufffds\ufffd\ufffd\ufffd\ufffd\ufffdb\ufffd\ufffd\u00a9\ufffd\u01d8\ufffdd\t\ufffd2\ufffdl\ufffd\ufffd\ufffd]\ufffdE\u001c\ufffd\ufffd\ufffd\ufffdp_\ufffd\ufffd\ufffd \u0014-\ufffdXz\u007f#\u5b701\u000b\ufffd|\ufffd\ufffd\ufffd\ufffd\ufffd5A\u0010@\ufffd\ufffd:l&G\ufffdw.\ufffd\ufffd\u007fu\ufffdwE%\ufffdj\ufffd\u4036N9z\u000e<\u000e!1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd_\ufffd\ufffd\u0275\ufffdj\u07fb\ufffd\u00107\ufffd\ufffd\"\u001c\ufffd=U\u001d\ufffdY\ufffd\ufffd\ufffdD/\ufffd`\ufffd\ufffd*\r\n\ufffd\ufffdH \ufffd\u075a\ufffd\ufffd\u001c\ufffd0\ufffd0\ufffd\u001a\ufffd\ufffd\u001cT)&R\ufffdV\ufffd@\ufffd\ufffd\r\nZP\ufffdct\ufffdY`\ufffd\ufffdf\ufffd)\ufffd\ufffd^\ufffdK\ufffd<\ufffd\ufffd\ufffd\u0004\ufffd:\ufffd\u001a\ufffd\ufffd\ufffd4\ufffd\u076dl\ufffd\ufffdh\ufffd\ufffd\ufffd\u0017\u05ea\ufffd\ufffd|\ufffd\ufffd\u0017sBy\t\ufffdKl}\ufffd\\`\ufffd}\r\n\teD\ufffdEU\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdH \ufffd\ufffd\u0019\u000f\u000f\ufffd6>\ufffd\"WhFS\ufffd\u0012!\ufffd\ufffdq\ufffdr\ufffd\ufffd\u0306\ufffd\ufffd=E\ufffd\ufffd\u0013\u0017\ufffdA\u000e\ufffdI\ufffd\ufffdr\"5\ufffd\ufffdWwf#{\ufffdj\ufffd\ufffd\u0016a\u0018)k\ufffd;\ufffdy\ufffd\ufffd\\,\ufffd;/\ufffd\u0769\"i\ufffd\ufffd\ufffdZ\ufffdR\u0001\u001cG\ufffd\ufffd0\ufffd\u001cdP\ufffd\u0002o\ufffd\u001bq\ufffd\ufffd\ufffd%6\u0005AG$\u0007l\ufffd\r\n\ufffd\ufffd\u0191\ufffd\ufffd\u001f\ufffd\ufffdP\ufffd\ufffd\ufffd>U Q\ufffd\ufffd\ufffd\u0006\u0017\ufffd/\ufffdn\ufffd|\u000f\ufffd,j\u001eP\ufffdT\u0004\ufffd5k\ufffd\u015b\u000e'<\ufffd^\u0002-\ufffd\u0018-\ufffd\u0003\ufffd\ufffd\ufffd\ufffds^F \ufffd\u00ee\u0275\u0014m\ufffd\ufffd\ufffd\u007f\ufffd\u0002\ufffd\ufffd\u0002\ufffd\ufffd2\ufffd\ufffdTK2\ufffd!\ufffd\ufffdq\f\u0673\ufffd\u0004\ufffd)\u0013\ufffdJ\u0019Bm\ufffd\ufffd\ufffd\ufffd \ufffdD\ufffdZ\ufffd;\ufffd-\ufffd\ufffd\u0012\ufffd\ufffd$w^\ufffd\ufffd\u001cF\\\ufffd\ufffd\ufffdQ\ufffd\u0012\ufffd\ufffdaQ/D*\ufffd\ufffd*\ufffd%\ufffd\ufffd\u0019TY\ufffd(\ufffd\ufffdP\u000fr\ufffd ]\u05b6\ufffdE^\u01a2m\ufffd<\ufffd\ufffdj\ufffd\ufffd#\ufffd\ufffd\u0013\ufffd\ufffd\ufffdUt\u0012K\ufffd\u0014\u001c\ufffd6\u0017!\ufffd\ufffd%\u0014u\ufffd\ufffd-\ufffd\u0018&\ufffd\u0002\ufffd\ufffdy\ufffd\u0004\ufffd\u0005\ufffdx\ufffd\u0017\ufffd\ufffd\ufffdC\ufffd\uf132\ufffd\ufffd\ufffdN\u001b\u001f\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u0017qB\ufffd-\ufffdt\u03a5\ufffd\ufffdg<#L\ufffd8\ufffd\ufffd <\ufffd\ufffd\u02cer\u07e6\ufffd<4i`\ufffdW\f\ufffd\u001c\ufffd;\ufffd|\u001d\ufffd*V\ufffd\ufffd0\ufffd\u000b\ufffd\ufffd\u0202ts/@\ufffdkthx\ufffd\ufffd\ufffd \ufffdk\ufffd\ufffdE\u011a\u028el\ufffd\u0005zOA\ufffd\ufffd\ufffd\ufffd#[\ufffdX\ufffdpQ\ufffd\u00071\ufffd\ufffd\ufffd!\ufffd\ufffd\u0003\ufffd\ufffd\ufffd^\ufffd\ufffd\ufffdTD\ufffd\u001a\ufffd!Y\u0018\ufffd\u007f\u000e\u0015\u0011\ufffd\u0015n]I\ufffd\ufffdz*\ufffdEj\ufffd<\ufffd\"\ufffdW\ufffd\u0012'&\u016dD\ufffd\tF\u0007\ufffd\ufffd<\u0410M\ufffd\f\u0776\ufffd\ufffd/\ufffd\u0015\ufffdMA\ufffd).\ufffdB\ufffd\ufffd\ufffd\ufffdF\ufffd\ufffdvK\u0006\u0002\ufffd;\ufffd\r\n\u001c\ufffd\ufffd+s\ufffd\r\n<U\ufffd\ufffd\ufffd&n\u0012\u0574<\ufffd\u0001(\ufffd\ufffd\ufffd\u036dh\u040d\ufffd\u0019<\u000f\u00022\ufffd\ufffdL\u0005\ufffd\ufffd\ufffdsW\ufffd\u0278\ufffd[\ufffd\ufffd\u000b\ufffd\ufffdxB\ufffd\u041bK\ufffd\r\n\ufffd0J1\u0013$]b;\ufffd\u6f91\ufffd`&\ufffdn:F\u0634\ufffd\ufffd\u001e\t\ufffd\ufffd=\ufffd*]a\ufffd1\ufffd\ufffd:\f\ufffd\u000b\ufffd\ufffdn\ufffd0O)\u0006\u0010Qk\ufffd\ufffda\ufffd\u0003\ufffd\ufffd\ufffd\ufffdn,:\ufffdb$\ufffd\ufffdL\ufffd-\ufffd\u06af\u0014\ufffdQk\ufffd\u0014\ufffd\u0003H\u001b\ufffd\u0010\ufffd\u000fU\ufffd\ufffdU\ufffd8@\ufffd\u001a\ufffdz\ufffd^\ufffd,'\ufffd\t\ufffd\u001a\ufffdk@\ufffd4\u001a\r\n\ufffdaU\u9da0\u0557\ufffd\ufffdt\u0797\ufffd\u0002\ufffd\ufffdD\ufffd30\ufffd\ufffd!\ufffd\u0472\ua08b#\ufffd)\u0019\ufffd\ufffd\ufffd\u0005@\u0011(t.\ufffdAK\u007f\u0014\ufffd\u0017\ufffd\u0015w\ufffd\ufffd\ufffd\ufffd5\ufffd\ufffd\u001chE\ufffdy[c\u0019W3q,Rd-\u000f\u007f\ufffdx\ufffd\ufffd3\ufffd\ufffd\ufffdw\u0011f\ufffd1U%\ufffd\ufffd\ufffdc\u0002\ufffd\u000b\ufffd\r\n\\\ufffdK\ufffd\ufffd\ufffdq\ufffdH\ufffdh\ufffdOJG(\u00013\uc4de\ufffdq\ufffd\u0002x\ufffd\u0010\ufffd\ufffd\ufffdh\ufffdd\u0013\ufffd7\u007f\u0011\"\ufffd\u0374\ufffdE_\ufffdj\ufffdO`5\u0011e\u000fAz\u07be jdZZ\ufffd\ufffd\u0013.8Y,\ufffdC.\ufffd\ufffd\ufffd@\ufffd\ufffdx\\\ufffd\ufffdx\ufffdQ.\ufffd\ufffdI/\u05faR\u000f76\ufffd\ufffd<$JOUf\ufffd\ufffd=\u023a.\ufffd\ufffd\u0004\ufffdm\ufffd{\ufffd*\ufffd9\u009c\u001b\ufffd\ufffdN?\ufffd5\"\ufffdI\ufffd#0C\ufffd\ufffdC\"\t\u001a\ufffd\ufffd(\ufffd\"\ufffd\u0011\ufffd\u0006q\ufffd`\ufffdc$\ufffd\ufffd\u001dD.,\ufffd\u0011y\r\nb\ufffd4\ufffd\ufffd\ufffd\"\"\r\n\ufffdB\u00e5P\u001a)\u0002\ufffdP$u#\ufffd'O\ufffd<5J\ufffd:z\ufffdQ]\ufffd\u0013=\ufffd<E\ufffdh\u0004\ufffd\ufffd\ufffd\ufffd\ufffd\u02752?\ufffd\ufffd\ufffd\ufffd(\ufffd\u05f0\ufffd\ufffd\u0014f(C\ufffd\ufffd\ufffd\u0014\ufffd:\u0012M&aIRj\u02b9y\ufffd\ufffd\ufffdD\ufffd\ufffdo\ufffdD\ufffd\ufffd\ufffd\ufffd\u007f[\ufffd\ufffd\ufffd\ufffdj\ufffd7\ufffd`\ufffd2\ufffdon\u0355\ufffd\ufffd\ufffd\u0004\u00c7\u067d\ufffd8\u07de\ufffd\ufffdT\ufffdB\u0004uff\u0006i\ufffd\u07901z\ufffd@\ufffd$\ufffdOI\ufffd\ufffd\ufffd\ufffd\ufffd\u0004\ufffdG\ufffdk\ufffd\ufffdT\ufffd\ufffd\u001dd'\ufffdI\ufffdNI\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffdx#\ufffd^=`\ufffdX\ufffd5R6\ufffdf?\ufffd\ufffd\ufffd!\ufffdkF\ufffd\ufffdJ,3\ufffda\ufffd\u001e\ufffd\ufffd\u683ax\ufffdK\u0710=D;P\ufffd\ufffd\ufffdH\ufffd|\ufffd\ufffd\u0015$\r\n\ufffdcF3\ufffd\u0010A\\'\ufffd\ufffd\u000b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdx<\ufffd\ufffd\u001f\u000b\ufffdy\u001b\ufffd\ufffd\ufffd$ZmX:+\ufffdQb\ufffd\ufffd\ufffd\ufffd\ufffd\u0012\ufffd\ufffd\ufffd\u0001\ufffd/1\u01d9\ufffd\ufffd\ufffdZKabFT.\u0004\u0962\\\ufffd\ufffd\ufffd;\u0019k\ufffd\ufffd_\ufffdB\ufffd\ufffd%\ufffd5R\ufffd\ufffdJ\ufffd\u0005_I1\u0002\ufffd\u0015\u0012F\ufffd\ufffd\ufffd\u000b3B\ufffd9\ufffd\u0011\ufffd\ufffd\ufffd\u0012>y\u0006\u0004&\ufffd\ufffdi\u0004k\ufffd\ufffdF\ufffd\ufffd\u0007x\ufffdW\ufffd\u000b\ufffd??\ufffd\ufffd\ufffd\ufffdx\f\ufffd{@H\u0003y\u001bO\ufffd\ufffdoN\ufffd\ufffd\ufffd\r\n\ufffd\ufffd\ufffd\u001br\u27d4\u00108\ufffd\ufffd p\ufffd&^\u0013\ufffdk\\\ufffd\ufffd\u0015\ufffd\u00046\u0007\ufffd\u0012\\A\ufffd3\u0002\ufffd\ufffd\ufffdf\ufffd\u0019\u000b0\ufffd'\ufffd\ufffd\ufffdV\ufffd\ufffd\ufffd\ufffd\u0007\ufffdI?\ufffd\ufffd\ufffd {\ufffd?s4o\u0004\u001b\u0017\ufffd\u066a\ufffd\u068dsq\ufffdk:\ufffd7\ufffdl\ufffd#\u007fB\ufffd\ufffd\ufffd=%c4\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdS\ufffd\ufffd\u0004\ufffdH\ufffd>!\ufffdc?\ufffdY\ufffd\u0018\ufffdY&If\ufffd5\ufffde\ufffd\ufffd\u0012\ufffd+F\u0010Nq\u0005\ufffd\ufffd\u007f\ufffd\ufffd:\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJ\ufffd*~\u04ab,<\ufffd\ufffd\u000b'\u0018\ufffdo\u001d@c\ufffd\ufffd\t\u0006\ufffd_\ufffd\u0014\ufffdY\ufffd\ufffd*\ufffd~\ufffd\\qF\ufffd'\ufffd\u001e\ufffd\ufffdt\r\nO\ufffdbD$\ufffd5\ufffd$\ufffd\ufffd\ufffd\ufffd\u001a\ufffd\ufffd\ufffdn\ufffd\ufffdD0!\u001f\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u007f\ufffdu\u001b\u0004\u06921\ufffd\u001a2\u0004\u02b9R)\ufffd\ufffd\u001d\ufffd\u001c\u007f\ufffd\u0015\ufffd\u0004\ufffd\u0678\ufffd&\ufffd\t\ufffd\u001d\ufffd&\u001f\u001e\ufffd\u0006\ufffdg\ufffd\ufffd\ufffd\u001c\ufffdA\r\n\ufffd\ufffd\ufffd\ufffd3\ufffd\ufffd\ufffd\ufffd\ufffdd\ufffd\ufffd\ufffd\ufffdrL!!4A\ufffd\ufffd)\ufffd$\ufffd\ufffd\ufffds\ufffdRY\ufffd|&::\u001c\ufffd\ufffd\ufffd\ufffd\ufffd^kw\ufffdD\ufffd\ufffd\u000b\ufffd/\ufffd\ufffdP\ufffd\u001c\u0016g^\u001c\u001e:7\u0016*\u0017R\ufffd`\ufffd\ufffdA\ufffd\ufffd\ufffda\ufffd\ufffd\u001eQN%\ufffd\ufffd2]\u0670\ufffd\u0017\ufffd\u0014\ufffd.\ufffd\ufffd\u0013+\ufffd\ufffd\ufffd\ufffdr\ufffd\ufffd\ufffd\ufffd\ufffdN\ufffd\ufffd[\u000eR\\Q]?\ufffd0\ufffd3\ufffd\ufffdj\ufffd@\ufffdV`~\ufffd \ufffd\ufffd\u0010\ufffd\u0002\u065c\u0019\ufffd\ufffd(W\u0015\ufffd\ufffda\u0011p\ufffd\ufffd@n\r\n\ufffd}A\ufffd \ufffd\ufffd\f\ufffd\ufffd\ufffd\u00dcM\ufffd\ufffd\ufffd4\ufffd\ufffd\ufffd\u000e\ufffd\u0460\u05b93\ufffd\ufffd\ufffdHM\ufffd^\ufffds\ufffdH\ufffd\ufffd\r\n\ufffdy\u015d\ufffd\ufffd\ufffdp\fn\ufffd\ufffda\ufffdH\u001c\ufffd\ufffd\u0002\ufffdRa\ufffd\ufffdt}q\ufffd\ufffd\\\ufffd\ufffdU\ufffd-\u001e\u1e5b\ufffd%/\u0016\u04d8Q\ufffdI\\\ufffd\u07f9\ufffdg\ufffd\u6eb4/D\ufffd\ufffd \ufffdeD\ufffdA\ufffd\ufffd\t\ufffd\\\ufffd\\h\ufffd\ufffdR\r\no^\ufffd=\ufffd\u007f\ufffd\ufffd\ufffd\ufffd+\ufffd\ufffd\ufffdl\ufffd\u0019/]\ufffd\u0015\ufffd\ufffd\ufffd\ufffd\u064d\\kK\u001eC.\ufffd}\ufffdc\ufffd\ufffd?\ufffd;\ufffd\u0019\ufffd\u0017\u001f\ufffd\ufffd\u0209'*\ufffd\ufffd,\ufffd\ufffd\u001df\ufffd\ufffdm2\ufffdT#<\u001c\ufffdD[\ufffd\ufffd\ufffd'\ufffd\ufffd\ufffd\ufffd\ufffd~\ufffd\u014f\ufffdjq\u0003\ufffd\ufffd9\ufffd\ufffdo\ufffd $\ufffd\ufffd,\ufffd\ufffd\ufffd\u079c\ufffd\u0286\u0004\ufffd-P52\u019b\u062d\u001c\ufffd\u000e|\ufffdk\u0010[\r\n9e5\r\nK\f\ufffd\ufffd\ufffd=\ufffd\u0014\ufffdc#\ufffd\r\ni\u00068\ufffd\u0016\ufffd\ufffd\r\n\ufffd\ufffdC\ufffd\ufffda\ufffd)\ufffdq\ufffd)\ufffd\r\n\ufffd\ufffd\u0003(\u0001H\ufffd\ufffd\ufffd\u001ag`$\ufffdI\f\ufffd\ufffd1V\ufffd\ufffd\ufffdH4N\u01b0\ufffd\u0003\ufffd\u001d)\ufffdh\fE\u07baJy\ufffd\u001c\ufffd\ufffd\ufffd\u001b\ufffd\ufffd\ufffdjA[\ufffd\ufffd\f\ufffd4\ufffdr\ufffd(\u001c8\ufffd\ufffd\ufffd\ufffda\ufffd~\t\u000e\u0005\ufffd)zI\u001a,\ufffd\ufffd_<\ufffdww\ufffd\ufffd\ufffdP\ufffdU\ufffd+\ufffda\ufffd%\u0248\ufffd\ufffdS,\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?{>\ufffd\ufffdo\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd\u0002:0\ufffd\u03ac\ufffd\ufffd\ufffd\ufffd*y.$\u0019\u000bi\ufffd\ufffdW\u02f3\ufffd\ufffd\ufffd+\ufffd\ufffd%\u06b3\u00194fN\ufffd~EM\u00014.\u0014\ufffd\u001aua\ufffdL\u0372\u0010P\u0007\ufffd\u037ciV\ufffd\ufffd\ufffd\u0002U\ufffd\ufffd\u0016\ufffd\ufffd8\ufffd\u001cd\ufffd\ufffdVB)\r\nq\u0004\ufffd\ufffd\\\ufffd\u001b\ufffd\u0004 \ufffds\ufffd\u001c#\ufffdA\ufffd=DCzA\u04b9\ufffdJ(\r\n\ufffdW\u0004=\u06ef\u0002\ufffdg;\ufffd\ufffd\ufffd8:\ufffda\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0007\ufffd\ufffdz\u0018\ufffdl<\ufffd\ufffd+\u000f\ufffdfu\ufffd\ufffd\ufffd\u000b\ufffd\ufffd\u0017\ufffd\ufffd`z\ufffd\u9396\ufffd\ufffd\u0014\ufffd6\ufffdx\ufffd/\u0016B\ufffdo<\ufffdV\ufffdgs\ufffd?hv\u001d\ufffd\u0007m}i<p\u04c5\u001b`\ufffdL\ufffd\ufffd\ufffdu\ufffd\ufffd\u0001\ufffd\u000e\ufffd2\u0007\ufffd\ufffd\r\n\u0014\ufffdh\u0013\ufffd\ufffd\ufffd\u001eb\ufffd\ufffd\ufffds\u0003NR\ufffdT\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd6\u001d\u0004\r\n6\ufffd\ufffd\u072a\ufffdO\ufffdju\ufffd{cvw\u007f\ufffdU\ufffd\u0011&\ufffdV\ufffdxs\ufffd\ufffd\u00be\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u000f?y\ufffd\u0016Y\u01bc\ufffdRa\u0018\ufffd'\ufffd/\ufffd\ufffd\u017f\ufffd\ufffd\u0010lM\fW\ufffd@\ufffdt\u0018\ufffd\u0006Lt\ufffd\u000e\ufffdm\u0004q;\ufffd&\ufffd1\ufffd\ufffd\ufffdS\ufffdX\"\u0005\ufffd\ufffd\ufffd\u000e\u0002\ufffd3/^\ufffd\u000b\ufffd\ufffdO&}\ufffd\ufffd\u001e\ufffds\ufffd\ufffd\u0007\ufffd\ufffd\ufffd\u001e\ufffd\ufffd\u007f1\u0006\ufffd\ufffd\ufffdL\ufffd\u0019\ufffd\u0012\ufffd7\ufffd1\ufffd\ufffdv\ufffd\u0011_\ufffd5t3\ufffd8JY\ufffdQ\u065b6&s\ufffdo\ufffd\ufffd\ufffdKx\ufffd\ufffd\ufffd\u0015\ufffdG\ufffd1\"\u046d{;\ufffd\ufffd\ufffd\ufffd3{\ufffd\ufffd\u001emo]\ufffdG\ufffd[\ufffd=\ufffd\ufffdZ\u04e3\ufffd\u000e=\ufffd\u030e\u001c\ufffd\ufffd.f\ufffd\ufffdu\ufffd\ufffd\ufffd\ufffd\ufffd4\ufffd{U\ufffd\ufffd\ufffd${\u0531[0P%N \ufffd\ufffd]\ufffd\ufffd\tu\ufffd1wn\ufffd6\ufffd+h\r\n^\ufffdj\ufffd!\ufffd1\u0019\u0006?,\ufffdk\u0002m\ufffd\ufffd\ufffd\u001b\ufffdx\ufffd]io\ufffdKt\ufffd\ufffd\ufffd\ufffd\ufffd\u001f\ufffd\u0001\ufffd\ufffd\ufffd\ufffdn\ufffd\ufffd2*\ufffd\ufffd\ufffd\ufffdg\ufffd\ufffd$\u0001O\ufffd\ufffd;\ufffd\ufffd{\ufffd{\ufffd\ufffd\ufffd\ufffd\u001f\ufffd\ufffdn\ufffd\ufffdvp)\ufffd}\r\nX\ufffd\ufffdt\ufffd\ufffd7~ykl\ufffd\ufffd\ufffd\u0011|\ufffd\ufffdY\ufffd`Z\ufffd\ufffd3|\ufffdd\ufffd\ufffd\ufffd\ufffd\u0013j@\ufffd\"\ufffdN\ufffdo\ufffd\ufffd&p\ufffd\fG\ufffd\ufffd\ufffd\ufffd2\ufffd\ufffd\ufffd\ufffd\ufffd\u07e3\u0004R\ufffd<DZ\u001ar\ufffd\r\n\ufffdS\ufffdP\ufffd\ufffdx\u0007\ufffd\u000f\ufffdg\ufffd\ufffd\ufffd\ufffdY6\ufffdg\u0319\ufffdj\u0003hL@\ufffdE%\ufffd\u02e7\u007f\ufffd\ufffd\ufffd\ufffd\ufffd\u076a\ufffd\ufffd&vXv\ufffd\ufffd\ufffd\u00036,\ufffd\ufffd\ufffd\u0002  \ufffd\ufffd\u0003 E\ufffd\ufffd\ufffd5~\u0001 \r\n0\r\n\r\n```\r\n#### Expected result\r\n\r\nconsole will print a html just like:\r\n\r\n```html\r\nGET / HTTP/1.1\r\nHost: www.wireshark.org:8080\r\nUser-Agent: curl/7.46.0\r\nAccept: */*\r\nConnection: close\r\nAccept-Encoding: chunked, gzip\r\n\r\nHTTP/1.1 200 OK\r\nServer: cloudflare-nginx\r\nDate: Wed, 06 Jan 2016 20:42:10 GMT\r\nContent-Type: text/html\r\nTransfer-Encoding: chunked\r\nConnection: close\r\nSet-Cookie: __cfduid=d8d37b52eaa3137bdfd7fd67a4ffc8a7a1452112929; expires=Thu, 05-Jan-17 20:42:09 GMT; path=/; domain=.wireshark.org; HttpOnly\r\nX-Frame-Options: SAMEORIGIN\r\nStrict-Transport-Security: max-age=31536000;\r\nX-Slogan: It's a great product with a great story to tell. I'm pumped!\r\nX-Mod-Pagespeed: 1.9.32.11-7550\r\nVary: Accept-Encoding\r\nCache-control: max-age=0, no-cache, no-store\r\nX-Slogan: Go deep.\r\nCF-RAY: 260a3f709d7b0761-AMS\r\nContent-Encoding: gzip\r\n\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n```\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n[http-chunked-gzip.zip](https://github.com/secdev/scapy/files/5011931/http-chunked-gzip.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2742", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2742/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2742/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2742/events", "html_url": "https://github.com/secdev/scapy/issues/2742", "id": 669750454, "node_id": "MDU6SXNzdWU2Njk3NTA0NTQ=", "number": 2742, "title": "TypeError when opening malformed pcap", "user": {"login": "Google-Autofuzz", "id": 27442508, "node_id": "MDQ6VXNlcjI3NDQyNTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/27442508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Google-Autofuzz", "html_url": "https://github.com/Google-Autofuzz", "followers_url": "https://api.github.com/users/Google-Autofuzz/followers", "following_url": "https://api.github.com/users/Google-Autofuzz/following{/other_user}", "gists_url": "https://api.github.com/users/Google-Autofuzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Google-Autofuzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Google-Autofuzz/subscriptions", "organizations_url": "https://api.github.com/users/Google-Autofuzz/orgs", "repos_url": "https://api.github.com/users/Google-Autofuzz/repos", "events_url": "https://api.github.com/users/Google-Autofuzz/events{/privacy}", "received_events_url": "https://api.github.com/users/Google-Autofuzz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T12:09:38Z", "updated_at": "2020-08-01T12:13:00Z", "closed_at": "2020-08-01T12:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nScapy crashes when opening a malformed pcap file.\r\n\r\n#### Environment\r\n\r\n-   Scapy version:  scapy-2.4.4rc2.dev6 from a `pip3 install --upgrade git+git://github.com/secdev/scap`\r\n-   Python version: 3.5\r\n-   Operating System: Debian\r\n\r\n#### How to reproduce\r\n\r\n```python\r\n$ cat test.py\r\nimport sys\r\nimport scapy\r\nimport scapy.utils\r\n\r\nscapy.utils.rdpcap(sys.argv[1])\r\n$ python3 test.py sample.pcap\r\nTraceback (most recent call last):\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1139, in read_packet\r\n    p = self.LLcls(s)\r\nTypeError: 'NoneType' object is not callable\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 6, in <module>\r\n    scapy.utils.rdpcap(sys.argv[1])\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 951, in rdpcap\r\n    return fdesc.read_all(count=count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1154, in read_all\r\n    res = RawPcapReader.read_all(self, count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1094, in read_all\r\n    p = self.read_packet()\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1147, in read_packet\r\n    p = conf.raw_layer(s)\r\nTypeError: 'NoneType' object is not callable\r\n$\r\n```\r\n\r\n#### Actual result\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1139, in read_packet\r\n    p = self.LLcls(s)\r\nTypeError: 'NoneType' object is not callable\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 6, in <module>\r\n    scapy.utils.rdpcap(sys.argv[1])\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 951, in rdpcap\r\n    return fdesc.read_all(count=count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1154, in read_all\r\n    res = RawPcapReader.read_all(self, count)\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1094, in read_all\r\n    p = self.read_packet()\r\n  File \"/home/user/ven/lib/python3.8/site-packages/scapy/utils.py\", line 1147, in read_packet\r\n    p = conf.raw_layer(s)\r\nTypeError: 'NoneType' object is not callable\r\n```\r\n\r\n#### Expected result\r\n\r\nNot a crash.\r\n\r\n#### Related resources\r\n\r\n[sample.pcap.zip](https://github.com/secdev/scapy/files/5006905/sample.pcap.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2740", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2740/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2740/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2740/events", "html_url": "https://github.com/secdev/scapy/issues/2740", "id": 669372590, "node_id": "MDU6SXNzdWU2NjkzNzI1OTA=", "number": 2740, "title": "the `sendp` function didn't work when send packets in channel 12 and 13 in python3 but work well in python2(I am usingpython3.7.7)", "user": {"login": "AmandaYaoYao", "id": 33818798, "node_id": "MDQ6VXNlcjMzODE4Nzk4", "avatar_url": "https://avatars0.githubusercontent.com/u/33818798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmandaYaoYao", "html_url": "https://github.com/AmandaYaoYao", "followers_url": "https://api.github.com/users/AmandaYaoYao/followers", "following_url": "https://api.github.com/users/AmandaYaoYao/following{/other_user}", "gists_url": "https://api.github.com/users/AmandaYaoYao/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmandaYaoYao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmandaYaoYao/subscriptions", "organizations_url": "https://api.github.com/users/AmandaYaoYao/orgs", "repos_url": "https://api.github.com/users/AmandaYaoYao/repos", "events_url": "https://api.github.com/users/AmandaYaoYao/events{/privacy}", "received_events_url": "https://api.github.com/users/AmandaYaoYao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T03:26:03Z", "updated_at": "2020-08-17T13:47:42Z", "closed_at": "2020-08-17T13:47:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reproduce steps:\r\n\r\n* set the wireless network card\r\n\r\n```\r\nifconfig wlan0 down\r\niw dev set wlan0 set type monitor\r\nifconfig wlan0 up\r\niw dev set wlan0 set channel 12\r\n```\r\n\r\n* send pkt\r\n\r\n```\r\nPAD_PKT = Padding(\"\\x00\"*1000)\r\n\r\nclass Dot11Packet(object):\r\n    def __init__(self, addr1, addr2, addr3, subtyp=0):\r\n        self.rt = RadioTap(present='Flags+Rate+Channel+dBm_AntSignal+Antenna')\r\n        self.dot11hdr = Dot11(type=\"Data\", subtype=subtyp, addr1=addr1, addr2=addr2, addr3=addr3)\r\n        self.data = self.rt / self.dot11hdr  # / Dot11QoS()\r\n        self.recv_mac = addr1\r\n        self.trans_mac = addr2\r\n        self.dst_mac = addr2\r\n\r\n    def __str__(self):\r\n        return str(self.data[RadioTap].payload)  # RadioTap information is only useful while sending (in monitor mode).\r\n\r\n\r\ndef data_pkt(subtype=0):\r\n    \"\"\"\r\n    to send the data packets\r\n    @param iface: the iface to send packets\r\n    @param count: how many packets to be sent\r\n    @param inter: the internal of send packets\r\n    @return:\r\n    \"\"\"\r\n    pkt = Dot11Packet(addr1=ADDR1, addr2=ADDR2, addr3=ADDR3, subtyp=subtype)\r\n    # pkt = pkt.data / \"DATA PKTS\"\r\n    arp_packet = ARP()\r\n    arp = \\\r\n        LLC(dsap=0xaa, ssap=0xaa, ctrl=0x03) \\\r\n        / SNAP(OUI=0x000000, code=0x0806) \\\r\n        / arp_packet\r\n    pkt = pkt.data / arp\r\n    return pkt/PAD_PKT\r\n\r\n\r\nif __name__ == '__main__':\r\n    pkt = data_pkt()\r\n    sendp(pkt, iface=\"wlan0\", verbose=False, inter=0.01, count=1000)\r\n```\r\n\r\n* use another NIC to capture the packet, will find there are nothing captured in python3. However work well in pyhton2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2739", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2739/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2739/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2739/events", "html_url": "https://github.com/secdev/scapy/issues/2739", "id": 667503687, "node_id": "MDU6SXNzdWU2Njc1MDM2ODc=", "number": 2739, "title": "WARNING:scapy.runtime:Socket ", "user": {"login": "landdin", "id": 11097955, "node_id": "MDQ6VXNlcjExMDk3OTU1", "avatar_url": "https://avatars1.githubusercontent.com/u/11097955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/landdin", "html_url": "https://github.com/landdin", "followers_url": "https://api.github.com/users/landdin/followers", "following_url": "https://api.github.com/users/landdin/following{/other_user}", "gists_url": "https://api.github.com/users/landdin/gists{/gist_id}", "starred_url": "https://api.github.com/users/landdin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/landdin/subscriptions", "organizations_url": "https://api.github.com/users/landdin/orgs", "repos_url": "https://api.github.com/users/landdin/repos", "events_url": "https://api.github.com/users/landdin/events{/privacy}", "received_events_url": "https://api.github.com/users/landdin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T02:40:16Z", "updated_at": "2020-07-29T08:30:47Z", "closed_at": "2020-07-29T08:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "WARNING:scapy.runtime:Socket <scapy.arch.linux.L2ListenSocket object at 0x2aae5cc36d68> failed with 'Buffer size too small (16 instead of at least 20 bytes)'. It was closed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2738", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2738/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2738/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2738/events", "html_url": "https://github.com/secdev/scapy/issues/2738", "id": 667295658, "node_id": "MDU6SXNzdWU2NjcyOTU2NTg=", "number": 2738, "title": "Craft packages for stress", "user": {"login": "alexrebell", "id": 53250976, "node_id": "MDQ6VXNlcjUzMjUwOTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/53250976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexrebell", "html_url": "https://github.com/alexrebell", "followers_url": "https://api.github.com/users/alexrebell/followers", "following_url": "https://api.github.com/users/alexrebell/following{/other_user}", "gists_url": "https://api.github.com/users/alexrebell/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexrebell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexrebell/subscriptions", "organizations_url": "https://api.github.com/users/alexrebell/orgs", "repos_url": "https://api.github.com/users/alexrebell/repos", "events_url": "https://api.github.com/users/alexrebell/events{/privacy}", "received_events_url": "https://api.github.com/users/alexrebell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T18:55:22Z", "updated_at": "2020-07-28T21:06:41Z", "closed_at": "2020-07-28T21:06:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, comrades.\r\nPlease tell us what options are available for creating packages that will serve as testing for this test. I need to check my router, which is connected by wire and Wi-Fi. I need to send such packets to load my router to the failure state. Please share your knowledge.\r\nThank you very much.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2736", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2736/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2736/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2736/events", "html_url": "https://github.com/secdev/scapy/issues/2736", "id": 665226537, "node_id": "MDU6SXNzdWU2NjUyMjY1Mzc=", "number": 2736, "title": "isotpscanner.py --help test failing", "user": {"login": "gpotter2", "id": 10530980, "node_id": "MDQ6VXNlcjEwNTMwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10530980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpotter2", "html_url": "https://github.com/gpotter2", "followers_url": "https://api.github.com/users/gpotter2/followers", "following_url": "https://api.github.com/users/gpotter2/following{/other_user}", "gists_url": "https://api.github.com/users/gpotter2/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpotter2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpotter2/subscriptions", "organizations_url": "https://api.github.com/users/gpotter2/orgs", "repos_url": "https://api.github.com/users/gpotter2/repos", "events_url": "https://api.github.com/users/gpotter2/events{/privacy}", "received_events_url": "https://api.github.com/users/gpotter2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 514033136, "node_id": "MDU6TGFiZWw1MTQwMzMxMzY=", "url": "https://api.github.com/repos/secdev/scapy/labels/tests", "name": "tests", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-24T14:58:58Z", "updated_at": "2020-07-31T07:44:40Z", "closed_at": "2020-07-31T07:44:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This test is failing in some Python 2.7 / PyPy2 tests (it seems to be only on Travis with those two versions): (logs: [Py2.7](https://travis-ci.com/github/secdev/scapy/jobs/364646709), [PyPy2](https://travis-ci.com/github/secdev/scapy/jobs/364646710))\r\n\r\n```\r\n###(007)=[failed] Test show help\r\n\r\n>>> result = subprocess.Popen([sys.executable, \"scapy/tools/automotive/isotpscanner.py\", \"--help\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\r\n>>> std_out, std_err = result.communicate()\r\n>>> expected_output = plain_str(b'Scan for open ISOTP-Sockets.')\r\n>>> \r\n>>> assert not std_err\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n```\r\n\r\n@polybassa Sorry to bother, could you have a look at it ? Thanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2731", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2731/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2731/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2731/events", "html_url": "https://github.com/secdev/scapy/issues/2731", "id": 664103202, "node_id": "MDU6SXNzdWU2NjQxMDMyMDI=", "number": 2731, "title": "NTP Authenticator parsing broken for SHA MAC", "user": {"login": "Olegandr", "id": 29206582, "node_id": "MDQ6VXNlcjI5MjA2NTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/29206582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olegandr", "html_url": "https://github.com/Olegandr", "followers_url": "https://api.github.com/users/Olegandr/followers", "following_url": "https://api.github.com/users/Olegandr/following{/other_user}", "gists_url": "https://api.github.com/users/Olegandr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olegandr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olegandr/subscriptions", "organizations_url": "https://api.github.com/users/Olegandr/orgs", "repos_url": "https://api.github.com/users/Olegandr/repos", "events_url": "https://api.github.com/users/Olegandr/events{/privacy}", "received_events_url": "https://api.github.com/users/Olegandr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T23:10:00Z", "updated_at": "2020-07-25T11:13:52Z", "closed_at": "2020-07-25T11:13:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nParsing of NTP packet Authenticator, that uses SHA-based MAC, incorrectly identifies key id and message digest.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: 3.8\r\n-   Operating System: Ubuntu/Windows\r\n\r\n#### How to reproduce\r\n\r\nUse NTP packet capture with NTP Version 4 packets using SHA1, SHA256, SHA512 message authentication (produced by chrony or ntpd NTP server.)\r\nUse show() command to parse packet.\r\n\r\n#### Actual result\r\n\r\n###[ UDP ]###\r\n        sport     = 42270\r\n        dport     = ntp\r\n        len       = 80\r\n        chksum    = 0x731a\r\n###[ NTPHeader ]###\r\n           leap      = no warning\r\n           version   = 4\r\n           mode      = client\r\n           stratum   = 0\r\n           poll      = 7\r\n           precision = 32\r\n           delay     = 0.0\r\n           dispersion= 0.0\r\n           ref_id    = b''\r\n           ref       = 0.0\r\n           orig      = 0.0\r\n           recv      = 0.0\r\n           sent      = 1388821533.8530993\r\n###[ NTPv4 extensions ]###\r\n              \\extensions\\\r\n               |###[ Raw ]###\r\n               |  load      = '\\x00\\x00\\x00\\x0b'\r\n              \\mac       \\\r\n               |###[ Authenticator ]###\r\n               |  padding   = None\r\n               |  key_id    = 3452142173\r\n               |  dgst      = bf6b7ad02886ff45aa8b2eaf7ac78bc1\r\n\r\n\r\n#### Expected result\r\nKey ID should be 0x0000000b (11)\r\nDigest should be \r\ncdc3825dbf6b7ad02886ff45aa8b2eaf7ac78bc1\r\nThis also corresponds with RFC description, Wireshark output, performed server setup, actual message digest if calculated based on RFC.\r\n\r\n#### Related resources\r\nHex stream of example packets for easier import:\r\n1. client\r\n000c2962f268d094666d23750800450000640db640004011a519c0a80364c0a80305a51e007b0050731a2300072000000000000000000000000000000000000000000000000000000000000000000000000052c7bc1dda64b97d0000000bcdc3825dbf6b7ad02886ff45aa8b2eaf7ac78bc1\r\n2. server\r\nd094666d2375000c29a9635908004500006428ab400040118a27c0a80302c0a80364007ba51e00508818240407e70000000700000002c0a80301e2c27398f95cc96a52c7bc1dda64b97de2c273a7eb366588e2c273a7eb391be50000000b9a6178d82b4408adfd9cab87f04ad1c92b280171\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2729", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2729/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2729/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2729/events", "html_url": "https://github.com/secdev/scapy/issues/2729", "id": 663733875, "node_id": "MDU6SXNzdWU2NjM3MzM4NzU=", "number": 2729, "title": "vcan regression (Can, SocketCan) ", "user": {"login": "roumy", "id": 3192982, "node_id": "MDQ6VXNlcjMxOTI5ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3192982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roumy", "html_url": "https://github.com/roumy", "followers_url": "https://api.github.com/users/roumy/followers", "following_url": "https://api.github.com/users/roumy/following{/other_user}", "gists_url": "https://api.github.com/users/roumy/gists{/gist_id}", "starred_url": "https://api.github.com/users/roumy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roumy/subscriptions", "organizations_url": "https://api.github.com/users/roumy/orgs", "repos_url": "https://api.github.com/users/roumy/repos", "events_url": "https://api.github.com/users/roumy/events{/privacy}", "received_events_url": "https://api.github.com/users/roumy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-22T12:45:03Z", "updated_at": "2020-07-24T12:49:02Z", "closed_at": "2020-07-24T12:49:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to setup a virtual can interface vcan0 , i received an error message : \"No such Device\"\r\n\r\n```\r\n>>> load_layer('can')\r\n>>> load_contrib('cansocket')\r\nINFO: Configuration 'conf.contribs['CANSocket'] not found.\r\nINFO: Using native CANSocket.\r\nINFO: Specify 'conf.contribs['CANSocket'] = {'use-python-can': True}' to enable python-can CANSockets.\r\n>>> socket = CANSocket(iface='vcan0')\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/scapy/contrib/cansocket_native.py\", line 73, in __init__\r\n    self.ins.bind((self.channel,))\r\nOSError: [Errno 19] No such device\r\n```\r\nProblem happens with last git clone installed version 2.4.4rc1.dev13 while it works correctly on Version 2.4.3 \r\nI am running on debian 9.12 with Python 3.5.3\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2726", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2726/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2726/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2726/events", "html_url": "https://github.com/secdev/scapy/issues/2726", "id": 661794441, "node_id": "MDU6SXNzdWU2NjE3OTQ0NDE=", "number": 2726, "title": "TypeError: '<' not supported between instances of 'int' and 'str'", "user": {"login": "Kamuri-chan", "id": 27641366, "node_id": "MDQ6VXNlcjI3NjQxMzY2", "avatar_url": "https://avatars1.githubusercontent.com/u/27641366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kamuri-chan", "html_url": "https://github.com/Kamuri-chan", "followers_url": "https://api.github.com/users/Kamuri-chan/followers", "following_url": "https://api.github.com/users/Kamuri-chan/following{/other_user}", "gists_url": "https://api.github.com/users/Kamuri-chan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kamuri-chan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kamuri-chan/subscriptions", "organizations_url": "https://api.github.com/users/Kamuri-chan/orgs", "repos_url": "https://api.github.com/users/Kamuri-chan/repos", "events_url": "https://api.github.com/users/Kamuri-chan/events{/privacy}", "received_events_url": "https://api.github.com/users/Kamuri-chan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T12:59:29Z", "updated_at": "2020-07-20T13:07:58Z", "closed_at": "2020-07-20T13:06:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "After run the example code from documentation\r\n`sniff(iface=\"eth1\", prn=lambda x: x.show())`\r\nIt shows some informations, but when starts to show raw, the error is raised.\r\nThe full traceback:\r\n\r\n> TypeError                                 Traceback (most recent call last)\r\n><ipython-input-7-bb34b7219504> in <module>\r\n>----> 1 sniff(\"Atheros L1 Gigabit Ethernet 10/100/1000Base-T Controller\", prn=lambda x: x.show())\r\n>\r\n>~\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\scapy\\sendrecv.py in sniff(*args, **kwargs)\r\n>    970 def sniff(*args, **kwargs):\r\n>    971     sniffer = AsyncSniffer()\r\n>--> 972     sniffer._run(*args, **kwargs)\r\n>    973     return sniffer.results\r\n>    974\r\n>\r\n>~\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\scapy\\sendrecv.py in _run(self, count, store, offline, prn, >lfilter, L2socket, timeout, opened_socket, stop_filter, iface, started_callback, session, session_args, session_kwargs, *arg, **karg)\r\n>    925                     session.on_packet_received(p)\r\n>    926                     # check\r\n>--> 927                     if (stop_filter and stop_filter(p)) or \\\r\n>    928                             (0 < count <= session.count):\r\n>    929                         self.continue_sniff = False\r\n>\r\n>TypeError: '<' not supported between instances of 'int' and 'str'\r\n\r\nI'm using Scapy 2.4.3 with Python 3.8.3 and Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2722", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2722/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2722/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2722/events", "html_url": "https://github.com/secdev/scapy/issues/2722", "id": 660765376, "node_id": "MDU6SXNzdWU2NjA3NjUzNzY=", "number": 2722, "title": "adding a metadata field to the packet in order to match it on the openflow switch table.", "user": {"login": "Abdullahalshra3a", "id": 39274124, "node_id": "MDQ6VXNlcjM5Mjc0MTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/39274124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abdullahalshra3a", "html_url": "https://github.com/Abdullahalshra3a", "followers_url": "https://api.github.com/users/Abdullahalshra3a/followers", "following_url": "https://api.github.com/users/Abdullahalshra3a/following{/other_user}", "gists_url": "https://api.github.com/users/Abdullahalshra3a/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abdullahalshra3a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abdullahalshra3a/subscriptions", "organizations_url": "https://api.github.com/users/Abdullahalshra3a/orgs", "repos_url": "https://api.github.com/users/Abdullahalshra3a/repos", "events_url": "https://api.github.com/users/Abdullahalshra3a/events{/privacy}", "received_events_url": "https://api.github.com/users/Abdullahalshra3a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-19T11:01:43Z", "updated_at": "2020-07-19T15:32:05Z", "closed_at": "2020-07-19T15:32:04Z", "author_association": "NONE", "active_lock_reason": null, "body": " Dear All,\r\nI am using Scapy to add a metadata field to the pkt Scapy . I use mininet as a platform to launch my network simulation.\r\nIn fact, I try to  match it on the openflow switch table. But, nothing happens. Could you please guide me , what can I do or what should I learn ?\r\n\r\nwhen I send the pkt I can see the metadata field on the sender(xterm) \r\nBut, I see the metadata field as a Raw with sent data field on the controller, Wireshark or the destination host. \r\n \r\nI use the following on the sender\r\n```\r\nfrom scapy.all import *\r\nfrom datetime import datetime\r\nclass Metadata(Packet):\r\n    name = \"Metadata\"\r\n    fields_desc = [ XByteField(\"metadata\", 1) ] \r\n\r\ndef generatePackets():\r\n      if len(sys.argv) != 4:\r\n        print \"Usage: arping2tex <net>\\n eg: arping2text 192.168.1.0/24\"\r\n        sys.exit(1)\r\n      src= sys.argv[1]\r\n      dst= sys.argv[2]\r\n      x = int(sys.argv[3])\r\n      ip=IP(src= src, dst= dst)\r\n      metadata = Metadata(metadata = 200)\r\n      udp=UDP(sport= 2235, dport=5546)#,\r\n      data = datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S.%f')[:-3]\r\n      pkt = (ip/udp/metadata/data)\r\n      print pkt.show() / show2()\r\n      send(pkt, count = x)   \r\n    \r\nif __name__ == '__main__':\r\n    generatePackets()\r\n```\r\n\r\n\r\n\r\n\r\n-   Scapy \r\n-   Python version: 2.7\r\n-   Operating System:  mininet, ryu, linux 18.4`\r\n\r\nFinally, please accept my apology if my question is not proper.\r\nA.Soliman", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2721", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2721/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2721/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2721/events", "html_url": "https://github.com/secdev/scapy/issues/2721", "id": 659219363, "node_id": "MDU6SXNzdWU2NTkyMTkzNjM=", "number": 2721, "title": "Corner case in scapy.utils.corrupt_bits()", "user": {"login": "Chamaeleon-", "id": 5526614, "node_id": "MDQ6VXNlcjU1MjY2MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5526614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chamaeleon-", "html_url": "https://github.com/Chamaeleon-", "followers_url": "https://api.github.com/users/Chamaeleon-/followers", "following_url": "https://api.github.com/users/Chamaeleon-/following{/other_user}", "gists_url": "https://api.github.com/users/Chamaeleon-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chamaeleon-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chamaeleon-/subscriptions", "organizations_url": "https://api.github.com/users/Chamaeleon-/orgs", "repos_url": "https://api.github.com/users/Chamaeleon-/repos", "events_url": "https://api.github.com/users/Chamaeleon-/events{/privacy}", "received_events_url": "https://api.github.com/users/Chamaeleon-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-17T12:33:59Z", "updated_at": "2020-07-20T09:13:49Z", "closed_at": "2020-07-20T09:13:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Brief description\r\nFunction `scapy.utils.corrupt_bits()` can't flip less than one bit, even on low percentages\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `3.7.7`\r\n-   Operating System: `Ubuntu 18.04 LTS`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\nCall `corrupt_bits(\"hello\")` 5 times.\r\nCall `corrupt_bits(\"hello\", p=0.00001)` 5 times.\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n You will see every time occurs a bit flip with default percentage of `p=0.01` and also with `p=0.00001`\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\nIt should be possible to get 0 bit flips (important in small strings):\r\nhttps://github.com/secdev/scapy/blob/349259209d4f6292a9644e68a9aced300f32e623/scapy/utils.py#L910 should be altered to         `n = max(0, int(s_len * p))`\r\n\r\nOR\r\n\r\nhttps://github.com/secdev/scapy/blob/349259209d4f6292a9644e68a9aced300f32e623/scapy/utils.py#L906 should be altered to     `\"\"\"Flip a given percentage (at least one bit) or number of bits from a string\"\"\"`\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2720", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2720/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2720/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2720/events", "html_url": "https://github.com/secdev/scapy/issues/2720", "id": 659131915, "node_id": "MDU6SXNzdWU2NTkxMzE5MTU=", "number": 2720, "title": "Scapy MQTT5", "user": {"login": "ivanv6", "id": 25437300, "node_id": "MDQ6VXNlcjI1NDM3MzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/25437300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanv6", "html_url": "https://github.com/ivanv6", "followers_url": "https://api.github.com/users/ivanv6/followers", "following_url": "https://api.github.com/users/ivanv6/following{/other_user}", "gists_url": "https://api.github.com/users/ivanv6/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanv6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanv6/subscriptions", "organizations_url": "https://api.github.com/users/ivanv6/orgs", "repos_url": "https://api.github.com/users/ivanv6/repos", "events_url": "https://api.github.com/users/ivanv6/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanv6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T10:40:04Z", "updated_at": "2020-07-23T21:23:33Z", "closed_at": "2020-07-23T21:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all, is MQTT version 5 supported by scapy? By checking the documentation, only MQTT v3.1.1 seems to be supported. Thanks a lot", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2717", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2717/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2717/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2717/events", "html_url": "https://github.com/secdev/scapy/issues/2717", "id": 658162024, "node_id": "MDU6SXNzdWU2NTgxNjIwMjQ=", "number": 2717, "title": "Scapy 2.4.4", "user": {"login": "gpotter2", "id": 10530980, "node_id": "MDQ6VXNlcjEwNTMwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10530980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpotter2", "html_url": "https://github.com/gpotter2", "followers_url": "https://api.github.com/users/gpotter2/followers", "following_url": "https://api.github.com/users/gpotter2/following{/other_user}", "gists_url": "https://api.github.com/users/gpotter2/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpotter2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpotter2/subscriptions", "organizations_url": "https://api.github.com/users/gpotter2/orgs", "repos_url": "https://api.github.com/users/gpotter2/repos", "events_url": "https://api.github.com/users/gpotter2/events{/privacy}", "received_events_url": "https://api.github.com/users/gpotter2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691057, "node_id": "MDU6TGFiZWwyNjc2OTEwNTc=", "url": "https://api.github.com/repos/secdev/scapy/labels/discussion", "name": "discussion", "color": "cc317c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-16T12:40:36Z", "updated_at": "2020-09-02T18:29:21Z", "closed_at": "2020-09-02T18:29:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This issue is to inform that we are (finally) planning on starting the release schedule of **2.4.4**.\r\n\r\nMaintainers, feel free to fill the list, which will be used for the final changelog. Users, feel free to _comment below_\r\n\r\n### TODO\r\n\r\nSee https://github.com/secdev/scapy/projects/5\r\n\r\n# Main Changes\r\n\r\n# Core\r\n\r\n- [776 commits to master](https://github.com/secdev/scapy/compare/v2.4.3...master) since this v2.4.3\r\n- fix how timestamps are measured on layer 3 (broken since 2.4.1)\r\n- drop DNET support (deprecated since 2.4.0)\r\n- Scapy will now use `libpcap` instead of `tcpdump` to compile the filters (`tcpdump` is still used to filter pcaps)\r\n- major changes to the online doc: add an automatically generated [API reference](https://scapy.readthedocs.io/en/latest/api/scapy.html) with visual representation of each layer, move to Sphinx 3.0.0, new layer-specific doc...\r\n- *BSD fixes\r\n- more doc to many functions\r\n\r\n# Layers\r\n\r\n- New layers (homeplug sg, smb2, NSH, RPL, ERSPAN, BFD, ROCE...)\r\n- TLS: TLS 1.3 support & many fixes\r\n- 802.11 improvements / WPA3 detection\r\n- Netflow 9 fixes\r\n- Major refactor & changes of the Automotive layers\r\n- HTTP changes\r\n- DHCPv6 fixes according to revision of the RFC\r\n - Bluetooth improvements (+BLE)\r\n - minor fixes to Radius, PPP, GTP, IPsec, CDP, VTP, HTTP/2, ...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2716", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2716/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2716/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2716/events", "html_url": "https://github.com/secdev/scapy/issues/2716", "id": 658064414, "node_id": "MDU6SXNzdWU2NTgwNjQ0MTQ=", "number": 2716, "title": "Missing Ethertype for 6loWPAN encapsulation (RFC7973) -> Feature Request", "user": {"login": "Chamaeleon-", "id": 5526614, "node_id": "MDQ6VXNlcjU1MjY2MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5526614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chamaeleon-", "html_url": "https://github.com/Chamaeleon-", "followers_url": "https://api.github.com/users/Chamaeleon-/followers", "following_url": "https://api.github.com/users/Chamaeleon-/following{/other_user}", "gists_url": "https://api.github.com/users/Chamaeleon-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chamaeleon-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chamaeleon-/subscriptions", "organizations_url": "https://api.github.com/users/Chamaeleon-/orgs", "repos_url": "https://api.github.com/users/Chamaeleon-/repos", "events_url": "https://api.github.com/users/Chamaeleon-/events{/privacy}", "received_events_url": "https://api.github.com/users/Chamaeleon-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-16T10:23:48Z", "updated_at": "2020-07-18T13:27:37Z", "closed_at": "2020-07-18T13:27:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Brief description\r\nEthertype 0xA0ED from 6loWPAN encapsulation in RFC7973 is missing in scapy\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `3.7.7`\r\n-   Operating System: `Ubuntu 18.04 LTS`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\nSniff some packets which use RFC7973 6loWPAN encapsulation. e.g. from RIOT-OS native 6loenc enabled networking example (possible setup is described in the testing setup of https://github.com/RIOT-OS/RIOT/pull/10667)\r\n\r\n#### Actual result\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\nscapys Packet.show() output of a sniffed packet\r\n```\r\n###[ Ethernet ]### \r\n  dst       = ff:ff:ff:ff:ff:ff\r\n  src       = 50:51:52:67:15:69\r\n  type      = 0xa0ed\r\n###[ Raw ]### \r\n     load      = '~;\\x02\\xf0\\x1f\\x90\\x1f\\x90\\x03Qtesttext2'`\r\n```\r\nYou can see scapy don't seem to recognize the Ethernet type and didn't try to decode the 6loWPAN header.\r\n#### Expected result\r\n\r\nWireshark decodes this to:\r\n `Frame(Ethernet(6lowpan(data)))` with 6lowpan decompressed to IPv6 and UDP headers.\r\nIt should be possible to do this in scapy too.\r\n\r\nLong form of the wireshark output:\r\n```\r\nFrame 339: 33 bytes on wire (264 bits), 33 bytes captured (264 bits)\r\nEthernet II, Src: 50:51:52:67:15:69 (50:51:52:67:15:69), Dst: Broadcast (ff:ff:ff:ff:ff:ff)\r\n    Destination: Broadcast (ff:ff:ff:ff:ff:ff)\r\n    Source: 50:51:52:67:15:69 (50:51:52:67:15:69)\r\n    Type: 6LoWPAN (0xa0ed)\r\n6LoWPAN\r\n    IPHC Header\r\n    Source: fe80::5051:52ff:fe67:1569\r\n    Destination: ff02::2\r\n    UDP header compression\r\n    Source port: 8080\r\n    Destination port: 8080\r\n    UDP checksum: 0x0351\r\nInternet Protocol Version 6, Src: fe80::5051:52ff:fe67:1569, Dst: ff02::2\r\nUser Datagram Protocol, Src Port: 8080, Dst Port: 8080\r\nData (9 bytes)\r\n```\r\n\r\n\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\nhttps://tools.ietf.org/html/rfc7973\r\nhttps://www.iana.org/assignments/ieee-802-numbers/ieee-802-numbers.xhtml#ieee-802-numbers-1\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2710", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2710/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2710/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2710/events", "html_url": "https://github.com/secdev/scapy/issues/2710", "id": 654864895, "node_id": "MDU6SXNzdWU2NTQ4NjQ4OTU=", "number": 2710, "title": "scapy ", "user": {"login": "salwaalem", "id": 40567501, "node_id": "MDQ6VXNlcjQwNTY3NTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/40567501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salwaalem", "html_url": "https://github.com/salwaalem", "followers_url": "https://api.github.com/users/salwaalem/followers", "following_url": "https://api.github.com/users/salwaalem/following{/other_user}", "gists_url": "https://api.github.com/users/salwaalem/gists{/gist_id}", "starred_url": "https://api.github.com/users/salwaalem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salwaalem/subscriptions", "organizations_url": "https://api.github.com/users/salwaalem/orgs", "repos_url": "https://api.github.com/users/salwaalem/repos", "events_url": "https://api.github.com/users/salwaalem/events{/privacy}", "received_events_url": "https://api.github.com/users/salwaalem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T15:35:32Z", "updated_at": "2020-07-10T22:06:31Z", "closed_at": "2020-07-10T22:05:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to extract the tcp payload from my packets so I made this code\r\n\r\n#### Brief description\r\nI want to extract the tcp payload from my packets so I made this code:\r\n\r\n`   def tcp_len_list(s):\r\n       a = [len(p[TCP].payload) if p.haslayer(TCP) else None\r\n                for p in s]\r\n        return a\r\n`\r\n#### Environment\r\nOS: windows\r\n\r\n\r\n\r\n#### Actual result\r\n\r\n<!-- 10,10,12,12,44,44,127,127-->\r\n\r\n#### Expected result\r\n\r\n<!-- 10,10,12,12,0,0,44,44,0,0,127,127 -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2708", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2708/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2708/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2708/events", "html_url": "https://github.com/secdev/scapy/issues/2708", "id": 652221095, "node_id": "MDU6SXNzdWU2NTIyMjEwOTU=", "number": 2708, "title": "L2TP", "user": {"login": "smishin-zb", "id": 66356365, "node_id": "MDQ6VXNlcjY2MzU2MzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/66356365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smishin-zb", "html_url": "https://github.com/smishin-zb", "followers_url": "https://api.github.com/users/smishin-zb/followers", "following_url": "https://api.github.com/users/smishin-zb/following{/other_user}", "gists_url": "https://api.github.com/users/smishin-zb/gists{/gist_id}", "starred_url": "https://api.github.com/users/smishin-zb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smishin-zb/subscriptions", "organizations_url": "https://api.github.com/users/smishin-zb/orgs", "repos_url": "https://api.github.com/users/smishin-zb/repos", "events_url": "https://api.github.com/users/smishin-zb/events{/privacy}", "received_events_url": "https://api.github.com/users/smishin-zb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-07T10:50:08Z", "updated_at": "2020-07-07T10:50:31Z", "closed_at": "2020-07-07T10:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Things to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `scapy version and/or commit-hash`\r\n-   Python version: `e.g. 3.5`\r\n-   Operating System: `e.g. Minix 3.4`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2704", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2704/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2704/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2704/events", "html_url": "https://github.com/secdev/scapy/issues/2704", "id": 652032450, "node_id": "MDU6SXNzdWU2NTIwMzI0NTA=", "number": 2704, "title": "Unable to create a TLSClientHello packet.", "user": {"login": "Akuhyo", "id": 58407664, "node_id": "MDQ6VXNlcjU4NDA3NjY0", "avatar_url": "https://avatars1.githubusercontent.com/u/58407664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akuhyo", "html_url": "https://github.com/Akuhyo", "followers_url": "https://api.github.com/users/Akuhyo/followers", "following_url": "https://api.github.com/users/Akuhyo/following{/other_user}", "gists_url": "https://api.github.com/users/Akuhyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akuhyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akuhyo/subscriptions", "organizations_url": "https://api.github.com/users/Akuhyo/orgs", "repos_url": "https://api.github.com/users/Akuhyo/repos", "events_url": "https://api.github.com/users/Akuhyo/events{/privacy}", "received_events_url": "https://api.github.com/users/Akuhyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-07T06:11:09Z", "updated_at": "2020-07-07T10:08:16Z", "closed_at": "2020-07-07T08:04:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief Description\r\n\r\nMy main issue is that I'm not able to send a TLSClientHello packet with an SNI extension. I'm not even\r\nsure if I'm doing this correctly and I'm unable to find a reference that could help me.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `Latest`\r\n-   Python version: `3.7.5`\r\n-   Operating System: `Win10`\r\n\r\n#### How to Reproduce\r\n\r\n`packet = IP(src=\"192.168.1.88\"/TLS()/TLSClientHello()/TLS_Ext_ServerName()/ServerName(servername='mysite.com')`\r\n\r\n#### Actual Result\r\n\r\nWhenever I send the packet, I see it come through in Wireshark as a malformed ipv6 hop-by-hop packet.\r\n\r\n#### Expected Result\r\n\r\nI was expecting to see the packet go through as a TLSClientHello where I could see the SNI extension.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2702", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2702/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2702/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2702/events", "html_url": "https://github.com/secdev/scapy/issues/2702", "id": 651371149, "node_id": "MDU6SXNzdWU2NTEzNzExNDk=", "number": 2702, "title": "sniff() on prerecorded PCAP file with BPF filter applied on macOS", "user": {"login": "cfanatic", "id": 44242607, "node_id": "MDQ6VXNlcjQ0MjQyNjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/44242607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfanatic", "html_url": "https://github.com/cfanatic", "followers_url": "https://api.github.com/users/cfanatic/followers", "following_url": "https://api.github.com/users/cfanatic/following{/other_user}", "gists_url": "https://api.github.com/users/cfanatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfanatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfanatic/subscriptions", "organizations_url": "https://api.github.com/users/cfanatic/orgs", "repos_url": "https://api.github.com/users/cfanatic/repos", "events_url": "https://api.github.com/users/cfanatic/events{/privacy}", "received_events_url": "https://api.github.com/users/cfanatic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T09:02:26Z", "updated_at": "2020-09-05T17:19:32Z", "closed_at": "2020-09-05T17:19:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nFilter options for `sniff()` in offline mode with a prerecorded PCAP file do not seem to work on my macOS system. I also tried to run the ipython3 session with sudo, no luck either. The same command works on my Debian virtual machine, though! So I am sure it must be related to macOS somehow.\r\n\r\nFurther information: I can call `tcpdump` from the terminal successfully, but I don't have the libpcap library installed via homebrew.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: 3.7.3\r\n-   Operating System: macos 10.15.3\r\n\r\n#### How to reproduce\r\n\r\n```\r\nIn [11]: plist = sniff(filter=\"ip host 192.168.0.3 or ip host 192.168.0.4\", offline=\"data/vsomeip_client_cf12fb22.pcapng\")\r\nreading from PCAP-NG file data/vsomeip_client_cf12fb22.pcapng\r\n```\r\n\r\n#### Actual result\r\n\r\n```\r\nIn [12]: plist\r\nOut[12]: <Sniffed: TCP:0 UDP:0 ICMP:0 Other:0>\r\n```\r\n\r\n#### Expected result\r\n\r\n```\r\nIn [14]: plist\r\nOut[14]: <Sniffed: TCP:0 UDP:37 ICMP:0 Other:0>\r\n```\r\n\r\n#### Related resources\r\n\r\nhttps://github.com/cfanatic/vsomeip-testing/blob/master/trace/vsomeip_client_cf12fb22.pcapng\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2700", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2700/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2700/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2700/events", "html_url": "https://github.com/secdev/scapy/issues/2700", "id": 650063576, "node_id": "MDU6SXNzdWU2NTAwNjM1NzY=", "number": 2700, "title": "`gmt_unix_time` not set in `TLS13ClientHello` so `tls_session_update` fails", "user": {"login": "SurienDG", "id": 18398584, "node_id": "MDQ6VXNlcjE4Mzk4NTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/18398584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SurienDG", "html_url": "https://github.com/SurienDG", "followers_url": "https://api.github.com/users/SurienDG/followers", "following_url": "https://api.github.com/users/SurienDG/following{/other_user}", "gists_url": "https://api.github.com/users/SurienDG/gists{/gist_id}", "starred_url": "https://api.github.com/users/SurienDG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SurienDG/subscriptions", "organizations_url": "https://api.github.com/users/SurienDG/orgs", "repos_url": "https://api.github.com/users/SurienDG/repos", "events_url": "https://api.github.com/users/SurienDG/events{/privacy}", "received_events_url": "https://api.github.com/users/SurienDG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-02T16:30:31Z", "updated_at": "2020-07-13T19:31:30Z", "closed_at": "2020-07-11T09:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nIf I try to parse a TLS 1.3 client hello packet with `scapy.layers.tls.record.TLS` the message type of the packet is scapy.layers.tls.handshake.TLSClientHello instead of scapy.layers.tls.handshake.TLS13ClientHello.\r\n\r\nSo, I tried setting the advertised_tls_version in a session as shown below:\r\n\r\n```Python\r\ntls_session.advertised_tls_version = 772\r\ntls_packet = TLS(raw_packet.load, tls_session=tls_session)\r\n```\r\n\r\nThis causes it to correctly try to parse it as `TLS13ClientHello` however this fails because it calls the `tls_session_update` function for its super class (`TLSClientHello`) which expects `gmt_unix_time` to be set,\r\n\r\n![image](https://user-images.githubusercontent.com/18398584/86386142-632c8b00-bc5f-11ea-9d10-63f4ffe729cc.png)\r\n\r\nHowever, we know it isn't set because `gmt_unix_time` is not a field for `TLS13ClientHello` like it is for `TLSClientHello`:\r\n\r\n![image](https://user-images.githubusercontent.com/18398584/86386361-a4249f80-bc5f-11ea-9031-ec228deb8f99.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: 3.7\r\n-   Operating System: MacOS\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2698", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2698/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2698/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2698/events", "html_url": "https://github.com/secdev/scapy/issues/2698", "id": 648762572, "node_id": "MDU6SXNzdWU2NDg3NjI1NzI=", "number": 2698, "title": "Server key exchange with curve x25519 causes TLS to fail parsing", "user": {"login": "jurgonaut", "id": 24813491, "node_id": "MDQ6VXNlcjI0ODEzNDkx", "avatar_url": "https://avatars2.githubusercontent.com/u/24813491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jurgonaut", "html_url": "https://github.com/jurgonaut", "followers_url": "https://api.github.com/users/jurgonaut/followers", "following_url": "https://api.github.com/users/jurgonaut/following{/other_user}", "gists_url": "https://api.github.com/users/jurgonaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/jurgonaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jurgonaut/subscriptions", "organizations_url": "https://api.github.com/users/jurgonaut/orgs", "repos_url": "https://api.github.com/users/jurgonaut/repos", "events_url": "https://api.github.com/users/jurgonaut/events{/privacy}", "received_events_url": "https://api.github.com/users/jurgonaut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-01T08:00:34Z", "updated_at": "2020-07-09T16:08:59Z", "closed_at": "2020-07-09T16:08:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Brief description**\r\n\r\nWhen I try to parse a response from the server of type server key exchange and the elliptic curve is x25519, the TLS fails to parse the packet correctly and instead it parses the content as \"raw\".\r\n\r\n**Environment**\r\n\r\n- scapy version: 2.4.3\r\n- python version: python 3.7\r\n- os: Debian 10\r\n\r\n**How to reproduce**\r\n\r\nThe below example contains a raw server key exchange packet **with** elliptic curve x25519, as you can see the output didn't get parsed correctly.\r\n\r\n```\r\nfrom scapy.layers.tls.record import TLS\r\nfrom scapy.layers.tls.session import tlsSession\r\nimport binascii\r\n\r\nsession = tlsSession(connection_end=\"client\")\r\n\r\n# Raw hex data of a TLS Handshake - Server Key Exchange with x25519 elliptic curve\r\nhex_data = \"160303012c0c00012803001d202f19b3f5defbd65cfdcbb3583d4760ef74dde4144e01049a43d8a036df38ca15080401008e4e4afc21f612d2f024bb489940a733ea606ed36cba9c60b8479264dcb5f4a0f839d85fa02f0a4be087243e69e575af48917ba6dfda9b485311cd8fe0d7616ece9b216b7b878588c03d3ab90b9dc981f758588905307541c7d3ccb6655baf7bfb0628f3a0ac181729da6b7fcba3efdd43f5bbaec53cfa4dd512941ee1204a42cba8a989e724bd42ac2cb1373ddb54acba29ae45fd58047176e4cb623a9b301711b926d15103f5251f6a0288b04a644834a9843752bbe2f8554beffdbf412983456fcc38b9caabdf7cf9ea2c30bd72dc00cf2cf48f22cd7f17b2d22fb651facb772507cc2fb83301c0c8dd1c3b4f24f38f0c4c82d21d0fa5d1e0b260d545e701\"\r\n\r\npacket = TLS(binascii.unhexlify(hex_data), tls_session=session)\r\npacket.show()\r\n```\r\n\r\n**Output:**\r\n```\r\n###[ TLS ]### \r\n  type      = handshake\r\n  version   = TLS 1.2\r\n  len       = 300    [deciphered_len= 300]\r\n  iv        = b''\r\n  \\msg       \\\r\n   |###[ Raw ]### \r\n   |  load      = '\\x0c\\x00\\x01(\\x03\\x00\\x1d /\\x19\\xb3\\xf5\\xde\\xfb\\xd6\\\\\\xfd\\xcb\\xb3X=G`\\xeft\\xdd\\xe4\\x14N\\x01\\x04\\x9aC\\xd8\\xa06\\xdf8\\xca\\x15\\x08\\x04\\x01\\x00\\x8eNJ\\xfc!\\xf6\\x12\\xd2\\xf0$\\xbbH\\x99@\\xa73\\xea`n\\xd3l\\xba\\x9c`\\xb8G\\x92d\\xdc\\xb5\\xf4\\xa0\\xf89\\xd8_\\xa0/\\nK\\xe0\\x87$>i\\xe5u\\xafH\\x91{\\xa6\\xdf\\xda\\x9bHS\\x11\\xcd\\x8f\\xe0\\xd7an\\xce\\x9b!k{\\x87\\x85\\x88\\xc0=:\\xb9\\x0b\\x9d\\xc9\\x81\\xf7XX\\x89\\x050uA\\xc7\\xd3\\xcc\\xb6e[\\xaf{\\xfb\\x06(\\xf3\\xa0\\xac\\x18\\x17)\\xdak\\x7f\\xcb\\xa3\\xef\\xddC\\xf5\\xbb\\xae\\xc5<\\xfaM\\xd5\\x12\\x94\\x1e\\xe1 JB\\xcb\\xa8\\xa9\\x89\\xe7$\\xbdB\\xac,\\xb17=\\xdbT\\xac\\xba)\\xaeE\\xfdX\\x04qv\\xe4\\xcbb:\\x9b0\\x17\\x11\\xb9&\\xd1Q\\x03\\xf5%\\x1fj\\x02\\x88\\xb0JdH4\\xa9\\x847R\\xbb\\xe2\\xf8UK\\xef\\xfd\\xbfA)\\x83Eo\\xcc8\\xb9\\xca\\xab\\xdf|\\xf9\\xea,0\\xbdr\\xdc\\x00\\xcf,\\xf4\\x8f\"\\xcd\\x7f\\x17\\xb2\\xd2/\\xb6Q\\xfa\\xcbw%\\x07\\xcc/\\xb83\\x01\\xc0\\xc8\\xdd\\x1c;O$\\xf3\\x8f\\x0cL\\x82\\xd2\\x1d\\x0f\\xa5\\xd1\\xe0\\xb2`\\xd5E\\xe7\\x01'\r\n  mac       = b''\r\n  pad       = b''\r\n  padlen    = None\r\n\r\n```\r\n\r\nThe below example contains a raw server key exchange packet **without** elliptic curve x25519, as you can see the output was parsed correctly this time.\r\n\r\n```\r\nfrom scapy.layers.tls.record import TLS\r\nfrom scapy.layers.tls.session import tlsSession\r\nimport binascii\r\n\r\nsession = tlsSession(connection_end=\"client\")\r\n\r\n# Raw hex data of a TLS Handshake - Server Key Exchange without x25519 elliptic curve\r\nhex_data = \"160303014d0c0001490300174104037c180cd8e27443b4eef55c07989f6c0268860adc121f2845ed87ac87bdfce89769509e25cfaca3460faeb7c1f926ead95646a1d9bfe088d9b92dd16f2a76ce08040100625d09e562af6ec7f39e4f1fd8d2e82cf51e85d411c612ee1bceb5dd9bf195662cbc87e4854a6bc7587f4da20367477c772b319a77732bb284b0bf6baf36ebfd0c6152a4e4d55e7d165c93ad2af183446b053c21d98f3a71d948488eb47a224ee61a445911bb33ead597b19ec19cdf535f138d3f83f3b7e385a190136c810dbe82ec4c4ce69f48931a5aa41a629beabbede34b309cabb2fca254a8a14b9ecc23936a842a0e175b47d99351807e77beaff980340a4d45ab902bd126f72b4d0742b13381518e84f25739404f71a1551ab19f6f5889657c29b9d8cd9b91505eb6de8ab155c524b4574e8166cb2b64971ddabe621942866bfa4b63469bed9bb98b4a\"\r\n\r\npacket = TLS(binascii.unhexlify(hex_data), tls_session=session)\r\npacket.show()\r\n```\r\n\r\n**Output:**\r\n```\r\n###[ TLS ]### \r\n  type      = handshake\r\n  version   = TLS 1.2\r\n  len       = 333    [deciphered_len= 333]\r\n  iv        = b''\r\n  \\msg       \\\r\n   |###[ TLS Handshake - Server Key Exchange ]### \r\n   |  msgtype   = server_key_exchange\r\n   |  msglen    = 329\r\n   |  \\params    \\\r\n   |   |###[ Server ECDH parameters - Named Curve ]### \r\n   |   |  curve_type= named_curve\r\n   |   |  named_curve= secp256r1\r\n   |   |  pointlen  = 65\r\n   |   |  point     = '\\x04\\x03|\\x18\\x0c\\xd8\\xe2tC\\xb4\\xee\\xf5\\\\\\x07\\x98\\x9fl\\x02h\\x86\\n\\xdc\\x12\\x1f(E\\xed\\x87\\xac\\x87\\xbd\\xfc\\xe8\\x97iP\\x9e%\\xcf\\xac\\xa3F\\x0f\\xae\\xb7\\xc1\\xf9&\\xea\\xd9VF\\xa1\\xd9\\xbf\\xe0\\x88\\xd9\\xb9-\\xd1o*v\\xce'\r\n   |  \\sig       \\\r\n   |   |###[ TLS Digital Signature ]### \r\n   |   |  sig_alg   = sha256+rsaepss\r\n   |   |  sig_len   = 256\r\n   |   |  sig_val   = 'b]\\t\\xe5b\\xafn\\xc7\\xf3\\x9eO\\x1f\\xd8\\xd2\\xe8,\\xf5\\x1e\\x85\\xd4\\x11\\xc6\\x12\\xee\\x1b\\xce\\xb5\\xdd\\x9b\\xf1\\x95f,\\xbc\\x87\\xe4\\x85Jk\\xc7X\\x7fM\\xa2\\x03gG|w+1\\x9aws+\\xb2\\x84\\xb0\\xbfk\\xaf6\\xeb\\xfd\\x0caR\\xa4\\xe4\\xd5^}\\x16\\\\\\x93\\xad*\\xf1\\x83Dk\\x05<!\\xd9\\x8f:q\\xd9HH\\x8e\\xb4z\"N\\xe6\\x1aDY\\x11\\xbb3\\xea\\xd5\\x97\\xb1\\x9e\\xc1\\x9c\\xdfS_\\x13\\x8d?\\x83\\xf3\\xb7\\xe3\\x85\\xa1\\x90\\x13l\\x81\\r\\xbe\\x82\\xecLL\\xe6\\x9fH\\x93\\x1aZ\\xa4\\x1ab\\x9b\\xea\\xbb\\xed\\xe3K0\\x9c\\xab\\xb2\\xfc\\xa2T\\xa8\\xa1K\\x9e\\xcc#\\x93j\\x84*\\x0e\\x17[G\\xd9\\x93Q\\x80~w\\xbe\\xaf\\xf9\\x804\\nME\\xab\\x90+\\xd1&\\xf7+M\\x07B\\xb13\\x81Q\\x8e\\x84\\xf2W9@Oq\\xa1U\\x1a\\xb1\\x9foX\\x89e|)\\xb9\\xd8\\xcd\\x9b\\x91P^\\xb6\\xde\\x8a\\xb1U\\xc5$\\xb4WN\\x81f\\xcb+d\\x97\\x1d\\xda\\xbeb\\x19B\\x86k\\xfaKcF\\x9b\\xed\\x9b\\xb9\\x8bJ'\r\n  mac       = b''\r\n  pad       = b''\r\n  padlen    = None\r\n```\r\n\r\n**Edit**\r\nI noticed that this error happens only if I use the curve x25519 in the TLS_Ext_SupportedGroups extension.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2697", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2697/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2697/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2697/events", "html_url": "https://github.com/secdev/scapy/issues/2697", "id": 647479197, "node_id": "MDU6SXNzdWU2NDc0NzkxOTc=", "number": 2697, "title": "IPSec Authentication Header appears to be broken", "user": {"login": "kikones34", "id": 4391024, "node_id": "MDQ6VXNlcjQzOTEwMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4391024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kikones34", "html_url": "https://github.com/kikones34", "followers_url": "https://api.github.com/users/kikones34/followers", "following_url": "https://api.github.com/users/kikones34/following{/other_user}", "gists_url": "https://api.github.com/users/kikones34/gists{/gist_id}", "starred_url": "https://api.github.com/users/kikones34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kikones34/subscriptions", "organizations_url": "https://api.github.com/users/kikones34/orgs", "repos_url": "https://api.github.com/users/kikones34/repos", "events_url": "https://api.github.com/users/kikones34/events{/privacy}", "received_events_url": "https://api.github.com/users/kikones34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-29T15:41:06Z", "updated_at": "2020-08-08T15:06:19Z", "closed_at": "2020-08-08T15:05:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nThe Authentication Header (AH) class does not seem to properly update its fields like other type of packets do, and generates malformed packets.\r\nHappens both when used in conjunction wtih IPv4 and IPv6, with any upper layer protocol.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3.dev699`\r\n-   Python version: `3.8.3`\r\n-   Operating System: `Kali Linux 2020.2`\r\n\r\n#### How to reproduce\r\n\r\nAttempt to craft a full packet with an Authentication Header, for example, using IPv6 and a ping request:\r\n\r\n``` python\r\np = IPv6() / AH(icv=b'abcd') / ICMPv6EchoRequest()\r\n```\r\n\r\n#### Actual result\r\n\r\nThe `nh` and `payloadlen` fields of the header are not updated automatically, creating a malformed packet.\r\n\r\n``` python\r\n> p = IPv6() / AH(icv=b'abcd') / ICMPv6EchoRequest()\r\n> p.show2()\r\n###[ IPv6 ]### \r\n  version   = 6\r\n  tc        = 0\r\n  fl        = 0\r\n  plen      = 24\r\n  nh        = AH Header\r\n  hlim      = 64\r\n  src       = ::1\r\n  dst       = ::1\r\n###[ AH ]### \r\n     nh        = hopopt\r\n     payloadlen= 0\r\n     reserved  = 0\r\n     spi       = 0x0\r\n     seq       = 0\r\n     icv       = 61626364\r\n     padding   = b''\r\n###[ IP ]### \r\n        version   = 0\r\n        ihl       = 0\r\n        tos       = 0x0\r\n        len       = 0\r\n        id        = 1\r\n        flags     = \r\n        frag      = 0\r\n        ttl       = 64\r\n        proto     = hopopt\r\n        chksum    = None\r\n        src       = 127.0.0.1\r\n        dst       = 127.0.0.1\r\n        \\options   \\\r\n```\r\n\r\nWhen manually setting the `nh` and `payloadlen` fields to the correct value, the produced packet is correct when inspected in Wireshark, however, the `show2` function displays it wrongly:\r\n\r\n``` python\r\n> p = IPv6() / AH(nh=58, payloadlen=2, icv=b'abcd') / ICMPv6EchoRequest()\r\n> p.show2()\r\n###[ IPv6 ]### \r\n  version   = 6\r\n  tc        = 0\r\n  fl        = 0\r\n  plen      = 24\r\n  nh        = AH Header\r\n  hlim      = 64\r\n  src       = ::1\r\n  dst       = ::1\r\n###[ AH ]### \r\n     nh        = ipv6_icmp\r\n     payloadlen= 2\r\n     reserved  = 0\r\n     spi       = 0x0\r\n     seq       = 0\r\n     icv       = 61626364\r\n     padding   = b''\r\n###[ Raw ]### \r\n        load      = '\\x80\\x00\\x7f\\xbb\\x00\\x00\\x00\\x00'\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/4391024/86147756-11b6bb80-bafa-11ea-9ddf-1d9745876448.png)\r\n\r\n\r\n#### Expected result\r\n\r\nThe AH should function correctly when combined with other headers. The `nh` field should be automatically updated to the corresponding type. The `payloadlen` field should be updated according to the length of the `icv` field. Padding should also be automatically added when `icv` is not a multiple of 32-bit.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2695", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2695/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2695/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2695/events", "html_url": "https://github.com/secdev/scapy/issues/2695", "id": 645509393, "node_id": "MDU6SXNzdWU2NDU1MDkzOTM=", "number": 2695, "title": "Performance Problem with (too) many file descriptors / sockets", "user": {"login": "Chamaeleon-", "id": 5526614, "node_id": "MDQ6VXNlcjU1MjY2MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5526614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chamaeleon-", "html_url": "https://github.com/Chamaeleon-", "followers_url": "https://api.github.com/users/Chamaeleon-/followers", "following_url": "https://api.github.com/users/Chamaeleon-/following{/other_user}", "gists_url": "https://api.github.com/users/Chamaeleon-/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chamaeleon-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chamaeleon-/subscriptions", "organizations_url": "https://api.github.com/users/Chamaeleon-/orgs", "repos_url": "https://api.github.com/users/Chamaeleon-/repos", "events_url": "https://api.github.com/users/Chamaeleon-/events{/privacy}", "received_events_url": "https://api.github.com/users/Chamaeleon-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T12:10:13Z", "updated_at": "2020-07-01T08:08:46Z", "closed_at": "2020-07-01T08:08:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Select` can only handle 1024 file descriptors, makes 1024 sockets. With more sockets you will get an `ValueError: filedescriptor out of range in select()` in this line\r\nhttps://github.com/secdev/scapy/blob/cb13a5fa19d877924826cc5bb87599978cbe57cb/scapy/arch/linux.py#L379\r\nSince platform compatibility don't seem to be an issue here, I want to propose using `epoll` instead. \r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2693", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2693/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2693/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2693/events", "html_url": "https://github.com/secdev/scapy/issues/2693", "id": 643693108, "node_id": "MDU6SXNzdWU2NDM2OTMxMDg=", "number": 2693, "title": "Scapy cannot parse vendor IE well(it can just parse the Radiotap and the 802.11 header right in some way)", "user": {"login": "AmandaYaoYao", "id": 33818798, "node_id": "MDQ6VXNlcjMzODE4Nzk4", "avatar_url": "https://avatars0.githubusercontent.com/u/33818798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmandaYaoYao", "html_url": "https://github.com/AmandaYaoYao", "followers_url": "https://api.github.com/users/AmandaYaoYao/followers", "following_url": "https://api.github.com/users/AmandaYaoYao/following{/other_user}", "gists_url": "https://api.github.com/users/AmandaYaoYao/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmandaYaoYao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmandaYaoYao/subscriptions", "organizations_url": "https://api.github.com/users/AmandaYaoYao/orgs", "repos_url": "https://api.github.com/users/AmandaYaoYao/repos", "events_url": "https://api.github.com/users/AmandaYaoYao/events{/privacy}", "received_events_url": "https://api.github.com/users/AmandaYaoYao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T09:45:27Z", "updated_at": "2020-06-23T18:20:31Z", "closed_at": "2020-06-23T18:20:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my packet. The scapy cannot parse the probe response frame well when to parse the vendor ie. But other frame can parse well.\r\n[test.zip](https://github.com/secdev/scapy/files/4818568/test.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2689", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2689/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2689/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2689/events", "html_url": "https://github.com/secdev/scapy/issues/2689", "id": 641522907, "node_id": "MDU6SXNzdWU2NDE1MjI5MDc=", "number": 2689, "title": "ZigBee traffic not properly detected", "user": {"login": "beiqil", "id": 39597827, "node_id": "MDQ6VXNlcjM5NTk3ODI3", "avatar_url": "https://avatars3.githubusercontent.com/u/39597827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beiqil", "html_url": "https://github.com/beiqil", "followers_url": "https://api.github.com/users/beiqil/followers", "following_url": "https://api.github.com/users/beiqil/following{/other_user}", "gists_url": "https://api.github.com/users/beiqil/gists{/gist_id}", "starred_url": "https://api.github.com/users/beiqil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beiqil/subscriptions", "organizations_url": "https://api.github.com/users/beiqil/orgs", "repos_url": "https://api.github.com/users/beiqil/repos", "events_url": "https://api.github.com/users/beiqil/events{/privacy}", "received_events_url": "https://api.github.com/users/beiqil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-18T20:17:08Z", "updated_at": "2020-06-18T20:37:03Z", "closed_at": "2020-06-18T20:37:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Things to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n\r\n#### Brief description\r\n\r\nAfter loaded the example ZigBee captures listed [here](https://wiki.wireshark.org/SampleCaptures) (`zigbee-join-authenticate.pcap` after gunzipping. Download listed below.) with `rdpcap()` and use the `show()` method of each packet to display the details. The ZigBee protocol did not seem to get detected properly. Instead they are being decoded as `6LoWPAN` or did not get decoded at all (stay as raw).\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `51c6d80a6449ea3e987702bb654e8168b0334f24`\r\n-   Python version: `3.8.3`\r\n-   Operating System: `Fedora 32`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n```python\r\nfrom scapy.all import rdpcap\r\n\r\npcap = rdpcap('zigbee-join-authenticate.pcap')\r\nfor p in pcap:\r\n    p.show()\r\n```\r\n\r\n#### Actual result\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\nAll ZigBee packets didn't get decoded properly. Instead they are shown as 6LoWPAN or just raw despite the `layers` package does appear has ZigBee support.\r\n\r\n#### Expected result\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\nAll ZigBee packets should be decoded properly as ZigBee traffic.\r\n\r\n#### Related resources\r\n\r\nPCAP: https://wiki.wireshark.org/SampleCaptures?action=AttachFile&do=get&target=zigbee-join-authenticate.pcap.gz\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2684", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2684/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2684/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2684/events", "html_url": "https://github.com/secdev/scapy/issues/2684", "id": 639581560, "node_id": "MDU6SXNzdWU2Mzk1ODE1NjA=", "number": 2684, "title": "Scapy should stop parsing SSID values once it found one", "user": {"login": "giladbeeri", "id": 6613822, "node_id": "MDQ6VXNlcjY2MTM4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6613822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giladbeeri", "html_url": "https://github.com/giladbeeri", "followers_url": "https://api.github.com/users/giladbeeri/followers", "following_url": "https://api.github.com/users/giladbeeri/following{/other_user}", "gists_url": "https://api.github.com/users/giladbeeri/gists{/gist_id}", "starred_url": "https://api.github.com/users/giladbeeri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giladbeeri/subscriptions", "organizations_url": "https://api.github.com/users/giladbeeri/orgs", "repos_url": "https://api.github.com/users/giladbeeri/repos", "events_url": "https://api.github.com/users/giladbeeri/events{/privacy}", "received_events_url": "https://api.github.com/users/giladbeeri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T11:15:05Z", "updated_at": "2020-06-18T09:44:34Z", "closed_at": "2020-06-18T09:44:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a follow up to https://github.com/secdev/scapy/issues/2683,\r\nscapy parses the information element tags one by one, and updates the SSID every time it finds an SSID element.\r\nBut: The SSID element is always the first and should be only one instance of it per frame. So it doesn't make sense to update the SSID once it was already set.\r\nThe bug described in https://github.com/secdev/scapy/issues/2683, an incorrect parsing of an information element, resulting in a wrong SSID, could have been prevented (the SSID parsing issue, not the RSN parsing issue) if scapy wouldn't have overridden the SSID after it was set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2683", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2683/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2683/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2683/events", "html_url": "https://github.com/secdev/scapy/issues/2683", "id": 639421878, "node_id": "MDU6SXNzdWU2Mzk0MjE4Nzg=", "number": 2683, "title": "Inaccurate parsing of 802.11 element \"RSN Information\"", "user": {"login": "giladbeeri", "id": 6613822, "node_id": "MDQ6VXNlcjY2MTM4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6613822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giladbeeri", "html_url": "https://github.com/giladbeeri", "followers_url": "https://api.github.com/users/giladbeeri/followers", "following_url": "https://api.github.com/users/giladbeeri/following{/other_user}", "gists_url": "https://api.github.com/users/giladbeeri/gists{/gist_id}", "starred_url": "https://api.github.com/users/giladbeeri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giladbeeri/subscriptions", "organizations_url": "https://api.github.com/users/giladbeeri/orgs", "repos_url": "https://api.github.com/users/giladbeeri/repos", "events_url": "https://api.github.com/users/giladbeeri/events{/privacy}", "received_events_url": "https://api.github.com/users/giladbeeri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T07:01:03Z", "updated_at": "2020-06-25T14:18:07Z", "closed_at": "2020-06-25T14:18:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm parsing an 802.11 frame that contains some tag elements, specifically, \"RSN Information\" (48).\r\n\r\n\"RSN Information\" is parsed with a conditional field of PMKID, but I think the condition is not accurate, and in addition, there's another field afterwards called \"Group Management Cipher Suite\" (4 bytes).\r\nhttps://github.com/secdev/scapy/blob/master/scapy/layers/dot11.py#L880\r\n\r\n-   Scapy version: latest (https://github.com/secdev/scapy.git@f2a111e6d4821c199a0cf5f42bc5bb5dcbe6ff04)\r\n-   Python version: 3.8.2\r\n-   Operating System: Ubuntu 16.04#### How to reproduce\r\n\r\n#### Steps to Reproduce\r\n`python -c \"from scapy.all import rdpcap; f = rdpcap('scapy.pcap'); p = f[0]; beacon = p.getlayer(5); print(beacon.network_stats()['ssid'])\"`\r\n\r\n#### Actual result\r\n\r\n(some garbage which is data from the packet)\r\n\r\n`\u0016\u0001\u0015\\xdd\u0018P\\xf2\u0002\u0001\u0001\\x81\u0003\\xa4'\\xa4BT^a2/\u0001\u0004\\xdd\\xa0\\xc6\u0002\u0002\u0003`\r\n\r\n#### Expected result\r\n\r\nThe real SSID: `ROUTE-821E295`\r\n\r\n![correct_ssid](https://user-images.githubusercontent.com/6613822/84741881-6285ca80-afb8-11ea-8b2e-d56f568eb3eb.png)\r\n\r\n\r\n#### Related resources\r\n \r\nThe frame that reproduces the issue:\r\n\r\n[scapy.pcap.zip](https://github.com/secdev/scapy/files/4784765/scapy.pcap.zip)\r\n\r\nWireshark's parsing of the RSN Information element:\r\n\r\n\r\n![correct_rsn_info](https://user-images.githubusercontent.com/6613822/84741789-3d915780-afb8-11ea-9b0f-b4108ad4baae.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2682", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2682/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2682/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2682/events", "html_url": "https://github.com/secdev/scapy/issues/2682", "id": 639405176, "node_id": "MDU6SXNzdWU2Mzk0MDUxNzY=", "number": 2682, "title": "Inaccurate parsing of 802.11 element \"Country Information\"", "user": {"login": "giladbeeri", "id": 6613822, "node_id": "MDQ6VXNlcjY2MTM4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6613822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giladbeeri", "html_url": "https://github.com/giladbeeri", "followers_url": "https://api.github.com/users/giladbeeri/followers", "following_url": "https://api.github.com/users/giladbeeri/following{/other_user}", "gists_url": "https://api.github.com/users/giladbeeri/gists{/gist_id}", "starred_url": "https://api.github.com/users/giladbeeri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giladbeeri/subscriptions", "organizations_url": "https://api.github.com/users/giladbeeri/orgs", "repos_url": "https://api.github.com/users/giladbeeri/repos", "events_url": "https://api.github.com/users/giladbeeri/events{/privacy}", "received_events_url": "https://api.github.com/users/giladbeeri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T06:26:45Z", "updated_at": "2020-06-16T06:31:26Z", "closed_at": "2020-06-16T06:31:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm parsing an 802.11 frame that contains some tag elements, specifically, \"Country Information\" (7).\r\n\r\n\"Country Information\" is parsed with a conditional padding byte, which should exist in order to make the element length even, but the condition is the opposite of what needed (because `% 2` is truthy when the value is odd, so we want the condition to meet - be truthy - when the value is odd, not even):\r\nhttps://github.com/secdev/scapy/blob/master/scapy/layers/dot11.py#L917\r\nThe fix is to use `len % 2` (note: even with this fix, the SSID in the provided pcap still isn't parsed properly, but that's due to another bug, which is reported in another PR).\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: 3.8.2\r\n-   Operating System: Ubuntu 16.04#### How to reproduce\r\n\r\n#### Steps to Reproduce\r\n`python -c \"from scapy.all import rdpcap; f = rdpcap('scapy.pcap'); p = f[0]; beacon = p.getlayer(5); print(beacon.network_stats()['ssid'])\"`\r\n\r\n\r\n#### Actual result\r\n\r\n(some garbage which is data from the packet)\r\n\r\n`\u0018P\u0002\u0001\u0001\u0003'BT^a2/\u0001\u0004\u0002\u0002\u0003\u0017\u0017/RRRRRRRRRRRRRRRRRRRR`\r\n\r\n#### Expected result\r\n\r\nThe real SSID: `ROUTE-821E295`\r\n\r\n![correct_ssid](https://user-images.githubusercontent.com/6613822/84738725-197f4780-afb3-11ea-99f8-f38c8e86f163.png)\r\n\r\n\r\n#### Related resources\r\n \r\n[scapy.pcap.zip](https://github.com/secdev/scapy/files/4784765/scapy.pcap.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2680", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2680/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2680/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2680/events", "html_url": "https://github.com/secdev/scapy/issues/2680", "id": 638721913, "node_id": "MDU6SXNzdWU2Mzg3MjE5MTM=", "number": 2680, "title": "builtins mutated after importing scapy.arch", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T10:07:48Z", "updated_at": "2020-07-19T21:20:53Z", "closed_at": "2020-07-19T13:09:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nimporting scapy.layers.inet (or any module that imports scapy.config or scapy.arch) pollutes built-ins with a lot of things:\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: py2.7 and py3.7\r\n-   Operating System: Ubuntu 20.04 LTS\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n \r\n```python\r\nfrom six.moves import builtins\r\n\r\nold_keys = set(vars(builtins).keys())\r\nimport scapy.layers.inet\r\nnew_keys = set(vars(builtins).keys())\r\n\r\nprint(sorted(new_keys - old_keys))\r\nprint(six)\r\n```\r\n\r\noutput:\r\n```\r\n['ETH_P_8021Q', 'ETH_P_ALL', 'IFF_BROADCAST', 'IFF_DEBUG', 'IFF_LOOPBACK', 'IFF_NOARP', 'IFF_NOTRAILERS', 'IFF_POINTOPOINT', 'IFF_PROMISC', 'IFF_RUNNING', 'IFF_UP', 'L2ListenSocket', 'L2Socket', 'L3PacketSocket', 'LINUX', 'LOOPBACK_NAME', 'MTU', 'PACKET_ADD_MEMBERSHIP', 'PACKET_AUXDATA', 'PACKET_BROADCAST', 'PACKET_DROP_MEMBERSHIP', 'PACKET_FASTROUTE', 'PACKET_HOST', 'PACKET_KERNEL', 'PACKET_LOOPBACK', 'PACKET_MR_ALLMULTI', 'PACKET_MR_MULTICAST', 'PACKET_MR_PROMISC', 'PACKET_MULTICAST', 'PACKET_OTHERHOST', 'PACKET_OUTGOING', 'PACKET_RECV_OUTPUT', 'PACKET_RX_RING', 'PACKET_STATISTICS', 'PACKET_USER', 'Packet', 'Padding', 'RTF_REJECT', 'RTF_UP', 'SIOCGIFADDR', 'SIOCGIFCONF', 'SIOCGIFCOUNT', 'SIOCGIFFLAGS', 'SIOCGIFHWADDR', 'SIOCGIFINDEX', 'SIOCGIFNAME', 'SIOCGIFNETMASK', 'SIOCGSTAMP', 'SIOCSIFFLAGS', 'SIOCSIFLINK', 'SOL_PACKET', 'SO_ATTACH_FILTER', 'ScapyInvalidPlatformException', 'Scapy_Exception', 'SuperSocket', 'TP_STATUS_VLAN_VALID', 'VEthPair', 'absolute_import', 'array', 'attach_filter', 'compile_filter', 'conf', 'ctypes', 'get_alias_address', 'get_if', 'get_if_index', 'get_if_list', 'get_if_raw_addr', 'get_if_raw_hwaddr', 'get_iface_mode', 'get_last_packet_timestamp', 'get_working_if', 'in6_getifaddr', 'ioctl', 'os', 'plain_str', 'raw', 're', 'read_routes', 'read_routes6', 'scapy', 'select', 'set_iface_monitor', 'set_promisc', 'six', 'socket', 'struct', 'subprocess', 'time', 'tpacket_auxdata', 'warning']\r\n<module 'scapy.modules.six' from '/usr/share/python/osirium-virtualenv/lib/python2.7/site-packages/scapy/modules/six.pyc'>\r\n```\r\n\r\n#### Expected result\r\n```\r\n[]\r\nNameError: name 'six' is not defined\r\n```\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2678", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2678/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2678/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2678/events", "html_url": "https://github.com/secdev/scapy/issues/2678", "id": 637323299, "node_id": "MDU6SXNzdWU2MzczMjMyOTk=", "number": 2678, "title": "Typo  \"paylod\"", "user": {"login": "scottwedge", "id": 3101154, "node_id": "MDQ6VXNlcjMxMDExNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3101154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottwedge", "html_url": "https://github.com/scottwedge", "followers_url": "https://api.github.com/users/scottwedge/followers", "following_url": "https://api.github.com/users/scottwedge/following{/other_user}", "gists_url": "https://api.github.com/users/scottwedge/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottwedge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottwedge/subscriptions", "organizations_url": "https://api.github.com/users/scottwedge/orgs", "repos_url": "https://api.github.com/users/scottwedge/repos", "events_url": "https://api.github.com/users/scottwedge/events{/privacy}", "received_events_url": "https://api.github.com/users/scottwedge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-11T21:14:39Z", "updated_at": "2020-06-12T17:57:47Z", "closed_at": "2020-06-12T17:57:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " find . -type f | xargs grep paylod\r\n./scapy/packet.py:        \"\"\"Used to iter through the paylods of a Packet.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2677", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2677/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2677/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2677/events", "html_url": "https://github.com/secdev/scapy/issues/2677", "id": 636239807, "node_id": "MDU6SXNzdWU2MzYyMzk4MDc=", "number": 2677, "title": "Dessecting SD message from bytearray -> cannot see all entries in the entry_array", "user": {"login": "HousInfo", "id": 8048421, "node_id": "MDQ6VXNlcjgwNDg0MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8048421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HousInfo", "html_url": "https://github.com/HousInfo", "followers_url": "https://api.github.com/users/HousInfo/followers", "following_url": "https://api.github.com/users/HousInfo/following{/other_user}", "gists_url": "https://api.github.com/users/HousInfo/gists{/gist_id}", "starred_url": "https://api.github.com/users/HousInfo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HousInfo/subscriptions", "organizations_url": "https://api.github.com/users/HousInfo/orgs", "repos_url": "https://api.github.com/users/HousInfo/repos", "events_url": "https://api.github.com/users/HousInfo/events{/privacy}", "received_events_url": "https://api.github.com/users/HousInfo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-10T13:18:37Z", "updated_at": "2020-06-25T08:24:09Z", "closed_at": "2020-06-25T08:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n## SCAPY from scapy.all import * \r\nfrom scapy.contrib.automotive.someip import SOMEIP \r\nfrom scapy.contrib.automotive.someip_sd import *\r\n\r\n# SD message with multiple entries (from wireshark)\r\nlocalPayload = [0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x06, 0x00, 0x00, 0x10, 0xb0, 0x91, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x30, 0x21, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0xd5, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0xd5, 0x38, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x33, 0x91, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x33, 0x91, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x10, 0xe2, 0xb5, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x20, 0x35, 0x61, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x02, 0x00, 0x10, 0x35, 0x48, 0x00, 0x02, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x31, 0x20, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x12, 0x78, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x82, 0xb6, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x81, 0xb8, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x02, 0x00, 0x10, 0x75, 0x42, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x10, 0x30, 0x1e, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x24, 0x00, 0x09, 0x04, 0x00, 0xa0, 0x30, 0xc7, 0x10, 0x00, 0x11, 0xfe, 0x0d, 0x00, 0x09, 0x04, 0x00, 0xa0, 0x30, 0xc7, 0x10, 0x00, 0x11, 0x77, 0x1b, 0x00, 0x09, 0x04, 0x00, 0xa0, 0x30, 0xc7, 0x10, 0x00, 0x11, 0xf5, 0xbd]\r\n\r\nmy_sd = SD(bytearray(localPayload))\r\nfor sd_entry in my_sd.getfieldval(\"entry_array\"):\r\n      print(sd_entry.getfieldval('srv_id'))\r\n      print(repr(sd_entry))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2676", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2676/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2676/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2676/events", "html_url": "https://github.com/secdev/scapy/issues/2676", "id": 635519770, "node_id": "MDU6SXNzdWU2MzU1MTk3NzA=", "number": 2676, "title": "Python error during Scapy import if ipv6 is unchecked in the wifi card properties", "user": {"login": "Ujilon", "id": 1191833, "node_id": "MDQ6VXNlcjExOTE4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1191833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ujilon", "html_url": "https://github.com/Ujilon", "followers_url": "https://api.github.com/users/Ujilon/followers", "following_url": "https://api.github.com/users/Ujilon/following{/other_user}", "gists_url": "https://api.github.com/users/Ujilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ujilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ujilon/subscriptions", "organizations_url": "https://api.github.com/users/Ujilon/orgs", "repos_url": "https://api.github.com/users/Ujilon/repos", "events_url": "https://api.github.com/users/Ujilon/events{/privacy}", "received_events_url": "https://api.github.com/users/Ujilon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-09T15:07:23Z", "updated_at": "2020-06-19T10:58:44Z", "closed_at": "2020-06-19T10:58:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nA Python error is displayed during a `from scapy.all import sniff`, if the ipv6 is deactivated in the wifi card properties, on Windows.\r\n\r\nThe same error seems to appear during any import from scapy.all.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3rc3.dev621`\r\n-   Python version: `3.8.3`\r\n-   Operating System: `Windows 10`\r\n\r\n#### How to reproduce\r\n\r\nThese two lines are enough to reproduce the error:\r\n\r\n```\r\n#! /usr/local/bin/python3.8\r\n\r\nfrom scapy.all import sniff\r\n```\r\n\r\n#### Actual result\r\n\r\n```\r\nC:\\Users\\rgerg\\Desktop>python scapy_error.py\r\nTraceback (most recent call last):\r\n  File \"scapy_error.py\", line 3, in <module>\r\n    from scapy.all import sniff\r\n  File \"C:\\Python38\\lib\\site-packages\\scapy-git_archive.dev31bf7cea2b-py3.8.egg\\scapy\\all.py\", line 16, in <module>\r\n    from scapy.arch import *\r\n  File \"C:\\Python38\\lib\\site-packages\\scapy-git_archive.dev31bf7cea2b-py3.8.egg\\scapy\\arch\\__init__.py\", line 66, in <module>\r\n    from scapy.arch.windows import *  # noqa F403\r\n  File \"C:\\Python38\\lib\\site-packages\\scapy-git_archive.dev31bf7cea2b-py3.8.egg\\scapy\\arch\\windows\\__init__.py\", line 760, in <module>\r\n    IFACES.load()\r\n  File \"C:\\Python38\\lib\\site-packages\\scapy-git_archive.dev31bf7cea2b-py3.8.egg\\scapy\\arch\\windows\\__init__.py\", line 686, in load\r\n    self.data[guid] = NetworkInterface(data)\r\n  File \"C:\\Python38\\lib\\site-packages\\scapy-git_archive.dev31bf7cea2b-py3.8.egg\\scapy\\arch\\windows\\__init__.py\", line 332, in __init__\r\n    self.update(data)\r\n  File \"C:\\Python38\\lib\\site-packages\\scapy-git_archive.dev31bf7cea2b-py3.8.egg\\scapy\\arch\\windows\\__init__.py\", line 369, in update\r\n    self.ip6 = next(x for x in self.ips if \":\" in x)\r\nStopIteration\r\n\r\nC:\\Users\\rgerg\\Desktop>\r\n```\r\n\r\n#### Expected result\r\n\r\nAs soon as the ipv6 box is checked in my wifi card settings, everything works fine, and i'm able to manipulate the packets.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2675", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2675/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2675/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2675/events", "html_url": "https://github.com/secdev/scapy/issues/2675", "id": 635178908, "node_id": "MDU6SXNzdWU2MzUxNzg5MDg=", "number": 2675, "title": "Raw ICMP requests only sometimes get their answers", "user": {"login": "moshesakajo", "id": 43923727, "node_id": "MDQ6VXNlcjQzOTIzNzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/43923727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshesakajo", "html_url": "https://github.com/moshesakajo", "followers_url": "https://api.github.com/users/moshesakajo/followers", "following_url": "https://api.github.com/users/moshesakajo/following{/other_user}", "gists_url": "https://api.github.com/users/moshesakajo/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshesakajo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshesakajo/subscriptions", "organizations_url": "https://api.github.com/users/moshesakajo/orgs", "repos_url": "https://api.github.com/users/moshesakajo/repos", "events_url": "https://api.github.com/users/moshesakajo/events{/privacy}", "received_events_url": "https://api.github.com/users/moshesakajo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T07:24:36Z", "updated_at": "2020-07-23T21:28:04Z", "closed_at": "2020-07-23T21:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\nThe following script lines generate a raw ICMP request.\r\nThe problem is that most of the time the ICMP replies are not identified\r\nby **sr1**. I have even tried to increase the TO and that didn't help\r\n\r\n```\r\nfrom scapy.all import sr1, IP, ICMP\r\n\r\npkt = IP(dst=device_ip) / ICMP()\r\n\r\nsr1(pkt, timeout=2, verbose=True)\r\n```\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `scapy version 2.4.3.dev681`\r\n-   Python version: `3.8.3`\r\n-   Operating System: `Windows 10`\r\n-   Npcap version: `0.9991`\r\n\r\nThe device which I send the ICMP requests to is on the same subnet as the host which I run the script from. This device replies to each of the ICMP requests (verified with Wireshark). pinging this device will result in 100% success.\r\nWhen I used scapy version 2.4.3 I succeeded less in getting ICMP replies. The scapy dev release is better but still I cannot rely on it.\r\nI can tell that scapy version 2.4.3 on a Windows 7 with Winpcap and Python version 3.5.2 was 100% reliable\r\n\r\n#### How to reproduce\r\n\r\nSend multiple ICMP requests to a valid and reachable host\r\n\r\n#### Actual result\r\n\r\nmost of the ICMP replies are not identified\r\n\r\n#### Expected result\r\n\r\nAll the ICMP requests should have ICMP replies\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2673", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2673/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2673/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2673/events", "html_url": "https://github.com/secdev/scapy/issues/2673", "id": 634667428, "node_id": "MDU6SXNzdWU2MzQ2Njc0Mjg=", "number": 2673, "title": "Missing TLS 1.3 EncryptedExtensions message!", "user": {"login": "deepankar-ap", "id": 58770061, "node_id": "MDQ6VXNlcjU4NzcwMDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/58770061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepankar-ap", "html_url": "https://github.com/deepankar-ap", "followers_url": "https://api.github.com/users/deepankar-ap/followers", "following_url": "https://api.github.com/users/deepankar-ap/following{/other_user}", "gists_url": "https://api.github.com/users/deepankar-ap/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepankar-ap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepankar-ap/subscriptions", "organizations_url": "https://api.github.com/users/deepankar-ap/orgs", "repos_url": "https://api.github.com/users/deepankar-ap/repos", "events_url": "https://api.github.com/users/deepankar-ap/events{/privacy}", "received_events_url": "https://api.github.com/users/deepankar-ap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-08T14:30:26Z", "updated_at": "2020-06-29T19:27:29Z", "closed_at": "2020-06-29T19:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Things to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3.dev681\r\n-   Python version: 3.7\r\n-   Operating System: `MX Linux`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\nI'm trying to simulate a client for mutual TLS authentication. I am following this example to create a client: `scapy/test/tls/example_client.py`\r\nOn server side, I've configured Tomcat 9 server which requires client authentication. \r\nI don't face any problem when I run this client on the given `example_server.py`. My client script which uses pure python code (socket + ssl) does not throw any such error on Tomcat server. \r\n#### Actual result\r\n```\r\nStarting control thread [tid=140637605152512]\r\nReceived command RUN\r\n## state=[INITIAL]\r\n> Starting TLS client automaton.\r\nswitching from [INITIAL] to [INIT_TLS_SESSION]\r\n## state=[INIT_TLS_SESSION]\r\nswitching from [INIT_TLS_SESSION] to [CONNECT]\r\n## state=[CONNECT]\r\n> \r\n> Trying to connect on 127.0.0.1:8443\r\n> \r\nswitching from [CONNECT] to [TLS13_START]\r\n## state=[TLS13_START]\r\nTrying Condition [tls13_should_add_ClientHello]\r\nCondition [tls13_should_add_ClientHello] taken to state [TLS13_ADDED_CLIENTHELLO]\r\nswitching from [TLS13_START] to [TLS13_ADDED_CLIENTHELLO]\r\n## state=[TLS13_ADDED_CLIENTHELLO]\r\nswitching from [TLS13_ADDED_CLIENTHELLO] to [TLS13_SENDING_CLIENTFLIGHT1]\r\n## state=[TLS13_SENDING_CLIENTFLIGHT1]\r\nTrying Condition [tls13_should_send_ClientFlight1]\r\nCondition [tls13_should_send_ClientFlight1] taken to state [TLS13_SENT_CLIENTFLIGHT1]\r\nswitching from [TLS13_SENDING_CLIENTFLIGHT1] to [TLS13_SENT_CLIENTFLIGHT1]\r\n## state=[TLS13_SENT_CLIENTFLIGHT1]\r\nswitching from [TLS13_SENT_CLIENTFLIGHT1] to [TLS13_WAITING_SERVERFLIGHT1]\r\n## state=[TLS13_WAITING_SERVERFLIGHT1]\r\nswitching from [TLS13_WAITING_SERVERFLIGHT1] to [TLS13_RECEIVED_SERVERFLIGHT1]\r\n## state=[TLS13_RECEIVED_SERVERFLIGHT1]\r\nTrying Condition [tls13_should_handle_ServerHello]\r\nCondition [tls13_should_handle_ServerHello] not taken\r\nTrying Condition [tls13_should_handle_HelloRetryRequest]\r\nCondition [tls13_should_handle_HelloRetryRequest] taken to state [TLS13_HELLO_RETRY_REQUESTED]\r\nswitching from [TLS13_RECEIVED_SERVERFLIGHT1] to [TLS13_HELLO_RETRY_REQUESTED]\r\n## state=[TLS13_HELLO_RETRY_REQUESTED]\r\nTrying Condition [tls13_should_add_ClientHello_Retry]\r\nCondition [tls13_should_add_ClientHello_Retry] taken to state [TLS13_ADDED_CLIENTHELLO]\r\nswitching from [TLS13_HELLO_RETRY_REQUESTED] to [TLS13_ADDED_CLIENTHELLO]\r\n## state=[TLS13_ADDED_CLIENTHELLO]\r\nswitching from [TLS13_ADDED_CLIENTHELLO] to [TLS13_SENDING_CLIENTFLIGHT1]\r\n## state=[TLS13_SENDING_CLIENTFLIGHT1]\r\nTrying Condition [tls13_should_send_ClientFlight1]\r\nCondition [tls13_should_send_ClientFlight1] taken to state [TLS13_SENT_CLIENTFLIGHT1]\r\nswitching from [TLS13_SENDING_CLIENTFLIGHT1] to [TLS13_SENT_CLIENTFLIGHT1]\r\n## state=[TLS13_SENT_CLIENTFLIGHT1]\r\nswitching from [TLS13_SENT_CLIENTFLIGHT1] to [TLS13_WAITING_SERVERFLIGHT1]\r\n## state=[TLS13_WAITING_SERVERFLIGHT1]\r\nswitching from [TLS13_WAITING_SERVERFLIGHT1] to [TLS13_RECEIVED_SERVERFLIGHT1]\r\n## state=[TLS13_RECEIVED_SERVERFLIGHT1]\r\nTrying Condition [tls13_should_handle_ServerHello]\r\nCondition [tls13_should_handle_ServerHello] taken to state [TLS13_HANDLED_SERVERHELLO]\r\nswitching from [TLS13_RECEIVED_SERVERFLIGHT1] to [TLS13_HANDLED_SERVERHELLO]\r\n## state=[TLS13_HANDLED_SERVERHELLO]\r\nTrying Condition [tls13_should_handle_encrytpedExtensions]\r\nTLS: record integrity check failed [TLS None:None > None:None / TLS 1.3]\r\nCondition [tls13_should_handle_encrytpedExtensions] not taken\r\nTrying Condition [tls13_should_handle_ChangeCipherSpec]\r\nCondition [tls13_should_handle_ChangeCipherSpec] not taken\r\nTrying Condition [tls13_missing_encryptedExtension]\r\n> Missing TLS 1.3 EncryptedExtensions message!\r\nCondition [tls13_missing_encryptedExtension] taken to state [CLOSE_NOTIFY]\r\nswitching from [TLS13_HANDLED_SERVERHELLO] to [CLOSE_NOTIFY]\r\n## state=[CLOSE_NOTIFY]\r\n> \r\n> Trying to send a TLSAlert to the server...\r\nTrying Condition [close_session]\r\nCondition [close_session] taken to state [FINAL]\r\nswitching from [CLOSE_NOTIFY] to [FINAL]\r\n## state=[FINAL]\r\n> Closing client socket...\r\n> Ending TLS client automaton.\r\nStopping control thread (tid=140637605152512)\r\n```\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2670", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2670/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2670/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2670/events", "html_url": "https://github.com/secdev/scapy/issues/2670", "id": 632329414, "node_id": "MDU6SXNzdWU2MzIzMjk0MTQ=", "number": 2670, "title": "about the \"Received 3320 packets\"", "user": {"login": "dy20082250", "id": 10095467, "node_id": "MDQ6VXNlcjEwMDk1NDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/10095467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dy20082250", "html_url": "https://github.com/dy20082250", "followers_url": "https://api.github.com/users/dy20082250/followers", "following_url": "https://api.github.com/users/dy20082250/following{/other_user}", "gists_url": "https://api.github.com/users/dy20082250/gists{/gist_id}", "starred_url": "https://api.github.com/users/dy20082250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dy20082250/subscriptions", "organizations_url": "https://api.github.com/users/dy20082250/orgs", "repos_url": "https://api.github.com/users/dy20082250/repos", "events_url": "https://api.github.com/users/dy20082250/events{/privacy}", "received_events_url": "https://api.github.com/users/dy20082250/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-06T09:34:43Z", "updated_at": "2020-06-07T01:54:22Z", "closed_at": "2020-06-07T01:54:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the latest scapy and I do some tests with the following statement:\r\n\r\nans,unans= srp(Ether(dst=\"ff:ff:ff:ff:ff:ff\")/ARP(pdst=\"192.168.56.0/24\"),timeout=7)\r\n\r\nthe final result is \"Received 3320 packets, got 4 answers, remaining 252 packets\"\r\n\r\nWhy there is so many packets that are received, because the iface is local and it can only communate with local host ,so there should not be so many packets\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2668", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2668/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2668/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2668/events", "html_url": "https://github.com/secdev/scapy/issues/2668", "id": 631259659, "node_id": "MDU6SXNzdWU2MzEyNTk2NTk=", "number": 2668, "title": "Fix some grammar errors", "user": {"login": "scottwedge", "id": 3101154, "node_id": "MDQ6VXNlcjMxMDExNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3101154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottwedge", "html_url": "https://github.com/scottwedge", "followers_url": "https://api.github.com/users/scottwedge/followers", "following_url": "https://api.github.com/users/scottwedge/following{/other_user}", "gists_url": "https://api.github.com/users/scottwedge/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottwedge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottwedge/subscriptions", "organizations_url": "https://api.github.com/users/scottwedge/orgs", "repos_url": "https://api.github.com/users/scottwedge/repos", "events_url": "https://api.github.com/users/scottwedge/events{/privacy}", "received_events_url": "https://api.github.com/users/scottwedge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-05T02:13:15Z", "updated_at": "2020-06-06T09:33:59Z", "closed_at": "2020-06-06T09:33:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Fix a few spelling and grammar issues.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2666", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2666/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2666/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2666/events", "html_url": "https://github.com/secdev/scapy/issues/2666", "id": 629476963, "node_id": "MDU6SXNzdWU2Mjk0NzY5NjM=", "number": 2666, "title": "'GDK_IS_DISPLAY (display)' failed in python3", "user": {"login": "ankycooper", "id": 20620956, "node_id": "MDQ6VXNlcjIwNjIwOTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/20620956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankycooper", "html_url": "https://github.com/ankycooper", "followers_url": "https://api.github.com/users/ankycooper/followers", "following_url": "https://api.github.com/users/ankycooper/following{/other_user}", "gists_url": "https://api.github.com/users/ankycooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankycooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankycooper/subscriptions", "organizations_url": "https://api.github.com/users/ankycooper/orgs", "repos_url": "https://api.github.com/users/ankycooper/repos", "events_url": "https://api.github.com/users/ankycooper/events{/privacy}", "received_events_url": "https://api.github.com/users/ankycooper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-02T20:02:35Z", "updated_at": "2020-06-06T16:05:50Z", "closed_at": "2020-06-05T18:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nGDK error when using python3 and importing scapy, works with python2.7\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `3.8`\r\n-   Operating System: `kali 2020.2`\r\n\r\n\r\n#### How to reproduce\r\nin python3 import scapy\r\n`import scapy.all`\r\n\r\n#### Actual result\r\n\r\n`Unable to init server: Could not connect: Connection refused\r\nUnable to init server: Could not connect: Connection refused\r\n\r\n(myfile.py:965): Gdk-CRITICAL **: 05:48:12.106: gdk_cursor_new_for_display: assertion 'GDK_IS_DISPLAY (display)' failed\r\n`\r\n#### Expected result\r\n\r\nNo GDK error\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2659", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2659/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2659/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2659/events", "html_url": "https://github.com/secdev/scapy/issues/2659", "id": 624105026, "node_id": "MDU6SXNzdWU2MjQxMDUwMjY=", "number": 2659, "title": "Instable label for UTscapy?", "user": {"login": "polybassa", "id": 1676055, "node_id": "MDQ6VXNlcjE2NzYwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1676055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polybassa", "html_url": "https://github.com/polybassa", "followers_url": "https://api.github.com/users/polybassa/followers", "following_url": "https://api.github.com/users/polybassa/following{/other_user}", "gists_url": "https://api.github.com/users/polybassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/polybassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polybassa/subscriptions", "organizations_url": "https://api.github.com/users/polybassa/orgs", "repos_url": "https://api.github.com/users/polybassa/repos", "events_url": "https://api.github.com/users/polybassa/events{/privacy}", "received_events_url": "https://api.github.com/users/polybassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-25T07:31:08Z", "updated_at": "2020-05-25T11:43:58Z", "closed_at": "2020-05-25T11:43:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I discovered, that some unit tests are frequently failing on the continuous integration systems. Some of this test are related to automotive stuff, and I'm really sorry about that. But I also see tests from TLS or Regression with network access, which fail frequently.\r\n\r\nDo you think it makes sense to mark these tests as instable and implement a feature in UTscapy to allow failures of this tests? Or is this approach leading to a worse code and test quality? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2655", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2655/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2655/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2655/events", "html_url": "https://github.com/secdev/scapy/issues/2655", "id": 620995765, "node_id": "MDU6SXNzdWU2MjA5OTU3NjU=", "number": 2655, "title": "modbuspdu01readcoilsresponse error", "user": {"login": "salwaalem", "id": 40567501, "node_id": "MDQ6VXNlcjQwNTY3NTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/40567501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salwaalem", "html_url": "https://github.com/salwaalem", "followers_url": "https://api.github.com/users/salwaalem/followers", "following_url": "https://api.github.com/users/salwaalem/following{/other_user}", "gists_url": "https://api.github.com/users/salwaalem/gists{/gist_id}", "starred_url": "https://api.github.com/users/salwaalem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salwaalem/subscriptions", "organizations_url": "https://api.github.com/users/salwaalem/orgs", "repos_url": "https://api.github.com/users/salwaalem/repos", "events_url": "https://api.github.com/users/salwaalem/events{/privacy}", "received_events_url": "https://api.github.com/users/salwaalem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T13:53:17Z", "updated_at": "2020-05-28T14:04:32Z", "closed_at": "2020-05-28T14:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": " found a problem with function 01 of modbus. I want to extract the value of the coil/register according to the function number from a pcap file. It works for function 3 but not for func 1: \r\n\r\nHere is my function\r\n\r\n```\r\ndef reg_val_list(s):\r\n    v = []\r\n    for p in s:\r\n        if p.haslayer('ModbusADUResponse'):\r\n            try:\r\n                if p['ModbusADUResponse'][1].funcCode == 6:\r\n                    a = p['ModbusADUResponse'][1].registerValue\r\n                    v.append(p['ModbusADUResponse'][1].registerValue)\r\n                elif p['ModbusADUResponse'][1].funcCode == 5:\r\n                    v.append(p['ModbusADUResponse'][1].outputValue)\r\n                elif p['ModbusADUResponse'][1].funcCode == 1:\r\n                    v += p['ModbusADUResponse'][1].coilStatus\r\n                elif p['ModbusADUResponse'][1].funcCode == 3:\r\n                    v.extend(p['ModbusADUResponse'][1].registerVal)\r\n                else:\r\n                    v += p['ModbusADUResponse'][1].registerVal\r\n            except AttributeError:\r\n                pass\r\n        elif p.haslayer('ModbusADURequest'):\r\n            try:\r\n                a = p['ModbusADURequest'][1]\r\n                if p['ModbusADURequest'][1].funcCode in [15, 16]:\r\n                     v += p['ModbusADURequest'][1].outputsValue\r\n            except AttributeError:\r\n                pass\r\n    return v\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2654", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2654/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2654/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2654/events", "html_url": "https://github.com/secdev/scapy/issues/2654", "id": 620803013, "node_id": "MDU6SXNzdWU2MjA4MDMwMTM=", "number": 2654, "title": "scapy_iface_getmacbyip_get_if_hwaddr_errror", "user": {"login": "Ymigmli", "id": 47731874, "node_id": "MDQ6VXNlcjQ3NzMxODc0", "avatar_url": "https://avatars1.githubusercontent.com/u/47731874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ymigmli", "html_url": "https://github.com/Ymigmli", "followers_url": "https://api.github.com/users/Ymigmli/followers", "following_url": "https://api.github.com/users/Ymigmli/following{/other_user}", "gists_url": "https://api.github.com/users/Ymigmli/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ymigmli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ymigmli/subscriptions", "organizations_url": "https://api.github.com/users/Ymigmli/orgs", "repos_url": "https://api.github.com/users/Ymigmli/repos", "events_url": "https://api.github.com/users/Ymigmli/events{/privacy}", "received_events_url": "https://api.github.com/users/Ymigmli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T08:57:53Z", "updated_at": "2020-05-20T02:46:23Z", "closed_at": "2020-05-19T10:10:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/47731874/82306326-7e19a780-99f1-11ea-828a-2d7dc9197108.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/47731874/82306338-82de5b80-99f1-11ea-8777-c4aa77c281f1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/47731874/82306362-8d005a00-99f1-11ea-8aba-37c8c36e8647.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/47731874/82306376-912c7780-99f1-11ea-8bdb-2581125af700.png)\r\n\r\n![image](https://user-images.githubusercontent.com/47731874/82306398-98538580-99f1-11ea-8a33-2e5dee264357.png)\r\n\r\npip install,python 2.7.5\r\nfor windows 10,Normal before patch update\uff0cabnormal after update\uff0ciface can't find interface\r\nLinux,mac normal", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2652", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2652/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2652/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2652/events", "html_url": "https://github.com/secdev/scapy/issues/2652", "id": 620654929, "node_id": "MDU6SXNzdWU2MjA2NTQ5Mjk=", "number": 2652, "title": "npcap does not work well .", "user": {"login": "kerwinxu", "id": 12267455, "node_id": "MDQ6VXNlcjEyMjY3NDU1", "avatar_url": "https://avatars0.githubusercontent.com/u/12267455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kerwinxu", "html_url": "https://github.com/kerwinxu", "followers_url": "https://api.github.com/users/kerwinxu/followers", "following_url": "https://api.github.com/users/kerwinxu/following{/other_user}", "gists_url": "https://api.github.com/users/kerwinxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kerwinxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kerwinxu/subscriptions", "organizations_url": "https://api.github.com/users/kerwinxu/orgs", "repos_url": "https://api.github.com/users/kerwinxu/repos", "events_url": "https://api.github.com/users/kerwinxu/events{/privacy}", "received_events_url": "https://api.github.com/users/kerwinxu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T03:48:22Z", "updated_at": "2020-05-19T09:46:57Z", "closed_at": "2020-05-19T09:46:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Things to consider\r\n\r\nwin10 , anaconda, python3 , pip install scapy \uff0c or conda install scapy\r\n\r\nwinpacp : work well \r\nnpcap : does not work \r\n\r\nfor example :\r\nans,unans=srp(Ether(dst=\"ff:ff:ff:ff:ff:ff\")/ARP(pdst=\"192.168.0.0/24\"),timeout=2)\r\nwinpcap  : \r\n>>> ans,unans=srp(Ether(dst=\"ff:ff:ff:ff:ff:ff\")/ARP(pdst=\"192.168.0.0/24\"),ti ...: meout=2)\r\nBegin emission:\r\n........................................................................*..............................................................................................................................................................................Finished sending 256 packets..\r\n............\r\nReceived 260 packets, got 1 answers, remaining 255 packets\r\n\r\nbut npcap  : \r\n\r\nBegin emission:\r\nFinished sending 256 packets.\r\n\r\nReceived 0 packets, got 0 answers, remaining 256 packets\r\n\r\n\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `scapy version and/or commit-hash`\r\n-   Python version: `e.g. 3.5`\r\n-   Operating System: `e.g. Minix 3.4`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2648", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2648/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2648/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2648/events", "html_url": "https://github.com/secdev/scapy/issues/2648", "id": 620046936, "node_id": "MDU6SXNzdWU2MjAwNDY5MzY=", "number": 2648, "title": "Pickling corrupts timestamp (pkt.time) and order of packets", "user": {"login": "TheOkeland", "id": 30420153, "node_id": "MDQ6VXNlcjMwNDIwMTUz", "avatar_url": "https://avatars3.githubusercontent.com/u/30420153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheOkeland", "html_url": "https://github.com/TheOkeland", "followers_url": "https://api.github.com/users/TheOkeland/followers", "following_url": "https://api.github.com/users/TheOkeland/following{/other_user}", "gists_url": "https://api.github.com/users/TheOkeland/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheOkeland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheOkeland/subscriptions", "organizations_url": "https://api.github.com/users/TheOkeland/orgs", "repos_url": "https://api.github.com/users/TheOkeland/repos", "events_url": "https://api.github.com/users/TheOkeland/events{/privacy}", "received_events_url": "https://api.github.com/users/TheOkeland/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691054, "node_id": "MDU6TGFiZWwyNjc2OTEwNTQ=", "url": "https://api.github.com/repos/secdev/scapy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T09:18:02Z", "updated_at": "2020-08-18T06:59:31Z", "closed_at": "2020-08-18T06:59:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nHello, I encountered strange behavior while multiprocessing packets. As dar as I understood the packet's time field, its value is either the receive-time or the capture-time. When reading a pap-file, this holds true. However, after pickling and unpicking a packet, the current time is assigned to the packet and the original timestamp is lost.\r\n\r\nDue to multiprocessing, not only the absolute time is corrupted, but depending on scheduling differences, the order of the complete capture is lost and might differ on each execution.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3.dev554`\r\n-   Python version: `3.7.7`\r\n-   Operating System: `macOS 10.15.4`\r\n\r\n#### How to reproduce\r\n\r\n1. Read pcap file\r\n2. Use pickling (e.g., via pool.imap) to transfer packet to a different process\r\n3. Compare original and new pkt.time\r\n\r\n#### Actual result\r\n\r\nThe unpickled packet's `.time` field has the current time (time.time() - timestamps)\r\n\r\n#### Expected result\r\n\r\nThe original timestamp from the capture is displayed on calling pkt.time\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2643", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2643/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2643/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2643/events", "html_url": "https://github.com/secdev/scapy/issues/2643", "id": 618929856, "node_id": "MDU6SXNzdWU2MTg5Mjk4NTY=", "number": 2643, "title": "How to get information about parameters", "user": {"login": "alexrebell", "id": 53250976, "node_id": "MDQ6VXNlcjUzMjUwOTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/53250976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexrebell", "html_url": "https://github.com/alexrebell", "followers_url": "https://api.github.com/users/alexrebell/followers", "following_url": "https://api.github.com/users/alexrebell/following{/other_user}", "gists_url": "https://api.github.com/users/alexrebell/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexrebell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexrebell/subscriptions", "organizations_url": "https://api.github.com/users/alexrebell/orgs", "repos_url": "https://api.github.com/users/alexrebell/repos", "events_url": "https://api.github.com/users/alexrebell/events{/privacy}", "received_events_url": "https://api.github.com/users/alexrebell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T12:25:37Z", "updated_at": "2020-05-18T12:53:19Z", "closed_at": "2020-05-18T12:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good afternoon. Please tell me how I can get information on each parameter of a package? For example, I look at what parameters the IP packet has:\r\n`ls(IP)`\r\noutcome:\r\n`version    : BitField (4 bits)                   = (4)`\r\n`ihl        : BitField (4 bits)                   = (None)`\r\n`tos        : XByteField                          = (0)`\r\n`len        : ShortField                          = (None)`\r\n`id         : ShortField                          = (1)`\r\n`flags      : FlagsField (3 bits)                 = (<Flag 0 ()>)`\r\n`frag       : BitField (13 bits)                  = (0)`\r\n`ttl        : ByteField                           = (64)`\r\n`proto      : ByteEnumField                       = (0)`\r\n`chksum     : XShortField                         = (None)`\r\n`src        : SourceIPField                       = (None)`\r\n`dst        : DestIPField                         = (None)`\r\n`options    : PacketListField                     = ([])`\r\n\r\nMy question is, how can I get information about the parameter ` ihl, tos, if,` and so on... i.e., what can I specify in these parameters, what values a particular parameter supports?\r\nThank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2640", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2640/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2640/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2640/events", "html_url": "https://github.com/secdev/scapy/issues/2640", "id": 617689087, "node_id": "MDU6SXNzdWU2MTc2ODkwODc=", "number": 2640, "title": "Traceroute packet timings do not reflect reality", "user": {"login": "robobeaver6", "id": 20403563, "node_id": "MDQ6VXNlcjIwNDAzNTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/20403563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robobeaver6", "html_url": "https://github.com/robobeaver6", "followers_url": "https://api.github.com/users/robobeaver6/followers", "following_url": "https://api.github.com/users/robobeaver6/following{/other_user}", "gists_url": "https://api.github.com/users/robobeaver6/gists{/gist_id}", "starred_url": "https://api.github.com/users/robobeaver6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robobeaver6/subscriptions", "organizations_url": "https://api.github.com/users/robobeaver6/orgs", "repos_url": "https://api.github.com/users/robobeaver6/repos", "events_url": "https://api.github.com/users/robobeaver6/events{/privacy}", "received_events_url": "https://api.github.com/users/robobeaver6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-13T19:12:58Z", "updated_at": "2020-06-08T17:48:19Z", "closed_at": "2020-06-08T17:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\nI am trying to calculate the hop times for a TCP traceroute. I enumerate the results, but for each result, when I calculate the delta between the send and recieve I get a much larger value than I do if I look at the deltas in a wireshark capture.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3 (also tried 2.4.2)\r\n-   Python version: 3.7\r\n-   Operating System: Windows 10\r\n-   npcap: 0.9991\r\n\r\n\r\n#### How to reproduce\r\nUsing the Target `1.1.1.1`\r\n```\r\nresult, unans = traceroute(target, dport=443, minttl=1, maxttl=10)\r\nfor i, r in enumerate(result):\r\n    diff = r[1].time - r[0].sent_time\r\n    print(f\"{i} - {r[1].src} - {diff}\")\r\n```\r\nI have tried with both `.time` and `.sent_time`\r\n#### Actual result\r\n```\r\nScapy Traceroute\r\nBegin emission:\r\nFinished sending 10 packets.\r\n**********\r\nReceived 10 packets, got 10 answers, remaining 0 packets\r\n   1.1.1.1:tcp443     \r\n1  192.168.1.254   11 \r\n2  62.3.80.17      11 \r\n3  62.3.80.38      11 \r\n4  5.57.81.75      11 \r\n5  1.1.1.1         SA \r\n6  1.1.1.1         SA \r\n7  1.1.1.1         SA \r\n8  1.1.1.1         SA \r\n9  1.1.1.1         SA \r\n10 1.1.1.1         SA \r\n0 - 192.168.1.254 - 0.049866676330566406\r\n1 - 62.3.80.17 - 0.04986715316772461\r\n2 - 62.3.80.38 - 0.04886960983276367\r\n3 - 1.1.1.1 - 0.04886960983276367\r\n4 - 1.1.1.1 - 0.047872304916381836\r\n5 - 1.1.1.1 - 0.047872304916381836\r\n6 - 5.57.81.75 - 0.04986691474914551\r\n7 - 1.1.1.1 - 0.047872066497802734\r\n8 - 1.1.1.1 - 0.047872066497802734\r\n9 - 1.1.1.1 - 0.0468747615814209\r\n```\r\nWhereas the PCAP timings from Wireshark show:\r\n```\r\nNo.\tTime\t\tDelta\t\tProtocol\tTime to live\tSource\t\t\tDestination\t\tInfo\t\r\n1\t0.000000\t0.000000\tTCP\t\t\t1\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t64154 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n2\t0.000308\t0.000308\tICMP\t\t64,1\t\t\t192.168.1.254\t192.168.1.25\tTime-to-live exceeded (Time to live exceeded in transit)\t\r\n3\t0.000719\t0.000411\tTCP\t\t\t2\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t40060 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n4\t0.001447\t0.000728\tTCP\t\t\t3\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t59179 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n5\t0.002219\t0.000772\tTCP\t\t\t4\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t32109 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n6\t0.002930\t0.000711\tTCP\t\t\t5\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t27697 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n7\t0.003703\t0.000773\tTCP\t\t\t6\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t24519 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n8\t0.004482\t0.000779\tTCP\t\t\t7\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t20087 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n9\t0.005217\t0.000735\tTCP\t\t\t8\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t15351 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n10\t0.005969\t0.000752\tTCP\t\t\t9\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t61928 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n11\t0.006661\t0.000692\tTCP\t\t\t10\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t33937 \u2192 443 [SYN] Seq=0 Win=8192 Len=0\t\r\n12\t0.013661\t0.007000\tICMP\t\t254,0\t\t\t62.3.80.17\t\t192.168.1.25\tTime-to-live exceeded (Time to live exceeded in transit)\t\r\n13\t0.014761\t0.001100\tICMP\t\t253,1\t\t\t62.3.80.38\t\t192.168.1.25\tTime-to-live exceeded (Time to live exceeded in transit)\t\r\n14\t0.017055\t0.002294\tTCP\t\t\t56\t\t\t\t1.1.1.1\t\t\t192.168.1.25\t443 \u2192 27697 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1452\t\r\n15\t0.017081\t0.000026\tTCP\t\t\t128\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t27697 \u2192 443 [RST] Seq=1 Win=0 Len=0\t\r\n16\t0.017510\t0.000429\tTCP\t\t\t56\t\t\t\t1.1.1.1\t\t\t192.168.1.25\t443 \u2192 24519 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1452\t\r\n17\t0.017527\t0.000017\tTCP\t\t\t128\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t24519 \u2192 443 [RST] Seq=1 Win=0 Len=0\t\r\n18\t0.018437\t0.000910\tTCP\t\t\t56\t\t\t\t1.1.1.1\t\t\t192.168.1.25\t443 \u2192 20087 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1452\t\r\n19\t0.018452\t0.000015\tTCP\t\t\t128\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t20087 \u2192 443 [RST] Seq=1 Win=0 Len=0\t\t\r\n20\t0.018965\t0.000513\tICMP\t\t248,1\t\t\t5.57.81.75\t\t192.168.1.25\tTime-to-live exceeded (Time to live exceeded in transit)\t\r\n21\t0.020034\t0.001069\tTCP\t\t\t56\t\t\t\t1.1.1.1\t\t\t192.168.1.25\t443 \u2192 61928 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1452\t\r\n22\t0.020050\t0.000016\tTCP\t\t\t128\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t61928 \u2192 443 [RST] Seq=1 Win=0 Len=0\t\r\n23\t0.020060\t0.000010\tTCP\t\t\t56\t\t\t\t1.1.1.1\t\t\t192.168.1.25\t443 \u2192 15351 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1452\t\r\n24\t0.020069\t0.000009\tTCP\t\t\t128\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t15351 \u2192 443 [RST] Seq=1 Win=0 Len=0\t\r\n25\t0.021200\t0.001131\tTCP\t\t\t56\t\t\t\t1.1.1.1\t\t\t192.168.1.25\t443 \u2192 33937 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1452\t\r\n26\t0.021215\t0.000015\tTCP\t\t\t128\t\t\t\t192.168.1.25\t1.1.1.1\t\t\t33937 \u2192 443 [RST] Seq=1 Win=0 Len=0\t\t\r\n```\r\n\r\n#### Expected result\r\nI would expect similar results to Wireshark\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2638", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2638/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2638/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2638/events", "html_url": "https://github.com/secdev/scapy/issues/2638", "id": 615698466, "node_id": "MDU6SXNzdWU2MTU2OTg0NjY=", "number": 2638, "title": "`send` sends out multiple Dot11Auth packets", "user": {"login": "fe64970103", "id": 58330383, "node_id": "MDQ6VXNlcjU4MzMwMzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/58330383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fe64970103", "html_url": "https://github.com/fe64970103", "followers_url": "https://api.github.com/users/fe64970103/followers", "following_url": "https://api.github.com/users/fe64970103/following{/other_user}", "gists_url": "https://api.github.com/users/fe64970103/gists{/gist_id}", "starred_url": "https://api.github.com/users/fe64970103/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fe64970103/subscriptions", "organizations_url": "https://api.github.com/users/fe64970103/orgs", "repos_url": "https://api.github.com/users/fe64970103/repos", "events_url": "https://api.github.com/users/fe64970103/events{/privacy}", "received_events_url": "https://api.github.com/users/fe64970103/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T08:39:16Z", "updated_at": "2020-05-18T12:56:57Z", "closed_at": "2020-05-18T12:56:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the latest scapy versin from:\r\n`pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n\r\n**#### Brief description**\r\nWhen using send function to send out the Dot11Auth packet scapy sends out multiple packets. The amount of duplicates varies, currently in my setup 5. This is confirmed by using an external wireless capturing tool.\r\n\r\n**#### Environment**\r\n\r\n-   Scapy version: `5837c08d6b6c969eea7784e7f3981b0c49f03601`\r\n-   Python 3.8.1\r\n-   Linux/OpenWRT\r\n\r\n**#### How to reproduce**\r\n\r\npacket = Dot11(addr1 = self.bssid , addr2 = self.client, addr3 = self.bssid) / Dot11Auth(algo=0, seqnum=0x0001, status=0x0000)\r\nsend(packet, iface = self.iface, count = 1, verbose = False, realtime = True)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2634", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2634/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2634/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2634/events", "html_url": "https://github.com/secdev/scapy/issues/2634", "id": 615140215, "node_id": "MDU6SXNzdWU2MTUxNDAyMTU=", "number": 2634, "title": "Specify interface for http_request()", "user": {"login": "GrigorDimitrov", "id": 32209024, "node_id": "MDQ6VXNlcjMyMjA5MDI0", "avatar_url": "https://avatars0.githubusercontent.com/u/32209024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrigorDimitrov", "html_url": "https://github.com/GrigorDimitrov", "followers_url": "https://api.github.com/users/GrigorDimitrov/followers", "following_url": "https://api.github.com/users/GrigorDimitrov/following{/other_user}", "gists_url": "https://api.github.com/users/GrigorDimitrov/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrigorDimitrov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrigorDimitrov/subscriptions", "organizations_url": "https://api.github.com/users/GrigorDimitrov/orgs", "repos_url": "https://api.github.com/users/GrigorDimitrov/repos", "events_url": "https://api.github.com/users/GrigorDimitrov/events{/privacy}", "received_events_url": "https://api.github.com/users/GrigorDimitrov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691054, "node_id": "MDU6TGFiZWwyNjc2OTEwNTQ=", "url": "https://api.github.com/repos/secdev/scapy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-09T10:04:49Z", "updated_at": "2020-05-19T08:10:05Z", "closed_at": "2020-05-19T08:10:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nhttp_request function does not take interface argument. I cannot use this function because I have two interfaces on my VM.\r\n\r\n#### How to reproduce\r\nKali Linux\r\neth0 - Host Only\r\neth1 - NAT\r\n\r\n#### Related resources\r\nhttps://scapy.readthedocs.io/en/latest/api/scapy.layers.http.html#scapy.layers.http.http_request", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2628", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2628/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2628/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2628/events", "html_url": "https://github.com/secdev/scapy/issues/2628", "id": 611868754, "node_id": "MDU6SXNzdWU2MTE4Njg3NTQ=", "number": 2628, "title": "OSError: [Errno 97] Address family not supported by protocol", "user": {"login": "ganhw1970", "id": 36805333, "node_id": "MDQ6VXNlcjM2ODA1MzMz", "avatar_url": "https://avatars0.githubusercontent.com/u/36805333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ganhw1970", "html_url": "https://github.com/ganhw1970", "followers_url": "https://api.github.com/users/ganhw1970/followers", "following_url": "https://api.github.com/users/ganhw1970/following{/other_user}", "gists_url": "https://api.github.com/users/ganhw1970/gists{/gist_id}", "starred_url": "https://api.github.com/users/ganhw1970/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ganhw1970/subscriptions", "organizations_url": "https://api.github.com/users/ganhw1970/orgs", "repos_url": "https://api.github.com/users/ganhw1970/repos", "events_url": "https://api.github.com/users/ganhw1970/events{/privacy}", "received_events_url": "https://api.github.com/users/ganhw1970/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T13:18:33Z", "updated_at": "2020-05-05T09:27:41Z", "closed_at": "2020-05-05T09:26:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n#### Brief description\r\n\r\nin linux shell, input scapy into the scapy interactive mode, when exec the sniff() or sr1(IP(dst='192.168.1.51')/ICMP()), will prompt \"OSError: [Errno 97] Address family not supported by protocol\"\r\n\r\n\r\n>>> sniff()\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/ganhw/.local/lib/python3.6/site-packages/scapy/sendrecv.py\", line 972, in sniff\r\n    sniffer._run(*args, **kwargs)\r\n  File \"/home/ganhw/.local/lib/python3.6/site-packages/scapy/sendrecv.py\", line 842, in _run\r\n    *arg, **karg)] = iface\r\n  File \"/home/ganhw/.local/lib/python3.6/site-packages/scapy/arch/linux.py\", line 467, in __init__\r\n    self.ins = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.htons(type))  # noqa: E501\r\n  File \"/usr/lib/python3.6/socket.py\", line 144, in __init__\r\n    _socket.socket.__init__(self, family, type, proto, fileno)\r\nOSError: [Errno 97] Address family not supported by protocol\r\n>>>\r\n\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `e.g. 3.6`\r\n-   Operating System: `win10 WSL2 ubuntu 18.04`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n\r\n#### Actual result\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2623", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2623/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2623/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2623/events", "html_url": "https://github.com/secdev/scapy/issues/2623", "id": 611220821, "node_id": "MDU6SXNzdWU2MTEyMjA4MjE=", "number": 2623, "title": "Not support handle AVP for L2TP protocol", "user": {"login": "docker0406", "id": 43601395, "node_id": "MDQ6VXNlcjQzNjAxMzk1", "avatar_url": "https://avatars2.githubusercontent.com/u/43601395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/docker0406", "html_url": "https://github.com/docker0406", "followers_url": "https://api.github.com/users/docker0406/followers", "following_url": "https://api.github.com/users/docker0406/following{/other_user}", "gists_url": "https://api.github.com/users/docker0406/gists{/gist_id}", "starred_url": "https://api.github.com/users/docker0406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/docker0406/subscriptions", "organizations_url": "https://api.github.com/users/docker0406/orgs", "repos_url": "https://api.github.com/users/docker0406/repos", "events_url": "https://api.github.com/users/docker0406/events{/privacy}", "received_events_url": "https://api.github.com/users/docker0406/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T16:04:49Z", "updated_at": "2020-05-18T13:01:42Z", "closed_at": "2020-05-18T13:01:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Things to consider\r\n\r\n1.  Please check that you are using the latest scapy version, e.g. installed via:\r\n\r\n    `pip install --upgrade git+git://github.com/secdev/scapy`\r\n\r\n2.  If you are here to ask a question - please check previous issues and online resources, and consider using gitter instead: <https://gitter.im/secdev/scapy>\r\n\r\n3.  Please understand that **this is not a forum** but an issue tracker. The following article explains why you should limit questions asked on Github issues: <https://medium.com/@methane/why-you-must-not-ask-questions-on-github-issues-51d741d83fde>\r\n\r\n#### Brief description\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `Version git-archive.devfed58ff0ab`\r\n-   Python version: `3.7.7`\r\n-   Operating System: `ubuntu 14.04`\r\n\r\n<!-- if needed - further information to get a picture of your setup (e.g. a sketch of your network setup) -->\r\n\r\n#### How to reproduce\r\n[l2tp.zip](https://github.com/secdev/scapy/files/4568105/l2tp.zip)\r\n\r\n\r\n\r\n<!-- step-by-step explanation or a short script, may reference section 'Related resources' -->\r\n1. pkt=rdpcap('l2tp.pcap')\r\n2. pkt[0].show()\r\n3. check AVP of L2TP in output\r\n\r\n#### Actual result\r\n\r\n###[ Ethernet ]###\r\n  dst= 00:0c:29:8e:b3:28\r\n  src= 00:17:10:10:c7:d7\r\n  type= IPv4\r\n###[ IP ]###\r\n     version= 4\r\n     ihl= 5\r\n     tos= 0xc0\r\n     len= 124\r\n     id= 218\r\n     flags=\r\n     frag= 0\r\n     ttl= 64\r\n     proto= udp\r\n     chksum= 0xc504\r\n     src= 200.90.22.1\r\n     dst= 192.168.20.207\r\n     \\options\\\r\n###[ UDP ]###\r\n        sport= l2f\r\n        dport= l2f\r\n        len= 104\r\n        chksum= 0x1a7c\r\n###[ L2TP ]###\r\n           hdr= sequence+length+control\r\n           version= L2TPv2\r\n           len= 96\r\n           tunnel_id= 0\r\n           session_id= 0\r\n           ns= 0\r\n           nr= 0\r\n###[ PPP Link Layer ]###\r\n              proto= 32776\r\n###[ Raw ]###\r\n                 load= '\\x00\\x00\\x00\\x00\\x00\\x01\\x80\\r\\x00\\x00\\x00\\x07client0\\x80\\x0f\\x00\\x00\\x00\\x08CASA vBNG\\x80\\x08\\x00\\x00\\x00\\x02\\x01\\x00\\x80\\n\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x03\\x80\\x08\\x00\\x00\\x00\\t\\x00\\x01\\x80\\x16\\x00\\x00\\x00\\x0b\\xa7\\xde\\x83J$\\x8e\\xdf6#\\xf0g\\xa9\\x9e\\xad6y'\r\n\r\n>>>\r\n\r\n<!-- dump results that outline the issue, please format your code -->\r\n\r\n#### Expected result\r\nsupport AVP,like wireshark tools\r\n\r\nLayer 2 Tunneling Protocol\r\n    Packet Type: Control Message Tunnel Id=0 Session Id=0\r\n    Length: 96\r\n    Tunnel ID: 0\r\n    Session ID: 0\r\n    Ns: 0\r\n    Nr: 0\r\n    Control Message AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0000 1000 = Length: 8\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Control Message (0)\r\n        Message Type: Start_Control_Request (1)\r\n    Host Name AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0000 1101 = Length: 13\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Host Name (7)\r\n        Host Name: client0\r\n    Vendor Name AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0000 1111 = Length: 15\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Vendor Name (8)\r\n        Vendor Name: CASA vBNG\r\n    Protocol Version AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0000 1000 = Length: 8\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Protocol Version (2)\r\n        Version: 1\r\n        Revision: 0\r\n    Framing Capabilities AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0000 1010 = Length: 10\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Framing Capabilities (3)\r\n        .... .... .... .... .... .... .... ..1. = Async Framing Supported: True\r\n        .... .... .... .... .... .... .... ...1 = Sync Framing Supported: True\r\n    Assigned Tunnel ID AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0000 1000 = Length: 8\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Assigned Tunnel ID (9)\r\n        Assigned Tunnel ID: 1\r\n    Challenge AVP\r\n        1... .... .... .... = Mandatory: True\r\n        .0.. .... .... .... = Hidden: False\r\n        .... ..00 0001 0110 = Length: 22\r\n        Vendor ID: Reserved (0)\r\n        AVP Type: Challenge (11)\r\n        CHAP Challenge: a7de834a248edf3623f067a99ead3679\r\n\r\n<!-- describe the expected result and outline the difference to the actual one, could also be a screen shot (e.g. wireshark) -->\r\n\r\n#### Related resources\r\n\r\n<!-- traces / sample pcaps (stripped to the relevant frames), related standards, RFCs or other resources -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2621", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2621/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2621/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2621/events", "html_url": "https://github.com/secdev/scapy/issues/2621", "id": 611067094, "node_id": "MDU6SXNzdWU2MTEwNjcwOTQ=", "number": 2621, "title": "how to send a PIM packet ?", "user": {"login": "nagmar", "id": 29062999, "node_id": "MDQ6VXNlcjI5MDYyOTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/29062999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagmar", "html_url": "https://github.com/nagmar", "followers_url": "https://api.github.com/users/nagmar/followers", "following_url": "https://api.github.com/users/nagmar/following{/other_user}", "gists_url": "https://api.github.com/users/nagmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagmar/subscriptions", "organizations_url": "https://api.github.com/users/nagmar/orgs", "repos_url": "https://api.github.com/users/nagmar/repos", "events_url": "https://api.github.com/users/nagmar/events{/privacy}", "received_events_url": "https://api.github.com/users/nagmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T00:14:35Z", "updated_at": "2020-05-02T08:00:42Z", "closed_at": "2020-05-02T08:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI didn't find  how to send a PIM packet like you can send an HSRP packet. \r\n\r\ni would like the same module : [https://scapy.readthedocs.io/en/latest/api/scapy.layers.hsrp.html?highlight=hsrp] for PIM\r\n\r\nno one to help me?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2618", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2618/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2618/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2618/events", "html_url": "https://github.com/secdev/scapy/issues/2618", "id": 609018825, "node_id": "MDU6SXNzdWU2MDkwMTg4MjU=", "number": 2618, "title": "Why do I have to place a delay in my Python code for SYN scan to work properly", "user": {"login": "xyplex", "id": 45394257, "node_id": "MDQ6VXNlcjQ1Mzk0MjU3", "avatar_url": "https://avatars1.githubusercontent.com/u/45394257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xyplex", "html_url": "https://github.com/xyplex", "followers_url": "https://api.github.com/users/xyplex/followers", "following_url": "https://api.github.com/users/xyplex/following{/other_user}", "gists_url": "https://api.github.com/users/xyplex/gists{/gist_id}", "starred_url": "https://api.github.com/users/xyplex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xyplex/subscriptions", "organizations_url": "https://api.github.com/users/xyplex/orgs", "repos_url": "https://api.github.com/users/xyplex/repos", "events_url": "https://api.github.com/users/xyplex/events{/privacy}", "received_events_url": "https://api.github.com/users/xyplex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T12:30:27Z", "updated_at": "2020-04-29T13:28:32Z", "closed_at": "2020-04-29T13:28:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am learning to write a SYN Scanner in Python and I am farly new to Python language. I am using Scapy module and sr1 command to send the packet but I have written this code using Python Socket module and I have the same issue.\r\n\r\nThe code will send packets out with packet flags set to 'S'. If there is no packet response then do nothing and continue the 'For' loop and take in the next port number to scan from list in variable List \"common_ports\".\r\n\r\nIf a packet response is received I check for TCP flags is set to \"SA\" and if so print \"Port is Open\", then the Open port is stored in List \"open-ports\".\r\n\r\nMy Issue when running the program it will find the first Open port 80 and displays it but will not find any consecutive Open ports. When I ran this through Pycharm debugger it worked fine and found port 80 as well port 443.\r\nAfter trying to figure this out I added a time.sleep(7) statement and all works fine but if I change this 7 to a lower number the code does not find the second port number 443.\r\n\r\nMy question is why do I have to add a delay in the program to get it to work? (7 second delay is excessive). I have noticed that some other sites I can reduce the delay to say 3 and the code will work.\r\n\r\n`# -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreated on Mon Apr 13 23:08:11 2020\r\n\r\n@author: xyplex\r\n\r\n\"\"\"\r\nimport logging\r\nlogging.getLogger(\"scapy.runtime\").setLevel(logging.ERROR)\r\n\r\nfrom scapy.all import *\r\nimport time\r\n\r\n\r\nhost_address = \"www.hackthissite.org\"\r\nopen_ports = []\r\n\r\ncommon_ports = [23, 80, 443]\r\n\r\nprint('Scanning '+host_address+' for open TCP ports')\r\n\r\nstart_time = time.time()\r\n\r\nfor x in common_ports:\r\n    packet = IP(dst=host_address)/TCP(dport=x, flags='S')\r\n    response = sr1(packet,timeout=0.5,verbose=0)\r\n    if response != None:\r\n        if TCP in response and response[TCP].flags == 'SA':\r\n            print('\\nPort '+str(x)+' is open')\r\n            open_ports.append(x)\r\n            sr1(IP(dst=host_address)/TCP(dport=response.sport,flags='R'),timeout=0.5,verbose=0)\r\n            **time.sleep(7)**\r\n\r\nprint('\\nScan is Complete !!!!!\\n')\r\n\r\nif open_ports:\r\n    print(\"\\n\\nOpen Ports Found: -----> \", sorted(open_ports))\r\nelse:\r\n    print(\"Sorry, No open ports found.!!!\")\r\n\r\nprint('\\nTotal Time to Execute = %s' % (time.time() - start_time) + ' Seconds')\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2617", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2617/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2617/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2617/events", "html_url": "https://github.com/secdev/scapy/issues/2617", "id": 608333721, "node_id": "MDU6SXNzdWU2MDgzMzM3MjE=", "number": 2617, "title": "gdk_cursor_new_for_display: crash with simple script", "user": {"login": "Obyka", "id": 28777250, "node_id": "MDQ6VXNlcjI4Nzc3MjUw", "avatar_url": "https://avatars1.githubusercontent.com/u/28777250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Obyka", "html_url": "https://github.com/Obyka", "followers_url": "https://api.github.com/users/Obyka/followers", "following_url": "https://api.github.com/users/Obyka/following{/other_user}", "gists_url": "https://api.github.com/users/Obyka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Obyka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Obyka/subscriptions", "organizations_url": "https://api.github.com/users/Obyka/orgs", "repos_url": "https://api.github.com/users/Obyka/repos", "events_url": "https://api.github.com/users/Obyka/events{/privacy}", "received_events_url": "https://api.github.com/users/Obyka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-28T13:47:59Z", "updated_at": "2020-04-28T15:02:14Z", "closed_at": "2020-04-28T14:05:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nWhen starting a simple script importing latest scapy version on my Raspberry Pi 3, it crashes.\r\n\r\n#### Environment\r\nI'm connecting to my raspberry pi via SSH\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `3.7.3`\r\n-   Operating System: `Linux raspberrypi 4.19.97-v7l+`\r\n\r\n#### How to reproduce\r\n\r\nHere is the script I'm trying to launch\r\n\r\n```python\r\nimport argparse\r\nfrom scapy.all import *\r\nimport datetime\r\nimport time\r\n\r\nparser = argparse.ArgumentParser(description=\"Scan for probes request\")\r\nparser.add_argument('-i', help=\"interface wifi en monitor\")\r\nargs = parser.parse_args()\r\n```\r\n\r\n#### Actual result\r\n```\r\nUnable to init server: Could not connect: Connection refused\r\nUnable to init server: Impossible de se connecter\u00a0: Connection refused\r\n\r\n(scanProb.py:959): Gdk-CRITICAL **: 15:44:36.081: gdk_cursor_new_for_display: assertion 'GDK_IS_DISPLAY (display)' failed\r\n\r\n(scanProb.py:959): Gdk-CRITICAL **: 15:44:36.084: gdk_cursor_new_for_display: assertion 'GDK_IS_DISPLAY (display)' failed\r\n```\r\n\r\n#### Expected result\r\n\r\nNo error\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2616", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2616/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2616/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2616/events", "html_url": "https://github.com/secdev/scapy/issues/2616", "id": 607992872, "node_id": "MDU6SXNzdWU2MDc5OTI4NzI=", "number": 2616, "title": "Sessions can crash Scapy", "user": {"login": "py2010", "id": 37617585, "node_id": "MDQ6VXNlcjM3NjE3NTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/37617585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/py2010", "html_url": "https://github.com/py2010", "followers_url": "https://api.github.com/users/py2010/followers", "following_url": "https://api.github.com/users/py2010/following{/other_user}", "gists_url": "https://api.github.com/users/py2010/gists{/gist_id}", "starred_url": "https://api.github.com/users/py2010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/py2010/subscriptions", "organizations_url": "https://api.github.com/users/py2010/orgs", "repos_url": "https://api.github.com/users/py2010/repos", "events_url": "https://api.github.com/users/py2010/events{/privacy}", "received_events_url": "https://api.github.com/users/py2010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-28T03:17:47Z", "updated_at": "2020-04-29T09:59:33Z", "closed_at": "2020-04-29T09:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "load_layer(\"http\")\r\npython3.* \r\nscapy 2.4.3\r\nscapy.sessions.StringBuffer.append()\r\nhttps://github.com/secdev/scapy/blob/master/scapy/sessions.py\r\nline 148:\r\n`            self.content += b\"\\x00\" * (seq - self.content_len + data_len)`\r\nseq = 800MB ~ 2GB\r\n\r\n**Packet Loss** (reduce, conf.use_pcap = True)\r\nscapy.sessions.TCPSession._process_packet()\r\n_20 minutes_  metadata[\"tcp_end\"] = False", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2615", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2615/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2615/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2615/events", "html_url": "https://github.com/secdev/scapy/issues/2615", "id": 607120993, "node_id": "MDU6SXNzdWU2MDcxMjA5OTM=", "number": 2615, "title": "conf.route.get_if_bcast(interface) uses mask from link-local route", "user": {"login": "michthom", "id": 546179, "node_id": "MDQ6VXNlcjU0NjE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/546179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michthom", "html_url": "https://github.com/michthom", "followers_url": "https://api.github.com/users/michthom/followers", "following_url": "https://api.github.com/users/michthom/following{/other_user}", "gists_url": "https://api.github.com/users/michthom/gists{/gist_id}", "starred_url": "https://api.github.com/users/michthom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michthom/subscriptions", "organizations_url": "https://api.github.com/users/michthom/orgs", "repos_url": "https://api.github.com/users/michthom/repos", "events_url": "https://api.github.com/users/michthom/events{/privacy}", "received_events_url": "https://api.github.com/users/michthom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-26T21:44:34Z", "updated_at": "2020-05-29T13:20:36Z", "closed_at": "2020-05-29T13:20:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nI'm trying to use conf.route.get_if_bcast(interface) to obtain the broadcast address of my local network. But the result seems to be using the subnet mask of the link-local subnet rather than the expected one.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: 3.7.7\r\n-   Operating System: macOS 10.15.4\r\n\r\n#### How to reproduce\r\n\r\n```\r\n(interface, localIP, defaultGateway) = conf.route.route(\"0.0.0.0\")\r\n# ('en0', '172.21.230.10', '172.21.230.1')\r\ndefaultGatewayIP = conf.route.get_if_bcast(interface) \r\nprint(defaultGatewayIP)\r\n```\r\n#### Actual result\r\n\r\n```172.21.255.255```\r\n\r\n#### Expected result\r\n\r\n```172.21.230.255```\r\nI use a /24 subnet in my local network, but the broadcast address was calculated using a /16 subnet mask\r\n\r\n#### Related resources\r\n\r\nLooking at [the code](https://github.com/secdev/scapy/blob/cde3ae6b49adedfcbe01c1a8b4bb0b992d2022ee/scapy/route.py#L180) and my routing table, the default route mask seems to be coming from the link-local interface as it's the first entry with a matching interface where (net != 0)?\r\n```\r\n>>> for route in conf.route.routes:\r\n...     (net, msk, gw, iface, addr, metric) = route\r\n...     print(ltoa(net), ltoa(msk), gw, iface, addr, metric)\r\n... \r\n0.0.0.0 0.0.0.0 172.21.230.1 en0 172.21.230.10 1\r\n0.0.0.0 0.0.0.0 172.21.230.1 en1 172.21.230.11 1\r\n127.0.0.0 255.0.0.0 0.0.0.0 lo0 127.0.0.1 1\r\n127.0.0.1 255.255.255.255 0.0.0.0 lo0 127.0.0.1 1\r\n169.254.0.0 255.255.0.0 0.0.0.0 en0 172.21.230.10 1 <== mask selected\r\n169.254.0.0 255.255.0.0 0.0.0.0 en1 172.21.230.11 1\r\n172.21.230.0 255.255.255.0 0.0.0.0 en0 172.21.230.10 1 <== mask expected\r\n172.21.230.0 255.255.255.0 0.0.0.0 en1 172.21.230.11 1\r\n172.21.230.1 255.255.255.255 0.0.0.0 en0 172.21.230.10 1\r\n172.21.230.1 255.255.255.255 0.0.0.0 en0 172.21.230.10 1\r\n172.21.230.1 255.255.255.255 0.0.0.0 en1 172.21.230.11 1\r\n172.21.230.1 255.255.255.255 0.0.0.0 en1 172.21.230.11 1\r\n```\r\n\r\nDoes this require another exception to skip the link-local network as well?\r\n\r\ne.g. \r\n\r\n```\r\nif (net == 0) or (net == 2851995648):\r\n    # Skip default or link-local routes\r\n    continue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2609", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2609/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2609/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2609/events", "html_url": "https://github.com/secdev/scapy/issues/2609", "id": 606270580, "node_id": "MDU6SXNzdWU2MDYyNzA1ODA=", "number": 2609, "title": "Instantiation of packet with another packet not working", "user": {"login": "lidllohntsich", "id": 30345918, "node_id": "MDQ6VXNlcjMwMzQ1OTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/30345918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lidllohntsich", "html_url": "https://github.com/lidllohntsich", "followers_url": "https://api.github.com/users/lidllohntsich/followers", "following_url": "https://api.github.com/users/lidllohntsich/following{/other_user}", "gists_url": "https://api.github.com/users/lidllohntsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/lidllohntsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lidllohntsich/subscriptions", "organizations_url": "https://api.github.com/users/lidllohntsich/orgs", "repos_url": "https://api.github.com/users/lidllohntsich/repos", "events_url": "https://api.github.com/users/lidllohntsich/events{/privacy}", "received_events_url": "https://api.github.com/users/lidllohntsich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691058, "node_id": "MDU6TGFiZWwyNjc2OTEwNTg=", "url": "https://api.github.com/repos/secdev/scapy/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-24T12:17:19Z", "updated_at": "2020-04-28T13:30:46Z", "closed_at": "2020-04-28T11:19:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "tested with Python2.7\r\nscapy version: 2.4.3 dev566\r\n\r\nWhen a packet is instantiated with another packet, the packet can not be built.\r\nexample to reproduce the fault:\r\n`p=IPerror(IP())`\r\n\r\nWhat happens if the packet is built:\r\n1. IP() is built first; build of IP() works fine\r\n2. when scapy tries to build the IPerror() layer via the `Packet.__init__()`, scapy detects that the needed information is to be fetched from a packet (i.e. `_pkt` contains the previously generated IP() packet).\r\n3. `Packet.dissect(_pkt)` is triggered and fails, as `Packet.dissect()` can only handle strings or bytes (Python3) respectively\r\n\r\nGeneral comment:\r\nthis handling is not covered via the regression.uts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2608", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2608/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2608/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2608/events", "html_url": "https://github.com/secdev/scapy/issues/2608", "id": 606020132, "node_id": "MDU6SXNzdWU2MDYwMjAxMzI=", "number": 2608, "title": "Scapy AsyncSniffer can miss packets when many are sent", "user": {"login": "Kkevsterrr", "id": 3198973, "node_id": "MDQ6VXNlcjMxOTg5NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3198973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kkevsterrr", "html_url": "https://github.com/Kkevsterrr", "followers_url": "https://api.github.com/users/Kkevsterrr/followers", "following_url": "https://api.github.com/users/Kkevsterrr/following{/other_user}", "gists_url": "https://api.github.com/users/Kkevsterrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kkevsterrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kkevsterrr/subscriptions", "organizations_url": "https://api.github.com/users/Kkevsterrr/orgs", "repos_url": "https://api.github.com/users/Kkevsterrr/repos", "events_url": "https://api.github.com/users/Kkevsterrr/events{/privacy}", "received_events_url": "https://api.github.com/users/Kkevsterrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-04-24T03:54:06Z", "updated_at": "2020-05-20T12:17:01Z", "closed_at": "2020-05-20T12:17:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nThe AsyncSniffer can miss packets under load.\r\n\r\nI have reproduced this on 2.4.3, and the latest build (as suggested in the Github template with `pip install --upgrade git+git://github.com/secdev/scapy`)\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`, also reproduced on `2.4.3.dev494`\r\n-   Python version: `3.5.2`\r\n-   Operating System: `Ubuntu 16.04 LTS`\r\n\r\nI am using scapy for some small experiments on a gigabit link. \r\n\r\n#### How to reproduce\r\n\r\nI can reproduce this by simply creating and starting an AsyncSniffer with a custom callback & an IP filter.\r\n\r\n```\r\nfrom scapy.all import *\r\n\r\ncount = 0\r\ndef process_packet(pkt):\r\n    \"\"\"\r\n    Handles inbound packest\r\n    \"\"\"\r\n    global count\r\n    print(pkt.summary())\r\n    count += 1\r\n\r\nip = \"<SOURCE_IP_HERE>\"\r\nsniffer = AsyncSniffer(prn=process_packet, filter='src %s' % ip, store=False)\r\nsniffer.start()\r\n```\r\n\r\nIf I send this machine more than about 75 packets very quickly (<0.01s), scapy starts just missing packets. Using tcpdump with the exact same filter, I see all of the packets I expect, but they do not show up in scapy. Sending it 85 packets, it captures 62. Sending 125, it gets 80. There does not appear to be rhyme or reason to which packets scapy misses.\r\n\r\nThe `store` flag does not seem to have any effect on this. \r\n\r\n#### Actual result\r\n\r\n`process_packet` does not get called with all of the packets it should. \r\n\r\n#### Expected result\r\n\r\nScapy should capture all of the packets that match the filter. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2607", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2607/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2607/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2607/events", "html_url": "https://github.com/secdev/scapy/issues/2607", "id": 605510562, "node_id": "MDU6SXNzdWU2MDU1MTA1NjI=", "number": 2607, "title": "refine the post_build() method of l2tp", "user": {"login": "cq674350529", "id": 13868458, "node_id": "MDQ6VXNlcjEzODY4NDU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13868458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cq674350529", "html_url": "https://github.com/cq674350529", "followers_url": "https://api.github.com/users/cq674350529/followers", "following_url": "https://api.github.com/users/cq674350529/following{/other_user}", "gists_url": "https://api.github.com/users/cq674350529/gists{/gist_id}", "starred_url": "https://api.github.com/users/cq674350529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cq674350529/subscriptions", "organizations_url": "https://api.github.com/users/cq674350529/orgs", "repos_url": "https://api.github.com/users/cq674350529/repos", "events_url": "https://api.github.com/users/cq674350529/events{/privacy}", "received_events_url": "https://api.github.com/users/cq674350529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T12:57:17Z", "updated_at": "2020-04-24T02:42:45Z", "closed_at": "2020-04-24T02:42:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Brief description\r\nWhen using the L2TP layer, the `len` field must be set to `None` explicitly to make the `post_build()` work.\r\n\r\nAs we can see, the default value of `len` field is set to zero, but condition `if self.len is None` is used in `post_build()`.  Maybe a better way is to use ` if self.len == 0` instead.\r\nhttps://github.com/secdev/scapy/blob/744717193d1701fb1bc23219be7273022168c56d/scapy/layers/l2tp.py#L21-L47\r\n\r\n<!-- describe the main issue in one sentence -->\r\n<!-- if possible, describe what components / protocols could be affected by the issue (e.g. wrpcap() + IPv6, it is likely this also affects XXX) -->\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2606", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2606/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2606/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2606/events", "html_url": "https://github.com/secdev/scapy/issues/2606", "id": 605353490, "node_id": "MDU6SXNzdWU2MDUzNTM0OTA=", "number": 2606, "title": "Homeplug-AV - HPtype Little Endian instead of Big Endian", "user": {"login": "wastene", "id": 25591970, "node_id": "MDQ6VXNlcjI1NTkxOTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/25591970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wastene", "html_url": "https://github.com/wastene", "followers_url": "https://api.github.com/users/wastene/followers", "following_url": "https://api.github.com/users/wastene/following{/other_user}", "gists_url": "https://api.github.com/users/wastene/gists{/gist_id}", "starred_url": "https://api.github.com/users/wastene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wastene/subscriptions", "organizations_url": "https://api.github.com/users/wastene/orgs", "repos_url": "https://api.github.com/users/wastene/repos", "events_url": "https://api.github.com/users/wastene/events{/privacy}", "received_events_url": "https://api.github.com/users/wastene/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T08:46:33Z", "updated_at": "2020-04-23T14:18:41Z", "closed_at": "2020-04-23T14:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI don't now the exact specifications for the homeplug-av protocol, but should the HPtype at HomePlug-AV not be Little Endian instead of Big-Endian?\r\n\r\n**Actual results:**\r\nHPtype = 0x00A0\r\n\r\n**Expected results:**\r\nHPtype = 0xA000\r\n\r\n**Suggested solution:**\r\nI changed following code snippet (scapy/contrib/homeplugav.py) in class MACManagementHeader from:\r\n```\r\nfields_desc = [ByteEnumField(\"version\", 0, HPAVversionList),\r\n                   EnumField(\"HPtype\", 0xA000, HPAVTypeList, \"<H\")]\r\n```\r\n\r\nto:\r\n```\r\nfields_desc = [ByteEnumField(\"version\", 0, HPAVversionList),\r\n                   EnumField(\"HPtype\", 0xA000, HPAVTypeList, \"H\")]\r\n```\r\nThis change fixes it for me and the homeplug packets are now recognized by scapy.\r\n\r\n(Just changes \"<H\" to \"H\" - And just for info, I don't know what that \"<H\" or \"H\" mean. This was the first thing I changed and it was working :D).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2599", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2599/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2599/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2599/events", "html_url": "https://github.com/secdev/scapy/issues/2599", "id": 602816385, "node_id": "MDU6SXNzdWU2MDI4MTYzODU=", "number": 2599, "title": "No Module Named scapy.all", "user": {"login": "gfleetwood", "id": 7785756, "node_id": "MDQ6VXNlcjc3ODU3NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7785756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfleetwood", "html_url": "https://github.com/gfleetwood", "followers_url": "https://api.github.com/users/gfleetwood/followers", "following_url": "https://api.github.com/users/gfleetwood/following{/other_user}", "gists_url": "https://api.github.com/users/gfleetwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfleetwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfleetwood/subscriptions", "organizations_url": "https://api.github.com/users/gfleetwood/orgs", "repos_url": "https://api.github.com/users/gfleetwood/repos", "events_url": "https://api.github.com/users/gfleetwood/events{/privacy}", "received_events_url": "https://api.github.com/users/gfleetwood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T20:47:29Z", "updated_at": "2020-04-20T15:36:28Z", "closed_at": "2020-04-20T15:36:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on Ubuntu 18.04 using Python 3.6.10 in a conda virtual enviroment and installed scapy 2.4.3. My goal is  to detect a button press from an Amazon Dash button. This is my script:\r\n\r\n```\r\nfrom scapy.all import *\r\n\r\ndef detect_button(pkt):\r\n    if pkt.haslayer(DHCP) and pkt[Ether].src == \"MAC_ADDRESS\":\r\n            print(\"Button Press Detected\")\r\n\r\nsniff(prn = detect_button, filter = \"(udp and (port 67 or 68))\", store = 0)\r\n```\r\nWhen I do `sudo python script.py` I get the error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"script.py\", line 40, in <module>\r\n    from scapy.all import *\r\nImportError: No module named scapy.all\r\n```\r\nI tried both by installing scapy with pip and with conda. Nothing worked.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2591", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2591/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2591/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2591/events", "html_url": "https://github.com/secdev/scapy/issues/2591", "id": 600566801, "node_id": "MDU6SXNzdWU2MDA1NjY4MDE=", "number": 2591, "title": "netstat route information parsing error in FreeBSD", "user": {"login": "ahsanbarkati", "id": 11457225, "node_id": "MDQ6VXNlcjExNDU3MjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/11457225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahsanbarkati", "html_url": "https://github.com/ahsanbarkati", "followers_url": "https://api.github.com/users/ahsanbarkati/followers", "following_url": "https://api.github.com/users/ahsanbarkati/following{/other_user}", "gists_url": "https://api.github.com/users/ahsanbarkati/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahsanbarkati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahsanbarkati/subscriptions", "organizations_url": "https://api.github.com/users/ahsanbarkati/orgs", "repos_url": "https://api.github.com/users/ahsanbarkati/repos", "events_url": "https://api.github.com/users/ahsanbarkati/events{/privacy}", "received_events_url": "https://api.github.com/users/ahsanbarkati/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T20:26:11Z", "updated_at": "2020-04-29T13:28:07Z", "closed_at": "2020-04-29T13:28:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Brief Information\r\nThe output of FreeBSD-head for the utility netstat has changed. The column names for the command `netstat -rnW` has been altered which causes scapy to unable to parse it. This needs to be fixed on either the FreeBSD end or in scapy.\r\n\r\n* How to reproduce\r\nThe output of the function read_routes()  in /usr/local/lib/python3.7/site-packages/scapy/arch/unix.py should be\r\n[(0, 0, '172.16.2.1', 'vtnet0', '172.16.2.42', 1), (2130706433, 4294967295, '0.0.0.0', 'lo0', '127.0.0.1', 1), (2886730240, 4294967040, '0.0.0.0', 'vtnet0', '172.16.2.42', 1), (2886730282, 4294967295, '0.0.0.0', 'lo0', '127.0.0.1', 1)] \r\n\r\nfor the following routing table.\r\n```\r\nRouting tables\r\nInternet:\r\nDestination        Gateway            Flags       Use    Mtu      Netif Expire\r\ndefault            172.16.2.1         UGS      459207   1500     vtnet0\r\n127.0.0.1          link#2             UH          332  16384        lo0\r\n172.16.2.0/24      link#1             U           216   1500     vtnet0\r\n172.16.2.42        link#1             UHS           0  16384        lo0\r\n```\r\nbut it comes out to be [(0, 0, '172.16.2.1', '1500', '0.0.0.0', 1), (2130706433, 4294967295, '0.0.0.0', '16384', '0.0.0.0', 1), (2886730240, 4294967040, '0.0.0.0', '1500', '0.0.0.0', 1), (2886730282, 4294967295, '0.0.0.0', '16384', '0.0.0.0', 1)]\r\n\r\nThis can be easily reproduced by running the above function in the latest version of freebsd\r\n\r\nThe name of the interface is replaced by the MTU value. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2590", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2590/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2590/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2590/events", "html_url": "https://github.com/secdev/scapy/issues/2590", "id": 600390967, "node_id": "MDU6SXNzdWU2MDAzOTA5Njc=", "number": 2590, "title": "haslayer(Dot11) Python2 vs Python3", "user": {"login": "ratwix", "id": 3777291, "node_id": "MDQ6VXNlcjM3NzcyOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3777291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ratwix", "html_url": "https://github.com/ratwix", "followers_url": "https://api.github.com/users/ratwix/followers", "following_url": "https://api.github.com/users/ratwix/following{/other_user}", "gists_url": "https://api.github.com/users/ratwix/gists{/gist_id}", "starred_url": "https://api.github.com/users/ratwix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ratwix/subscriptions", "organizations_url": "https://api.github.com/users/ratwix/orgs", "repos_url": "https://api.github.com/users/ratwix/repos", "events_url": "https://api.github.com/users/ratwix/events{/privacy}", "received_events_url": "https://api.github.com/users/ratwix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-15T15:34:35Z", "updated_at": "2020-05-07T09:14:46Z", "closed_at": "2020-04-29T19:37:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Things to consider**\r\nTest on Rpi3\r\n\r\n**Brief description**\r\nWhen testing \"if packet.haslayer(Dot11)\", it return nothing (always false) with Python3 but work with Python2.\r\n\r\nHow to reproduce\r\n```\r\nfrom scapy.all import *\r\n\r\nap_list = []\r\n\r\ndef PacketHandler(packet):\r\n    if packet.haslayer(Dot11):\r\n        if packet.type == 0 and packet.subtype == 4 :\r\n            if packet.addr2 not in ap_list:\r\n                ap_list.append(packet.addr2)\r\n                print (\"AP MAC: \" + packet.addr2 + \" with SSID:\" + packet.info.decode() + \" type \" + packet.__class__.__name__)\r\n\r\nprint(\"Start sniffing\")\r\nsniff(iface=\"wlan0mon\", prn=PacketHandler, store=0)\r\nprint(\"Stop sniffing\")\r\n```\r\n\r\n**Actual result**\r\n$ sudo python3 test2.py\r\nStart sniffing\r\n\r\n\r\n**Expected result**\r\n$ sudo python test2.py\r\nStart sniffing\r\nAP MAC: 24:0a:64:ca:02:0c with SSID:\r\nAP MAC: 7a:67:05:de:f9:3c with SSID:\r\nAP MAC: 54:60:09:f9:97:26 with SSID:unrudal\r\nAP MAC: ac:b5:7d:b6:b3:e7 with SSID:\r\nAP MAC: e4:b2:fb:46:aa:66 with SSID:\r\n\r\nRelated resources\r\nVersion: 2.4.3\r\nPython: 3.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2589", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2589/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2589/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2589/events", "html_url": "https://github.com/secdev/scapy/issues/2589", "id": 600261529, "node_id": "MDU6SXNzdWU2MDAyNjE1Mjk=", "number": 2589, "title": "modbus.py orb module cannot be imported", "user": {"login": "5l1v3r1", "id": 34143537, "node_id": "MDQ6VXNlcjM0MTQzNTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/34143537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5l1v3r1", "html_url": "https://github.com/5l1v3r1", "followers_url": "https://api.github.com/users/5l1v3r1/followers", "following_url": "https://api.github.com/users/5l1v3r1/following{/other_user}", "gists_url": "https://api.github.com/users/5l1v3r1/gists{/gist_id}", "starred_url": "https://api.github.com/users/5l1v3r1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5l1v3r1/subscriptions", "organizations_url": "https://api.github.com/users/5l1v3r1/orgs", "repos_url": "https://api.github.com/users/5l1v3r1/repos", "events_url": "https://api.github.com/users/5l1v3r1/events{/privacy}", "received_events_url": "https://api.github.com/users/5l1v3r1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T12:31:06Z", "updated_at": "2020-04-19T17:00:27Z", "closed_at": "2020-04-19T17:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "from scapy.utils import orb\r\nImportError: cannot import name orb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2587", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2587/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2587/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2587/events", "html_url": "https://github.com/secdev/scapy/issues/2587", "id": 598417504, "node_id": "MDU6SXNzdWU1OTg0MTc1MDQ=", "number": 2587, "title": "What is the upper bound of sendpfast's rate? Why the delay occur?", "user": {"login": "caopeirui", "id": 15101929, "node_id": "MDQ6VXNlcjE1MTAxOTI5", "avatar_url": "https://avatars0.githubusercontent.com/u/15101929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caopeirui", "html_url": "https://github.com/caopeirui", "followers_url": "https://api.github.com/users/caopeirui/followers", "following_url": "https://api.github.com/users/caopeirui/following{/other_user}", "gists_url": "https://api.github.com/users/caopeirui/gists{/gist_id}", "starred_url": "https://api.github.com/users/caopeirui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caopeirui/subscriptions", "organizations_url": "https://api.github.com/users/caopeirui/orgs", "repos_url": "https://api.github.com/users/caopeirui/repos", "events_url": "https://api.github.com/users/caopeirui/events{/privacy}", "received_events_url": "https://api.github.com/users/caopeirui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-12T05:53:23Z", "updated_at": "2020-04-12T06:39:00Z", "closed_at": "2020-04-12T06:39:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We want to control traffic rate as precisely as possible.  The code is shown below.\r\n```\r\n    pkt_list = []\r\n    for i in range(2000):\r\n        message = str(time.time()) + ',' + src_ip + ',' + dst_ip + ',' + flag + ','\r\n        message = message.ljust(1472, 'f')\r\n        tmp_pkt = pkt / message\r\n        pkt_list.append(tmp_pkt)\r\n\r\n    # sendpfast(pkt_list, pps=2000)\r\n    sendpfast(pkt_list, mbps=0.8)\r\n```\r\nBefore sending packets, we added the timestamp flag into packets' message. \r\nWhen receiving packets by sniff, we also added the timestamp flag into logfile.\r\nWe discovered that the difference between the two timestamps in every packet is too large.\r\n\r\nWhat is the upper bound of sendpfast's rate? Why the delay occur?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2583", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2583/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2583/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2583/events", "html_url": "https://github.com/secdev/scapy/issues/2583", "id": 598157115, "node_id": "MDU6SXNzdWU1OTgxNTcxMTU=", "number": 2583, "title": "DNS error", "user": {"login": "j0ck3r2004", "id": 35640508, "node_id": "MDQ6VXNlcjM1NjQwNTA4", "avatar_url": "https://avatars3.githubusercontent.com/u/35640508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j0ck3r2004", "html_url": "https://github.com/j0ck3r2004", "followers_url": "https://api.github.com/users/j0ck3r2004/followers", "following_url": "https://api.github.com/users/j0ck3r2004/following{/other_user}", "gists_url": "https://api.github.com/users/j0ck3r2004/gists{/gist_id}", "starred_url": "https://api.github.com/users/j0ck3r2004/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j0ck3r2004/subscriptions", "organizations_url": "https://api.github.com/users/j0ck3r2004/orgs", "repos_url": "https://api.github.com/users/j0ck3r2004/repos", "events_url": "https://api.github.com/users/j0ck3r2004/events{/privacy}", "received_events_url": "https://api.github.com/users/j0ck3r2004/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-11T00:54:27Z", "updated_at": "2020-04-11T09:40:42Z", "closed_at": "2020-04-11T07:43:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\ni just started using scapy to capture DNS packets.I use `pkt=sniff(iface='lan',filter='version 4 and port 53',prn=dnshandler`.I am using version 4 as a filter because i dont want the ip's in 6 version but i cannot get any DNS layer when i am using this filter.When i just close the IPv6 prototol it work fine without the version filter. Please help me, i am thinking and trying so hard but i cant find nothing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2579", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2579/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2579/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2579/events", "html_url": "https://github.com/secdev/scapy/issues/2579", "id": 597132534, "node_id": "MDU6SXNzdWU1OTcxMzI1MzQ=", "number": 2579, "title": "Wrong FCS checkum in Dot11FCS", "user": {"login": "ash09", "id": 9435297, "node_id": "MDQ6VXNlcjk0MzUyOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9435297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ash09", "html_url": "https://github.com/ash09", "followers_url": "https://api.github.com/users/ash09/followers", "following_url": "https://api.github.com/users/ash09/following{/other_user}", "gists_url": "https://api.github.com/users/ash09/gists{/gist_id}", "starred_url": "https://api.github.com/users/ash09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ash09/subscriptions", "organizations_url": "https://api.github.com/users/ash09/orgs", "repos_url": "https://api.github.com/users/ash09/repos", "events_url": "https://api.github.com/users/ash09/events{/privacy}", "received_events_url": "https://api.github.com/users/ash09/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T09:00:03Z", "updated_at": "2020-04-16T14:29:46Z", "closed_at": "2020-04-16T14:29:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nChecksum is not calculated properly in Dot11FCS. The payload given to compute_fcs() contains the 4-bytes FCS field initialized with zeros.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: v2.4.3\r\n-   Python version: 3.5\r\n-   Operating System: Debian 9\r\n\r\n#### How to reproduce\r\n\r\n```\r\nIn [19]: pkt = RadioTap() / Dot11FCS() / Dot11Beacon()                                                                  \r\n\r\nIn [20]: pkt.show()                                                                                                     \r\n###[ RadioTap dummy ]### \r\n  version   = 0\r\n  pad       = 0\r\n  len       = None\r\n  present   = Flags\r\n  Flags     = FCS\r\n  notdecoded= ''\r\n###[ 802.11-FCS ]### \r\n     subtype   = 8\r\n     type      = Management\r\n     proto     = 0\r\n     FCfield   = \r\n     ID        = 0\r\n     addr1     = 00:00:00:00:00:00\r\n     addr2     = 00:00:00:00:00:00\r\n     addr3     = 00:00:00:00:00:00\r\n     SC        = 0\r\n     fcs       = None\r\n###[ 802.11 Beacon ]### \r\n        timestamp = 0\r\n        beacon_interval= 100\r\n        cap       = \r\n\r\n\r\nIn [21]: wireshark(Raw(pkt), linktype=DLT_IEEE802_11_RADIO)\r\n```\r\n\r\n#### Actual result\r\n\r\n![capture](https://user-images.githubusercontent.com/9435297/78878076-15cec200-7a52-11ea-9e90-a24068d662ed.png)\r\n\r\n#### Fix\r\n\r\nscapy/layers/dot11.py\r\n```\r\n     def post_build(self, p, pay):\r\n         p += pay\r\n         if self.fcs is None:\r\n-            p = p[:-4] + self.compute_fcs(p)\r\n+            p = p[:-4] + self.compute_fcs(p[:-4])\r\n         return p\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2575", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2575/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2575/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2575/events", "html_url": "https://github.com/secdev/scapy/issues/2575", "id": 595355080, "node_id": "MDU6SXNzdWU1OTUzNTUwODA=", "number": 2575, "title": "Cannot defragment packet with sniff", "user": {"login": "JackKuo-tw", "id": 21074047, "node_id": "MDQ6VXNlcjIxMDc0MDQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/21074047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackKuo-tw", "html_url": "https://github.com/JackKuo-tw", "followers_url": "https://api.github.com/users/JackKuo-tw/followers", "following_url": "https://api.github.com/users/JackKuo-tw/following{/other_user}", "gists_url": "https://api.github.com/users/JackKuo-tw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackKuo-tw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackKuo-tw/subscriptions", "organizations_url": "https://api.github.com/users/JackKuo-tw/orgs", "repos_url": "https://api.github.com/users/JackKuo-tw/repos", "events_url": "https://api.github.com/users/JackKuo-tw/events{/privacy}", "received_events_url": "https://api.github.com/users/JackKuo-tw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T19:04:35Z", "updated_at": "2020-04-06T19:33:40Z", "closed_at": "2020-04-06T19:06:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nCannot defragment packet with `sniff()`\r\n\r\n#### Environment\r\n\r\n-   Scapy version: 2.4.3\r\n-   Python version: 3.7.6\r\n-   Operating System:  macOS 10.15.4\r\n\r\n#### How to reproduce\r\n\r\n`pkts = sniff(offline=\"./post.pcap\", session=TCPSession)`\r\n\r\n#### Actual result\r\n\r\nNot defragment the packets.\r\n\r\n#### Expected result\r\n\r\nIt should defragment the packets.\r\n\r\n#### Related resources\r\n\r\n- [The problem pcap file](https://www.dropbox.com/s/cepr8sqysmg5u2r/post.pcap?dl=0)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2573", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2573/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2573/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2573/events", "html_url": "https://github.com/secdev/scapy/issues/2573", "id": 595295663, "node_id": "MDU6SXNzdWU1OTUyOTU2NjM=", "number": 2573, "title": "/etc/service and ipv6 warnings on startup", "user": {"login": "skewty", "id": 9087223, "node_id": "MDQ6VXNlcjkwODcyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9087223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skewty", "html_url": "https://github.com/skewty", "followers_url": "https://api.github.com/users/skewty/followers", "following_url": "https://api.github.com/users/skewty/following{/other_user}", "gists_url": "https://api.github.com/users/skewty/gists{/gist_id}", "starred_url": "https://api.github.com/users/skewty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skewty/subscriptions", "organizations_url": "https://api.github.com/users/skewty/orgs", "repos_url": "https://api.github.com/users/skewty/repos", "events_url": "https://api.github.com/users/skewty/events{/privacy}", "received_events_url": "https://api.github.com/users/skewty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T17:32:15Z", "updated_at": "2020-06-12T10:49:58Z", "closed_at": "2020-06-12T10:49:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nGetting /etc/service and ipv6 warnings on startup\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `3.6`\r\n-   Operating System: `Fedora Silverblue`\r\n\r\n\r\n#### How to reproduce\r\n\r\nSimply use scapy in some python code\r\n\r\n#### Actual result\r\n\r\n```\r\n             data.py:228 10:24:02,020 [W] Couldn't parse file [/etc/services]: line [b'x11\\t\\t6000-6063/tcp'] (invalid literal for int() with base 10: b'6000-6063')\r\n             data.py:228 10:24:02,021 [W] Couldn't parse file [/etc/services]: line [b'x11\\t\\t6000-6063/udp'] (invalid literal for int() with base 10: b'6000-6063')\r\n             data.py:228 10:24:02,028 [W] Couldn't parse file [/etc/services]: line [b'ircu\\t\\t6665-6669/tcp'] (invalid literal for int() with base 10: b'6665-6669')\r\n            error.py:097 10:24:02,482 [W] No route found for IPv6 destination :: (no default route?)\r\n```\r\n\r\n#### Expected result\r\n\r\nNo warnings.  My services file is valid and no IPV6 is valid.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2569", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2569/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2569/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2569/events", "html_url": "https://github.com/secdev/scapy/issues/2569", "id": 594191834, "node_id": "MDU6SXNzdWU1OTQxOTE4MzQ=", "number": 2569, "title": "How can I add a field in class modbus response", "user": {"login": "salwaalem", "id": 40567501, "node_id": "MDQ6VXNlcjQwNTY3NTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/40567501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salwaalem", "html_url": "https://github.com/salwaalem", "followers_url": "https://api.github.com/users/salwaalem/followers", "following_url": "https://api.github.com/users/salwaalem/following{/other_user}", "gists_url": "https://api.github.com/users/salwaalem/gists{/gist_id}", "starred_url": "https://api.github.com/users/salwaalem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salwaalem/subscriptions", "organizations_url": "https://api.github.com/users/salwaalem/orgs", "repos_url": "https://api.github.com/users/salwaalem/repos", "events_url": "https://api.github.com/users/salwaalem/events{/privacy}", "received_events_url": "https://api.github.com/users/salwaalem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-05T01:03:24Z", "updated_at": "2020-04-05T17:14:26Z", "closed_at": "2020-04-05T13:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI used this function published in :\r\n\r\nclass ModbusPDU03ReadHoldingRegistersResponse(Packet):\r\n    name = \"Read Holding Registers Response\"\r\n    fields_desc = [XByteField(\"funcCode\", 0x03),\r\n                   BitFieldLenField(\"byteCount\", None, 8,\r\n                                    count_of=\"registerVal\",\r\n                                    adjust=lambda pkt, x: x * 2),\r\n                   FieldListField(\"registerVal\", [0x0000],\r\n                                  ShortField(\"\", 0x0000),\r\n                                  count_from=lambda pkt: pkt.byteCount)]\r\n\r\nAnd I need to add another field for registerNum. I want to do something like \r\nFieldListField(\"registerNum\", [0x0000],\r\n                                  ShortField(\"\", 0x0000),\r\n                                  count_from=lambda ....)\r\nBut I ignore what I have to put in the ....\r\nMy goal is to get the list of the register values and number. For Values it is okay I can do a function which retrieves the liste of registerVal because this field exists already in the classe but for getting the list of registerNum I can't do because the field doesn't exist. I have to add it\r\n\r\nAny help please ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2566", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2566/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2566/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2566/events", "html_url": "https://github.com/secdev/scapy/issues/2566", "id": 592682977, "node_id": "MDU6SXNzdWU1OTI2ODI5Nzc=", "number": 2566, "title": "External IP", "user": {"login": "habi498", "id": 61708020, "node_id": "MDQ6VXNlcjYxNzA4MDIw", "avatar_url": "https://avatars3.githubusercontent.com/u/61708020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/habi498", "html_url": "https://github.com/habi498", "followers_url": "https://api.github.com/users/habi498/followers", "following_url": "https://api.github.com/users/habi498/following{/other_user}", "gists_url": "https://api.github.com/users/habi498/gists{/gist_id}", "starred_url": "https://api.github.com/users/habi498/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/habi498/subscriptions", "organizations_url": "https://api.github.com/users/habi498/orgs", "repos_url": "https://api.github.com/users/habi498/repos", "events_url": "https://api.github.com/users/habi498/events{/privacy}", "received_events_url": "https://api.github.com/users/habi498/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T14:37:37Z", "updated_at": "2020-04-02T14:41:37Z", "closed_at": "2020-04-02T14:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Scapy works fine.\r\n\r\nbut when it comes to same IP, it not working.\r\n\r\nIt is a linux system.i am looping through a pcap file and use sendp to send the packets. but when the destination of packets in pcap file is the 207.180.*.*. which is the external ip address of the same computer, scapy fails. \r\n\r\nwhat should i do, should i do sendp( packet, iface=\"lo\") or \r\npacket[IP].dst='127.0.0.1' \r\nor conf.L3socket = L3RawSocket\r\n\r\ni have been trying all this. all day along, pls help me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2564", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2564/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2564/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2564/events", "html_url": "https://github.com/secdev/scapy/issues/2564", "id": 591664742, "node_id": "MDU6SXNzdWU1OTE2NjQ3NDI=", "number": 2564, "title": "Data packet is considered as Malformed", "user": {"login": "vladinko0", "id": 16008547, "node_id": "MDQ6VXNlcjE2MDA4NTQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/16008547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladinko0", "html_url": "https://github.com/vladinko0", "followers_url": "https://api.github.com/users/vladinko0/followers", "following_url": "https://api.github.com/users/vladinko0/following{/other_user}", "gists_url": "https://api.github.com/users/vladinko0/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladinko0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladinko0/subscriptions", "organizations_url": "https://api.github.com/users/vladinko0/orgs", "repos_url": "https://api.github.com/users/vladinko0/repos", "events_url": "https://api.github.com/users/vladinko0/events{/privacy}", "received_events_url": "https://api.github.com/users/vladinko0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-01T06:35:03Z", "updated_at": "2020-04-01T07:05:28Z", "closed_at": "2020-04-01T06:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nI am trying to send WLAN data pcaket containg zero this way:\r\n```\r\ndot11 = Dot11(type=2, subtype=0, addr1=\"01:00:00:00:00:00\",\r\n              addr2=str(RandMAC()), addr3=str(RandMAC()))\r\ndata = '0'\r\nframe = RadioTap() / dot11 / data\r\nsendp(frame, iface=\"wlan0\")\r\n```\r\nBut if I capture this packet with wireshark, I see it is Malformed Packet:\r\n\r\n![imageedit_4_8983305168](https://user-images.githubusercontent.com/16008547/78105815-8c7c1780-73e1-11ea-841a-467f1655bb00.png)\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `3.7`\r\n-   Operating System: `Ubuntu 18.04 LTS`\r\n\r\n#### Expected result\r\n![imageedit_2_2350298165](https://user-images.githubusercontent.com/16008547/78106365-c4d02580-73e2-11ea-8886-6ca9c8dc4b0b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2563", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2563/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2563/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2563/events", "html_url": "https://github.com/secdev/scapy/issues/2563", "id": 591467162, "node_id": "MDU6SXNzdWU1OTE0NjcxNjI=", "number": 2563, "title": "Problem with func 6 of Modbus", "user": {"login": "salwaalem", "id": 40567501, "node_id": "MDQ6VXNlcjQwNTY3NTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/40567501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salwaalem", "html_url": "https://github.com/salwaalem", "followers_url": "https://api.github.com/users/salwaalem/followers", "following_url": "https://api.github.com/users/salwaalem/following{/other_user}", "gists_url": "https://api.github.com/users/salwaalem/gists{/gist_id}", "starred_url": "https://api.github.com/users/salwaalem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salwaalem/subscriptions", "organizations_url": "https://api.github.com/users/salwaalem/orgs", "repos_url": "https://api.github.com/users/salwaalem/repos", "events_url": "https://api.github.com/users/salwaalem/events{/privacy}", "received_events_url": "https://api.github.com/users/salwaalem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T22:12:11Z", "updated_at": "2020-04-01T08:33:30Z", "closed_at": "2020-04-01T08:33:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a problem with func 6 of Modbus.\r\n\r\nI want to get the list of the registers numbers and the registers values. It works for the other functions but not for func 6 and 5 I have all the time 0 for the list of registers number and values/flow . Here is my code in my parser.py:\r\n\r\n    def reg_no_list(s):\r\n\tr = []\r\n\tfor p in s:\r\n\t\tif p.haslayer('ModbusADURequest'):\r\n\t\t\ttry:\r\n\t\t\t\tr.append(p['ModbusADURequest'][1].registerAddr)\r\n\t\t\texcept AttributeError:\r\n\t\t\t\tpass\r\n\treturn r\r\n\r\n    def reg_val_list(s):\r\n\tv = []\r\n\tfor p in s:\r\n\t\tif p.haslayer('ModbusADUResponse'):\r\n\t\t\ttry:\r\n\t\t\t\tv += p['ModbusADUResponse'][1].registerValue\r\n\t\t\texcept AttributeError:\r\n\t\t\t\tpass\r\n\treturn v\r\n\r\nIn my modbus.py:\r\n    \r\n    class ModbusPDU06WriteSingleRegisterRequest(Packet):\r\n    name = \"Write Single Register\"\r\n    fields_desc = [XByteField(\"funcCode\", 0x06),\r\n                   XShortField(\"registerAddr\", 0x0000),\r\n                   XShortField(\"registerValue\", 0x0000)]\r\n\r\n    def extract_padding(self, s):\r\n        return b\"\", None\r\n\r\n\r\n    class ModbusPDU06WriteSingleRegisterResponse(Packet):\r\n    name = \"Write Single Register Response\"\r\n    fields_desc = [XByteField(\"funcCode\", 0x06),\r\n                   XShortField(\"registerAddr\", 0x0000),\r\n                   XShortField(\"registerValue\", 0x0000)]\r\n\r\n\r\n    class ModbusPDU06WriteSingleRegisterError(Packet):\r\n    name = \"Write Single Register Exception\"\r\n    fields_desc = [XByteField(\"funcCode\", 0x86),\r\n                   ByteEnumField(\"exceptCode\", 1, _modbus_exceptions)]\r\n\r\nDo you have any idea please ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2554", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2554/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2554/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2554/events", "html_url": "https://github.com/secdev/scapy/issues/2554", "id": 589877675, "node_id": "MDU6SXNzdWU1ODk4Nzc2NzU=", "number": 2554, "title": "run_scapy tests fail randomly", "user": {"login": "gpotter2", "id": 10530980, "node_id": "MDQ6VXNlcjEwNTMwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10530980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpotter2", "html_url": "https://github.com/gpotter2", "followers_url": "https://api.github.com/users/gpotter2/followers", "following_url": "https://api.github.com/users/gpotter2/following{/other_user}", "gists_url": "https://api.github.com/users/gpotter2/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpotter2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpotter2/subscriptions", "organizations_url": "https://api.github.com/users/gpotter2/orgs", "repos_url": "https://api.github.com/users/gpotter2/repos", "events_url": "https://api.github.com/users/gpotter2/events{/privacy}", "received_events_url": "https://api.github.com/users/gpotter2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "guedou", "id": 11683796, "node_id": "MDQ6VXNlcjExNjgzNzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11683796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guedou", "html_url": "https://github.com/guedou", "followers_url": "https://api.github.com/users/guedou/followers", "following_url": "https://api.github.com/users/guedou/following{/other_user}", "gists_url": "https://api.github.com/users/guedou/gists{/gist_id}", "starred_url": "https://api.github.com/users/guedou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guedou/subscriptions", "organizations_url": "https://api.github.com/users/guedou/orgs", "repos_url": "https://api.github.com/users/guedou/repos", "events_url": "https://api.github.com/users/guedou/events{/privacy}", "received_events_url": "https://api.github.com/users/guedou/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "guedou", "id": 11683796, "node_id": "MDQ6VXNlcjExNjgzNzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11683796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guedou", "html_url": "https://github.com/guedou", "followers_url": "https://api.github.com/users/guedou/followers", "following_url": "https://api.github.com/users/guedou/following{/other_user}", "gists_url": "https://api.github.com/users/guedou/gists{/gist_id}", "starred_url": "https://api.github.com/users/guedou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guedou/subscriptions", "organizations_url": "https://api.github.com/users/guedou/orgs", "repos_url": "https://api.github.com/users/guedou/repos", "events_url": "https://api.github.com/users/guedou/events{/privacy}", "received_events_url": "https://api.github.com/users/guedou/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-29T20:25:34Z", "updated_at": "2020-05-18T13:06:30Z", "closed_at": "2020-05-18T13:06:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n### Writing output...\r\npy38-linux_non_root run-test: commands[1] | coverage combine\r\n___________________________________ summary ____________________________________\r\n  py38-linux_non_root: commands succeeded\r\n  congratulations :)\r\nERROR: Too many parameters : [/tmp/tmp.t0G30fXRX3]\r\n##[error]Process completed with exit code 1.\r\n```\r\nThis happens randomly. @guedou could you please have a look? thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2553", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2553/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2553/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2553/events", "html_url": "https://github.com/secdev/scapy/issues/2553", "id": 589649842, "node_id": "MDU6SXNzdWU1ODk2NDk4NDI=", "number": 2553, "title": "creating gtp  version2 pcaket", "user": {"login": "prujan", "id": 49917340, "node_id": "MDQ6VXNlcjQ5OTE3MzQw", "avatar_url": "https://avatars1.githubusercontent.com/u/49917340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prujan", "html_url": "https://github.com/prujan", "followers_url": "https://api.github.com/users/prujan/followers", "following_url": "https://api.github.com/users/prujan/following{/other_user}", "gists_url": "https://api.github.com/users/prujan/gists{/gist_id}", "starred_url": "https://api.github.com/users/prujan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prujan/subscriptions", "organizations_url": "https://api.github.com/users/prujan/orgs", "repos_url": "https://api.github.com/users/prujan/repos", "events_url": "https://api.github.com/users/prujan/events{/privacy}", "received_events_url": "https://api.github.com/users/prujan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-28T20:08:06Z", "updated_at": "2020-03-29T13:54:13Z", "closed_at": "2020-03-29T13:54:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using scapy  2.4.3.dev404, python 3.6.\r\n![gtv2_create_session_req](https://user-images.githubusercontent.com/49917340/77832572-38a2d180-7148-11ea-9311-03007cf4210d.PNG)\r\n![gtv2_code](https://user-images.githubusercontent.com/49917340/77832693-f29a3d80-7148-11ea-9ce1-a3081cdc9fef.PNG)\r\n\r\n\r\nI create gtp v2 Create Session Request Message and writing to pcap.\r\nWhen i open pcap via wireshark i got \"Packet size limited during capture\".\r\nThe attached code and pcap below.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2551", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2551/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2551/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2551/events", "html_url": "https://github.com/secdev/scapy/issues/2551", "id": 589525014, "node_id": "MDU6SXNzdWU1ODk1MjUwMTQ=", "number": 2551, "title": "Revert print of skip message", "user": {"login": "polybassa", "id": 1676055, "node_id": "MDQ6VXNlcjE2NzYwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1676055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polybassa", "html_url": "https://github.com/polybassa", "followers_url": "https://api.github.com/users/polybassa/followers", "following_url": "https://api.github.com/users/polybassa/following{/other_user}", "gists_url": "https://api.github.com/users/polybassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/polybassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polybassa/subscriptions", "organizations_url": "https://api.github.com/users/polybassa/orgs", "repos_url": "https://api.github.com/users/polybassa/repos", "events_url": "https://api.github.com/users/polybassa/events{/privacy}", "received_events_url": "https://api.github.com/users/polybassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-28T07:18:17Z", "updated_at": "2020-04-10T12:11:52Z", "closed_at": "2020-04-10T12:11:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reminder: This changes have to be reverted. The purpose of subprocess.call was to display this message in the output of UTScapy. sys.stderr is redirected, and will not fulfill this purpose.\r\n\r\n_Originally posted by @polybassa in https://github.com/secdev/scapy/pull/2459/review_comment/create_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2549", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2549/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2549/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2549/events", "html_url": "https://github.com/secdev/scapy/issues/2549", "id": 588450417, "node_id": "MDU6SXNzdWU1ODg0NTA0MTc=", "number": 2549, "title": "plain_str not consistent between Py2 and Py3", "user": {"login": "akorb", "id": 6689889, "node_id": "MDQ6VXNlcjY2ODk4ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6689889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akorb", "html_url": "https://github.com/akorb", "followers_url": "https://api.github.com/users/akorb/followers", "following_url": "https://api.github.com/users/akorb/following{/other_user}", "gists_url": "https://api.github.com/users/akorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/akorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akorb/subscriptions", "organizations_url": "https://api.github.com/users/akorb/orgs", "repos_url": "https://api.github.com/users/akorb/repos", "events_url": "https://api.github.com/users/akorb/events{/privacy}", "received_events_url": "https://api.github.com/users/akorb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 564414240, "node_id": "MDU6TGFiZWw1NjQ0MTQyNDA=", "url": "https://api.github.com/repos/secdev/scapy/labels/convergence", "name": "convergence", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T14:10:27Z", "updated_at": "2020-04-06T09:18:35Z", "closed_at": "2020-03-31T08:44:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Python 2 (expected result)**\r\n```python\r\n>>> plain_str(b'\\x3e\\xb4\\xef\\x2c\\x11')\r\n'>\\xb4\\xef,\\x11'\r\n```\r\n\r\n**Python 3 (unexpected result)**\r\n```python\r\n>>> plain_str(b'\\x3e\\xb4\\xef\\x2c\\x11')                                                                                                                                             \r\n'>,\\x11'\r\n```\r\n\r\n**Cause** is `errors=\"ignore\"`\r\n```python\r\ndef plain_str(x):                          \r\n    \"\"\"Convert basic byte objects to str\"\"\"\r\n    if isinstance(x, bytes):               \r\n        return x.decode(errors=\"ignore\")   \r\n    return str(x)       \r\n```\r\n\r\nIt just ignores values that are not in a valid range for the codec.\r\n\r\n**Possible fix**\r\n```python\r\ndef plain_str(x):                          \r\n    \"\"\"Convert basic byte objects to str\"\"\"\r\n    if isinstance(x, bytes):               \r\n        return x.decode(errors=\"backslashreplace\")   \r\n    return str(x)       \r\n```        \r\nBut this breaks compatibility for Python 3.4\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2544", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2544/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2544/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2544/events", "html_url": "https://github.com/secdev/scapy/issues/2544", "id": 587494886, "node_id": "MDU6SXNzdWU1ODc0OTQ4ODY=", "number": 2544, "title": "Add NetflowHeaderV10 length computation", "user": {"login": "ivan-balan", "id": 51652966, "node_id": "MDQ6VXNlcjUxNjUyOTY2", "avatar_url": "https://avatars3.githubusercontent.com/u/51652966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-balan", "html_url": "https://github.com/ivan-balan", "followers_url": "https://api.github.com/users/ivan-balan/followers", "following_url": "https://api.github.com/users/ivan-balan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-balan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-balan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-balan/subscriptions", "organizations_url": "https://api.github.com/users/ivan-balan/orgs", "repos_url": "https://api.github.com/users/ivan-balan/repos", "events_url": "https://api.github.com/users/ivan-balan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-balan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691054, "node_id": "MDU6TGFiZWwyNjc2OTEwNTQ=", "url": "https://api.github.com/repos/secdev/scapy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T07:24:52Z", "updated_at": "2020-04-08T10:32:16Z", "closed_at": "2020-04-08T10:32:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Brief description\r\n```\r\nclass NetflowHeaderV10(Packet):\r\n    \"\"\"IPFix (Netflow V10) Header\"\"\"\r\n    name = \"IPFix (Netflow V10) Header\"\r\n    fields_desc = [\r\n        ShortField(\"length\", None, ),  #<<Causing issues as this this value remains unchanged\r\n        UTCTimeField(\"ExportTime\", 0),\r\n        IntField(\"flowSequence\", 0),\r\n        IntField(\"ObservationDomainID\", 0)\r\n    ]\r\n```\r\n#### Environment\r\n\r\n-   Scapy version: Version 2.4.3.dev401\r\n-   Python version: 2.7\r\n-   Operating System: Fedora 31\r\n\r\nI`m not very experienced in Scapy, but as far as I my knowledge's go, it should be calculated during the post_build.\r\n\r\nMy guess:\r\n```\r\nclass NetflowHeaderV10(Packet):\r\n    \"\"\"IPFix (Netflow V10) Header\"\"\"\r\n    name = \"IPFix (Netflow V10) Header\"\r\n    fields_desc = [\r\n        ShortField(\"length\", None, ),\r\n        UTCTimeField(\"ExportTime\", 0),\r\n        IntField(\"flowSequence\", 0),\r\n        IntField(\"ObservationDomainID\", 0)\r\n    ]\r\n\r\n    def post_build(self, pkt, pay):\r\n        if self.length is None:\r\n            length = len(pkt) + len(pay)\r\n            pkt = struct.pack(\"!H\", length) + pkt[2:]\r\n\r\n        return pkt + pay\r\n```\r\nI tried it in a few examples, seem to work as expected.\r\n\r\nThanks for a great tool.\r\nStay safe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2543", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2543/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2543/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2543/events", "html_url": "https://github.com/secdev/scapy/issues/2543", "id": 586249365, "node_id": "MDU6SXNzdWU1ODYyNDkzNjU=", "number": 2543, "title": "Sessions can crash Scapy", "user": {"login": "guedou", "id": 11683796, "node_id": "MDQ6VXNlcjExNjgzNzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11683796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guedou", "html_url": "https://github.com/guedou", "followers_url": "https://api.github.com/users/guedou/followers", "following_url": "https://api.github.com/users/guedou/following{/other_user}", "gists_url": "https://api.github.com/users/guedou/gists{/gist_id}", "starred_url": "https://api.github.com/users/guedou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guedou/subscriptions", "organizations_url": "https://api.github.com/users/guedou/orgs", "repos_url": "https://api.github.com/users/guedou/repos", "events_url": "https://api.github.com/users/guedou/events{/privacy}", "received_events_url": "https://api.github.com/users/guedou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T14:24:49Z", "updated_at": "2020-04-12T16:18:35Z", "closed_at": "2020-04-12T16:18:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Loading a Python3 session on a Python2 Scapy, will crash it.\r\n\r\n```\r\n./run_scapy -3 -s crash.session\r\n./run_scapy -2 -s crash.session\r\n[..]\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/home/guedou/Projects/Scapy/scapy-issues/scapy/__main__.py\", line 15, in <module>\r\n    interact()\r\n  File \"scapy/main.py\", line 573, in interact\r\n    init_session(session_name, mydict)\r\n  File \"scapy/main.py\", line 420, in init_session\r\n    \"rb\"))\r\nValueError: unsupported pickle protocol: 4\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2542", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2542/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2542/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2542/events", "html_url": "https://github.com/secdev/scapy/issues/2542", "id": 586208935, "node_id": "MDU6SXNzdWU1ODYyMDg5MzU=", "number": 2542, "title": "load_mib breaks mib", "user": {"login": "gpotter2", "id": 10530980, "node_id": "MDQ6VXNlcjEwNTMwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10530980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpotter2", "html_url": "https://github.com/gpotter2", "followers_url": "https://api.github.com/users/gpotter2/followers", "following_url": "https://api.github.com/users/gpotter2/following{/other_user}", "gists_url": "https://api.github.com/users/gpotter2/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpotter2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpotter2/subscriptions", "organizations_url": "https://api.github.com/users/gpotter2/orgs", "repos_url": "https://api.github.com/users/gpotter2/repos", "events_url": "https://api.github.com/users/gpotter2/events{/privacy}", "received_events_url": "https://api.github.com/users/gpotter2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-23T13:28:50Z", "updated_at": "2020-06-07T17:47:53Z", "closed_at": "2020-06-07T17:47:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Calling `load_mib` is supposed to add entries to the current MIB, but it breaks stuff.\r\nIt seems that calling it deduplicates all entries that have the same value (even with different keys). We end up having some keys unresolved..\r\n\r\n**Demo:**\r\n\r\na.txt\r\n```\r\n-- MIB test\r\nscapy       OBJECT IDENTIFIER ::= {test 2807}\r\n```\r\nshell\r\n```python\r\n>>> ASN1_OID(\"2.5.29.19\")\r\n<ASN1_OID['basicConstraints']>\r\n>>> load_mib(\"a.txt\")\r\n>>> ASN1_OID(\"2.5.29.19\")\r\n<ASN1_OID['.2.5.29.19']>\r\n```\r\n\r\nThis is the root of the `AttributeError: 'Cert' object has no attribute 'cA'` bug we had two years ago: https://github.com/secdev/scapy/pull/1571#issuecomment-434651752 . When the `2.5.29.19` oid is unresolved, `cA` is never set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2540", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2540/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2540/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2540/events", "html_url": "https://github.com/secdev/scapy/issues/2540", "id": 585747242, "node_id": "MDU6SXNzdWU1ODU3NDcyNDI=", "number": 2540, "title": "run_scapy is broken", "user": {"login": "guedou", "id": 11683796, "node_id": "MDQ6VXNlcjExNjgzNzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11683796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guedou", "html_url": "https://github.com/guedou", "followers_url": "https://api.github.com/users/guedou/followers", "following_url": "https://api.github.com/users/guedou/following{/other_user}", "gists_url": "https://api.github.com/users/guedou/gists{/gist_id}", "starred_url": "https://api.github.com/users/guedou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guedou/subscriptions", "organizations_url": "https://api.github.com/users/guedou/orgs", "repos_url": "https://api.github.com/users/guedou/repos", "events_url": "https://api.github.com/users/guedou/events{/privacy}", "received_events_url": "https://api.github.com/users/guedou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-22T15:44:41Z", "updated_at": "2020-03-23T11:30:37Z", "closed_at": "2020-03-23T11:30:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #2520 broke `run_scapy` on Ubuntu, yet works on macOS. I will provide a fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2536", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2536/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2536/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2536/events", "html_url": "https://github.com/secdev/scapy/issues/2536", "id": 584568538, "node_id": "MDU6SXNzdWU1ODQ1Njg1Mzg=", "number": 2536, "title": "IGMPv3 igmpize broken", "user": {"login": "Radvendii", "id": 1239929, "node_id": "MDQ6VXNlcjEyMzk5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Radvendii", "html_url": "https://github.com/Radvendii", "followers_url": "https://api.github.com/users/Radvendii/followers", "following_url": "https://api.github.com/users/Radvendii/following{/other_user}", "gists_url": "https://api.github.com/users/Radvendii/gists{/gist_id}", "starred_url": "https://api.github.com/users/Radvendii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Radvendii/subscriptions", "organizations_url": "https://api.github.com/users/Radvendii/orgs", "repos_url": "https://api.github.com/users/Radvendii/repos", "events_url": "https://api.github.com/users/Radvendii/events{/privacy}", "received_events_url": "https://api.github.com/users/Radvendii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T17:13:30Z", "updated_at": "2020-03-25T13:41:46Z", "closed_at": "2020-03-25T13:41:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nthe `igmpize` method is broken when used on IGMPv3 message types that don't appear in IGMP.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `scapy version and/or commit-hash`\r\n    aefcfd322999637abeed183447d60112070e7a35 (master)\r\n-   Python version: `e.g. 3.5`\r\n    Python 3.6.10\r\n-   Operating System: `e.g. Minix 3.4`\r\n    Nixos Unstable (nixos-20.09pre215947.82b54d49066)\r\n\r\n#### How to reproduce\r\n\r\n```\r\nfrom scapy.contrib.igmpv3 import *\r\n\r\na = Ether()\r\nb = IP()\r\nc = IGMPv3()/IGMPv3mr(records = [IGMPv3gr(maddr = \"232.1.1.10\", srcaddrs = \"10.0.0.10\")])\r\nx = a/b/c\r\nx[IGMPv3].igmpize()\r\n```\r\n\r\n1. construct a simple IGMPv3 packet (but not a membership query, which is shared with IGMP)\r\n2. try to `.igmpize()`\r\n\r\n#### Actual result\r\n\r\n```\r\n>>> x[IGMPv3].igmpize()\r\nWARNING: Invalid IGMP Type detected !\r\nFalse\r\n```\r\n\r\n#### Expected result\r\n\r\nIt would return `True`, and then I would be able to send the packet with sendp() and it would be valid.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2535", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2535/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2535/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2535/events", "html_url": "https://github.com/secdev/scapy/issues/2535", "id": 584324246, "node_id": "MDU6SXNzdWU1ODQzMjQyNDY=", "number": 2535, "title": "Execute each campaign in own environment", "user": {"login": "akorb", "id": 6689889, "node_id": "MDQ6VXNlcjY2ODk4ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6689889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akorb", "html_url": "https://github.com/akorb", "followers_url": "https://api.github.com/users/akorb/followers", "following_url": "https://api.github.com/users/akorb/following{/other_user}", "gists_url": "https://api.github.com/users/akorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/akorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akorb/subscriptions", "organizations_url": "https://api.github.com/users/akorb/orgs", "repos_url": "https://api.github.com/users/akorb/repos", "events_url": "https://api.github.com/users/akorb/events{/privacy}", "received_events_url": "https://api.github.com/users/akorb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-19T10:51:42Z", "updated_at": "2020-06-03T09:28:35Z", "closed_at": "2020-06-03T09:28:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Problem\r\nThe current test approach adds a dependency on the order of the test execution.\r\nIt might succeed in one test execution order but fail in another.\r\nIt might succeed locally but fail on the Travis server.\r\nI think Unit Tests should be independent units which are reliable and not rely on side effects.\r\nFor clarification, I only talk about the order of campaigns/uts files, not about the containing test sets or tests.\r\n\r\n### Example 1\r\nSome automotive related tests import _ISOTPSocket_ what, depending on the execution environment, actually imports _ISOTPSoftSocket_ or _ISOTPNativeSocket_. Now if _ISOTPSoftSocket_ is imported in one test and _ISOTPNativeSocket_ should have been imported in a later one through configuration, _ISOTPSoftSocket_ is still used since it was already imported and python does not reimport.\r\n\r\n### Example 2\r\nExecution Order 1:\r\n```C\r\nmyTests1.uts // succeeds\r\nmyTests2.uts // succeeds\r\n```\r\n\r\nExecution Order 2:\r\n```C\r\nmyTests2.uts // succeeds\r\nmyTests1.uts // fails\r\n```\r\n\r\n### Idea\r\nExecute each campaign in an own python process and get its output over _stdout_. I guess it shouldn't be very time costly and would add a lot of reliability to the unit tests.\r\nThis would also allow running tests in parallel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2533", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2533/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2533/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2533/events", "html_url": "https://github.com/secdev/scapy/issues/2533", "id": 584209145, "node_id": "MDU6SXNzdWU1ODQyMDkxNDU=", "number": 2533, "title": "IKEv2 SA_AUTH negotiation fails", "user": {"login": "Zq1993Zq", "id": 32011877, "node_id": "MDQ6VXNlcjMyMDExODc3", "avatar_url": "https://avatars3.githubusercontent.com/u/32011877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zq1993Zq", "html_url": "https://github.com/Zq1993Zq", "followers_url": "https://api.github.com/users/Zq1993Zq/followers", "following_url": "https://api.github.com/users/Zq1993Zq/following{/other_user}", "gists_url": "https://api.github.com/users/Zq1993Zq/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zq1993Zq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zq1993Zq/subscriptions", "organizations_url": "https://api.github.com/users/Zq1993Zq/orgs", "repos_url": "https://api.github.com/users/Zq1993Zq/repos", "events_url": "https://api.github.com/users/Zq1993Zq/events{/privacy}", "received_events_url": "https://api.github.com/users/Zq1993Zq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T07:13:23Z", "updated_at": "2020-03-25T03:38:21Z", "closed_at": "2020-03-21T10:12:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Things to consider\r\nHello:\r\n   I'm learning how to use Scapy and in order to trying to establish an IKEv2 handshake with my equitments\r\n   Completed IKE_INIT of negotiation, I also try to create an IKE_AUTH initiator request based on IKE_INIT, but negotiation fail, the reason is IKE_AUTH Initiator of packet ICD is bad, can you help me look up my create packet and give me some suggests.\r\n    this is my create IKE_AUTH initiator:\r\n\t\r\n\r\n`\r\n\r\n    transform_auth_1 = IKEv2_payload_Transform(next_payload='Transform', transform_type='Encryption',\r\n                                               transform_id=\"3DES\", key_length=0xa8)\r\n    transform_auth_2 = IKEv2_payload_Transform(next_payload='Transform', transform_type='Integrity',\r\n                                               transform_id=\"SHA2-256-128\")\r\n    transform_auth_3 = IKEv2_payload_Transform(next_payload='last', transform_type='Extended Sequence Number',\r\n                                               transform_id=\"No ESN\")\r\n    ts_i = IPv4TrafficSelector(IP_protocol_ID=\"All protocols\", starting_address_v4='10.9.206.115',\r\n                               ending_address_v4='10.9.206.115', length=16)\r\n    ts_r = IPv4TrafficSelector(IP_protocol_ID=\"All protocols\", starting_address_v4='10.9.203.213',\r\n                               ending_address_v4='10.9.203.213', length=16)\r\n\r\n    encry_packet = IKEv2_payload_IDi(next_payload='AUTH', IDtype='IPv4_addr', load= binascii.unhexlify(\"0a09ce73\") ) / \\\r\n                   IKEv2_payload_AUTH(next_payload='SA', auth_type='Shared Key Message Integrity Code',) / \\\r\n                   IKEv2_payload_SA(next_payload='TSi',\r\n                                    prop=IKEv2_payload_Proposal(next_payload='last', SPI=b'\\xc1\\x90]\\xd1',\r\n                                                                SPIsize=4,\r\n                                                                proto=\"ESP\", trans_nb=3,\r\n                                                                trans=transform_auth_1 /\r\n                                                                      transform_auth_2 /\r\n                                                                      transform_auth_3, )) / \\\r\n                   IKEv2_payload_TSi(next_payload='TSr', number_of_TSs=1, traffic_selector=ts_i) / \\\r\n                   IKEv2_payload_TSr(next_payload='Notify', number_of_TSs=1, traffic_selector=ts_r) / \\\r\n                   IKEv2_payload_Notify(next_payload='None', proto='Reserved', length=8,\r\n                                        type='MULTIPLE_AUTH_SUPPORTED')\r\n\r\n    packet_auth = IP(dst='10.9.203.213', src='10.9.206.115') / \\\r\n                  UDP(sport=500, dport=500) / \\\r\n                  IKEv2(init_SPI=init_spi, resp_SPI=ans[IKEv2].resp_SPI, next_payload='Encrypted', exch_type='IKE_AUTH',\r\n                        flags='Initiator', id=1) / \\\r\n                  IKEv2_payload_Encrypted(next_payload='IDi', load=encry_packet)\r\n    ans_auth = sr1(packet_auth, timeout=1, iface=\"init\")`\r\n\r\n\r\n\r\n\t\t\t\t\r\n ##### Questions:\r\n\t\r\n\r\n1.  When I choose auth_type is 'Shared Key Message Integrity Code' on IKEv2_payload_AUTH, but I don't know the Shared Secret of PSK should be where?  Because accord to 2.15 on rfc7296,  Load of  IKEv2_payload_AUTH is base on Shared Secret.\r\n2.  ICD is bad, may be two reasons: \r\n              -  Load of  IKEv2_payload_AUTH is bad\r\n            -   Sk_ai and Sk_ei is bad\r\n\r\n#### Environment\r\n\r\n-   Scapy version:  2.4.2\r\n-   Python version: 3.7\r\n-   Operating System:  50~16.04.1-Ubuntu", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2532", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2532/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2532/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2532/events", "html_url": "https://github.com/secdev/scapy/issues/2532", "id": 583931990, "node_id": "MDU6SXNzdWU1ODM5MzE5OTA=", "number": 2532, "title": "MultipleTypeField resolves the default value", "user": {"login": "devguyplus", "id": 13252253, "node_id": "MDQ6VXNlcjEzMjUyMjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/13252253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devguyplus", "html_url": "https://github.com/devguyplus", "followers_url": "https://api.github.com/users/devguyplus/followers", "following_url": "https://api.github.com/users/devguyplus/following{/other_user}", "gists_url": "https://api.github.com/users/devguyplus/gists{/gist_id}", "starred_url": "https://api.github.com/users/devguyplus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devguyplus/subscriptions", "organizations_url": "https://api.github.com/users/devguyplus/orgs", "repos_url": "https://api.github.com/users/devguyplus/repos", "events_url": "https://api.github.com/users/devguyplus/events{/privacy}", "received_events_url": "https://api.github.com/users/devguyplus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-18T18:44:29Z", "updated_at": "2020-03-19T09:50:45Z", "closed_at": "2020-03-19T09:50:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Brief description\r\n\r\nFrom my own understanding,\r\nMultipleTypeField should loop through all of the possible fields, executing the lambda and if it returns true, resolve the field as it.\r\nIncase it got False from all of the conditions, resolve using the default field.\r\n\r\nWhen I tested it, I have observed a number of issues:\r\n-No matter what the lambda function returns, it always resolves to the default value.\r\n-It does not call all of the lambda functions (one for each field), but seems to call only the first one,\r\n-And in a more complex usages (when implementing an actual protocol) it caused stack overflow.\r\n\r\n#### Environment\r\n\r\n-   Scapy version: `2.4.3`\r\n-   Python version: `2.7.16`\r\n-   Operating System: `Windows 10`\r\n\r\n#### How to reproduce\r\n\r\n```\r\nfrom scapy.all import *\r\n\r\n\r\ndef testField1(pkt):\r\n    print \"testifled1 \" + str(pkt.switch)\r\n    return pkt.switch == 1\r\n\r\n\r\ndef testField2(pkt):\r\n    print \"testifled2 \" + str(pkt.switch)\r\n    return pkt.switch == 2\r\n\r\n\r\nclass MyPack(Packet):\r\n    name = 'MY'\r\n    fields_desc = [\r\n        IntField('switch', 0),\r\n        MultipleTypeField([\r\n            (XShortField('myfield1', 0xDEAD), lambda pkt: testField1(pkt)),\r\n            (XIntField('myfield2', 0xBEEFBEEF), lambda pkt: testField2(pkt))],\r\n            XByteField('myfield3', 0x88)\r\n        )\r\n    ]\r\n\r\n\r\no = MyPack()\r\no.show()\r\n\r\no = MyPack(b'\\x00\\x00\\x00\\x02\\x77\\x77\\x77\\x77')\r\no.show()\r\n\r\no = MyPack(b'\\x00\\x00\\x00\\x01\\x77\\x77\\x77\\x77')\r\no.show()\r\n\r\no = MyPack(b'\\x00\\x00\\x00\\x00\\x77\\x77\\x77\\x77')\r\no.show()\r\n\r\n```\r\n#### Actual result\r\n\r\n\r\n> testifled1 0\r\n> testifled2 0\r\n> testifled1 0\r\n> testifled2 0\r\n> ###[ MY ]### \r\n>   switch    = 0\r\n>   myfield3  = 0x88\r\n> \r\n> testifled1 2\r\n> testifled2 2\r\n> testifled1 2\r\n> testifled2 2\r\n> testifled1 2\r\n> testifled2 2\r\n> testifled1 2\r\n> testifled2 2\r\n> testifled1 2\r\n> testifled2 2\r\n> testifled1 2\r\n> testifled2 2\r\n> ###[ MY ]### \r\n>   switch    = 2\r\n>   myfield3  = 0x77777777\r\n> \r\n> testifled1 1\r\n> testifled1 1\r\n> testifled1 1\r\n> testifled1 1\r\n> testifled1 1\r\n> testifled1 1\r\n> ###[ MY ]### \r\n>   switch    = 1\r\n>   myfield3  = 0x7777\r\n> ###[ Raw ]### \r\n>      load      = 'ww'\r\n> \r\n> testifled1 0\r\n> testifled2 0\r\n> testifled1 0\r\n> testifled2 0\r\n> testifled1 0\r\n> testifled2 0\r\n> testifled1 0\r\n> testifled2 0\r\n> testifled1 0\r\n> testifled2 0\r\n> testifled1 0\r\n> testifled2 0\r\n> ###[ MY ]### \r\n>   switch    = 0\r\n>   myfield3  = 0x77\r\n> ###[ Raw ]### \r\n>      load      = 'www'\r\n> \r\n> \r\n> Process finished with exit code 0\r\n> \r\n\r\n#### Expected result\r\n\r\nThe expected result should be resolving the second field as X for each of the inputs:\r\nInput 1: Should resolve to myfield3 (default value)\r\nInput 2: Should resolve to myfield2 (switch = 2)\r\nInput 3: Should resolve to myfield1 (switch = 1)\r\nInput 4: Should resolve to myfield3 (switch = 0)\r\n\r\n\r\n\r\nThank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2530", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2530/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2530/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2530/events", "html_url": "https://github.com/secdev/scapy/issues/2530", "id": 583420129, "node_id": "MDU6SXNzdWU1ODM0MjAxMjk=", "number": 2530, "title": "The scappy PPTPStartControlConnectionRequest protocol_version field", "user": {"login": "sei-vsarvepalli", "id": 19911912, "node_id": "MDQ6VXNlcjE5OTExOTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/19911912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sei-vsarvepalli", "html_url": "https://github.com/sei-vsarvepalli", "followers_url": "https://api.github.com/users/sei-vsarvepalli/followers", "following_url": "https://api.github.com/users/sei-vsarvepalli/following{/other_user}", "gists_url": "https://api.github.com/users/sei-vsarvepalli/gists{/gist_id}", "starred_url": "https://api.github.com/users/sei-vsarvepalli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sei-vsarvepalli/subscriptions", "organizations_url": "https://api.github.com/users/sei-vsarvepalli/orgs", "repos_url": "https://api.github.com/users/sei-vsarvepalli/repos", "events_url": "https://api.github.com/users/sei-vsarvepalli/events{/privacy}", "received_events_url": "https://api.github.com/users/sei-vsarvepalli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267691052, "node_id": "MDU6TGFiZWwyNjc2OTEwNTI=", "url": "https://api.github.com/repos/secdev/scapy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-18T02:34:22Z", "updated_at": "2020-03-30T09:17:22Z", "closed_at": "2020-03-30T09:17:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like the field protocol_version is actually a floating point with two bytes to represent the integer value and two bytes for the decimal portion.  So for the protocol version to be 1.0 this byte value is actually 256, to get PPTP to work properly I have to basically start this \r\n\r\n`     \r\npython shell\r\n>>> send(IP()/TCP()/PPTPStartControlConnectionRequest())\r\n.\r\nSent 1 packets.\r\n>>> send(IP()/TCP()/PPTPStartControlConnectionRequest(protocol_version=256))\r\n.\r\nSent 1 packets.\r\n\r\ntcpdump view \r\n\r\n>>127.0.0.1.20 > 127.0.0.1.1723: Flags [S], cksum 0xdf7e (correct), seq 0:156, win 8192, length 156: pptp Length=156 CTRL-MSG Magic-Cookie=1a2b3c4d CTRL_MSGTYPE=SCCRQ PROTO_VER(0.1) FRAME_CAP() BEARER_CAP() MAX_CHAN(65535) FIRM_REV(256) HOSTNAME(linux) VENDOR()\r\n02:31:30.855945 IP (tos 0x0, ttl 64, id 1, offset 0, flags [none], proto TCP (6), length 196)\r\n\r\n >> 127.0.0.1.20 > 127.0.0.1.1723: Flags [S], cksum 0xde7f (correct), seq 0:156, win 8192, length 156: pptp Length=156 CTRL-MSG Magic-Cookie=1a2b3c4d CTRL_MSGTYPE=SCCRQ PROTO_VER(1.0) FRAME_CAP() BEARER_CAP() MAX_CHAN(65535) FIRM_REV(256) HOSTNAME(linux) VENDOR()`\r\n\r\nCan you please update the protocol_version to be correct by default 256 and be presented to the user as 1.0 to match protocol specs.\r\n\r\nThanks\r\nVijay\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2526", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2526/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2526/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2526/events", "html_url": "https://github.com/secdev/scapy/issues/2526", "id": 582530100, "node_id": "MDU6SXNzdWU1ODI1MzAxMDA=", "number": 2526, "title": "Scapy crash when libpcap.so is not installed", "user": {"login": "guedou", "id": 11683796, "node_id": "MDQ6VXNlcjExNjgzNzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11683796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guedou", "html_url": "https://github.com/guedou", "followers_url": "https://api.github.com/users/guedou/followers", "following_url": "https://api.github.com/users/guedou/following{/other_user}", "gists_url": "https://api.github.com/users/guedou/gists{/gist_id}", "starred_url": "https://api.github.com/users/guedou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guedou/subscriptions", "organizations_url": "https://api.github.com/users/guedou/orgs", "repos_url": "https://api.github.com/users/guedou/repos", "events_url": "https://api.github.com/users/guedou/events{/privacy}", "received_events_url": "https://api.github.com/users/guedou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gpotter2", "id": 10530980, "node_id": "MDQ6VXNlcjEwNTMwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10530980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpotter2", "html_url": "https://github.com/gpotter2", "followers_url": "https://api.github.com/users/gpotter2/followers", "following_url": "https://api.github.com/users/gpotter2/following{/other_user}", "gists_url": "https://api.github.com/users/gpotter2/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpotter2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpotter2/subscriptions", "organizations_url": "https://api.github.com/users/gpotter2/orgs", "repos_url": "https://api.github.com/users/gpotter2/repos", "events_url": "https://api.github.com/users/gpotter2/events{/privacy}", "received_events_url": "https://api.github.com/users/gpotter2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gpotter2", "id": 10530980, "node_id": "MDQ6VXNlcjEwNTMwOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10530980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpotter2", "html_url": "https://github.com/gpotter2", "followers_url": "https://api.github.com/users/gpotter2/followers", "following_url": "https://api.github.com/users/gpotter2/following{/other_user}", "gists_url": "https://api.github.com/users/gpotter2/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpotter2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpotter2/subscriptions", "organizations_url": "https://api.github.com/users/gpotter2/orgs", "repos_url": "https://api.github.com/users/gpotter2/repos", "events_url": "https://api.github.com/users/gpotter2/events{/privacy}", "received_events_url": "https://api.github.com/users/gpotter2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-03-16T18:51:49Z", "updated_at": "2020-03-22T10:03:02Z", "closed_at": "2020-03-22T10:03:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "-   Scapy version: `master branch`\r\n-   Python version: `3.5.3`\r\n-   Operating System: `Debian 9.12`\r\n\r\nThis is regression comparing to older Scapy version as `libpcap.so` should not be mandatory to inject packets:\r\n```\r\n>>> traceroute(\"8.8.8.8\")\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/vagrant/scapy/scapy/layers/inet.py\", line 1668, in traceroute\r\n    timeout=timeout, filter=filter, verbose=verbose, **kargs)\r\n  File \"/home/vagrant/scapy/scapy/sendrecv.py\", line 509, in sr\r\n    iface=iface, nofilter=nofilter)\r\n  File \"/home/vagrant/scapy/scapy/arch/linux.py\", line 452, in __init__\r\n    attach_filter(self.ins, filter, iface)\r\n  File \"/home/vagrant/scapy/scapy/arch/linux.py\", line 139, in attach_filter\r\n    bp = compile_filter(bpf_filter, iface)\r\n  File \"/home/vagrant/scapy/scapy/arch/common.py\", line 77, in compile_filter\r\n    from scapy.libs.winpcapy import (\r\n  File \"/home/vagrant/scapy/scapy/libs/winpcapy.py\", line 38, in <module>\r\n    raise OSError(\"Cannot find libpcap.so library\")\r\nOSError: Cannot find libpcap.so library\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secdev/scapy/issues/2523", "repository_url": "https://api.github.com/repos/secdev/scapy", "labels_url": "https://api.github.com/repos/secdev/scapy/issues/2523/labels{/name}", "comments_url": "https://api.github.com/repos/secdev/scapy/issues/2523/comments", "events_url": "https://api.github.com/repos/secdev/scapy/issues/2523/events", "html_url": "https://github.com/secdev/scapy/issues/2523", "id": 581605842, "node_id": "MDU6SXNzdWU1ODE2MDU4NDI=", "number": 2523, "title": "How can I use sniff to get a packet from tunnels", "user": {"login": "GlKorol", "id": 53278458, "node_id": "MDQ6VXNlcjUzMjc4NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/53278458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GlKorol", "html_url": "https://github.com/GlKorol", "followers_url": "https://api.github.com/users/GlKorol/followers", "following_url": "https://api.github.com/users/GlKorol/following{/other_user}", "gists_url": "https://api.github.com/users/GlKorol/gists{/gist_id}", "starred_url": "https://api.github.com/users/GlKorol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GlKorol/subscriptions", "organizations_url": "https://api.github.com/users/GlKorol/orgs", "repos_url": "https://api.github.com/users/GlKorol/repos", "events_url": "https://api.github.com/users/GlKorol/events{/privacy}", "received_events_url": "https://api.github.com/users/GlKorol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-15T10:00:21Z", "updated_at": "2020-03-15T10:02:22Z", "closed_at": "2020-03-15T10:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "my code:\r\n```\r\nfrom scapy.all import *\r\n\r\ndef call_me(packet):\r\n    print(packet.summary())\r\n    print(packet.show())\r\n\r\nmysocket = socket.socket()\r\nmysocket.connect((\"127.0.0.1\",1234))\r\nsupersocket = scapy.supersocket.StreamSocket(mysocket)\r\nsniff(opened_socket=supersocket,store=False, prn=call_me)\r\n\r\n```\r\nfor gets traffic, for my local machine execute:\r\n`tcpdump -s0 -i any -w - | nc -lp 1234`\r\n\r\n\r\noutput:\r\n```\r\nRaw\r\n###[ Raw ]### \r\n  load      = '~\\xd3|,\\x94v\\x19\\x9e\\x18cPE+#\\xe8\\xaa\\xd7}\r\n```\r\nI want to receive packages from stdin or from tunnel as in this example\r\n`tcpdump -s0 -i any -w - |  wireshark -k -i -\r\n`", "performed_via_github_app": null, "score": 1.0}]}