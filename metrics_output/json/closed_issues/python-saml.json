{"total_count": 166, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/onelogin/python-saml/issues/274", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/274/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/274/events", "html_url": "https://github.com/onelogin/python-saml/issues/274", "id": 659026129, "node_id": "MDU6SXNzdWU2NTkwMjYxMjk=", "number": 274, "title": "Print Response in pretty XML ", "user": {"login": "dipalmabiagio", "id": 48584874, "node_id": "MDQ6VXNlcjQ4NTg0ODc0", "avatar_url": "https://avatars3.githubusercontent.com/u/48584874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dipalmabiagio", "html_url": "https://github.com/dipalmabiagio", "followers_url": "https://api.github.com/users/dipalmabiagio/followers", "following_url": "https://api.github.com/users/dipalmabiagio/following{/other_user}", "gists_url": "https://api.github.com/users/dipalmabiagio/gists{/gist_id}", "starred_url": "https://api.github.com/users/dipalmabiagio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dipalmabiagio/subscriptions", "organizations_url": "https://api.github.com/users/dipalmabiagio/orgs", "repos_url": "https://api.github.com/users/dipalmabiagio/repos", "events_url": "https://api.github.com/users/dipalmabiagio/events{/privacy}", "received_events_url": "https://api.github.com/users/dipalmabiagio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-17T08:42:31Z", "updated_at": "2020-07-22T19:46:04Z", "closed_at": "2020-07-22T19:46:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI can send correctly requests, but how can i print the complete response? I need to print to get it and store.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/269", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/269/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/269/events", "html_url": "https://github.com/onelogin/python-saml/issues/269", "id": 568516683, "node_id": "MDU6SXNzdWU1Njg1MTY2ODM=", "number": 269, "title": "Default signing algorithm should be SHA-256?", "user": {"login": "timabbott", "id": 2746074, "node_id": "MDQ6VXNlcjI3NDYwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2746074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timabbott", "html_url": "https://github.com/timabbott", "followers_url": "https://api.github.com/users/timabbott/followers", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "organizations_url": "https://api.github.com/users/timabbott/orgs", "repos_url": "https://api.github.com/users/timabbott/repos", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "received_events_url": "https://api.github.com/users/timabbott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T19:23:28Z", "updated_at": "2020-02-21T19:17:07Z", "closed_at": "2020-02-21T09:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the default/recommended signatureAlgorithm in the documentation uses SHA-1, which is no longer considered secure.  Can this be changed to SHA-256? \r\n\r\n```\r\n        \"signatureAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/266", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/266/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/266/events", "html_url": "https://github.com/onelogin/python-saml/issues/266", "id": 548152715, "node_id": "MDU6SXNzdWU1NDgxNTI3MTU=", "number": 266, "title": "WS-Federation Configuration Example?", "user": {"login": "earnolmartin", "id": 4566227, "node_id": "MDQ6VXNlcjQ1NjYyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4566227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/earnolmartin", "html_url": "https://github.com/earnolmartin", "followers_url": "https://api.github.com/users/earnolmartin/followers", "following_url": "https://api.github.com/users/earnolmartin/following{/other_user}", "gists_url": "https://api.github.com/users/earnolmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/earnolmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/earnolmartin/subscriptions", "organizations_url": "https://api.github.com/users/earnolmartin/orgs", "repos_url": "https://api.github.com/users/earnolmartin/repos", "events_url": "https://api.github.com/users/earnolmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/earnolmartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T15:49:20Z", "updated_at": "2020-01-10T16:37:55Z", "closed_at": "2020-01-10T16:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've looked at https://github.com/onelogin/python-saml/issues/130 and https://github.com/onelogin/python-saml/issues/180, but is there an example somewhere showing us how to configure python-saml to use WS-Federation?  What settings are required for WS-Federation?  \r\n\r\nWhen configuring an app to use WS-Federation in C#, we normally just provide three settings.  They are the settings mentioned in this node.js package:\r\n\r\nhttps://github.com/auth0/passport-wsfed-saml2#configure-strategy-for-adfs-ws-fed\r\n\r\nHow does that translate for changing entries in the settings.json and advanced_settings.json files for python-saml?\r\n\r\nAny help would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/263", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/263/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/263/events", "html_url": "https://github.com/onelogin/python-saml/issues/263", "id": 522503164, "node_id": "MDU6SXNzdWU1MjI1MDMxNjQ=", "number": 263, "title": "dm.xmlsec.binding -- Python 3", "user": {"login": "vnagendra", "id": 5307965, "node_id": "MDQ6VXNlcjUzMDc5NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5307965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnagendra", "html_url": "https://github.com/vnagendra", "followers_url": "https://api.github.com/users/vnagendra/followers", "following_url": "https://api.github.com/users/vnagendra/following{/other_user}", "gists_url": "https://api.github.com/users/vnagendra/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnagendra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnagendra/subscriptions", "organizations_url": "https://api.github.com/users/vnagendra/orgs", "repos_url": "https://api.github.com/users/vnagendra/repos", "events_url": "https://api.github.com/users/vnagendra/events{/privacy}", "received_events_url": "https://api.github.com/users/vnagendra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T22:12:40Z", "updated_at": "2019-11-14T16:47:47Z", "closed_at": "2019-11-14T16:47:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.8 seems to have interesting issues with `'dm.xmlsec.binding==1.3.7',`. Are we actually dependent on 1.3.7 specifically or will anything _after_ 1.3.7 do? \r\n\r\nI was able to get around by just installing the latest version like so \r\n\r\n```\r\nLDFLAGS=\"-L/usr/local/opt/libxml2/lib\" \\\r\nCPPFLAGS=\"-I/usr/local/opt/libxml2/include\" \\\r\npip install dm.xmlsec.binding==2.0 python-saml --no-cache-dir\r\n```\r\nOf course pip complained, but I am hoping it should work. If there are no hard dependencies, may I suggest changing it to `dm.xmlsec.binding>=1.3.7`?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/261", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/261/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/261/events", "html_url": "https://github.com/onelogin/python-saml/issues/261", "id": 521603139, "node_id": "MDU6SXNzdWU1MjE2MDMxMzk=", "number": 261, "title": "Possible misspelling of word: enough", "user": {"login": "serpulga", "id": 2017845, "node_id": "MDQ6VXNlcjIwMTc4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2017845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serpulga", "html_url": "https://github.com/serpulga", "followers_url": "https://api.github.com/users/serpulga/followers", "following_url": "https://api.github.com/users/serpulga/following{/other_user}", "gists_url": "https://api.github.com/users/serpulga/gists{/gist_id}", "starred_url": "https://api.github.com/users/serpulga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serpulga/subscriptions", "organizations_url": "https://api.github.com/users/serpulga/orgs", "repos_url": "https://api.github.com/users/serpulga/repos", "events_url": "https://api.github.com/users/serpulga/events{/privacy}", "received_events_url": "https://api.github.com/users/serpulga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T14:59:01Z", "updated_at": "2019-11-14T19:31:22Z", "closed_at": "2019-11-14T19:31:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The error message `contact_not_enought_data` should be `contact_not_enough_data`.\r\n\r\nI didn't open a PR because at this point I'm not sure if this has backward compatibility issues; as in people expecting a specific error string in their code.\r\n\r\n### Places where this is used:\r\nhttps://github.com/onelogin/python-saml/search?q=contact_not_enought_data&unscoped_q=contact_not_enought_data", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/259", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/259/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/259/events", "html_url": "https://github.com/onelogin/python-saml/issues/259", "id": 515639800, "node_id": "MDU6SXNzdWU1MTU2Mzk4MDA=", "number": 259, "title": "AWS SSO - Invalid SAML Response", "user": {"login": "gohackfelipe", "id": 15708865, "node_id": "MDQ6VXNlcjE1NzA4ODY1", "avatar_url": "https://avatars3.githubusercontent.com/u/15708865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gohackfelipe", "html_url": "https://github.com/gohackfelipe", "followers_url": "https://api.github.com/users/gohackfelipe/followers", "following_url": "https://api.github.com/users/gohackfelipe/following{/other_user}", "gists_url": "https://api.github.com/users/gohackfelipe/gists{/gist_id}", "starred_url": "https://api.github.com/users/gohackfelipe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gohackfelipe/subscriptions", "organizations_url": "https://api.github.com/users/gohackfelipe/orgs", "repos_url": "https://api.github.com/users/gohackfelipe/repos", "events_url": "https://api.github.com/users/gohackfelipe/events{/privacy}", "received_events_url": "https://api.github.com/users/gohackfelipe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T18:06:21Z", "updated_at": "2019-11-19T16:16:47Z", "closed_at": "2019-11-19T16:16:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI'm trying to integrate the demo-flask application with AWS SSO.\r\n\r\nAt end of request, I've received the follow error:\r\n\r\n`Element '{urn:oasis:names:tc:SAML:2.0:assertion}AttributeStatement': Missing child element(s). Expected is one of ( {urn:oasis:names:tc:SAML:2.0:assertion}Attribute, {urn:oasis:names:tc:SAML:2.0:assertion}EncryptedAttribute ).\r\nInvalid SAML Response. Not match the saml-schema-protocol-2.0.xsd`\r\n\r\nAnyone knows how to start resolving this? :(", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/258", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/258/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/258/events", "html_url": "https://github.com/onelogin/python-saml/issues/258", "id": 506569302, "node_id": "MDU6SXNzdWU1MDY1NjkzMDI=", "number": 258, "title": "Is failOnAuthnContextMismatch properly interpreted?", "user": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-14T10:30:21Z", "updated_at": "2019-11-19T18:37:36Z", "closed_at": "2019-11-19T18:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey folks!\r\n\r\nThis is more of a question than an issue per se. I've looked into `failOnAuthnContextMismatch` and `requestedAuthnContext` and I believe it introduces a behaviour that's not proper according to the SAML spec.\r\n\r\nThe SAML spec mentions that the `<RequestedAuthnContext> element specifies the authentication context requirements of authentication statements returned in response to a request or query`. Then the `Comparison` option specifies that if the comparison is `set to \"exact\" or omitted, then the resulting authentication context in the authentication\r\nstatement MUST be the exact match of at least one of the authentication contexts specified.`\r\n\r\nThe same language goes for other `Comparison` such as `minimum` and `maximum`. What I interpret from this spec is that the attribute statement **should** have an `AuthnContext` that is one of the requested authentication contexts, but the interpretation for `failOnAuthnContextMismatch` is that **all** requested contexts should match with the results from `AuthnStatement`.\r\n\r\nFor context, in our organization we tried to enforce a list of requested authentication contexts that identity providers can use for logging in the users, but we were surprised to see `failOnAuthnContext` taking all `requestedAuthnContext` in account, which resulted in non-sensical behaviour as the identity providers were configured to return either `windows` or `PasswordProtectedTransport` responses.\r\n\r\n\r\nThanks for taking a look!\r\n\r\nSpec: https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/257", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/257/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/257/events", "html_url": "https://github.com/onelogin/python-saml/issues/257", "id": 490744907, "node_id": "MDU6SXNzdWU0OTA3NDQ5MDc=", "number": 257, "title": "onelogin sso configuration with custom idp <shows invalid user response>", "user": {"login": "vinothkumar1097", "id": 35162372, "node_id": "MDQ6VXNlcjM1MTYyMzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/35162372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinothkumar1097", "html_url": "https://github.com/vinothkumar1097", "followers_url": "https://api.github.com/users/vinothkumar1097/followers", "following_url": "https://api.github.com/users/vinothkumar1097/following{/other_user}", "gists_url": "https://api.github.com/users/vinothkumar1097/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinothkumar1097/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinothkumar1097/subscriptions", "organizations_url": "https://api.github.com/users/vinothkumar1097/orgs", "repos_url": "https://api.github.com/users/vinothkumar1097/repos", "events_url": "https://api.github.com/users/vinothkumar1097/events{/privacy}", "received_events_url": "https://api.github.com/users/vinothkumar1097/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-08T11:51:57Z", "updated_at": "2019-11-19T20:03:33Z", "closed_at": "2019-11-19T20:03:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIm using my company login as idp. Its working fine with flask localhost http://127.0.0.1:5000\r\nBut when i replace local host url with my company url entity id(https://xxx.yyy.net/metadata) and acs url(https://xxx.yyy.net/saml/acs/), its not working. \r\n\r\nAfter successfull login, saml response is hitting acs url for saml validation. I got saml response and relaystate in my saml response.\r\n\r\nBut after that, instead of returning to my homepage url im getting **invalid user error(Not Authenticated).** \r\n\r\nIm using IIS to deploy my flask app with bindings as (Type: http | HostName : xxx.yyy.net | Port:80 | IP Address : All Unassigned) and (Type: http | HostName : xxx.yyy.net | Port:8080 | IP Address : server ip address)\r\n\r\nPlease help me guys to fix this ACS validation. \r\n\r\n**Flask code for ACS url:**\r\n@app.route('/saml/acs/', methods=['GET', 'POST'])\r\ndef acs():\r\n    request_id = None\r\n    if 'AuthNRequestID' in session:\r\n        request_id = session['AuthNRequestID']\r\n\r\n    write_to_log(request.url)         #returns **http://xxx.yyy.net/saml/acs/**\r\n\r\n    req = prepare_from_request(request)\r\n    auth = init_saml_auth(req)\r\n    errors = []\r\n    auth.process_response(request_id=request_id)\r\n    errors = auth.get_errors()\r\n    if not auth.is_authenticated():\r\n        return 'User Not Authenticated'\r\n    else:\r\n        if len(errors) == 0:\r\n            session['samlUserdata'] = auth.get_attributes()\r\n            self_url = OneLogin_Saml2_Utils.get_self_url(req)\r\n            if 'RelayState' in request.form and self_url != request.form['RelayState']:\r\n                return redirect(auth.redirect_to(request.form['RelayState']))\r\n\r\n**Settings.json:**\r\n    \"strict\": true,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"https://xxx.yyy.net/metadata\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"https://xxx.yyy.net/saml/acs/\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://xxx.yyy.net/saml/sls/\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\r\n        \"x509cert\": \"\",\r\n        \"privateKey\": \"\"\r\n    }\r\n\r\n**Advanced Settings.json**\r\n\"security\": {\r\n        \"nameIdEncrypted\": false,\r\n        \"authnRequestsSigned\": false,\r\n        \"logoutRequestSigned\": false,\r\n        \"logoutResponseSigned\": false,\r\n        \"signMetadata\": false,\r\n        \"wantMessagesSigned\": false,\r\n        \"wantAssertionsSigned\": false,\r\n        \"wantNameId\" : true,\r\n        \"wantNameIdEncrypted\": false,\r\n        \"wantAssertionsEncrypted\": false,\r\n        \"signatureAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\r\n        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\"\r\n    }\r\n\r\nWithin saml folder, i have certs folder which contains self-signed .crt and .key files\r\n\r\nWhen SAML response is hitting acs url, im getting below Request and SAML Response\r\n**Request**\r\nRequest URL: https://xxx.yyy.net/saml/acs/\r\nRequest Method: POST\r\nStatus Code: 200 OK\r\n\r\n**SAML Response** \r\n<?xml \r\nversion=\"1.0\" \r\nencoding=\"UTF-8\"?>\r\n<saml2p:Response \r\n    xmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\" \r\n    Destination=\"https://xxx.yyy.net/saml/acs/\" \r\n    ID=\"uuid-cdea1116-e3b2...\" \r\n    InResponseTo=\"ONELOGIN_67...\" \r\n    IssueInstant=\"2019-09-08T11:44:53.537Z\" \r\n    Version=\"2.0\">\r\n    <saml2:Issuer \r\n        xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\">@company idp url\r\n    </saml2:Issuer>\r\n    <ds:Signature \r\n        xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n        <ds:SignedInfo>\r\n            <ds:CanonicalizationMethod \r\n                Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\r\n            <ds:SignatureMethod \r\n                Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/>\r\n            <ds:Reference \r\n                URI=\"#uuid-cdea1116-e3b2-468a-93a5-68799b291e2c\">\r\n                <ds:Transforms>\r\n                    <ds:Transform \r\n                        Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>\r\n                    <ds:Transform \r\n                        Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\r\n                </ds:Transforms>\r\n                <ds:DigestMethod \r\n                    Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/>\r\n                <ds:DigestValue>+\r\n                    TdNDWqlsMBI3tiOB0OC1Y44Lxk=\r\n                </ds:DigestValue>\r\n            </ds:Reference>\r\n        </ds:SignedInfo>\r\n        <ds:SignatureValue>\r\nWXY7y3.....tQ==\r\n\r\n        </ds:SignatureValue>\r\n        <ds:KeyInfo>\r\n            <ds:X509Data>\r\n                <ds:X509Certificate>MI..5g==\r\n                </ds:X509Certificate>\r\n            </ds:X509Data>\r\n            <ds:X509Data>\r\n                <ds:X509Certificate>MIIFDjC.=\r\n                </ds:X509Certificate>\r\n            </ds:X509Data>\r\n            <ds:X509Data>\r\n                <ds:X509Certificate>MIIEP.........jg==\r\n                </ds:X509Certificate>\r\n            </ds:X509Data>\r\n        </ds:KeyInfo>\r\n    </ds:Signature>\r\n    <saml2p:Status>\r\n        <saml2p:StatusCode \r\n            Value=\"urn:oasis:names:tc:SAML:2.0:status:Responder\"/>\r\n        <saml2p:StatusMessage>Error creating saml:Assertion</saml2p:StatusMessage>\r\n    </saml2p:Status>\r\n</saml2p:Response>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/256", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/256/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/256/events", "html_url": "https://github.com/onelogin/python-saml/issues/256", "id": 482906457, "node_id": "MDU6SXNzdWU0ODI5MDY0NTc=", "number": 256, "title": "Generic CAS client", "user": {"login": "pikkewyn", "id": 4394756, "node_id": "MDQ6VXNlcjQzOTQ3NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4394756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pikkewyn", "html_url": "https://github.com/pikkewyn", "followers_url": "https://api.github.com/users/pikkewyn/followers", "following_url": "https://api.github.com/users/pikkewyn/following{/other_user}", "gists_url": "https://api.github.com/users/pikkewyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pikkewyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pikkewyn/subscriptions", "organizations_url": "https://api.github.com/users/pikkewyn/orgs", "repos_url": "https://api.github.com/users/pikkewyn/repos", "events_url": "https://api.github.com/users/pikkewyn/events{/privacy}", "received_events_url": "https://api.github.com/users/pikkewyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-20T14:45:18Z", "updated_at": "2019-11-19T20:03:50Z", "closed_at": "2019-11-19T20:03:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to ask  if  this implementation is OneLogin specific or works with standard CAS schema https://apereo.github.io/cas/4.2.x/images/cas_flow_diagram.png. If not could you please recommend any Python CAS library that works with this schema?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/255", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/255/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/255/events", "html_url": "https://github.com/onelogin/python-saml/issues/255", "id": 478036077, "node_id": "MDU6SXNzdWU0NzgwMzYwNzc=", "number": 255, "title": "python3 support", "user": {"login": "ryanisnan", "id": 504281, "node_id": "MDQ6VXNlcjUwNDI4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/504281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanisnan", "html_url": "https://github.com/ryanisnan", "followers_url": "https://api.github.com/users/ryanisnan/followers", "following_url": "https://api.github.com/users/ryanisnan/following{/other_user}", "gists_url": "https://api.github.com/users/ryanisnan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanisnan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanisnan/subscriptions", "organizations_url": "https://api.github.com/users/ryanisnan/orgs", "repos_url": "https://api.github.com/users/ryanisnan/repos", "events_url": "https://api.github.com/users/ryanisnan/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanisnan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T16:48:37Z", "updated_at": "2019-08-07T16:50:41Z", "closed_at": "2019-08-07T16:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does onelogin have any intention of updating this library to support python3?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/254", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/254/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/254/events", "html_url": "https://github.com/onelogin/python-saml/issues/254", "id": 473204795, "node_id": "MDU6SXNzdWU0NzMyMDQ3OTU=", "number": 254, "title": "Option to set AllowCreate in NameIdPolicy", "user": {"login": "zergie82", "id": 36186270, "node_id": "MDQ6VXNlcjM2MTg2Mjcw", "avatar_url": "https://avatars3.githubusercontent.com/u/36186270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zergie82", "html_url": "https://github.com/zergie82", "followers_url": "https://api.github.com/users/zergie82/followers", "following_url": "https://api.github.com/users/zergie82/following{/other_user}", "gists_url": "https://api.github.com/users/zergie82/gists{/gist_id}", "starred_url": "https://api.github.com/users/zergie82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zergie82/subscriptions", "organizations_url": "https://api.github.com/users/zergie82/orgs", "repos_url": "https://api.github.com/users/zergie82/repos", "events_url": "https://api.github.com/users/zergie82/events{/privacy}", "received_events_url": "https://api.github.com/users/zergie82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T06:49:01Z", "updated_at": "2019-07-29T06:43:55Z", "closed_at": "2019-07-29T06:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have not found any valid way to toggle AllowCreate parameter in NameIdPolicy. Is there a way to do this beside editing authn_request.py? Would be nice to have it as option under SP settings.\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/252", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/252/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/252/events", "html_url": "https://github.com/onelogin/python-saml/issues/252", "id": 471111815, "node_id": "MDU6SXNzdWU0NzExMTE4MTU=", "number": 252, "title": "Python 2", "user": {"login": "noqcks", "id": 4740147, "node_id": "MDQ6VXNlcjQ3NDAxNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4740147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noqcks", "html_url": "https://github.com/noqcks", "followers_url": "https://api.github.com/users/noqcks/followers", "following_url": "https://api.github.com/users/noqcks/following{/other_user}", "gists_url": "https://api.github.com/users/noqcks/gists{/gist_id}", "starred_url": "https://api.github.com/users/noqcks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noqcks/subscriptions", "organizations_url": "https://api.github.com/users/noqcks/orgs", "repos_url": "https://api.github.com/users/noqcks/repos", "events_url": "https://api.github.com/users/noqcks/events{/privacy}", "received_events_url": "https://api.github.com/users/noqcks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-22T13:58:42Z", "updated_at": "2019-07-22T17:22:26Z", "closed_at": "2019-07-22T17:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "End of life is Jan 1, 2020!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/250", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/250/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/250/events", "html_url": "https://github.com/onelogin/python-saml/issues/250", "id": 461711157, "node_id": "MDU6SXNzdWU0NjE3MTExNTc=", "number": 250, "title": "Support more decimal places for seconds", "user": {"login": "jalan", "id": 305841, "node_id": "MDQ6VXNlcjMwNTg0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/305841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jalan", "html_url": "https://github.com/jalan", "followers_url": "https://api.github.com/users/jalan/followers", "following_url": "https://api.github.com/users/jalan/following{/other_user}", "gists_url": "https://api.github.com/users/jalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jalan/subscriptions", "organizations_url": "https://api.github.com/users/jalan/orgs", "repos_url": "https://api.github.com/users/jalan/repos", "events_url": "https://api.github.com/users/jalan/events{/privacy}", "received_events_url": "https://api.github.com/users/jalan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-27T19:33:45Z", "updated_at": "2019-11-20T08:58:43Z", "closed_at": "2019-11-20T08:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "`OneLogin_Saml2_Utils.parse_SAML_to_time` currently supports two formats:\r\n - `%Y-%m-%dT%H:%M:%SZ`\r\n - `%Y-%m-%dT%H:%M:%S.%fZ`\r\n\r\nWe're seeing Azure AD send timestamps like `2019-06-26T14:19:51.2123335Z` in its SAML responses, with seven decimal digits. This is odd, but some other SAML tools accept it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/248", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/248/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/248/events", "html_url": "https://github.com/onelogin/python-saml/issues/248", "id": 433605277, "node_id": "MDU6SXNzdWU0MzM2MDUyNzc=", "number": 248, "title": "A valid SubjectConfirmation was not found on this Response", "user": {"login": "sunutreesa", "id": 7803295, "node_id": "MDQ6VXNlcjc4MDMyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7803295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunutreesa", "html_url": "https://github.com/sunutreesa", "followers_url": "https://api.github.com/users/sunutreesa/followers", "following_url": "https://api.github.com/users/sunutreesa/following{/other_user}", "gists_url": "https://api.github.com/users/sunutreesa/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunutreesa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunutreesa/subscriptions", "organizations_url": "https://api.github.com/users/sunutreesa/orgs", "repos_url": "https://api.github.com/users/sunutreesa/repos", "events_url": "https://api.github.com/users/sunutreesa/events{/privacy}", "received_events_url": "https://api.github.com/users/sunutreesa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-16T06:31:05Z", "updated_at": "2019-06-24T17:44:48Z", "closed_at": "2019-06-24T17:44:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the below settings and advanced setting, I could get in authenticated in my staging server but with beta server and the same IdP throws this error: A valid SubjectConfirmation was not found on this Response   But the SAML response in both beta and staging server are similar. I've used django-demo code to integrate the same.\r\n\r\n\r\n**Settings.json**\r\n{\r\n\t\"strict\": true,\r\n\t\"debug\": true,\r\n\t\"sp\": {\r\n\t\t\"entityId\": \"https://xxxxxxxxx/api/saml/metadata/\",\r\n\t\t\"assertionConsumerService\": {\r\n\t\t\t\"url\": \"https://xxxxxxxxxx/api/saml/index/?acs\",\r\n\t\t\t\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n\t\t},\r\n\t\t\"singleLogoutService\": {\r\n\t\t\t\"url\": \"https://xxxxxxxx/api/saml/index/?sls\",\r\n\t\t\t\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n\t\t},\r\n\t\t\"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n\t\t\"x509cert\": \"\",\r\n\t\t\"privateKey\": \"\"\r\n\t},\r\n\t\"idp\": {\r\n\t\t\"entityId\": \"https://xxxxxxxxx5/\",\r\n\t\t\"singleSignOnService\": {\r\n\t\t\t\"url\": \"https://xxxxxxxxxxx/saml2\",\r\n\t\t\t\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n\t\t},\r\n\t\t\"singleLogoutService\": {\r\n\t\t\t\"url\": \"https://xxxxxxxxxx/saml2\",\r\n\t\t\t\"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n\t\t},\r\n\t\t\"x509cert\": \"\"\r\n\t}\r\n}\r\n\r\n**Advanced settings.json**\r\n\r\n{\r\n    \"security\": {\r\n        \"nameIdEncrypted\": false,\r\n        \"authnRequestsSigned\": false,\r\n        \"logoutRequestSigned\": false,\r\n        \"logoutResponseSigned\": false,\r\n        \"signMetadata\": false,\r\n        \"wantMessagesSigned\": false,\r\n        \"wantAssertionsSigned\": false,\r\n        \"wantNameId\" : true,\r\n\t\"requestedAuthnContext\": false,\r\n        \"wantNameIdEncrypted\": false,\r\n        \"wantAssertionsEncrypted\": false,\r\n        \"signatureAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\r\n        \"digestAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#sha1\"\r\n    },\r\n    \"contactPerson\": {\r\n        \"technical\": {\r\n            \"givenName\": \"xxxxx\",\r\n            \"emailAddress\": \"xxxxxx\"\r\n        },\r\n        \"support\": {\r\n            \"givenName\": \"xxxxx\",\r\n            \"emailAddress\": \"xxxxxx\"\r\n        }\r\n    },\r\n    \"organization\": {\r\n        \"en-US\": {\r\n            \"name\": \"sp_test\",\r\n            \"displayname\": \"SP test\",\r\n            \"url\": \"http://sp.example.com\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/243", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/243/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/243/events", "html_url": "https://github.com/onelogin/python-saml/issues/243", "id": 398347987, "node_id": "MDU6SXNzdWUzOTgzNDc5ODc=", "number": 243, "title": "curl: (1) Protocol \"https\" not supported or disabled in libcurl on suse x64 platform", "user": {"login": "BhaskarShiv", "id": 38254257, "node_id": "MDQ6VXNlcjM4MjU0MjU3", "avatar_url": "https://avatars3.githubusercontent.com/u/38254257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BhaskarShiv", "html_url": "https://github.com/BhaskarShiv", "followers_url": "https://api.github.com/users/BhaskarShiv/followers", "following_url": "https://api.github.com/users/BhaskarShiv/following{/other_user}", "gists_url": "https://api.github.com/users/BhaskarShiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/BhaskarShiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BhaskarShiv/subscriptions", "organizations_url": "https://api.github.com/users/BhaskarShiv/orgs", "repos_url": "https://api.github.com/users/BhaskarShiv/repos", "events_url": "https://api.github.com/users/BhaskarShiv/events{/privacy}", "received_events_url": "https://api.github.com/users/BhaskarShiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-11T15:58:13Z", "updated_at": "2019-01-29T15:08:50Z", "closed_at": "2019-01-29T15:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello All,\r\nI am facing an error \"curl: (1) Protocol \"https\" not supported or disabled in libcurl on suse x64 platform\"\r\nwhen i POST a request to a https url on suse x64 machine.\r\n\r\nI have used/tried all libcurl version 7.63.0, 7.62.0, 7.61.1, 7.61.0, 7.60.0, 7.59.0, 7.58.0 build with openssl version 1.1.1a and 1.1.1.\r\n\r\nI didn't face any compilation errors and build(make) was successful with all of the above combinations.\r\n\r\nBelow are the compilation steps i have followed,\r\nsuse1164> echo $PKG_CONFIG_PATH\r\n/apps/clp/_dependencies/openssl/openssl1.1.1a/lib64/pkgconfig\r\n\r\nsuse1164> echo $LDFLAGS\r\n-L/apps/clp/_dependencies/openssl/openssl1.1.1a/lib64/\r\n\r\n./configure --with-ssl=/apps/clp/_dependencies/openssl/openssl1.1.1a\r\nmake\r\n\r\nBelow is compilation details,\r\nsuse1164> curl -V\r\ncurl 7.63.0 (x86_64-pc-linux-gnu) libcurl/7.63.0\r\nRelease-Date: 2018-12-12\r\nProtocols: dict file ftp gopher http imap pop3 rtsp smtp telnet tftp\r\nFeatures: AsynchDNS Largefile UnixSockets\r\n\r\nsuse1164 > curl --version | grep Protocols\r\nProtocols: dict file ftp gopher http imap pop3 rtsp smtp telnet tftp\r\n\r\nsuse1164-clpadmin > which curl\r\n./curl                                   /* current directory of insatlled version */\r\n\r\nNOTE : when i use curl google.com is working fine, but when i use \"https\" i am facing issues as shown below.  But then with \"http\" is working fine. There are no single/double quotes given for the url and No spaces are also found.\r\n\r\nsuse1164 > curl google.com\r\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<TITLE>301 Moved</TITLE></HEAD><BODY>\r\n<H1>301 Moved</H1>\r\nThe document has moved\r\n<A HREF=\"http://www.google.com/\">here</A>.\r\n</BODY></HTML>\r\n\r\nsuse1164> curl https://www.google.com\r\ncurl: (1) Protocol \"https\" not supported or disabled in libcurl\r\n\r\nNOTE for http is working fine  -> clpsuse1164> curl http://www.google.com\r\n\r\nMy samples are failing with https NOT supporting/disabled issue.\r\n \r\nPlease help me fixing this issue. Your help is higly appreciated. \r\n\r\nThanks,\r\nBhaskar\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/241", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/241/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/241/events", "html_url": "https://github.com/onelogin/python-saml/issues/241", "id": 376173306, "node_id": "MDU6SXNzdWUzNzYxNzMzMDY=", "number": 241, "title": "Support for Google App Engine", "user": {"login": "EChu16", "id": 7033650, "node_id": "MDQ6VXNlcjcwMzM2NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7033650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EChu16", "html_url": "https://github.com/EChu16", "followers_url": "https://api.github.com/users/EChu16/followers", "following_url": "https://api.github.com/users/EChu16/following{/other_user}", "gists_url": "https://api.github.com/users/EChu16/gists{/gist_id}", "starred_url": "https://api.github.com/users/EChu16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EChu16/subscriptions", "organizations_url": "https://api.github.com/users/EChu16/orgs", "repos_url": "https://api.github.com/users/EChu16/repos", "events_url": "https://api.github.com/users/EChu16/events{/privacy}", "received_events_url": "https://api.github.com/users/EChu16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T21:46:59Z", "updated_at": "2019-01-29T15:08:43Z", "closed_at": "2019-01-29T15:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this library or python3-saml run on Google App Engine or has anyone gotten this library to run on GAE? GAE only allow 3rd party libraries that are written in pure python with no C extensions and I'm looking for an alternative to Pysaml2 since that relies on a C crypto library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/240", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/240/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/240/events", "html_url": "https://github.com/onelogin/python-saml/issues/240", "id": 372086588, "node_id": "MDU6SXNzdWUzNzIwODY1ODg=", "number": 240, "title": "Tests missing on PyPI", "user": {"login": "jtojnar", "id": 705123, "node_id": "MDQ6VXNlcjcwNTEyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/705123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtojnar", "html_url": "https://github.com/jtojnar", "followers_url": "https://api.github.com/users/jtojnar/followers", "following_url": "https://api.github.com/users/jtojnar/following{/other_user}", "gists_url": "https://api.github.com/users/jtojnar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtojnar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtojnar/subscriptions", "organizations_url": "https://api.github.com/users/jtojnar/orgs", "repos_url": "https://api.github.com/users/jtojnar/repos", "events_url": "https://api.github.com/users/jtojnar/events{/privacy}", "received_events_url": "https://api.github.com/users/jtojnar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-19T19:26:56Z", "updated_at": "2018-10-22T14:38:03Z", "closed_at": "2018-10-22T14:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to package python-saml for NixOS but cannot run tests because the PyPI package lacks them.\r\n\r\nSee also the Debian thread about the issue:\r\nhttps://lists.debian.org/debian-python/2016/04/msg00074.html\r\n\r\nEdit: meant to open it for [python3-saml](https://github.com/onelogin/python3-saml/issues/115), but it applies here as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/239", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/239/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/239/events", "html_url": "https://github.com/onelogin/python-saml/issues/239", "id": 364522739, "node_id": "MDU6SXNzdWUzNjQ1MjI3Mzk=", "number": 239, "title": "Check that the response has all of the AuthnContexts that we provided", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1071517304, "node_id": "MDU6TGFiZWwxMDcxNTE3MzA0", "url": "https://api.github.com/repos/onelogin/python-saml/labels/enhancement", "name": "enhancement", "color": "95bced", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-27T15:07:47Z", "updated_at": "2019-01-29T17:14:48Z", "closed_at": "2019-01-29T17:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Implement https://github.com/onelogin/python3-saml/pull/97", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/238", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/238/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/238/events", "html_url": "https://github.com/onelogin/python-saml/issues/238", "id": 362410051, "node_id": "MDU6SXNzdWUzNjI0MTAwNTE=", "number": 238, "title": "Typo in DSA_SHA1 constant's value?", "user": {"login": "chipx86", "id": 4063, "node_id": "MDQ6VXNlcjQwNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chipx86", "html_url": "https://github.com/chipx86", "followers_url": "https://api.github.com/users/chipx86/followers", "following_url": "https://api.github.com/users/chipx86/following{/other_user}", "gists_url": "https://api.github.com/users/chipx86/gists{/gist_id}", "starred_url": "https://api.github.com/users/chipx86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chipx86/subscriptions", "organizations_url": "https://api.github.com/users/chipx86/orgs", "repos_url": "https://api.github.com/users/chipx86/repos", "events_url": "https://api.github.com/users/chipx86/events{/privacy}", "received_events_url": "https://api.github.com/users/chipx86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-21T00:01:34Z", "updated_at": "2018-09-27T14:48:36Z", "closed_at": "2018-09-27T14:48:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm just getting familiar with this package, but while browsing through the constants, I noticed this inconsistency:\r\n\r\nhttps://github.com/onelogin/python-saml/blob/3814b0fe98d6ab78cf92b39c15e1785b1cab22bb/src/onelogin/saml2/constants.py#L106\r\n\r\nNote the `/` in the value `http://www.w3.org/2000/09/xmld/sig#dsa-sha1`, which differs from every spec I can find, including information on the package's README. I imagine this should be `http://www.w3.org/2000/09/xmldsig#dsa-sha1`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/237", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/237/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/237/events", "html_url": "https://github.com/onelogin/python-saml/issues/237", "id": 354049161, "node_id": "MDU6SXNzdWUzNTQwNDkxNjE=", "number": 237, "title": "Error when running pip install python-saml", "user": {"login": "jafetmorales", "id": 21225701, "node_id": "MDQ6VXNlcjIxMjI1NzAx", "avatar_url": "https://avatars2.githubusercontent.com/u/21225701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jafetmorales", "html_url": "https://github.com/jafetmorales", "followers_url": "https://api.github.com/users/jafetmorales/followers", "following_url": "https://api.github.com/users/jafetmorales/following{/other_user}", "gists_url": "https://api.github.com/users/jafetmorales/gists{/gist_id}", "starred_url": "https://api.github.com/users/jafetmorales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jafetmorales/subscriptions", "organizations_url": "https://api.github.com/users/jafetmorales/orgs", "repos_url": "https://api.github.com/users/jafetmorales/repos", "events_url": "https://api.github.com/users/jafetmorales/events{/privacy}", "received_events_url": "https://api.github.com/users/jafetmorales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-25T22:51:33Z", "updated_at": "2018-09-06T01:03:38Z", "closed_at": "2018-09-05T22:50:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the output when running <code>pip install python-saml</code>\n```\nCollecting python-saml\n  Downloading https://files.pythonhosted.org/packages/2b/05/c709c6f23df8a939e324b3136042957256e779f3fb0492fb7b0bfff7d1b4/python-saml-2.4.1.tar.gz (72kB)\nCollecting dm.xmlsec.binding==1.3.3 (from python-saml)\n  Downloading https://files.pythonhosted.org/packages/02/ba/b534536eb50bc013cd8dc3116c46eee4bff5b9e57e2af23f81afc574a67a/dm.xmlsec.binding-1.3.3.tar.gz (120kB)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"C:\\Users\\jmorales\\AppData\\Local\\Temp\\pip-install-ueuyv6lm\\dm.xmlsec.binding\\setup.py\", line 72\n        print \"Warning : cflag %s skipped\" % flag\n                                         ^\n    SyntaxError: Missing parentheses in call to print\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in C:\\Users\\jmorales\\AppData\\Local\\Temp\\pip-install-ueuyv6lm\\dm.xmlsec.binding\\\n```\nThis is my setup:\n>Python version: 3.5\n>OS: Windows 10 Home\n>System Type: 64-bit Operating System, x64-based processor\n>Processor: AMD A10-8700P Radeon R6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/236", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/236/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/236/events", "html_url": "https://github.com/onelogin/python-saml/issues/236", "id": 340299411, "node_id": "MDU6SXNzdWUzNDAyOTk0MTE=", "number": 236, "title": "\"The response was received at http://django-service:8000/acs instead of https://localhost:8443/acs\"", "user": {"login": "borninla", "id": 20800975, "node_id": "MDQ6VXNlcjIwODAwOTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/20800975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borninla", "html_url": "https://github.com/borninla", "followers_url": "https://api.github.com/users/borninla/followers", "following_url": "https://api.github.com/users/borninla/following{/other_user}", "gists_url": "https://api.github.com/users/borninla/gists{/gist_id}", "starred_url": "https://api.github.com/users/borninla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borninla/subscriptions", "organizations_url": "https://api.github.com/users/borninla/orgs", "repos_url": "https://api.github.com/users/borninla/repos", "events_url": "https://api.github.com/users/borninla/events{/privacy}", "received_events_url": "https://api.github.com/users/borninla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-11T15:42:04Z", "updated_at": "2019-09-13T02:55:09Z", "closed_at": "2018-07-12T09:00:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to get SSO working between my SP and the IdP (google). However, Gsuite requires an ACS url with the HTTPS protocol (for obvious reasons).\r\n\r\nI am currently testing locally. The SP is set up through Django, and I have a Nginx layer in the front which is re-porting from HTTP to HTTPS. Everything works fine up until the point of receiving the error message in the title.\r\n\r\nIs there a way to get around this and have it point explicitly to the HTTPS url? Or maybe there is an easier way straight through Django? I tried without using Nginx but it seems like I need an extra framework to handle the re-porting.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/235", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/235/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/235/events", "html_url": "https://github.com/onelogin/python-saml/issues/235", "id": 340044422, "node_id": "MDU6SXNzdWUzNDAwNDQ0MjI=", "number": 235, "title": "Segmentation fault (core dumped) on CentOS 7 on test run", "user": {"login": "ezturner", "id": 3484903, "node_id": "MDQ6VXNlcjM0ODQ5MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3484903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezturner", "html_url": "https://github.com/ezturner", "followers_url": "https://api.github.com/users/ezturner/followers", "following_url": "https://api.github.com/users/ezturner/following{/other_user}", "gists_url": "https://api.github.com/users/ezturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezturner/subscriptions", "organizations_url": "https://api.github.com/users/ezturner/orgs", "repos_url": "https://api.github.com/users/ezturner/repos", "events_url": "https://api.github.com/users/ezturner/events{/privacy}", "received_events_url": "https://api.github.com/users/ezturner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-10T23:48:01Z", "updated_at": "2019-06-24T17:45:04Z", "closed_at": "2019-06-24T17:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been attempting to use python-saml on a CentOS 7 host and have been unable to get it to work. \r\n\r\nHere is the Docker image I've been using to troubleshoot this:\r\n\r\nhttps://hub.docker.com/r/ezturner/python-saml-centos7/\r\n\r\nDockerfile:\r\nhttps://gist.github.com/ezturner/381205b71594fd56dd9d708870dfa80d\r\n\r\nList of dependencies:\r\n\r\nhttps://gist.github.com/ezturner/29b49015af286e50c847d1b139db15f3\r\n\r\nOutput of running tests:\r\n\r\n```\r\nStep 8/8 : RUN cd python-saml && python setup.py test\r\n ---> Running in 6dae4f71f0b5\r\nrunning test\r\nrunning egg_info\r\nwriting requirements to src/python_saml.egg-info/requires.txt\r\nwriting src/python_saml.egg-info/PKG-INFO\r\nwriting top-level names to src/python_saml.egg-info/top_level.txt\r\nwriting dependency_links to src/python_saml.egg-info/dependency_links.txt\r\nreading manifest file 'src/python_saml.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no previously-included files matching '__pycache__' found under directory '*'\r\nwarning: no previously-included files matching '*.py[co]' found under directory '*'\r\nwriting manifest file 'src/python_saml.egg-info/SOURCES.txt'\r\nrunning build_ext\r\n/bin/sh: line 1:     7 Segmentation fault      (core dumped) python setup.py test\r\nThe command '/bin/sh -c cd python-saml && python setup.py test' returned a non-zero code: 139\r\n```\r\n\r\nI'd appreciate any help that can be provided with troubleshooting this issue. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/233", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/233/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/233/events", "html_url": "https://github.com/onelogin/python-saml/issues/233", "id": 336258067, "node_id": "MDU6SXNzdWUzMzYyNTgwNjc=", "number": 233, "title": "IDP Metadata", "user": {"login": "peppelinux", "id": 1297620, "node_id": "MDQ6VXNlcjEyOTc2MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1297620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peppelinux", "html_url": "https://github.com/peppelinux", "followers_url": "https://api.github.com/users/peppelinux/followers", "following_url": "https://api.github.com/users/peppelinux/following{/other_user}", "gists_url": "https://api.github.com/users/peppelinux/gists{/gist_id}", "starred_url": "https://api.github.com/users/peppelinux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peppelinux/subscriptions", "organizations_url": "https://api.github.com/users/peppelinux/orgs", "repos_url": "https://api.github.com/users/peppelinux/repos", "events_url": "https://api.github.com/users/peppelinux/events{/privacy}", "received_events_url": "https://api.github.com/users/peppelinux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T14:36:50Z", "updated_at": "2018-09-27T14:55:31Z", "closed_at": "2018-09-27T14:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is possibile to load IDP metadatas xml file instead of define its available resources as:\r\n\r\n            \"idp\": {\r\n                \"entityId\": IDP_METADATA_URL,\r\n                \"singleSignOnService\": {\r\n                    \"url\": '{}/login/process/'.format(IDP_URL),\r\n                    \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n                },\r\n                \"singleLogoutService\": {\r\n                    \"url\": '{}/ls/'.format(IDP_URL),\r\n                    \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n                },\r\n\r\nIt would be good if a scheduled metadata download could update every IDP definition without modify settings.json file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/232", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/232/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/232/events", "html_url": "https://github.com/onelogin/python-saml/issues/232", "id": 321065631, "node_id": "MDU6SXNzdWUzMjEwNjU2MzE=", "number": 232, "title": "Signature validation failed. SAML Response rejected", "user": {"login": "namanrajbaid", "id": 32383266, "node_id": "MDQ6VXNlcjMyMzgzMjY2", "avatar_url": "https://avatars1.githubusercontent.com/u/32383266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namanrajbaid", "html_url": "https://github.com/namanrajbaid", "followers_url": "https://api.github.com/users/namanrajbaid/followers", "following_url": "https://api.github.com/users/namanrajbaid/following{/other_user}", "gists_url": "https://api.github.com/users/namanrajbaid/gists{/gist_id}", "starred_url": "https://api.github.com/users/namanrajbaid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namanrajbaid/subscriptions", "organizations_url": "https://api.github.com/users/namanrajbaid/orgs", "repos_url": "https://api.github.com/users/namanrajbaid/repos", "events_url": "https://api.github.com/users/namanrajbaid/events{/privacy}", "received_events_url": "https://api.github.com/users/namanrajbaid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-08T07:01:52Z", "updated_at": "2019-06-24T17:45:24Z", "closed_at": "2019-06-24T17:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having issue with signature verification. I was able to verify response on https://www.samltool.com/validate_response.php. \r\n\r\nhere is the setting.json\r\n`{\r\n    \"strict\": false,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"https://10.5.126.60:9440\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"https://10.5.126.60:9440/api/nutanix/v3/identity_providers/callback\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\r\n        \"x509cert\": \"\",\r\n        \"privateKey\": \"\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"http://www.okta.com/exke8xr05e34hTyEc0h7\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://dev-435978.oktapreview.com/app/nutanixdev435978_prism_1/exke8xr05e34hTyEc0h7/sso/saml\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\":\"MIIDpDCCAoygAwIBAgIGAWIFBOW1MA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi00MzU5NzgxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTgwMzA4MDk0OTI5WhcNMjgwMzA4MDk1MDI5WjCBkjELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtNDM1OTc4MRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA30N09EBYwxwVQy4pZbyQwQtWTMCuow2YWWgy7qIt5eGIE+XXAXHf6tx/I8HF6YhHRAEEKA8DWADS+l3zh2K1unWHmaU9w0V1W4bkWFnGiU3id7hZO7P2tVNXpYaLiZBklZ9VQFrqjG30wCi356IhlMx5RxjZVTqCDMDYjWR7KfnpzSxncQXLTdtD4Mjjz/SoE3e4rQEadl0us+LWveHwkYDD9A+03V3Cevy1vxMqHXTLvwVoV6Nv7gJRnhMRdXVMlqKDEbmwENdBNHv0KGf9abbJO0o02TKIATu5vf4riJjFx4AELnM9pMz4yoZX9DqTkXAJieTiS7m4CvyuR0tXnwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAk1hhWmQSwnykUeBce2Nfuf7nJarCA6g7EBJCsID103hV8iqUl2OfJKIJmgMeW8/fxk29LUbVGE9xup0L0RaQi2ZW9YAzhodvMtna2GQx2CprHy/zlL1d8X3+iVDdGh6pEN4bRE2Rlz/sqcIE3aFp7AMubQ0Zk/n2g2kGMCDHZI8bVirHis/7vjxXeTOF178tKznFBHYnrIBxgXD/RlObTTGXCpFWnGvjXLFg6BasFHJpRI4yt33CVhFWgb7vbQgFxOKrg5OpoDFKMyjFYgOiPKeVOL5qEOq6Gkgi49SY382ifclyG5joET71hK3q2Rnvi3PFaJhd4WNAn+2JJTCjY\"\r\n    }\r\n}`\r\n\r\nHere is the response that i got\r\n``", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/231", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/231/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/231/events", "html_url": "https://github.com/onelogin/python-saml/issues/231", "id": 319143214, "node_id": "MDU6SXNzdWUzMTkxNDMyMTQ=", "number": 231, "title": "add_sign tampering with the xml, resulting in invalid signature", "user": {"login": "RamezIssac", "id": 6247918, "node_id": "MDQ6VXNlcjYyNDc5MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6247918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RamezIssac", "html_url": "https://github.com/RamezIssac", "followers_url": "https://api.github.com/users/RamezIssac/followers", "following_url": "https://api.github.com/users/RamezIssac/following{/other_user}", "gists_url": "https://api.github.com/users/RamezIssac/gists{/gist_id}", "starred_url": "https://api.github.com/users/RamezIssac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RamezIssac/subscriptions", "organizations_url": "https://api.github.com/users/RamezIssac/orgs", "repos_url": "https://api.github.com/users/RamezIssac/repos", "events_url": "https://api.github.com/users/RamezIssac/events{/privacy}", "received_events_url": "https://api.github.com/users/RamezIssac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-05-01T08:17:16Z", "updated_at": "2018-05-17T07:25:19Z", "closed_at": "2018-05-17T07:25:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day dear, \r\nI'm implementing HTTP-POST which is requiring enveloped signatures.\r\n\r\nI implemented your hint on the php repo (and here on other issues) using `add_sign` \r\nBut, indeed `add_sign` do tamper with the resulting xml (as in #148 ).\r\nI reviewed your commit 5e08bb2 , it certainly look way better at solving the issue but unfortunately it still yields an _invalid signature_ from the idp.\r\n\r\nOn a side note: If i sign the xml request on the onelogin site online tools, i get through and have no errors.\r\n\r\nHow can i help resolving this issue ?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/230", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/230/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/230/events", "html_url": "https://github.com/onelogin/python-saml/issues/230", "id": 318362420, "node_id": "MDU6SXNzdWUzMTgzNjI0MjA=", "number": 230, "title": "xmlsec cannot load key", "user": {"login": "Herrner", "id": 2045460, "node_id": "MDQ6VXNlcjIwNDU0NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2045460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Herrner", "html_url": "https://github.com/Herrner", "followers_url": "https://api.github.com/users/Herrner/followers", "following_url": "https://api.github.com/users/Herrner/following{/other_user}", "gists_url": "https://api.github.com/users/Herrner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Herrner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Herrner/subscriptions", "organizations_url": "https://api.github.com/users/Herrner/orgs", "repos_url": "https://api.github.com/users/Herrner/repos", "events_url": "https://api.github.com/users/Herrner/events{/privacy}", "received_events_url": "https://api.github.com/users/Herrner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-27T10:44:07Z", "updated_at": "2018-09-27T15:00:48Z", "closed_at": "2018-09-27T15:00:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are getting an `xmlsec.Error: (9, 'cannot load key')`-Error when trying to log in via Shibboleth in a flask-app (using [shibboleth-authenticator](https://github.com/tobiasfrust/shibboleth-authenticator) when the SP tries to decode the IdP-Message at \r\n\r\n'manager.add_key(xmlsec.Key.from_memory(key, xmlsec.KeyFormat.PEM, None))'\r\n\r\nKeyFormat.PEM seems to be legit for the Key. Any ideas?\r\n\r\nIssue is possibly related to #55. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/229", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/229/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/229/events", "html_url": "https://github.com/onelogin/python-saml/issues/229", "id": 317459671, "node_id": "MDU6SXNzdWUzMTc0NTk2NzE=", "number": 229, "title": "where can i get available smal2.0 idp servers", "user": {"login": "jesoonluo", "id": 25141582, "node_id": "MDQ6VXNlcjI1MTQxNTgy", "avatar_url": "https://avatars3.githubusercontent.com/u/25141582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesoonluo", "html_url": "https://github.com/jesoonluo", "followers_url": "https://api.github.com/users/jesoonluo/followers", "following_url": "https://api.github.com/users/jesoonluo/following{/other_user}", "gists_url": "https://api.github.com/users/jesoonluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesoonluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesoonluo/subscriptions", "organizations_url": "https://api.github.com/users/jesoonluo/orgs", "repos_url": "https://api.github.com/users/jesoonluo/repos", "events_url": "https://api.github.com/users/jesoonluo/events{/privacy}", "received_events_url": "https://api.github.com/users/jesoonluo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-25T02:36:53Z", "updated_at": "2019-01-29T15:10:06Z", "closed_at": "2019-01-29T15:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "some one can help me ? I'am try to use gluu or auth0, but does't understand those how to config.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/228", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/228/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/228/events", "html_url": "https://github.com/onelogin/python-saml/issues/228", "id": 317209321, "node_id": "MDU6SXNzdWUzMTcyMDkzMjE=", "number": 228, "title": "Python 3 support", "user": {"login": "kamikaze", "id": 52880, "node_id": "MDQ6VXNlcjUyODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/52880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamikaze", "html_url": "https://github.com/kamikaze", "followers_url": "https://api.github.com/users/kamikaze/followers", "following_url": "https://api.github.com/users/kamikaze/following{/other_user}", "gists_url": "https://api.github.com/users/kamikaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamikaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamikaze/subscriptions", "organizations_url": "https://api.github.com/users/kamikaze/orgs", "repos_url": "https://api.github.com/users/kamikaze/repos", "events_url": "https://api.github.com/users/kamikaze/events{/privacy}", "received_events_url": "https://api.github.com/users/kamikaze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-24T12:47:09Z", "updated_at": "2018-04-24T13:10:33Z", "closed_at": "2018-04-24T13:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/227", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/227/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/227/events", "html_url": "https://github.com/onelogin/python-saml/issues/227", "id": 316754622, "node_id": "MDU6SXNzdWUzMTY3NTQ2MjI=", "number": 227, "title": "Integrating python-saml with an ADFS IDP ", "user": {"login": "c0ntagi0us", "id": 19889661, "node_id": "MDQ6VXNlcjE5ODg5NjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/19889661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c0ntagi0us", "html_url": "https://github.com/c0ntagi0us", "followers_url": "https://api.github.com/users/c0ntagi0us/followers", "following_url": "https://api.github.com/users/c0ntagi0us/following{/other_user}", "gists_url": "https://api.github.com/users/c0ntagi0us/gists{/gist_id}", "starred_url": "https://api.github.com/users/c0ntagi0us/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c0ntagi0us/subscriptions", "organizations_url": "https://api.github.com/users/c0ntagi0us/orgs", "repos_url": "https://api.github.com/users/c0ntagi0us/repos", "events_url": "https://api.github.com/users/c0ntagi0us/events{/privacy}", "received_events_url": "https://api.github.com/users/c0ntagi0us/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-23T10:35:38Z", "updated_at": "2018-04-26T08:07:46Z", "closed_at": "2018-04-26T08:07:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "On a previous post (https://github.com/onelogin/python-saml/issues/180) @pitbulk mentions \r\n\r\n> Remember to register SP's x509 certificate on the ADFS in order to let it validate the Signature of the AuthNRequest\r\n\r\nI have added the SP's x509 certificate on the Trusted Root Certificate Authorities on the ADFS but the signature validation still fails when importing SP's metadata. (An error occurred during an attempt to read the federation metadata... Error ID6013) \r\n\r\nOnline endpoint or offline xml file make no difference.\r\n\r\nI am using self signed certs on the SP.\r\n\r\nOther IDPs work without issues. (Onelogin, Azure etc)\r\n\r\n(\"signMetadata\": True)\r\n\r\nUpdate: Using this tool to build metadata https://www.samltool.com/sp_metadata.php I don't get any errors.\r\n\r\nAny tips/thoughts?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/226", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/226/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/226/events", "html_url": "https://github.com/onelogin/python-saml/issues/226", "id": 315472471, "node_id": "MDU6SXNzdWUzMTU0NzI0NzE=", "number": 226, "title": "OneLogin_Saml2_ValidationError on a wrong destination", "user": {"login": "sleyzerzon", "id": 528932, "node_id": "MDQ6VXNlcjUyODkzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/528932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleyzerzon", "html_url": "https://github.com/sleyzerzon", "followers_url": "https://api.github.com/users/sleyzerzon/followers", "following_url": "https://api.github.com/users/sleyzerzon/following{/other_user}", "gists_url": "https://api.github.com/users/sleyzerzon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleyzerzon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleyzerzon/subscriptions", "organizations_url": "https://api.github.com/users/sleyzerzon/orgs", "repos_url": "https://api.github.com/users/sleyzerzon/repos", "events_url": "https://api.github.com/users/sleyzerzon/events{/privacy}", "received_events_url": "https://api.github.com/users/sleyzerzon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T13:09:51Z", "updated_at": "2019-06-24T17:46:10Z", "closed_at": "2019-06-24T17:46:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When integrating django demo into our app, I'm getting the following error:\r\n\r\n`The response was received at http://aecb7f99.ngrok.io:8000/saml/ instead of https://aecb7f99.ngrok.io/saml/?acs`\r\n\r\nLooks like the /?acs part of the URL is being dropped when url's are compared.\r\n\r\nAs a consequence, the response is treated as invalid and I cannot get hold of the attributes, even though I can see them in the decoded SAML XML response.\r\n\r\nIn the source, the query is being specifically discarded when building the _current_url_:\r\n\r\n`current_url = OneLogin_Saml2_Utils.get_self_url_no_query(request_data)` (ln. 134 of the _response_)\r\n\r\nwhich seems to be leading to its eventual discrepancy with the `desination` (ln 199. or _response_)\r\n\r\nWhat do those URLs represent?  \r\n\r\n```\r\n    <saml2:SubjectConfirmationData InResponseTo=\"ONELOGIN_464823d865a48ba1eb3ee6df2871715cc89c3bd6\"\r\n                                                   NotOnOrAfter=\"2018-04-18T12:59:50.185Z\"\r\n                                                   Recipient=\"https://aecb7f99.ngrok.io/saml/?acs\"\r\n                                                   />\r\n```\r\n\r\nIs that's what the error is referring to?\r\n\r\nIs there a way to configure it so that it considers the query as well when formulating the _current_url_, or am I doing something wrong?  \r\n\r\nHere are my settings.json:\r\n\r\n```\r\n{\r\n    \"strict\": true,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"https://localhost:8000/metadata/\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"https://aecb7f99.ngrok.io/saml/?acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url_default\": \"https://localhost:8000/?sls\",\r\n            \"url\": \"\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n        \"x509cert\": \"\",\r\n        \"privateKey\": \"\"\r\n    },\r\n    \"idp\": {\r\n    \r\n        \"entityId\": \"https://accounts.google.com/o/saml2?idpid=C04ks7ig5\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://accounts.google.com/o/saml2/idp?idpid=C04ks7ig5\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://app.onelogin.com/trust/saml2/http-redirect/slo/<onelogin_connector_id>\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\": \"MIIDdDCCAlyg.........\"\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/225", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/225/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/225/events", "html_url": "https://github.com/onelogin/python-saml/issues/225", "id": 314565568, "node_id": "MDU6SXNzdWUzMTQ1NjU1Njg=", "number": 225, "title": "why compress values and get [2: -4] before b64encode in deflate_and_base64_encode from utils.py?", "user": {"login": "magicxxx", "id": 9112830, "node_id": "MDQ6VXNlcjkxMTI4MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9112830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magicxxx", "html_url": "https://github.com/magicxxx", "followers_url": "https://api.github.com/users/magicxxx/followers", "following_url": "https://api.github.com/users/magicxxx/following{/other_user}", "gists_url": "https://api.github.com/users/magicxxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/magicxxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magicxxx/subscriptions", "organizations_url": "https://api.github.com/users/magicxxx/orgs", "repos_url": "https://api.github.com/users/magicxxx/repos", "events_url": "https://api.github.com/users/magicxxx/events{/privacy}", "received_events_url": "https://api.github.com/users/magicxxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-16T09:19:30Z", "updated_at": "2018-04-16T09:24:58Z", "closed_at": "2018-04-16T09:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "source here:\r\nbase64.b64encode(zlib.compress(value.encode('utf-8'))[2:-4])", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/224", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/224/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/224/events", "html_url": "https://github.com/onelogin/python-saml/issues/224", "id": 312970463, "node_id": "MDU6SXNzdWUzMTI5NzA0NjM=", "number": 224, "title": "XML digital signature validation/verification using function \"xmlSecDSigCtxVerify\" on linux is failing", "user": {"login": "BhaskarShiv", "id": 38254257, "node_id": "MDQ6VXNlcjM4MjU0MjU3", "avatar_url": "https://avatars3.githubusercontent.com/u/38254257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BhaskarShiv", "html_url": "https://github.com/BhaskarShiv", "followers_url": "https://api.github.com/users/BhaskarShiv/followers", "following_url": "https://api.github.com/users/BhaskarShiv/following{/other_user}", "gists_url": "https://api.github.com/users/BhaskarShiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/BhaskarShiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BhaskarShiv/subscriptions", "organizations_url": "https://api.github.com/users/BhaskarShiv/orgs", "repos_url": "https://api.github.com/users/BhaskarShiv/repos", "events_url": "https://api.github.com/users/BhaskarShiv/events{/privacy}", "received_events_url": "https://api.github.com/users/BhaskarShiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-10T15:17:32Z", "updated_at": "2018-05-16T10:54:14Z", "closed_at": "2018-05-16T10:54:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "XML digital signature validation/verification with function \"xmlSecDSigCtxVerify\" using a public key which is embedded in the xml license document on linux is failing. But validation is working absolutely fine on windows.\r\n\r\nBelow is the versions of libxml2 and xmlsec1 used\r\n\r\nclprhel764-clpadmin > xmlsec1 --version\r\nxmlsec1 1.2.19 (openssl)\r\n\r\nclprhel764-clpadmin > rpm -qa | grep libxml2\r\nlibxml2-2.9.1-6.el7_2.3.x86_64\r\nlibxml2-python-2.9.1-6.el7_2.3.x86_64\r\nclprhel764-clpadmin >\r\n\r\n\r\nThe validation is failing in the xmldsig.c at \r\nline : 680 with code \"xmlSecAssert2(xmlSecPtrListGetSize(&(dsigCtx->signedInfoReferences)) == 0, -1);\"\r\nline : 547 and line 366 and so on\r\n\r\nI have attached a piece of `code.`\r\n[verify code.txt](https://github.com/onelogin/python-saml/files/1895188/verify.code.txt)\r\n\r\n\r\nBelow is the error I am getting during verification of the signature using public key.\r\n\r\nclprhel764-clpadmin > ./ValidateLicenseFileSignature ../../data/signed.xml\r\nfunc=xmlSecDSigCtxProcessSignedInfoNode:file=xmldsig.c:line=680:obj=unknown:subj=xmlSecPtrListGetSize(&(dsigCtx->signedInfoReferences)) == 0:error=100:assertion:\r\nfunc=xmlSecDSigCtxProcessSignatureNode:file=xmldsig.c:line=547:obj=unknown:subj=xmlSecDSigCtxProcessSignedInfoNode:error=1:xmlsec library function failed:\r\nfunc=xmlSecDSigCtxVerify:file=xmldsig.c:line=366:obj=unknown:subj=xmlSecDSigCtxSignatureProcessNode:error=1:xmlsec library function failed:\r\nfunc=xmlSecPtrListEmpty:file=list.c:line=150:obj=unknown:subj=list->data != NULL:error=100:assertion:\r\n./ValidateLicenseFileSignature : elmlic_validate_signature() return status = -12.\r\n./ValidateLicenseFileSignature : Invalid license keys - signature is not correct.\r\nclprhel764-clpadmin >\r\n\r\nPlease help me fixing this issue which is lasting for many days. I'm facing the same problem on all Linux machines including suse, redhat and etc\r\nYour help is highly appreciated\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/223", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/223/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/223/events", "html_url": "https://github.com/onelogin/python-saml/issues/223", "id": 303456777, "node_id": "MDU6SXNzdWUzMDM0NTY3Nzc=", "number": 223, "title": "IdP-Initiated SSO thoughts", "user": {"login": "c0ntagi0us", "id": 19889661, "node_id": "MDQ6VXNlcjE5ODg5NjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/19889661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c0ntagi0us", "html_url": "https://github.com/c0ntagi0us", "followers_url": "https://api.github.com/users/c0ntagi0us/followers", "following_url": "https://api.github.com/users/c0ntagi0us/following{/other_user}", "gists_url": "https://api.github.com/users/c0ntagi0us/gists{/gist_id}", "starred_url": "https://api.github.com/users/c0ntagi0us/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c0ntagi0us/subscriptions", "organizations_url": "https://api.github.com/users/c0ntagi0us/orgs", "repos_url": "https://api.github.com/users/c0ntagi0us/repos", "events_url": "https://api.github.com/users/c0ntagi0us/events{/privacy}", "received_events_url": "https://api.github.com/users/c0ntagi0us/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T12:04:21Z", "updated_at": "2018-03-08T15:30:43Z", "closed_at": "2018-03-08T15:30:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assuming that I have different settings for every account in my app with different IDP certs etc. (An account can have many users)\r\n\r\nWhen using SP initiated login you can use AuthNRequestID to tie the response to an account and use its settings for authorization.\r\n\r\nWhat can you do with IDP initiated login? How will you be able to tie the response to an account? If you use a custom ACS link for every account, this will work. But when using a generic \"example.com/acs/\"\r\nthere is nothing unique to identify which settings to use.\r\n\r\nExtracting the x509 cert from the response and using the fingerprint to find the relevant account could work, unless the assertion is encrypted.\r\n\r\nMaybe I am doing this all wrong, but I can't seem to find an elegant way to match saml_settings with an idp response, except for custom acs urls. (ex. \"example.com/acs/id/\")\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/222", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/222/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/222/events", "html_url": "https://github.com/onelogin/python-saml/issues/222", "id": 302999626, "node_id": "MDU6SXNzdWUzMDI5OTk2MjY=", "number": 222, "title": "Link to CVE-2017-11427 is broken", "user": {"login": "tbarbugli", "id": 88735, "node_id": "MDQ6VXNlcjg4NzM1", "avatar_url": "https://avatars3.githubusercontent.com/u/88735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbarbugli", "html_url": "https://github.com/tbarbugli", "followers_url": "https://api.github.com/users/tbarbugli/followers", "following_url": "https://api.github.com/users/tbarbugli/following{/other_user}", "gists_url": "https://api.github.com/users/tbarbugli/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbarbugli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbarbugli/subscriptions", "organizations_url": "https://api.github.com/users/tbarbugli/orgs", "repos_url": "https://api.github.com/users/tbarbugli/repos", "events_url": "https://api.github.com/users/tbarbugli/events{/privacy}", "received_events_url": "https://api.github.com/users/tbarbugli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-07T08:05:18Z", "updated_at": "2018-03-07T14:30:55Z", "closed_at": "2018-03-07T14:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/217", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/217/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/217/events", "html_url": "https://github.com/onelogin/python-saml/issues/217", "id": 292209763, "node_id": "MDU6SXNzdWUyOTIyMDk3NjM=", "number": 217, "title": "run demo-django got segmentation fault", "user": {"login": "tangyin", "id": 740528, "node_id": "MDQ6VXNlcjc0MDUyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/740528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tangyin", "html_url": "https://github.com/tangyin", "followers_url": "https://api.github.com/users/tangyin/followers", "following_url": "https://api.github.com/users/tangyin/following{/other_user}", "gists_url": "https://api.github.com/users/tangyin/gists{/gist_id}", "starred_url": "https://api.github.com/users/tangyin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tangyin/subscriptions", "organizations_url": "https://api.github.com/users/tangyin/orgs", "repos_url": "https://api.github.com/users/tangyin/repos", "events_url": "https://api.github.com/users/tangyin/events{/privacy}", "received_events_url": "https://api.github.com/users/tangyin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-28T14:45:22Z", "updated_at": "2018-09-27T15:04:05Z", "closed_at": "2018-09-27T15:04:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: centos 7.2\r\npip freeze:\r\nbackports.shutil-get-terminal-size==1.0.0\r\nbackports.ssl-match-hostname==3.4.0.2\r\nchardet==2.2.1\r\nconfigobj==4.7.2\r\ndecorator==3.4.0\r\ndefusedxml==0.4.1\r\nDjango==1.8\r\ndm.xmlsec.binding==1.3.3\r\nenum34==1.1.6\r\niniparse==0.4\r\nipython==5.2.0\r\nipython-genutils==0.2.0\r\nisodate==0.6.0\r\nkitchen==1.1.1\r\nlangtable==0.0.31\r\nlxml==4.1.1\r\nM2Crypto==0.21.1\r\npathlib2==2.3.0\r\nperf==0.1\r\npexpect==4.3.1\r\npickleshare==0.7.4\r\nprompt-toolkit==1.0.15\r\nptyprocess==0.5.2\r\npycurl==7.19.0\r\nPygments==2.2.0\r\npygobject==3.14.0\r\npygpgme==0.3\r\npyliblzma==0.5.3\r\npyparsing==1.5.6\r\npython-augeas==0.5.0\r\npython-dmidecode==3.10.13\r\npython-saml==2.3.0\r\npyudev==0.15\r\npyxattr==0.5.1\r\nscandir==1.6\r\nsimplegeneric==0.8.1\r\nsix==1.11.0\r\nslip==0.4.0\r\nslip.dbus==0.4.0\r\ntraitlets==4.3.2\r\nurlgrabber==3.10\r\nwcwidth==0.1.7\r\nyum-langpacks==0.4.2\r\nyum-metadata-parser==1.1.4\r\n\r\nwhen I runserver in demo-django and visit the index url, the console return a segmentation fault.\r\n/var/log/message: localhost kernel: python[11471]: segfault at 10 ip 00007f841b9dad12 sp 00007f842989e4a0 error 4 in etree.so[7f841b8d0000+4e5000]\r\n\r\nAny help? thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/215", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/215/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/215/events", "html_url": "https://github.com/onelogin/python-saml/issues/215", "id": 288340552, "node_id": "MDU6SXNzdWUyODgzNDA1NTI=", "number": 215, "title": "Allow using different classes to build the request", "user": {"login": "pgcd", "id": 2361956, "node_id": "MDQ6VXNlcjIzNjE5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2361956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgcd", "html_url": "https://github.com/pgcd", "followers_url": "https://api.github.com/users/pgcd/followers", "following_url": "https://api.github.com/users/pgcd/following{/other_user}", "gists_url": "https://api.github.com/users/pgcd/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgcd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgcd/subscriptions", "organizations_url": "https://api.github.com/users/pgcd/orgs", "repos_url": "https://api.github.com/users/pgcd/repos", "events_url": "https://api.github.com/users/pgcd/events{/privacy}", "received_events_url": "https://api.github.com/users/pgcd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-13T16:23:27Z", "updated_at": "2018-09-27T15:05:20Z", "closed_at": "2018-09-27T15:05:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to connect to an Identity Provider that requires the Issuer to have a specific value (not my SP's entityId that I use in the metadata). \r\nThe most straightforward way of doing so would be subclassing OneLogin_Saml2_Authn_Request and overriding the relevant method so that I can use a different template and pass some extra values to the request, but as far as I can tell there's no support for such an approach.\r\nOf course, if there are alternative ways to reach the same goal, that'd be great too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/214", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/214/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/214/events", "html_url": "https://github.com/onelogin/python-saml/issues/214", "id": 276984206, "node_id": "MDU6SXNzdWUyNzY5ODQyMDY=", "number": 214, "title": "Installer Not Working For Python 3.5 & 3.6", "user": {"login": "ayataprabir", "id": 20454189, "node_id": "MDQ6VXNlcjIwNDU0MTg5", "avatar_url": "https://avatars0.githubusercontent.com/u/20454189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayataprabir", "html_url": "https://github.com/ayataprabir", "followers_url": "https://api.github.com/users/ayataprabir/followers", "following_url": "https://api.github.com/users/ayataprabir/following{/other_user}", "gists_url": "https://api.github.com/users/ayataprabir/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayataprabir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayataprabir/subscriptions", "organizations_url": "https://api.github.com/users/ayataprabir/orgs", "repos_url": "https://api.github.com/users/ayataprabir/repos", "events_url": "https://api.github.com/users/ayataprabir/events{/privacy}", "received_events_url": "https://api.github.com/users/ayataprabir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-27T11:22:27Z", "updated_at": "2017-11-27T11:35:14Z", "closed_at": "2017-11-27T11:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Gettiing error message whenever going to install in Latest environments of python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/213", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/213/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/213/events", "html_url": "https://github.com/onelogin/python-saml/issues/213", "id": 273039578, "node_id": "MDU6SXNzdWUyNzMwMzk1Nzg=", "number": 213, "title": "How do you pass in multiple NameID formats?", "user": {"login": "michaelperret", "id": 1673044, "node_id": "MDQ6VXNlcjE2NzMwNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1673044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelperret", "html_url": "https://github.com/michaelperret", "followers_url": "https://api.github.com/users/michaelperret/followers", "following_url": "https://api.github.com/users/michaelperret/following{/other_user}", "gists_url": "https://api.github.com/users/michaelperret/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelperret/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelperret/subscriptions", "organizations_url": "https://api.github.com/users/michaelperret/orgs", "repos_url": "https://api.github.com/users/michaelperret/repos", "events_url": "https://api.github.com/users/michaelperret/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelperret/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-10T19:47:29Z", "updated_at": "2017-11-13T18:47:32Z", "closed_at": "2017-11-13T18:47:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our SP settings are currently as follows:\r\n\r\n```\r\n\"sp\": {\r\n                \"entityId\": \"%s/saml2/metadata\" % team_host,\r\n                \"assertionConsumerService\": {\r\n                    \"url\": \"%s/saml2/acs\" % team_host,\r\n                    \"binding\": constants.BINDING_HTTP_POST\r\n                },\r\n                \"singleLogoutService\": {\r\n                    \"url\": \"%s/saml2/sls\" % team_host,\r\n                    \"binding\": constants.BINDING_HTTP_REDIRECT\r\n                },\r\n                \"NameIDFormat\": [constants.NAMEID_PERSISTENT, constants.NAMEID_EMAIL_ADDRESS],\r\n                \"x509cert\": SAML_SP_PUBLIC_KEY,\r\n                \"privateKey\": SAML_SP_PRIVATE_KEY\r\n            }\r\n```\r\n\r\nwhich for some reason, encodes like this:\r\n\r\n`<md:NameIDFormat>['urn:oasis:names:tc:SAML:2.0:nameid-format:persistent', 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress']</md:NameIDFormat>`\r\n\r\ncausing the error \r\n\r\n```\r\nErrors validating the metadata:\r\n\r\nElement '{urn:oasis:names:tc:SAML:2.0:assertion}NameID', attribute 'Format': '['urn:oasis:names:tc:SAML:2.0:nameid-format:persistent', 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress']' is not a valid value of the atomic type 'xs:anyURI'.\r\nInvalid SAML Response. Not match the saml-schema-protocol-2.0.xsd\r\n```\r\n\r\nAccording to https://stackoverflow.com/questions/25620820/saml-2-0-multiple-mdnameidformat-tag-in-service-provider-metadata passing multiple NameIDFormat fiedls should theoretically be valid from a protocol standpoint so I'm wondering if there is a different format for the settings dictionary which would cause this to parse correctly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/212", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/212/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/212/events", "html_url": "https://github.com/onelogin/python-saml/issues/212", "id": 268887873, "node_id": "MDU6SXNzdWUyNjg4ODc4NzM=", "number": 212, "title": "AzureAD authnmethodsreferences (WindowsIntegrated)", "user": {"login": "slecrenski", "id": 1291050, "node_id": "MDQ6VXNlcjEyOTEwNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1291050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slecrenski", "html_url": "https://github.com/slecrenski", "followers_url": "https://api.github.com/users/slecrenski/followers", "following_url": "https://api.github.com/users/slecrenski/following{/other_user}", "gists_url": "https://api.github.com/users/slecrenski/gists{/gist_id}", "starred_url": "https://api.github.com/users/slecrenski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slecrenski/subscriptions", "organizations_url": "https://api.github.com/users/slecrenski/orgs", "repos_url": "https://api.github.com/users/slecrenski/repos", "events_url": "https://api.github.com/users/slecrenski/events{/privacy}", "received_events_url": "https://api.github.com/users/slecrenski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-10-26T19:46:20Z", "updated_at": "2017-11-13T11:52:47Z", "closed_at": "2017-11-13T11:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to add additional authnmethodreferences besides Password, ProtectedTransport in the settings.yaml configuration file?\r\n\r\nhttp://schemas.microsoft.com/claims/authnmethodsreferences \t\r\nurn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport\r\n\r\nAuthentication method 'WindowsIntegrated' by which the user authenticated with the service doesn't match requested authentication method 'Password, ProtectedTransport'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/211", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/211/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/211/events", "html_url": "https://github.com/onelogin/python-saml/issues/211", "id": 257313532, "node_id": "MDU6SXNzdWUyNTczMTM1MzI=", "number": 211, "title": "Getting Encrypted Attributes. ", "user": {"login": "aasifalam", "id": 30460915, "node_id": "MDQ6VXNlcjMwNDYwOTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/30460915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aasifalam", "html_url": "https://github.com/aasifalam", "followers_url": "https://api.github.com/users/aasifalam/followers", "following_url": "https://api.github.com/users/aasifalam/following{/other_user}", "gists_url": "https://api.github.com/users/aasifalam/gists{/gist_id}", "starred_url": "https://api.github.com/users/aasifalam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aasifalam/subscriptions", "organizations_url": "https://api.github.com/users/aasifalam/orgs", "repos_url": "https://api.github.com/users/aasifalam/repos", "events_url": "https://api.github.com/users/aasifalam/events{/privacy}", "received_events_url": "https://api.github.com/users/aasifalam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-13T09:25:02Z", "updated_at": "2017-09-13T10:27:03Z", "closed_at": "2017-09-13T10:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting NameId , session expiration and session index in encrypted text. \r\nFor example for NameId using get_nameid(), I get\r\n\"_30f31bb53183fe38824ffeeff5ffffc0d5f584905c\"\r\nFor getting the session using get_session_expiration(), i get : \"1505323156\"\r\nI am not using an SP certificate. My session is over https and app behind nginx.\r\n\r\nAny suggestion if I am missing any config, I am using simplesamlphp as my IDP for testing.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/210", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/210/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/210/events", "html_url": "https://github.com/onelogin/python-saml/issues/210", "id": 257054633, "node_id": "MDU6SXNzdWUyNTcwNTQ2MzM=", "number": 210, "title": "Using get_last_request_id", "user": {"login": "aasifalam", "id": 30460915, "node_id": "MDQ6VXNlcjMwNDYwOTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/30460915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aasifalam", "html_url": "https://github.com/aasifalam", "followers_url": "https://api.github.com/users/aasifalam/followers", "following_url": "https://api.github.com/users/aasifalam/following{/other_user}", "gists_url": "https://api.github.com/users/aasifalam/gists{/gist_id}", "starred_url": "https://api.github.com/users/aasifalam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aasifalam/subscriptions", "organizations_url": "https://api.github.com/users/aasifalam/orgs", "repos_url": "https://api.github.com/users/aasifalam/repos", "events_url": "https://api.github.com/users/aasifalam/events{/privacy}", "received_events_url": "https://api.github.com/users/aasifalam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-12T14:02:33Z", "updated_at": "2017-09-26T08:15:41Z", "closed_at": "2017-09-26T08:15:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am bit confused as how to get this Id. \r\nI tried getting the value in demo-flash-index.py. I am see a None value\r\nEach time I tried getting with sso and logout a new request 'auth' object is created.  Perhaps that is why the ID value is None ?\r\n\r\nAlso looking at your implementation the ID value is stored in  auth.login() call. \r\nBut auth.login() we never return to in the client\r\n\r\nSo how the client should get the ID ?\r\n\r\nThanks\r\nAsif ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/209", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/209/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/209/events", "html_url": "https://github.com/onelogin/python-saml/issues/209", "id": 250586036, "node_id": "MDU6SXNzdWUyNTA1ODYwMzY=", "number": 209, "title": "Keep Getting \"Signature validation failed. SAML Response rejected\" even though validated by online tool.", "user": {"login": "notaviking", "id": 31066161, "node_id": "MDQ6VXNlcjMxMDY2MTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/31066161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notaviking", "html_url": "https://github.com/notaviking", "followers_url": "https://api.github.com/users/notaviking/followers", "following_url": "https://api.github.com/users/notaviking/following{/other_user}", "gists_url": "https://api.github.com/users/notaviking/gists{/gist_id}", "starred_url": "https://api.github.com/users/notaviking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notaviking/subscriptions", "organizations_url": "https://api.github.com/users/notaviking/orgs", "repos_url": "https://api.github.com/users/notaviking/repos", "events_url": "https://api.github.com/users/notaviking/events{/privacy}", "received_events_url": "https://api.github.com/users/notaviking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-16T10:53:24Z", "updated_at": "2017-08-17T08:14:23Z", "closed_at": "2017-08-17T08:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am at a loss at how to proceed here.\r\n\r\nMy code is like this:\r\n```xml url_data = urlparse(request.url)\r\nreq = {\r\n    \"https\": \"on\",\r\n    \"http_host\": request.host,\r\n    \"server_port\": url_data.port,\r\n    \"script_name\": request.path,\r\n    \"get_data\": request.args.copy(),\r\n    \"post_data\": request.form.copy()\r\n}\r\nauth = OneLogin_Saml2_Auth(req, custom_base_path=app.config['SAML_DATA')\r\nauth.process_response()\r\n```\r\n\r\n\r\nMy settings look like this:\r\n```xml {   \r\n    \"strict\": false,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"metadata\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"sls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n        \"x509cert\": <cert>\",\r\n        \"privateKey\": \"<pkey>\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"https://app.onelogin.com/saml/\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"sso\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"slo\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\": <cert>\r\n    }\r\n}\r\n```\r\n\r\nHere is the response I've recieved (I went ahead and decoded it)\r\n```xml <?xml version=\"1.0\"?>\r\n<samlp:Response xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ID=\"pfx0fcb2a28-5e46-bee3-2d62-5f6eab040330\" Version=\"2.0\" IssueInstant=\"2017-08-16T10:35:39Z\" Destination=\"http://a391a168.ngrok.io/saml\" InResponseTo=\"ONELOGIN_296b7e485bdffe1c483d9551847ca54dc7e111ec\">\r\n  <saml:Issuer>https://app.onelogin.com/saml/metadata/692401</saml:Issuer>\r\n  <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\r\n    <ds:SignedInfo>\r\n      <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\r\n      <ds:SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/>\r\n      <ds:Reference URI=\"#pfx0fcb2a28-5e46-bee3-2d62-5f6eab040330\">\r\n        <ds:Transforms>\r\n          <ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>\r\n          <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\r\n        </ds:Transforms>\r\n        <ds:DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/>\r\n        <ds:DigestValue>digest</ds:DigestValue>\r\n      </ds:Reference>\r\n    </ds:SignedInfo>\r\n    <ds:SignatureValue>signature</ds:SignatureValue>\r\n    <ds:KeyInfo>\r\n      <ds:X509Data>\r\n        <ds:X509Certificate><cert></ds:X509Certificate>\r\n      </ds:X509Data>\r\n    </ds:KeyInfo>\r\n  </ds:Signature>\r\n  <samlp:Status>\r\n    <samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/>\r\n  </samlp:Status>\r\n  <saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" Version=\"2.0\" ID=\"A91b2c89a4899ce066efd13368b0f934a4ad41374\" IssueInstant=\"2017-08-16T10:35:39Z\">\r\n    <saml:Issuer>https://app.onelogin.com/saml/</saml:Issuer>\r\n    <saml:Subject>\r\n      <saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\">notaviking@example.com</saml:NameID>\r\n      <saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\">\r\n        <saml:SubjectConfirmationData NotOnOrAfter=\"2017-08-16T10:38:39Z\" Recipient=\"http://a391a168.ngrok.io/saml\" InResponseTo=\"ONELOGIN_296b7e485bdffe1c483d9551847ca54dc7e111ec\"/>\r\n      </saml:SubjectConfirmation>\r\n    </saml:Subject>\r\n    <saml:Conditions NotBefore=\"2017-08-16T10:32:39Z\" NotOnOrAfter=\"2017-08-16T10:38:39Z\">\r\n      <saml:AudienceRestriction>\r\n        <saml:Audience>metadata</saml:Audience>\r\n      </saml:AudienceRestriction>\r\n    </saml:Conditions>\r\n    <saml:AuthnStatement AuthnInstant=\"2017-08-16T10:35:38Z\" SessionNotOnOrAfter=\"2017-08-17T10:35:39Z\" SessionIndex=\"_b384ca30-648b-0135-ede0-02a8dbc4ea50\">\r\n      <saml:AuthnContext>\r\n        <saml:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml:AuthnContextClassRef>\r\n      </saml:AuthnContext>\r\n    </saml:AuthnStatement>\r\n    <saml:AttributeStatement>\r\n      <saml:Attribute Name=\"memberOf\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\">\r\n        <saml:AttributeValue xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xs:string\"/>\r\n      </saml:Attribute>\r\n      <saml:Attribute Name=\"User.LastName\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\">\r\n        <saml:AttributeValue xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xs:string\">H</saml:AttributeValue>\r\n      </saml:Attribute>\r\n      <saml:Attribute Name=\"User.FirstName\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\">\r\n        <saml:AttributeValue xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xs:string\">Mo</saml:AttributeValue>\r\n      </saml:Attribute>\r\n      <saml:Attribute Name=\"PersonImmutableID\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\">\r\n        <saml:AttributeValue xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xs:string\"/>\r\n      </saml:Attribute>\r\n      <saml:Attribute Name=\"User.email\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\">\r\n        <saml:AttributeValue xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"xs:string\">notaviking@example.com</saml:AttributeValue>\r\n      </saml:Attribute>\r\n    </saml:AttributeStatement>\r\n  </saml:Assertion>\r\n</samlp:Response>\r\n```\r\n\r\n\r\nI've double checked all my settings and cna't see anything wrong. To make things worse, when I put the data OneLogin's validation tool, it says this is a valid response. However, I keep receiving \"Signature validation failed. SAML Response rejected\".\r\n\r\nSorry if some of the questions seem dumb, I'm new to this and have been working at it for a while", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/208", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/208/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/208/events", "html_url": "https://github.com/onelogin/python-saml/issues/208", "id": 250462465, "node_id": "MDU6SXNzdWUyNTA0NjI0NjU=", "number": 208, "title": "ExpatError parseString parser.Parse(string, True)", "user": {"login": "helmus", "id": 1042463, "node_id": "MDQ6VXNlcjEwNDI0NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1042463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helmus", "html_url": "https://github.com/helmus", "followers_url": "https://api.github.com/users/helmus/followers", "following_url": "https://api.github.com/users/helmus/following{/other_user}", "gists_url": "https://api.github.com/users/helmus/gists{/gist_id}", "starred_url": "https://api.github.com/users/helmus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helmus/subscriptions", "organizations_url": "https://api.github.com/users/helmus/orgs", "repos_url": "https://api.github.com/users/helmus/repos", "events_url": "https://api.github.com/users/helmus/events{/privacy}", "received_events_url": "https://api.github.com/users/helmus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-15T22:59:03Z", "updated_at": "2017-09-12T17:36:32Z", "closed_at": "2017-09-12T17:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are seeing this error happening in our system, any guess what it is? \r\n```\r\nTraceback (most recent call last):\r\nFile \"/opt/foo/app/virtualenv/application-web/lib/python2.7/site-packages/django/core/handlers/base.py\", line 111, in get_response response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\nFile \"/opt/foo/application-web/foo/foo/apps/account/saml_sso.py\", line 728, in saml_metadata metadata = saml_settings.get_sp_metadata()\r\nFile \"/opt/foo/app/virtualenv/application-web/lib/python2.7/site-packages/onelogin/saml2/settings.py\", line 682, in get_sp_metadata metadata = OneLogin_Saml2_Metadata.sign_metadata(metadata, key_metadata, cert_metadata, signature_algorithm, digest_algorithm)\r\nFile \"/opt/foo/app/virtualenv/application-web/lib/python2.7/site-packages/onelogin/saml2/metadata.py\", line 227, in sign_metadata return OneLogin_Saml2_Utils.add_sign(metadata, key, cert, False, sign_algorithm, digest_algorithm)\r\nFile \"/opt/foo/app/virtualenv/application-web/lib/python2.7/site-packages/onelogin/saml2/utils.py\", line 900, in add_sign newdoc = parseString(tostring(elem, encoding='unicode').encode('utf-8'))\r\nFile \"/opt/foo/app/virtualenv/application-web/lib/python2.7/site-packages/defusedxml/minidom.py\", line 35, in parseString forbid_external=forbid_external)\r\nFile \"/opt/foo/app/virtualenv/application-web/lib/python2.7/site-packages/defusedxml/expatbuilder.py\", line 110, in parseString return builder.parseString(string)\r\nFile \"/usr/lib64/python2.7/xml/dom/expatbuilder.py\", line 223, in parseString parser.Parse(string, True)\r\nExpatError: no element found: line 1, column 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/206", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/206/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/206/events", "html_url": "https://github.com/onelogin/python-saml/issues/206", "id": 245632200, "node_id": "MDU6SXNzdWUyNDU2MzIyMDA=", "number": 206, "title": "metadata for sp does not showup", "user": {"login": "aasifalam", "id": 30460915, "node_id": "MDQ6VXNlcjMwNDYwOTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/30460915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aasifalam", "html_url": "https://github.com/aasifalam", "followers_url": "https://api.github.com/users/aasifalam/followers", "following_url": "https://api.github.com/users/aasifalam/following{/other_user}", "gists_url": "https://api.github.com/users/aasifalam/gists{/gist_id}", "starred_url": "https://api.github.com/users/aasifalam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aasifalam/subscriptions", "organizations_url": "https://api.github.com/users/aasifalam/orgs", "repos_url": "https://api.github.com/users/aasifalam/repos", "events_url": "https://api.github.com/users/aasifalam/events{/privacy}", "received_events_url": "https://api.github.com/users/aasifalam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T07:37:10Z", "updated_at": "2017-07-26T16:20:49Z", "closed_at": "2017-07-26T11:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "New to using the saml toolkit. I just ran the demo-flask when I give this in my browser\r\nhttp://localhost:8000/metadata/\r\nI get \"invalid_xml\"\r\n\r\nat the console where i have run the server I see this error:\r\n\r\nElement '{http://www.w3.org/2000/09/xmldsig#}X509Certificate': 'sp.crt' is not a valid value of the atomic type 'xs:base64Binary'.\r\n127.0.0.1 - - [26/Jul/2017 00:35:26] \"GET /metadata/ HTTP/1.1\" 500 -\r\n\r\nI have created sp.crt and sp.key using openssl as given in the documentation.\r\n\r\nThanks\r\nAsif", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/204", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/204/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/204/events", "html_url": "https://github.com/onelogin/python-saml/issues/204", "id": 237481604, "node_id": "MDU6SXNzdWUyMzc0ODE2MDQ=", "number": 204, "title": "SPNameQualifier not present on single logout requests unless the entity nameid format is used", "user": {"login": "rslinckx", "id": 373249, "node_id": "MDQ6VXNlcjM3MzI0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rslinckx", "html_url": "https://github.com/rslinckx", "followers_url": "https://api.github.com/users/rslinckx/followers", "following_url": "https://api.github.com/users/rslinckx/following{/other_user}", "gists_url": "https://api.github.com/users/rslinckx/gists{/gist_id}", "starred_url": "https://api.github.com/users/rslinckx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rslinckx/subscriptions", "organizations_url": "https://api.github.com/users/rslinckx/orgs", "repos_url": "https://api.github.com/users/rslinckx/repos", "events_url": "https://api.github.com/users/rslinckx/events{/privacy}", "received_events_url": "https://api.github.com/users/rslinckx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-21T10:04:51Z", "updated_at": "2017-09-13T10:19:18Z", "closed_at": "2017-09-13T10:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems the commit 934750641489e6065ff4c8cdab1c79c9326f27b8 makes the SPNameQualifier optional on logout requests, in fact it always removes the attribute if the namedid is specified, and always insert it when the nameid is not specified.\r\n\r\nThe SAML2 spec seems to indicate it should always be omitted in the second case, and may be provided in the first case:\r\n\r\n8.3.6 Entity Identifier\r\nURI: urn:oasis:names:tc:SAML:2.0:nameid-format:entity\r\nIndicates that the content of the element is the identifier of an entity that provides SAML-based services\r\n(such as a SAML authority, requester, or responder) or is a participant in SAML profiles (such as a service\r\nprovider supporting the browser SSO profile). Such an identifier can be used in the <Issuer> element to\r\nidentify the issuer of a SAML request, response, or assertion, or within the <NameID> element to make\r\nassertions about system entities that can issue SAML requests, responses, and assertions. It can also be\r\nused in other elements and attributes whose purpose is to identify a system entity in various protocol\r\nexchanges.\r\nThe syntax of such an identifier is a URI of not more than 1024 characters in length. It is\r\nRECOMMENDED that a system entity use a URL containing its own domain name to identify itself.\r\nThe NameQualifier, SPNameQualifier, and SPProvidedID attributes MUST be omitted.\r\n\r\nIs this commit correct? Maybe the condition has been reversed ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/200", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/200/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/200/events", "html_url": "https://github.com/onelogin/python-saml/issues/200", "id": 235134459, "node_id": "MDU6SXNzdWUyMzUxMzQ0NTk=", "number": 200, "title": "Got different errors on different OS, please help", "user": {"login": "wally-yu", "id": 4316855, "node_id": "MDQ6VXNlcjQzMTY4NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4316855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wally-yu", "html_url": "https://github.com/wally-yu", "followers_url": "https://api.github.com/users/wally-yu/followers", "following_url": "https://api.github.com/users/wally-yu/following{/other_user}", "gists_url": "https://api.github.com/users/wally-yu/gists{/gist_id}", "starred_url": "https://api.github.com/users/wally-yu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wally-yu/subscriptions", "organizations_url": "https://api.github.com/users/wally-yu/orgs", "repos_url": "https://api.github.com/users/wally-yu/repos", "events_url": "https://api.github.com/users/wally-yu/events{/privacy}", "received_events_url": "https://api.github.com/users/wally-yu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-12T06:21:27Z", "updated_at": "2017-07-22T15:45:55Z", "closed_at": "2017-07-22T15:45:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear team,\r\n\r\nSeems this package rely heavily on specific operation system, right?\r\nI first attempted to debug on my Mac and always blocked by a return of something like \"invalid return\" from ACS by correctly configuring your sample app. \r\nI deployed the same code to different OS, here are what I found:\r\n - Mac OS v10.12: got something like \"invalid return\"\r\n - Ubuntu 14.04: got something like \"invalid return\"\r\n - RHEL 4.4.7: got \"Segmentation fault\" - hmmm... this is our production environment\r\n\r\nthe only OS I ran without any problem is Ubuntu v16.04, same code.\r\ni spent weeks looking into these issues, now I don't have clue how to move on. \r\ncould you please suggest what I should try? Thanks in advance.\r\n\r\nThanks,\r\nWally\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/198", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/198/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/198/events", "html_url": "https://github.com/onelogin/python-saml/issues/198", "id": 231407143, "node_id": "MDU6SXNzdWUyMzE0MDcxNDM=", "number": 198, "title": "Saml an ADFS 3.0", "user": {"login": "CMLL", "id": 3720126, "node_id": "MDQ6VXNlcjM3MjAxMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3720126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMLL", "html_url": "https://github.com/CMLL", "followers_url": "https://api.github.com/users/CMLL/followers", "following_url": "https://api.github.com/users/CMLL/following{/other_user}", "gists_url": "https://api.github.com/users/CMLL/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMLL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMLL/subscriptions", "organizations_url": "https://api.github.com/users/CMLL/orgs", "repos_url": "https://api.github.com/users/CMLL/repos", "events_url": "https://api.github.com/users/CMLL/events{/privacy}", "received_events_url": "https://api.github.com/users/CMLL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-25T17:37:56Z", "updated_at": "2017-05-25T18:33:18Z", "closed_at": "2017-05-25T18:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I built an SDP with using python-saml for and tested it correctly with Google and SimpleSAML without a problem but I'm having issues when integrating with ADFS 3.0. I'm using a single virtual machine as a dev/testing environment and got my site to send the login request succesfully, but am getting a general error message on the page. \r\n![image](https://cloud.githubusercontent.com/assets/3720126/26462489/a36e1720-4146-11e7-92d2-1869a0ca81f5.png)\r\n\r\nLooking at the ADFS logs I see this event pop up as an error.\r\n![image](https://cloud.githubusercontent.com/assets/3720126/26462513/bdcb7c5c-4146-11e7-8855-d23aa92c8caf.png)\r\n\r\nWhich leads me to believe that my relaying party is badly configured. What should be going in the relaying party identifiers in ADFS part? And should the SP configuration needs anything special to handle this field?\r\n![image](https://cloud.githubusercontent.com/assets/3720126/26462573/f6bc444c-4146-11e7-864b-4ee7bfca74b2.png)\r\n\r\nThanks in advance for any help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/196", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/196/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/196/events", "html_url": "https://github.com/onelogin/python-saml/issues/196", "id": 228045473, "node_id": "MDU6SXNzdWUyMjgwNDU0NzM=", "number": 196, "title": "Support a way to retrieve last processed SAMLResponse Message ID and Assertion ID", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-11T16:11:21Z", "updated_at": "2017-09-14T15:52:02Z", "closed_at": "2017-09-14T15:52:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As we do at php-saml toolkit with [getLastMessageId](https://github.com/onelogin/php-saml/blob/master/lib/Saml2/Auth.php#L620) and [getLastAssertionId](https://github.com/onelogin/php-saml/blob/master/lib/Saml2/Auth.php#L628)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/194", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/194/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/194/events", "html_url": "https://github.com/onelogin/python-saml/issues/194", "id": 227951503, "node_id": "MDU6SXNzdWUyMjc5NTE1MDM=", "number": 194, "title": "Publish KeyDescriptor[use=\"encryption\"] only when required", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-11T10:49:41Z", "updated_at": "2017-05-18T10:27:31Z", "closed_at": "2017-05-18T10:27:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As we do on [php-saml](https://github.com/onelogin/php-saml/blob/master/lib/Saml2/Metadata.php#L196), adding the $wantsEncrypted parameter to the method that adds the descriptors.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/193", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/193/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/193/events", "html_url": "https://github.com/onelogin/python-saml/issues/193", "id": 227655296, "node_id": "MDU6SXNzdWUyMjc2NTUyOTY=", "number": 193, "title": "Unsigned response rejected even when \"strict\" is false", "user": {"login": "zshauli", "id": 27950788, "node_id": "MDQ6VXNlcjI3OTUwNzg4", "avatar_url": "https://avatars3.githubusercontent.com/u/27950788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zshauli", "html_url": "https://github.com/zshauli", "followers_url": "https://api.github.com/users/zshauli/followers", "following_url": "https://api.github.com/users/zshauli/following{/other_user}", "gists_url": "https://api.github.com/users/zshauli/gists{/gist_id}", "starred_url": "https://api.github.com/users/zshauli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zshauli/subscriptions", "organizations_url": "https://api.github.com/users/zshauli/orgs", "repos_url": "https://api.github.com/users/zshauli/repos", "events_url": "https://api.github.com/users/zshauli/events{/privacy}", "received_events_url": "https://api.github.com/users/zshauli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-10T11:57:09Z", "updated_at": "2017-05-10T14:20:47Z", "closed_at": "2017-05-10T14:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unsigned SAML responses are rejected with the message \"No Signature found. SAML Response rejected\" even when setting \"strict\", \"wantMessagesSigned\" and \"wantAssertionsSigned\" to \"false\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/192", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/192/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/192/events", "html_url": "https://github.com/onelogin/python-saml/issues/192", "id": 225732197, "node_id": "MDU6SXNzdWUyMjU3MzIxOTc=", "number": 192, "title": "Does python-saml support Service Discovery?", "user": {"login": "ddriddle", "id": 10728345, "node_id": "MDQ6VXNlcjEwNzI4MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/10728345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddriddle", "html_url": "https://github.com/ddriddle", "followers_url": "https://api.github.com/users/ddriddle/followers", "following_url": "https://api.github.com/users/ddriddle/following{/other_user}", "gists_url": "https://api.github.com/users/ddriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddriddle/subscriptions", "organizations_url": "https://api.github.com/users/ddriddle/orgs", "repos_url": "https://api.github.com/users/ddriddle/repos", "events_url": "https://api.github.com/users/ddriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/ddriddle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T15:29:20Z", "updated_at": "2017-05-09T09:57:54Z", "closed_at": "2017-05-09T09:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does python-saml support the SAML Discovery Service Protocol? If not is it on the roadmap? Are there any modules that work with python-saml to support DS?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/190", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/190/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/190/events", "html_url": "https://github.com/onelogin/python-saml/issues/190", "id": 223303066, "node_id": "MDU6SXNzdWUyMjMzMDMwNjY=", "number": 190, "title": "Number of Assertions check should come after status check", "user": {"login": "thejuan", "id": 329807, "node_id": "MDQ6VXNlcjMyOTgwNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/329807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thejuan", "html_url": "https://github.com/thejuan", "followers_url": "https://api.github.com/users/thejuan/followers", "following_url": "https://api.github.com/users/thejuan/following{/other_user}", "gists_url": "https://api.github.com/users/thejuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/thejuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thejuan/subscriptions", "organizations_url": "https://api.github.com/users/thejuan/orgs", "repos_url": "https://api.github.com/users/thejuan/repos", "events_url": "https://api.github.com/users/thejuan/events{/privacy}", "received_events_url": "https://api.github.com/users/thejuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-21T07:39:04Z", "updated_at": "2017-05-09T09:58:29Z", "closed_at": "2017-05-09T09:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a failed response is returned as part of sDP initoated SSO there are no assertions and the check for assertions returns the message \"SAML Response must contain 1 assertion\" but the real issue is the status is not success.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/189", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/189/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/189/events", "html_url": "https://github.com/onelogin/python-saml/issues/189", "id": 222184299, "node_id": "MDU6SXNzdWUyMjIxODQyOTk=", "number": 189, "title": "Failure to handle \"saml2\" and \"saml2p\" xml namespaces", "user": {"login": "kingoftheknoll", "id": 2007892, "node_id": "MDQ6VXNlcjIwMDc4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2007892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingoftheknoll", "html_url": "https://github.com/kingoftheknoll", "followers_url": "https://api.github.com/users/kingoftheknoll/followers", "following_url": "https://api.github.com/users/kingoftheknoll/following{/other_user}", "gists_url": "https://api.github.com/users/kingoftheknoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingoftheknoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingoftheknoll/subscriptions", "organizations_url": "https://api.github.com/users/kingoftheknoll/orgs", "repos_url": "https://api.github.com/users/kingoftheknoll/repos", "events_url": "https://api.github.com/users/kingoftheknoll/events{/privacy}", "received_events_url": "https://api.github.com/users/kingoftheknoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-17T17:49:07Z", "updated_at": "2017-05-09T09:56:03Z", "closed_at": "2017-05-09T09:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Google Suite Admin tools allows for Google to be used as an Identity Provider. I'm able to successfully authenticate and get a SAML response back. However, the response xml has `saml2` and `saml2p` xml namespaces on the tags. From what I read this format is allowed but discouraged in the 2.0 spec. [Source](http://www.componentspace.com/Forums/PrintTopic1386.aspx)\r\n\r\nLooking through the project it appears that all xpath selectors explicitly use `saml` and `samlp` namespaces and cannot support the format that google uses. \r\n\r\nHere is a condensed response.\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n<saml2p:Response Destination=\"https://<mydomain.com>/saml/\"\r\n                 ID=\"_5ae2bf4c3ca0049f029c2747fc676160\"\r\n                 InResponseTo=\"ONELOGIN_4aba72b5fe53a808e61200700dd8c9cc37440786\"\r\n                 IssueInstant=\"2017-04-17T15:51:16.076Z\" Version=\"2.0\"\r\n                 xmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\">\r\n    <saml2:Issuer xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\">https://accounts.google.com/o/saml2?idpid</saml2:Issuer>\r\n    <saml2p:Status><saml2p:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/></saml2p:Status>\r\n    <saml2:Assertion ID=\"_3a4c773d07ced002defb661ac1b728c7\" IssueInstant=\"2017-04-17T15:51:16.076Z\"\r\n                     Version=\"2.0\" xmlns:saml2=\"urn:oasis:names:tc:SAML:2.0:assertion\">\r\n        .......\r\n        .......\r\n</saml2p:Response>\r\n\r\n```\r\nHas anyone used this library with Google or do you have suggestions about how I can get around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/188", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/188/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/188/events", "html_url": "https://github.com/onelogin/python-saml/issues/188", "id": 218035312, "node_id": "MDU6SXNzdWUyMTgwMzUzMTI=", "number": 188, "title": "SAML responses with a InResponseTo attribute not rejected when requestId not passed to validate", "user": {"login": "vivianho", "id": 2908189, "node_id": "MDQ6VXNlcjI5MDgxODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2908189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivianho", "html_url": "https://github.com/vivianho", "followers_url": "https://api.github.com/users/vivianho/followers", "following_url": "https://api.github.com/users/vivianho/following{/other_user}", "gists_url": "https://api.github.com/users/vivianho/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivianho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivianho/subscriptions", "organizations_url": "https://api.github.com/users/vivianho/orgs", "repos_url": "https://api.github.com/users/vivianho/repos", "events_url": "https://api.github.com/users/vivianho/events{/privacy}", "received_events_url": "https://api.github.com/users/vivianho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-29T23:05:49Z", "updated_at": "2017-12-21T17:15:16Z", "closed_at": "2017-12-21T17:15:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The InResponseTo validation done here: https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/response.py#L138-L143 does not fail `if in_response_to is not None and request_id is None`.\r\n\r\nCan an option be added for stricter checking, similar to how this issue was resolved? https://github.com/onelogin/java-saml/issues/62\r\n\r\nSpecifically the functionality added in this commit https://github.com/miszobi/java-saml/commit/61904ad4f62e021f5ee79d8d8489c38e77acf5cb should be replicated in this library (\"reject Responses with a InResponseTo if null was provided as an argument to validate (enabled by Saml2Settings.rejectUnsolicitedResponsesWithInResponseTo\").", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/187", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/187/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/187/events", "html_url": "https://github.com/onelogin/python-saml/issues/187", "id": 215783351, "node_id": "MDU6SXNzdWUyMTU3ODMzNTE=", "number": 187, "title": "Strange Behaviour using ADFS as an idp", "user": {"login": "pdomineaux", "id": 9936170, "node_id": "MDQ6VXNlcjk5MzYxNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9936170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdomineaux", "html_url": "https://github.com/pdomineaux", "followers_url": "https://api.github.com/users/pdomineaux/followers", "following_url": "https://api.github.com/users/pdomineaux/following{/other_user}", "gists_url": "https://api.github.com/users/pdomineaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdomineaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdomineaux/subscriptions", "organizations_url": "https://api.github.com/users/pdomineaux/orgs", "repos_url": "https://api.github.com/users/pdomineaux/repos", "events_url": "https://api.github.com/users/pdomineaux/events{/privacy}", "received_events_url": "https://api.github.com/users/pdomineaux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-21T15:40:23Z", "updated_at": "2017-07-22T15:46:20Z", "closed_at": "2017-07-22T15:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nThanks for the auth plugin.\r\n\r\nI've configured my local taiga instance to use the [taiga-contrib-saml-auth](https://github.com/jgiannuzzi/taiga-contrib-saml-auth) to authenticate my users against an ADFS and it works fine if I use the external access.\r\nIf I try to authenticate on the local network, there is an error : \r\n\r\nActivity ID: 00000000-0000-0000-3806-0080010000d2\r\nError time: Tue, 21 Mar 2017 15:37:41 GMT\r\nCookie: enabled\r\nUser agent string: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\r\n\r\nNothing on the taiga logs neither on ADFS.\r\nDo you have any idea to solve my problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/186", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/186/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/186/events", "html_url": "https://github.com/onelogin/python-saml/issues/186", "id": 215697684, "node_id": "MDU6SXNzdWUyMTU2OTc2ODQ=", "number": 186, "title": "python-saml", "user": {"login": "mabahma", "id": 2721178, "node_id": "MDQ6VXNlcjI3MjExNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2721178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mabahma", "html_url": "https://github.com/mabahma", "followers_url": "https://api.github.com/users/mabahma/followers", "following_url": "https://api.github.com/users/mabahma/following{/other_user}", "gists_url": "https://api.github.com/users/mabahma/gists{/gist_id}", "starred_url": "https://api.github.com/users/mabahma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mabahma/subscriptions", "organizations_url": "https://api.github.com/users/mabahma/orgs", "repos_url": "https://api.github.com/users/mabahma/repos", "events_url": "https://api.github.com/users/mabahma/events{/privacy}", "received_events_url": "https://api.github.com/users/mabahma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-21T10:54:04Z", "updated_at": "2017-06-15T09:04:03Z", "closed_at": "2017-04-15T20:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nIs the python-saml usable to connect any python application to and IDP via SAML ?\r\n\r\nI'm looking to connect odoo to shiboleth IDP..\r\n\r\nPossible , or have i tu use OneLogin IDP?\r\n\r\nif yes how should i do it ? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/185", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/185/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/185/events", "html_url": "https://github.com/onelogin/python-saml/issues/185", "id": 213104575, "node_id": "MDU6SXNzdWUyMTMxMDQ1NzU=", "number": 185, "title": "Be able to provide a NameIDFormat to LogoutRequest.", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-09T17:11:53Z", "updated_at": "2017-03-10T23:34:58Z", "closed_at": "2017-03-10T23:34:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As we implemented [on java-saml](https://github.com/onelogin/java-saml/commit/b8a7c92bb798e005170abf03565f4c60886941b1)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/184", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/184/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/184/events", "html_url": "https://github.com/onelogin/python-saml/issues/184", "id": 213104273, "node_id": "MDU6SXNzdWUyMTMxMDQyNzM=", "number": 184, "title": "Be able to provide a NameIDFormat to LogoutRequest.", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-09T17:10:57Z", "updated_at": "2017-03-11T17:50:47Z", "closed_at": "2017-03-11T17:50:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As we implemented [on java-saml](https://github.com/onelogin/java-saml/commit/b8a7c92bb798e005170abf03565f4c60886941b1)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/183", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/183/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/183/events", "html_url": "https://github.com/onelogin/python-saml/issues/183", "id": 211671543, "node_id": "MDU6SXNzdWUyMTE2NzE1NDM=", "number": 183, "title": "Issuer of the Response seems optional in the saml 2 spec", "user": {"login": "jthiard", "id": 2727378, "node_id": "MDQ6VXNlcjI3MjczNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2727378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jthiard", "html_url": "https://github.com/jthiard", "followers_url": "https://api.github.com/users/jthiard/followers", "following_url": "https://api.github.com/users/jthiard/following{/other_user}", "gists_url": "https://api.github.com/users/jthiard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jthiard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jthiard/subscriptions", "organizations_url": "https://api.github.com/users/jthiard/orgs", "repos_url": "https://api.github.com/users/jthiard/repos", "events_url": "https://api.github.com/users/jthiard/events{/privacy}", "received_events_url": "https://api.github.com/users/jthiard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-03T12:08:10Z", "updated_at": "2017-03-09T17:08:26Z", "closed_at": "2017-03-09T17:08:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am building a SP for an IDP wich provides no `<saml:Issuer>` in the response (but a valid `<Issuer>` is given in the assertion).\r\n\r\nThis seems to be valid according the saml core spec found here https://www.oasis-open.org/committees/download.php/35711/sstc-saml-core-errata-2.0-wd-06-diff.pdf section 3.2.2\r\n\r\n> `<saml:Issuer>` **[Optional]**\r\n> Identifies the entity that generated the response message. (For more information on this element, see Section  2.2.5.)\r\n\r\nThe `OneLogin_Saml2_Response` does not validate this response : https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/response.py#L377\r\n\r\nI dont know how to workaround that without monkeypatching or some copy pasta and proxy magic\r\n\r\nSo here my question: will a pull request for a new setting allowing no issuer in the response be accepted ? Or is there a better way to work around this issue ?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/181", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/181/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/181/events", "html_url": "https://github.com/onelogin/python-saml/issues/181", "id": 206808611, "node_id": "MDU6SXNzdWUyMDY4MDg2MTE=", "number": 181, "title": "Support DigestMethod", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-10T14:25:26Z", "updated_at": "2017-03-11T00:20:02Z", "closed_at": "2017-03-11T00:20:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As we do on [php-saml](https://github.com/onelogin/php-saml/issues/191)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/180", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/180/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/180/events", "html_url": "https://github.com/onelogin/python-saml/issues/180", "id": 205293639, "node_id": "MDU6SXNzdWUyMDUyOTM2Mzk=", "number": 180, "title": "Integrating python-saml with an ADFS IDP", "user": {"login": "kowsari", "id": 1079552, "node_id": "MDQ6VXNlcjEwNzk1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1079552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kowsari", "html_url": "https://github.com/kowsari", "followers_url": "https://api.github.com/users/kowsari/followers", "following_url": "https://api.github.com/users/kowsari/following{/other_user}", "gists_url": "https://api.github.com/users/kowsari/gists{/gist_id}", "starred_url": "https://api.github.com/users/kowsari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kowsari/subscriptions", "organizations_url": "https://api.github.com/users/kowsari/orgs", "repos_url": "https://api.github.com/users/kowsari/repos", "events_url": "https://api.github.com/users/kowsari/events{/privacy}", "received_events_url": "https://api.github.com/users/kowsari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-02-03T23:04:09Z", "updated_at": "2019-08-26T18:15:49Z", "closed_at": "2017-03-06T12:36:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI am recent user of python-saml and trying to get it integrated with an ADFS IDP and having a difficult time. Everything seems setup correctly on both sides with the URLS and certificates.\r\n\r\nEven when all the signing options (authnRequestsSigned, wantMessagesSigned and wantAssertionsSigned) are set to false, I am getting a response from the IDP that the response is either:\r\n\r\nThe sign in request is not compliant to the WS-Federation language for web browser clients or the SAML 2.0 protocol WebSSO profile.\r\n\r\nor \r\n\r\nThe verification of the SAML message signature failed.\r\nMessage issuer: https://dev.site.com/api/saml/metadata/\r\nException details:\r\nMSIS1016: Relying party trust 'https://dev.site.com/api/saml/metadata/' indicates that authentication requests sent by this relying party will be signed but no signature present.\r\n\r\nMy advanced_settings are \r\n{\r\n    \"security\": {\r\n        \"nameIdEncrypted\": false,\r\n        \"authnRequestsSigned\": false,\r\n        \"logoutRequestSigned\": false,\r\n        \"logoutResponseSigned\": false,\r\n        \"signMetadata\": false,\r\n        \"wantMessagesSigned\": false,\r\n        \"wantAssertionsSigned\": false,\r\n        \"wantNameId\" : true,\r\n        \"wantNameIdEncrypted\": false,\r\n        \"wantAssertionsEncrypted\": false,\r\n        \"signatureAlgorithm\": \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"\r\n    },\r\n    \"contactPerson\": {\r\n        \"technical\": {\r\n            \"givenName\": \"Site Admin\",\r\n            \"emailAddress\": \"info@site.com\"\r\n        },\r\n        \"support\": {\r\n            \"givenName\": \"Site Support\",\r\n            \"emailAddress\": \"support@site.com\"\r\n        }\r\n    },\r\n    \"organization\": {\r\n        \"en-US\": {\r\n            \"name\": \"Site\",\r\n            \"displayname\": \"Site\",\r\n            \"url\": \"https://site.com\"\r\n        }\r\n    }\r\n}\r\n\r\nI did try the lowercase urlencoding option which didnt make a difference.  Anybody have experience with integrating python-saml with with ADFS? \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/178", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/178/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/178/events", "html_url": "https://github.com/onelogin/python-saml/issues/178", "id": 200885149, "node_id": "MDU6SXNzdWUyMDA4ODUxNDk=", "number": 178, "title": "Cent os: segmentation fault Error", "user": {"login": "yesdeepakverma", "id": 2183474, "node_id": "MDQ6VXNlcjIxODM0NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2183474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yesdeepakverma", "html_url": "https://github.com/yesdeepakverma", "followers_url": "https://api.github.com/users/yesdeepakverma/followers", "following_url": "https://api.github.com/users/yesdeepakverma/following{/other_user}", "gists_url": "https://api.github.com/users/yesdeepakverma/gists{/gist_id}", "starred_url": "https://api.github.com/users/yesdeepakverma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yesdeepakverma/subscriptions", "organizations_url": "https://api.github.com/users/yesdeepakverma/orgs", "repos_url": "https://api.github.com/users/yesdeepakverma/repos", "events_url": "https://api.github.com/users/yesdeepakverma/events{/privacy}", "received_events_url": "https://api.github.com/users/yesdeepakverma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-15T18:28:04Z", "updated_at": "2017-04-16T14:34:30Z", "closed_at": "2017-04-16T14:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "from onelogin.saml2.utils import OneLogin_Saml2_Utils\r\nabove import is giving segmention fault error in cent os machine.\r\nPlease look into this ASAP.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/177", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/177/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/177/events", "html_url": "https://github.com/onelogin/python-saml/issues/177", "id": 199795288, "node_id": "MDU6SXNzdWUxOTk3OTUyODg=", "number": 177, "title": "Failed building wheel for dm.xmlsec.binding", "user": {"login": "McPo", "id": 1295034, "node_id": "MDQ6VXNlcjEyOTUwMzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1295034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McPo", "html_url": "https://github.com/McPo", "followers_url": "https://api.github.com/users/McPo/followers", "following_url": "https://api.github.com/users/McPo/following{/other_user}", "gists_url": "https://api.github.com/users/McPo/gists{/gist_id}", "starred_url": "https://api.github.com/users/McPo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McPo/subscriptions", "organizations_url": "https://api.github.com/users/McPo/orgs", "repos_url": "https://api.github.com/users/McPo/repos", "events_url": "https://api.github.com/users/McPo/events{/privacy}", "received_events_url": "https://api.github.com/users/McPo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-10T11:19:30Z", "updated_at": "2017-10-26T12:54:19Z", "closed_at": "2017-01-10T12:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Appears to be an issue running pip install python-saml.\r\n\r\nIts due to only having the 64-bit libxmlsec1 installed.\r\n\r\nIm running El Capitan [OS X 10.11.6 (15G1212)], the command is being executed inside a virtualenv.\r\nI already had libxmlsec1 installed, as its a dependency for another tool I use (oauth-tools). Although Ive also tried reinstalling via the brew command `reinstall` as well as by uninstalling and reinstalling. I also tried passing the `--universal` to brew, to install the libxmlsec1 32-bit, but no luck.\r\n\r\nI notice that i386 is passed to the build command. Is it reasonable to build the 32-bit on OSX which I believe is only 64-bit?\r\n\r\n`cc -bundle -undefined dynamic_lookup -arch i386 -arch x86_64`\r\n\r\nCheers\r\nEmmet\r\n\r\n\r\n\r\nInteresting Error:\r\n```\r\n ld: warning: ignoring file /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1-openssl.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1-openssl.dylib\r\n    ld: warning: ignoring file /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1.dylib\r\n    ld: file not found: /usr/lib/system/libsystem_symptoms.dylib for architecture i386\r\n```\r\n\r\nFull Error:\r\n```\r\nCollecting defusedxml==0.4.1 (from python-saml)\r\nRequirement already satisfied: setuptools in ./venv/lib/python2.7/site-packages (from dm.xmlsec.binding==1.3.2->python-saml)\r\nRequirement already satisfied: lxml>=3.0 in ./venv/lib/python2.7/site-packages (from dm.xmlsec.binding==1.3.2->python-saml)\r\nBuilding wheels for collected packages: dm.xmlsec.binding\r\n  Running setup.py bdist_wheel for dm.xmlsec.binding ... error\r\n  Complete output from command /Users/mcp/Sources/saltdna-portal/django_api/venv/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/pip-build-wzjKA1/dm.xmlsec.binding/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/tmpqNTs_vpip-wheel- --python-tag cp27:\r\n  /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'test_requires'\r\n    warnings.warn(msg)\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.macosx-10.11-intel-2.7\r\n  creating build/lib.macosx-10.11-intel-2.7/dm\r\n  copying dm/__init__.py -> build/lib.macosx-10.11-intel-2.7/dm\r\n  creating build/lib.macosx-10.11-intel-2.7/dm/xmlsec\r\n  copying dm/xmlsec/__init__.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec\r\n  creating build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  copying dm/xmlsec/binding/__init__.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  copying dm/xmlsec/binding/tests.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  copying dm/xmlsec/binding/tmpl.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  running egg_info\r\n  writing requirements to dm.xmlsec.binding.egg-info/requires.txt\r\n  writing dm.xmlsec.binding.egg-info/PKG-INFO\r\n  writing namespace_packages to dm.xmlsec.binding.egg-info/namespace_packages.txt\r\n  writing top-level names to dm.xmlsec.binding.egg-info/top_level.txt\r\n  writing dependency_links to dm.xmlsec.binding.egg-info/dependency_links.txt\r\n  writing requirements to dm.xmlsec.binding.egg-info/requires.txt\r\n  writing dm.xmlsec.binding.egg-info/PKG-INFO\r\n  writing namespace_packages to dm.xmlsec.binding.egg-info/namespace_packages.txt\r\n  writing top-level names to dm.xmlsec.binding.egg-info/top_level.txt\r\n  writing dependency_links to dm.xmlsec.binding.egg-info/dependency_links.txt\r\n  reading manifest file 'dm.xmlsec.binding.egg-info/SOURCES.txt'\r\n  writing manifest file 'dm.xmlsec.binding.egg-info/SOURCES.txt'\r\n  copying dm/xmlsec/binding/LICENSE.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  copying dm/xmlsec/binding/README.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  copying dm/xmlsec/binding/VERSION.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  copying dm/xmlsec/binding/tests.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n  creating build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/deskey.bin -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt-element-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt1-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt1-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt2-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt2-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt3-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/encrypt3-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/rootcert.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/rsacert.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/rsakey.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/rsapub.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/sign1-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/sign1-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/sign2-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/sign2-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/sign3-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/sign3-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/verify4-bad-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/verify4-bad-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/verify4-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  copying dm/xmlsec/binding/resources/verify4-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n  running build_ext\r\n  building 'dm.xmlsec.binding._xmlsec' extension\r\n  creating build/temp.macosx-10.11-intel-2.7\r\n  creating build/temp.macosx-10.11-intel-2.7/src\r\n  cc -fno-strict-aliasing -fno-common -dynamic -arch i386 -arch x86_64 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -D__XMLSEC_FUNCTION__=__FUNCTION__ -DXMLSEC_NO_SIZE_T=1 -DXMLSEC_NO_GOST=1 -DXMLSEC_NO_XKMS=1 -DXMLSEC_NO_CRYPTO_DYNAMIC_LOADING=1 -DXMLSEC_OPENSSL_100=1 -DXMLSEC_CRYPTO_OPENSSL=1 -DXMLSEC_CRYPTO=openssl -I/Users/mcp/Sources/saltdna-portal/django_api/venv/lib/python2.7/site-packages/lxml -I/Users/mcp/Sources/saltdna-portal/django_api/venv/lib/python2.7/site-packages/lxml/includes -Isrc -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/libxml2 -I/usr/local/Cellar/libxmlsec1/1.2.20_1/include/xmlsec1 -I/usr/include/libxml2 -I/usr/local/opt/openssl/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c src/_xmlsec.c -o build/temp.macosx-10.11-intel-2.7/src/_xmlsec.o\r\n  src/_xmlsec.c:13502:33: warning: unused function '__Pyx_PyIndex_AsSsize_t' [-Wunused-function]\r\n  static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\r\n                                  ^\r\n  src/_xmlsec.c:13511:33: warning: unused function '__Pyx_PyInt_FromSize_t' [-Wunused-function]\r\n  static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {\r\n                                  ^\r\n  src/_xmlsec.c:13525:29: warning: unused function '__Pyx_PyInt_AsSize_t' [-Wunused-function]\r\n  static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {\r\n                              ^\r\n  src/_xmlsec.c:568:32: warning: unused function '__Pyx_GetItemInt_List_Fast' [-Wunused-function]\r\n  static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {\r\n                                 ^\r\n  src/_xmlsec.c:588:32: warning: unused function '__Pyx_GetItemInt_Tuple_Fast' [-Wunused-function]\r\n  static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {\r\n                                 ^\r\n  src/_xmlsec.c:12788:27: warning: unused function '__Pyx_PyInt_AsChar' [-Wunused-function]\r\n  static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {\r\n                            ^\r\n  src/_xmlsec.c:12807:28: warning: unused function '__Pyx_PyInt_AsShort' [-Wunused-function]\r\n  static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {\r\n                             ^\r\n  src/_xmlsec.c:12826:26: warning: unused function '__Pyx_PyInt_AsInt' [-Wunused-function]\r\n  static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {\r\n                           ^\r\n  src/_xmlsec.c:12902:26: warning: unused function '__Pyx_PyInt_AsLongDouble' [-Wunused-function]\r\n  static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {\r\n                           ^\r\n  src/_xmlsec.c:13026:35: warning: function '__Pyx_PyInt_AsLongLong' is not needed and will not be emitted [-Wunneeded-internal-declaration]\r\n  static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {\r\n                                    ^\r\n  10 warnings generated.\r\n  src/_xmlsec.c:2195:15: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]\r\n    __pyx_v_n = __pyx_t_2;\r\n              ~ ^~~~~~~~~\r\n  src/_xmlsec.c:2915:68: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n          __pyx_v_key = xmlSecCryptoAppKeyLoadMemory(__pyx_v_c_data, __pyx_v_c_size, __pyx_v_c_key_data_format, __pyx_v_c_password, NULL, NULL);\r\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~                 ^~~~~~~~~~~~~~\r\n  src/_xmlsec.c:3334:81: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n          __pyx_v_key = xmlSecKeyReadMemory(__pyx_v_key_data->id, __pyx_v_c_data, __pyx_v_c_size);\r\n                        ~~~~~~~~~~~~~~~~~~~                                       ^~~~~~~~~~~~~~\r\n  src/_xmlsec.c:4623:20: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]\r\n    __pyx_v_c_size = __pyx_t_1;\r\n                   ~ ^~~~~~~~~\r\n  src/_xmlsec.c:5676:106: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'unsigned int' [-Wshorten-64-to-32]\r\n    __pyx_v_rv = xmlSecTransformVerify(__pyx_v_ctx->signMethod, ((const xmlSecByte *)((char *)__pyx_t_3)), __pyx_t_4, (&__pyx_v_ctx->transformCtx));\r\n                 ~~~~~~~~~~~~~~~~~~~~~                                                                     ^~~~~~~~~\r\n  src/_xmlsec.c:6013:121: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'unsigned int' [-Wshorten-64-to-32]\r\n    __pyx_v_rv = xmlSecTransformCtxBinaryExecute((&__pyx_v_ctx->transformCtx), ((const xmlSecByte *)((char *)__pyx_t_6)), __pyx_t_7);\r\n                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                          ^~~~~~~~~\r\n  src/_xmlsec.c:6901:106: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n          __pyx_v_rv = xmlSecEncCtxBinaryEncrypt(__pyx_v_self->ctx, __pyx_v_tmpl->_c_node, __pyx_v_c_data, __pyx_v_c_size);\r\n                       ~~~~~~~~~~~~~~~~~~~~~~~~~                                                           ^~~~~~~~~~~~~~\r\n  src/_xmlsec.c:13502:33: warning: unused function '__Pyx_PyIndex_AsSsize_t' [-Wunused-function]\r\n  static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\r\n                                  ^\r\n  src/_xmlsec.c:13511:33: warning: unused function '__Pyx_PyInt_FromSize_t' [-Wunused-function]\r\n  static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {\r\n                                  ^\r\n  src/_xmlsec.c:13525:29: warning: unused function '__Pyx_PyInt_AsSize_t' [-Wunused-function]\r\n  static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {\r\n                              ^\r\n  src/_xmlsec.c:568:32: warning: unused function '__Pyx_GetItemInt_List_Fast' [-Wunused-function]\r\n  static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {\r\n                                 ^\r\n  src/_xmlsec.c:588:32: warning: unused function '__Pyx_GetItemInt_Tuple_Fast' [-Wunused-function]\r\n  static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {\r\n                                 ^\r\n  src/_xmlsec.c:12788:27: warning: unused function '__Pyx_PyInt_AsChar' [-Wunused-function]\r\n  static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {\r\n                            ^\r\n  src/_xmlsec.c:12807:28: warning: unused function '__Pyx_PyInt_AsShort' [-Wunused-function]\r\n  static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {\r\n                             ^\r\n  src/_xmlsec.c:12826:26: warning: unused function '__Pyx_PyInt_AsInt' [-Wunused-function]\r\n  static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {\r\n                           ^\r\n  src/_xmlsec.c:12902:26: warning: unused function '__Pyx_PyInt_AsLongDouble' [-Wunused-function]\r\n  static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {\r\n                           ^\r\n  src/_xmlsec.c:13026:35: warning: function '__Pyx_PyInt_AsLongLong' is not needed and will not be emitted [-Wunneeded-internal-declaration]\r\n  static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {\r\n                                    ^\r\n  17 warnings generated.\r\n  cc -bundle -undefined dynamic_lookup -arch i386 -arch x86_64 -Wl,-F. build/temp.macosx-10.11-intel-2.7/src/_xmlsec.o -L/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/lib -L/usr/local/Cellar/libxmlsec1/1.2.20_1/lib -L/usr/local/opt/openssl/lib -lxml2 -lz -lpthread -licucore -lm -lxmlsec1-openssl -lxmlsec1 -lxslt -lcrypto -ldl -o build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/_xmlsec.so\r\n  ld: warning: ld: warning: ignoring file /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1-openssl.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1-openssl.dylibignoring file /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1.dylib\r\n\r\n  ld: file not found: /usr/lib/system/libsystem_symptoms.dylib for architecture i386\r\n  clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n  error: command 'cc' failed with exit status 1\r\n\r\n  ----------------------------------------\r\n  Failed building wheel for dm.xmlsec.binding\r\n  Running setup.py clean for dm.xmlsec.binding\r\nFailed to build dm.xmlsec.binding\r\nInstalling collected packages: dm.xmlsec.binding, defusedxml, python-saml\r\n  Running setup.py install for dm.xmlsec.binding ... error\r\n    Complete output from command /Users/mcp/Sources/saltdna-portal/django_api/venv/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/pip-build-wzjKA1/dm.xmlsec.binding/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/pip-68cUm3-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/mcp/Sources/saltdna-portal/django_api/venv/include/site/python2.7/dm.xmlsec.binding:\r\n    /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'test_requires'\r\n      warnings.warn(msg)\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.macosx-10.11-intel-2.7\r\n    creating build/lib.macosx-10.11-intel-2.7/dm\r\n    copying dm/__init__.py -> build/lib.macosx-10.11-intel-2.7/dm\r\n    creating build/lib.macosx-10.11-intel-2.7/dm/xmlsec\r\n    copying dm/xmlsec/__init__.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec\r\n    creating build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    copying dm/xmlsec/binding/__init__.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    copying dm/xmlsec/binding/tests.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    copying dm/xmlsec/binding/tmpl.py -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    running egg_info\r\n    writing requirements to dm.xmlsec.binding.egg-info/requires.txt\r\n    writing dm.xmlsec.binding.egg-info/PKG-INFO\r\n    writing namespace_packages to dm.xmlsec.binding.egg-info/namespace_packages.txt\r\n    writing top-level names to dm.xmlsec.binding.egg-info/top_level.txt\r\n    writing dependency_links to dm.xmlsec.binding.egg-info/dependency_links.txt\r\n    writing requirements to dm.xmlsec.binding.egg-info/requires.txt\r\n    writing dm.xmlsec.binding.egg-info/PKG-INFO\r\n    writing namespace_packages to dm.xmlsec.binding.egg-info/namespace_packages.txt\r\n    writing top-level names to dm.xmlsec.binding.egg-info/top_level.txt\r\n    writing dependency_links to dm.xmlsec.binding.egg-info/dependency_links.txt\r\n    reading manifest file 'dm.xmlsec.binding.egg-info/SOURCES.txt'\r\n    writing manifest file 'dm.xmlsec.binding.egg-info/SOURCES.txt'\r\n    copying dm/xmlsec/binding/LICENSE.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    copying dm/xmlsec/binding/README.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    copying dm/xmlsec/binding/VERSION.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    copying dm/xmlsec/binding/tests.txt -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding\r\n    creating build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/deskey.bin -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt-element-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt1-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt1-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt2-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt2-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt3-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/encrypt3-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/rootcert.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/rsacert.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/rsakey.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/rsapub.pem -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/sign1-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/sign1-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/sign2-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/sign2-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/sign3-doc.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/sign3-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/verify4-bad-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/verify4-bad-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/verify4-res.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    copying dm/xmlsec/binding/resources/verify4-tmpl.xml -> build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/resources\r\n    running build_ext\r\n    building 'dm.xmlsec.binding._xmlsec' extension\r\n    creating build/temp.macosx-10.11-intel-2.7\r\n    creating build/temp.macosx-10.11-intel-2.7/src\r\n    cc -fno-strict-aliasing -fno-common -dynamic -arch i386 -arch x86_64 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -D__XMLSEC_FUNCTION__=__FUNCTION__ -DXMLSEC_NO_SIZE_T=1 -DXMLSEC_NO_GOST=1 -DXMLSEC_NO_XKMS=1 -DXMLSEC_NO_CRYPTO_DYNAMIC_LOADING=1 -DXMLSEC_OPENSSL_100=1 -DXMLSEC_CRYPTO_OPENSSL=1 -DXMLSEC_CRYPTO=openssl -I/Users/mcp/Sources/saltdna-portal/django_api/venv/lib/python2.7/site-packages/lxml -I/Users/mcp/Sources/saltdna-portal/django_api/venv/lib/python2.7/site-packages/lxml/includes -Isrc -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/libxml2 -I/usr/local/Cellar/libxmlsec1/1.2.20_1/include/xmlsec1 -I/usr/include/libxml2 -I/usr/local/opt/openssl/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c src/_xmlsec.c -o build/temp.macosx-10.11-intel-2.7/src/_xmlsec.o\r\n    src/_xmlsec.c:13502:33: warning: unused function '__Pyx_PyIndex_AsSsize_t' [-Wunused-function]\r\n    static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\r\n                                    ^\r\n    src/_xmlsec.c:13511:33: warning: unused function '__Pyx_PyInt_FromSize_t' [-Wunused-function]\r\n    static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {\r\n                                    ^\r\n    src/_xmlsec.c:13525:29: warning: unused function '__Pyx_PyInt_AsSize_t' [-Wunused-function]\r\n    static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {\r\n                                ^\r\n    src/_xmlsec.c:568:32: warning: unused function '__Pyx_GetItemInt_List_Fast' [-Wunused-function]\r\n    static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {\r\n                                   ^\r\n    src/_xmlsec.c:588:32: warning: unused function '__Pyx_GetItemInt_Tuple_Fast' [-Wunused-function]\r\n    static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {\r\n                                   ^\r\n    src/_xmlsec.c:12788:27: warning: unused function '__Pyx_PyInt_AsChar' [-Wunused-function]\r\n    static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {\r\n                              ^\r\n    src/_xmlsec.c:12807:28: warning: unused function '__Pyx_PyInt_AsShort' [-Wunused-function]\r\n    static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {\r\n                               ^\r\n    src/_xmlsec.c:12826:26: warning: unused function '__Pyx_PyInt_AsInt' [-Wunused-function]\r\n    static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {\r\n                             ^\r\n    src/_xmlsec.c:12902:26: warning: unused function '__Pyx_PyInt_AsLongDouble' [-Wunused-function]\r\n    static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {\r\n                             ^\r\n    src/_xmlsec.c:13026:35: warning: function '__Pyx_PyInt_AsLongLong' is not needed and will not be emitted [-Wunneeded-internal-declaration]\r\n    static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {\r\n                                      ^\r\n    10 warnings generated.\r\n    src/_xmlsec.c:2195:15: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]\r\n      __pyx_v_n = __pyx_t_2;\r\n                ~ ^~~~~~~~~\r\n    src/_xmlsec.c:2915:68: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n            __pyx_v_key = xmlSecCryptoAppKeyLoadMemory(__pyx_v_c_data, __pyx_v_c_size, __pyx_v_c_key_data_format, __pyx_v_c_password, NULL, NULL);\r\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~                 ^~~~~~~~~~~~~~\r\n    src/_xmlsec.c:3334:81: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n            __pyx_v_key = xmlSecKeyReadMemory(__pyx_v_key_data->id, __pyx_v_c_data, __pyx_v_c_size);\r\n                          ~~~~~~~~~~~~~~~~~~~                                       ^~~~~~~~~~~~~~\r\n    src/_xmlsec.c:4623:20: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]\r\n      __pyx_v_c_size = __pyx_t_1;\r\n                     ~ ^~~~~~~~~\r\n    src/_xmlsec.c:5676:106: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'unsigned int' [-Wshorten-64-to-32]\r\n      __pyx_v_rv = xmlSecTransformVerify(__pyx_v_ctx->signMethod, ((const xmlSecByte *)((char *)__pyx_t_3)), __pyx_t_4, (&__pyx_v_ctx->transformCtx));\r\n                   ~~~~~~~~~~~~~~~~~~~~~                                                                     ^~~~~~~~~\r\n    src/_xmlsec.c:6013:121: warning: implicit conversion loses integer precision: 'Py_ssize_t' (aka 'long') to 'unsigned int' [-Wshorten-64-to-32]\r\n      __pyx_v_rv = xmlSecTransformCtxBinaryExecute((&__pyx_v_ctx->transformCtx), ((const xmlSecByte *)((char *)__pyx_t_6)), __pyx_t_7);\r\n                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                          ^~~~~~~~~\r\n    src/_xmlsec.c:6901:106: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]\r\n            __pyx_v_rv = xmlSecEncCtxBinaryEncrypt(__pyx_v_self->ctx, __pyx_v_tmpl->_c_node, __pyx_v_c_data, __pyx_v_c_size);\r\n                         ~~~~~~~~~~~~~~~~~~~~~~~~~                                                           ^~~~~~~~~~~~~~\r\n    src/_xmlsec.c:13502:33: warning: unused function '__Pyx_PyIndex_AsSsize_t' [-Wunused-function]\r\n    static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\r\n                                    ^\r\n    src/_xmlsec.c:13511:33: warning: unused function '__Pyx_PyInt_FromSize_t' [-Wunused-function]\r\n    static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {\r\n                                    ^\r\n    src/_xmlsec.c:13525:29: warning: unused function '__Pyx_PyInt_AsSize_t' [-Wunused-function]\r\n    static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {\r\n                                ^\r\n    src/_xmlsec.c:568:32: warning: unused function '__Pyx_GetItemInt_List_Fast' [-Wunused-function]\r\n    static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {\r\n                                   ^\r\n    src/_xmlsec.c:588:32: warning: unused function '__Pyx_GetItemInt_Tuple_Fast' [-Wunused-function]\r\n    static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {\r\n                                   ^\r\n    src/_xmlsec.c:12788:27: warning: unused function '__Pyx_PyInt_AsChar' [-Wunused-function]\r\n    static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {\r\n                              ^\r\n    src/_xmlsec.c:12807:28: warning: unused function '__Pyx_PyInt_AsShort' [-Wunused-function]\r\n    static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {\r\n                               ^\r\n    src/_xmlsec.c:12826:26: warning: unused function '__Pyx_PyInt_AsInt' [-Wunused-function]\r\n    static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {\r\n                             ^\r\n    src/_xmlsec.c:12902:26: warning: unused function '__Pyx_PyInt_AsLongDouble' [-Wunused-function]\r\n    static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {\r\n                             ^\r\n    src/_xmlsec.c:13026:35: warning: function '__Pyx_PyInt_AsLongLong' is not needed and will not be emitted [-Wunneeded-internal-declaration]\r\n    static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {\r\n                                      ^\r\n    17 warnings generated.\r\n    cc -bundle -undefined dynamic_lookup -arch i386 -arch x86_64 -Wl,-F. build/temp.macosx-10.11-intel-2.7/src/_xmlsec.o -L/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/lib -L/usr/local/Cellar/libxmlsec1/1.2.20_1/lib -L/usr/local/opt/openssl/lib -lxml2 -lz -lpthread -licucore -lm -lxmlsec1-openssl -lxmlsec1 -lxslt -lcrypto -ldl -o build/lib.macosx-10.11-intel-2.7/dm/xmlsec/binding/_xmlsec.so\r\n    ld: warning: ignoring file /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1-openssl.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1-openssl.dylib\r\n    ld: warning: ignoring file /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/Cellar/libxmlsec1/1.2.20_1/lib/libxmlsec1.dylib\r\n    ld: file not found: /usr/lib/system/libsystem_symptoms.dylib for architecture i386\r\n    clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n    error: command 'cc' failed with exit status 1\r\n\r\n    ----------------------------------------\r\nCommand \"/Users/mcp/Sources/saltdna-portal/django_api/venv/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/pip-build-wzjKA1/dm.xmlsec.binding/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/pip-68cUm3-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/mcp/Sources/saltdna-portal/django_api/venv/include/site/python2.7/dm.xmlsec.binding\" failed with error code 1 in /private/var/folders/8g/v0_f7vtd09x0j2zg8kv2lk9w0000gn/T/pip-build-wzjKA1/dm.xmlsec.binding/\r\n(venv) mcp-air:django_api mcp$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/176", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/176/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/176/events", "html_url": "https://github.com/onelogin/python-saml/issues/176", "id": 199706297, "node_id": "MDU6SXNzdWUxOTk3MDYyOTc=", "number": 176, "title": "Malformed request when logging out using python-saml and Google Apps SAML", "user": {"login": "kowsari", "id": 1079552, "node_id": "MDQ6VXNlcjEwNzk1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1079552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kowsari", "html_url": "https://github.com/kowsari", "followers_url": "https://api.github.com/users/kowsari/followers", "following_url": "https://api.github.com/users/kowsari/following{/other_user}", "gists_url": "https://api.github.com/users/kowsari/gists{/gist_id}", "starred_url": "https://api.github.com/users/kowsari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kowsari/subscriptions", "organizations_url": "https://api.github.com/users/kowsari/orgs", "repos_url": "https://api.github.com/users/kowsari/repos", "events_url": "https://api.github.com/users/kowsari/events{/privacy}", "received_events_url": "https://api.github.com/users/kowsari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-10T01:04:13Z", "updated_at": "2017-01-10T16:22:16Z", "closed_at": "2017-01-10T16:22:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to setyp python-saml to work directly with my google apps account to authenticate google apps users to use our service. At this moment this is just testing the integration of the two and no service is actually running. When logging in everything works correctly and I do get the attributes of the logged in user, but when clicking logout google returns \"Error parsing the request, malformed_request: The SAML request is malformed.\"\r\n\r\nI have tried setting logoutRequestSigned and logoutResponseSigned to true in the advanced settings. I also have setup sp* certs in the certs directory.\r\n\r\nAny help is appreciated.\r\n\r\nMy saml settings are as follows:\r\n\r\n```\r\n{\r\n    \"strict\": true,\r\n    \"debug\": true,\r\n    \"sp\": {\r\n        \"entityId\": \"https://dev1.lasso40.com:9000/metadata/\",\r\n        \"assertionConsumerService\": {\r\n            \"url\": \"https://dev1.lasso40.com:9000/?acs\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://dev1.lasso40.com:9000/?sls\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"NameIDFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\r\n        \"x509cert\": \"\",\r\n        \"privateKey\": \"\"\r\n    },\r\n    \"idp\": {\r\n        \"entityId\": \"https://accounts.google.com/o/saml2?idpid=C035nvg9x\",\r\n        \"singleSignOnService\": {\r\n            \"url\": \"https://accounts.google.com/o/saml2/idp?idpid=C035nvg9x\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"singleLogoutService\": {\r\n            \"url\": \"https://accounts.google.com/o/saml2/idp?idpid=C035nvg9x\",\r\n            \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\"\r\n        },\r\n        \"x509cert\": \"MIIDdDCCAlygAwIBAgIGAVkEtqyOMA0GCSqGSIb3DQEBCwUAMHsxFDASBgNVBAoTC0dvb2dsZSBJbmMuMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MQ8wDQYDVQQDEwZHb29nbGUxGDAWBgNVBAsTD0dvb2dsZSBGb3IgV29yazELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWEwHhcNMTYxMjE1MjI1OTU2WhcNMjExMjE0MjI1OTU2WjB7MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEPMA0GA1UEAxMGR29vZ2xlMRgwFgYDVQQLEw9Hb29nbGUgRm9yIFdvcmsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhCBTivUsCie2twTq5ZsGRa8GeeUrZssYceGQaiQT69FFTr3k8eaPl4zq0PRu0+2gg8Ijw2IsYQhPZxnhf2fnsFTy+qCn6iDKvEYK0hj8WzBFn+i8cm9PFY54WnLW/xqoxHQFjIGU2Z2vfYXD7v1QMBjK/SfPgzrbcvIivh4DOs4oURAvVJF1lrXwZkv8cGLRmGNYtT4iDUJFxjd9SXUeoyTznabktGz/v44tyNm6aTCw4G9g32w3f0kLEp8iKZwnG2gv7n1C2Heg2p5fz6Mzqjm8fw/CRikyPdT36MkCLiQcxqNasWleW1npzok7HRqNmh58mtk17St/vSXuHDQgawIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBLQ8GA/cKbjiK4y0lU8yHBDaDoEaHonYPk6bm05yTQ0fPhE6r0eHXN2i3sBbC/v44RO0E4wCe7Coo6ueWTdPcic1kiWify4e8RXUWicVWKGmGzYSdiHdN6CPpADE9ahTDDNF3TA4xZqHjuec75f16Ug7blq7JkSSazWimtMEj0zxHAbwvHhV+n/RFOg8qBUo9OEPIuWcH2rqTfff3MPuNAgtFNj5FOV9rvD9m+u1+CIqtFDacnnnyAP5T7NxSagpik8VcQRT0dXN33EotKMqpOd/jY/o56BAoWqEphF8RGHcuSlWyfHwyb1TL8FTen64PLBWKZblGR2g9EJE5riPLT\"\r\n    }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/174", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/174/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/174/events", "html_url": "https://github.com/onelogin/python-saml/issues/174", "id": 195083661, "node_id": "MDU6SXNzdWUxOTUwODM2NjE=", "number": 174, "title": "Please release a new version", "user": {"login": "athal7", "id": 467872, "node_id": "MDQ6VXNlcjQ2Nzg3Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/467872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/athal7", "html_url": "https://github.com/athal7", "followers_url": "https://api.github.com/users/athal7/followers", "following_url": "https://api.github.com/users/athal7/following{/other_user}", "gists_url": "https://api.github.com/users/athal7/gists{/gist_id}", "starred_url": "https://api.github.com/users/athal7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/athal7/subscriptions", "organizations_url": "https://api.github.com/users/athal7/orgs", "repos_url": "https://api.github.com/users/athal7/repos", "events_url": "https://api.github.com/users/athal7/events{/privacy}", "received_events_url": "https://api.github.com/users/athal7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-12T20:57:51Z", "updated_at": "2017-01-10T13:58:37Z", "closed_at": "2016-12-13T03:06:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So that I can benefit from https://github.com/onelogin/python-saml/commit/54e5be1d8bb7f769c09e5de6b9f05ad6b6fe7e51\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/170", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/170/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/170/events", "html_url": "https://github.com/onelogin/python-saml/issues/170", "id": 188279289, "node_id": "MDU6SXNzdWUxODgyNzkyODk=", "number": 170, "title": "Error -3 while decompressing data: invalid code lengths set", "user": {"login": "tomalessi", "id": 7795088, "node_id": "MDQ6VXNlcjc3OTUwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7795088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomalessi", "html_url": "https://github.com/tomalessi", "followers_url": "https://api.github.com/users/tomalessi/followers", "following_url": "https://api.github.com/users/tomalessi/following{/other_user}", "gists_url": "https://api.github.com/users/tomalessi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomalessi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomalessi/subscriptions", "organizations_url": "https://api.github.com/users/tomalessi/orgs", "repos_url": "https://api.github.com/users/tomalessi/repos", "events_url": "https://api.github.com/users/tomalessi/events{/privacy}", "received_events_url": "https://api.github.com/users/tomalessi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-09T15:46:29Z", "updated_at": "2016-12-17T12:03:04Z", "closed_at": "2016-12-17T12:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am seeing this error on logout using SLO while calling:\r\n\r\n```\r\ndscb = lambda: request.session.flush()\r\nauth.process_slo(delete_session_cb=dscb)\r\n```\r\n\r\nSeems to be a problem with zlib but I've confirmed that the SAML Response from the IDP is correct when calling the SP single logout service.\r\n\r\nCould this be a problem with base64 encoding, or signature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/169", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/169/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/169/events", "html_url": "https://github.com/onelogin/python-saml/issues/169", "id": 187967253, "node_id": "MDU6SXNzdWUxODc5NjcyNTM=", "number": 169, "title": "Improper signature method", "user": {"login": "taldev-no", "id": 727532, "node_id": "MDQ6VXNlcjcyNzUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/727532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taldev-no", "html_url": "https://github.com/taldev-no", "followers_url": "https://api.github.com/users/taldev-no/followers", "following_url": "https://api.github.com/users/taldev-no/following{/other_user}", "gists_url": "https://api.github.com/users/taldev-no/gists{/gist_id}", "starred_url": "https://api.github.com/users/taldev-no/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taldev-no/subscriptions", "organizations_url": "https://api.github.com/users/taldev-no/orgs", "repos_url": "https://api.github.com/users/taldev-no/repos", "events_url": "https://api.github.com/users/taldev-no/events{/privacy}", "received_events_url": "https://api.github.com/users/taldev-no/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-11-08T11:25:15Z", "updated_at": "2016-11-08T15:18:40Z", "closed_at": "2016-11-08T14:49:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to set up a connection using this library, but for some reason I can't initiate or assert a login.\r\n\r\nOn the ACS endpoint, I only get the following error:\r\n`Error: improper signature algorithm`\r\n\r\nWhich appears to be called by:\r\n`File \"/opt/dev/unicornis/unicore/unicore/saml/views.py\", line 97, in authentication\r\n    return HttpResponseRedirect(auth.login(return_to=return_to, force_authn=True))\r\n  File \"/opt/dev/virtualenv/unicore/lib/python2.7/site-packages/onelogin/saml2/auth.py\", line 304, in login\r\n    parameters['Signature'] = self.build_request_signature(saml_request, parameters['RelayState'], security['signatureAlgorithm'])\r\n  File \"/opt/dev/virtualenv/unicore/lib/python2.7/site-packages/onelogin/saml2/auth.py\", line 394, in build_request_signature\r\n    return self.__build_signature(saml_request, relay_state, 'SAMLRequest', sign_algorithm)\r\n  File \"/opt/dev/virtualenv/unicore/lib/python2.7/site-packages/onelogin/saml2/auth.py\", line 458, in __build_signature\r\n    signature = dsig_ctx.signBinary(str(msg), sign_algorithm_transform)\r\n  File \"_xmlsec.pyx\", line 383, in dm.xmlsec.binding._xmlsec.DSigCtx.signBinary (src/_xmlsec.c:5440)\r\n    \r\n  File \"_xmlsec.pyx\", line 413, in dm.xmlsec.binding._xmlsec.DSigCtx._binary (src/_xmlsec.c:5801)`\r\n\r\nI have set up a connector and configured it, with help from the tutorial. The weird thing is, the last time I set this up, with the same settings, it worked just fine. I just moved my code to a different application and updated the URLs and associated settings. I have of course not changed anything regarding the signature settings, so I don't understand why this error is thrown. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/168", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/168/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/168/events", "html_url": "https://github.com/onelogin/python-saml/issues/168", "id": 186604717, "node_id": "MDU6SXNzdWUxODY2MDQ3MTc=", "number": 168, "title": "Signatures are not verified by default, even in 'strict' mode.", "user": {"login": "jgehrcke", "id": 265630, "node_id": "MDQ6VXNlcjI2NTYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgehrcke", "html_url": "https://github.com/jgehrcke", "followers_url": "https://api.github.com/users/jgehrcke/followers", "following_url": "https://api.github.com/users/jgehrcke/following{/other_user}", "gists_url": "https://api.github.com/users/jgehrcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgehrcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgehrcke/subscriptions", "organizations_url": "https://api.github.com/users/jgehrcke/orgs", "repos_url": "https://api.github.com/users/jgehrcke/repos", "events_url": "https://api.github.com/users/jgehrcke/events{/privacy}", "received_events_url": "https://api.github.com/users/jgehrcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-01T18:08:34Z", "updated_at": "2016-11-02T11:22:57Z", "closed_at": "2016-11-01T22:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "That is what the README says about \"security\":\r\n\r\n> **Security warning**\r\nIn production, the strict parameter MUST be set as \"true\". Otherwise your environment is not secure and will be exposed to attacks.\r\n\r\n\r\nThat _strongly_ suggests that you are good by setting `strict` to True.\r\n\r\nDigging further in the README:\r\n\r\n```\r\n    // If strict is True, then the Python Toolkit will reject unsigned\r\n    // or unencrypted messages if it expects them to be signed or encrypted.\r\n    // Also it will reject the messages if the SAML standard is not strictly\r\n    // followed. Destination, NameId, Conditions ... are validated too.\r\n```\r\n\r\nThe important part really is\r\n> will reject unsigned [...] messages **if it expects** them to be signed or encrypted.\r\n\r\nThe non-obvious bit is now that by default python-saml does not expect them to be signed:\r\n\r\n```\r\n        self.__security.setdefault('wantAssertionsSigned', False)\r\n```\r\n(https://github.com/onelogin/python-saml/blob/54e5be1d8bb7f769c09e5de6b9f05ad6b6fe7e51/src/onelogin/saml2/settings.py#L271)\r\n\r\nEffectively, it is very likely to happen that people read the documentation and assume that enabling strict mode is sufficient for a secure deployment. A the same time, their SAML SP will accept arbitrary assertions, i.e assertions can easily be forged.\r\n\r\nI have seen python-saml deployments that do not verify assertion signatures, where they really better should have.\r\n\r\nI think \r\n* the documentation must be _much_ more clear on the fact that the defaults are _insecure_ or\r\n* the default should change\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/167", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/167/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/167/events", "html_url": "https://github.com/onelogin/python-saml/issues/167", "id": 185032705, "node_id": "MDU6SXNzdWUxODUwMzI3MDU=", "number": 167, "title": "attribute 'isRequired': 'True' is not a valid value of the atomic type 'xs:boolean'", "user": {"login": "pwhamman", "id": 10510422, "node_id": "MDQ6VXNlcjEwNTEwNDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/10510422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwhamman", "html_url": "https://github.com/pwhamman", "followers_url": "https://api.github.com/users/pwhamman/followers", "following_url": "https://api.github.com/users/pwhamman/following{/other_user}", "gists_url": "https://api.github.com/users/pwhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwhamman/subscriptions", "organizations_url": "https://api.github.com/users/pwhamman/orgs", "repos_url": "https://api.github.com/users/pwhamman/repos", "events_url": "https://api.github.com/users/pwhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/pwhamman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-25T06:50:25Z", "updated_at": "2016-10-25T12:08:37Z", "closed_at": "2016-10-25T12:08:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Original issue #136 \n\nIn v2.2.0 I'm receiving this error when specifying the `isRequired` the issue was fixed in v2.1.9 but somehow seems that it got lost.\n\n `attribute 'isRequired': 'True' is not a valid value of the atomic type 'xs:boolean'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/166", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/166/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/166/events", "html_url": "https://github.com/onelogin/python-saml/issues/166", "id": 184923556, "node_id": "MDU6SXNzdWUxODQ5MjM1NTY=", "number": 166, "title": "Signature validation failed.  Everything seems right, though.", "user": {"login": "fingermark", "id": 984414, "node_id": "MDQ6VXNlcjk4NDQxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/984414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fingermark", "html_url": "https://github.com/fingermark", "followers_url": "https://api.github.com/users/fingermark/followers", "following_url": "https://api.github.com/users/fingermark/following{/other_user}", "gists_url": "https://api.github.com/users/fingermark/gists{/gist_id}", "starred_url": "https://api.github.com/users/fingermark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fingermark/subscriptions", "organizations_url": "https://api.github.com/users/fingermark/orgs", "repos_url": "https://api.github.com/users/fingermark/repos", "events_url": "https://api.github.com/users/fingermark/events{/privacy}", "received_events_url": "https://api.github.com/users/fingermark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2016-10-24T18:50:19Z", "updated_at": "2020-02-25T09:25:48Z", "closed_at": "2017-12-17T18:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I upgrade to MacOS the other day and revisisted an old project.  I now get \"Signature validation failed.\"  I tried upgrading to the 2.2.0 release, but get the same thing.  Do you all see anything wrong with this?\r\n\r\nAll values printed from variables defined in `validate_node_sign`\r\n## Cert\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\n...\r\n-----END CERTIFICATE-----\r\n```\r\n## validatecert\r\n\r\n```\r\nFalse\r\n```\r\n## signature_node\r\n\r\n```\r\n<ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:saml2p=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/><ds:SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/><ds:Reference URI=\"#id631044246120230029603131\"><ds:Transforms><ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/><ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"><ec:InclusiveNamespaces xmlns:ec=\"http://www.w3.org/2001/10/xml-exc-c14n#\" PrefixList=\"xs\"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/><ds:DigestValue>...</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>...</ds:SignatureValue><ds:KeyInfo><ds:X509Data><ds:X509Certificate>...</ds:X509Certificate></ds:X509Data></ds:KeyInfo></ds:Signature>\r\n```\r\n## Node verification error:\r\n\r\n```\r\n('verifying failed with return value', -1)\r\n```\r\n\r\n`Signature validation failed. SAML Response rejected`\r\n\r\n```\r\nxmldsig.c:871(xmlSecDSigCtxProcessKeyInfoNode) errno=45\r\nxmldsig.c:565(xmlSecDSigCtxProcessSignatureNode) subject=xmlSecDSigCtxProcessKeyInfoNode\r\nxmldsig.c:366(xmlSecDSigCtxVerify) subject=xmlSecDSigCtxSignatureProcessNode\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/165", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/165/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/165/events", "html_url": "https://github.com/onelogin/python-saml/issues/165", "id": 180883348, "node_id": "MDU6SXNzdWUxODA4ODMzNDg=", "number": 165, "title": "security.wantNameId is never used", "user": {"login": "davinov", "id": 932583, "node_id": "MDQ6VXNlcjkzMjU4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/932583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davinov", "html_url": "https://github.com/davinov", "followers_url": "https://api.github.com/users/davinov/followers", "following_url": "https://api.github.com/users/davinov/following{/other_user}", "gists_url": "https://api.github.com/users/davinov/gists{/gist_id}", "starred_url": "https://api.github.com/users/davinov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davinov/subscriptions", "organizations_url": "https://api.github.com/users/davinov/orgs", "repos_url": "https://api.github.com/users/davinov/repos", "events_url": "https://api.github.com/users/davinov/events{/privacy}", "received_events_url": "https://api.github.com/users/davinov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-04T12:47:16Z", "updated_at": "2016-10-04T14:02:34Z", "closed_at": "2016-10-04T14:02:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello and thanks for providing this awesome python-saml lib!\n\nIn the [README](https://github.com/onelogin/python-saml/blob/master/README.md), a `security.wantNameId` option is documented. However, it's never to be found in the code, and the error `Not NameId found...` is raised when `response.get_nameid()` is called.\n\nI think you can either remove that option from the docs or implement its support, but the actual readme is misleading.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/163", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/163/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/163/events", "html_url": "https://github.com/onelogin/python-saml/issues/163", "id": 178509089, "node_id": "MDU6SXNzdWUxNzg1MDkwODk=", "number": 163, "title": "\"No module named tmpl\" exception- when running under 2.7 ubuntu 12.04 with supervisord", "user": {"login": "gsvitak", "id": 212073, "node_id": "MDQ6VXNlcjIxMjA3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/212073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsvitak", "html_url": "https://github.com/gsvitak", "followers_url": "https://api.github.com/users/gsvitak/followers", "following_url": "https://api.github.com/users/gsvitak/following{/other_user}", "gists_url": "https://api.github.com/users/gsvitak/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsvitak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsvitak/subscriptions", "organizations_url": "https://api.github.com/users/gsvitak/orgs", "repos_url": "https://api.github.com/users/gsvitak/repos", "events_url": "https://api.github.com/users/gsvitak/events{/privacy}", "received_events_url": "https://api.github.com/users/gsvitak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-22T02:58:17Z", "updated_at": "2017-01-11T12:22:23Z", "closed_at": "2017-01-11T12:22:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\n\nAs I have stated in the past, thanks for the great work. \n\nI am using the latest python-saml in production. We have a gunicorn server running under supervisord. When a worker times out or crashes,supervisor attempts to automatically restart the gunicorn worker. The worker restart is the desired behavior.\n\nHowever when the worker attempt to restart, I get the following stack trace and all of the worker crash.\n\n```\n  File \"/home/rbadmin/checkouts/trailhead/python-code/trailhead/model/authentication/logout.py\", line 6, in <module>\n    from onelogin.saml2.auth import OneLogin_Saml2_Auth\n  File \"/home/rbadmin/.virtualenvs/trailhead/local/lib/python2.7/site-packages/onelogin/saml2/auth.py\", line 20, in <module>\n    from onelogin.saml2.settings import OneLogin_Saml2_Settings\n  File \"/home/rbadmin/.virtualenvs/trailhead/local/lib/python2.7/site-packages/onelogin/saml2/settings.py\", line 20, in <module>\n    from onelogin.saml2.metadata import OneLogin_Saml2_Metadata\n  File \"/home/rbadmin/.virtualenvs/trailhead/local/lib/python2.7/site-packages/onelogin/saml2/metadata.py\", line 17, in <module>\n    from onelogin.saml2.utils import OneLogin_Saml2_Utils\n  File \"/home/rbadmin/.virtualenvs/trailhead/local/lib/python2.7/site-packages/onelogin/saml2/utils.py\", line 32, in <module>\n    from dm.xmlsec.binding.tmpl import EncData, Signature\n```\n\nI can also reproduce the error by having the gunicorn server running and then open a python console. If I execute the following, the error occurs as well.\n\n```\nPython 2.7.3 (default, Feb 27 2014, 20:00:17)\n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import dm.xmlsec.binding._xmlsec\n>>> from dm.xmlsec.binding.tmpl import EncData, Signature\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named tmpl\n>>>\n```\n\nIf I shutdown the gunicorn process via supervisord, I have to reinstall python-saml via \n\n`pip install pyth-saml --ignore-installed`\n\nto force the library to work properly. After the reinstall is completed, I can restart the gunicorn workers via supervisor\n\nIn my opinion, I think that the python binding is locked in supervisor process and not allowed to be imported until the process releases the lock.\n\nI have seen similar behavior on Ubuntu 15.04 as well. \n\nBasically I am curious how can I troubleshoot the issue? Do you have any suggestions on to turn on some logging on dm.xmlsec to figure how to fix the issue?\n\nI have asked about this issue in the past but now have more information and wanted to see if you have a suggestion.\n\nThanks\nG\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/162", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/162/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/162/events", "html_url": "https://github.com/onelogin/python-saml/issues/162", "id": 178026461, "node_id": "MDU6SXNzdWUxNzgwMjY0NjE=", "number": 162, "title": "Travis broken (running python 2.7.12)", "user": {"login": "pitbulk", "id": 600897, "node_id": "MDQ6VXNlcjYwMDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/600897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitbulk", "html_url": "https://github.com/pitbulk", "followers_url": "https://api.github.com/users/pitbulk/followers", "following_url": "https://api.github.com/users/pitbulk/following{/other_user}", "gists_url": "https://api.github.com/users/pitbulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitbulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitbulk/subscriptions", "organizations_url": "https://api.github.com/users/pitbulk/orgs", "repos_url": "https://api.github.com/users/pitbulk/repos", "events_url": "https://api.github.com/users/pitbulk/events{/privacy}", "received_events_url": "https://api.github.com/users/pitbulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-20T10:45:12Z", "updated_at": "2017-07-22T15:47:29Z", "closed_at": "2017-07-22T15:47:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At travis, after update from python 2.7.9 to 2.7.12 there is a Segmentation fault:\nhttps://travis-ci.org/onelogin/python-saml/builds/161286181 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/161", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/161/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/161/events", "html_url": "https://github.com/onelogin/python-saml/issues/161", "id": 177260484, "node_id": "MDU6SXNzdWUxNzcyNjA0ODQ=", "number": 161, "title": "Signature validation failed. SAML Response rejected", "user": {"login": "scottwoodall", "id": 620454, "node_id": "MDQ6VXNlcjYyMDQ1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/620454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottwoodall", "html_url": "https://github.com/scottwoodall", "followers_url": "https://api.github.com/users/scottwoodall/followers", "following_url": "https://api.github.com/users/scottwoodall/following{/other_user}", "gists_url": "https://api.github.com/users/scottwoodall/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottwoodall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottwoodall/subscriptions", "organizations_url": "https://api.github.com/users/scottwoodall/orgs", "repos_url": "https://api.github.com/users/scottwoodall/repos", "events_url": "https://api.github.com/users/scottwoodall/events{/privacy}", "received_events_url": "https://api.github.com/users/scottwoodall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-15T19:01:26Z", "updated_at": "2017-04-17T13:18:08Z", "closed_at": "2017-04-16T14:33:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When there are multiple X509 certificates in the IdP the following exception gets thrown:\n\n`Signature validation failed. SAML Response rejected`\n\nIf I change the index value from 0 to 1, it works: `idp_x509_cert = cert_nodes[0].text` [1]\n\nEven if the parsing of the IdP XML handled multiple `cert_nodes`, I don't think the validation of the certificates in `def is_valid()` [2] handles this use case.\n\nWhile I am new to SAML; it's my understanding that multiple X509 certificates is valid so one can deprecate old certificates while simultaneously include the new certificate.\n\nThoughts?\n\n[1] https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/idp_metadata_parser.py#L141\n\n[2] https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/response.py#L215\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/157", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/157/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/157/events", "html_url": "https://github.com/onelogin/python-saml/issues/157", "id": 171000578, "node_id": "MDU6SXNzdWUxNzEwMDA1Nzg=", "number": 157, "title": "RequestedAttribute settings not processed correctly in metadata ", "user": {"login": "rahmanoof", "id": 6134847, "node_id": "MDQ6VXNlcjYxMzQ4NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6134847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahmanoof", "html_url": "https://github.com/rahmanoof", "followers_url": "https://api.github.com/users/rahmanoof/followers", "following_url": "https://api.github.com/users/rahmanoof/following{/other_user}", "gists_url": "https://api.github.com/users/rahmanoof/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahmanoof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahmanoof/subscriptions", "organizations_url": "https://api.github.com/users/rahmanoof/orgs", "repos_url": "https://api.github.com/users/rahmanoof/repos", "events_url": "https://api.github.com/users/rahmanoof/events{/privacy}", "received_events_url": "https://api.github.com/users/rahmanoof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-13T09:03:42Z", "updated_at": "2016-09-20T10:15:17Z", "closed_at": "2016-09-20T10:15:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI ,\nI am trying to generate metadata file with attributeConsumingService settings :\n\n\"attributeConsumingService\": {\n      \"serviceName\": \"user type\",\n      \"requestedAttributes\": [\n        {\n          \"name\": \"userType\",\n          \"isRequired\": false,\n          \"nameFormat\": \"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\",\n          \"attributeValue\": [\"userType\",\"admin\"]\n        }\n      ]\n    },\n\nI get the following error:\nException Value:  \nunsupported format character '<' (0x3c) at index 104\nException Location: /usr/local/lib/python2.7/dist-packages/onelogin/saml2/metadata.py in builder, line 103\n\nand if I set \n\"attributeValue\": \"admin\"\n\nI get the following error:\n\nInvalid dict settings at the file: sp_attributeConsumingService_requestedAttributes_attributeValue_type_invalid\nDjango Version: 1.8.6\nException Type: OneLogin_Saml2_Error\nException Value:  \nInvalid dict settings at the file: sp_attributeConsumingService_requestedAttributes_attributeValue_type_invalid\n\nIs this issue on my settings ? \nthanks for y our time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/156", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/156/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/156/events", "html_url": "https://github.com/onelogin/python-saml/issues/156", "id": 169675132, "node_id": "MDU6SXNzdWUxNjk2NzUxMzI=", "number": 156, "title": "Question:  What to do when OneLogin is SP + IP", "user": {"login": "fingermark", "id": 984414, "node_id": "MDQ6VXNlcjk4NDQxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/984414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fingermark", "html_url": "https://github.com/fingermark", "followers_url": "https://api.github.com/users/fingermark/followers", "following_url": "https://api.github.com/users/fingermark/following{/other_user}", "gists_url": "https://api.github.com/users/fingermark/gists{/gist_id}", "starred_url": "https://api.github.com/users/fingermark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fingermark/subscriptions", "organizations_url": "https://api.github.com/users/fingermark/orgs", "repos_url": "https://api.github.com/users/fingermark/repos", "events_url": "https://api.github.com/users/fingermark/events{/privacy}", "received_events_url": "https://api.github.com/users/fingermark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-05T19:04:59Z", "updated_at": "2016-09-19T22:45:51Z", "closed_at": "2016-09-19T22:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have three applications that need to support Single Sign-on and we are looking into SAML.  It'd probably be easiest to just use OneLogin as a Service Provider and Identity Provider -- this makes sense, right?  All the demos I see are for creating a SP.  If I use OneLogin as my SP + IP, then these applications wouldn't be SPs, right?  How would I implement SSO via SAML using python-saml, then?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/154", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/154/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/154/events", "html_url": "https://github.com/onelogin/python-saml/issues/154", "id": 167691379, "node_id": "MDU6SXNzdWUxNjc2OTEzNzk=", "number": 154, "title": "isodate dep", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-26T19:30:35Z", "updated_at": "2016-07-27T20:41:53Z", "closed_at": "2016-07-27T08:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs there any way we can relax the dependency on isodate. Perhaps to isodate >=0.5.0\n\nThanks\n\nCarlos\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/153", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/153/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/153/events", "html_url": "https://github.com/onelogin/python-saml/issues/153", "id": 166339893, "node_id": "MDU6SXNzdWUxNjYzMzk4OTM=", "number": 153, "title": "Support for embedded signatures in LogoutRequest", "user": {"login": "sbc100", "id": 515813, "node_id": "MDQ6VXNlcjUxNTgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/515813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbc100", "html_url": "https://github.com/sbc100", "followers_url": "https://api.github.com/users/sbc100/followers", "following_url": "https://api.github.com/users/sbc100/following{/other_user}", "gists_url": "https://api.github.com/users/sbc100/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbc100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbc100/subscriptions", "organizations_url": "https://api.github.com/users/sbc100/orgs", "repos_url": "https://api.github.com/users/sbc100/repos", "events_url": "https://api.github.com/users/sbc100/events{/privacy}", "received_events_url": "https://api.github.com/users/sbc100/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-19T14:04:58Z", "updated_at": "2016-09-19T22:50:02Z", "closed_at": "2016-09-19T22:50:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I can tell there is no support for embedded signature.\n\nIn the ruby-saml library there is an `embed_sign` option that does this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/148", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/148/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/148/events", "html_url": "https://github.com/onelogin/python-saml/issues/148", "id": 159847065, "node_id": "MDU6SXNzdWUxNTk4NDcwNjU=", "number": 148, "title": "Trying to use add_sign adds new line characters in embedded signature", "user": {"login": "gsvitak", "id": 212073, "node_id": "MDQ6VXNlcjIxMjA3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/212073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsvitak", "html_url": "https://github.com/gsvitak", "followers_url": "https://api.github.com/users/gsvitak/followers", "following_url": "https://api.github.com/users/gsvitak/following{/other_user}", "gists_url": "https://api.github.com/users/gsvitak/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsvitak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsvitak/subscriptions", "organizations_url": "https://api.github.com/users/gsvitak/orgs", "repos_url": "https://api.github.com/users/gsvitak/repos", "events_url": "https://api.github.com/users/gsvitak/events{/privacy}", "received_events_url": "https://api.github.com/users/gsvitak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-12T20:52:57Z", "updated_at": "2016-07-07T00:47:50Z", "closed_at": "2016-07-07T00:46:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI was noticed in https://github.com/onelogin/python-saml/pull/78 that the signature was not using the signature api. I am trying to use the OneLogin_Saml2_Utils.add_sign method to embed the signature in the AuthnRequest for the HTTP-POST binding. The method works great but it appears to add new lines/carriage returns to the signature value. \n\nBased on the HTTP-POST sample (https://www.samltool.com/generic_sso_req.php), I think the  new lines/carriage returns will cause issues with the IDP.  \n\nCan you please confirm if the extra characters will cause an issue? Also, can you please offer a suggestion on how to eliminate the characters?\n\nI have validated my SP cert and private key are formatted properly by stepping through the constructor of OneLogin_Saml2_Settings\n\n```\nself.format_sp_cert()\nself.format_sp_key()\n```\n\nThanks for the help in advance.\nGreg\n\n```\n<ds:SignatureValue>R/+/4XFlWhEptIXukn5hkkalFimlutchfYlEoVMhTWd+QlId818h1CiplPSlUnGZ\n         Eor55SNaXdn8vdyDv54MmYkMJRW1+kp+/P7HijVWaCisR5hXghZnazLXWkFJOyuH\n         k2MQCT7ZIe4EDmsRZterDfRlcpqdlNfWJkXKq07EmuqgiPF6t8WtVBxrEZ/Pcu3+\n         GY8K4+p0KgJp3ocr985+Zbyo9jtepO4+xRjyEfL3CqfHLR6+Xa91A1DH2oAVJTZZ\n         HCC2iy30zRqGACoHHTd2mEcyG3i5n456W3LEYE/xNeVu3bL3/EdRNUP+gcyLGL9f STDwaxGbuJx00cjtT8bKjQ==</ds:SignatureValue> \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/147", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/147/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/147/events", "html_url": "https://github.com/onelogin/python-saml/issues/147", "id": 159782476, "node_id": "MDU6SXNzdWUxNTk3ODI0NzY=", "number": 147, "title": "Support to configure the DigestMethod attribute of a signed AuthnRequest", "user": {"login": "gsvitak", "id": 212073, "node_id": "MDQ6VXNlcjIxMjA3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/212073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsvitak", "html_url": "https://github.com/gsvitak", "followers_url": "https://api.github.com/users/gsvitak/followers", "following_url": "https://api.github.com/users/gsvitak/following{/other_user}", "gists_url": "https://api.github.com/users/gsvitak/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsvitak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsvitak/subscriptions", "organizations_url": "https://api.github.com/users/gsvitak/orgs", "repos_url": "https://api.github.com/users/gsvitak/repos", "events_url": "https://api.github.com/users/gsvitak/events{/privacy}", "received_events_url": "https://api.github.com/users/gsvitak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-11T16:55:57Z", "updated_at": "2016-09-19T22:46:16Z", "closed_at": "2016-09-19T22:46:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nDoes the toolkit currently support the ability to configure the DigestMethod of a signed request? I am trying to use the library with an HTTP-Post SSO binding for an SP initiated flow.  \n\nIt appears that the only current support is sha1 and it is hard coded.\n\n`<ds:DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/>`\n\nI would love to be able to configure the security settings json for DigestMethod similar to the Signature settings so we could allow for the following\n\n`<ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>`\n\nAny ideas on how to make this work? I am willing to work on PR but not sure how much work it would be or if the PR would be useful to others.\n\nThanks\nGreg\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/146", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/146/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/146/events", "html_url": "https://github.com/onelogin/python-saml/issues/146", "id": 159782206, "node_id": "MDU6SXNzdWUxNTk3ODIyMDY=", "number": 146, "title": "Support for singleSignOnService SSO HTTP-POST binding", "user": {"login": "gsvitak", "id": 212073, "node_id": "MDQ6VXNlcjIxMjA3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/212073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsvitak", "html_url": "https://github.com/gsvitak", "followers_url": "https://api.github.com/users/gsvitak/followers", "following_url": "https://api.github.com/users/gsvitak/following{/other_user}", "gists_url": "https://api.github.com/users/gsvitak/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsvitak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsvitak/subscriptions", "organizations_url": "https://api.github.com/users/gsvitak/orgs", "repos_url": "https://api.github.com/users/gsvitak/repos", "events_url": "https://api.github.com/users/gsvitak/events{/privacy}", "received_events_url": "https://api.github.com/users/gsvitak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-11T16:49:38Z", "updated_at": "2016-09-19T22:47:50Z", "closed_at": "2016-09-19T22:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI have an IDP that only supports the urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST for the singleSignOnService to initiate the SP login flow.\n\nIn looking at the code, it appears the library is designed to work with HTTP-Redirect only. Can you please confirm that HTTP-Redirect is the only currently supported binding?\n\nAlso, I am curious if the auth.login() method currently URLEncodes the SAMLRequest value? I am trying to use the results of this method to include in an xHTML form to post the SAMLRequest value to the IDP. \n\n\"singleSignOnService\": {\n                    \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\",\n                    \"url\": \"blah\"\n                }\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/145", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/145/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/145/events", "html_url": "https://github.com/onelogin/python-saml/issues/145", "id": 157064193, "node_id": "MDU6SXNzdWUxNTcwNjQxOTM=", "number": 145, "title": "Make python-saml Python 3 and 2 compatible", "user": {"login": "Brachi", "id": 6393834, "node_id": "MDQ6VXNlcjYzOTM4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6393834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Brachi", "html_url": "https://github.com/Brachi", "followers_url": "https://api.github.com/users/Brachi/followers", "following_url": "https://api.github.com/users/Brachi/following{/other_user}", "gists_url": "https://api.github.com/users/Brachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Brachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Brachi/subscriptions", "organizations_url": "https://api.github.com/users/Brachi/orgs", "repos_url": "https://api.github.com/users/Brachi/repos", "events_url": "https://api.github.com/users/Brachi/events{/privacy}", "received_events_url": "https://api.github.com/users/Brachi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-05-26T19:49:50Z", "updated_at": "2018-03-06T20:46:00Z", "closed_at": "2016-09-19T22:49:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed there's another repo for maintaining python3 compatibility. Is there a specific reason why that was done instead of trying to make python-saml both 2 and 3 compatible? I ask because I'm willing to do the effort to merge them into one repo, using six, like most libs/frameworks.\nBenefits are plenty, but mainly is maintainability.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/143", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/143/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/143/events", "html_url": "https://github.com/onelogin/python-saml/issues/143", "id": 156984397, "node_id": "MDU6SXNzdWUxNTY5ODQzOTc=", "number": 143, "title": "READMEs suggest wrong cert name", "user": {"login": "jalan", "id": 305841, "node_id": "MDQ6VXNlcjMwNTg0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/305841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jalan", "html_url": "https://github.com/jalan", "followers_url": "https://api.github.com/users/jalan/followers", "following_url": "https://api.github.com/users/jalan/following{/other_user}", "gists_url": "https://api.github.com/users/jalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jalan/subscriptions", "organizations_url": "https://api.github.com/users/jalan/orgs", "repos_url": "https://api.github.com/users/jalan/repos", "events_url": "https://api.github.com/users/jalan/events{/privacy}", "received_events_url": "https://api.github.com/users/jalan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-26T13:32:09Z", "updated_at": "2016-05-27T20:31:23Z", "closed_at": "2016-05-27T20:31:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `saml/certs/README` files in the demos have\n\n```\n * sp.cert  Public cert\n```\n\nBut the code looks for `sp.crt`, not `sp.cert`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/140", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/140/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/140/events", "html_url": "https://github.com/onelogin/python-saml/issues/140", "id": 156517936, "node_id": "MDU6SXNzdWUxNTY1MTc5MzY=", "number": 140, "title": "Proccess locks when use OneLogin_Saml2_Response.get_nameid()", "user": {"login": "sariogonfer", "id": 5123122, "node_id": "MDQ6VXNlcjUxMjMxMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5123122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sariogonfer", "html_url": "https://github.com/sariogonfer", "followers_url": "https://api.github.com/users/sariogonfer/followers", "following_url": "https://api.github.com/users/sariogonfer/following{/other_user}", "gists_url": "https://api.github.com/users/sariogonfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/sariogonfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sariogonfer/subscriptions", "organizations_url": "https://api.github.com/users/sariogonfer/orgs", "repos_url": "https://api.github.com/users/sariogonfer/repos", "events_url": "https://api.github.com/users/sariogonfer/events{/privacy}", "received_events_url": "https://api.github.com/users/sariogonfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-24T14:10:18Z", "updated_at": "2016-09-19T22:46:30Z", "closed_at": "2016-09-19T22:46:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone, \n\nFirst, i would like to apologise for my english. My application use this library to authenticate the users. Sometimes, OneLogin_Saml2_Response.get_nameid() function is blocked and doesn't return anything. Its strange because if i debug with pdb, and run this function with the same parameters, usually the function works good, but sometimes not. In order to avoid this situation, i use a timeout of 3 seconds. If function doesn't respond, i run it again. Its strage becouse if first running fail, the second one works. There is some reason for this??\n\nP.D.: I use Django framework too.\n\nThanks, \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/139", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/139/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/139/events", "html_url": "https://github.com/onelogin/python-saml/issues/139", "id": 155760749, "node_id": "MDU6SXNzdWUxNTU3NjA3NDk=", "number": 139, "title": "samlp:LogoutResponse signature verification fails with ADFS", "user": {"login": "m6a-UdS", "id": 6933233, "node_id": "MDQ6VXNlcjY5MzMyMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6933233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m6a-UdS", "html_url": "https://github.com/m6a-UdS", "followers_url": "https://api.github.com/users/m6a-UdS/followers", "following_url": "https://api.github.com/users/m6a-UdS/following{/other_user}", "gists_url": "https://api.github.com/users/m6a-UdS/gists{/gist_id}", "starred_url": "https://api.github.com/users/m6a-UdS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m6a-UdS/subscriptions", "organizations_url": "https://api.github.com/users/m6a-UdS/orgs", "repos_url": "https://api.github.com/users/m6a-UdS/repos", "events_url": "https://api.github.com/users/m6a-UdS/events{/privacy}", "received_events_url": "https://api.github.com/users/m6a-UdS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-05-19T15:08:00Z", "updated_at": "2016-06-06T20:08:41Z", "closed_at": "2016-06-03T21:50:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nI have an issue with my ADFS infrastructure: When I try to use the Single Sign-Out functionality of the python-saml library, I get an error saying that `'Signature validation failed. Logout Response rejected'`.\n\nI don't think it's a certificate issue because the login ( `samlp:AuthnRequest` ) works well and stops working (as expected) if I set a wrong certificate.\n\nThe StatusCode I get from the server is `<samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/>` so my guess is that the issue is really on the SP side.\n\nThe binding is set to `Redirect` on both SP and IDP sides.\n\nHere is a sample of a logout request/response:\n\n```\n<samlp:LogoutRequest ID=\"ONELOGIN_xyzxyz\" Version=\"2.0\" IssueInstant=\"2016-05-18T18:58:23Z\" Destination=\"https://ad.corp.company.com/adfs/ls\">\n<saml:Issuer>https://app.sp.io/saml2/metadata/</saml:Issuer>\n<saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\">user@company.com</saml:NameID>\n<samlp:SessionIndex>_xyz-xyz-xyz</samlp:SessionIndex>\n</samlp:LogoutRequest>\n```\n\n```\n<samlp:LogoutResponse ID=\"_xyz-xyz-xyz\" Version=\"2.0\" IssueInstant=\"2016-05-18T18:58:23.687Z\" Destination=\"https://app.sp.io/saml2/sls/\" Consent=\"urn:oasis:names:tc:SAML:2.0:consent:unspecified\" InResponseTo=\"ONELOGIN_xyzxyz\">\n<Issuer>http://ad.corp.company.com/adfs/services/trust</Issuer>\n<samlp:Status>\n<samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/>\n</samlp:Status>\n</samlp:LogoutResponse>\n```\n\nWith other query parameters:\n\n```\n*SAMLResponse:*fZLNasMwEIR...\n*RelayState:*https://app.sp.io:8000/logout/\n*Signature:*oAI7sHX6jdCio...\n*SigAlg:*http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\n```\n\nI also tried with `http://www.w3.org/2000/09/xmldsig#sha1` without success. Any idea why the SLS signature verification would fail?\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/136", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/136/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/136/events", "html_url": "https://github.com/onelogin/python-saml/issues/136", "id": 155112271, "node_id": "MDU6SXNzdWUxNTUxMTIyNzE=", "number": 136, "title": "Invalid \"True\" attribute value in XML", "user": {"login": "fxt", "id": 753110, "node_id": "MDQ6VXNlcjc1MzExMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/753110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxt", "html_url": "https://github.com/fxt", "followers_url": "https://api.github.com/users/fxt/followers", "following_url": "https://api.github.com/users/fxt/following{/other_user}", "gists_url": "https://api.github.com/users/fxt/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxt/subscriptions", "organizations_url": "https://api.github.com/users/fxt/orgs", "repos_url": "https://api.github.com/users/fxt/repos", "events_url": "https://api.github.com/users/fxt/events{/privacy}", "received_events_url": "https://api.github.com/users/fxt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-16T20:17:49Z", "updated_at": "2016-05-17T12:44:23Z", "closed_at": "2016-05-17T12:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "metadata.py: line 97, should be\nreq_attr_isrequired_str = \" isRequired=\\\"%s\\\"\" % 'true' if req_attribs['isRequired'] else 'false'\notherwise, it sets isRequired=\"True\" and the package complains:\n\nErrors validating the metadata:\n\nElement '{urn:oasis:names:tc:SAML:2.0:metadata}RequestedAttribute', attribute 'isRequired': 'True' is not a valid value of the atomic type 'xs:boolean'.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/135", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/135/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/135/events", "html_url": "https://github.com/onelogin/python-saml/issues/135", "id": 155111887, "node_id": "MDU6SXNzdWUxNTUxMTE4ODc=", "number": 135, "title": "Invalid XML", "user": {"login": "fxt", "id": 753110, "node_id": "MDQ6VXNlcjc1MzExMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/753110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxt", "html_url": "https://github.com/fxt", "followers_url": "https://api.github.com/users/fxt/followers", "following_url": "https://api.github.com/users/fxt/following{/other_user}", "gists_url": "https://api.github.com/users/fxt/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxt/subscriptions", "organizations_url": "https://api.github.com/users/fxt/orgs", "repos_url": "https://api.github.com/users/fxt/repos", "events_url": "https://api.github.com/users/fxt/events{/privacy}", "received_events_url": "https://api.github.com/users/fxt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-16T20:15:38Z", "updated_at": "2016-05-17T11:46:32Z", "closed_at": "2016-05-17T11:46:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "metadata.py: line 90 outputs '>' as an element terminator; it should output '/>'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/134", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/134/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/134/events", "html_url": "https://github.com/onelogin/python-saml/issues/134", "id": 154655130, "node_id": "MDU6SXNzdWUxNTQ2NTUxMzA=", "number": 134, "title": "The default NameID settings in the demo applications seem to be incorrect", "user": {"login": "nickrmc83", "id": 1595216, "node_id": "MDQ6VXNlcjE1OTUyMTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1595216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickrmc83", "html_url": "https://github.com/nickrmc83", "followers_url": "https://api.github.com/users/nickrmc83/followers", "following_url": "https://api.github.com/users/nickrmc83/following{/other_user}", "gists_url": "https://api.github.com/users/nickrmc83/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickrmc83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickrmc83/subscriptions", "organizations_url": "https://api.github.com/users/nickrmc83/orgs", "repos_url": "https://api.github.com/users/nickrmc83/repos", "events_url": "https://api.github.com/users/nickrmc83/events{/privacy}", "received_events_url": "https://api.github.com/users/nickrmc83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-13T08:02:37Z", "updated_at": "2016-05-14T17:27:37Z", "closed_at": "2016-05-14T17:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default NameID settings in the demo applications seem to be incorrect. They are set by default to be:\n\"NameIDFormat\" : \"urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified\"\n\nurn:oasis:names:tc:SAML:2.0:nameid-format:unspecified is not defined in section 8 of http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf. Perhaps the default should be urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified?\n\nThe result of the above is that some IdP service fail. An example of this is Shibboleth.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/130", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/130/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/130/events", "html_url": "https://github.com/onelogin/python-saml/issues/130", "id": 147802528, "node_id": "MDU6SXNzdWUxNDc4MDI1Mjg=", "number": 130, "title": "Changes to SAML settings to support WS-Federation/ Active Directory", "user": {"login": "sandeep048", "id": 500899, "node_id": "MDQ6VXNlcjUwMDg5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/500899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandeep048", "html_url": "https://github.com/sandeep048", "followers_url": "https://api.github.com/users/sandeep048/followers", "following_url": "https://api.github.com/users/sandeep048/following{/other_user}", "gists_url": "https://api.github.com/users/sandeep048/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandeep048/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandeep048/subscriptions", "organizations_url": "https://api.github.com/users/sandeep048/orgs", "repos_url": "https://api.github.com/users/sandeep048/repos", "events_url": "https://api.github.com/users/sandeep048/events{/privacy}", "received_events_url": "https://api.github.com/users/sandeep048/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-12T16:18:22Z", "updated_at": "2016-04-24T09:06:19Z", "closed_at": "2016-04-24T09:06:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to find out if python-saml library works out of the box without any changes with the Microsoft STS(Security Token Service).\n\nI propose the following patch to this library which uses additional flags to the SAML settings file.\nPull Request: https://github.com/onelogin/python-saml/pull/129. Kindly review this diff. Also if there is a simpler/better way of doing it please let us know.\n\nThanks & Regards,\nSandeep\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/128", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/128/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/128/events", "html_url": "https://github.com/onelogin/python-saml/issues/128", "id": 147724379, "node_id": "MDU6SXNzdWUxNDc3MjQzNzk=", "number": 128, "title": "vccccccccvfbgv                                                                                                         bfvbbbt55t5t5vvbbyy", "user": {"login": "sandeep048", "id": 500899, "node_id": "MDQ6VXNlcjUwMDg5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/500899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandeep048", "html_url": "https://github.com/sandeep048", "followers_url": "https://api.github.com/users/sandeep048/followers", "following_url": "https://api.github.com/users/sandeep048/following{/other_user}", "gists_url": "https://api.github.com/users/sandeep048/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandeep048/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandeep048/subscriptions", "organizations_url": "https://api.github.com/users/sandeep048/orgs", "repos_url": "https://api.github.com/users/sandeep048/repos", "events_url": "https://api.github.com/users/sandeep048/events{/privacy}", "received_events_url": "https://api.github.com/users/sandeep048/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-12T11:48:32Z", "updated_at": "2016-04-12T11:52:53Z", "closed_at": "2016-04-12T11:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/127", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/127/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/127/events", "html_url": "https://github.com/onelogin/python-saml/issues/127", "id": 147716715, "node_id": "MDU6SXNzdWUxNDc3MTY3MTU=", "number": 127, "title": "User defined variables", "user": {"login": "sandeep048", "id": 500899, "node_id": "MDQ6VXNlcjUwMDg5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/500899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandeep048", "html_url": "https://github.com/sandeep048", "followers_url": "https://api.github.com/users/sandeep048/followers", "following_url": "https://api.github.com/users/sandeep048/following{/other_user}", "gists_url": "https://api.github.com/users/sandeep048/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandeep048/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandeep048/subscriptions", "organizations_url": "https://api.github.com/users/sandeep048/orgs", "repos_url": "https://api.github.com/users/sandeep048/repos", "events_url": "https://api.github.com/users/sandeep048/events{/privacy}", "received_events_url": "https://api.github.com/users/sandeep048/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-12T11:24:24Z", "updated_at": "2016-04-12T12:04:27Z", "closed_at": "2016-04-12T11:43:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we use user defined variables either created manually or sourced from environment in the settings file. This setting will be very useful to dynamically assign variables like <sp_domain> based on staging, production, dev environments etc.\nExample from Packer Documentation: https://www.packer.io/docs/templates/user-variables.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/125", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/125/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/125/events", "html_url": "https://github.com/onelogin/python-saml/issues/125", "id": 145828597, "node_id": "MDU6SXNzdWUxNDU4Mjg1OTc=", "number": 125, "title": "cert in authn request?", "user": {"login": "jimmyislive", "id": 1844488, "node_id": "MDQ6VXNlcjE4NDQ0ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1844488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmyislive", "html_url": "https://github.com/jimmyislive", "followers_url": "https://api.github.com/users/jimmyislive/followers", "following_url": "https://api.github.com/users/jimmyislive/following{/other_user}", "gists_url": "https://api.github.com/users/jimmyislive/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmyislive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmyislive/subscriptions", "organizations_url": "https://api.github.com/users/jimmyislive/orgs", "repos_url": "https://api.github.com/users/jimmyislive/repos", "events_url": "https://api.github.com/users/jimmyislive/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmyislive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-04T23:02:31Z", "updated_at": "2016-04-15T11:21:05Z", "closed_at": "2016-04-15T11:21:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to include the x509 cert in the authn saml request ?\n\nRight now it contains the parms SAMLRequest, Signature, RelayState\n\nIn the response from the IdP, the cert is included in the response so I was wondering if the same can be done for the request.\n\nThis would make life easier if we cycle SP certs on client end.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/124", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/124/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/124/events", "html_url": "https://github.com/onelogin/python-saml/issues/124", "id": 145793349, "node_id": "MDU6SXNzdWUxNDU3OTMzNDk=", "number": 124, "title": "cert in authn request?", "user": {"login": "jimmyislive", "id": 1844488, "node_id": "MDQ6VXNlcjE4NDQ0ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1844488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmyislive", "html_url": "https://github.com/jimmyislive", "followers_url": "https://api.github.com/users/jimmyislive/followers", "following_url": "https://api.github.com/users/jimmyislive/following{/other_user}", "gists_url": "https://api.github.com/users/jimmyislive/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmyislive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmyislive/subscriptions", "organizations_url": "https://api.github.com/users/jimmyislive/orgs", "repos_url": "https://api.github.com/users/jimmyislive/repos", "events_url": "https://api.github.com/users/jimmyislive/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmyislive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-04T20:22:27Z", "updated_at": "2016-04-04T20:39:45Z", "closed_at": "2016-04-04T20:39:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to include the x509 cert in the authn saml request ?\n\nRight now it contains the parms SAMLRequest, Signature, RelayState\n\nIn the response from the IdP, the cert is included in the response so I was wondering if the same can be done for the request. \n\nThis would make life easier if we cycle SP certs on client end.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/122", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/122/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/122/events", "html_url": "https://github.com/onelogin/python-saml/issues/122", "id": 144824133, "node_id": "MDU6SXNzdWUxNDQ4MjQxMzM=", "number": 122, "title": "Why use real private class field?", "user": {"login": "sunmoonone", "id": 3196473, "node_id": "MDQ6VXNlcjMxOTY0NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3196473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunmoonone", "html_url": "https://github.com/sunmoonone", "followers_url": "https://api.github.com/users/sunmoonone/followers", "following_url": "https://api.github.com/users/sunmoonone/following{/other_user}", "gists_url": "https://api.github.com/users/sunmoonone/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunmoonone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunmoonone/subscriptions", "organizations_url": "https://api.github.com/users/sunmoonone/orgs", "repos_url": "https://api.github.com/users/sunmoonone/repos", "events_url": "https://api.github.com/users/sunmoonone/events{/privacy}", "received_events_url": "https://api.github.com/users/sunmoonone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-03-31T08:22:05Z", "updated_at": "2016-04-07T09:29:19Z", "closed_at": "2016-04-07T09:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to implement a Post sso request to my IdP service, but \nclass `OneLogin_Saml2_Auth`, `OneLogin_Saml2_Authn_Request` etc. declare private field by using two underscore `__`, which makes impossible to override methods.\n\nI recommend use one underscore `_` to declare private field conventionaly\n\nplease check pull request: #123 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/121", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/121/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/121/events", "html_url": "https://github.com/onelogin/python-saml/issues/121", "id": 141960871, "node_id": "MDU6SXNzdWUxNDE5NjA4NzE=", "number": 121, "title": "sp_validation_only flag not passed into the OneLogin_Saml2_Settings constructor", "user": {"login": "jimmyislive", "id": 1844488, "node_id": "MDQ6VXNlcjE4NDQ0ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1844488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmyislive", "html_url": "https://github.com/jimmyislive", "followers_url": "https://api.github.com/users/jimmyislive/followers", "following_url": "https://api.github.com/users/jimmyislive/following{/other_user}", "gists_url": "https://api.github.com/users/jimmyislive/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmyislive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmyislive/subscriptions", "organizations_url": "https://api.github.com/users/jimmyislive/orgs", "repos_url": "https://api.github.com/users/jimmyislive/repos", "events_url": "https://api.github.com/users/jimmyislive/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmyislive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-18T19:42:34Z", "updated_at": "2016-04-04T11:34:20Z", "closed_at": "2016-04-04T11:25:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to create a OneLogin_Saml2_Auth object but be able to add a keyword param called sp_validation_only=True. THis should be passed into the OneLogin_Saml2_Settings constructor while creating the embedded OneLogin_Saml2_Settings object.\n\nI would like to create such an auth object in places where I only need SP details. e.g. I am verifying a response from an IdP.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/120", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/120/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/120/events", "html_url": "https://github.com/onelogin/python-saml/issues/120", "id": 139685814, "node_id": "MDU6SXNzdWUxMzk2ODU4MTQ=", "number": 120, "title": "xmlsec.initialize() in validate_sign hangs", "user": {"login": "kgodey", "id": 287034, "node_id": "MDQ6VXNlcjI4NzAzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/287034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kgodey", "html_url": "https://github.com/kgodey", "followers_url": "https://api.github.com/users/kgodey/followers", "following_url": "https://api.github.com/users/kgodey/following{/other_user}", "gists_url": "https://api.github.com/users/kgodey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kgodey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kgodey/subscriptions", "organizations_url": "https://api.github.com/users/kgodey/orgs", "repos_url": "https://api.github.com/users/kgodey/repos", "events_url": "https://api.github.com/users/kgodey/events{/privacy}", "received_events_url": "https://api.github.com/users/kgodey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2016-03-09T20:06:10Z", "updated_at": "2016-07-19T14:56:25Z", "closed_at": "2016-07-19T14:56:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've set up a SAML SP using the SAML backend provided by `python-social-auth` (which uses `python-saml`), and I'm trying to test logging in using TestShib. It all works properly, but it hangs when it TestShib redirects to the auth completed URL. By adding logs, I've managed to track it down to the `xmlsec.initialize()` call in the `validate_sign` function (line 914 in `onelogin/saml2/utils.py`). When I comment out all the `xmlsec` related code, it works fine. Also, calling `xmlsec.initialize()` through the Python shell works fine.\n\nAny help would be much appreciated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/119", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/119/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/119/events", "html_url": "https://github.com/onelogin/python-saml/issues/119", "id": 139564781, "node_id": "MDU6SXNzdWUxMzk1NjQ3ODE=", "number": 119, "title": "Allow AuthnRequest with no NameID Format", "user": {"login": "alexstuart", "id": 1640577, "node_id": "MDQ6VXNlcjE2NDA1Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1640577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexstuart", "html_url": "https://github.com/alexstuart", "followers_url": "https://api.github.com/users/alexstuart/followers", "following_url": "https://api.github.com/users/alexstuart/following{/other_user}", "gists_url": "https://api.github.com/users/alexstuart/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexstuart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexstuart/subscriptions", "organizations_url": "https://api.github.com/users/alexstuart/orgs", "repos_url": "https://api.github.com/users/alexstuart/repos", "events_url": "https://api.github.com/users/alexstuart/events{/privacy}", "received_events_url": "https://api.github.com/users/alexstuart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-09T12:33:11Z", "updated_at": "2016-05-10T15:02:22Z", "closed_at": "2016-05-10T15:02:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "`saml2/authn_request.py` generates an `AuthnRequest` which always contains a `Format` attribute, although saml2int does not require this attribute. saml2int says:\n\n> The saml2p:AuthnRequest message SHOULD contain a saml2p:NameIDPolicy element with an AllowCreate attribute of \"true\". Its Format attribute, if present, SHOULD be set to one of the following values:\n>     urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n>     urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n\nIs it possible for the library to be flexible enough that it doesn't have to request a particular Format? This would be useful where one can't be sure that the IdPs can produce persistent NameIDs\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/118", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/118/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/118/events", "html_url": "https://github.com/onelogin/python-saml/issues/118", "id": 136001681, "node_id": "MDU6SXNzdWUxMzYwMDE2ODE=", "number": 118, "title": "Make SubjectConfirmation optional", "user": {"login": "toopy", "id": 1251906, "node_id": "MDQ6VXNlcjEyNTE5MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1251906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toopy", "html_url": "https://github.com/toopy", "followers_url": "https://api.github.com/users/toopy/followers", "following_url": "https://api.github.com/users/toopy/following{/other_user}", "gists_url": "https://api.github.com/users/toopy/gists{/gist_id}", "starred_url": "https://api.github.com/users/toopy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toopy/subscriptions", "organizations_url": "https://api.github.com/users/toopy/orgs", "repos_url": "https://api.github.com/users/toopy/repos", "events_url": "https://api.github.com/users/toopy/events{/privacy}", "received_events_url": "https://api.github.com/users/toopy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-24T09:18:44Z", "updated_at": "2016-02-29T15:40:19Z", "closed_at": "2016-02-29T15:40:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've got an issue with an IdP that doesn't provide `SubjectConfirmation`. But it looks like checks done on that node are redundant with `Conditions` checks if the node is provided, cf.:\n- https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/response.py#L187\n- https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/response.py#L391\n\nDo you think we can make `SubjectConfirmation` checks optional if we have `Conditions` node ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/112", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/112/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/112/events", "html_url": "https://github.com/onelogin/python-saml/issues/112", "id": 132995803, "node_id": "MDU6SXNzdWUxMzI5OTU4MDM=", "number": 112, "title": "Remove `NameID` requirement on responses", "user": {"login": "Fizzadar", "id": 1026154, "node_id": "MDQ6VXNlcjEwMjYxNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1026154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fizzadar", "html_url": "https://github.com/Fizzadar", "followers_url": "https://api.github.com/users/Fizzadar/followers", "following_url": "https://api.github.com/users/Fizzadar/following{/other_user}", "gists_url": "https://api.github.com/users/Fizzadar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fizzadar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fizzadar/subscriptions", "organizations_url": "https://api.github.com/users/Fizzadar/orgs", "repos_url": "https://api.github.com/users/Fizzadar/repos", "events_url": "https://api.github.com/users/Fizzadar/events{/privacy}", "received_events_url": "https://api.github.com/users/Fizzadar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2016-02-11T15:02:42Z", "updated_at": "2019-05-15T15:08:00Z", "closed_at": "2016-05-11T19:35:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently responses will be treated as invalid if no `NameID` is returned. I'm not 100% but I can't find anywhere in the SAML2 spec which states `NameID` is required - additionally we are working with numerous IDPs which don't provide the field (currently bypassing by patching the response class).\n\nI've not yet looked into what's involved beyond removing the exception [here](https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/response.py#L290).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onelogin/python-saml/issues/110", "repository_url": "https://api.github.com/repos/onelogin/python-saml", "labels_url": "https://api.github.com/repos/onelogin/python-saml/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/onelogin/python-saml/issues/110/comments", "events_url": "https://api.github.com/repos/onelogin/python-saml/issues/110/events", "html_url": "https://github.com/onelogin/python-saml/issues/110", "id": 132808876, "node_id": "MDU6SXNzdWUxMzI4MDg4NzY=", "number": 110, "title": "AttributeConsumingService tag in SP metadata", "user": {"login": "jimmyislive", "id": 1844488, "node_id": "MDQ6VXNlcjE4NDQ0ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1844488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmyislive", "html_url": "https://github.com/jimmyislive", "followers_url": "https://api.github.com/users/jimmyislive/followers", "following_url": "https://api.github.com/users/jimmyislive/following{/other_user}", "gists_url": "https://api.github.com/users/jimmyislive/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmyislive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmyislive/subscriptions", "organizations_url": "https://api.github.com/users/jimmyislive/orgs", "repos_url": "https://api.github.com/users/jimmyislive/repos", "events_url": "https://api.github.com/users/jimmyislive/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmyislive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-02-10T20:25:35Z", "updated_at": "2016-04-05T00:18:31Z", "closed_at": "2016-04-05T00:18:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to support the AttributeConsumingService tag in the initial SSO AuthnRequest?\n\nFrom the spec: \"The <AttributeConsumingService> element defines a particular service offered by the service provider in terms of the attributes the service requires or desires.\"\n\nIt is an optional element in the metadata.\n", "performed_via_github_app": null, "score": 1.0}]}