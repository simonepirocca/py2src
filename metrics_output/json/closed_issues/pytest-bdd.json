{"total_count": 119, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/382", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/382/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/382/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/382", "id": 676557845, "node_id": "MDU6SXNzdWU2NzY1NTc4NDU=", "number": 382, "title": "Pytest fixture scope is not being honoured", "user": {"login": "DrewDevereux", "id": 11673894, "node_id": "MDQ6VXNlcjExNjczODk0", "avatar_url": "https://avatars1.githubusercontent.com/u/11673894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrewDevereux", "html_url": "https://github.com/DrewDevereux", "followers_url": "https://api.github.com/users/DrewDevereux/followers", "following_url": "https://api.github.com/users/DrewDevereux/following{/other_user}", "gists_url": "https://api.github.com/users/DrewDevereux/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrewDevereux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrewDevereux/subscriptions", "organizations_url": "https://api.github.com/users/DrewDevereux/orgs", "repos_url": "https://api.github.com/users/DrewDevereux/repos", "events_url": "https://api.github.com/users/DrewDevereux/events{/privacy}", "received_events_url": "https://api.github.com/users/DrewDevereux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T03:48:47Z", "updated_at": "2020-08-12T03:23:24Z", "closed_at": "2020-08-11T06:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest-bdd does not honour pytest fixture scope; for example, it may instantiate a module-scoped fixture more than once in a single module.\r\n\r\nBelow is an example of a module containing two tests, both of which depend upon the module-scoped fixture `bah`. The first test expects a fixture object that is OFF, and turns it ON. The second test expects a fixture object that is ON, and turns it OFF. Since the fixture is module-scoped, the fixture object should be ON when passed to the second test, so the tests ought to pass. However pytest-bdd ignores the module-scoping, and passes the second test a fresh copy of the `bah` fixture, which is OFF.\r\n\r\nFeature file:\r\n```\r\nFeature: Foo\r\n\r\nBackground:\r\n    Given we have foo\r\n\r\nScenario: Foo is turned on\r\n    Given foo is off\r\n\r\n    When we turn foo on\r\n\r\n    Then foo should be on\r\n\r\nScenario: Foo is turned off\r\n    Given foo is on\r\n\r\n    When we turn foo off\r\n\r\n    Then foo should be off\r\n```\r\n\r\nPytest file:\r\n```\r\nimport pytest\r\nfrom pytest_bdd import scenario, given, when, then\r\n\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef bah():\r\n    class Bah:\r\n        def __init__(self):\r\n            self.state = \"OFF\"\r\n\r\n        def on(self):\r\n            self.state = \"ON\"\r\n        \r\n        def off(self):\r\n            self.state = \"OFF\"\r\n\r\n    return Bah()\r\n\r\n\r\n@given(\"we have foo\", target_fixture=\"foo\")\r\ndef we_have_foo(bah):\r\n    return bah\r\n\r\n\r\n@scenario(\"foo.feature\", \"Foo is turned on\")\r\ndef test_foo_turned_on():\r\n    pass\r\n\r\n\r\n@given(\"foo is off\")\r\ndef foo_is_off(foo):\r\n    assert foo.state == \"OFF\"\r\n\r\n\r\n@when(\"we turn foo on\")\r\ndef turn_foo_on(foo):\r\n    foo.on()\r\n\r\n\r\n@then(\"foo should be on\")\r\ndef foo_should_be_on(foo):\r\n    assert foo.state == \"ON\"\r\n\r\n\r\n@scenario(\"foo.feature\", \"Foo is turned off\")\r\ndef test_foo_turned_off():\r\n    pass\r\n\r\n\r\n@given(\"foo is on\")\r\ndef foo_is_on(foo):\r\n    assert foo.state == \"ON\"\r\n\r\n\r\n@when(\"we turn foo off\")\r\ndef turn_foo_off(foo):\r\n    foo.off()\r\n\r\n\r\n@then(\"foo should be off\")\r\ndef foo_should_be_off(foo):\r\n    assert foo.state == \"OFF\"\r\n```\r\nOutput:\r\n```\r\nfoo = <test_foo.bah.<locals>.Bah object at 0x7fcc531fca20>\r\n\r\n    @given(\"foo is on\")\r\n    def foo_is_on(foo):\r\n>       assert foo.state == \"ON\"\r\nE       AssertionError: assert 'OFF' == 'ON'\r\nE         - ON\r\nE         + OFF\r\n\r\ntests/functional/features/test_foo.py:52: AssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/380", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/380/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/380/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/380", "id": 664547455, "node_id": "MDU6SXNzdWU2NjQ1NDc0NTU=", "number": 380, "title": "AttributeError: 'FixtureClosureNode' object has no attribute 'remove' with pytest-cases", "user": {"login": "vbpatel73", "id": 46678361, "node_id": "MDQ6VXNlcjQ2Njc4MzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/46678361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vbpatel73", "html_url": "https://github.com/vbpatel73", "followers_url": "https://api.github.com/users/vbpatel73/followers", "following_url": "https://api.github.com/users/vbpatel73/following{/other_user}", "gists_url": "https://api.github.com/users/vbpatel73/gists{/gist_id}", "starred_url": "https://api.github.com/users/vbpatel73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vbpatel73/subscriptions", "organizations_url": "https://api.github.com/users/vbpatel73/orgs", "repos_url": "https://api.github.com/users/vbpatel73/repos", "events_url": "https://api.github.com/users/vbpatel73/events{/privacy}", "received_events_url": "https://api.github.com/users/vbpatel73/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33826657, "node_id": "MDU6TGFiZWwzMzgyNjY1Nw==", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-23T14:57:08Z", "updated_at": "2020-07-29T19:47:44Z", "closed_at": "2020-07-24T14:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nmy script runs ok but i am getting below error and because of it results scenario fail: can anyone help me pls?\r\n```\r\nvenv\\lib\\site-packages\\pytest_bdd\\steps.py:232: in fin\r\n    request._pyfuncitem._fixtureinfo.names_closure.remove(arg)\r\nE   AttributeError: 'FixtureClosureNode' object has no attribute 'remove'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/371", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/371/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/371/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/371", "id": 641225673, "node_id": "MDU6SXNzdWU2NDEyMjU2NzM=", "number": 371, "title": "error after every scenario", "user": {"login": "vbpatel73", "id": 46678361, "node_id": "MDQ6VXNlcjQ2Njc4MzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/46678361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vbpatel73", "html_url": "https://github.com/vbpatel73", "followers_url": "https://api.github.com/users/vbpatel73/followers", "following_url": "https://api.github.com/users/vbpatel73/following{/other_user}", "gists_url": "https://api.github.com/users/vbpatel73/gists{/gist_id}", "starred_url": "https://api.github.com/users/vbpatel73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vbpatel73/subscriptions", "organizations_url": "https://api.github.com/users/vbpatel73/orgs", "repos_url": "https://api.github.com/users/vbpatel73/repos", "events_url": "https://api.github.com/users/vbpatel73/events{/privacy}", "received_events_url": "https://api.github.com/users/vbpatel73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T13:52:18Z", "updated_at": "2020-07-24T14:13:34Z", "closed_at": "2020-07-24T14:13:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting below error after every scenario: How I can fix it pls?\r\n\r\ndef fin():\r\n        request._fixturemanager._arg2fixturedefs[arg].remove(fd)\r\n        request._fixture_defs[arg] = old_fd    \r\n        if add_fixturename:\r\n>           request._pyfuncitem._fixtureinfo.names_closure.remove(arg)\r\nE           AttributeError: 'FixtureClosureNode' object has no attribute 'remove'\r\n\r\naglc_venv\\lib\\site-packages\\pytest_bdd\\steps.py:232: AttributeError", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/369", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/369/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/369/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/369", "id": 638171127, "node_id": "MDU6SXNzdWU2MzgxNzExMjc=", "number": 369, "title": "Upcoming incompatibility in pytest-xdist 2.0: \"slave\" aliases removed", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-13T14:26:08Z", "updated_at": "2020-06-18T15:30:03Z", "closed_at": "2020-06-18T15:30:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi!\r\n\r\nAs per https://github.com/pytest-dev/pytest-xdist/pull/541, pytest-xdist 2.0 will remove the deprecated \"slave\" \r\naliases, which have been replaced by \"worker\" since pytest-xdist 1.22.\r\n\r\nTo avoid breakage, the team suggests to update your package to use the new terms, and make a new release to avoid sudden breakages once pytest-xdist 2.0 is released.\r\n\r\ncc @Zac-HD @RonnyPfannschmidt\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/360", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/360/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/360/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/360", "id": 614519002, "node_id": "MDU6SXNzdWU2MTQ1MTkwMDI=", "number": 360, "title": "How to call any function after execution is completed", "user": {"login": "Enigmaderockz", "id": 39618909, "node_id": "MDQ6VXNlcjM5NjE4OTA5", "avatar_url": "https://avatars2.githubusercontent.com/u/39618909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enigmaderockz", "html_url": "https://github.com/Enigmaderockz", "followers_url": "https://api.github.com/users/Enigmaderockz/followers", "following_url": "https://api.github.com/users/Enigmaderockz/following{/other_user}", "gists_url": "https://api.github.com/users/Enigmaderockz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enigmaderockz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enigmaderockz/subscriptions", "organizations_url": "https://api.github.com/users/Enigmaderockz/orgs", "repos_url": "https://api.github.com/users/Enigmaderockz/repos", "events_url": "https://api.github.com/users/Enigmaderockz/events{/privacy}", "received_events_url": "https://api.github.com/users/Enigmaderockz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T05:46:17Z", "updated_at": "2020-05-11T05:10:29Z", "closed_at": "2020-05-11T05:10:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have multiple feature files and I am running below command to run the execution.\r\n\r\npytest-bdd -sv --html = report.html test1.py test2.py\r\n\r\nOnce execution is done, report will be generated.\r\n\r\nNow I have a function to send mail with attached report but there seems to be no option where I can call this function after execution is done in pytest bdd\r\n\r\nany help or suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/354", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/354/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/354/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/354", "id": 590643864, "node_id": "MDU6SXNzdWU1OTA2NDM4NjQ=", "number": 354, "title": "Python 3.8 crash: TypeError: an integer is required (got type bytes)", "user": {"login": "advance512", "id": 3903412, "node_id": "MDQ6VXNlcjM5MDM0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3903412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/advance512", "html_url": "https://github.com/advance512", "followers_url": "https://api.github.com/users/advance512/followers", "following_url": "https://api.github.com/users/advance512/following{/other_user}", "gists_url": "https://api.github.com/users/advance512/gists{/gist_id}", "starred_url": "https://api.github.com/users/advance512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/advance512/subscriptions", "organizations_url": "https://api.github.com/users/advance512/orgs", "repos_url": "https://api.github.com/users/advance512/repos", "events_url": "https://api.github.com/users/advance512/events{/privacy}", "received_events_url": "https://api.github.com/users/advance512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-30T22:35:30Z", "updated_at": "2020-04-07T20:31:24Z", "closed_at": "2020-04-07T20:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using pytest-bdd with pytest 5.4.1 on Python 3.8.0, the following happens on launch:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 105, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 257, in _prepareconfig\r\n    return pluginmanager.hook.pytest_cmdline_parse(\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/helpconfig.py\", line 90, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 836, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 1044, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 992, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pluggy/manager.py\", line 299, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/importlib/metadata.py\", line 75, in load\r\n    module = import_module(match.group('module'))\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/_pytest/assertion/rewrite.py\", line 152, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pytest_bdd/plugin.py\", line 26, in <module>\r\n    def trace():\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pytest_bdd/steps.py\", line 189, in decorator\r\n    contribute_to_module(\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pytest_bdd/steps.py\", line 262, in contribute_to_module\r\n    func = recreate_function(func, module=module)\r\n  File \"/home/user/workspace/project/.venv/lib/python3.8/site-packages/pytest_bdd/steps.py\", line 246, in recreate_function\r\n    set_code(func, CodeType(*args))\r\nTypeError: an integer is required (got type bytes)\r\n```\r\n\r\nThis happens in a call to `recreate_function()` with name parameter `'pytestbdd_then_trace'` and the func decorated being this one, in plugin.py:\r\n```\r\n@given('trace')\r\n@when('trace')\r\n@then('trace')\r\ndef trace():\r\n    \"\"\"Enter pytest's pdb trace.\"\"\"\r\n    pytest.set_trace()\r\n```\r\n\r\nThe code continues to this line:\r\n```\r\nset_code(func, CodeType(*args))\r\n```\r\nwhere it calls with args being: \r\n`[0, 0, 2, 4, 31, b't\\x00\\x88\\x00d\\x01d\\x02\\x8d\\x02\\x01\\x00d\\x00S\\x00', (None, False, ('pytrace',)), ('fail',), ('args', 'kwargs'), '/home/user/workspace/project/.venv/lib/python3.8/site-packages/pytest_bdd/plugin.py', 'result', 1, b'\\x00\\x02', ('message',), ()]`\r\nit then fails with the exception:\r\n`(<class 'TypeError'>, TypeError('an integer is required (got type bytes)'), <traceback object at 0x7fb856c14680>)`\r\n\r\nThis seems related to:\r\nhttps://github.com/pyinstaller/pyinstaller/issues/4580\r\n\r\nDid I reach an edge case using pytest-bdd with Python 3.8.0? Or is there not complete support for Python 3.8?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/352", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/352/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/352/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/352", "id": 584364883, "node_id": "MDU6SXNzdWU1ODQzNjQ4ODM=", "number": 352, "title": "INTERNALERROR> AttributeError: 'PyLintItem' object has no attribute 'function'", "user": {"login": "ajinkyapande", "id": 11831162, "node_id": "MDQ6VXNlcjExODMxMTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/11831162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajinkyapande", "html_url": "https://github.com/ajinkyapande", "followers_url": "https://api.github.com/users/ajinkyapande/followers", "following_url": "https://api.github.com/users/ajinkyapande/following{/other_user}", "gists_url": "https://api.github.com/users/ajinkyapande/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajinkyapande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajinkyapande/subscriptions", "organizations_url": "https://api.github.com/users/ajinkyapande/orgs", "repos_url": "https://api.github.com/users/ajinkyapande/repos", "events_url": "https://api.github.com/users/ajinkyapande/events{/privacy}", "received_events_url": "https://api.github.com/users/ajinkyapande/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33826654, "node_id": "MDU6TGFiZWwzMzgyNjY1NA==", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 33826656, "node_id": "MDU6TGFiZWwzMzgyNjY1Ng==", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T12:06:03Z", "updated_at": "2020-04-21T12:04:35Z", "closed_at": "2020-04-21T12:04:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error when i am running pylint  . Not sure if this issue is from pytest_bdd side or linter side.  Can someone please look into this?\r\n\r\n```\r\n$ pytest --pylint -m pylint --pylint-jobs=20 --pylint-error-types=EF\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.9, pytest-5.3.4, py-1.8.1, pluggy-0.13.1 -- /usr/bin/python3\r\ncachedir: .pytest_cache\r\n\r\nplugins: allure-pytest-2.8.12, bdd-3.2.0, dependency-0.5.1, forked-1.1.3, pylint-0.15.1, rerunfailures-9.0, splinter-2.0.1, timeout-1.3.4, xdist-1.31.0\r\n--------------------------------------------------------------------------------\r\nLinting files\r\nr\n--------------------------------------------------------------------------------\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 197, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 246, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 256, in pytest_collection\r\nINTERNALERROR>     return session.perform_collect()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 461, in perform_collect\r\nINTERNALERROR>     session=self, config=self.config, items=items\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pytest_bdd/plugin.py\", line 106, in pytest_collection_modifyitems\r\nINTERNALERROR>     items.sort(key=item_key)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pytest_bdd/plugin.py\", line 104, in item_key\r\nINTERNALERROR>     pytest_bdd_counter = getattr(item.function, '__pytest_bdd_counter__', 0)\r\nINTERNALERROR> AttributeError: 'PyLintItem' object has no attribute 'function'\r\n\r\n============================= 52 warnings in 6.17s =============================", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/338", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/338/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/338/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/338", "id": 516878338, "node_id": "MDU6SXNzdWU1MTY4NzgzMzg=", "number": 338, "title": "Testing functions without global state ", "user": {"login": "OverkillGuy", "id": 2757699, "node_id": "MDQ6VXNlcjI3NTc2OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2757699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OverkillGuy", "html_url": "https://github.com/OverkillGuy", "followers_url": "https://api.github.com/users/OverkillGuy/followers", "following_url": "https://api.github.com/users/OverkillGuy/following{/other_user}", "gists_url": "https://api.github.com/users/OverkillGuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/OverkillGuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OverkillGuy/subscriptions", "organizations_url": "https://api.github.com/users/OverkillGuy/orgs", "repos_url": "https://api.github.com/users/OverkillGuy/repos", "events_url": "https://api.github.com/users/OverkillGuy/events{/privacy}", "received_events_url": "https://api.github.com/users/OverkillGuy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-03T19:42:54Z", "updated_at": "2019-11-29T13:54:49Z", "closed_at": "2019-11-29T13:54:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems very hard to write tests for pure functions without global state.\r\n\r\nI am trying to write a toy project of roman numeral conversion with BDD (amusingly named `pyroman`), however it seems difficult to write it in BDD. Consider the following feature:\r\n\r\n```gherkin\r\nFeature: Pyroman command line\r\n  As a user\r\n  I need to convert roman numerals from the command line\r\n  So that I can be cool and retro\r\n\r\nScenario: Convert roman to decimal\r\n  Given pyroman is installed\r\n  When I run pyroman with \"MMXXIX\"\r\n  Then pyroman returns \"2029\"\r\n```\r\nSetting aside the parsers for string, which I'm not using yet, tests would look like the following:\r\n\r\n```py\r\n# coding=utf-8\r\n\"\"\"Pyroman command line feature tests.\"\"\"\r\n\r\nfrom pytest_bdd import (\r\n    given,\r\n    scenario,\r\n    then,\r\n    when,\r\n)\r\n\r\nfrom pyroman.cli import _main as pyroman\r\n\r\n@scenario('features/command_line.feature', 'Convert decimal to roman')\r\ndef test_convert_decimal_to_roman():\r\n    \"\"\"Convert decimal to roman.\"\"\"\r\n\r\n\r\n\r\n@given('pyroman is installed')\r\ndef pyroman_is_installed():\r\n    \"\"\"pyroman is installed.\"\"\"\r\n    pass  # no action if we can import it successfully here\r\n\r\n\r\n@when('I run pyroman with \"MMXXIX\"')\r\ndef i_run_pyroman_with_mmxxix():\r\n    \"\"\"I run pyroman with \"MMXXIX\".\"\"\"\r\n    converted = pyroman(\"MMXXIX\")\r\n\r\n@then('pyroman returns \"2029\"')\r\ndef pyroman_returns_2029():\r\n    \"\"\"pyroman returns \"2029\".\"\"\"\r\n    assert converted == 2029, \"Pyroman should return correct translation\"\r\n    # NameError: name 'converted' is not defined\r\n```\r\nIs there something I'm missing? It feels wrong to have to use global state var in a (dummy) given , or ditch the joys of Gherkin/Pytest-bdd and revert to plain pytest for that kind of pure function (side-effect free) testing.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/333", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/333/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/333/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/333", "id": 506658158, "node_id": "MDU6SXNzdWU1MDY2NTgxNTg=", "number": 333, "title": "Escape pipe character (\"|\") in scenario outline", "user": {"login": "Mark90", "id": 1482100, "node_id": "MDQ6VXNlcjE0ODIxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1482100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark90", "html_url": "https://github.com/Mark90", "followers_url": "https://api.github.com/users/Mark90/followers", "following_url": "https://api.github.com/users/Mark90/following{/other_user}", "gists_url": "https://api.github.com/users/Mark90/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark90/subscriptions", "organizations_url": "https://api.github.com/users/Mark90/orgs", "repos_url": "https://api.github.com/users/Mark90/repos", "events_url": "https://api.github.com/users/Mark90/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33826653, "node_id": "MDU6TGFiZWwzMzgyNjY1Mw==", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1464730102, "node_id": "MDU6TGFiZWwxNDY0NzMwMTAy", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/good%20first%20issue", "name": "good first issue", "color": "b6ffad", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-14T13:36:06Z", "updated_at": "2019-11-23T16:52:20Z", "closed_at": "2019-11-23T16:52:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, is there any way to escape the pipe character in scenario outlines? The sample code below shows the \"problem\":\r\n\r\n\r\n**sample.feature**\r\n```feature\r\nFeature: Using special characters\r\n\r\n    Scenario Outline: Testing special characters\r\n        Given We have strings <string1> and <string2>\r\n        When We compare them\r\n        Then They should be equal\r\n\r\n        Examples:\r\n        | string1    | string2    |\r\n        | bork       | bork       |\r\n        | bork\\|bork | bork\\|bork |\r\n```\r\n\r\n**test_sample.py**\r\n```python\r\n\"\"\"Using special characters feature tests.\"\"\"\r\n\r\nfrom pytest_bdd import given, scenario, then, when\r\n\r\n\r\n@scenario(\"sample.feature\", \"Testing special characters\")\r\ndef test_testing_special_characters():\r\n    \"\"\"Testing special characters.\"\"\"\r\n\r\n\r\n@given(\"registry\")\r\ndef registry():\r\n    return dict()\r\n\r\n\r\n@given(\"We have strings <string1> and <string2>\")\r\ndef we_have_strings_string1_and_string2(string1, string2, registry):\r\n    \"\"\"We have strings <string1> and <string2>.\"\"\"\r\n    registry[\"string1\"] = string1\r\n    registry[\"string2\"] = string2\r\n\r\n\r\n@when(\"We compare them\")\r\ndef we_compare_them(registry):\r\n    \"\"\"We compare them.\"\"\"\r\n\r\n\r\n@then(\"They should be equal\")\r\ndef they_should_be_equal(registry):\r\n    \"\"\"They should be equal.\"\"\"\r\n    assert registry[\"string1\"] == registry[\"string2\"]\r\n```\r\n\r\n\r\nWhen running the test;\r\n\r\n```\r\n(pytest-bdd-37) \u039e python/pytestbddpipechar \u2192 pytest\r\n================================================================== test session starts ===================================================================\r\nplatform darwin -- Python 3.7.2, pytest-5.2.1, py-1.8.0, pluggy-0.13.0\r\nrootdir: /Users/mark/dev/python/pytestbddpipechar\r\nplugins: bdd-3.2.1\r\ncollected 0 items / 1 errors\r\n\r\n========================================================================= ERRORS =========================================================================\r\n____________________________________________________________ ERROR collecting test_sample.py _____________________________________________________________\r\ntest_sample.py::test_testing_special_characters: in \"parametrize\" the number of names (2):\r\n  ['string1', 'string2']\r\nmust be equal to the number of values (4):\r\n  ['bork\\\\', 'bork', 'bork\\\\', 'bork']\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n==================================================================== 1 error in 0.08s ====================================================================\r\n(pytest-bdd-37)\r\n```\r\n\r\nHaven't checked the source yet, but the pipe character (\"vertical line\") seems to be used in a `str.split('|')` fashion. I noticed a similar[ issue](https://github.com/behave/behave/issues/302) on the behave project where someone eventually added it. The same `re.split` solution can probably be applied to pytest-bdd. If you think it is a desirable feature for pytest-bdd as well, I can try writing up a PR. When I have some time... and after I finish my other open PR :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/325", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/325/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/325/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/325", "id": 489060978, "node_id": "MDU6SXNzdWU0ODkwNjA5Nzg=", "number": 325, "title": "Bug: TestClass methods are not supported by @scenario", "user": {"login": "daihaminkey", "id": 39711756, "node_id": "MDQ6VXNlcjM5NzExNzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/39711756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daihaminkey", "html_url": "https://github.com/daihaminkey", "followers_url": "https://api.github.com/users/daihaminkey/followers", "following_url": "https://api.github.com/users/daihaminkey/following{/other_user}", "gists_url": "https://api.github.com/users/daihaminkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/daihaminkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daihaminkey/subscriptions", "organizations_url": "https://api.github.com/users/daihaminkey/orgs", "repos_url": "https://api.github.com/users/daihaminkey/repos", "events_url": "https://api.github.com/users/daihaminkey/events{/privacy}", "received_events_url": "https://api.github.com/users/daihaminkey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33826653, "node_id": "MDU6TGFiZWwzMzgyNjY1Mw==", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 33826658, "node_id": "MDU6TGFiZWwzMzgyNjY1OA==", "url": "https://api.github.com/repos/pytest-dev/pytest-bdd/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-04T09:57:08Z", "updated_at": "2019-10-21T10:28:15Z", "closed_at": "2019-10-21T10:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you place test function in class and add `self` arg to it, `@scenario` decorator will try to find fixture 'self', which is obviously doesn't exists.\r\n\r\nBug found in 3.2.1, but I suppose it cames from 3.2.0 update.\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/39711756/64245315-5cd06400-cf13-11e9-8ecf-67f1cbddf1d2.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/317", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/317/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/317/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/317", "id": 482943612, "node_id": "MDU6SXNzdWU0ODI5NDM2MTI=", "number": 317, "title": "pytest-bdd==3.2.0 breaks pytest-play (or any other non python pytest items)", "user": {"login": "davidemoro", "id": 608426, "node_id": "MDQ6VXNlcjYwODQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/608426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidemoro", "html_url": "https://github.com/davidemoro", "followers_url": "https://api.github.com/users/davidemoro/followers", "following_url": "https://api.github.com/users/davidemoro/following{/other_user}", "gists_url": "https://api.github.com/users/davidemoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidemoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidemoro/subscriptions", "organizations_url": "https://api.github.com/users/davidemoro/orgs", "repos_url": "https://api.github.com/users/davidemoro/repos", "events_url": "https://api.github.com/users/davidemoro/events{/privacy}", "received_events_url": "https://api.github.com/users/davidemoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-20T15:50:05Z", "updated_at": "2019-08-21T11:23:06Z", "closed_at": "2019-08-21T11:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Preconditions:\r\n* python environment with the following versions\r\n* pytest-bdd==3.2.0 and pytest-play installed in same python environment (no relevant pytest-play version, tested with 2.3.1 version for sake of completeness)\r\n\r\nHow to reproduce:\r\n* run pytest on a project with a pytest-play scenario\r\n\r\nExpected result:\r\n* test run without errors\r\n\r\nActual result:\r\n* see error log\r\n```\r\n...\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_bdd/plugin.py\", line 104, in item_key\r\nINTERNALERROR>     pytest_bdd_counter = getattr(item.function, '__pytest_bdd_counter__', 0)\r\nINTERNALERROR> AttributeError: 'YAMLItem' object has no attribute 'function'\r\n```\r\n\r\nYou can find all details and versions pinned here:\r\n* https://github.com/davidemoro/pytest-play-docker/pull/264\r\n\r\nIs it possible to be compatible with non-python pytest items?\r\n\r\nAll fine with previous pytest-bdd version instead (3.1.1 is ok).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/295", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/295/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/295/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/295", "id": 421033978, "node_id": "MDU6SXNzdWU0MjEwMzM5Nzg=", "number": 295, "title": "Pytest KeyError when running the pytest on a single file", "user": {"login": "arashiqurrahman", "id": 11049902, "node_id": "MDQ6VXNlcjExMDQ5OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/11049902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arashiqurrahman", "html_url": "https://github.com/arashiqurrahman", "followers_url": "https://api.github.com/users/arashiqurrahman/followers", "following_url": "https://api.github.com/users/arashiqurrahman/following{/other_user}", "gists_url": "https://api.github.com/users/arashiqurrahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arashiqurrahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arashiqurrahman/subscriptions", "organizations_url": "https://api.github.com/users/arashiqurrahman/orgs", "repos_url": "https://api.github.com/users/arashiqurrahman/repos", "events_url": "https://api.github.com/users/arashiqurrahman/events{/privacy}", "received_events_url": "https://api.github.com/users/arashiqurrahman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-14T13:44:08Z", "updated_at": "2019-03-14T14:19:11Z", "closed_at": "2019-03-14T14:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest version 4.3.0\r\npycharm 2018 3.5\r\npython 3.7.2\r\n\r\nWhen running the tests, it gives errors. I would really appreciate if someone could help.\r\n\r\nThanks in advance.\r\n\r\n\r\nTesting started at 09:43 ...\r\n/Users/brptestdevices/PycharmProjects/test_automation_ashiq_sample/venv/bin/python \"/Applications/PyCharm CE.app/Contents/helpers/pycharm/_jb_pytest_runner.py\" --path /Users/brptestdevices/brp-digital-automation-qa/test_files/skidoo/test_home.py\r\nLaunching pytest with arguments /Users/brptestdevices/brp-digital-automation-qa/test_files/skidoo/test_home.py in /Users/brptestdevices/brp-digital-automation-qa\r\n\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 3.7.2, pytest-4.3.0, py-1.8.0, pluggy-0.9.0\r\nrootdir: /Users/brptestdevices/brp-digital-automation-qa, inifile:\r\nplugins: xdist-1.26.1, mock-1.10.1, forked-1.0.2, bdd-3.1.0collected 1 item\r\n\r\ntest_files/skidoo/test_home.py F\r\ntest_files/skidoo/test_home.py:13 (test_home)\r\nself = <FixtureRequest for <Function test_home>>\r\nargname = 'pytestbdd_given_the home page is accessible\\nWhen the user enters the correct url on the browser\\nThen the home page is viewable'\r\n\r\n    def _get_active_fixturedef(self, argname):\r\n        try:\r\n>           return self._fixture_defs[argname]\r\nE           KeyError: 'pytestbdd_given_the home page is accessible\\nWhen the user enters the correct url on the browser\\nThen the home page is viewable'\r\n\r\n/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/_pytest/fixtures.py:489: KeyError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrequest = <FixtureRequest for <Function test_home>>\r\nstep = <pytest_bdd.feature.Step object at 0x10a4482b0>\r\nscenario = <pytest_bdd.feature.Scenario object at 0x10a448240>\r\nencoding = 'utf-8'\r\n\r\n    def _find_step_function(request, step, scenario, encoding):\r\n        \"\"\"Match the step defined by the regular expression pattern.\r\n    \r\n        :param request: PyTest request object.\r\n        :param step: Step.\r\n        :param scenario: Scenario.\r\n    \r\n        :return: Function of the step.\r\n        :rtype: function\r\n        \"\"\"\r\n        name = step.name\r\n        try:\r\n>           return request.getfixturevalue(get_step_fixture_name(name, step.type, encoding))\r\n\r\n/usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:91: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <FixtureRequest for <Function test_home>>\r\nargname = 'pytestbdd_given_the home page is accessible\\nWhen the user enters the correct url on the browser\\nThen the home page is viewable'\r\n\r\n    def getfixturevalue(self, argname):\r\n        \"\"\" Dynamically run a named fixture function.\r\n    \r\n        Declaring fixtures via function argument is recommended where possible.\r\n        But if you can only decide whether to use another fixture at test\r\n        setup time, you may use this function to retrieve it inside a fixture\r\n        or test function body.\r\n        \"\"\"\r\n>       return self._get_active_fixturedef(argname).cached_result[0]\r\n\r\n/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/_pytest/fixtures.py:478: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <FixtureRequest for <Function test_home>>\r\nargname = 'pytestbdd_given_the home page is accessible\\nWhen the user enters the correct url on the browser\\nThen the home page is viewable'\r\n\r\n    def _get_active_fixturedef(self, argname):\r\n        try:\r\n            return self._fixture_defs[argname]\r\n        except KeyError:\r\n            try:\r\n>               fixturedef = self._getnextfixturedef(argname)\r\n\r\n/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/_pytest/fixtures.py:492: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <FixtureRequest for <Function test_home>>\r\nargname = 'pytestbdd_given_the home page is accessible\\nWhen the user enters the correct url on the browser\\nThen the home page is viewable'\r\n\r\n    def _getnextfixturedef(self, argname):\r\n        fixturedefs = self._arg2fixturedefs.get(argname, None)\r\n        if fixturedefs is None:\r\n            # we arrive here because of a dynamic call to\r\n            # getfixturevalue(argname) usage which was naturally\r\n            # not known at parsing/collection time\r\n            parentid = self._pyfuncitem.parent.nodeid\r\n            fixturedefs = self._fixturemanager.getfixturedefs(argname, parentid)\r\n            self._arg2fixturedefs[argname] = fixturedefs\r\n        # fixturedefs list is immutable so we maintain a decreasing index\r\n        index = self._arg2index.get(argname, 0) - 1\r\n        if fixturedefs is None or (-index > len(fixturedefs)):\r\n>           raise FixtureLookupError(argname, self)\r\nE           _pytest.fixtures.FixtureLookupError: ('pytestbdd_given_the home page is accessible\\nWhen the user enters the correct url on the browser\\nThen the home page is viewable', <FixtureRequest for <Function test_home>>)\r\n\r\n/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/_pytest/fixtures.py:385: FixtureLookupError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nrequest = <FixtureRequest for <Function test_home>>\r\n\r\n        'Browse homepage',\r\n>   )\r\n    def test_home():\r\n\r\ntest_files/skidoo/test_home.py:15: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:162: in _execute_scenario\r\n    step_func = _find_step_function(request, step, scenario, encoding=encoding)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nrequest = <FixtureRequest for <Function test_home>>\r\nstep = <pytest_bdd.feature.Step object at 0x10a4482b0>\r\nscenario = <pytest_bdd.feature.Scenario object at 0x10a448240>\r\nencoding = 'utf-8'\r\n\r\n    def _find_step_function(request, step, scenario, encoding):\r\n        \"\"\"Match the step defined by the regular expression pattern.\r\n    \r\n        :param request: PyTest request object.\r\n        :param step: Step.\r\n        :param scenario: Scenario.\r\n    \r\n        :return: Function of the step.\r\n        :rtype: function\r\n        \"\"\"\r\n        name = step.name\r\n        try:\r\n            return request.getfixturevalue(get_step_fixture_name(name, step.type, encoding))\r\n        except pytest_fixtures.FixtureLookupError:\r\n            try:\r\n                name = find_argumented_step_fixture_name(name, step.type, request._fixturemanager, request)\r\n                if name:\r\n                    return request.getfixturevalue(name)\r\n                raise\r\n            except pytest_fixtures.FixtureLookupError:\r\n                raise exceptions.StepDefinitionNotFoundError(\r\n                    u\"\"\"Step definition is not found: {step}.\"\"\"\r\n                    \"\"\" Line {step.line_number} in scenario \"{scenario.name}\" in the feature \"{feature.filename}\"\"\".format(\r\n                        step=step,\r\n                        scenario=scenario,\r\n>                       feature=scenario.feature,\r\n                    )\r\n                )\r\nE               pytest_bdd.exceptions.StepDefinitionNotFoundError: Step definition is not found: Given \"the home page is accessible\r\nE               When the user enters the correct url on the browser\r\nE               Then the home page is viewable\". Line 5 in scenario \"Browse homepage\" in the feature \"/Users/brptestdevices/brp-digital-automation-qa/test_files/skidoo/homepage.feature\r\n\r\n/usr/local/lib/python3.7/site-packages/pytest_bdd/scenario.py:104: StepDefinitionNotFoundError", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/285", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/285/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/285/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/285", "id": 389739204, "node_id": "MDU6SXNzdWUzODk3MzkyMDQ=", "number": 285, "title": "Customize generate output", "user": {"login": "pfctdayelise", "id": 360499, "node_id": "MDQ6VXNlcjM2MDQ5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/360499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfctdayelise", "html_url": "https://github.com/pfctdayelise", "followers_url": "https://api.github.com/users/pfctdayelise/followers", "following_url": "https://api.github.com/users/pfctdayelise/following{/other_user}", "gists_url": "https://api.github.com/users/pfctdayelise/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfctdayelise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfctdayelise/subscriptions", "organizations_url": "https://api.github.com/users/pfctdayelise/orgs", "repos_url": "https://api.github.com/users/pfctdayelise/repos", "events_url": "https://api.github.com/users/pfctdayelise/events{/privacy}", "received_events_url": "https://api.github.com/users/pfctdayelise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T12:22:28Z", "updated_at": "2019-02-18T10:33:47Z", "closed_at": "2019-02-18T10:33:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With the generated step output, what do you think about making them `raise NotImplementedError` rather than `pass`?\r\n\r\nI find the default pass a bit dangerous, as running pytest reports everything is passing!\r\n\r\nI did implement the `@todo` marker as mentioned in the docs, but it feels safer to have exceptions be raised in case one slips through.\r\n\r\nI poked around the code and there is a mention of templates - perhaps this is already customizable, just not documented?? \ud83d\ude03", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/283", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/283/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/283/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/283", "id": 389418292, "node_id": "MDU6SXNzdWUzODk0MTgyOTI=", "number": 283, "title": "pytest-bdd 3.0.0 does not seem to work with pytest 4.0.1", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-10T17:56:56Z", "updated_at": "2018-12-16T11:03:24Z", "closed_at": "2018-12-16T11:03:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\r\n\r\npytest-bdd 3.0.0 does not seem to work with pytest 4.0.1.\r\n\r\nWhat is the highest version of pytest that pytest-bdd supports?\r\n\r\nI am running with pytest 3.9.1 now. I use python 3.5.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/279", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/279/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/279/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/279", "id": 386145870, "node_id": "MDU6SXNzdWUzODYxNDU4NzA=", "number": 279, "title": "Question: Why do we use test_ method in step definitions?", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-30T11:18:01Z", "updated_at": "2019-08-28T13:53:01Z", "closed_at": "2019-01-25T11:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can someone tell me why the step definition needs test_ method?\r\nIs this the way the test are discovered?\r\n\r\nNormally in BDD frameworks the `Given` (or Background/@before )step initiates execution.\r\n\r\nThis method does not really do anything with `pass` in it.\r\n\r\n**def test_publish():\r\n    pass**\r\n\r\n```from pytest_bdd import scenario, given, when, then\r\n\r\n@scenario('publish_article.feature', 'Publishing the article')\r\ndef test_publish():\r\n    pass\r\n\r\n\r\n@given(\"I'm an author user\")\r\ndef author_user(auth, author):\r\n    auth['user'] = author.user```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/277", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/277/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/277/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/277", "id": 384757300, "node_id": "MDU6SXNzdWUzODQ3NTczMDA=", "number": 277, "title": "pytest-bdd with pytest-splinter example", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-27T11:47:36Z", "updated_at": "2018-11-29T15:06:49Z", "closed_at": "2018-11-29T15:06:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\r\n\r\nDoes anybody have example of using pytest-bdd with pytest-splinter?\r\nI tried to use \"browser\" fixture from splinter but I get errors that it does not exist.\r\n\r\nWhere do you import browser? Is it enough if you have pytest-splinter pip installed?\r\nDo I need an instance of Browser() in conftest.py?\r\n\r\nDocs tell us to use splinter but do not say how...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/276", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/276/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/276/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/276", "id": 384099720, "node_id": "MDU6SXNzdWUzODQwOTk3MjA=", "number": 276, "title": "CI job \"py27-pytestlatest-xdist\" fails", "user": {"login": "youtux", "id": 778703, "node_id": "MDQ6VXNlcjc3ODcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/778703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youtux", "html_url": "https://github.com/youtux", "followers_url": "https://api.github.com/users/youtux/followers", "following_url": "https://api.github.com/users/youtux/following{/other_user}", "gists_url": "https://api.github.com/users/youtux/gists{/gist_id}", "starred_url": "https://api.github.com/users/youtux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youtux/subscriptions", "organizations_url": "https://api.github.com/users/youtux/orgs", "repos_url": "https://api.github.com/users/youtux/repos", "events_url": "https://api.github.com/users/youtux/events{/privacy}", "received_events_url": "https://api.github.com/users/youtux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-25T17:29:47Z", "updated_at": "2019-02-16T18:12:23Z", "closed_at": "2019-02-16T18:12:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The job is failing lately, and this can be reproduced (without using xdist) using this particular schedule:\r\n```\r\n$ tests/feature/test_no_sctrict_gherkin.py::test_background_no_strict_gherkin  tests/feature/test_wrong.py::test_verbose_output\r\n```\r\n\r\nIt seems that the setup of `test_background_no_strict_gherkin` leaks into `test_verbose_output`. I think this is a pytest issue and I am trying to create a smaller file to reproduce the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/273", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/273/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/273/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/273", "id": 383975704, "node_id": "MDU6SXNzdWUzODM5NzU3MDQ=", "number": 273, "title": "Running gherkin reporter on pytest-bdd unicode test raises UnicodeEncodeError", "user": {"login": "sliwinski-milosz", "id": 13810205, "node_id": "MDQ6VXNlcjEzODEwMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/13810205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sliwinski-milosz", "html_url": "https://github.com/sliwinski-milosz", "followers_url": "https://api.github.com/users/sliwinski-milosz/followers", "following_url": "https://api.github.com/users/sliwinski-milosz/following{/other_user}", "gists_url": "https://api.github.com/users/sliwinski-milosz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sliwinski-milosz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sliwinski-milosz/subscriptions", "organizations_url": "https://api.github.com/users/sliwinski-milosz/orgs", "repos_url": "https://api.github.com/users/sliwinski-milosz/repos", "events_url": "https://api.github.com/users/sliwinski-milosz/events{/privacy}", "received_events_url": "https://api.github.com/users/sliwinski-milosz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-24T09:58:27Z", "updated_at": "2018-12-16T11:08:48Z", "closed_at": "2018-12-16T11:08:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running below test\r\n```\r\npytest -k 'test_steps_in_feature_file_have_unicode' --gherkin-terminal-reporter --gherkin-terminal-reporter-expanded\r\n```\r\n\r\nRaises following error:\r\n```\r\nFeature: \u042e\u043d\u0456\u043a\u043e\u0434\u043d\u0456 \u0441\u0438\u043c\u0432\u043e\u043b\u0438\r\n    Scenario: \u041a\u0440\u043e\u043a\u0438 \u0432 .feature \u0444\u0430\u0439\u043b\u0456 \u043c\u0456\u0441\u0442\u044f\u0442\u044c \u044e\u043d\u0456\u043a\u043e\u0434\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/main.py\", line 96, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/main.py\", line 131, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/main.py\", line 152, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\r\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 253, in _wrapped_call\r\nINTERNALERROR>     return call_outcome.get_result()\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\nINTERNALERROR>     _reraise(*ex)  # noqa\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\r\nINTERNALERROR>     self.result = func()\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/runner.py\", line 66, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/runner.py\", line 79, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/runner.py\", line 137, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/.virtualenvs/pytest-bdd/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/milosz.sliwinski/workspace/pytest-bdd/pytest_bdd/gherkin_terminal_reporter.py\", line 108, in pytest_runtest_logreport\r\nINTERNALERROR>     step_name), **scenario_markup)\r\nINTERNALERROR> UnicodeEncodeError: 'ascii' codec can't encode character u'\\u0443' in position 0: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/270", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/270/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/270/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/270", "id": 383782530, "node_id": "MDU6SXNzdWUzODM3ODI1MzA=", "number": 270, "title": "pytest_bdd_after_step blows up when using step_func_args - every test as marker a failed", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-23T11:02:56Z", "updated_at": "2018-11-23T11:12:48Z", "closed_at": "2018-11-23T11:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use the following\r\n\r\n def pytest_bdd_after_step(request, feature, scenario, step, step_func, step_func_args):\r\n\r\n     print(step_func_args['request'])\r\n     print('\\n')\r\n\r\nEvery test is marked as failed.\r\n\r\nI run my test with:  python -m pytest -k login", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/269", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/269/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/269/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/269", "id": 383771447, "node_id": "MDU6SXNzdWUzODM3NzE0NDc=", "number": 269, "title": "pytest_bdd_after_step blowing up", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-23T10:28:59Z", "updated_at": "2018-11-23T11:15:24Z", "closed_at": "2018-11-23T10:31:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\r\n I have fixture:\r\n```\r\n@pytest.fixture(scope='session')\r\ndef browser():\r\n\r\n    options = webdriver.ChromeOptions()\r\n    options.binary_location = 'resources//chromium-portable//61.0.3153//ChromiumPortable.exe'\r\n    options.add_argument(\"--start-maximized\")\r\n    options.add_argument(\"--disable-infobars\")\r\n    options.add_argument(\"--incognito\")\r\n    options.add_argument(\"--disable-session-crashed-bubble\")\r\n    driver = webdriver.Chrome('resources//chromedriver.exe', options=options)\r\n    driver.get('http://www.google.com')\r\n    driver.implicitly_wait(5)\r\n\r\n    yield driver\r\n\r\n    driver.close()\r\n    driver.quit()\r\n```\r\n\r\nI am trying to access:\r\n\r\n```\r\ndef pytest_bdd_after_step(request, feature, scenario, step, step_func, step_func_args):\r\n\r\n    print(step_func_args['request'])\r\n    print('\\n')\r\n```\r\n\r\nI get this stacktrace:\r\n\r\n```\r\nINTERNALERROR>   File \"\\Python\\Python35-32\\lib\\site-packages\\pytest_html\\plugin.py\", line 504, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_failed(report)\r\nINTERNALERROR>   File \"\\Python\\Python35-32\\lib\\site-packages\\pytest_html\\plugin.py\", line 294, in append_failed\r\nINTERNALERROR>     self._appendrow('Failed', report)\r\nINTERNALERROR>   File \"\\Python\\Python35-32\\lib\\site-packages\\pytest_html\\plugin.py\", line 266, in _appendrow\r\nINTERNALERROR>     result = self.TestResult(outcome, report, self.logfile, self.config)\r\nINTERNALERROR>   File \"\\Python\\Python35-32\\lib\\site-packages\\pytest_html\\plugin.py\", line 119, in __init__\r\nINTERNALERROR>     self.append_extra_html(extra, extra_index, test_index)\r\nINTERNALERROR>   File \"\\Python\\Python35-32\\lib\\site-packages\\pytest_html\\plugin.py\", line 190, in append_extra_html\r\nINTERNALERROR>     content = b64decode(content.encode('utf-8'))\r\nINTERNALERROR>   File \"\\Python\\Python35-32\\lib\\base64.py\", line 88, in b64decode\r\nINTERNALERROR>     return binascii.a2b_base64(s)\r\nINTERNALERROR> binascii.Error: Incorrect padding\r\n\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/266", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/266/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/266/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/266", "id": 383182847, "node_id": "MDU6SXNzdWUzODMxODI4NDc=", "number": 266, "title": "Why is there no @And step? - Feature Request", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-11-21T15:54:06Z", "updated_at": "2019-02-17T13:39:24Z", "closed_at": "2019-02-17T13:39:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\r\n\r\nJust wondering why is there no **And** step?\r\nHow do you work around it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/261", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/261/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/261/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/261", "id": 373827828, "node_id": "MDU6SXNzdWUzNzM4Mjc4Mjg=", "number": 261, "title": "RemovedInPytest4Warning: MarkInfo objects are deprecated", "user": {"login": "sliwinski-milosz", "id": 13810205, "node_id": "MDQ6VXNlcjEzODEwMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/13810205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sliwinski-milosz", "html_url": "https://github.com/sliwinski-milosz", "followers_url": "https://api.github.com/users/sliwinski-milosz/followers", "following_url": "https://api.github.com/users/sliwinski-milosz/following{/other_user}", "gists_url": "https://api.github.com/users/sliwinski-milosz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sliwinski-milosz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sliwinski-milosz/subscriptions", "organizations_url": "https://api.github.com/users/sliwinski-milosz/orgs", "repos_url": "https://api.github.com/users/sliwinski-milosz/repos", "events_url": "https://api.github.com/users/sliwinski-milosz/events{/privacy}", "received_events_url": "https://api.github.com/users/sliwinski-milosz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-25T08:22:31Z", "updated_at": "2018-12-16T11:04:48Z", "closed_at": "2018-11-14T09:24:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n/usr/local/lib/python3.5/site-packages/pytest_bdd/reporting.py:78: RemovedInPytest4Warning: MarkInfo objects are deprecated as they contain merged marks which are hard to deal with correctly.\r\nPlease use node.get_closest_marker(name) or node.iter_markers(name).\r\nDocs: https://docs.pytest.org/en/latest/mark.html#updating-code\r\n  param_names = parametrize.args[0] if isinstance(parametrize.args[0], (tuple, list)) else [\r\n```\r\n\r\nLine that invokes warning:\r\nhttps://github.com/pytest-dev/pytest-bdd/blob/master/pytest_bdd/reporting.py#L76\r\n\r\nReplacing below (as suggested in warning message):\r\n```\r\nparametrize = node.keywords._markers.get('parametrize')\r\n```\r\nwith:\r\n```\r\nnode.get_marker('parametrize')\r\n```\r\nmakes tests still pass and we get rid of warning however I need to dig deeper into reporting logic to understand if above fix don't break anything. `get_closest_marker` works too.\r\n\r\nTested on:\r\n- `pytest-bdd==3.0.0`\r\n- `pytest==3.9.2`\r\n\r\n\r\nEDIT:\r\n`get_marker` also triggers a warning as it is deprecated too. `get_closest_marker` does not trigger it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/254", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/254/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/254/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/254", "id": 363915890, "node_id": "MDU6SXNzdWUzNjM5MTU4OTA=", "number": 254, "title": "The documentation should include an explanation of how testing of a scenario works", "user": {"login": "sambarluc", "id": 6107558, "node_id": "MDQ6VXNlcjYxMDc1NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6107558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sambarluc", "html_url": "https://github.com/sambarluc", "followers_url": "https://api.github.com/users/sambarluc/followers", "following_url": "https://api.github.com/users/sambarluc/following{/other_user}", "gists_url": "https://api.github.com/users/sambarluc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sambarluc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sambarluc/subscriptions", "organizations_url": "https://api.github.com/users/sambarluc/orgs", "repos_url": "https://api.github.com/users/sambarluc/repos", "events_url": "https://api.github.com/users/sambarluc/events{/privacy}", "received_events_url": "https://api.github.com/users/sambarluc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-26T08:37:38Z", "updated_at": "2019-04-09T19:57:30Z", "closed_at": "2019-04-01T09:55:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In its current form, it is highly unclear what `pytest-bdd` actually does: does it simply generate some python code from a feature file? Does it change how tests are run? How are the `@scenario`, `@given`,... decorators used? I am trying to use `pytest-bdd`, but I resorted to reading the code and doing reverse engineering to understand how to use it.\r\n\r\nAn example: the `@given` decorator makes a `pytest` fixture. This can only be inferred from some examples, or from experimenting/looking at the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/253", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/253/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/253/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/253", "id": 363721805, "node_id": "MDU6SXNzdWUzNjM3MjE4MDU=", "number": 253, "title": "pytest 3.8 generates warnings about directly calling fixtures", "user": {"login": "okken", "id": 1568356, "node_id": "MDQ6VXNlcjE1NjgzNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1568356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/okken", "html_url": "https://github.com/okken", "followers_url": "https://api.github.com/users/okken/followers", "following_url": "https://api.github.com/users/okken/following{/other_user}", "gists_url": "https://api.github.com/users/okken/gists{/gist_id}", "starred_url": "https://api.github.com/users/okken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/okken/subscriptions", "organizations_url": "https://api.github.com/users/okken/orgs", "repos_url": "https://api.github.com/users/okken/repos", "events_url": "https://api.github.com/users/okken/events{/privacy}", "received_events_url": "https://api.github.com/users/okken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-25T18:58:37Z", "updated_at": "2018-10-18T08:59:29Z", "closed_at": "2018-10-18T08:59:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "This rather unfortunately confusing warning occurs with pytest 3.8:\r\n\r\n```\r\n============= warnings summary =================\r\n<path>\\venv\\lib\\site-packages\\pytest_bdd\\scenario.py:228:\\\r\nRemovedInPytest4Warning: Fixture \"pytestbdd_feature_base_dir\" called directly. \\\r\nFixtures are not meant to be called directly, are created automatically when test functions\\\r\nrequest them as parameters. \\\r\nSee https://docs.pytest.org/en/latest/fixture.html for more information.\\\r\n  return call_fixture(getattr(fixtures, fixture))\r\n\r\n<path>\\venv\\lib\\site-packages\\pytest_bdd\\scenario.py:228: \\\r\nRemovedInPytest4Warning: Fixture \"pytestbdd_strict_gherkin\" called directly. \\\r\nFixtures are not meant to be called directly, are created automatically when test functions \\\r\nrequest them as parameters. \\\r\nSee https://docs.pytest.org/en/latest/fixture.html for more information.\r\n  return call_fixture(getattr(fixtures, fixture))\r\n```\r\n\r\nSimple test file for playing with pytest-bdd:\r\n\r\ntry.feature:\r\n```\r\nFeature: One\r\n\r\n  Scenario: First scenario\r\n    Given some state\r\n    When something happens\r\n    Then result should occur\r\n```\r\n\r\ntest_try.py:\r\n```\r\nfrom pytest_bdd import scenario, given, when, then\r\n\r\n@scenario('try.feature', 'First scenario')\r\ndef test_first_scenario():\r\n    pass\r\n\r\n@given(\"some state\")\r\ndef some_state():\r\n    pass\r\n\r\n@when(\"something happens\")\r\ndef something_happens():\r\n    pass\r\n\r\n@then(\"result should occur\")\r\ndef result_should_occur():\r\n    pass\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/251", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/251/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/251/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/251", "id": 348084101, "node_id": "MDU6SXNzdWUzNDgwODQxMDE=", "number": 251, "title": "Issue with parsers.cfparse", "user": {"login": "sruthi24", "id": 25892967, "node_id": "MDQ6VXNlcjI1ODkyOTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/25892967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sruthi24", "html_url": "https://github.com/sruthi24", "followers_url": "https://api.github.com/users/sruthi24/followers", "following_url": "https://api.github.com/users/sruthi24/following{/other_user}", "gists_url": "https://api.github.com/users/sruthi24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sruthi24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sruthi24/subscriptions", "organizations_url": "https://api.github.com/users/sruthi24/orgs", "repos_url": "https://api.github.com/users/sruthi24/repos", "events_url": "https://api.github.com/users/sruthi24/events{/privacy}", "received_events_url": "https://api.github.com/users/sruthi24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-06T21:13:23Z", "updated_at": "2018-08-07T04:26:37Z", "closed_at": "2018-08-07T04:26:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using parsers.cfparse is giving StepDefinitionNotFoundError\r\n\r\n@when(parsers.cfparse('{messages:Number} messages are sent ',\r\n                      extra_types=dict(Number=int)))\r\n\r\n@then(parsers.cfparse('{messages:Number} messages are received by the client',\r\n                      extra_types=dict(Number=int)))\r\n\r\nFeature file has properly defined steps \r\n\r\n\r\n\r\n\r\n**Issue log:**\r\nargname = 'pytestbdd_when_100 messages are sent '\r\n\r\n def _get_active_fixturedef(self, argname):\r\n try:\r\n> return self._fixture_defs[argname]\r\nE KeyError: 'pytestbdd_when_100 messages are sent '\r\n\r\n/usr/local/lib/python3.6/site-packages/_pytest/fixtures.py:520: KeyError\r\n\r\nE pytest_bdd.exceptions.StepDefinitionNotFoundError: Step definition is not found: When \"100 messages are sent \"\r\n\r\n\r\nThis issue started from the last two days . Previously not seeing this with parsers.cfparse. Please help on this", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/250", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/250/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/250/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/250", "id": 348041524, "node_id": "MDU6SXNzdWUzNDgwNDE1MjQ=", "number": 250, "title": "Fixtures not found with pytest 3.7", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-08-06T18:52:51Z", "updated_at": "2018-10-18T11:26:31Z", "closed_at": "2018-10-18T11:26:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "After upgrading from pytest 3.6.4 to 3.7.1, I get this with (I think) pretty much every test:\r\n\r\n```\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/_pytest/fixtures.py:520: in _get_active_fixturedef\r\n    return self._fixture_defs[argname]\r\nE   KeyError: 'pytestbdd_given_I open data/backforward/1.txt'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/pytest_bdd/scenario.py:92: in _find_step_function\r\n    return get_fixture_value(request, get_step_fixture_name(name, step.type, encoding))\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/pytest_bdd/utils.py:36: in get_fixture_value\r\n    return getfixturevalue(name)\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/_pytest/fixtures.py:509: in getfixturevalue\r\n    return self._get_active_fixturedef(argname).cached_result[0]\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/_pytest/fixtures.py:523: in _get_active_fixturedef\r\n    fixturedef = self._getnextfixturedef(argname)\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/_pytest/fixtures.py:382: in _getnextfixturedef\r\n    raise FixtureLookupError(argname, self)\r\nE   _pytest.fixtures.FixtureLookupError: ('pytestbdd_given_I open data/backforward/1.txt', <FixtureRequest for <Function 'test_going_back_in_a_new_tab_without_history'>>)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\ntests/end2end/features/test_backforward_bdd.py:49: in _scenario\r\n    ???\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/pytest_bdd/scenario.py:163: in _execute_scenario\r\n    step_func = _find_step_function(request, step, scenario, encoding=encoding)\r\n.tox/py37-pyqt511/lib/python3.7/site-packages/pytest_bdd/scenario.py:105: in _find_step_function\r\n    feature=scenario.feature,\r\nE   pytest_bdd.exceptions.StepDefinitionNotFoundError: Step definition is not found: Given \"I open data/backforward/1.txt\". Line 47 in scenario \"Going back in a new tab without history\" in the feature \"/home/florian/proj/qutebrowser/git/tests/end2end/features/backforward.feature\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/244", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/244/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/244/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/244", "id": 335049114, "node_id": "MDU6SXNzdWUzMzUwNDkxMTQ=", "number": 244, "title": "Issue with parsers.cfparse  during then statement", "user": {"login": "BonuV", "id": 29787715, "node_id": "MDQ6VXNlcjI5Nzg3NzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/29787715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BonuV", "html_url": "https://github.com/BonuV", "followers_url": "https://api.github.com/users/BonuV/followers", "following_url": "https://api.github.com/users/BonuV/following{/other_user}", "gists_url": "https://api.github.com/users/BonuV/gists{/gist_id}", "starred_url": "https://api.github.com/users/BonuV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BonuV/subscriptions", "organizations_url": "https://api.github.com/users/BonuV/orgs", "repos_url": "https://api.github.com/users/BonuV/repos", "events_url": "https://api.github.com/users/BonuV/events{/privacy}", "received_events_url": "https://api.github.com/users/BonuV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-23T00:00:17Z", "updated_at": "2019-02-17T13:41:06Z", "closed_at": "2019-02-17T13:41:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Stetement 1:\r\n\r\n@then(parsers.cfparse('Threshold value is {state:String}', extra_types=dict(String=str)))\r\ndef test_method(state):\r\n    print(state)\r\n\r\n\r\nStatement 2:\r\n@given(parsers.cfparse('Threshold value is {state:String}', extra_types=dict(String=str)))\r\ndef test_method(state):\r\n    print(state)\r\n\r\n\r\nparameter state is giving an error  when it is is used at \"then \" condition\r\nError:\r\nfixtire state not found\r\n\r\nBut the same is  getting executed successfully when it is used at \"given\"\r\n\r\nAny idea about this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/237", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/237/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/237/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/237", "id": 317751856, "node_id": "MDU6SXNzdWUzMTc3NTE4NTY=", "number": 237, "title": "Replace get_caller_module() with inspect.getmodule(func) in _step_decorator", "user": {"login": "bwalkowi", "id": 16596719, "node_id": "MDQ6VXNlcjE2NTk2NzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/16596719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwalkowi", "html_url": "https://github.com/bwalkowi", "followers_url": "https://api.github.com/users/bwalkowi/followers", "following_url": "https://api.github.com/users/bwalkowi/following{/other_user}", "gists_url": "https://api.github.com/users/bwalkowi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwalkowi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwalkowi/subscriptions", "organizations_url": "https://api.github.com/users/bwalkowi/orgs", "repos_url": "https://api.github.com/users/bwalkowi/repos", "events_url": "https://api.github.com/users/bwalkowi/events{/privacy}", "received_events_url": "https://api.github.com/users/bwalkowi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-25T18:54:23Z", "updated_at": "2019-03-21T15:43:56Z", "closed_at": "2019-03-21T15:43:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to replace get_caller_module() with inspect.getmodule(func) in _step_decorator (steps.py) ?\r\nLately I was trying to implement decorator that would use then and when decorators internally, let's say something like that:\r\n\r\n```\r\ndef wt(name, converters=None):\r\n    when_decorator = when(name, converters)\r\n    then_decorator = then(name, converters)\r\n\r\n    @wraps(wt)\r\n    def decorator(fun):\r\n        return then_decorator(when_decorator(fun))\r\n\r\n    return decorator\r\n```\r\n\r\nBut this is not going to work with current implementation, since _step_decorator will add functions to module I defined wt in (e.g. utils.py) rather than module where I defined my steps.\r\nReplacing get_caller_module() with inspect.getmodule(func) in _step_decorator would fix this behaviour and I believe should not break anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/236", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/236/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/236/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/236", "id": 312909193, "node_id": "MDU6SXNzdWUzMTI5MDkxOTM=", "number": 236, "title": "Documentation error?", "user": {"login": "dfee", "id": 262602, "node_id": "MDQ6VXNlcjI2MjYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/262602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfee", "html_url": "https://github.com/dfee", "followers_url": "https://api.github.com/users/dfee/followers", "following_url": "https://api.github.com/users/dfee/following{/other_user}", "gists_url": "https://api.github.com/users/dfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfee/subscriptions", "organizations_url": "https://api.github.com/users/dfee/orgs", "repos_url": "https://api.github.com/users/dfee/repos", "events_url": "https://api.github.com/users/dfee/events{/privacy}", "received_events_url": "https://api.github.com/users/dfee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-10T12:52:59Z", "updated_at": "2019-02-17T17:17:21Z", "closed_at": "2019-02-17T17:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest-bdd#given-step-scope\r\n\r\n\"For this example, step function for 'I have an article' given step will be executed once even though there are 2 scenarios using it.\"\r\n\r\nIt appears there is only one scenario using it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/233", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/233/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/233/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/233", "id": 290888772, "node_id": "MDU6SXNzdWUyOTA4ODg3NzI=", "number": 233, "title": "Scenarios collection process", "user": {"login": "anxuae", "id": 25277953, "node_id": "MDQ6VXNlcjI1Mjc3OTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/25277953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anxuae", "html_url": "https://github.com/anxuae", "followers_url": "https://api.github.com/users/anxuae/followers", "following_url": "https://api.github.com/users/anxuae/following{/other_user}", "gists_url": "https://api.github.com/users/anxuae/gists{/gist_id}", "starred_url": "https://api.github.com/users/anxuae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anxuae/subscriptions", "organizations_url": "https://api.github.com/users/anxuae/orgs", "repos_url": "https://api.github.com/users/anxuae/repos", "events_url": "https://api.github.com/users/anxuae/events{/privacy}", "received_events_url": "https://api.github.com/users/anxuae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-23T15:52:06Z", "updated_at": "2018-05-18T07:28:23Z", "closed_at": "2018-05-18T07:28:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThis is not really an issue, but rather a question about architecture of _pytest-bdd_:\r\n\r\nWhy the tests in *.features files are not collected during the collection process of _pytest_ ? ( [implement the collection of non-python tests](https://docs.pytest.org/en/latest/example/nonpython.html) would also prevent the use of _**scenarios()**_ function)\r\n\r\nThe current architecture break the philosophy of _pytest_ collection and make _pytest-bdd_ less integrable with other _pytest_ plugins IMHO.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/231", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/231/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/231/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/231", "id": 290341989, "node_id": "MDU6SXNzdWUyOTAzNDE5ODk=", "number": 231, "title": "Step arguments don't work", "user": {"login": "jeteon", "id": 4679893, "node_id": "MDQ6VXNlcjQ2Nzk4OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4679893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeteon", "html_url": "https://github.com/jeteon", "followers_url": "https://api.github.com/users/jeteon/followers", "following_url": "https://api.github.com/users/jeteon/following{/other_user}", "gists_url": "https://api.github.com/users/jeteon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeteon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeteon/subscriptions", "organizations_url": "https://api.github.com/users/jeteon/orgs", "repos_url": "https://api.github.com/users/jeteon/repos", "events_url": "https://api.github.com/users/jeteon/events{/privacy}", "received_events_url": "https://api.github.com/users/jeteon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-22T03:37:46Z", "updated_at": "2018-01-22T05:32:59Z", "closed_at": "2018-01-22T05:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a pretty basic setup with a feature file:\r\n\r\n```gherkin\r\nFeature: First feature\r\n\r\nScenario: One\r\nGiven that one thing\r\nWhen something\r\nThen another thing\r\n```\r\n\r\nAnd a test file:\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport pytest\r\n\r\nfrom pytest_bdd import given, scenario, then, when, parsers\r\n\r\n\r\n@scenario('first.feature', 'One')\r\ndef test1():\r\n\treturn\r\n\r\n@given(parsers.parse('that {num:S} thing'))\r\ndef given1(num):\r\n\tprint num\r\n\treturn\r\n\r\n@when('something')\r\ndef when1():\r\n\treturn\r\n\r\n@then('another thing')\r\ndef then1():\r\n\treturn\r\n```\r\n\r\nWhich uses a parameterised form for the given step, when I try to run this test I get the failure message:\r\n\r\n```\r\n============================================ test session starts =============================================\r\nplatform darwin -- Python 2.7.10, pytest-3.3.2, py-1.5.2, pluggy-0.6.0\r\nrootdir: /private/tmp/pytestbdd, inifile:\r\nplugins: bdd-2.19.0\r\ncollected 1 item                                                                                             \r\n\r\ntest.py F                                                                                              [100%]\r\n\r\n================================================== FAILURES ==================================================\r\n___________________________________________________ test1 ____________________________________________________\r\n\r\nrequest = <FixtureRequest for <Function 'test1'>>\r\n\r\n    @scenario('first.feature', 'One')\r\n>   def test1():\r\n\r\ntest.py:9: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nvenv/lib/python2.7/site-packages/pytest_bdd/scenario.py:163: in _execute_scenario\r\n    step_func = _find_step_function(request, step, scenario, encoding=encoding)\r\nvenv/lib/python2.7/site-packages/pytest_bdd/scenario.py:95: in _find_step_function\r\n    name = find_argumented_step_fixture_name(name, step.type, request._fixturemanager, request)\r\nvenv/lib/python2.7/site-packages/pytest_bdd/scenario.py:70: in find_argumented_step_fixture_name\r\n    inject_fixture(request, arg, value)\r\nvenv/lib/python2.7/site-packages/pytest_bdd/steps.py:307: in inject_fixture\r\n    old_value = get_fixture_value_raw(request, arg)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nrequest = <FixtureRequest for <Function 'test1'>>, name = 'num'\r\n\r\n    def get_fixture_value_raw(request, name):\r\n        \"\"\"Set the given raw fixture value from the pytest request object.\"\"\"\r\n        try:\r\n            return request._fixture_values.get(name)\r\n        except AttributeError:\r\n>           return request._funcargs.get(name)\r\nE           AttributeError: 'FixtureRequest' object has no attribute '_funcargs'\r\n\r\nvenv/lib/python2.7/site-packages/pytest_bdd/utils.py:44: AttributeError\r\n========================================== 1 failed in 0.04 seconds ==========================================\r\n```\r\n\r\nIs there something I missed with the examples about parameters in given steps? I get this same error with the regex parser too. I tried `grep` on my entire Python library directory and the strings \"_fixture_values\" and \"_funcargs\" only appear in this one file in this package so I can't yet see why this function would expect the attributes to exist. Did I maybe miss something about version incompatibility?\r\n\r\nThis is with `pytest-bdd 2.19.0` and `pytest-3.3.2` running `python 2.7.10` on a `Mac OS 10.13.2`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/229", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/229/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/229/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/229", "id": 286240623, "node_id": "MDU6SXNzdWUyODYyNDA2MjM=", "number": 229, "title": "pytest 3.3.2 breaks pytest-bdd?", "user": {"login": "alexntt", "id": 6974884, "node_id": "MDQ6VXNlcjY5NzQ4ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6974884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexntt", "html_url": "https://github.com/alexntt", "followers_url": "https://api.github.com/users/alexntt/followers", "following_url": "https://api.github.com/users/alexntt/following{/other_user}", "gists_url": "https://api.github.com/users/alexntt/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexntt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexntt/subscriptions", "organizations_url": "https://api.github.com/users/alexntt/orgs", "repos_url": "https://api.github.com/users/alexntt/repos", "events_url": "https://api.github.com/users/alexntt/events{/privacy}", "received_events_url": "https://api.github.com/users/alexntt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-05T09:52:13Z", "updated_at": "2018-02-13T13:11:04Z", "closed_at": "2018-02-13T13:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our pytest-bdd tests are failing since pytest 3.3.2 got pushed out, we get stuff like:\r\n\r\n```\r\n_____________________________ test_notified_backup _____________________________\r\n\r\nrequest = <FixtureRequest for <Function 'test_notified_backup'>>\r\n\r\n    @bdd.scenario('backup_execution_stored.feature', 'Notified backup')\r\n>   def test_notified_backup():\r\n\r\nacceptance/backups/test_backup_execution_stored.py:16: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python2.7/site-packages/pytest_bdd/scenario.py:163: in _execute_scenario\r\n    step_func = _find_step_function(request, step, scenario, encoding=encoding)\r\n/usr/local/lib/python2.7/site-packages/pytest_bdd/scenario.py:95: in _find_step_function\r\n    name = find_argumented_step_fixture_name(name, step.type, request._fixturemanager, request)\r\n/usr/local/lib/python2.7/site-packages/pytest_bdd/scenario.py:70: in find_argumented_step_fixture_name\r\n    inject_fixture(request, arg, value)\r\n/usr/local/lib/python2.7/site-packages/pytest_bdd/steps.py:307: in inject_fixture\r\n    old_value = get_fixture_value_raw(request, arg)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nrequest = <FixtureRequest for <Function 'test_notified_backup'>>\r\nname = 'status'\r\n\r\n    def get_fixture_value_raw(request, name):\r\n        \"\"\"Set the given raw fixture value from the pytest request object.\"\"\"\r\n        try:\r\n            return request._fixture_values.get(name)\r\n        except AttributeError:\r\n>           return request._funcargs.get(name)\r\nE           AttributeError: 'FixtureRequest' object has no attribute '_funcargs'\r\n\r\n/usr/local/lib/python2.7/site-packages/pytest_bdd/utils.py:44: AttributeError\r\n```\r\n\r\n. although I can't see anything ringing a bell on:\r\n\r\nhttps://docs.pytest.org/en/latest/changelog.html#pytest-3-3-2-2017-12-25\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/228", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/228/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/228/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/228", "id": 277227557, "node_id": "MDU6SXNzdWUyNzcyMjc1NTc=", "number": 228, "title": "Function reusage for different step types of the same step name", "user": {"login": "poliarush", "id": 325722, "node_id": "MDQ6VXNlcjMyNTcyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/325722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliarush", "html_url": "https://github.com/poliarush", "followers_url": "https://api.github.com/users/poliarush/followers", "following_url": "https://api.github.com/users/poliarush/following{/other_user}", "gists_url": "https://api.github.com/users/poliarush/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliarush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliarush/subscriptions", "organizations_url": "https://api.github.com/users/poliarush/orgs", "repos_url": "https://api.github.com/users/poliarush/repos", "events_url": "https://api.github.com/users/poliarush/events{/privacy}", "received_events_url": "https://api.github.com/users/poliarush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-28T01:30:08Z", "updated_at": "2017-12-05T14:05:12Z", "closed_at": "2017-12-05T03:39:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Namely i need to use one step on different levels. However steps aliases are working only for given only, or for when and then. \r\n\r\nThis code doesn't work:\r\n```\r\n@given(\"I'm an author user\")\r\n@when(\"I'm an author user\")\r\n@then(\"I'm an author user\")\r\ndef author_user(auth, author):\r\n    auth['user'] = author.user\r\n```\r\nHowever this code is working fine:\r\n```\r\n@when(\"I'm an author user\")\r\n@then(\"I'm an author user\")\r\ndef author_user(auth, author):\r\n    auth['user'] = author.user\r\n```\r\n\r\nPlease suggest how to fix this. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/224", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/224/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/224/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/224", "id": 263079303, "node_id": "MDU6SXNzdWUyNjMwNzkzMDM=", "number": 224, "title": "Compatibility issue with latest pytest versions", "user": {"login": "neg3ntropy", "id": 1849552, "node_id": "MDQ6VXNlcjE4NDk1NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1849552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neg3ntropy", "html_url": "https://github.com/neg3ntropy", "followers_url": "https://api.github.com/users/neg3ntropy/followers", "following_url": "https://api.github.com/users/neg3ntropy/following{/other_user}", "gists_url": "https://api.github.com/users/neg3ntropy/gists{/gist_id}", "starred_url": "https://api.github.com/users/neg3ntropy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neg3ntropy/subscriptions", "organizations_url": "https://api.github.com/users/neg3ntropy/orgs", "repos_url": "https://api.github.com/users/neg3ntropy/repos", "events_url": "https://api.github.com/users/neg3ntropy/events{/privacy}", "received_events_url": "https://api.github.com/users/neg3ntropy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-05T10:44:56Z", "updated_at": "2017-11-12T18:25:46Z", "closed_at": "2017-10-05T10:56:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since pytest 3.1.0 (currently at 3.2.3) pytest-bdd breaks in [cookiecutter-qa](https://github.com/tierratelematics/cookiecutter-qa/pull/164) with:\r\n```\r\n_pytest.vendored_packages.pluggy.PluginValidationError: unknown hook 'pytest_bdd' in plugin <module 'project_qa.tests.functional.conftest' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f035b2d4f28>)>\r\n```\r\nUp to version 3.0.7 this does not happen.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/217", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/217/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/217/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/217", "id": 230106468, "node_id": "MDU6SXNzdWUyMzAxMDY0Njg=", "number": 217, "title": "relax strict gherkin not set prior to feature discovery", "user": {"login": "micheletest", "id": 1161578, "node_id": "MDQ6VXNlcjExNjE1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1161578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheletest", "html_url": "https://github.com/micheletest", "followers_url": "https://api.github.com/users/micheletest/followers", "following_url": "https://api.github.com/users/micheletest/following{/other_user}", "gists_url": "https://api.github.com/users/micheletest/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheletest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheletest/subscriptions", "organizations_url": "https://api.github.com/users/micheletest/orgs", "repos_url": "https://api.github.com/users/micheletest/repos", "events_url": "https://api.github.com/users/micheletest/events{/privacy}", "received_events_url": "https://api.github.com/users/micheletest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-19T22:42:28Z", "updated_at": "2017-05-22T15:06:02Z", "closed_at": "2017-05-22T15:06:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use the relax strict gherkin fixture. This fixture is not being set and therefore my test is erroring with ```pytest_bdd.exceptions.FeatureError: When steps must be the first or follow Given steps.```\r\n\r\nI have tried placing the pytestbdd_strict_gherkin fixture in my tests/conftest.py to relax it for every test and in my tests/specific_feature/conftest.py to relax it for a feature. I've also tried to put it in the test file to relax it just for that test. None of the methods I've tried have worked.\r\n\r\n```\r\nenv/lib/python3.4/site-packages/pytest_bdd/scenario.py:303: in scenario\r\n    feature = Feature.get_feature(base_path, feature_name, encoding=encoding, strict_gherkin=strict_gherkin)\r\nenv/lib/python3.4/site-packages/pytest_bdd/feature.py:409: in get_feature\r\n    feature = Feature(base_path, filename, encoding=encoding, strict_gherkin=strict_gherkin)\r\nenv/lib/python3.4/site-packages/pytest_bdd/feature.py:318: in __init__\r\n    \"When steps must be the first or follow Given steps\", line_number, clean_line, filename)\r\nE   pytest_bdd.exceptions.FeatureError: When steps must be the first or follow Given steps.\r\nE   Line number: 40.\r\n```\r\n\r\nIs this a usage error on my part? Or does this not work?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/213", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/213/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/213/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/213", "id": 224402310, "node_id": "MDU6SXNzdWUyMjQ0MDIzMTA=", "number": 213, "title": "Sphinxcontrib-napoleon is not able to generate the documentation", "user": {"login": "rikirenz", "id": 4679712, "node_id": "MDQ6VXNlcjQ2Nzk3MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4679712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rikirenz", "html_url": "https://github.com/rikirenz", "followers_url": "https://api.github.com/users/rikirenz/followers", "following_url": "https://api.github.com/users/rikirenz/following{/other_user}", "gists_url": "https://api.github.com/users/rikirenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rikirenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rikirenz/subscriptions", "organizations_url": "https://api.github.com/users/rikirenz/orgs", "repos_url": "https://api.github.com/users/rikirenz/repos", "events_url": "https://api.github.com/users/rikirenz/events{/privacy}", "received_events_url": "https://api.github.com/users/rikirenz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-26T09:28:29Z", "updated_at": "2017-04-27T08:02:03Z", "closed_at": "2017-04-27T08:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that Sphinxcontrib-napoleon is not able to generate the documentation for the functions with the `pytest-bdd` decorators.\r\n\r\nThese are the packages versions:\r\n``` bash\r\npytest-bdd==2.18.1\r\nsphinxcontrib-napoleon==0.6.1\r\n```\r\n\r\nThis is the stack trace:\r\n\r\n``` bash\r\n$ make -C docs html  \r\nmake: Entering directory `/code/docs'\r\nsphinx-apidoc -f -o _source ../inspirehep; \\\r\nrm -f _source/modules.rst; \\\r\nsphinx-build -w documentation_errors.log -b html -d _build/doctrees   . _build/html\r\nCreating file _source/inspirehep.rst.\r\nCreating file _source/inspirehep.bat.rst.\r\nCreating file _source/inspirehep.bat.pages.rst.\r\nCreating file _source/inspirehep.bat.steps.rst.\r\nCreating file _source/inspirehep.dojson.rst.\r\nCreating file _source/inspirehep.dojson.common.rst.\r\nCreating file _source/inspirehep.dojson.conferences.rst.\r\nCreating file _source/inspirehep.dojson.data.rst.\r\nCreating file _source/inspirehep.dojson.experiments.rst.\r\nCreating file _source/inspirehep.dojson.hep.rst.\r\nCreating file _source/inspirehep.dojson.hep.rules.rst.\r\nCreating file _source/inspirehep.dojson.hepnames.rst.\r\nCreating file _source/inspirehep.dojson.institutions.rst.\r\nCreating file _source/inspirehep.dojson.jobs.rst.\r\nCreating file _source/inspirehep.dojson.journals.rst.\r\nCreating file _source/inspirehep.dojson.utils.rst.\r\nCreating file _source/inspirehep.modules.rst.\r\nCreating file _source/inspirehep.modules.api.rst.\r\nCreating file _source/inspirehep.modules.api.v1.rst.\r\nCreating file _source/inspirehep.modules.arxiv.rst.\r\nCreating file _source/inspirehep.modules.authors.rst.\r\nCreating file _source/inspirehep.modules.authors.dojson.rst.\r\nCreating file _source/inspirehep.modules.authors.dojson.fields.rst.\r\nCreating file _source/inspirehep.modules.authors.rest.rst.\r\nCreating file _source/inspirehep.modules.authors.views.rst.\r\nCreating file _source/inspirehep.modules.cache.rst.\r\nCreating file _source/inspirehep.modules.converter.rst.\r\nCreating file _source/inspirehep.modules.crossref.rst.\r\nCreating file _source/inspirehep.modules.disambiguation.rst.\r\nCreating file _source/inspirehep.modules.fixtures.rst.\r\nCreating file _source/inspirehep.modules.forms.rst.\r\nCreating file _source/inspirehep.modules.forms.fields.rst.\r\nCreating file _source/inspirehep.modules.forms.validators.rst.\r\nCreating file _source/inspirehep.modules.hal.rst.\r\nCreating file _source/inspirehep.modules.literaturesuggest.rst.\r\nCreating file _source/inspirehep.modules.literaturesuggest.fields.rst.\r\nCreating file _source/inspirehep.modules.migrator.rst.\r\nCreating file _source/inspirehep.modules.migrator.tasks.rst.\r\nCreating file _source/inspirehep.modules.orcid.rst.\r\nCreating file _source/inspirehep.modules.pidstore.rst.\r\nCreating file _source/inspirehep.modules.records.rst.\r\nCreating file _source/inspirehep.modules.records.mappings.rst.\r\nCreating file _source/inspirehep.modules.records.serializers.rst.\r\nCreating file _source/inspirehep.modules.records.serializers.schemas.rst.\r\nCreating file _source/inspirehep.modules.references.rst.\r\nCreating file _source/inspirehep.modules.search.rst.\r\nCreating file _source/inspirehep.modules.search.walkers.rst.\r\nCreating file _source/inspirehep.modules.theme.rst.\r\nCreating file _source/inspirehep.modules.tools.rst.\r\nCreating file _source/inspirehep.modules.workflows.rst.\r\nCreating file _source/inspirehep.modules.workflows.actions.rst.\r\nCreating file _source/inspirehep.modules.workflows.mappings.rst.\r\nCreating file _source/inspirehep.modules.workflows.tasks.rst.\r\nCreating file _source/inspirehep.modules.workflows.views.rst.\r\nCreating file _source/inspirehep.modules.workflows.workflows.rst.\r\nCreating file _source/inspirehep.utils.rst.\r\nCreating file _source/modules.rst.\r\nRunning Sphinx v1.5.5\r\nloading pickled environment... failed: source directory has changed\r\nloading intersphinx inventory from https://docs.python.org/objects.inv...\r\nintersphinx inventory has moved: https://docs.python.org/objects.inv -> https://docs.python.org/2/objects.inv\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [html]: targets for 65 source files that are out of date\r\nupdating environment: 65 added, 0 changed, 0 removed\r\nreading sources... [100%] tools                                                                     \r\n/code/docs/_source/inspirehep.bat.steps.rst:10: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.given::pytestbdd_given_I am logged in')\r\n/code/docs/_source/inspirehep.bat.steps.rst:10: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.given::pytestbdd_given_I am logged in' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:18: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.then::pytestbdd_then_I should see {expected_data} in the input box with id {field_id}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:18: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.then::pytestbdd_then_I should see {expected_data} in the input box with id {field_id}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.when::pytestbdd_when_I click on the button with id {button_id}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.when::pytestbdd_when_I click on the button with id {button_id}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.when::pytestbdd_when_I click on the link with text {text_value}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.when::pytestbdd_when_I click on the link with text {text_value}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.when::pytestbdd_when_I insert <input> in the input box with id {field_id}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.when::pytestbdd_when_I insert <input> in the input box with id {field_id}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.when::pytestbdd_when_I insert {input_autocompletion} in the autocomplete input box with id {autocompletion_field}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.when::pytestbdd_when_I insert {input_autocompletion} in the autocomplete input box with id {autocompletion_field}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.when::pytestbdd_when_I insert {input} in the input box with id {field_id}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.when::pytestbdd_when_I insert {input} in the input box with id {field_id}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: invalid signature for autofunction (u'inspirehep.bat.steps.when::pytestbdd_when_I select the value {input_select} in the select box with id {field_id}')\r\n/code/docs/_source/inspirehep.bat.steps.rst:26: WARNING: don't know which module to import for autodocumenting u'inspirehep.bat.steps.when::pytestbdd_when_I select the value {input_select} in the select box with id {field_id}' (try placing a \"module\" or \"currentmodule\" directive in the document, or giving an explicit module name)\r\nlooking for now-outdated files... none found\r\npickling environment... done\r\nchecking consistency... done\r\npreparing documents... done\r\nwriting output... [100%] tools                                                                      \r\ngenerating indices... genindex py-modindex\r\nhighlighting module code... [100%] wtforms.fields.core                                              \r\nwriting additional pages... search\r\ncopying images... [100%] images/xquartz_security.jpg                                                \r\ncopying static files... done\r\ncopying extra files... done\r\ndumping search index in English (code: en) ... done\r\ndumping object inventory... done\r\nbuild succeeded, 16 warnings.\r\nBuild Failed. Check documentation_errors.log file for details.\r\nmake: *** [html] Error 1\r\nmake: Leaving directory `/code/docs'\r\n```\r\n\r\nDo you have any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/212", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/212/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/212/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/212", "id": 223964829, "node_id": "MDU6SXNzdWUyMjM5NjQ4Mjk=", "number": 212, "title": "when step couldn't be found as a fixture", "user": {"login": "junpengl", "id": 10250392, "node_id": "MDQ6VXNlcjEwMjUwMzky", "avatar_url": "https://avatars0.githubusercontent.com/u/10250392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpengl", "html_url": "https://github.com/junpengl", "followers_url": "https://api.github.com/users/junpengl/followers", "following_url": "https://api.github.com/users/junpengl/following{/other_user}", "gists_url": "https://api.github.com/users/junpengl/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpengl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpengl/subscriptions", "organizations_url": "https://api.github.com/users/junpengl/orgs", "repos_url": "https://api.github.com/users/junpengl/repos", "events_url": "https://api.github.com/users/junpengl/events{/privacy}", "received_events_url": "https://api.github.com/users/junpengl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-04-24T22:04:38Z", "updated_at": "2020-08-17T07:10:25Z", "closed_at": "2017-05-01T10:29:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I not sure if this is a bug or it is supposed to be like this. I found that the \"When\" step can't be used as a fixture. \r\n\r\nFeature file:\r\n```\r\nScenario: Arguments for given, when, thens\r\n    Given there are 5 cucumbers\r\n\r\n    When I eat 3 cucumbers\r\n    And I eat 2 cucumbers\r\n\r\n    Then I should have 0 cucumbers\r\n```\r\n\r\nTest file:\r\n```\r\nfrom pytest_bdd import scenario, given, when, then, parsers\r\n\r\n\r\n@scenario('arguments.feature', 'Arguments for given, when, thens')\r\ndef test_arguments():\r\n    pass\r\n\r\n\r\n@given(parsers.parse('there are {start:d} cucumbers'))\r\ndef start_cucumbers(start):\r\n    return dict(start=start, eat=0)\r\n\r\n\r\n@when(parsers.parse('I eat {eat:d} cucumbers'))\r\ndef eat_cucumbers(start_cucumbers, eat):\r\n    start_cucumbers['eat'] += eat\r\n    return 5\r\n\r\n\r\n@then(parsers.parse('I should have {left:d} cucumbers'))\r\ndef should_have_left_cucumbers(start_cucumbers, eat_cucumbers, start, left):\r\n    assert start_cucumbers['start'] == start\r\n    assert start - start_cucumbers['eat'] == left\r\n```\r\nWhen I ran code above, I receive \r\n\r\n>   @scenario('arguments.feature', 'Arguments for given, when, thens')\r\n  def test_arguments():\r\nE       fixture 'eat_cucumbers' not found\r\n\r\nIf I changed the when step to a given step then it is fine. Is \"when\" step not supposed to be used as a fixture?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/210", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/210/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/210/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/210", "id": 220952796, "node_id": "MDU6SXNzdWUyMjA5NTI3OTY=", "number": 210, "title": "Undocumented check for Background section", "user": {"login": "skraynev", "id": 3016242, "node_id": "MDQ6VXNlcjMwMTYyNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3016242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skraynev", "html_url": "https://github.com/skraynev", "followers_url": "https://api.github.com/users/skraynev/followers", "following_url": "https://api.github.com/users/skraynev/following{/other_user}", "gists_url": "https://api.github.com/users/skraynev/gists{/gist_id}", "starred_url": "https://api.github.com/users/skraynev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skraynev/subscriptions", "organizations_url": "https://api.github.com/users/skraynev/orgs", "repos_url": "https://api.github.com/users/skraynev/repos", "events_url": "https://api.github.com/users/skraynev/events{/privacy}", "received_events_url": "https://api.github.com/users/skraynev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-11T13:32:19Z", "updated_at": "2017-05-01T10:25:31Z", "closed_at": "2017-05-01T10:25:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a patch about improving handling definition steps outside of sections: https://github.com/pytest-dev/pytest-bdd/commit/cc87b5b0ddfb4cff81b53ab323bc237e9452dcfe\r\n\r\nCheck in this patch leads to error for situation, when I try to create Background section in the following way:\r\nBackground:\r\n     When ..........\r\n     And ......\r\nSo using \"And\" Step is prohibited after \"When\" in \"Background\". (It works when I use \"Given\" instead of \"When\" in this section).\r\n\r\nI can not find any explanation in documentation why it was changed. Could you please add some note about it in documentation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/209", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/209/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/209/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/209", "id": 219648068, "node_id": "MDU6SXNzdWUyMTk2NDgwNjg=", "number": 209, "title": "Import steps from other modules", "user": {"login": "rikirenz", "id": 4679712, "node_id": "MDQ6VXNlcjQ2Nzk3MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4679712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rikirenz", "html_url": "https://github.com/rikirenz", "followers_url": "https://api.github.com/users/rikirenz/followers", "following_url": "https://api.github.com/users/rikirenz/following{/other_user}", "gists_url": "https://api.github.com/users/rikirenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rikirenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rikirenz/subscriptions", "organizations_url": "https://api.github.com/users/rikirenz/orgs", "repos_url": "https://api.github.com/users/rikirenz/repos", "events_url": "https://api.github.com/users/rikirenz/events{/privacy}", "received_events_url": "https://api.github.com/users/rikirenz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-05T16:51:05Z", "updated_at": "2019-05-21T19:11:20Z", "closed_at": "2017-04-06T09:31:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my tree:\r\n```\r\nexternal_module/\r\n     helpers.py\r\ntests/\r\n    conftest.py\r\n    test_bar.py\r\n    bar.feature\r\n```\r\n\r\nI have this natural language test ( `tests/bar.feature` ):\r\n``` Python\r\nScenario: it is a foo scenario\r\n  Given I am logged in\r\n  [...]\r\n```\r\n\r\nI have in test module the following function (`tests/test_bar.py`):\r\n``` Python\r\nfrom helpers import log_in\r\n@scenario('bar.feature', 'it is a foo scenario')\r\ndef test_foo():\r\n    pass\r\n```\r\n\r\nAnd in a external module I have this step function (`external_module/helpers.py`):\r\n``` Python\r\n@given('I am logged in')\r\ndef login():\r\n    print('foo')\r\n```\r\n\r\nIf I try to execute the test but I receive this error:\r\n``` Bash\r\nStepDefinitionNotFoundError: Step definition is not found: Given \"I am logged in\". Line 249 in scenario \"it is a foo scenario\" in the feature \"/code/tests/bar.feature\r\n```\r\n\r\nDo you think there is a way to define a step function in a module that does not contain the `@scenario` function and make the test work?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/208", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/208/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/208/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/208", "id": 218634647, "node_id": "MDU6SXNzdWUyMTg2MzQ2NDc=", "number": 208, "title": "Simpler README example", "user": {"login": "jtpereyda", "id": 244969, "node_id": "MDQ6VXNlcjI0NDk2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/244969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtpereyda", "html_url": "https://github.com/jtpereyda", "followers_url": "https://api.github.com/users/jtpereyda/followers", "following_url": "https://api.github.com/users/jtpereyda/following{/other_user}", "gists_url": "https://api.github.com/users/jtpereyda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtpereyda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtpereyda/subscriptions", "organizations_url": "https://api.github.com/users/jtpereyda/orgs", "repos_url": "https://api.github.com/users/jtpereyda/repos", "events_url": "https://api.github.com/users/jtpereyda/events{/privacy}", "received_events_url": "https://api.github.com/users/jtpereyda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-31T22:42:47Z", "updated_at": "2017-04-04T18:47:20Z", "closed_at": "2017-04-04T18:47:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The first example on the README page requires another external library. I didn't look closely enough and spent a long time trying to figure out where all the fixtures were coming from.\r\n\r\nI hit this issue last time I spun up with pytest-bdd. I think an initial README example that doesn't require external libraries might be better for initial understanding.\r\n\r\nOf course, on the other hand, the front page example is really cool in what it can do.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/206", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/206/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/206/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/206", "id": 203682292, "node_id": "MDU6SXNzdWUyMDM2ODIyOTI=", "number": 206, "title": "Error when launching the first example", "user": {"login": "remyleone", "id": 300834, "node_id": "MDQ6VXNlcjMwMDgzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/300834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remyleone", "html_url": "https://github.com/remyleone", "followers_url": "https://api.github.com/users/remyleone/followers", "following_url": "https://api.github.com/users/remyleone/following{/other_user}", "gists_url": "https://api.github.com/users/remyleone/gists{/gist_id}", "starred_url": "https://api.github.com/users/remyleone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remyleone/subscriptions", "organizations_url": "https://api.github.com/users/remyleone/orgs", "repos_url": "https://api.github.com/users/remyleone/repos", "events_url": "https://api.github.com/users/remyleone/events{/privacy}", "received_events_url": "https://api.github.com/users/remyleone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-27T16:40:11Z", "updated_at": "2017-01-27T17:32:19Z", "closed_at": "2017-01-27T17:32:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to launch the first example in the README but I get the following error:\r\n\r\n  @given(\"I'm an author user\")\r\n  def author_user(auth, author):\r\nE       fixture 'auth' not found\r\n\r\nWhere this auth fixtures is available? I have splinter installed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/202", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/202/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/202/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/202", "id": 189681429, "node_id": "MDU6SXNzdWUxODk2ODE0Mjk=", "number": 202, "title": "--gherkin-terminal-reporter does not print examples data in outline scenario", "user": {"login": "smoustaj", "id": 20581644, "node_id": "MDQ6VXNlcjIwNTgxNjQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/20581644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoustaj", "html_url": "https://github.com/smoustaj", "followers_url": "https://api.github.com/users/smoustaj/followers", "following_url": "https://api.github.com/users/smoustaj/following{/other_user}", "gists_url": "https://api.github.com/users/smoustaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoustaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoustaj/subscriptions", "organizations_url": "https://api.github.com/users/smoustaj/orgs", "repos_url": "https://api.github.com/users/smoustaj/repos", "events_url": "https://api.github.com/users/smoustaj/events{/privacy}", "received_events_url": "https://api.github.com/users/smoustaj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-16T11:53:39Z", "updated_at": "2018-04-04T13:59:30Z", "closed_at": "2018-04-04T13:59:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using to run my test the amazing command \" --gherkin-terminal-reporter \"; \r\n\r\nUnfortunately it seems that actually it prints good scenario steps; but not their examples data.\r\n\r\nHere is an example:\r\n\r\nSuppose this is my scenario:\r\n\r\n\r\n```\r\nFeature: Login\r\n    Scenario Outline: Login as a user\r\n        Given I log in as <user>\r\n        Then login done\r\n  \r\n   Examples:\r\n       | user      |\r\n       | user_one  |\r\n       | user_two  |\r\n\r\n```\r\n\r\n\r\n=> My Actual printed result is:\r\n```\r\n\r\nFeature: Login\r\n    Scenario: Login as a user\r\n        Given I log in as <user>\r\n        Then login done\r\nPASSED\r\n\r\nFeature: Login\r\n    Scenario: Login as a user\r\n        Given I log in as <user>\r\n        Then login done\r\nPASSED\r\n \r\n\r\n```\r\n\r\n\r\n=> Desired result:\r\n```\r\n\r\nFeature: Login\r\n    Scenario: Login as a user\r\n        Given I log in as user_one \r\n        Then login done\r\nPASSED\r\n\r\nFeature: Login\r\n    Scenario: Login as a user\r\n        Given I log in as user_two\r\n        Then login done\r\nPASSED\r\n \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/201", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/201/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/201/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/201", "id": 188331405, "node_id": "MDU6SXNzdWUxODgzMzE0MDU=", "number": 201, "title": "`But` keyword should be supported", "user": {"login": "jangeroo", "id": 5023165, "node_id": "MDQ6VXNlcjUwMjMxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5023165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jangeroo", "html_url": "https://github.com/jangeroo", "followers_url": "https://api.github.com/users/jangeroo/followers", "following_url": "https://api.github.com/users/jangeroo/following{/other_user}", "gists_url": "https://api.github.com/users/jangeroo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jangeroo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jangeroo/subscriptions", "organizations_url": "https://api.github.com/users/jangeroo/orgs", "repos_url": "https://api.github.com/users/jangeroo/repos", "events_url": "https://api.github.com/users/jangeroo/events{/privacy}", "received_events_url": "https://api.github.com/users/jangeroo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-09T19:26:57Z", "updated_at": "2018-01-23T19:43:45Z", "closed_at": "2018-01-23T19:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Standard Gherkin (see https://cucumber.io/docs/reference) uses an additional keyword `But` that functions identically to `And`, but the contrasting nature of the word can often make scenarios slightly more readable. This is not currently supported by Pytest-bdd, but since `And` is already supported, I imagine supporting `But` as well would be trivial. This does however allow for better specifications.\r\n\r\nNote: Cucumber also supports using `*` as a stand-in for `And` or `But`. It functions exactly the same way as both of those.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/192", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/192/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/192/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/192", "id": 168389299, "node_id": "MDU6SXNzdWUxNjgzODkyOTk=", "number": 192, "title": "Gherkin file auto completion of available steps ", "user": {"login": "sitcons", "id": 7419413, "node_id": "MDQ6VXNlcjc0MTk0MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7419413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sitcons", "html_url": "https://github.com/sitcons", "followers_url": "https://api.github.com/users/sitcons/followers", "following_url": "https://api.github.com/users/sitcons/following{/other_user}", "gists_url": "https://api.github.com/users/sitcons/gists{/gist_id}", "starred_url": "https://api.github.com/users/sitcons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sitcons/subscriptions", "organizations_url": "https://api.github.com/users/sitcons/orgs", "repos_url": "https://api.github.com/users/sitcons/repos", "events_url": "https://api.github.com/users/sitcons/events{/privacy}", "received_events_url": "https://api.github.com/users/sitcons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-29T18:47:53Z", "updated_at": "2018-02-13T12:43:05Z", "closed_at": "2018-02-13T12:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\nPardon silly question as I new to python and this pytest-bdd.\nGherkin file auto completion of available steps seems to be not working for me.\nWhile it did worked on behave.\nAny thoughts what it might be.\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/187", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/187/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/187/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/187", "id": 161601393, "node_id": "MDU6SXNzdWUxNjE2MDEzOTM=", "number": 187, "title": "Error when using pytest-bdd and pytest-django", "user": {"login": "gilmrjc", "id": 13374704, "node_id": "MDQ6VXNlcjEzMzc0NzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/13374704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilmrjc", "html_url": "https://github.com/gilmrjc", "followers_url": "https://api.github.com/users/gilmrjc/followers", "following_url": "https://api.github.com/users/gilmrjc/following{/other_user}", "gists_url": "https://api.github.com/users/gilmrjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilmrjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilmrjc/subscriptions", "organizations_url": "https://api.github.com/users/gilmrjc/orgs", "repos_url": "https://api.github.com/users/gilmrjc/repos", "events_url": "https://api.github.com/users/gilmrjc/events{/privacy}", "received_events_url": "https://api.github.com/users/gilmrjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-22T06:11:15Z", "updated_at": "2019-05-08T16:53:56Z", "closed_at": "2019-05-08T16:53:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't use pytest-bdd and pytest-django. For some reason the app crashes when handling the database in a BDD test.\n\nI have a repo with a sample app that shows this behavior https://github.com/gilmrjc/testing \nIf you run py.test -s you can see that pytest-django alone works well in the test with a live_server fixture, and if I don't try to use the database in the test it also works fine, but when I try to get objects from the database inside a BDD it fails. I can't use the BDD tests inside a LiveServerTestCase class, so I need to use the live_server fixture.\n\nWhy is the app crashing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/178", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/178/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/178/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/178", "id": 149391292, "node_id": "MDU6SXNzdWUxNDkzOTEyOTI=", "number": 178, "title": "pytest-bdd tests skipped if you provide --base-url option", "user": {"login": "davidemoro", "id": 608426, "node_id": "MDQ6VXNlcjYwODQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/608426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidemoro", "html_url": "https://github.com/davidemoro", "followers_url": "https://api.github.com/users/davidemoro/followers", "following_url": "https://api.github.com/users/davidemoro/following{/other_user}", "gists_url": "https://api.github.com/users/davidemoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidemoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidemoro/subscriptions", "organizations_url": "https://api.github.com/users/davidemoro/orgs", "repos_url": "https://api.github.com/users/davidemoro/repos", "events_url": "https://api.github.com/users/davidemoro/events{/privacy}", "received_events_url": "https://api.github.com/users/davidemoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-19T08:47:58Z", "updated_at": "2016-04-19T09:02:12Z", "closed_at": "2016-04-19T09:02:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI have the following structure with both traditional tests (`tests_nobdd_login.py`) and BDD-like tests:\n\n```\n\u251c\u2500\u2500 features\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 auth\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 login.feature\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 testing.py\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 conftest.py\n    \u251c\u2500\u2500 functional\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 auth\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_login.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 conftest.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 test_nobdd_login.py\n```\n\nWithout `base-url` option the BDD test runs:\n\n```\n$ py.test -k \"not nobdd\" my/dummy_tests\nplatform linux2 -- Python 2.7.10, pytest-2.9.1, py-1.4.31, pluggy-0.3.1\nrootdir: /home/user/Repository/vm-tests/src/my.dummy_tests, inifile: \nplugins: bdd-2.16.1, selenium-1.2.1, variables-1.4, html-1.8.0\ncollected 2 items \n\nmy/dummy_tests/tests/functional/auth/test_login.py .\n```\n\nProviding `--base-url` (needed by `test_nobdd_login.py`) instead the BDD tests are skipped:\n\n```\n$ py.test --base-url http://google.com -k \"not nobdd\" my/dummy_tests\nplatform linux2 -- Python 2.7.10, pytest-2.9.1, py-1.4.31, pluggy-0.3.1\nrootdir: /home/user/Repository/vm-tests/src/my.dummy_tests, inifile: \nplugins: bdd-2.16.1, selenium-1.2.1, variables-1.4, html-1.8.0\ncollected 2 items \n\nmy/dummy_tests/tests/functional/auth/test_login.py s\n```\n\n**Note well**: the my/dummy_tests/tests/functional/auth/test_login.py is a simple dummy test with no dependencies fixtures and with a simple `assert 1`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/175", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/175/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/175/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/175", "id": 141912561, "node_id": "MDU6SXNzdWUxNDE5MTI1NjE=", "number": 175, "title": "Reporter.serialize is breaking inside execnet serialize while using xdist", "user": {"login": "olegpidsadnyi", "id": 2608181, "node_id": "MDQ6VXNlcjI2MDgxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegpidsadnyi", "html_url": "https://github.com/olegpidsadnyi", "followers_url": "https://api.github.com/users/olegpidsadnyi/followers", "following_url": "https://api.github.com/users/olegpidsadnyi/following{/other_user}", "gists_url": "https://api.github.com/users/olegpidsadnyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegpidsadnyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegpidsadnyi/subscriptions", "organizations_url": "https://api.github.com/users/olegpidsadnyi/orgs", "repos_url": "https://api.github.com/users/olegpidsadnyi/repos", "events_url": "https://api.github.com/users/olegpidsadnyi/events{/privacy}", "received_events_url": "https://api.github.com/users/olegpidsadnyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-18T16:18:09Z", "updated_at": "2016-03-19T09:10:41Z", "closed_at": "2016-03-19T09:10:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Values that are coming from converters for the parametrization (including scenario example tables) can be non simple python types, but custom classes defined by a project.\nExecnet doesn't know how to serialize them and breaks.\n\nnote: Take into account the refactoring for the hooks (configure/unconfigure) done in the PR #147 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/169", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/169/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/169/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/169", "id": 126569215, "node_id": "MDU6SXNzdWUxMjY1NjkyMTU=", "number": 169, "title": "@pytest.mark.scenario Does not appear to exist", "user": {"login": "jtpereyda", "id": 244969, "node_id": "MDQ6VXNlcjI0NDk2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/244969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtpereyda", "html_url": "https://github.com/jtpereyda", "followers_url": "https://api.github.com/users/jtpereyda/followers", "following_url": "https://api.github.com/users/jtpereyda/following{/other_user}", "gists_url": "https://api.github.com/users/jtpereyda/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtpereyda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtpereyda/subscriptions", "organizations_url": "https://api.github.com/users/jtpereyda/orgs", "repos_url": "https://api.github.com/users/jtpereyda/repos", "events_url": "https://api.github.com/users/jtpereyda/events{/privacy}", "received_events_url": "https://api.github.com/users/jtpereyda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-14T03:22:03Z", "updated_at": "2016-07-18T22:17:17Z", "closed_at": "2016-07-18T22:17:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## tl;dr\n\nREADME references `@mark.scenario` decorator from `pytest.mark`, but it appears that plain old `@scenario` from `pytest` is the way to go.\n## Problem\n\nAccording to the readme, you can parameterize tests like this (selected excerpts from example):\n\n```\nimport pytest\nfrom pytest_bdd import mark, given, when, then\n\n...\n@pytest.mark.parametrize(\n    ['start', 'eat', 'left'],\n    [(12, 5, 7)])\n@mark.scenario(\n    'parametrized.feature',\n    'Parametrized given, when, thens',\n)\n...\ndef test_parametrized(start, eat, left):\n...\n```\n\nHowever, these import lines fail for me with the latest pytest-bdd:\n\n```\n$ cat test_import_fail.py\nimport pytest\nimport pytest_bdd\nprint(\"pytest: {0}\", pytest.__version__)\nprint(\"pytest_bdd: {0}\", pytest_bdd.__version__)\nfrom pytest_bdd import mark, given, when, then\n\n$ ./env/bin/python test_import_fail.py\npytest: 2.8.5\npytest_bdd: 2.16.0\nTraceback (most recent call last):\n  File \"test_import_fail.py\", line 5, in <module>\n    from pytest_bdd import mark, given, when, then\nImportError: cannot import name mark\n```\n## Solution\n\nHowever, everything works fine for me if I change \n\n```\nfrom pytest_bdd import mark, given, when, then\n```\n\nto\n\n```\nfrom pytest_bdd import scenario, given, when, then\n```\n\nand\n\n```\n@mark.scenario(\n```\n\nto\n\n```\n@scenario(\n```\n## Suggestion\n\nChange README.\n\n~~Also \"parameterization\" is misspelled \"parametrization\" in the README.~~ Apparently there are four ways to spell parametrise.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/166", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/166/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/166/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/166", "id": 119370988, "node_id": "MDU6SXNzdWUxMTkzNzA5ODg=", "number": 166, "title": "pytest markers with arguments", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-29T17:12:40Z", "updated_at": "2016-09-15T15:39:02Z", "closed_at": "2016-09-15T15:39:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It'd be nice to use markers with arguments like this:\n\n```\n@xfail(reason=\"issue 123\")\nScenario: some scenario\n    ...\n```\n\nI haven't looked at the code yet, but I'd imagine it to work something like this:\n- The tag line is split on `@`\n- If it's a tag with arguments, `pytest.mark` is inserted after the `@`, and it's `eval()`ed in the scope of the module containing the scenario to get the marker to apply.\n\nI know this sounds somewhat hacky, but I think it should work. What do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/165", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/165/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/165/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/165", "id": 118806981, "node_id": "MDU6SXNzdWUxMTg4MDY5ODE=", "number": 165, "title": "Documentation/examples of custom hooks", "user": {"login": "chfw", "id": 4280312, "node_id": "MDQ6VXNlcjQyODAzMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4280312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chfw", "html_url": "https://github.com/chfw", "followers_url": "https://api.github.com/users/chfw/followers", "following_url": "https://api.github.com/users/chfw/following{/other_user}", "gists_url": "https://api.github.com/users/chfw/gists{/gist_id}", "starred_url": "https://api.github.com/users/chfw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chfw/subscriptions", "organizations_url": "https://api.github.com/users/chfw/orgs", "repos_url": "https://api.github.com/users/chfw/repos", "events_url": "https://api.github.com/users/chfw/events{/privacy}", "received_events_url": "https://api.github.com/users/chfw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-25T10:38:04Z", "updated_at": "2015-11-26T14:22:03Z", "closed_at": "2015-11-26T14:22:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nI am having troubles in finding docs/examples of those custom hooks such as pytest_bdd_before_scenario .... Tried google and readthedocs and nothing is found. I wondered if I missed anything. What I need is to invoke my own hook function.\n\nCheers\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/162", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/162/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/162/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/162", "id": 117440518, "node_id": "MDU6SXNzdWUxMTc0NDA1MTg=", "number": 162, "title": "AttributeError: '_HookCaller' object has no attribute 'spec_opts'", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-17T20:15:48Z", "updated_at": "2018-02-13T13:38:50Z", "closed_at": "2018-02-13T13:38:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running `tox`, I get lots of failures with the `py27-xdist` environment:\n\n```\n============================ FAILURES ============================\n___________________________ test_steps ___________________________\n[gw2] linux2 -- Python 2.7.10 /home/florian/proj/pytest-bdd/.tox/py27-xdist/bin/python2.7\nrequest = <FixtureRequest for <Function 'test_steps'>>\n\n    @scenario_args('Every step takes a parameter with the same name')\n>   def test_steps():\n\nrequest    = <FixtureRequest for <Function 'test_steps'>>\n\ntests/args/parse/test_args.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npytest_bdd/scenario.py:151: in _execute_scenario\n    scenario=scenario,\n.tox/py27-xdist/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py:724: in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n.tox/py27-xdist/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py:338: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhook = <_HookCaller 'pytest_bdd_before_scenario'>\nmethods = [<_pytest.vendored_packages.pluggy.HookImpl instance at 0x7f5eead5cf38>]\nkwargs = {'feature': <pytest_bdd.feature.Feature object at 0x7f5eea586290>, 'request': <FixtureRequest for <Function 'test_steps'>>, 'scenario': <pytest_bdd.feature.Scenario object at 0x7f5eea586710>}\n\n    self._inner_hookexec = lambda hook, methods, kwargs: \\\n>       _MultiCall(methods, kwargs, hook.spec_opts).execute()\nE   AttributeError: '_HookCaller' object has no attribute 'spec_opts'\n\nhook       = <_HookCaller 'pytest_bdd_before_scenario'>\nkwargs     = {'feature': <pytest_bdd.feature.Feature object at 0x7f5eea586290>, 'request': <FixtureRequest for <Function 'test_steps'>>, 'scenario': <pytest_bdd.feature.Scenario object at 0x7f5eea586710>}\nmethods    = [<_pytest.vendored_packages.pluggy.HookImpl instance at 0x7f5eead5cf38>]\n\n.tox/py27-xdist/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py:333: AttributeError\n\n[...]\n\n============================================================ short test summary info =============================================================\nFAIL tests/args/parse/test_args.py::test_steps\nFAIL tests/args/parse/test_args.py::test_argument_in_when_step_1\nFAIL tests/args/cfparse/test_args.py::test_steps\nFAIL tests/args/cfparse/test_args.py::test_argument_in_when_step_1\nFAIL tests/args/parse/test_args.py::test_argument_in_when_step_2\nFAIL tests/args/cfparse/test_args.py::test_argument_in_when_step_2\nFAIL tests/args/cfparse/test_args.py::test_multiple_given\nFAIL tests/args/parse/test_args.py::test_multiple_given\nFAIL tests/args/subfolder/test_args.py::test_steps\nFAIL tests/args/regex/test_args.py::test_steps\nFAIL tests/feature/test_alias.py::test_steps\nFAIL tests/feature/test_multiline.py::test_multiline[\nScenario: Multiline step using sub indentation\n    Given I have a step with:\n        Some\n\n        Extra\n        Lines\n    Then the text should be parsed with correct indentation\n-Some\n\nExtra\nLines]\nFAIL tests/feature/test_background.py::test_background_basic\nFAIL tests/args/regex/test_args.py::test_argument_in_when_step_1\nFAIL tests/feature/test_background.py::test_background_check_order\nFAIL tests/feature/test_multiline.py::test_multiline[\nScenario: Multiline step using sub indentation\n    Given I have a step with:\n        Some\n\n      Extra\n     Lines\n\n    Then the text should be parsed with correct indentation\n-   Some\n\n Extra\nLines]\nFAIL tests/args/regex/test_args.py::test_argument_in_when_step_2\nFAIL tests/feature/test_multiline.py::test_multiline[\nFeature:\nScenario: Multiline step using sub indentation\n    Given I have a step with:\n        Some\n        Extra\n        Lines\n\n-Some\nExtra\nLines]\nFAIL tests/args/regex/test_args.py::test_multiple_given\nFAIL tests/feature/test_multiline.py::test_multiline_wrong_indent\nFAIL tests/feature/test_outline.py::test_outlined_with_other_fixtures[1-12-5.0-7]\nFAIL tests/feature/test_description.py::test_description\nFAIL tests/feature/test_outline.py::test_outlined_with_other_fixtures[1-5-4.0-1]\nFAIL tests/feature/test_outline.py::test_outlined[12-5.0-7]\nFAIL tests/feature/test_outline.py::test_outlined_feature[12-5.0-7-oranges]\nFAIL tests/feature/test_outline.py::test_outlined_with_other_fixtures[2-12-5.0-7]\nFAIL tests/feature/test_outline.py::test_outlined_feature[12-5.0-7-apples]\nFAIL tests/feature/test_outline.py::test_outlined[5-4.0-1]\nFAIL tests/feature/test_outline.py::test_outlined_feature[5-4.0-1-oranges]\nFAIL tests/feature/test_outline.py::test_outlined_with_other_fixtures[2-5-4.0-1]\nFAIL tests/feature/test_outline.py::test_outlined_feature[5-4.0-1-apples]\nFAIL tests/feature/test_outline.py::test_outlined_with_other_fixtures[3-12-5.0-7]\nFAIL tests/feature/test_parametrized.py::test_parametrized[12-5-7]\nFAIL tests/feature/test_parametrized.py::test_parametrized_with_other_fixtures[1-12-5-7]\nFAIL tests/feature/test_outline.py::test_outlined_with_other_fixtures[3-5-4.0-1]\nFAIL tests/feature/test_parametrized.py::test_parametrized_with_other_fixtures[2-12-5-7]\nFAIL tests/feature/test_steps.py::test_conftest\nFAIL tests/feature/test_outline.py::test_vertical_example[12-5.0-7]\nFAIL tests/feature/test_steps.py::test_multiple_given\nFAIL tests/feature/test_outline.py::test_vertical_example[2-1.0-1]\nFAIL tests/feature/test_reuse.py::test_reuse\nFAIL tests/feature/test_same_function_name.py::test_when_function_name_same_as_step_name\nFAIL tests/feature/test_steps.py::test_steps\nFAIL tests/feature/test_scenario.py::test_scenario_comments\nFAIL tests/feature/test_steps.py::test_when_first\nFAIL tests/feature/test_steps.py::test_then_after_given\nFAIL tests/feature/test_tags.py::test_tags\nFAIL tests/feature/test_wrong.py::test_wrong_type_order[When in Given]\nFAIL tests/feature/test_wrong.py::test_wrong_type_order[When in Then]\nFAIL tests/feature/test_wrong.py::test_wrong_type_order[Then in Given]\nFAIL tests/steps/test_given.py::test_given_with_fixture\nFAIL tests/feature/test_wrong.py::test_wrong_type_order[Given in When]\nFAIL tests/steps/test_given.py::test_root_alias\nFAIL tests/steps/test_given.py::test_given_injection\nFAIL tests/steps/test_given.py::test_session_given\nFAIL tests/feature/test_wrong.py::test_wrong_type_order[Given in Then]\nFAIL tests/steps/test_unicode.py::test_steps_in_feature_file_have_unicode\nFAIL tests/feature/test_wrong.py::test_wrong_type_order[Then in When]\nFAIL tests/steps/test_unicode.py::test_steps_in_py_file_have_unicode\n============================================ 59 failed, 117 passed, 2 pytest-warnings in 3.89 seconds ===========================================\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/161", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/161/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/161/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/161", "id": 117298643, "node_id": "MDU6SXNzdWUxMTcyOTg2NDM=", "number": 161, "title": "How to use this with pytest-django?", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-11-17T07:16:02Z", "updated_at": "2019-04-24T18:56:41Z", "closed_at": "2015-11-19T13:05:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/160", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/160/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/160/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/160", "id": 113234069, "node_id": "MDU6SXNzdWUxMTMyMzQwNjk=", "number": 160, "title": "Tags cause Background to fail", "user": {"login": "tedlandis", "id": 4984888, "node_id": "MDQ6VXNlcjQ5ODQ4ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4984888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedlandis", "html_url": "https://github.com/tedlandis", "followers_url": "https://api.github.com/users/tedlandis/followers", "following_url": "https://api.github.com/users/tedlandis/following{/other_user}", "gists_url": "https://api.github.com/users/tedlandis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedlandis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedlandis/subscriptions", "organizations_url": "https://api.github.com/users/tedlandis/orgs", "repos_url": "https://api.github.com/users/tedlandis/repos", "events_url": "https://api.github.com/users/tedlandis/events{/privacy}", "received_events_url": "https://api.github.com/users/tedlandis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-25T16:07:33Z", "updated_at": "2016-01-26T10:24:38Z", "closed_at": "2016-01-26T10:24:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` bash\nvenv/lib/python2.7/site-packages/pytest_bdd/feature.py:290: in __init__\n    \"Background section can only contain Given steps\", line_number, clean_line, filename)\nE   FeatureError: Background section can only contain Given steps.\nE   Line number: 17.\nE   Line: @wip.\n```\n\n``` gherkin\nBackground:\n  Given I am on the new sale page as an associate\n\n\n@wip\nScenario: Create new item by adding it to a sale\n```\n\nAs you can see above, the Background only contains Given steps but the tag (@wip) on the first Scenario is being incorrectly included in the Background and causing an error.\n\nAs a workaround I tried to turn off strict checking using the following code but I couldn't get that to work either:\n\n``` python\n@fixture(scope='session')\ndef pytestbdd_strict_gherkin():\n    return False\n```\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/156", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/156/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/156/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/156", "id": 110911199, "node_id": "MDU6SXNzdWUxMTA5MTExOTk=", "number": 156, "title": "Wrong error with no scenarios", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-10-12T05:32:14Z", "updated_at": "2016-06-21T15:02:24Z", "closed_at": "2016-06-21T15:02:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a minor thing, but I thought I'd report it as I noticed it when doing a minimal testcase for another issue.\n\nWith this (broken) feature file:\n\n```\nGiven foo\nWhen bar\nThen baz\n```\n\nwe get:\n\n```\nE   pytest_bdd.exceptions.FeatureError: Given steps must be the first within the Scenario.\nE   Line number: 1.\nE   Line: Given foo.\nE   File: /home/florian/tmp/bdd/feat.feature\n```\n\nInstead I'd expect the same as with an empty feature file:\n\n```\nE   pytest_bdd.exceptions.NoScenariosFound: ['/home/florian/tmp/bdd/feat.feature']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/154", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/154/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/154/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/154", "id": 110851837, "node_id": "MDU6SXNzdWUxMTA4NTE4Mzc=", "number": 154, "title": "addhooks/__multicall__ deprecated in pytest 2.8", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-11T11:51:15Z", "updated_at": "2015-12-16T14:24:46Z", "closed_at": "2015-12-16T14:24:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When running with pytest 2.8.2 with `-rw`:\n\n```\nWI2 .../pytest_bdd/plugin.py:17 use pluginmanager.add_hookspecs instead of deprecated addhooks() method.\nWI1 .../pytest_bdd/reporting.py:147 'pytest_runtest_makereport' hook uses deprecated __multicall__ argument\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/153", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/153/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/153/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/153", "id": 110818427, "node_id": "MDU6SXNzdWUxMTA4MTg0Mjc=", "number": 153, "title": "inspect.getargspec() deprecated in Python 3.5", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-10T21:40:54Z", "updated_at": "2015-12-16T12:39:47Z", "closed_at": "2015-12-16T12:39:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Unfortunately, `getargspec` got deprecated...\n\n```\n================================================== FAILURES ==================================================\n______________________________________________ test_going_back _______________________________________________\n\nrequest = <FixtureRequest for <Function 'test_going_back'>>\n\n>   ???\n\ntests/integration/features/test_features.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.tox/py35/lib/python3.5/site-packages/pytest_bdd/scenario.py:191: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.tox/py35/lib/python3.5/site-packages/pytest_bdd/scenario.py:128: in _execute_step_function\n    kwargs = dict((arg, request.getfuncargvalue(arg)) for arg in inspect.getargspec(step_func).args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfunc = <function _step_decorator.<locals>.decorator.<locals>.step_func at 0x7fa0c2c2da60>\n\n    def getargspec(func):\n        # ...\n        warnings.warn(\"inspect.getargspec() is deprecated, \"\n                      \"use inspect.signature() instead\", DeprecationWarning,\n>                     stacklevel=2)\nE       DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/152", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/152/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/152/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/152", "id": 110495932, "node_id": "MDU6SXNzdWUxMTA0OTU5MzI=", "number": 152, "title": "Does not work with pytest 2.8.2 and -n > 0", "user": {"login": "bh", "id": 1332044, "node_id": "MDQ6VXNlcjEzMzIwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1332044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bh", "html_url": "https://github.com/bh", "followers_url": "https://api.github.com/users/bh/followers", "following_url": "https://api.github.com/users/bh/following{/other_user}", "gists_url": "https://api.github.com/users/bh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bh/subscriptions", "organizations_url": "https://api.github.com/users/bh/orgs", "repos_url": "https://api.github.com/users/bh/repos", "events_url": "https://api.github.com/users/bh/events{/privacy}", "received_events_url": "https://api.github.com/users/bh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-08T16:47:22Z", "updated_at": "2015-10-08T16:49:02Z", "closed_at": "2015-10-08T16:49:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "$  py.test mx/ -k acceptance/ -n0\nworks fine\n\n$ py.test mx/ -k acceptance/ -n4\nresults in:\nFFFFFFFFFFFFFFFFFFFFFFFFFFF\n\n```\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../../.virtualenvs/mx/lib/python3.4/site-packages/pytest_bdd/scenario.py:151: in _execute_scenario\n    scenario=scenario,\n../../../.virtualenvs/mx/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py:724: in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n../../../.virtualenvs/mx/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py:338: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhook = <_HookCaller 'pytest_bdd_before_scenario'>, methods = [<_pytest.vendored_packages.pluggy.HookImpl object at 0x7fbeb047b320>], kwargs = {'feature': <pytest_bdd.feature.Feature object at 0x7fbe9ea01dd8>, 'request': <FixtureRequest for <Function 'test_sales_overview_modal'>>, 'scenario': <pytest_bdd.feature.Scenario object at 0x7fbe9e9fe7b8>}\n\n    self._inner_hookexec = lambda hook, methods, kwargs: \\\n>       _MultiCall(methods, kwargs, hook.spec_opts).execute()\nE   AttributeError: '_HookCaller' object has no attribute 'spec_opts'\n\n../../../.virtualenvs/mx/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py:333: AttributeError\ue0b2 18:44:13 \n\n====================================================================================================================================================================== pytest-warning summary =======================================================================================================================================================================\nWI2 /home/bhe/.virtualenvs/mx/lib/python3.4/site-packages/pytest_bdd/plugin.py:17 use pluginmanager.add_hookspecs instead of deprecated addhooks() method.\nWI1 /home/bhe/.virtualenvs/mx/lib/python3.4/site-packages/pytest_bdd/reporting.py:147 'pytest_runtest_makereport' hook uses deprecated __multicall__ argument\nWI1 /home/bhe/.virtualenvs/mx/lib/python3.4/site-packages/pytest_splinter/plugin.py:454 'pytest_runtest_makereport' hook uses deprecated __multicall__ argument\n\n```\n\n$ pip freeze | grep pytest                                                                                                                                                                                                                                                                 \n\n```\npytest==2.8.2\npytest-bdd==2.15.0\npytest-cov==2.1.0\npytest-django==2.8.0\n-e git+https://github.com/mverteuil/pytest-ipdb.git@2b9a5a43a19d22bd16035f5fcfe9d657dc4acba3#egg=pytest_ipdb-dev\npytest-random==0.2\npytest-rerunfailures==0.5\npytest-splinter==1.7.0\npytest-xdist==1.13.1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/151", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/151/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/151/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/151", "id": 110082365, "node_id": "MDU6SXNzdWUxMTAwODIzNjU=", "number": 151, "title": "Can't set defaults for step arguments", "user": {"login": "dangitall", "id": 882363, "node_id": "MDQ6VXNlcjg4MjM2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/882363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangitall", "html_url": "https://github.com/dangitall", "followers_url": "https://api.github.com/users/dangitall/followers", "following_url": "https://api.github.com/users/dangitall/following{/other_user}", "gists_url": "https://api.github.com/users/dangitall/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangitall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangitall/subscriptions", "organizations_url": "https://api.github.com/users/dangitall/orgs", "repos_url": "https://api.github.com/users/dangitall/repos", "events_url": "https://api.github.com/users/dangitall/events{/privacy}", "received_events_url": "https://api.github.com/users/dangitall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-06T19:29:52Z", "updated_at": "2015-10-07T20:27:30Z", "closed_at": "2015-10-07T20:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to be able to write a step specification like this:\n\n```\n@given('there is an object')\n@given(parsers.parse('there is an object named {name:s}'))\ndef obj(name=\"default\"):\n    return name\n```\n\nBut if I do this then `name` always gets set to `\"default\"` even if the second step definition is used. Is there another way to achieve something like this? Or can defaults be supported for step arguments?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/148", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/148/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/148/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/148", "id": 107422056, "node_id": "MDU6SXNzdWUxMDc0MjIwNTY=", "number": 148, "title": "KeyError: 'nodeid'", "user": {"login": "hddmet", "id": 5000679, "node_id": "MDQ6VXNlcjUwMDA2Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5000679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hddmet", "html_url": "https://github.com/hddmet", "followers_url": "https://api.github.com/users/hddmet/followers", "following_url": "https://api.github.com/users/hddmet/following{/other_user}", "gists_url": "https://api.github.com/users/hddmet/gists{/gist_id}", "starred_url": "https://api.github.com/users/hddmet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hddmet/subscriptions", "organizations_url": "https://api.github.com/users/hddmet/orgs", "repos_url": "https://api.github.com/users/hddmet/repos", "events_url": "https://api.github.com/users/hddmet/events{/privacy}", "received_events_url": "https://api.github.com/users/hddmet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-20T22:32:57Z", "updated_at": "2016-03-22T10:51:52Z", "closed_at": "2016-03-22T10:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI am getting KeyError: 'nodeid' when running py.test with pytest-bdd installed.  py.test seems to detect pytest-bdd plugin but it stops running when trying to load it.  I am not sure whether the error is caused by my setup environment or because there is an api incompatibility between the latest py.test and pytest-bdd plugin.  Please help.  If you required additional info, please let me know.\n## Traceback\n\n``` #!sh\npluggy.py\", line 593, in <listcomp>\nINTERNALERROR>     args = [all_kwargs[argname] for argname in hook_impl.argnames]\nINTERNALERROR> KeyError: 'nodeid'\n```\n- Details traceback is also included\n## My setup environment\n\nOS: centos 7.1    3.10.0-229.14.1.el7.x86_64\nvirtualenvwrapper\npython 3.4.3\n### python package list\n\ncoverage (4.0)\nglob2 (0.4.1)\nMako (1.0.2)\nMarkupSafe (0.23)\nparse (1.6.6)\nparse-type (0.3.4)\npip (7.1.2)\npy (1.4.30)\npytest (2.8.0)\npytest-bdd (2.15.0)\nsetuptools (18.2)\nsix (1.9.0)\nwheel (0.24.0)\n## Detailed traceback:\n\n``` #!sh\nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/main.py\", line 86, in wrap_session\nINTERNALERROR>     config._do_configure()\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/config.py\", line 829, in _do_configure\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 729, in call_historic\nINTERNALERROR>     self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/terminal.py\", line 47, in pytest_configure\nINTERNALERROR>     config.pluginmanager.register(reporter, 'terminalreporter')\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/config.py\", line 206, in register\nINTERNALERROR>     ret = super(PytestPluginManager, self).register(plugin, name)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 370, in register\nINTERNALERROR>     hook._maybe_apply_history(hookimpl)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 747, in _maybe_apply_history\nINTERNALERROR>     res = self._hookexec(self, [method], kwargs)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 593, in execute\nINTERNALERROR>     args = [all_kwargs[argname] for argname in hook_impl.argnames]\nINTERNALERROR>   File \"/home/aaron/dev/virtualenv/py34-skeleton/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 593, in <listcomp>\nINTERNALERROR>     args = [all_kwargs[argname] for argname in hook_impl.argnames]\nINTERNALERROR> KeyError: 'nodeid'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/145", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/145/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/145/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/145", "id": 102908935, "node_id": "MDU6SXNzdWUxMDI5MDg5MzU=", "number": 145, "title": "How to recreate feature file?", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-08-24T22:56:37Z", "updated_at": "2015-08-31T14:39:37Z", "closed_at": "2015-08-31T14:39:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi guys,\n\nAs I'm working on reporters I need to recreate feature description. I almost have it, except two things (until now).\n1. Background\n2. Outline, Examples\n\nI have this feature description:\n\n```\nFeature: Designer can log in\n\n  In order to achieve something\n  I want something\n  Because it will be cool\n\n\n  Some description goes here.\n\n  Background:\n    Given background OK\n\n  @OK\n  Scenario: OK\n    Given OK\n    When OK\n    Then OK\n\n  @Some @Tag @OK\n  Scenario Outline: Scenario Scneario\n    Given OK\n    When OK\n    And OK\n    Then OK\n\n    Examples:#\n      | v1| v2|\n      | 1 | 2 |\n      | 3 | 4 |\n```\n\nAnd what I've got when doing report is (for one scenario):\n\n```\n{'steps': [{'keyword': 'Given', 'duration': 0.00012564659118652344, 'name': 'background OK', 'failed': False, 'type': 'given', 'line_number': 11}, {'keyword': 'Given', 'duration': 0.00011897087097167969, 'name': 'OK', 'failed': False, 'type': 'given', 'line_number': 31}, {'keyword': 'When', 'duration': 5.459785461425781e-05, 'name': 'OK', 'failed': False, 'type': 'when', 'line_number': 32}, {'keyword': 'And', 'duration': 5.269050598144531e-05, 'name': 'OK', 'failed': False, 'type': 'when', 'line_number': 33}, {'keyword': 'Then', 'duration': 5.14984130859375e-05, 'name': 'OK', 'failed': False, 'type': 'then', 'line_number': 34}], 'feature': {'filename': '/home/spinus/Projekty/something/features/designer_login.feature', 'rel_filename': 'features/designer_login.feature', 'tags': [], 'name': 'Designer can log in', 'line_number': 1, 'description': 'In order to achieve something\\nI want something\\nBecause it will be cool\\nSome description goes here.'}, 'line_number': 30, 'tags': ['OK', 'Some', 'Tag'], 'name': 'Scenario Scneario'}\n```\n\nI cannot recreate background, step is integrated into scenario steps and there is no other information to detect it's a background one.\nI cannot recreate scenario outline at all.\n\nWould you mind to add background description to this dictionary and as well as reference to original scenario outline (\"scenario outline\" keyword in \"scenario\" dictionary?) or what would be any other possible solutions/ways to recreate this stuff in reporters?\n\nUPDATE:\nAlso, there is no way in report to find values which were used in scenario outline instance (those from example table)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/144", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/144/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/144/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/144", "id": 102908022, "node_id": "MDU6SXNzdWUxMDI5MDgwMjI=", "number": 144, "title": "Wrong feature description parsing.", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-08-24T22:48:47Z", "updated_at": "2015-08-31T09:42:53Z", "closed_at": "2015-08-31T08:33:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm working on HTML reported and as well as Terminal reporter. \n\nI need to \"recreate\" texts. I was going to use stuff which is available in pytest-bdd pytest reports.\nHere is what I have when accessing `__scenario__`: \n\n```\n{'tags': ['OK'], 'steps': [{'name': 'background OK', 'line_number': 11, 'duration': 0.00015592575073242188, 'failed': False, 'type': 'given', 'keyword': 'Given'}, {'name': 'OK', 'line_number': 25, 'duration': 0.000125885009765625, 'failed': False, 'type': 'given', 'keyword': 'Given'}, {'name': 'OK', 'line_number': 26, 'duration': 5.91278076171875e-05, 'failed': False, 'type': 'when', 'keyword': 'When'}, {'name': 'OK', 'line_number': 27, 'duration': 5.698204040527344e-05, 'failed': False, 'type': 'then', 'keyword': 'Then'}], 'feature': {'description': 'In order to achieve something\\nI want something\\nBecause it will be cool\\nSome description goes here.', 'tags': [], 'filename': '/home/spinus/Projekty/something/features/designer_login.feature', 'line_number': 1, 'rel_filename': 'features/designer_login.feature', 'name': 'Designer can log in'}, 'name': 'OK', 'line_number': 24}\n```\n\nIt's almost good, but original description of feature is:\n\n```\nFeature: Designer can log in\n\n  In order to achieve something\n  I want something\n  Because it will be cool\n\n\n  Some description goes here.\n```\n\nSo as you can see, two new lines are missing before last line.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/143", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/143/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/143/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/143", "id": 99465173, "node_id": "MDU6SXNzdWU5OTQ2NTE3Mw==", "number": 143, "title": "How to know the step failed during scenario execution?", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-06T15:42:42Z", "updated_at": "2019-05-21T15:44:37Z", "closed_at": "2015-08-17T23:41:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm doing pytest-bdd + selenium. I'm using hooks before_step after_step to do screenshots. To annotate them I thought I can use `pytest_bdd_after_scenario` hook to annotate all screenshots in a scenario.\nHow I know that scenario/test failed?\n\n`f1.feature`:\n\n```\nFeature: f1\n\n  Scenario: s1\n    Given 1\n    When 2\n    Then 3\n```\n\n`test_f1.py`:\n\n```\nfrom pytest_bdd import scenarios, given, when, then\n\nscenarios('.')\n\n@given('1')\ndef _1():\n    pass\n\n@when('2')\ndef _2():\n    pass\n\n@then('3')\ndef _3():\n    pass\n```\n\n`conftest.py`:\n\n```\ndef pytest_bdd_after_scenario(request, feature, scenario):\n    print(\"Anything failed?\")\n    print(scenario.failed)\n    for step in scenario.steps:\n        print(step.failed)\n    print()\n```\n\nOutput:\n\n```\ncollected 1 items \n\ntest_f1.py::test_s1 Anything failed?\nFalse\nFalse\nFalse\nFalse\n()\nPASSED\n```\n\nWhen I change last step to:\n\n```\n@then('3')\ndef _3():\n    assert 1==2\n```\n\nthe output is:\n\n```\ncollected 1 items \n\ntest_f1.py::test_s1 Anything failed?\nFalse\nFalse\nFalse\nFalse\n()\nFAILED\n```\n\nIs this a bug or I should access this information in a different way?\n\nProbably I could use pytest reporter but haven't investigated this yet and I'm not sure I can use browser fixture there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/142", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/142/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/142/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/142", "id": 99145374, "node_id": "MDU6SXNzdWU5OTE0NTM3NA==", "number": 142, "title": "give all the steps with same name", "user": {"login": "learner010", "id": 10337546, "node_id": "MDQ6VXNlcjEwMzM3NTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/10337546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/learner010", "html_url": "https://github.com/learner010", "followers_url": "https://api.github.com/users/learner010/followers", "following_url": "https://api.github.com/users/learner010/following{/other_user}", "gists_url": "https://api.github.com/users/learner010/gists{/gist_id}", "starred_url": "https://api.github.com/users/learner010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/learner010/subscriptions", "organizations_url": "https://api.github.com/users/learner010/orgs", "repos_url": "https://api.github.com/users/learner010/repos", "events_url": "https://api.github.com/users/learner010/events{/privacy}", "received_events_url": "https://api.github.com/users/learner010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-08-05T07:53:55Z", "updated_at": "2015-08-26T06:42:05Z", "closed_at": "2015-08-26T06:42:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I use same name for all the steps? I feel the function names are meaningless once they are decorated by `@given, @then, @when`. When I name all the steps to '_', I get `Fixture _ already in use` exception. How can I instruct `pytest-bdd` not to consider steps as fixture?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/141", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/141/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/141/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/141", "id": 98895682, "node_id": "MDU6SXNzdWU5ODg5NTY4Mg==", "number": 141, "title": "Make pytest-bdd fail if it finds an orphan scenario", "user": {"login": "learner010", "id": 10337546, "node_id": "MDQ6VXNlcjEwMzM3NTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/10337546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/learner010", "html_url": "https://github.com/learner010", "followers_url": "https://api.github.com/users/learner010/followers", "following_url": "https://api.github.com/users/learner010/following{/other_user}", "gists_url": "https://api.github.com/users/learner010/gists{/gist_id}", "starred_url": "https://api.github.com/users/learner010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/learner010/subscriptions", "organizations_url": "https://api.github.com/users/learner010/orgs", "repos_url": "https://api.github.com/users/learner010/repos", "events_url": "https://api.github.com/users/learner010/events{/privacy}", "received_events_url": "https://api.github.com/users/learner010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-04T05:56:38Z", "updated_at": "2015-08-05T07:48:12Z", "closed_at": "2015-08-05T07:48:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to make pytest-bdd fail the test if there is a scenario which does not have corresponding test?\n\nCould be useful when the features are specified by stakeholders. It would prompt the developer that new feature has been added and needs to be implemented.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/140", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/140/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/140/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/140", "id": 98726578, "node_id": "MDU6SXNzdWU5ODcyNjU3OA==", "number": 140, "title": "context data on which steps can add data for other steps", "user": {"login": "learner010", "id": 10337546, "node_id": "MDQ6VXNlcjEwMzM3NTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/10337546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/learner010", "html_url": "https://github.com/learner010", "followers_url": "https://api.github.com/users/learner010/followers", "following_url": "https://api.github.com/users/learner010/following{/other_user}", "gists_url": "https://api.github.com/users/learner010/gists{/gist_id}", "starred_url": "https://api.github.com/users/learner010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/learner010/subscriptions", "organizations_url": "https://api.github.com/users/learner010/orgs", "repos_url": "https://api.github.com/users/learner010/repos", "events_url": "https://api.github.com/users/learner010/events{/privacy}", "received_events_url": "https://api.github.com/users/learner010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-03T11:49:47Z", "updated_at": "2015-08-04T04:17:33Z", "closed_at": "2015-08-03T19:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can one add a context data, which can be passed around steps, so that the steps can access it and make changes to it.\n\nI tried something like below:\n\n``` python\n@given('blah')\ndef context():\n    return {}\n\n@when('blah blah')\ndef make_changes_to_context(context):\n    context['new_key'] = 'new data'\n    return context\n\n@then('blah blah blah')\ndef check_stuff(context):\n    assert context['new_key'] == 'new data'\n```\n\nRaises `Key Error`, the `context` at `check_stuff` is not being updated by `make_changes_to_context` function.\n\nIs there any other way I could pass context among step functions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/138", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/138/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/138/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/138", "id": 95864592, "node_id": "MDU6SXNzdWU5NTg2NDU5Mg==", "number": 138, "title": "scenarios \"collector\" is not deterministic (fails on parallel execution)", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-18T22:27:09Z", "updated_at": "2015-07-26T18:25:11Z", "closed_at": "2015-07-26T18:25:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When I use parallel execution with pytest-xdist and in the same time I use `scenarios` to \"collect\" the tests I have this error.\n\nIt looks like scenarios doesn't preserve test order between test execution.\n\n```\n=================================================================== ERRORS ===================================================================\n____________________________________________________________ ERROR collecting gw2 ____________________________________________________________\nDifferent tests were collected between gw0 and gw2. The difference is:\n--- gw0\n\n+++ gw2\n\n@@ -1,3 +1,3 @@\n\n+test_website_title_is_set.py::test_open_first_video_from_main_page\n+test_website_title_is_set.py::test_open_second_video_from_main_page\n test_website_title_is_set.py::test_X_is_used_as_website_title\n-test_website_title_is_set.py::test_open_second_video_from_main_page\n-test_website_title_is_set.py::test_open_first_video_from_main_page\n____________________________________________________________ ERROR collecting gw1 ______\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/137", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/137/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/137/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/137", "id": 94018548, "node_id": "MDU6SXNzdWU5NDAxODU0OA==", "number": 137, "title": "Caching features", "user": {"login": "pachamaker", "id": 13253817, "node_id": "MDQ6VXNlcjEzMjUzODE3", "avatar_url": "https://avatars1.githubusercontent.com/u/13253817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pachamaker", "html_url": "https://github.com/pachamaker", "followers_url": "https://api.github.com/users/pachamaker/followers", "following_url": "https://api.github.com/users/pachamaker/following{/other_user}", "gists_url": "https://api.github.com/users/pachamaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pachamaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pachamaker/subscriptions", "organizations_url": "https://api.github.com/users/pachamaker/orgs", "repos_url": "https://api.github.com/users/pachamaker/repos", "events_url": "https://api.github.com/users/pachamaker/events{/privacy}", "received_events_url": "https://api.github.com/users/pachamaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-09T11:06:15Z", "updated_at": "2015-07-09T19:07:25Z", "closed_at": "2015-07-09T19:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a problem with caching features, when I edited scenario's step with other value, for example:\n`step_was`: open page \"First page\" \n`step_came`: open page \"Second page\"\nand re-run scenario, in features kept `step_was`, but not modified `step_came`\n\n``` python\nfeature = features.get(full_name)\nif not feature:\n    feature = Feature(base_path, filename, encoding=encoding)\n    features[full_name] = feature\n```\n\nI don't know right-way to solve this problem. If you can, fix please.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/136", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/136/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/136/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/136", "id": 93276631, "node_id": "MDU6SXNzdWU5MzI3NjYzMQ==", "number": 136, "title": "Parsers documentation is not clear", "user": {"login": "bartsanchez", "id": 952220, "node_id": "MDQ6VXNlcjk1MjIyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/952220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartsanchez", "html_url": "https://github.com/bartsanchez", "followers_url": "https://api.github.com/users/bartsanchez/followers", "following_url": "https://api.github.com/users/bartsanchez/following{/other_user}", "gists_url": "https://api.github.com/users/bartsanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartsanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartsanchez/subscriptions", "organizations_url": "https://api.github.com/users/bartsanchez/orgs", "repos_url": "https://api.github.com/users/bartsanchez/repos", "events_url": "https://api.github.com/users/bartsanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/bartsanchez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-06T13:16:05Z", "updated_at": "2015-07-07T19:35:29Z", "closed_at": "2015-07-07T19:35:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "At https://github.com/pytest-dev/pytest-bdd/blame/master/README.rst#L227\n\nIt suggests that you don't have to do nothing in order to use the default \"parse\" parser. However, I had to add \"parsers.parse\" to the step in order to get it working.\n\nI think it is a bit confusing if this is the desired behaviour. However, if it's not maybe it could be a bug.\n\nCould you please clarify this?\n\nI could add a pull requests if necessary.\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/135", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/135/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/135/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/135", "id": 92615267, "node_id": "MDU6SXNzdWU5MjYxNTI2Nw==", "number": 135, "title": "Background applies to all features within feature file", "user": {"login": "itspage", "id": 5963447, "node_id": "MDQ6VXNlcjU5NjM0NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5963447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itspage", "html_url": "https://github.com/itspage", "followers_url": "https://api.github.com/users/itspage/followers", "following_url": "https://api.github.com/users/itspage/following{/other_user}", "gists_url": "https://api.github.com/users/itspage/gists{/gist_id}", "starred_url": "https://api.github.com/users/itspage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itspage/subscriptions", "organizations_url": "https://api.github.com/users/itspage/orgs", "repos_url": "https://api.github.com/users/itspage/repos", "events_url": "https://api.github.com/users/itspage/events{/privacy}", "received_events_url": "https://api.github.com/users/itspage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-07-02T11:30:10Z", "updated_at": "2015-07-07T20:50:13Z", "closed_at": "2015-07-07T20:50:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I have the following feature file....\n\n```\nFeature: Feature One\n\n  Background:\n    Given I have A\n    And I have B\n\n  Scenario: Do something with A\n    When I do something with A\n    Then something about B\n\nFeature: Feature Two\n\n  Background:\n    Given I have A\n\n  Scenario: Something that just needs A\n    When I do something else with A\n    Then something else about B\n\n  Scenario: Something that needs B again\n    Given I have B\n    When I do something else with B\n    Then something else about A and B\n```\n\nWhen running this, you'll get a:  `Fixture \"b\" that implements \"I have B\" given step has been already used.`\n\nArguably, these two features should be in separate files, which would fix the issue, but is that mandatory? I think this should work.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/134", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/134/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/134/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/134", "id": 90631404, "node_id": "MDU6SXNzdWU5MDYzMTQwNA==", "number": 134, "title": "Given steps are not running converters for examples", "user": {"login": "itspage", "id": 5963447, "node_id": "MDQ6VXNlcjU5NjM0NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5963447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itspage", "html_url": "https://github.com/itspage", "followers_url": "https://api.github.com/users/itspage/followers", "following_url": "https://api.github.com/users/itspage/following{/other_user}", "gists_url": "https://api.github.com/users/itspage/gists{/gist_id}", "starred_url": "https://api.github.com/users/itspage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itspage/subscriptions", "organizations_url": "https://api.github.com/users/itspage/orgs", "repos_url": "https://api.github.com/users/itspage/repos", "events_url": "https://api.github.com/users/itspage/events{/privacy}", "received_events_url": "https://api.github.com/users/itspage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-06-24T10:08:33Z", "updated_at": "2015-06-25T10:02:31Z", "closed_at": "2015-06-25T10:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following given decorator for a scenario outline with examples.\n\n@given(\"I have a product with price <base_price>\", converters=dict(base_price=int))\n\nInside the function, the converter hasn't run on base_price and it's still a string.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/131", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/131/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/131/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/131", "id": 89217767, "node_id": "MDU6SXNzdWU4OTIxNzc2Nw==", "number": 131, "title": "For Backgrounds with multiple scenarios", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-06-18T07:09:01Z", "updated_at": "2015-06-23T13:28:59Z", "closed_at": "2015-06-23T09:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have a single Examples section that can apply to all scenarios inside the background.\nNow I have to repeat the Examples for each scenario inside.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/129", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/129/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/129/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/129", "id": 87810596, "node_id": "MDU6SXNzdWU4NzgxMDU5Ng==", "number": 129, "title": "Would be nice to be able to separate out the Examples from the Scenario Outline", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-12T18:21:05Z", "updated_at": "2015-06-15T20:38:11Z", "closed_at": "2015-06-15T20:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "And be able to combine them independently\n\nThat way I can use the same scenario from different tests and drive them with different Example lines.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/128", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/128/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/128/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/128", "id": 87781746, "node_id": "MDU6SXNzdWU4Nzc4MTc0Ng==", "number": 128, "title": "Missing min six version dependency", "user": {"login": "dustinfarris", "id": 1087165, "node_id": "MDQ6VXNlcjEwODcxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1087165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinfarris", "html_url": "https://github.com/dustinfarris", "followers_url": "https://api.github.com/users/dustinfarris/followers", "following_url": "https://api.github.com/users/dustinfarris/following{/other_user}", "gists_url": "https://api.github.com/users/dustinfarris/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinfarris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinfarris/subscriptions", "organizations_url": "https://api.github.com/users/dustinfarris/orgs", "repos_url": "https://api.github.com/users/dustinfarris/repos", "events_url": "https://api.github.com/users/dustinfarris/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinfarris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-12T16:32:15Z", "updated_at": "2015-06-15T20:41:03Z", "closed_at": "2015-06-15T20:19:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Python 2.7, we have six pegged to a version that apparently does not have tools needed by the latest pytest-bdd.\n\nWe will probably upgrade our six install; but nonetheless, pytest-bdd should probably declare a minimum requirement.\n\n``` console\n$ pip install --upgrade pytest-bdd\n\nDownloading/unpacking pytest-bdd\n  Downloading pytest-bdd-2.11.1.tar.gz (55kB): 55kB downloaded\n  Running setup.py (path:/Users/dustin/.virtualenvs/napa/build/pytest-bdd/setup.py) egg_info for package pytest-bdd\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/Users/dustin/.virtualenvs/napa/build/pytest-bdd/setup.py\", line 11, in <module>\n        import pytest_bdd\n      File \"pytest_bdd/__init__.py\", line 6, in <module>\n        from pytest_bdd.steps import given, when, then\n      File \"pytest_bdd/steps.py\", line 43, in <module>\n        from .feature import parse_line, force_encode\n      File \"pytest_bdd/feature.py\", line 39, in <module>\n        @six.python_2_unicode_compatible\n    AttributeError: 'module' object has no attribute 'python_2_unicode_compatible'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/Users/dustin/.virtualenvs/napa/build/pytest-bdd/setup.py\", line 11, in <module>\n\n    import pytest_bdd\n\n  File \"pytest_bdd/__init__.py\", line 6, in <module>\n\n    from pytest_bdd.steps import given, when, then\n\n  File \"pytest_bdd/steps.py\", line 43, in <module>\n\n    from .feature import parse_line, force_encode\n\n  File \"pytest_bdd/feature.py\", line 39, in <module>\n\n    @six.python_2_unicode_compatible\n\nAttributeError: 'module' object has no attribute 'python_2_unicode_compatible'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/127", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/127/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/127/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/127", "id": 87434880, "node_id": "MDU6SXNzdWU4NzQzNDg4MA==", "number": 127, "title": "Add some documentation on what the role of the scenario function is", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-06-11T18:11:37Z", "updated_at": "2015-06-15T20:40:22Z", "closed_at": "2015-06-15T20:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "What kind of stuff can be done inside the function:\n\n```\n@scenario(...)\ndef test_001():\n    # What kind of stuff can be done here?\n    pass\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/125", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/125/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/125/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/125", "id": 86750611, "node_id": "MDU6SXNzdWU4Njc1MDYxMQ==", "number": 125, "title": "StepDefinitionNotFoundError should report Given/When/Then keyword", "user": {"login": "lrowe", "id": 290859, "node_id": "MDQ6VXNlcjI5MDg1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrowe", "html_url": "https://github.com/lrowe", "followers_url": "https://api.github.com/users/lrowe/followers", "following_url": "https://api.github.com/users/lrowe/following{/other_user}", "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions", "organizations_url": "https://api.github.com/users/lrowe/orgs", "repos_url": "https://api.github.com/users/lrowe/repos", "events_url": "https://api.github.com/users/lrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-06-09T22:07:16Z", "updated_at": "2015-06-10T09:30:24Z", "closed_at": "2015-06-10T08:38:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Step definitions are registered for specific keywords, so it would be useful to report which keyword was used in the failed lookup.\n\n```\npytest_bdd.exceptions.StepDefinitionNotFoundError: Step definition is not found: \"I should see an element with the css selector \"table.sticky-area > tbody > tr\"\". Line 6 in scenario \"Table\" in the feature \"/Users/lrowe/encoded/src/encoded/tests/features/experiments.feature\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/124", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/124/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/124/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/124", "id": 86405893, "node_id": "MDU6SXNzdWU4NjQwNTg5Mw==", "number": 124, "title": "Scenario Outline placeholders not replaced with example values in argumented steps", "user": {"login": "lrowe", "id": 290859, "node_id": "MDQ6VXNlcjI5MDg1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrowe", "html_url": "https://github.com/lrowe", "followers_url": "https://api.github.com/users/lrowe/followers", "following_url": "https://api.github.com/users/lrowe/following{/other_user}", "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions", "organizations_url": "https://api.github.com/users/lrowe/orgs", "repos_url": "https://api.github.com/users/lrowe/repos", "events_url": "https://api.github.com/users/lrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-06-09T01:53:43Z", "updated_at": "2016-08-30T09:02:07Z", "closed_at": "2015-07-15T13:24:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With Cucumber and Behave, scenario outline steps have their placeholders substituted with the real values from the current example before the step definition is looked up.\n\nWe have a library of steps with arguments implementing commonly used parts of the Splinter API. So an outlined scenario might look like this:\n\n``` cucumber\nFeature: Generics\n    Scenario Outline: Visit collection and page\n        When I visit \"/<item_type>/\"\n        When I click the link with text that contains \"<link_text>\"\n\n    Examples: Collections\n        | item_type                     | link_text                             |\n        | antibody_lot                  | ENCAB000ACQ                           |\n```\n\nUsing step definitions:\n\n``` python\n@when(parse('I visit \"{url}\"'))\ndef when_i_visit_url(browser, base_url, url):\n    full_url = urljoin(base_url, url)\n    browser.visit(full_url)\n\n@when(parse('I click the link with text that contains \"{text}\"'))\ndef click_link_with_text_that_contains(browser, text):\n    anchors = browser.find_link_by_partial_text(text)\n    anchors.first.click()\n```\n\nHowever here , the url for `When I visit \"/<item_type>/\"` is the unsubstituted string: `\"/<item_type>/\"`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/122", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/122/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/122/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/122", "id": 85931073, "node_id": "MDU6SXNzdWU4NTkzMTA3Mw==", "number": 122, "title": "StepTypeError when different step types have the same step name", "user": {"login": "lrowe", "id": 290859, "node_id": "MDQ6VXNlcjI5MDg1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrowe", "html_url": "https://github.com/lrowe", "followers_url": "https://api.github.com/users/lrowe/followers", "following_url": "https://api.github.com/users/lrowe/following{/other_user}", "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions", "organizations_url": "https://api.github.com/users/lrowe/orgs", "repos_url": "https://api.github.com/users/lrowe/repos", "events_url": "https://api.github.com/users/lrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-07T19:20:54Z", "updated_at": "2015-06-08T08:30:10Z", "closed_at": "2015-06-08T08:30:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a step is registered for both when and then it throws a StepTypeError because the first step registration decorator (first decorator runs last) overwrites the step registration of the other step registration. Similar to #120 \n\nTest case: https://github.com/lrowe/pytest-bdd/tree/same-step-name\n\nInterestingly the builtin `trace` decorator which is registered for all of given/when/then does appear to work for `When trace` and `Then trace`: https://github.com/pytest-dev/pytest-bdd/blob/2.10.0/pytest_bdd/plugin.py#L24\n\nThat seems to be due to the function name being the same as the step name and the `Given trace`  fixture being incorrectly loaded. Taking an example:\n\n``` cucumber\nFeature: Trace\n    Scenario: When trace\n        When trace\n```\n\n``` python\nfrom pytest_bdd import scenario\n\n\n@scenario('trace.feature', 'When trace')\ndef test_when_trace():\n    pass\n```\n\nContinuing from `When trace` throws an AttributeError when I would expect the test to pass:\n\n```\n$ .tox/py34/bin/py.test test_trace.py --tb native\n========================================== test session starts ===========================================\nplatform darwin -- Python 3.4.2 -- py-1.4.28 -- pytest-2.7.1 -- /Users/lrowe/scratch/pytest-bdd/.tox/py34/bin/python3.4\ncachedir: /Users/lrowe/scratch/pytest-bdd/.cache\nrootdir: /Users/lrowe/scratch/pytest-bdd, inifile: tox.ini\nplugins: bdd, cache, cov, pep8, xdist\ncollected 1 items \n\ntest_trace.py::test_when_trace \n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB set_trace (IO-capturing turned off) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n--Return--\n> /Users/lrowe/scratch/pytest-bdd/pytest_bdd/plugin.py(29)trace()->None\n-> pytest.set_trace()\n(Pdb) c\nFAILED\n\n================================================ FAILURES ================================================\n____________________________________________ test_when_trace _____________________________________________\nTraceback (most recent call last):\n  File \"/Users/lrowe/scratch/pytest-bdd/test_trace.py\", line 5, in test_when_trace\n    def test_when_trace():\n  File \"/Users/lrowe/scratch/pytest-bdd/pytest_bdd/scenario.py\", line 179, in _execute_scenario\n    if step_func.step_type != step.type:\nAttributeError: 'NoneType' object has no attribute 'step_type'\n======================================== 1 failed in 1.24 seconds ========================================\n```\n\nRenaming the function `def trace():` in plugin.py to `def trace2():` exposes the underlying error reported here:\n\n```\n$ .tox/py34/bin/py.test test_trace.py --tb native\n========================================== test session starts ===========================================\nplatform darwin -- Python 3.4.2 -- py-1.4.28 -- pytest-2.7.1 -- /Users/lrowe/scratch/pytest-bdd/.tox/py34/bin/python3.4\ncachedir: /Users/lrowe/scratch/pytest-bdd/.cache\nrootdir: /Users/lrowe/scratch/pytest-bdd, inifile: tox.ini\nplugins: bdd, cache, cov, pep8, xdist\ncollected 1 items \n\ntest_trace.py::test_when_trace FAILED\n\n================================================ FAILURES ================================================\n____________________________________________ test_when_trace _____________________________________________\nTraceback (most recent call last):\n  File \"/Users/lrowe/scratch/pytest-bdd/test_trace.py\", line 5, in test_when_trace\n    def test_when_trace():\n  File \"/Users/lrowe/scratch/pytest-bdd/pytest_bdd/scenario.py\", line 181, in _execute_scenario\n    'Wrong step type \"{0}\" while \"{1}\" is expected.'.format(step_func.step_type, step.type)\npytest_bdd.exceptions.StepTypeError: Wrong step type \"given\" while \"when\" is expected.\n======================================== 1 failed in 0.01 seconds ========================================\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/120", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/120/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/120/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/120", "id": 85860810, "node_id": "MDU6SXNzdWU4NTg2MDgxMA==", "number": 120, "title": "StepDefinitionNotFoundError when function name same as step name", "user": {"login": "lrowe", "id": 290859, "node_id": "MDQ6VXNlcjI5MDg1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrowe", "html_url": "https://github.com/lrowe", "followers_url": "https://api.github.com/users/lrowe/followers", "following_url": "https://api.github.com/users/lrowe/following{/other_user}", "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions", "organizations_url": "https://api.github.com/users/lrowe/orgs", "repos_url": "https://api.github.com/users/lrowe/repos", "events_url": "https://api.github.com/users/lrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-07T05:30:32Z", "updated_at": "2015-06-08T07:09:15Z", "closed_at": "2015-06-08T07:09:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A step name implemented by the same named function throws a StepDefinitionNotFound error as the step definition is overwritten by the function itself once it is returned from the decorator.\n\nTest case: https://github.com/lrowe/pytest-bdd/tree/same-function-name\n\nMy initial thought was to work around this by prefixing with '__step_' the name set on the module by `.steps.contribute_to_module` and looked up by `.scenario._find_step_function`, but that ran into problems with argumented steps:\n\n``` diff\ndiff --git a/pytest_bdd/scenario.py b/pytest_bdd/scenario.py\nindex 9cf4a39..966c631 100644\n--- a/pytest_bdd/scenario.py\n+++ b/pytest_bdd/scenario.py\n@@ -84,12 +84,12 @@ def _find_step_function(request, step, scenario, encoding):\n     \"\"\"\n     name = step.name\n     try:\n-        return request.getfuncargvalue(force_encode(name, encoding))\n+        return request.getfuncargvalue('__step_' + force_encode(name, encoding))\n     except python.FixtureLookupError:\n         try:\n             name = find_argumented_step_fixture_name(name, request._fixturemanager, request)\n             if name:\n-                return request.getfuncargvalue(name)\n+                return request.getfuncargvalue('__step_' + name)\n             raise\n         except python.FixtureLookupError:\n             raise exceptions.StepDefinitionNotFoundError(\ndiff --git a/pytest_bdd/steps.py b/pytest_bdd/steps.py\nindex 07ef4e6..d698a51 100644\n--- a/pytest_bdd/steps.py\n+++ b/pytest_bdd/steps.py\n@@ -237,7 +237,7 @@ def contribute_to_module(module, name, func):\n\n     :return: New function copy contributed to the module\n     \"\"\"\n-    name = force_encode(name)\n+    name = '__step_' + force_encode(name)\n     func = recreate_function(func, module=module)\n     setattr(module, name, func)\n     return func\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/118", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/118/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/118/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/118", "id": 85368534, "node_id": "MDU6SXNzdWU4NTM2ODUzNA==", "number": 118, "title": "Allowing when steps to follow then steps?", "user": {"login": "lrowe", "id": 290859, "node_id": "MDQ6VXNlcjI5MDg1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrowe", "html_url": "https://github.com/lrowe", "followers_url": "https://api.github.com/users/lrowe/followers", "following_url": "https://api.github.com/users/lrowe/following{/other_user}", "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions", "organizations_url": "https://api.github.com/users/lrowe/orgs", "repos_url": "https://api.github.com/users/lrowe/repos", "events_url": "https://api.github.com/users/lrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-06-05T01:43:08Z", "updated_at": "2018-08-28T07:13:52Z", "closed_at": "2015-06-16T10:55:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While it is generally good practice to order steps Given/When/Then it can sometimes be expedient to check conditions part way through a complex scenario (e.g. a multi-page form.)\n\nI think the ordering checks in [feature.py](https://github.com/pytest-dev/pytest-bdd/blob/2.10.0/pytest_bdd/feature.py#L222) should be relaxed.\n\nCucumber [doesn't distinguish between step types](https://github.com/cucumber/cucumber/wiki/Given-When-Then) internally and does not enforce ordering. With behave one can register for all keywords using the `step()` decorator and ordering is not enforced.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/117", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/117/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/117/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/117", "id": 85242091, "node_id": "MDU6SXNzdWU4NTI0MjA5MQ==", "number": 117, "title": "Logging of step progress/failures?", "user": {"login": "lrowe", "id": 290859, "node_id": "MDQ6VXNlcjI5MDg1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/290859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrowe", "html_url": "https://github.com/lrowe", "followers_url": "https://api.github.com/users/lrowe/followers", "following_url": "https://api.github.com/users/lrowe/following{/other_user}", "gists_url": "https://api.github.com/users/lrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrowe/subscriptions", "organizations_url": "https://api.github.com/users/lrowe/orgs", "repos_url": "https://api.github.com/users/lrowe/repos", "events_url": "https://api.github.com/users/lrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/lrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-06-04T19:30:18Z", "updated_at": "2015-07-15T13:24:21Z", "closed_at": "2015-07-15T13:24:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm probably missing something obvious, but is there a plain text reporting option that logs progress step by step to stdout?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/112", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/112/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/112/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/112", "id": 77180072, "node_id": "MDU6SXNzdWU3NzE4MDA3Mg==", "number": 112, "title": "Markers with @ Prefix Can't be used in Expressions", "user": {"login": "kevinastone", "id": 1234915, "node_id": "MDQ6VXNlcjEyMzQ5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1234915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinastone", "html_url": "https://github.com/kevinastone", "followers_url": "https://api.github.com/users/kevinastone/followers", "following_url": "https://api.github.com/users/kevinastone/following{/other_user}", "gists_url": "https://api.github.com/users/kevinastone/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinastone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinastone/subscriptions", "organizations_url": "https://api.github.com/users/kevinastone/orgs", "repos_url": "https://api.github.com/users/kevinastone/repos", "events_url": "https://api.github.com/users/kevinastone/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinastone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-17T01:36:49Z", "updated_at": "2015-06-04T12:14:55Z", "closed_at": "2015-06-04T12:11:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you just leave off the `@` symbol, it works as expected.  The docs (wrongly) suggest that you can use the cucumber tag with that at symbol:\nhttps://github.com/pytest-dev/pytest-bdd/blob/master/README.rst#organizing-your-scenarios\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/109", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/109/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/109/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/109", "id": 66818210, "node_id": "MDU6SXNzdWU2NjgxODIxMA==", "number": 109, "title": "Scenario Outline uses @pytest.fixture rather than @pytest.mark.parameterize", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2015-04-07T08:11:49Z", "updated_at": "2015-04-07T16:42:37Z", "closed_at": "2015-04-07T16:41:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "This causes the entire scenario to be replayed rather than the parameterized steps.\n\nWould it be possible to provide a hint to use parameterize? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/108", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/108/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/108/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/108", "id": 66119399, "node_id": "MDU6SXNzdWU2NjExOTM5OQ==", "number": 108, "title": "Can @when, @given, @then etc. work with instance methods?", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-03T10:07:31Z", "updated_at": "2015-06-05T04:36:09Z", "closed_at": "2015-06-05T04:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we make a class implement a scenario? Then common steps can be in a base class.\n\nYour docs don't explicitly say one way or the other.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/107", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/107/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/107/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/107", "id": 65398348, "node_id": "MDU6SXNzdWU2NTM5ODM0OA==", "number": 107, "title": "Missing step in documentatiom", "user": {"login": "sureshvv", "id": 506019, "node_id": "MDQ6VXNlcjUwNjAxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/506019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sureshvv", "html_url": "https://github.com/sureshvv", "followers_url": "https://api.github.com/users/sureshvv/followers", "following_url": "https://api.github.com/users/sureshvv/following{/other_user}", "gists_url": "https://api.github.com/users/sureshvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sureshvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sureshvv/subscriptions", "organizations_url": "https://api.github.com/users/sureshvv/orgs", "repos_url": "https://api.github.com/users/sureshvv/repos", "events_url": "https://api.github.com/users/sureshvv/events{/privacy}", "received_events_url": "https://api.github.com/users/sureshvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-31T08:37:56Z", "updated_at": "2015-03-31T08:42:46Z", "closed_at": "2015-03-31T08:42:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "In publish_article.feature:\n\nThe step:\n\nGiven I'm an author user\n\nis not implemented. \n\nIs this an oversight? Is this supposed to come from a different feature?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/105", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/105/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/105/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/105", "id": 62272392, "node_id": "MDU6SXNzdWU2MjI3MjM5Mg==", "number": 105, "title": "pytest-bdd generator needs to set encoding for the file", "user": {"login": "santagada", "id": 225897, "node_id": "MDQ6VXNlcjIyNTg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/225897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santagada", "html_url": "https://github.com/santagada", "followers_url": "https://api.github.com/users/santagada/followers", "following_url": "https://api.github.com/users/santagada/following{/other_user}", "gists_url": "https://api.github.com/users/santagada/gists{/gist_id}", "starred_url": "https://api.github.com/users/santagada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santagada/subscriptions", "organizations_url": "https://api.github.com/users/santagada/orgs", "repos_url": "https://api.github.com/users/santagada/repos", "events_url": "https://api.github.com/users/santagada/events{/privacy}", "received_events_url": "https://api.github.com/users/santagada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-17T03:19:36Z", "updated_at": "2015-03-18T13:57:25Z", "closed_at": "2015-03-17T21:57:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "it should put a \"# coding: utf-8\" in the beginning of the file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/104", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/104/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/104/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/104", "id": 62218883, "node_id": "MDU6SXNzdWU2MjIxODg4Mw==", "number": 104, "title": "doc: multiline-steps: code snippet wrong?", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-03-16T21:49:50Z", "updated_at": "2015-03-16T22:53:06Z", "closed_at": "2015-03-16T22:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation on https://github.com/pytest-dev/pytest-bdd#multiline-steps (https://github.com/pytest-dev/pytest-bdd/blame/master/README.rst#L317-L321) seems to be wrong:\n\n```\n@then('the text should be parsed with correct indentation')\ndef eat_cucumbers(i_have_text, text):\n    assert i_have_text == text == \"\"\"Some\nExtra\nLines\"\"\"\n```\n\nI cannot see where the \"Some\\nExtra\\nLines\" is coming from.  Probably the\nassertion needs to be fixed / enhanced to handle / compare the indentation.\n\nAlso, while at it, the function should be renamed. It's not about cucumbers\nin this section.. :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/103", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/103/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/103/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/103", "id": 62166920, "node_id": "MDU6SXNzdWU2MjE2NjkyMA==", "number": 103, "title": "Auto-create scenario test functions", "user": {"login": "santagada", "id": 225897, "node_id": "MDQ6VXNlcjIyNTg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/225897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santagada", "html_url": "https://github.com/santagada", "followers_url": "https://api.github.com/users/santagada/followers", "following_url": "https://api.github.com/users/santagada/following{/other_user}", "gists_url": "https://api.github.com/users/santagada/gists{/gist_id}", "starred_url": "https://api.github.com/users/santagada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santagada/subscriptions", "organizations_url": "https://api.github.com/users/santagada/orgs", "repos_url": "https://api.github.com/users/santagada/repos", "events_url": "https://api.github.com/users/santagada/events{/privacy}", "received_events_url": "https://api.github.com/users/santagada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-03-16T18:12:32Z", "updated_at": "2015-07-19T13:35:24Z", "closed_at": "2015-03-18T23:00:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pytest-bdd would be much more awesome if it would auto create scenario functions, so you wouldn't have to define empty functions just to make the test go. I think this either could be implemented as a test collector (also would make the test reporter more user friendly as it would show the feature file as the source of tests) or it could be just a invocation form of scenario function like:\n\nscenario('feature/something.feature', auto=True)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/99", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/99/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/99/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/99", "id": 61746236, "node_id": "MDU6SXNzdWU2MTc0NjIzNg==", "number": 99, "title": "# is unconditionally treated as a comment starter", "user": {"login": "santagada", "id": 225897, "node_id": "MDQ6VXNlcjIyNTg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/225897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santagada", "html_url": "https://github.com/santagada", "followers_url": "https://api.github.com/users/santagada/followers", "following_url": "https://api.github.com/users/santagada/following{/other_user}", "gists_url": "https://api.github.com/users/santagada/gists{/gist_id}", "starred_url": "https://api.github.com/users/santagada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santagada/subscriptions", "organizations_url": "https://api.github.com/users/santagada/orgs", "repos_url": "https://api.github.com/users/santagada/repos", "events_url": "https://api.github.com/users/santagada/events{/privacy}", "received_events_url": "https://api.github.com/users/santagada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-15T04:26:04Z", "updated_at": "2015-03-16T18:41:22Z", "closed_at": "2015-03-15T15:33:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There should be a way to escape a # or even better, if it is inside quotes or on a table it should be treated as data.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/94", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/94/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/94/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/94", "id": 53154967, "node_id": "MDU6SXNzdWU1MzE1NDk2Nw==", "number": 94, "title": "pytest-bdd -> py.test || py.test-bdd?", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-30T23:07:11Z", "updated_at": "2015-01-06T11:04:21Z", "closed_at": "2015-01-06T11:04:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm not sure but probably `pytest` command is somehow not used (legacy?). Pytest is using now `py.test` as entrypoint.\nI think pytest-bdd could use plugins to integrate with py.test (like other plugins do) and then to run the test only `py.test` command would be needed. I only assume that `output` plugin has to be changed to what `pytest-bdd` is using right now, but I didn't look is it hard or not, just an idea.\n\nIf it would be not easy/not needed change, still maybe would be better to follow pytest and use something like `py.test-bdd`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/93", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/93/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/93/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/93", "id": 53154772, "node_id": "MDU6SXNzdWU1MzE1NDc3Mg==", "number": 93, "title": "pytest-bdd throws error under python3.4", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-30T23:03:28Z", "updated_at": "2015-01-07T22:11:07Z", "closed_at": "2015-01-07T09:55:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To reproduce:\n\n```\nvirtualenv bdd -p python3.4 && bdd/bin/pip install pytest-bdd && bdd/bin/pytest-bdd\n```\n\nOutput:\n\n```\nTraceback (most recent call last):\n  File \"bdd/bin/pytest-bdd\", line 9, in <module>\n    load_entry_point('pytest-bdd==2.5.3', 'console_scripts', 'pytest-bdd')()\n  File \"/home/spinus/tmp/bdd/lib/python3.4/site-packages/pytest_bdd/scripts.py\", line 78, in main\n    args.func(args)\nAttributeError: 'Namespace' object has no attribute 'func'\n```\n\nAlso line 59 in setup.py:\n\n```\n] + [(\"Programming Language :: Python :: %s\" % x) for x in \"2.6 2.7 3.0 3.1 3.2 3.3\".split()],\n```\n\nmissing 3.4 but tox.ini has it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/92", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/92/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/92/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/92", "id": 53154511, "node_id": "MDU6SXNzdWU1MzE1NDUxMQ==", "number": 92, "title": "Not implemented scenarios are silently omitted.", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-12-30T22:59:09Z", "updated_at": "2015-01-08T00:53:28Z", "closed_at": "2015-01-08T00:53:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When the test is not implemented they are not executed without a warning.\nI can imagine scenario like:\n1. I have a feature file with scenario \"This is my scenario\"\n2. I have implemented scenario with:\n\n```\n@scenario(\"my.feature\", \"This is my scenario\")\n```\n1. I forgot to add dot to a feature file and I'm adding now.\n2. If I forgot to fix implementation the scenario is lost silently.\n\nIt would be nice to have a warning/error (pytest command line option?) to say that some tests are not implemented (or maybe even that some steps are never used?).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/91", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/91/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/91/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/91", "id": 53154046, "node_id": "MDU6SXNzdWU1MzE1NDA0Ng==", "number": 91, "title": "Simpler text matcher idea", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-30T22:51:03Z", "updated_at": "2015-01-08T21:14:48Z", "closed_at": "2015-01-07T15:27:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Regex is powerful tool but sometimes this power is not needed.\nProbably for most cases just simple parser could be used (idea stolen from behave framework) \u2013 https://pypi.python.org/pypi/parse could be used as supplement to regexes in case of matching scenarios.\n\nIn that case step definition could be like:\n\n```\n@Given(\"I have {number} items\")\n@Given(\"the temperature is {temperature:float}C\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/90", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/90/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/90/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/90", "id": 53153761, "node_id": "MDU6SXNzdWU1MzE1Mzc2MQ==", "number": 90, "title": "@scenario decorator is an overkill", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-30T22:46:06Z", "updated_at": "2015-01-08T21:19:34Z", "closed_at": "2015-01-08T21:19:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Repeating full scenario phrase in feature file and then in `@scenario` decorator is a little cumbersome. As @bubenkoff said, that approach has few values over the implicit scenario detection. \nSome of them:\n- assertion in scenario function (executed after scenario is run)\n- scenarios can be parametrized and use fixtures\n  So removing @scenario decorator won't work as we want to have those features.\n  But maybe for simple feature files without a lot of requirements we can have a `@scenarios('<feature_file>`)` decorator which can generate all scenarios in specific feature file?\n\nThen it could look like:\n\n```\n@scenarios(\"my.feature\")\ndef _(fixture_for_all_scenarios_in_that_feature):\n    pass\n```\n\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/89", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/89/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/89/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/89", "id": 53153209, "node_id": "MDU6SXNzdWU1MzE1MzIwOQ==", "number": 89, "title": "DRY for function names when applying decorators", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-12-30T22:37:37Z", "updated_at": "2015-01-08T23:03:51Z", "closed_at": "2015-01-08T21:19:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Tests are created using `@scenario` decorator and after that the function has to be written (with unique function name). So basically test name exist in 3 places, feature file, decorator and (kind of) in function name. Instead something like:\n\n```\n@scenario(....)\ndef _():\n    pass\n```\n\ncould be used to generate functions automatically searching for unique names.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/87", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/87/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/87/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/87", "id": 52970637, "node_id": "MDU6SXNzdWU1Mjk3MDYzNw==", "number": 87, "title": "before/after scenario hook", "user": {"login": "spinus", "id": 950799, "node_id": "MDQ6VXNlcjk1MDc5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spinus", "html_url": "https://github.com/spinus", "followers_url": "https://api.github.com/users/spinus/followers", "following_url": "https://api.github.com/users/spinus/following{/other_user}", "gists_url": "https://api.github.com/users/spinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/spinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spinus/subscriptions", "organizations_url": "https://api.github.com/users/spinus/orgs", "repos_url": "https://api.github.com/users/spinus/repos", "events_url": "https://api.github.com/users/spinus/events{/privacy}", "received_events_url": "https://api.github.com/users/spinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-28T01:59:54Z", "updated_at": "2014-12-29T16:11:41Z", "closed_at": "2014-12-29T16:11:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Two things:\n1. before scenario hook is not documented.\n2. there is no after scenario hook :(\n\nIt would be nice to have full stack as in all \"cucumber\" frameworks, I mean: before/after, all, feature, scenario, step. What do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/85", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/85/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/85/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/85", "id": 52267527, "node_id": "MDU6SXNzdWU1MjI2NzUyNw==", "number": 85, "title": "simple code generator mixes up step order", "user": {"login": "webappzero", "id": 1661060, "node_id": "MDQ6VXNlcjE2NjEwNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1661060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webappzero", "html_url": "https://github.com/webappzero", "followers_url": "https://api.github.com/users/webappzero/followers", "following_url": "https://api.github.com/users/webappzero/following{/other_user}", "gists_url": "https://api.github.com/users/webappzero/gists{/gist_id}", "starred_url": "https://api.github.com/users/webappzero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webappzero/subscriptions", "organizations_url": "https://api.github.com/users/webappzero/orgs", "repos_url": "https://api.github.com/users/webappzero/repos", "events_url": "https://api.github.com/users/webappzero/events{/privacy}", "received_events_url": "https://api.github.com/users/webappzero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-17T17:26:46Z", "updated_at": "2014-12-17T21:58:35Z", "closed_at": "2014-12-17T21:58:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a [this directory structure](http://goo.gl/CKbc9x) and [this feature file](https://github.com/jaymartin7/pytest_trace/blob/master/tracepkg/features/feature1.feature):\n\nWhen I run `pytest-bdd generate features/feature1.feature` from within the tracepkg directory, I get the following output:\n\n<pre>\"\"\"Minimum viable bdd feature tests.\"\"\"\n\nfrom pytest_bdd import (\n    given,\n    scenario,\n    then,\n    when,\n)\n\n\n@scenario('features/feature1.feature', 'Verify all bdd project components')\ndef test_verify_all_bdd_project_components():\n    \"\"\"Verify all bdd project components.\"\"\"\n\n\n@given('I'm a project admin')\ndef im_a_project_admin():\n    \"\"\"I'm a project admin.\"\"\"\n\n\n@then('I should see a features directory')\ndef i_should_see_a_features_directory():\n    \"\"\"I should see a features directory.\"\"\"\n\n\n@then('I should see a test directory')\ndef i_should_see_a_test_directory():\n    \"\"\"I should see a test directory.\"\"\"\n\n\n@then('I should see a test/bdd directory')\ndef i_should_see_a_testbdd_directory():\n    \"\"\"I should see a test/bdd directory.\"\"\"\n\n\n@when('I read the project's package directory')\ndef i_read_the_projects_package_directory():\n    \"\"\"I read the project's package directory.\"\"\"</pre>\n\n\nBut I expected to see given, when, then, then, then and NOT given, then, then, then, when. Ideally, the steps would be ordered by gherkin step conventions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/82", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/82/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/82/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/82", "id": 51232444, "node_id": "MDU6SXNzdWU1MTIzMjQ0NA==", "number": 82, "title": "improve readme example of reusing fixtures", "user": {"login": "webappzero", "id": 1661060, "node_id": "MDQ6VXNlcjE2NjEwNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1661060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webappzero", "html_url": "https://github.com/webappzero", "followers_url": "https://api.github.com/users/webappzero/followers", "following_url": "https://api.github.com/users/webappzero/following{/other_user}", "gists_url": "https://api.github.com/users/webappzero/gists{/gist_id}", "starred_url": "https://api.github.com/users/webappzero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webappzero/subscriptions", "organizations_url": "https://api.github.com/users/webappzero/orgs", "repos_url": "https://api.github.com/users/webappzero/repos", "events_url": "https://api.github.com/users/webappzero/events{/privacy}", "received_events_url": "https://api.github.com/users/webappzero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-07T21:34:32Z", "updated_at": "2014-12-08T09:09:44Z", "closed_at": "2014-12-08T09:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Within https://github.com/olegpidsadnyi/pytest-bdd#reusing-fixtures the example provided shows a previously used code snippet: `given('I have beautiful article', fixture='article')`\n\nI'm not understanding from what's shown how this is being 'reused with another name'. Could we also say `given('I have beautiful article', fixture='banana')` and how would affect things. I think more context would help. Thank you : )\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/78", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/78/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/78/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/78", "id": 46538860, "node_id": "MDU6SXNzdWU0NjUzODg2MA==", "number": 78, "title": "A single fixture for several given clauses", "user": {"login": "k4nar", "id": 2692721, "node_id": "MDQ6VXNlcjI2OTI3MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2692721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k4nar", "html_url": "https://github.com/k4nar", "followers_url": "https://api.github.com/users/k4nar/followers", "following_url": "https://api.github.com/users/k4nar/following{/other_user}", "gists_url": "https://api.github.com/users/k4nar/gists{/gist_id}", "starred_url": "https://api.github.com/users/k4nar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k4nar/subscriptions", "organizations_url": "https://api.github.com/users/k4nar/orgs", "repos_url": "https://api.github.com/users/k4nar/repos", "events_url": "https://api.github.com/users/k4nar/events{/privacy}", "received_events_url": "https://api.github.com/users/k4nar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-10-22T17:46:42Z", "updated_at": "2014-10-23T20:18:31Z", "closed_at": "2014-10-23T16:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm starting to use pytest-bdd, which seems a very interesting plugin ! But I'm experiencing some troubles with the fixtures returned by the given steps.\n\nI have the following feature : \n\n``` gherkin\nScenario: Logging in\n  Given I'm a user\n  When I go to the login page\n  And I enter my credentials\n  And I submit the form\n  Then I should be logged-in\n  And I should be redirected\n\nScenario: Logging in with non verified email\n  Given I'm a user with a non verified email\n  When I go to the login page\n  And I enter my credentials\n  And I submit the form\n  Then I should be redirected to the email confirmation page\n```\n\nMy issue is with the \"I enter my credentials\" step. This step require the `user` fixture which is returned by the previous given step. But as you can see, I have a different given step in each scenario, which both return an user.\n\nI don't know how to implement this behavior with pytest-bdd, but I don't see why I couldn't. I managed to do it using a global variable rather than the fixture returned by the given steps, but it's not very elegant.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/62", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/62/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/62/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/62", "id": 42435122, "node_id": "MDU6SXNzdWU0MjQzNTEyMg==", "number": 62, "title": "pytest-bdd makes conftest module evaluate twice", "user": {"login": "ropez", "id": 431220, "node_id": "MDQ6VXNlcjQzMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/431220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ropez", "html_url": "https://github.com/ropez", "followers_url": "https://api.github.com/users/ropez/followers", "following_url": "https://api.github.com/users/ropez/following{/other_user}", "gists_url": "https://api.github.com/users/ropez/gists{/gist_id}", "starred_url": "https://api.github.com/users/ropez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ropez/subscriptions", "organizations_url": "https://api.github.com/users/ropez/orgs", "repos_url": "https://api.github.com/users/ropez/repos", "events_url": "https://api.github.com/users/ropez/events{/privacy}", "received_events_url": "https://api.github.com/users/ropez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-09-10T16:57:49Z", "updated_at": "2014-09-15T07:53:45Z", "closed_at": "2014-09-15T07:53:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have prepared a minimal case to demonstrate this issue:\nhttps://github.com/ropez/pytest-bdd-issue\n\nHaving a `conftest.py` in a subdirectory, and the subdirectory also having a `__init__.py`, the conftest module is evaluated twice. This is an important issue, because any hooks added there, such as `pytest_pyfunc_call`, will be registered twice, and called twice for each test case. This is causing problems in our actual, much bigger project.\n\nRemoving pytest-bdd from the equation, for instance by commenting out the `@scenario` decorator to make it a simple test function, removes the problem. Also, running py.test inside the subdirectory, or deleting the `__init__.py` file, removes the problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/61", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-bdd", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/61/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-bdd/issues/61/events", "html_url": "https://github.com/pytest-dev/pytest-bdd/issues/61", "id": 40992590, "node_id": "MDU6SXNzdWU0MDk5MjU5MA==", "number": 61, "title": "Is pytest-bdd still being maintained?", "user": {"login": "dustinfarris", "id": 1087165, "node_id": "MDQ6VXNlcjEwODcxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1087165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinfarris", "html_url": "https://github.com/dustinfarris", "followers_url": "https://api.github.com/users/dustinfarris/followers", "following_url": "https://api.github.com/users/dustinfarris/following{/other_user}", "gists_url": "https://api.github.com/users/dustinfarris/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinfarris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinfarris/subscriptions", "organizations_url": "https://api.github.com/users/dustinfarris/orgs", "repos_url": "https://api.github.com/users/dustinfarris/repos", "events_url": "https://api.github.com/users/dustinfarris/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinfarris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-24T02:14:17Z", "updated_at": "2014-08-29T05:18:27Z", "closed_at": "2014-08-29T05:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Awful quiet in here.\n", "performed_via_github_app": null, "score": 1.0}]}