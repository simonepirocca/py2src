{"total_count": 2927, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/psf/requests/issues/5557", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5557/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5557/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5557/events", "html_url": "https://github.com/psf/requests/issues/5557", "id": 678208612, "node_id": "MDU6SXNzdWU2NzgyMDg2MTI=", "number": 5557, "title": "about redirection", "user": {"login": "daffapaggani", "id": 60337599, "node_id": "MDQ6VXNlcjYwMzM3NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/60337599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daffapaggani", "html_url": "https://github.com/daffapaggani", "followers_url": "https://api.github.com/users/daffapaggani/followers", "following_url": "https://api.github.com/users/daffapaggani/following{/other_user}", "gists_url": "https://api.github.com/users/daffapaggani/gists{/gist_id}", "starred_url": "https://api.github.com/users/daffapaggani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daffapaggani/subscriptions", "organizations_url": "https://api.github.com/users/daffapaggani/orgs", "repos_url": "https://api.github.com/users/daffapaggani/repos", "events_url": "https://api.github.com/users/daffapaggani/events{/privacy}", "received_events_url": "https://api.github.com/users/daffapaggani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T07:11:06Z", "updated_at": "2020-08-14T01:40:39Z", "closed_at": "2020-08-14T01:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "i know python requests is dynamic httplib, but some problem with requests. \r\n\r\n'requests.exceptions.TooManyRedirects: Exceeded 30 redirects.'\r\ni am already increase max redirect , but same response.\r\n\r\ni am try using other ISP 'requests' is perfect and nothing problem. and cross check , problem is ISP . there injection ads from my ISP\r\n\r\nhow i can baypass injection ads  ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5556", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5556/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5556/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5556/events", "html_url": "https://github.com/psf/requests/issues/5556", "id": 677393109, "node_id": "MDU6SXNzdWU2NzczOTMxMDk=", "number": 5556, "title": "HEAD request inexplicably failing", "user": {"login": "dopplershift", "id": 221526, "node_id": "MDQ6VXNlcjIyMTUyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/221526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dopplershift", "html_url": "https://github.com/dopplershift", "followers_url": "https://api.github.com/users/dopplershift/followers", "following_url": "https://api.github.com/users/dopplershift/following{/other_user}", "gists_url": "https://api.github.com/users/dopplershift/gists{/gist_id}", "starred_url": "https://api.github.com/users/dopplershift/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dopplershift/subscriptions", "organizations_url": "https://api.github.com/users/dopplershift/orgs", "repos_url": "https://api.github.com/users/dopplershift/repos", "events_url": "https://api.github.com/users/dopplershift/events{/privacy}", "received_events_url": "https://api.github.com/users/dopplershift/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-12T05:21:12Z", "updated_at": "2020-08-12T18:13:10Z", "closed_at": "2020-08-12T18:13:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "A HEAD request to this [website](https://www.ncdc.noaa.gov/data-access/model-data/model-datasets/north-american-regional-reanalysis-narr) is inexplicably giving `RemoteDisconnected`. A GET request to the same URL succeeds. Issuing a HEAD request using `curl --head https://www.ncdc.noaa.gov/data-access/model-data/model-datasets/north-american-regional-reanalysis-narr` also succeeds.\r\n\r\n## Expected Result\r\n\r\nNo error.\r\n\r\n## Actual Result\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nRemoteDisconnected                        Traceback (most recent call last)\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\r\n    669             # Make the request on the httplib connection object.\r\n--> 670             httplib_response = self._make_request(\r\n    671                 conn,\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)\r\n    425                     # Otherwise it looks like a bug in the code.\r\n--> 426                     six.raise_from(e, None)\r\n    427         except (SocketTimeout, BaseSSLError, SocketError) as e:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/packages/six.py in raise_from(value, from_value)\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)\r\n    420                 try:\r\n--> 421                     httplib_response = conn.getresponse()\r\n    422                 except BaseException as e:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/http/client.py in getresponse(self)\r\n   1346             try:\r\n-> 1347                 response.begin()\r\n   1348             except ConnectionError:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/http/client.py in begin(self)\r\n    306         while True:\r\n--> 307             version, status, reason = self._read_status()\r\n    308             if status != CONTINUE:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/http/client.py in _read_status(self)\r\n    275             # sending a valid response.\r\n--> 276             raise RemoteDisconnected(\"Remote end closed connection without\"\r\n    277                                      \" response\")\r\n\r\nRemoteDisconnected: Remote end closed connection without response\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nProtocolError                             Traceback (most recent call last)\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\r\n    438             if not chunked:\r\n--> 439                 resp = conn.urlopen(\r\n    440                     method=request.method,\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\r\n    725 \r\n--> 726             retries = retries.increment(\r\n    727                 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/util/retry.py in increment(self, method, url, response, error, _pool, _stacktrace)\r\n    402             if read is False or not self._is_method_retryable(method):\r\n--> 403                 raise six.reraise(type(error), error, _stacktrace)\r\n    404             elif read is not None:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/packages/six.py in reraise(tp, value, tb)\r\n    733             if value.__traceback__ is not tb:\r\n--> 734                 raise value.with_traceback(tb)\r\n    735             raise value\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\r\n    669             # Make the request on the httplib connection object.\r\n--> 670             httplib_response = self._make_request(\r\n    671                 conn,\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)\r\n    425                     # Otherwise it looks like a bug in the code.\r\n--> 426                     six.raise_from(e, None)\r\n    427         except (SocketTimeout, BaseSSLError, SocketError) as e:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/packages/six.py in raise_from(value, from_value)\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)\r\n    420                 try:\r\n--> 421                     httplib_response = conn.getresponse()\r\n    422                 except BaseException as e:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/http/client.py in getresponse(self)\r\n   1346             try:\r\n-> 1347                 response.begin()\r\n   1348             except ConnectionError:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/http/client.py in begin(self)\r\n    306         while True:\r\n--> 307             version, status, reason = self._read_status()\r\n    308             if status != CONTINUE:\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/http/client.py in _read_status(self)\r\n    275             # sending a valid response.\r\n--> 276             raise RemoteDisconnected(\"Remote end closed connection without\"\r\n    277                                      \" response\")\r\n\r\nProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nConnectionError                           Traceback (most recent call last)\r\n<ipython-input-3-6743eb250be3> in <module>\r\n      1 import requests\r\n      2 \r\n----> 3 resp = requests.head('https://www.ncdc.noaa.gov/data-access/model-data/model-datasets/north-american-regional-reanalysis-narr' class=\"ansi-blue-fg\">)\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/requests/api.py in head(url, **kwargs)\r\n    102 \r\n    103     kwargs.setdefault('allow_redirects', False)\r\n--> 104     return request('head', url, **kwargs)\r\n    105 \r\n    106 \r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/requests/api.py in request(method, url, **kwargs)\r\n     59     # cases, and look like a memory leak in others.\r\n     60     with sessions.Session() as session:\r\n---> 61         return session.request(method=method, url=url, **kwargs)\r\n     62 \r\n     63 \r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\r\n    528         }\r\n    529         send_kwargs.update(settings)\r\n--> 530         resp = self.send(prep, **send_kwargs)\r\n    531 \r\n    532         return resp\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/requests/sessions.py in send(self, request, **kwargs)\r\n    641 \r\n    642         # Send the request\r\n--> 643         r = adapter.send(request, **kwargs)\r\n    644 \r\n    645         # Total elapsed time of the request (approximately)\r\n\r\n~/miniconda3/envs/py38/lib/python3.8/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\r\n    496 \r\n    497         except (ProtocolError, socket.error) as err:\r\n--> 498             raise ConnectionError(err, request=request)\r\n    499 \r\n    500         except MaxRetryError as e:\r\n\r\nConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\r\n```\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nrequests.head('https://www.ncdc.noaa.gov/data-access/model-data/model-datasets/north-american-regional-reanalysis-narr')\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"3.0\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.10\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.5\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.6.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010107f\",\r\n    \"version\": \"19.1.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.24.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.10\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5553", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5553/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5553/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5553/events", "html_url": "https://github.com/psf/requests/issues/5553", "id": 675744300, "node_id": "MDU6SXNzdWU2NzU3NDQzMDA=", "number": 5553, "title": "Requests module detected by antibot protection, but curl not", "user": {"login": "yojuwahajeke", "id": 69431678, "node_id": "MDQ6VXNlcjY5NDMxNjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/69431678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yojuwahajeke", "html_url": "https://github.com/yojuwahajeke", "followers_url": "https://api.github.com/users/yojuwahajeke/followers", "following_url": "https://api.github.com/users/yojuwahajeke/following{/other_user}", "gists_url": "https://api.github.com/users/yojuwahajeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/yojuwahajeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yojuwahajeke/subscriptions", "organizations_url": "https://api.github.com/users/yojuwahajeke/orgs", "repos_url": "https://api.github.com/users/yojuwahajeke/repos", "events_url": "https://api.github.com/users/yojuwahajeke/events{/privacy}", "received_events_url": "https://api.github.com/users/yojuwahajeke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-09T18:03:20Z", "updated_at": "2020-08-11T23:58:05Z", "closed_at": "2020-08-11T23:58:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am tring to get pixabay.com content.\r\nRequests module detected by antibot protection, but curl command working perfectly.\r\n(Please don't tell anything about javascript, ...)\r\nThis is the second website I seen detected with python module requests.\r\n\r\n## Expected Result\r\nResponse status code: 200\r\npixabay website content\r\n\r\n## Actual Result\r\nResponse status code: 403\r\ncloudflare page\r\n\r\n\r\n## Reproduction Steps\r\n\r\npython requests code to load page\r\n```\r\nimport requests\r\nheaders = {\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0',\r\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\r\n    'Accept-Encoding': 'gzip, deflate',\r\n    'Accept-Language': 'en-US;q=0.5,en;q=0.3',\r\n    'Connection': 'keep-alive',\r\n}\r\n\r\nresponse = requests.get('https://pixabay.com/photos/search/?cat=animals&min_height=2400&min_width=3000&orientation=horizontal&pagi=2', headers=headers)\r\nprint(response.text)\r\nprint(response.status_code, len(response.text))\r\nprint(response.request.headers)\r\n```\r\ncurl command (for windows)\r\n```\r\ncurl \"https://pixabay.com/photos/search/?cat=animals&min_height=2400&min_width=3000&orientation=horizontal&pagi=2\" -H \"User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0\" -H \"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\" -H \"Accept-Encoding: gzip, deflate\" -H \"Accept-Language: en-US;q=0.5,en;q=0.3\" -H \"Connection: keep-alive\" --output f\r\n```\r\n\r\n## System Information\r\nPython version: 3.6.10 :: Anaconda, Inc.\r\nrequests==2.24.0\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5551", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5551/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5551/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5551/events", "html_url": "https://github.com/psf/requests/issues/5551", "id": 675123577, "node_id": "MDU6SXNzdWU2NzUxMjM1Nzc=", "number": 5551, "title": "urllib3.exceptions.ProtocolError", "user": {"login": "ishaileshmishra", "id": 15031992, "node_id": "MDQ6VXNlcjE1MDMxOTky", "avatar_url": "https://avatars1.githubusercontent.com/u/15031992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishaileshmishra", "html_url": "https://github.com/ishaileshmishra", "followers_url": "https://api.github.com/users/ishaileshmishra/followers", "following_url": "https://api.github.com/users/ishaileshmishra/following{/other_user}", "gists_url": "https://api.github.com/users/ishaileshmishra/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishaileshmishra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishaileshmishra/subscriptions", "organizations_url": "https://api.github.com/users/ishaileshmishra/orgs", "repos_url": "https://api.github.com/users/ishaileshmishra/repos", "events_url": "https://api.github.com/users/ishaileshmishra/events{/privacy}", "received_events_url": "https://api.github.com/users/ishaileshmishra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T16:18:22Z", "updated_at": "2020-08-07T16:29:05Z", "closed_at": "2020-08-07T16:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n\r\ngetting urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))\r\n\r\nLog\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen\r\n    chunked=chunked,\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1344, in getresponse\r\n    response.begin()\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 306, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 267, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ssl.py\", line 1071, in recv_into\r\n    return self.read(nbytes, buffer)\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ssl.py\", line 929, in read\r\n    return self._sslobj.read(len, buffer)\r\nConnectionResetError: [Errno 54] Connection reset by peer\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 727, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/util/retry.py\", line 403, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/packages/six.py\", line 734, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen\r\n    chunked=chunked,\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 1344, in getresponse\r\n    response.begin()\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 306, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 267, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ssl.py\", line 1071, in recv_into\r\n    return self.read(nbytes, buffer)\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ssl.py\", line 929, in read\r\n    return self._sslobj.read(len, buffer)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/shaileshmishra/Documents/contentstack/workspace/python/contentstack-python/tests/test_assets.py\", line 45, in test_04_asset_filetype\r\n    result = self.asset.fetch()\r\n  File \"/Users/shaileshmishra/Documents/contentstack/workspace/python/contentstack-python/contentstack/asset.py\", line 140, in fetch\r\n    return self.http_instance.get(url)\r\n  File \"/Users/shaileshmishra/Documents/contentstack/workspace/python/contentstack-python/contentstack/https_connection.py\", line 57, in get\r\n    response = requests.get(url, verify=True, headers=self.headers)\r\n  File \"/usr/local/lib/python3.7/site-packages/requests/api.py\", line 76, in get\r\n    return request('get', url, params=params, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/requests/api.py\", line 61, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/requests/adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): cdn.contentstack.io:443\r\n\r\n----------------------------------------------------------------------\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5548", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5548/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5548/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5548/events", "html_url": "https://github.com/psf/requests/issues/5548", "id": 672317146, "node_id": "MDU6SXNzdWU2NzIzMTcxNDY=", "number": 5548, "title": "Is chardetect.exe required for get request and content?", "user": {"login": "wilberh", "id": 6799242, "node_id": "MDQ6VXNlcjY3OTkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6799242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilberh", "html_url": "https://github.com/wilberh", "followers_url": "https://api.github.com/users/wilberh/followers", "following_url": "https://api.github.com/users/wilberh/following{/other_user}", "gists_url": "https://api.github.com/users/wilberh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilberh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilberh/subscriptions", "organizations_url": "https://api.github.com/users/wilberh/orgs", "repos_url": "https://api.github.com/users/wilberh/repos", "events_url": "https://api.github.com/users/wilberh/events{/privacy}", "received_events_url": "https://api.github.com/users/wilberh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T20:15:13Z", "updated_at": "2020-08-03T20:34:49Z", "closed_at": "2020-08-03T20:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi - is \"chardetect.exe\" executable required for a get request and content?  Just wanted to know.  If not needed, then is it okay to delete it so that I can store the chardet files in bitbucket/git?\r\n\r\n```\r\nreq = requests.get(url)\r\nwith io.BytesIO() as buf:\r\n    buf.write(req.content)\r\n    buf.seek(0)\r\n\r\n```\r\nPlease refer to our [Stack Overflow tag](https://stackoverflow.com/questions/tagged/python-requests) for guidance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5543", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5543/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5543/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5543/events", "html_url": "https://github.com/psf/requests/issues/5543", "id": 668078886, "node_id": "MDU6SXNzdWU2NjgwNzg4ODY=", "number": 5543, "title": "Request fails in python subprocess", "user": {"login": "vijay120", "id": 766285, "node_id": "MDQ6VXNlcjc2NjI4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/766285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vijay120", "html_url": "https://github.com/vijay120", "followers_url": "https://api.github.com/users/vijay120/followers", "following_url": "https://api.github.com/users/vijay120/following{/other_user}", "gists_url": "https://api.github.com/users/vijay120/gists{/gist_id}", "starred_url": "https://api.github.com/users/vijay120/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vijay120/subscriptions", "organizations_url": "https://api.github.com/users/vijay120/orgs", "repos_url": "https://api.github.com/users/vijay120/repos", "events_url": "https://api.github.com/users/vijay120/events{/privacy}", "received_events_url": "https://api.github.com/users/vijay120/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-29T19:14:07Z", "updated_at": "2020-07-31T17:49:41Z", "closed_at": "2020-07-31T17:49:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe request library stalls in a python subprocess and does not fulfill the request.\r\n\r\n## Expected Result\r\n\r\nThe line \"after call\" should be printed and the response to the GET request should also be printed.\r\n\r\n## Actual Result\r\n\r\nThe subprocess stalls at \"before call\" and does not print \"after call\" and the response to the GET request.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nfrom multiprocessing import Process\r\n\r\ndef call_locahost():\r\n    print(\"before call\")\r\n    response = requests.request(\"GET\", \"https://www.google.com/\")\r\n    print(\"after call\")\r\n    print(response)\r\n    return response\r\n\r\np = Process(target=call_locahost)\r\np.start()\r\np.join()\r\n```\r\n\r\n## System Information\r\n\r\n```\r\n(botlite) VIJAYRK-M-L1E5:botlite vijay$  python -m requests.help\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.5\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"17.7.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5539", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5539/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5539/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5539/events", "html_url": "https://github.com/psf/requests/issues/5539", "id": 664905871, "node_id": "MDU6SXNzdWU2NjQ5MDU4NzE=", "number": 5539, "title": "PyPi website description is showing HTML", "user": {"login": "LyalinDotCom", "id": 2363526, "node_id": "MDQ6VXNlcjIzNjM1MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2363526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LyalinDotCom", "html_url": "https://github.com/LyalinDotCom", "followers_url": "https://api.github.com/users/LyalinDotCom/followers", "following_url": "https://api.github.com/users/LyalinDotCom/following{/other_user}", "gists_url": "https://api.github.com/users/LyalinDotCom/gists{/gist_id}", "starred_url": "https://api.github.com/users/LyalinDotCom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LyalinDotCom/subscriptions", "organizations_url": "https://api.github.com/users/LyalinDotCom/orgs", "repos_url": "https://api.github.com/users/LyalinDotCom/repos", "events_url": "https://api.github.com/users/LyalinDotCom/events{/privacy}", "received_events_url": "https://api.github.com/users/LyalinDotCom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-24T04:22:24Z", "updated_at": "2020-08-04T19:06:19Z", "closed_at": "2020-07-24T04:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When viewing the package on PyPi using Edge I am seeing HTML where it should just be a text description.\r\n\r\n**Details:**\r\n\r\n* Browser: Edge (Chromium) version 84.0.522.40 (Official build) (64-bit)\r\n* OS: Windows 10\r\n\r\n## Screenshot of the problem:\r\n\r\n![image](https://user-images.githubusercontent.com/2363526/88360396-5cf37100-cd2a-11ea-9d09-404f25d4896a.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5538", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5538/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5538/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5538/events", "html_url": "https://github.com/psf/requests/issues/5538", "id": 664500015, "node_id": "MDU6SXNzdWU2NjQ1MDAwMTU=", "number": 5538, "title": "Deadlock / infinite stall when using HTTPAdapter and Retry", "user": {"login": "Seminko", "id": 13543580, "node_id": "MDQ6VXNlcjEzNTQzNTgw", "avatar_url": "https://avatars3.githubusercontent.com/u/13543580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seminko", "html_url": "https://github.com/Seminko", "followers_url": "https://api.github.com/users/Seminko/followers", "following_url": "https://api.github.com/users/Seminko/following{/other_user}", "gists_url": "https://api.github.com/users/Seminko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seminko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seminko/subscriptions", "organizations_url": "https://api.github.com/users/Seminko/orgs", "repos_url": "https://api.github.com/users/Seminko/repos", "events_url": "https://api.github.com/users/Seminko/events{/privacy}", "received_events_url": "https://api.github.com/users/Seminko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T14:02:37Z", "updated_at": "2020-07-23T17:01:34Z", "closed_at": "2020-07-23T17:01:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n\r\n## Expected Result\r\n\r\nThe code to finish or error out.\r\n\r\n## Actual Result\r\n\r\nExecution stalls / never finishes.\r\n\r\n## Reproduction Steps\r\n\r\nRun the code below. Tried multiple versions without status_forcelist, without Retry altogether, just with max_retries=2. I cannot get any version to finish.\r\n\r\n```\r\nimport requests\r\nfrom requests.adapters import HTTPAdapter\r\nfrom requests.packages.urllib3.util.retry import Retry\r\nimport urllib3\r\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) # disabled SSL warnings\r\n \r\nHEADERS = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36'}\r\nTIMEOUT = 5\r\n\r\ns = requests.Session()\r\nretries = Retry(total=3, backoff_factor=1, status_forcelist=[503])\r\ns.mount(\"https://\", HTTPAdapter(max_retries=retries))\r\nresponse = s.get('https://employdentllc.com', headers=HEADERS, timeout=TIMEOUT, verify=False)\r\n```\r\n\r\n## System Information\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.7\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.4\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010103f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010104f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5535", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5535/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5535/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5535/events", "html_url": "https://github.com/psf/requests/issues/5535", "id": 657810045, "node_id": "MDU6SXNzdWU2NTc4MTAwNDU=", "number": 5535, "title": "https request via http proxy lead to hangs", "user": {"login": "xiazhibin", "id": 11945009, "node_id": "MDQ6VXNlcjExOTQ1MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/11945009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiazhibin", "html_url": "https://github.com/xiazhibin", "followers_url": "https://api.github.com/users/xiazhibin/followers", "following_url": "https://api.github.com/users/xiazhibin/following{/other_user}", "gists_url": "https://api.github.com/users/xiazhibin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiazhibin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiazhibin/subscriptions", "organizations_url": "https://api.github.com/users/xiazhibin/orgs", "repos_url": "https://api.github.com/users/xiazhibin/repos", "events_url": "https://api.github.com/users/xiazhibin/events{/privacy}", "received_events_url": "https://api.github.com/users/xiazhibin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-16T03:16:09Z", "updated_at": "2020-07-19T03:07:09Z", "closed_at": "2020-07-19T03:07:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nhttp_proxy = \"http://192.168.128.3:58591\"\r\n\r\nproxyDict = {\r\n    \"http\": http_proxy,\r\n    \"https\": http_proxy,\r\n}\r\n\r\nresp = requests.get(\"https://example.com/\", proxies=proxyDict, timeout=3)\r\nprint(resp.text)\r\n```\r\n\r\nWhen I use this proxy to request, it hangs at ssl handshake.So I change to sock proxy, it works.\r\n\r\nAnd then I use node to request with this http proxy, it works too.\r\n\r\nOf course, I use this proxy url with Chrome, it works.\r\n\r\nSo my question is that `requests` only send https request via https proxy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5534", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5534/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5534/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5534/events", "html_url": "https://github.com/psf/requests/issues/5534", "id": 657727541, "node_id": "MDU6SXNzdWU2NTc3Mjc1NDE=", "number": 5534, "title": "-", "user": {"login": "zyxue", "id": 527862, "node_id": "MDQ6VXNlcjUyNzg2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/527862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyxue", "html_url": "https://github.com/zyxue", "followers_url": "https://api.github.com/users/zyxue/followers", "following_url": "https://api.github.com/users/zyxue/following{/other_user}", "gists_url": "https://api.github.com/users/zyxue/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyxue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyxue/subscriptions", "organizations_url": "https://api.github.com/users/zyxue/orgs", "repos_url": "https://api.github.com/users/zyxue/repos", "events_url": "https://api.github.com/users/zyxue/events{/privacy}", "received_events_url": "https://api.github.com/users/zyxue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T23:32:58Z", "updated_at": "2020-07-15T23:34:58Z", "closed_at": "2020-07-15T23:34:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5532", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5532/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5532/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5532/events", "html_url": "https://github.com/psf/requests/issues/5532", "id": 655948675, "node_id": "MDU6SXNzdWU2NTU5NDg2NzU=", "number": 5532, "title": "Erroneous response headers parsing in some cases", "user": {"login": "fbparis", "id": 601975, "node_id": "MDQ6VXNlcjYwMTk3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/601975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbparis", "html_url": "https://github.com/fbparis", "followers_url": "https://api.github.com/users/fbparis/followers", "following_url": "https://api.github.com/users/fbparis/following{/other_user}", "gists_url": "https://api.github.com/users/fbparis/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbparis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbparis/subscriptions", "organizations_url": "https://api.github.com/users/fbparis/orgs", "repos_url": "https://api.github.com/users/fbparis/repos", "events_url": "https://api.github.com/users/fbparis/events{/privacy}", "received_events_url": "https://api.github.com/users/fbparis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T15:37:11Z", "updated_at": "2020-07-14T07:35:27Z", "closed_at": "2020-07-14T07:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nInformation can be lost during the parsing of some complex headers response, like for example these ones [https://developers.google.com/search/reference/robots_meta_tag#xrobotstag](https://developers.google.com/search/reference/robots_meta_tag#xrobotstag)\r\n\r\nSimulating something like this with httpbin gives us: [http://httpbin.org/response-headers?X-Robots-Tag=googlebot:%20nofollow&X-Robots-Tag=otherbot:%20noindex,%20nofollow&X-Robots-Tag=noarchive&X-Robots-Tag=unavailable_after:%2025%20Jun%202010%2015:00:00%20PST](http://httpbin.org/response-headers?X-Robots-Tag=googlebot:%20nofollow&X-Robots-Tag=otherbot:%20noindex,%20nofollow&X-Robots-Tag=noarchive&X-Robots-Tag=unavailable_after:%2025%20Jun%202010%2015:00:00%20PST)\r\n\r\n## Expected Result\r\n\r\nSomething like the httpbin output would be nice:\r\n`{\r\n  \"Content-Length\": \"227\", \r\n  \"Content-Type\": \"application/json\", \r\n  \"X-Robots-Tag\": [\r\n    \"googlebot: nofollow\", \r\n    \"otherbot: noindex, nofollow\", \r\n    \"noarchive\", \r\n    \"unavailable_after: 25 Jun 2010 15:00:00 PST\"\r\n  ]\r\n}`\r\n\r\n## Actual Result\r\n\r\nInstead response headers returned by _requests_ are like this:\r\n\r\n`{'Date': 'Mon, 13 Jul 2020 15:14:21 GMT', 'Content-Type': 'application/json', 'Content-Length': '227', 'Connection': 'keep-alive', 'Server': 'gunicorn/19.9.0', 'X-Robots-Tag': 'googlebot: nofollow, otherbot: noindex, nofollow, noarchive, unavailable_after: 25 Jun 2010 15:00:00 PST', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true'}`\r\n\r\nNote that using `raw._original_response.getheaders()` is returning more useful results:\r\n\r\n`[('Date', 'Mon, 13 Jul 2020 15:14:21 GMT'), ('Content-Type', 'application/json'), ('Content-Length', '227'), ('Connection', 'keep-alive'), ('Server', 'gunicorn/19.9.0'), ('X-Robots-Tag', 'googlebot: nofollow'), ('X-Robots-Tag', 'otherbot: noindex, nofollow'), ('X-Robots-Tag', 'noarchive'), ('X-Robots-Tag', 'unavailable_after: 25 Jun 2010 15:00:00 PST'), ('Access-Control-Allow-Origin', '*'), ('Access-Control-Allow-Credentials', 'true')]`\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nr=requests.get('http://httpbin.org/response-headers?X-Robots-Tag=googlebot:%20nofollow&X-Robots-Tag=otherbot:%20noindex,%20nofollow&X-Robots-Tag=noarchive&X-Robots-Tag=unavailable_after:%2025%20Jun%202010%2015:00:00%20PST')\r\nprint(r.headers)\r\nprint(r.raw._original_response.getheaders())\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"16.7.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5531", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5531/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5531/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5531/events", "html_url": "https://github.com/psf/requests/issues/5531", "id": 655187323, "node_id": "MDU6SXNzdWU2NTUxODczMjM=", "number": 5531, "title": "I get 403 from a get request", "user": {"login": "UWTD", "id": 32908055, "node_id": "MDQ6VXNlcjMyOTA4MDU1", "avatar_url": "https://avatars1.githubusercontent.com/u/32908055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/UWTD", "html_url": "https://github.com/UWTD", "followers_url": "https://api.github.com/users/UWTD/followers", "following_url": "https://api.github.com/users/UWTD/following{/other_user}", "gists_url": "https://api.github.com/users/UWTD/gists{/gist_id}", "starred_url": "https://api.github.com/users/UWTD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/UWTD/subscriptions", "organizations_url": "https://api.github.com/users/UWTD/orgs", "repos_url": "https://api.github.com/users/UWTD/repos", "events_url": "https://api.github.com/users/UWTD/events{/privacy}", "received_events_url": "https://api.github.com/users/UWTD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-11T11:00:07Z", "updated_at": "2020-07-15T05:04:25Z", "closed_at": "2020-07-15T05:04:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if it's ok to post this url? \r\n[url](https://gcpvuclip-a.akamaihd.net/exp=1594464888~acl=%2f11125cc917d31e89f39b04e48017551f%2f*~data=cid%3d1165763700%2ciid%3dc85a94cc-1674-4eda-b955-fb54269101a6%2csid%3dakamai-890d3df2-8143-41ae-a5ca-2d6e8a8d1be4%2csiteId%3dviu%2cslotId%3dwebapp2%2cclientId%3dnone%2cn%3d1594452428397%2ch%3d63150D199AB469D014D2F6C869D5CA1D%2cip%3d103.78.114.109%2ccdnid%3dakamai%2ccdnprefix%3dgcpvuclip-a.akamaihd.net%2f~hmac=88bef1822223760250961d1ff745a9e4995af5d804ca88155146267ca3289e65/11125cc917d31e89f39b04e48017551f/vp63207_V20200707045412/hlsc_e2931_7.m3u8)\r\nWhen I make a get request on the above url I get 403 from requests but if I use curl, urllib or anything else I get 200\r\n\r\n## Expected Result\r\nA 200 response\r\n\r\n\r\n## Actual Result\r\n\r\n403 response\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nr = requests.get(url)\r\nprint(r)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\nThe problem seems to be on all systems with latest requests version\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5529", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5529/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5529/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5529/events", "html_url": "https://github.com/psf/requests/issues/5529", "id": 654762873, "node_id": "MDU6SXNzdWU2NTQ3NjI4NzM=", "number": 5529, "title": "Avoid reading unlimited body of the redirect", "user": {"login": "Sindbag", "id": 3994211, "node_id": "MDQ6VXNlcjM5OTQyMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3994211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sindbag", "html_url": "https://github.com/Sindbag", "followers_url": "https://api.github.com/users/Sindbag/followers", "following_url": "https://api.github.com/users/Sindbag/following{/other_user}", "gists_url": "https://api.github.com/users/Sindbag/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sindbag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sindbag/subscriptions", "organizations_url": "https://api.github.com/users/Sindbag/orgs", "repos_url": "https://api.github.com/users/Sindbag/repos", "events_url": "https://api.github.com/users/Sindbag/events{/privacy}", "received_events_url": "https://api.github.com/users/Sindbag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-10T12:56:13Z", "updated_at": "2020-07-21T05:38:20Z", "closed_at": "2020-07-21T05:38:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/psf/requests/blob/1b417634721ec377abb7f17bc1f215e07202c2f7/requests/sessions.py#L160:L164\r\nHere socket is read till the end, but in case of unlimited or extremely huge body the process is stuck.\r\nSolution I can assume - drop connection in case of extremely huge body (unlimited by default), as redirect meaning is kept inside headers, unlimited body seems to be a vulnerability.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5528", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5528/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5528/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5528/events", "html_url": "https://github.com/psf/requests/issues/5528", "id": 654551095, "node_id": "MDU6SXNzdWU2NTQ1NTEwOTU=", "number": 5528, "title": "Wrong page in Pipy", "user": {"login": "carolcoral", "id": 8952687, "node_id": "MDQ6VXNlcjg5NTI2ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8952687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carolcoral", "html_url": "https://github.com/carolcoral", "followers_url": "https://api.github.com/users/carolcoral/followers", "following_url": "https://api.github.com/users/carolcoral/following{/other_user}", "gists_url": "https://api.github.com/users/carolcoral/gists{/gist_id}", "starred_url": "https://api.github.com/users/carolcoral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carolcoral/subscriptions", "organizations_url": "https://api.github.com/users/carolcoral/orgs", "repos_url": "https://api.github.com/users/carolcoral/repos", "events_url": "https://api.github.com/users/carolcoral/events{/privacy}", "received_events_url": "https://api.github.com/users/carolcoral/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T06:44:05Z", "updated_at": "2020-07-10T14:31:18Z", "closed_at": "2020-07-10T14:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "# desc\r\nURL:https://pypi.org/project/requests/\r\nThere have error in pipy page like this.\r\nThe CSS doesn`t get work.\r\n![image](https://user-images.githubusercontent.com/8952687/87124674-c9e32180-c2bb-11ea-8316-8c0e9d92987f.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5526", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5526/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5526/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5526/events", "html_url": "https://github.com/psf/requests/issues/5526", "id": 650303338, "node_id": "MDU6SXNzdWU2NTAzMDMzMzg=", "number": 5526, "title": "Requests and chrome browser requests behave differently when params contains '|'", "user": {"login": "beruhan", "id": 7598892, "node_id": "MDQ6VXNlcjc1OTg4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7598892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beruhan", "html_url": "https://github.com/beruhan", "followers_url": "https://api.github.com/users/beruhan/followers", "following_url": "https://api.github.com/users/beruhan/following{/other_user}", "gists_url": "https://api.github.com/users/beruhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/beruhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beruhan/subscriptions", "organizations_url": "https://api.github.com/users/beruhan/orgs", "repos_url": "https://api.github.com/users/beruhan/repos", "events_url": "https://api.github.com/users/beruhan/events{/privacy}", "received_events_url": "https://api.github.com/users/beruhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T02:40:57Z", "updated_at": "2020-07-15T05:06:38Z", "closed_at": "2020-07-15T05:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "when request URL: `http://192.168.12.202/cgi-bin/rtpd.cgi?echo&AdminPasswd_ss|tdb&get&HTTPAccount`,It urlencode the '|' char to '%7C' when use requests.But when I use chrome request the url,It seems the chrome doesn't encoded the '|' char, I have try the flowing way to disable url encode,but It seem not work.Does there any way disable requests encode url?\r\n```python\r\ndef raw_url_request(method,url, **kwargs):\r\n    req = requests.Request(method, url, **kwargs)\r\n    prepped = req.prepare()\r\n    prepped.url = url\r\n    with requests.Session() as s:\r\n           return s.send(prepped, timeout=timeout, verify=verify)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.6.1\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.6\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.8\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010102f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.24.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1000211f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5525", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5525/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5525/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5525/events", "html_url": "https://github.com/psf/requests/issues/5525", "id": 650070920, "node_id": "MDU6SXNzdWU2NTAwNzA5MjA=", "number": 5525, "title": "Setting encoding of UTF-8 for some websites with non-UTF-8 encoding change response.text to be gibberish", "user": {"login": "advance512", "id": 3903412, "node_id": "MDQ6VXNlcjM5MDM0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3903412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/advance512", "html_url": "https://github.com/advance512", "followers_url": "https://api.github.com/users/advance512/followers", "following_url": "https://api.github.com/users/advance512/following{/other_user}", "gists_url": "https://api.github.com/users/advance512/gists{/gist_id}", "starred_url": "https://api.github.com/users/advance512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/advance512/subscriptions", "organizations_url": "https://api.github.com/users/advance512/orgs", "repos_url": "https://api.github.com/users/advance512/repos", "events_url": "https://api.github.com/users/advance512/events{/privacy}", "received_events_url": "https://api.github.com/users/advance512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-02T16:43:26Z", "updated_at": "2020-07-21T05:44:16Z", "closed_at": "2020-07-21T05:44:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When making a request to http://www.qq.com (or other pages like it), the encoding is returned as GB-2312. Looking at the response.text with the debugger, everything looks fine - correct characters.\r\n![image](https://user-images.githubusercontent.com/3903412/86387117-5d549b00-bc9b-11ea-8151-7c54f6239818.png)\r\n\r\nHowever, setting the response.encoding to UTF-8 causes the text to become garbled, gibberish:\r\n![image](https://user-images.githubusercontent.com/3903412/86387167-6e9da780-bc9b-11ea-8088-babb5c9edbc9.png)\r\n\r\nI am thinking it might be that the document is actually utf-8 encoded, but the content-type and document all say GB-2312, so the decoder gets confused.\r\n\r\n## Expected Result\r\n\r\nSetting response.encoding to 'utf-8' should not cause text to become gibberish.\r\n\r\n## Actual Result\r\n\r\nText becomes gibberish.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nresponse = \\\r\n    requests.get(\r\n        'http://www.qq.com',\r\n        headers={\r\n            'Accept-Language': 'en-US, en;q=0.5',\r\n            'Accept-Charset':  'utf-8',\r\n        },\r\n        timeout=10,\r\n        verify=False,\r\n    )\r\n\r\n# If we have an error, raise an exception\r\nresponse.raise_for_status()\r\n\r\n# Looking at response.text, it looks fine right now\r\nprint(\r\n    response.text[0:200]\r\n)\r\n\r\n# It is GB2312, convert to UTF-8\r\nif response.encoding != 'utf-8':\r\n    response.encoding = 'utf-8'\r\n\r\n# Looking at response.text, it is garbled now\r\nprint(\r\n    response.text[0:200]\r\n)\r\n```\r\n\r\nOutput looks like:\r\n![image](https://user-images.githubusercontent.com/3903412/86387695-377bc600-bc9c-11ea-9ccc-f1cdccda407c.png)\r\n\r\nand\r\n![image](https://user-images.githubusercontent.com/3903412/86387713-3ea2d400-bc9c-11ea-9821-b4aef481b04f.png)\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.2\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.4.0-39-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010106f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5524", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5524/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5524/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5524/events", "html_url": "https://github.com/psf/requests/issues/5524", "id": 649872101, "node_id": "MDU6SXNzdWU2NDk4NzIxMDE=", "number": 5524, "title": "Error when importing requests.", "user": {"login": "arshadshk", "id": 39850778, "node_id": "MDQ6VXNlcjM5ODUwNzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/39850778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arshadshk", "html_url": "https://github.com/arshadshk", "followers_url": "https://api.github.com/users/arshadshk/followers", "following_url": "https://api.github.com/users/arshadshk/following{/other_user}", "gists_url": "https://api.github.com/users/arshadshk/gists{/gist_id}", "starred_url": "https://api.github.com/users/arshadshk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arshadshk/subscriptions", "organizations_url": "https://api.github.com/users/arshadshk/orgs", "repos_url": "https://api.github.com/users/arshadshk/repos", "events_url": "https://api.github.com/users/arshadshk/events{/privacy}", "received_events_url": "https://api.github.com/users/arshadshk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T11:55:01Z", "updated_at": "2020-07-02T18:25:26Z", "closed_at": "2020-07-02T18:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following error when I  import requests.\r\n\r\n```\r\n    check_compatibility(urllib3.__version__, chardet.__version__)\r\nAttributeError: module 'chardet' has no attribute '__version__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5522", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5522/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5522/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5522/events", "html_url": "https://github.com/psf/requests/issues/5522", "id": 647680945, "node_id": "MDU6SXNzdWU2NDc2ODA5NDU=", "number": 5522, "title": "request.get does not return", "user": {"login": "Leonardo8133", "id": 62627215, "node_id": "MDQ6VXNlcjYyNjI3MjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/62627215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Leonardo8133", "html_url": "https://github.com/Leonardo8133", "followers_url": "https://api.github.com/users/Leonardo8133/followers", "following_url": "https://api.github.com/users/Leonardo8133/following{/other_user}", "gists_url": "https://api.github.com/users/Leonardo8133/gists{/gist_id}", "starred_url": "https://api.github.com/users/Leonardo8133/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Leonardo8133/subscriptions", "organizations_url": "https://api.github.com/users/Leonardo8133/orgs", "repos_url": "https://api.github.com/users/Leonardo8133/repos", "events_url": "https://api.github.com/users/Leonardo8133/events{/privacy}", "received_events_url": "https://api.github.com/users/Leonardo8133/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-29T21:24:28Z", "updated_at": "2020-07-25T11:43:58Z", "closed_at": "2020-07-02T00:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nWhen using `request.get(\"https://google.com/\"),` i dont receive any response.\r\n\r\nWhen i add a request.get(\"https://google.com/\", timeout=5) i receive the response after 5 seconds! >> 0:00:05.223328.\r\nif i switch the timeout to 10, it takes 10 second and etc...\r\n\r\nif I request a simple html file, this problem doesnt occur.\r\n\r\n request.get(\"http://www.brainjar.com/java/host/test.html\", timeout=5\") >> 0:00:00.212320.\r\n\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nr = requests.get('http://www.google.com', timeout=5)\r\n\r\n[print(key, value) for key, value in r.__dict__.items() if key!='_content']\r\n\r\nb = requests.get(\"http://www.brainjar.com/java/host/test.html\", timeout=5)\r\n\r\nprint(\"\\n\\n\\nSecond Request\", b.elapsed)\r\n```\r\nWhat i Get:\r\n```\r\n_content_consumed True\r\n_next None\r\nstatus_code 200\r\nheaders {'Date': 'Mon, 29 Jun 2020 21:20:13 GMT', 'Expires': '-1', 'Cache-Control': 'private, max-age=0', 'Content-Type': 'text/html; charset=ISO-8859-1', 'P3P': 'CP=\"This is not a P3P policy! See g.co/p3phelp for more info.\"', 'Content-Encoding': 'gzip', 'Server': 'gws', 'Content-Length': '5373', 'X-XSS-Protection': '0', 'X-Frame-Options': 'SAMEORIGIN', 'Set-Cookie': '1P_JAR=2020-06-29-21; expires=Wed, 29-Jul-2020 21:20:13 GMT; path=/; domain=.google.com; Secure, NID=204=jAqS174mLLgKDn7KMjJbpb0mFz1Ohwt-PCAiztVbh5Bv95DowuZXyCvBtOYsLbTwxUwE-GIfrInLI9GRXNfbTi1Yxp2-FpTgEs45nCq0UQpUzRHT_jhfTbgpfwn2eDjQIPNloZIXQMuegH1bDPGlX4nJVmD-H61wuvcRVtV_oSE; expires=Tue, 29-Dec-2020 21:20:13 GMT; path=/; domain=.google.com; HttpOnly'}\r\nraw <urllib3.response.HTTPResponse object at 0x7fc3c0d190f0>\r\nurl http://www.google.com/\r\nencoding ISO-8859-1\r\nhistory []\r\nreason OK\r\ncookies <RequestsCookieJar[<Cookie 1P_JAR=2020-06-29-21 for .google.com/>, <Cookie NID=204=jAqS174mLLgKDn7KMjJbpb0mFz1Ohwt-PCAiztVbh5Bv95DowuZXyCvBtOYsLbTwxUwE-GIfrInLI9GRXNfbTi1Yxp2-FpTgEs45nCq0UQpUzRHT_jhfTbgpfwn2eDjQIPNloZIXQMuegH1bDPGlX4nJVmD-H61wuvcRVtV_oSE for .google.com/>]>\r\nelapsed 0:00:05.139103\r\nrequest <PreparedRequest [GET]>\r\nconnection <requests.adapters.HTTPAdapter object at 0x7fc3bff46208>\r\n\r\n\r\n\r\nSecond Request 0:00:00.303124\r\n[Finished in 6.3s]\r\n```\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\neonardo@leonardo-Acer:~/Desktop/Cheesecake$ python3 -m requests.help                                                                                        \r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.6\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.9\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.3.0-61-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.18.4\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010100f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.22\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5519", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5519/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5519/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5519/events", "html_url": "https://github.com/psf/requests/issues/5519", "id": 646368294, "node_id": "MDU6SXNzdWU2NDYzNjgyOTQ=", "number": 5519, "title": "Remove copyrighted media from documentation", "user": {"login": "brandondube", "id": 13191497, "node_id": "MDQ6VXNlcjEzMTkxNDk3", "avatar_url": "https://avatars2.githubusercontent.com/u/13191497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondube", "html_url": "https://github.com/brandondube", "followers_url": "https://api.github.com/users/brandondube/followers", "following_url": "https://api.github.com/users/brandondube/following{/other_user}", "gists_url": "https://api.github.com/users/brandondube/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondube/subscriptions", "organizations_url": "https://api.github.com/users/brandondube/orgs", "repos_url": "https://api.github.com/users/brandondube/repos", "events_url": "https://api.github.com/users/brandondube/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondube/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-26T16:15:15Z", "updated_at": "2020-06-26T20:25:30Z", "closed_at": "2020-06-26T18:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [advanced usage](https://requests.readthedocs.io/en/master/user/advanced/) page contains a derivative of a [copyrighted album cover](https://wilderun.bandcamp.com/album/veil-of-imagination) the copyright for which is not owned by the PSF.\r\n\r\nThis must be removed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5516", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5516/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5516/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5516/events", "html_url": "https://github.com/psf/requests/issues/5516", "id": 645151403, "node_id": "MDU6SXNzdWU2NDUxNTE0MDM=", "number": 5516, "title": "[Question] Is there a way to get file size of downloaded(chunk) file while downloading. ", "user": {"login": "DEEP7696", "id": 26339251, "node_id": "MDQ6VXNlcjI2MzM5MjUx", "avatar_url": "https://avatars3.githubusercontent.com/u/26339251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DEEP7696", "html_url": "https://github.com/DEEP7696", "followers_url": "https://api.github.com/users/DEEP7696/followers", "following_url": "https://api.github.com/users/DEEP7696/following{/other_user}", "gists_url": "https://api.github.com/users/DEEP7696/gists{/gist_id}", "starred_url": "https://api.github.com/users/DEEP7696/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DEEP7696/subscriptions", "organizations_url": "https://api.github.com/users/DEEP7696/orgs", "repos_url": "https://api.github.com/users/DEEP7696/repos", "events_url": "https://api.github.com/users/DEEP7696/events{/privacy}", "received_events_url": "https://api.github.com/users/DEEP7696/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-25T04:56:11Z", "updated_at": "2020-06-26T04:29:14Z", "closed_at": "2020-06-25T17:37:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I get size of file while downloading it in Python so that I can show downloaded size and pending size of file to download? if file size is 2GB and 700mb is downloaded then how will we get that in python. Currently using Python requests module to download file.\r\n\r\nimport requests\r\nr = requests.get(download_link)\r\nwith open('setup.exe','wb') as file:\r\n    file.write(r.content)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5515", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5515/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5515/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5515/events", "html_url": "https://github.com/psf/requests/issues/5515", "id": 644697353, "node_id": "MDU6SXNzdWU2NDQ2OTczNTM=", "number": 5515, "title": "Case sensitive in the URL host", "user": {"login": "EmilioFigueras", "id": 15377978, "node_id": "MDQ6VXNlcjE1Mzc3OTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/15377978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmilioFigueras", "html_url": "https://github.com/EmilioFigueras", "followers_url": "https://api.github.com/users/EmilioFigueras/followers", "following_url": "https://api.github.com/users/EmilioFigueras/following{/other_user}", "gists_url": "https://api.github.com/users/EmilioFigueras/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmilioFigueras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmilioFigueras/subscriptions", "organizations_url": "https://api.github.com/users/EmilioFigueras/orgs", "repos_url": "https://api.github.com/users/EmilioFigueras/repos", "events_url": "https://api.github.com/users/EmilioFigueras/events{/privacy}", "received_events_url": "https://api.github.com/users/EmilioFigueras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T15:13:42Z", "updated_at": "2020-06-24T17:26:20Z", "closed_at": "2020-06-24T17:25:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nwhen making a normal requests.get I have verified that a lowercase is made to the host that is sent. Is there a way to disable this action? I am dealing with URLs where the 'host' is case sensitive (Freenet URL) and this fact causes me an error.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5513", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5513/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5513/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5513/events", "html_url": "https://github.com/psf/requests/issues/5513", "id": 643679180, "node_id": "MDU6SXNzdWU2NDM2NzkxODA=", "number": 5513, "title": "[requests.Session] lost headers when meet 301/302/307 redirect", "user": {"login": "ShireCiel", "id": 1326608, "node_id": "MDQ6VXNlcjEzMjY2MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1326608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShireCiel", "html_url": "https://github.com/ShireCiel", "followers_url": "https://api.github.com/users/ShireCiel/followers", "following_url": "https://api.github.com/users/ShireCiel/following{/other_user}", "gists_url": "https://api.github.com/users/ShireCiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShireCiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShireCiel/subscriptions", "organizations_url": "https://api.github.com/users/ShireCiel/orgs", "repos_url": "https://api.github.com/users/ShireCiel/repos", "events_url": "https://api.github.com/users/ShireCiel/events{/privacy}", "received_events_url": "https://api.github.com/users/ShireCiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-23T09:26:05Z", "updated_at": "2020-07-21T05:51:54Z", "closed_at": "2020-07-21T05:51:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n\r\n\r\nRequest by using [requests.Session]. If set session headers. Headers will lost When met 301/302/307 redirect.\r\n\r\n## Expected Result\r\nMy custom header should in [resp.request.headers]\r\n```python\r\n{ 'Content-Type': 'application/json;charset=UTF-8' }\r\n``` \r\n## Actual Result\r\n```\r\nDEBUG:urllib3.connectionpool:Starting new HTTP connection (1): bing.com:80\r\nDEBUG:urllib3.connectionpool:http://bing.com:80 \"GET / HTTP/1.1\" 301 0\r\nDEBUG:urllib3.connectionpool:Starting new HTTP connection (1): cn.bing.com:80\r\nDEBUG:urllib3.connectionpool:http://cn.bing.com:80 \"GET / HTTP/1.1\" 200 46302\r\n{'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'\r\n```\r\n{ 'Content-Type': 'application/json;charset=UTF-8' } not in [resp.request.headers].\r\n## Reproduction Steps\r\n\r\n```python\r\nimport logging\r\nlogging.basicConfig()\r\nlogging.getLogger().setLevel(logging.DEBUG)\r\nrequests_log = logging.getLogger(\"requests.packages.urllib3\")\r\nrequests_log.setLevel(logging.DEBUG)\r\nrequests_log.propagate = True\r\n\r\nimport requests\r\nss = requests.Session()\r\nss.headers.update({\r\n            'Content-Type': 'application/json;charset=UTF-8'\r\n        })\r\nresp = ss.get('http://bing.com')\r\nprint(resp.request.headers)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.6.1\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.3.0-59-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010102f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.21.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010102f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.24.3\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5512", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5512/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5512/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5512/events", "html_url": "https://github.com/psf/requests/issues/5512", "id": 643562441, "node_id": "MDU6SXNzdWU2NDM1NjI0NDE=", "number": 5512, "title": "How can I send HTTP/1.0 request ?", "user": {"login": "contactparthshah", "id": 29891327, "node_id": "MDQ6VXNlcjI5ODkxMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/29891327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/contactparthshah", "html_url": "https://github.com/contactparthshah", "followers_url": "https://api.github.com/users/contactparthshah/followers", "following_url": "https://api.github.com/users/contactparthshah/following{/other_user}", "gists_url": "https://api.github.com/users/contactparthshah/gists{/gist_id}", "starred_url": "https://api.github.com/users/contactparthshah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/contactparthshah/subscriptions", "organizations_url": "https://api.github.com/users/contactparthshah/orgs", "repos_url": "https://api.github.com/users/contactparthshah/repos", "events_url": "https://api.github.com/users/contactparthshah/events{/privacy}", "received_events_url": "https://api.github.com/users/contactparthshah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-23T06:13:50Z", "updated_at": "2020-06-23T15:34:57Z", "closed_at": "2020-06-23T06:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would like to send HTTP/1.0 request using python requests library. can anyone help me here?\r\n\r\nUseCase:\r\nNeed to test, proxy (Device under Test) upgrades the protocol version automatically.\r\nSo let's say If I send HTTP/1.0 request, it automatically upgrades it to HTTP/1.1 and send that request to server.\r\n\r\nhttps://stackoverflow.com/questions/37816596/restrict-request-to-only-ask-for-http-1-0-to-prevent-chunking-error\r\nThis is the only help till now I have found, apart from that anything else I can try to send HTTP/1.0 request?\r\n\r\n#python-requests", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5510", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5510/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5510/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5510/events", "html_url": "https://github.com/psf/requests/issues/5510", "id": 642465272, "node_id": "MDU6SXNzdWU2NDI0NjUyNzI=", "number": 5510, "title": "incremental rest api data ", "user": {"login": "oguzhan10", "id": 34449619, "node_id": "MDQ6VXNlcjM0NDQ5NjE5", "avatar_url": "https://avatars1.githubusercontent.com/u/34449619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oguzhan10", "html_url": "https://github.com/oguzhan10", "followers_url": "https://api.github.com/users/oguzhan10/followers", "following_url": "https://api.github.com/users/oguzhan10/following{/other_user}", "gists_url": "https://api.github.com/users/oguzhan10/gists{/gist_id}", "starred_url": "https://api.github.com/users/oguzhan10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oguzhan10/subscriptions", "organizations_url": "https://api.github.com/users/oguzhan10/orgs", "repos_url": "https://api.github.com/users/oguzhan10/repos", "events_url": "https://api.github.com/users/oguzhan10/events{/privacy}", "received_events_url": "https://api.github.com/users/oguzhan10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T23:50:39Z", "updated_at": "2020-06-24T04:24:02Z", "closed_at": "2020-06-24T04:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to fetch incremental data from localhost:8080/test url. This url has json rest api data and it has incremental data inside of it. I fetched data but When I fetch it, it finishes. When I run the code again or run the function every 5 seconds, it gets all data again. How can I get the new data? \r\n\r\n```\r\nimport requests\r\nimport json\r\nrequest = requests.get(\"http://localhost:8080/test\").text\r\na = json.loads(request)\r\nprint(a['items'])\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5508", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5508/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5508/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5508/events", "html_url": "https://github.com/psf/requests/issues/5508", "id": 642109531, "node_id": "MDU6SXNzdWU2NDIxMDk1MzE=", "number": 5508, "title": "Weired behaviour (sometimes) on 401 response", "user": {"login": "Coronon", "id": 33808743, "node_id": "MDQ6VXNlcjMzODA4NzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/33808743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coronon", "html_url": "https://github.com/Coronon", "followers_url": "https://api.github.com/users/Coronon/followers", "following_url": "https://api.github.com/users/Coronon/following{/other_user}", "gists_url": "https://api.github.com/users/Coronon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coronon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coronon/subscriptions", "organizations_url": "https://api.github.com/users/Coronon/orgs", "repos_url": "https://api.github.com/users/Coronon/repos", "events_url": "https://api.github.com/users/Coronon/events{/privacy}", "received_events_url": "https://api.github.com/users/Coronon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T16:57:28Z", "updated_at": "2020-06-26T19:42:44Z", "closed_at": "2020-06-26T19:42:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I am writing tests for my flask app at the moment and have great difficulty testing 401 UNAUTHORIZED responses as requests seems to not be able to handle them (sometimes it works interestingly [seems to be quite random though]). I am trying to access a flask webServer without a required jwt token. All browsers and rest clients I tested seem to work perfectly fine, requests for python 3 doesn't however. Python2 requests seems to not have a problem either.\r\n\r\nI have checked through wireshark, and all packets are send just as they should.\r\n\r\n## Expected Result\r\n\r\n```\r\n401\r\n{'Content-Type': 'application/json', 'Content-Length': '30', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Headers': '*', 'Access-Control-Allow-Methods': '*', 'Access-Control-Max-Age': '31540000', 'Server': 'Werkzeug/0.16.0 Python/3.8.0', 'Date': 'Fri, 19 Jun 2020 16:49:11 GMT'}\r\n{\r\n  \"msg\": \"TOKEN_REQUIRED\"\r\n}\r\n```\r\n\r\n## Actual Result\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 665, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 1322, in getresponse\r\n    response.begin()\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 327, in begin\r\n    self.headers = self.msg = parse_headers(self.fp)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 212, in parse_headers\r\n    line = fp.readline(_MAXLINE + 1)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\socket.py\", line 669, in readinto\r\n    return self._sock.recv_into(b)\r\nConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\adapters.py\", line 439, in send\r\n    resp = conn.urlopen(\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 719, in urlopen\r\n    retries = retries.increment(\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\util\\retry.py\", line 400, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\packages\\six.py\", line 734, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 665, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\urllib3\\connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 1322, in getresponse\r\n    response.begin()\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 327, in begin\r\n    self.headers = self.msg = parse_headers(self.fp)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\http\\client.py\", line 212, in parse_headers\r\n    line = fp.readline(_MAXLINE + 1)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\socket.py\", line 669, in readinto\r\n    return self._sock.recv_into(b)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(10054, \r\n'An existing connection was forcibly closed by the remote host', None, 10054, None))  \r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \".\\test2.py\", line 7, in <module>\r\n    req = requests.post(url, headers=headers, data=body)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\api.py\", line 119, in post\r\n    return request('post', url, data=data, json=json, **kwargs)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\api.py\", line 61, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\Someone\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\requests\\adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))\r\n```\r\n\r\nOR on linux\r\n\r\n```\r\napi/tests/test_2account.py:25: in checkResponse\r\n    assert response.json()[\"msg\"] == \"TOKEN_REQUIRED\"\r\n/home/coronon/.local/lib/python3.8/site-packages/requests/models.py:898: in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n/usr/lib/python3.8/json/__init__.py:357: in loads\r\n    return _default_decoder.decode(s)\r\n/usr/lib/python3.8/json/decoder.py:337: in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <json.decoder.JSONDecoder object at 0x7fc23da9edf0>, s = '', idx = 0\r\n\r\n    def raw_decode(self, s, idx=0):\r\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\r\n        a JSON document) and return a 2-tuple of the Python\r\n        representation and the index in ``s`` where the document ended.\r\n    \r\n        This can be used to decode a JSON document from a string that may\r\n        have extraneous data at the end.\r\n    \r\n        \"\"\"\r\n        try:\r\n            obj, end = self.scan_once(s, idx)\r\n        except StopIteration as err:\r\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nurl = 'http://localhost:5000/account/updatebaseinfo'\r\nheaders = {'Content-Type': 'application/json','user-agent': 'advanced-rest-client','accept': '*/*','content-length': '126'}\r\nbody = \"\"\"{\"email\": \"test.updatebaseinfo@pytest.com\", \"firstname\": \"Test-Testi\", \"lastname\": \"Someone\", \"gender\": 1, \"graduated\": 2000}\"\"\"\r\n\r\nreq = requests.post(url, headers=headers, data=body)\r\n\r\nprint(req.status_code)\r\nprint(req.headers)\r\nprint(req.text)\r\n\r\n```\r\n\r\n# Flask Webserver route:\r\n\r\nI am using jwt from [flask_jwt_extended](https://flask-jwt-extended.readthedocs.io/en/stable/)\r\n\r\n```py\r\n@mod_account.route(\"/updatebaseinfo\", methods=['POST'])\r\n@jwt_required\r\ndef updatebaseinfo() -> Tuple[Response, int]:\r\n...\r\n```\r\n\r\nHow I handle token missing on the backend:\r\n\r\n```py\r\n@jwt.unauthorized_loader\r\ndef unauthorized_loader(error: str) -> Tuple[Response, int]:\r\n    \"\"\"Handle response on missing token\r\n\r\n    Arguments:\r\n        error {str} -- Why token could not be found\r\n\r\n    Returns:\r\n        Response -- Response send to client\r\n    \"\"\"\r\n    return jsonify({'msg': 'TOKEN_REQUIRED'}), 401\r\n```\r\n\r\n## System Information\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.0\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010104f\",\r\n    \"version\": \"19.1.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.24.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010104f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.6\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5507", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5507/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5507/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5507/events", "html_url": "https://github.com/psf/requests/issues/5507", "id": 641912836, "node_id": "MDU6SXNzdWU2NDE5MTI4MzY=", "number": 5507, "title": "when I tried to import requests, I got the TypeError", "user": {"login": "luckcry", "id": 37785246, "node_id": "MDQ6VXNlcjM3Nzg1MjQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/37785246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luckcry", "html_url": "https://github.com/luckcry", "followers_url": "https://api.github.com/users/luckcry/followers", "following_url": "https://api.github.com/users/luckcry/following{/other_user}", "gists_url": "https://api.github.com/users/luckcry/gists{/gist_id}", "starred_url": "https://api.github.com/users/luckcry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luckcry/subscriptions", "organizations_url": "https://api.github.com/users/luckcry/orgs", "repos_url": "https://api.github.com/users/luckcry/repos", "events_url": "https://api.github.com/users/luckcry/events{/privacy}", "received_events_url": "https://api.github.com/users/luckcry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T11:48:04Z", "updated_at": "2020-06-20T09:11:07Z", "closed_at": "2020-06-19T16:02:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please refer to our [Stack Overflow tag](https://stackoverflow.com/questions/tagged/python-requests) for guidance.\r\nEnv: python3.6  centos\r\n\r\nI got the following traceback\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 3, in <module>\r\n    from transfer import search, strip\r\n  File \"/usr/src/app/transfer.py\", line 5, in <module>\r\n    from proxies import proxy_maintainer\r\n  File \"/usr/src/app/proxies.py\", line 6, in <module>\r\n    import requests\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/__init__.py\", line 95, in <module>\r\n    from urllib3.contrib import pyopenssl\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/contrib/pyopenssl.py\", line 46, in <module>\r\n    import OpenSSL.SSL\r\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/__init__.py\", line 8, in <module>\r\n    from OpenSSL import crypto, SSL\r\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/crypto.py\", line 12, in <module>\r\n    from cryptography import x509\r\n  File \"/usr/local/lib/python3.6/dist-packages/cryptography/x509/__init__.py\", line 8, in <module>\r\n    from cryptography.x509.base import (\r\n  File \"/usr/local/lib/python3.6/dist-packages/cryptography/x509/base.py\", line 16, in <module>\r\n    from cryptography.x509.extensions import Extension, ExtensionType\r\n  File \"/usr/local/lib/python3.6/dist-packages/cryptography/x509/extensions.py\", line 13, in <module>\r\n    from asn1crypto.keys import PublicKeyInfo\r\n  File \"/usr/lib/python3/dist-packages/asn1crypto/keys.py\", line 22, in <module>\r\n    from ._elliptic_curve import (\r\n  File \"/usr/lib/python3/dist-packages/asn1crypto/_elliptic_curve.py\", line 51, in <module>\r\n    from ._int import inverse_mod\r\n  File \"/usr/lib/python3/dist-packages/asn1crypto/_int.py\", line 56, in <module>\r\n    from ._perf._big_num_ctypes import libcrypto\r\n  File \"/usr/lib/python3/dist-packages/asn1crypto/_perf/_big_num_ctypes.py\", line 35, in <module>\r\n    libcrypto_path = find_library(b'crypto' if sys.version_info < (3,) else 'crypto')\r\n  File \"/usr/lib/python3.6/ctypes/util.py\", line 313, in find_library\r\n    return _findSoname_ldconfig(name) or \\\r\n  File \"/usr/lib/python3.6/ctypes/util.py\", line 283, in _findSoname_ldconfig\r\n    res = re.search(regex, p.stdout.read())\r\n  File \"/usr/lib/python3.6/re.py\", line 182, in search\r\n    return _compile(pattern, flags).search(string)\r\nTypeError: cannot use a bytes pattern on a string-like object\r\n\r\nPlease help me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5506", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5506/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5506/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5506/events", "html_url": "https://github.com/psf/requests/issues/5506", "id": 641653604, "node_id": "MDU6SXNzdWU2NDE2NTM2MDQ=", "number": 5506, "title": "requests HTTP2", "user": {"login": "lei375809291", "id": 42380415, "node_id": "MDQ6VXNlcjQyMzgwNDE1", "avatar_url": "https://avatars3.githubusercontent.com/u/42380415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lei375809291", "html_url": "https://github.com/lei375809291", "followers_url": "https://api.github.com/users/lei375809291/followers", "following_url": "https://api.github.com/users/lei375809291/following{/other_user}", "gists_url": "https://api.github.com/users/lei375809291/gists{/gist_id}", "starred_url": "https://api.github.com/users/lei375809291/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lei375809291/subscriptions", "organizations_url": "https://api.github.com/users/lei375809291/orgs", "repos_url": "https://api.github.com/users/lei375809291/repos", "events_url": "https://api.github.com/users/lei375809291/events{/privacy}", "received_events_url": "https://api.github.com/users/lei375809291/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-19T02:10:48Z", "updated_at": "2020-06-23T06:17:58Z", "closed_at": "2020-06-19T16:00:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nrequests\u600e\u4e48\u53d1\u9001http2\u7248\u672c\u7684\u60c5\u6c42\u5462\uff1f\r\nHow can requests send http2 request?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5504", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5504/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5504/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5504/events", "html_url": "https://github.com/psf/requests/issues/5504", "id": 641438682, "node_id": "MDU6SXNzdWU2NDE0Mzg2ODI=", "number": 5504, "title": "Preparing a request body without headers throws a TypeError", "user": {"login": "ollien", "id": 977151, "node_id": "MDQ6VXNlcjk3NzE1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/977151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollien", "html_url": "https://github.com/ollien", "followers_url": "https://api.github.com/users/ollien/followers", "following_url": "https://api.github.com/users/ollien/following{/other_user}", "gists_url": "https://api.github.com/users/ollien/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollien/subscriptions", "organizations_url": "https://api.github.com/users/ollien/orgs", "repos_url": "https://api.github.com/users/ollien/repos", "events_url": "https://api.github.com/users/ollien/events{/privacy}", "received_events_url": "https://api.github.com/users/ollien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 136616769, "node_id": "MDU6TGFiZWwxMzY2MTY3Njk=", "url": "https://api.github.com/repos/psf/requests/labels/Documentation", "name": "Documentation", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-18T17:47:10Z", "updated_at": "2020-06-19T16:04:22Z", "closed_at": "2020-06-19T16:04:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a usecase where I need to generate the body of a `PreparedRequest` without anything else known about the request. If I run `PreparedRequest.prepare_body` without any headers, it fails, citing the headers are `None`. It seems like `prepare_body` is attempting to set the `Content-Length` header. It likely shouldn't, if there are no headers. One possible solution is to create the `headers` object as needed. It would also probably work to skip this step when headers aren't present, and then when `prepare_headers` is called, analyze the `body` to insert a content length, using `prepare_content_length`. \r\n\r\n## Expected Result\r\n\r\nI should be able to generate the body of a request on its own, without preparing headers. \r\n\r\n## Actual Result\r\n\r\nWhen running the below snippet, I get\r\n```\r\n$ python3 main.py\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 5, in <module>\r\n    req.prepare_body(data=\"hello world!\", files=None)\r\n  File \"/Users/nkrichevsky/.local/lib/python3.6/site-packages/requests/models.py\", line 514, in prepare_body\r\n    self.prepare_content_length(body)\r\n  File \"/Users/nkrichevsky/.local/lib/python3.6/site-packages/requests/models.py\", line 529, in prepare_content_length\r\n    self.headers['Content-Length'] = builtin_str(length)\r\nTypeError: 'NoneType' object does not support item assignment\r\n```\r\n\r\nI can work around this by doing `req.prepare_headers(None)` before preparing the body, but this isn't documented as being required in the API reference.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nif __name__ == \"__main__\":\r\n    req = requests.PreparedRequest()\r\n    req.prepare_body(data=\"hello world!\", files=None)\r\n    print(req.body)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.5\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.5.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.24.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5502", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5502/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5502/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5502/events", "html_url": "https://github.com/psf/requests/issues/5502", "id": 640735117, "node_id": "MDU6SXNzdWU2NDA3MzUxMTc=", "number": 5502, "title": "2.24.0 requests and boto3 appear to be incompatible", "user": {"login": "jw-maynard", "id": 23322066, "node_id": "MDQ6VXNlcjIzMzIyMDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/23322066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jw-maynard", "html_url": "https://github.com/jw-maynard", "followers_url": "https://api.github.com/users/jw-maynard/followers", "following_url": "https://api.github.com/users/jw-maynard/following{/other_user}", "gists_url": "https://api.github.com/users/jw-maynard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jw-maynard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jw-maynard/subscriptions", "organizations_url": "https://api.github.com/users/jw-maynard/orgs", "repos_url": "https://api.github.com/users/jw-maynard/repos", "events_url": "https://api.github.com/users/jw-maynard/events{/privacy}", "received_events_url": "https://api.github.com/users/jw-maynard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T20:53:09Z", "updated_at": "2020-06-18T15:42:56Z", "closed_at": "2020-06-18T15:42:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "boto3 calls broken since upgrade to requests 2.24.0. Running `pip install 'requests<2.24.0' before installing boto3 fixes the issue. I'm not sure if this is a problem with the new version of requests or if boto3 is using requests in some unexpected way that is causing this issue. Since reverting to the old version seems to workaround the issue I thought I'd start here.\r\n\r\n## Expected Result\r\n\r\nCalls using boto3 to succeed as they always have.\r\n\r\n## Actual Result\r\n\r\nGet an error:\r\n`An HTTP Client raised and unhandled exception: 'SSLSocket' object has no attribute 'connection'`\r\n\r\n## Reproduction Steps\r\n\r\nJust attempt to access S3 using boto3\r\n\r\n## System Information\r\n\r\nUsing Docker image `python:3.7-slim`\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.9.2\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.7\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.4.0-7634-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010107f\",\r\n    \"version\": \"19.1.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.24.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010104f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5499", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5499/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5499/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5499/events", "html_url": "https://github.com/psf/requests/issues/5499", "id": 640256210, "node_id": "MDU6SXNzdWU2NDAyNTYyMTA=", "number": 5499, "title": "Allow TLS version used, to be discovered", "user": {"login": "MikeWhittakerRyff", "id": 59476024, "node_id": "MDQ6VXNlcjU5NDc2MDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/59476024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikeWhittakerRyff", "html_url": "https://github.com/MikeWhittakerRyff", "followers_url": "https://api.github.com/users/MikeWhittakerRyff/followers", "following_url": "https://api.github.com/users/MikeWhittakerRyff/following{/other_user}", "gists_url": "https://api.github.com/users/MikeWhittakerRyff/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikeWhittakerRyff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikeWhittakerRyff/subscriptions", "organizations_url": "https://api.github.com/users/MikeWhittakerRyff/orgs", "repos_url": "https://api.github.com/users/MikeWhittakerRyff/repos", "events_url": "https://api.github.com/users/MikeWhittakerRyff/events{/privacy}", "received_events_url": "https://api.github.com/users/MikeWhittakerRyff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-17T08:42:09Z", "updated_at": "2020-07-21T05:53:08Z", "closed_at": "2020-07-21T05:53:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's not possible to find which version of TLS was used, or indeed any of the SSL parameters, after a transfer. \r\nCould some of this metadata be made available, perhaps only if specified in the request.\r\n\r\nIs there any indication that TLS was used at all ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5494", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5494/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5494/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5494/events", "html_url": "https://github.com/psf/requests/issues/5494", "id": 638884478, "node_id": "MDU6SXNzdWU2Mzg4ODQ0Nzg=", "number": 5494, "title": "POST request to a http:// which receives a HTTP 301 response redirecting to https:// is retried as GET instead", "user": {"login": "sanderland", "id": 48946947, "node_id": "MDQ6VXNlcjQ4OTQ2OTQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/48946947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanderland", "html_url": "https://github.com/sanderland", "followers_url": "https://api.github.com/users/sanderland/followers", "following_url": "https://api.github.com/users/sanderland/following{/other_user}", "gists_url": "https://api.github.com/users/sanderland/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanderland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanderland/subscriptions", "organizations_url": "https://api.github.com/users/sanderland/orgs", "repos_url": "https://api.github.com/users/sanderland/repos", "events_url": "https://api.github.com/users/sanderland/events{/privacy}", "received_events_url": "https://api.github.com/users/sanderland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-15T14:08:52Z", "updated_at": "2020-07-21T05:55:04Z", "closed_at": "2020-07-21T05:55:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n\r\nWhen making a request to our API using POST to http, it responds with HTTP 301, which is considered best practice for upgrading users to https.\r\nHowever, the requests library responds to this by ignoring the 'location' header and instead retries it using get, resulting in the user getting a very unexpected HTTP 405 invalid method.\r\n\r\n## Expected Result\r\n\r\nEither return the error 301 directly, or retry to the location specified.\r\n\r\n## Actual Result\r\n\r\nThe HTTP 405 error from the (invalid) GET method is retured.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nfrom requests import Response, Session\r\nfrom requests.adapters import HTTPAdapter\r\n\r\nkey = <api key from https://openindustrialdata.com>\r\n\r\nsession = Session()\r\nadapter = HTTPAdapter()\r\nsession.mount(\"http://\", adapter)\r\nsession.mount(\"https://\", adapter)\r\nres = session.request(method='POST',\r\n                                 url='http://api.cognitedata.com/api/v1/projects/publicdata/assets/list',\r\n                                 data='{\"limit\":25}',\r\n                                  headers={'api-key':key,\"content-type\":\"application/json\"})\r\nprint(res.request.method, res.status_code)\r\n```\r\nThe result of running this is GET 405\r\n\r\n## Source of the error\r\n\r\n\r\nThe relevant code is in sessions.py refering to issue #1704 is:\r\n```\r\n        # Second, if a POST is responded to with a 301, turn it into a GET.\r\n        # This bizarre behaviour is explained in Issue 1704.\r\n        if response.status_code == codes.moved and method == 'POST':\r\n            method = 'GET'\r\n```\r\n\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.6.1\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.3.0-59-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010102f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010102f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.24.1\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5493", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5493/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5493/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5493/events", "html_url": "https://github.com/psf/requests/issues/5493", "id": 638736030, "node_id": "MDU6SXNzdWU2Mzg3MzYwMzA=", "number": 5493, "title": "Instacrack termux bruteforce ", "user": {"login": "gehanshanaka", "id": 66874656, "node_id": "MDQ6VXNlcjY2ODc0NjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/66874656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gehanshanaka", "html_url": "https://github.com/gehanshanaka", "followers_url": "https://api.github.com/users/gehanshanaka/followers", "following_url": "https://api.github.com/users/gehanshanaka/following{/other_user}", "gists_url": "https://api.github.com/users/gehanshanaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/gehanshanaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gehanshanaka/subscriptions", "organizations_url": "https://api.github.com/users/gehanshanaka/orgs", "repos_url": "https://api.github.com/users/gehanshanaka/repos", "events_url": "https://api.github.com/users/gehanshanaka/events{/privacy}", "received_events_url": "https://api.github.com/users/gehanshanaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-15T10:27:04Z", "updated_at": "2020-06-15T14:47:46Z", "closed_at": "2020-06-15T14:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"crack.py\", line 108, in <module>                  sess = instabrute.Login(password)\r\n  File \"crack.py\", line 83, in Login                      sess.headers.update({'X-CSRFToken' : r.cookies.get_dict()['csrftoken']})\r\nKeyError: 'csrftoken'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5490", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5490/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5490/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5490/events", "html_url": "https://github.com/psf/requests/issues/5490", "id": 637670824, "node_id": "MDU6SXNzdWU2Mzc2NzA4MjQ=", "number": 5490, "title": "Open a stream from POST request", "user": {"login": "andreafresa", "id": 34455993, "node_id": "MDQ6VXNlcjM0NDU1OTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/34455993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreafresa", "html_url": "https://github.com/andreafresa", "followers_url": "https://api.github.com/users/andreafresa/followers", "following_url": "https://api.github.com/users/andreafresa/following{/other_user}", "gists_url": "https://api.github.com/users/andreafresa/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreafresa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreafresa/subscriptions", "organizations_url": "https://api.github.com/users/andreafresa/orgs", "repos_url": "https://api.github.com/users/andreafresa/repos", "events_url": "https://api.github.com/users/andreafresa/events{/privacy}", "received_events_url": "https://api.github.com/users/andreafresa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T11:00:28Z", "updated_at": "2020-06-15T14:47:56Z", "closed_at": "2020-06-15T14:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am trying to open a stream from a POST request. The idea is to open the stream and to attach the response to an SSE client.\r\nis this the correct way to do it?\r\n`response= requests.post(url_request , stream= True)`\r\nIf it is true, why it seems like the client is closing the socket at a certain point?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5489", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5489/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5489/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5489/events", "html_url": "https://github.com/psf/requests/issues/5489", "id": 637324721, "node_id": "MDU6SXNzdWU2MzczMjQ3MjE=", "number": 5489, "title": "When redirected request header dictionary contains previous value of cookie ", "user": {"login": "asifmallik", "id": 4713622, "node_id": "MDQ6VXNlcjQ3MTM2MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4713622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asifmallik", "html_url": "https://github.com/asifmallik", "followers_url": "https://api.github.com/users/asifmallik/followers", "following_url": "https://api.github.com/users/asifmallik/following{/other_user}", "gists_url": "https://api.github.com/users/asifmallik/gists{/gist_id}", "starred_url": "https://api.github.com/users/asifmallik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asifmallik/subscriptions", "organizations_url": "https://api.github.com/users/asifmallik/orgs", "repos_url": "https://api.github.com/users/asifmallik/repos", "events_url": "https://api.github.com/users/asifmallik/events{/privacy}", "received_events_url": "https://api.github.com/users/asifmallik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-11T21:17:32Z", "updated_at": "2020-06-12T12:32:02Z", "closed_at": "2020-06-12T12:09:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you send a request which replaces an existing cookie value with a new one and also returns a redirect response, when the new request is made, its request header from `r.request.headers['Cookies']` shows both the old and the new cookie value. However, the actual request header only contains the new cookie value.\r\n\r\n## Expected Result\r\n\r\nWhat would be expected is that `r.request.headers['Cookies']` would only have the new replaced cookie value rather than the old\r\n\r\n## Actual Result\r\n\r\nIts request header from `r.request.headers['Cookies']` shows both the old and the new cookie value\r\n\r\n## Reproduction Steps\r\n\r\n```\r\npython\r\nimport requests\r\n\r\nr = requests.get('http://httpbin.org/cookies/set?FOO=BAZ', cookies={'FOO': 'BAR'})\r\n\r\nprint(r.json()) #{'cookies': {'FOO': 'BAZ'}}  \r\n\r\nprint(r.request.headers['Cookie']) # FOO=BAR; FOO=BAZ\r\n```\r\n\r\nFrom what I understand, the latter should be just `FOO=BAZ` as I believe it should only reflect the request headers from the final request. I think what is going on is that the cookies from the previous requests are merged into this. \r\n\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.9\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.3.0-59-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010100f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5487", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5487/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5487/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5487/events", "html_url": "https://github.com/psf/requests/issues/5487", "id": 636938063, "node_id": "MDU6SXNzdWU2MzY5MzgwNjM=", "number": 5487, "title": "I need execute : curl -d \"a=A&b=B&c=C1,C2\",what should i do if use requests?", "user": {"login": "Hanfee", "id": 14362799, "node_id": "MDQ6VXNlcjE0MzYyNzk5", "avatar_url": "https://avatars2.githubusercontent.com/u/14362799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hanfee", "html_url": "https://github.com/Hanfee", "followers_url": "https://api.github.com/users/Hanfee/followers", "following_url": "https://api.github.com/users/Hanfee/following{/other_user}", "gists_url": "https://api.github.com/users/Hanfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hanfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hanfee/subscriptions", "organizations_url": "https://api.github.com/users/Hanfee/orgs", "repos_url": "https://api.github.com/users/Hanfee/repos", "events_url": "https://api.github.com/users/Hanfee/events{/privacy}", "received_events_url": "https://api.github.com/users/Hanfee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T11:28:21Z", "updated_at": "2020-06-15T14:48:05Z", "closed_at": "2020-06-15T14:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please refer to our [Stack Overflow tag](https://stackoverflow.com/questions/tagged/python-requests) for guidance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5485", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5485/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5485/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5485/events", "html_url": "https://github.com/psf/requests/issues/5485", "id": 635379859, "node_id": "MDU6SXNzdWU2MzUzNzk4NTk=", "number": 5485, "title": "Newly created Response object fails on boolean test", "user": {"login": "rtatishvili", "id": 2500830, "node_id": "MDQ6VXNlcjI1MDA4MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2500830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtatishvili", "html_url": "https://github.com/rtatishvili", "followers_url": "https://api.github.com/users/rtatishvili/followers", "following_url": "https://api.github.com/users/rtatishvili/following{/other_user}", "gists_url": "https://api.github.com/users/rtatishvili/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtatishvili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtatishvili/subscriptions", "organizations_url": "https://api.github.com/users/rtatishvili/orgs", "repos_url": "https://api.github.com/users/rtatishvili/repos", "events_url": "https://api.github.com/users/rtatishvili/events{/privacy}", "received_events_url": "https://api.github.com/users/rtatishvili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T12:17:47Z", "updated_at": "2020-06-15T15:03:10Z", "closed_at": "2020-06-15T15:03:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "A newly created `Response` object fails boolean test in if statement (when under the hood `__bool__` method is called). Based on conventions used in Python, I expect an empty response object to be resolved to `False`. Although it is a design decision to which value to resolve, throwing an exception in this trivial case is unexpected behavior.\r\n\r\n## Expected Result\r\n\r\n```\r\n2.23.0\r\nResponse is empty\r\n```\r\n\r\n\r\n## Actual Result\r\n\r\n```\r\n2.23.0\r\nTraceback (most recent call last):\r\n  File \".../local/reqeusts_error.py\", line 6, in <module>\r\n    if not response:\r\n  File \"/opt/miniconda/lib/python3.6/site-packages/requests/models.py\", line 677, in __bool__\r\n    return self.ok\r\n  File \"/opt/miniconda/lib/python3.6/site-packages/requests/models.py\", line 703, in ok\r\n    self.raise_for_status()\r\n  File \"/opt/miniconda/lib/python3.6/site-packages/requests/models.py\", line 934, in raise_for_status\r\n    if 400 <= self.status_code < 500:\r\nTypeError: '<=' not supported between instances of 'int' and 'NoneType'\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nprint(requests.__version__)\r\n\r\nresponse = requests.Response()\r\nif not response:\r\n    print('Response is empty')\r\n\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.3.1\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.0\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"3.10.0-957.21.3.el7.x86_64\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1000210f\",\r\n    \"version\": \"18.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1000215f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5484", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5484/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5484/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5484/events", "html_url": "https://github.com/psf/requests/issues/5484", "id": 634700106, "node_id": "MDU6SXNzdWU2MzQ3MDAxMDY=", "number": 5484, "title": "\"407 Proxy Authentication Required\" although it was provided in the request", "user": {"login": "raffaem", "id": 54762742, "node_id": "MDQ6VXNlcjU0NzYyNzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/54762742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raffaem", "html_url": "https://github.com/raffaem", "followers_url": "https://api.github.com/users/raffaem/followers", "following_url": "https://api.github.com/users/raffaem/following{/other_user}", "gists_url": "https://api.github.com/users/raffaem/gists{/gist_id}", "starred_url": "https://api.github.com/users/raffaem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raffaem/subscriptions", "organizations_url": "https://api.github.com/users/raffaem/orgs", "repos_url": "https://api.github.com/users/raffaem/repos", "events_url": "https://api.github.com/users/raffaem/events{/privacy}", "received_events_url": "https://api.github.com/users/raffaem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-08T15:02:33Z", "updated_at": "2020-06-15T14:48:17Z", "closed_at": "2020-06-15T14:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to run the following code\r\n\r\nimport requests\r\n\r\n```\r\ns = requests.Session()\r\ns.trust_env = False\r\n\r\nurl=\"https://api.elsevier.com/content/abstract/scopus_id/85082366258\"\r\nheaders={'X-ELS-APIKey': 'MY_API_KEY', \r\n'Accept': 'application/json', \r\n'User-Agent': 'pybliometrics-v2.5.0'}\r\nproxies={'https': 'https://USERNAME:PASSWORD@proxy.thing.com:8080/'}\r\nparams={'view': 'META_ABS'}\r\n\r\nresp = s.get(url, headers=headers, proxies=proxies, params=params)\r\n\r\nprint(resp.text)\r\n```\r\n\r\nBut I get the following error message:\r\n\r\n`requests.exceptions.ProxyError: HTTPSConnectionPool(host='api.elsevier.com', port=443): Max retries exceeded with url: /content/abstract/scopus_id/85082366258?view=META_ABS (Caused by ProxyError('Cannot connect to proxy.', OSError('Tunnel connection failed: 407 Proxy Authentication Required')))`\r\n\r\nMy username and password are correct and don't contain any special characters, only alphanumeric ones.\r\n\r\nWhat is going wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5483", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5483/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5483/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5483/events", "html_url": "https://github.com/psf/requests/issues/5483", "id": 634524019, "node_id": "MDU6SXNzdWU2MzQ1MjQwMTk=", "number": 5483, "title": "One server fails ping -Max retries exceeded with url: /wsman (Caused by SSLError(SSLError(\\\"bad handshake: SysCallError(104, 'ECONNRESET')", "user": {"login": "ruttrow", "id": 66622032, "node_id": "MDQ6VXNlcjY2NjIyMDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/66622032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruttrow", "html_url": "https://github.com/ruttrow", "followers_url": "https://api.github.com/users/ruttrow/followers", "following_url": "https://api.github.com/users/ruttrow/following{/other_user}", "gists_url": "https://api.github.com/users/ruttrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruttrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruttrow/subscriptions", "organizations_url": "https://api.github.com/users/ruttrow/orgs", "repos_url": "https://api.github.com/users/ruttrow/repos", "events_url": "https://api.github.com/users/ruttrow/events{/privacy}", "received_events_url": "https://api.github.com/users/ruttrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-08T11:22:58Z", "updated_at": "2020-06-15T14:48:53Z", "closed_at": "2020-06-15T14:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "New to Ansible, having trouble with one server failing ping: \r\n\r\n\"msg\": \"kerberos: HTTPSConnectionPool(host='xxxxxl', port=5986): Max retries exceeded with url: /wsman (Caused by SSLError(SSLError(\\\"bad handshake: SysCallError(104, 'ECONNRESET')\\\",),)), ssl: HTTPSConnectionPool(host='xxxx', port=5986): Max retries exceeded with url: /wsman (Caused by SSLError(SSLError(\\\"bad handshake: SysCallError(104, 'ECONNRESET')\\\",),))\",\r\n    \"unreachable\": true,\r\n    \"changed\": false,\r\n    \"skip_reason\": \"Host xxxx is unreachable\"\r\n}\r\n\r\nI replaced host name with xxxx\r\n\r\nWe have several hundred servers, this is the only one giving this error.\r\n\r\nI tried running the ConfigureRemotingForAnsible.ps1\r\nVerified network settings\r\nI can telnet to the host on port 5986 from another server\r\nVerified IIScrypto has not disabled SSL's or TLS.\r\nran command - winrm e winrm/config/listener\r\nwhich shows listener running on 5986\r\nI am unable to open the URL of the server on port 5986\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5482", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5482/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5482/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5482/events", "html_url": "https://github.com/psf/requests/issues/5482", "id": 634282483, "node_id": "MDU6SXNzdWU2MzQyODI0ODM=", "number": 5482, "title": "response.status_code==200 when Bean is not found and status=404", "user": {"login": "ovierlinck", "id": 45629047, "node_id": "MDQ6VXNlcjQ1NjI5MDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/45629047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ovierlinck", "html_url": "https://github.com/ovierlinck", "followers_url": "https://api.github.com/users/ovierlinck/followers", "following_url": "https://api.github.com/users/ovierlinck/following{/other_user}", "gists_url": "https://api.github.com/users/ovierlinck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ovierlinck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ovierlinck/subscriptions", "organizations_url": "https://api.github.com/users/ovierlinck/orgs", "repos_url": "https://api.github.com/users/ovierlinck/repos", "events_url": "https://api.github.com/users/ovierlinck/events{/privacy}", "received_events_url": "https://api.github.com/users/ovierlinck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-08T07:21:26Z", "updated_at": "2020-06-11T12:14:52Z", "closed_at": "2020-06-11T07:45:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I experience some strange behavior about response.status_code.\r\n\r\nIf I do an invalid request (in this sample case, I put on purpose an incorrect Bean name), I still get response.status_code=200 while I expect some error code (such as 404)\r\n\r\nEven more strange, in the JSON, there is indeed a status:404 (see sample code and outputs below)\r\n\r\n\r\n## Expected Result\r\n\r\nstatus should be 404 in such case\r\n\r\n## Actual Result\r\n\r\nI got a status==200, meaning 'no error'\r\n\r\n## Reproduction Steps\r\n\r\nHow is it that this JSON info does not get to the response.status_code?\r\n\r\nHere is the sample code:\r\n\r\n        req = baseUrl + \"/exec/bean:name=AnInvalidBean/send([D,boolean,boolean)/1,2,3,4,0.5,0.6,13,10/True/True\u201d\r\n        response = self.GET(req, 10)\r\n        test.log(\"   RESPONSE = \" + str(response))\r\n        test.log(\"   JSON: \" + str(response.json()))\r\n        test.log(\"   response.status_code: \" + str(response.status_code))\r\n        test.log(\"   response.json().get(\\\"status\\\"): \" + str(response.json().get(\"status\")))\r\n        test.log(\"   response.ok: \" + str(response.ok))\r\n        test.log(\"   response as a boolean: \" + str(True if response else False))\r\n\r\nAnd the corresponding log (re-formatted for readability):\r\n\r\n        REQUEST : http://127.0.0.1:5555/jolokia/exec/bean:name=NONExistingBean/send([D,boolean,boolean)/1,2,3,4,0.5,0.6,13,10/True/True \r\n\r\n        RESPONSE = <Response [200]> \r\n\r\n        JSON: {\r\n        'request': \r\n        {\r\n        'mbean': 'bean:name=NONExistingBean', \r\n        'arguments': ['1,2,3,4,0.5,0.6,13,10', 'True', 'True'], \r\n        'type': 'exec', \r\n        'operation': 'send([D,boolean,boolean)'\r\n        }, \r\n        'stacktrace': 'javax.management.InstanceNotFoundException: bean:name=NONExistingBean\\r\\n\\tat  [\u2026TRUNCATED\u2026] at java.base/java.lang.Thread.run(Thread.java:834)\\r\\n', \r\n        'error_type': 'javax.management.InstanceNotFoundException', \r\n        'error': 'javax.management.InstanceNotFoundException :      bean:name=UsddderPositionSenderPanelTestFacade', \r\n        'status': 404\r\n        }\r\n\r\n        response.status_code: 200 \r\n        response.json().get(\"status\"): 404 \r\n\r\n        response.ok: True \r\n        response as a boolean: True \r\n\r\n\r\nHow can we get these 2 \u2018conflicting\u2019 lines:\r\nresponse.status_code: 200 \r\nresponse.json().get(\"status\"): 404 \r\nHow is it that despite the 'status': 404, the \u2018stacktrace\u2019 and \u2018error\u2019, I still get status_code: 200? \r\nI\u2019m using requests          2.22.0\r\n\r\n\r\n## System Information\r\n\r\npython -m requests.help\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.4\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010103f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5479", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5479/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5479/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5479/events", "html_url": "https://github.com/psf/requests/issues/5479", "id": 630807796, "node_id": "MDU6SXNzdWU2MzA4MDc3OTY=", "number": 5479, "title": "module 'requests' has no attribute 'settings'", "user": {"login": "OscarVanL", "id": 7999692, "node_id": "MDQ6VXNlcjc5OTk2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7999692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OscarVanL", "html_url": "https://github.com/OscarVanL", "followers_url": "https://api.github.com/users/OscarVanL/followers", "following_url": "https://api.github.com/users/OscarVanL/following{/other_user}", "gists_url": "https://api.github.com/users/OscarVanL/gists{/gist_id}", "starred_url": "https://api.github.com/users/OscarVanL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OscarVanL/subscriptions", "organizations_url": "https://api.github.com/users/OscarVanL/orgs", "repos_url": "https://api.github.com/users/OscarVanL/repos", "events_url": "https://api.github.com/users/OscarVanL/events{/privacy}", "received_events_url": "https://api.github.com/users/OscarVanL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-04T13:12:26Z", "updated_at": "2020-08-07T20:41:10Z", "closed_at": "2020-06-05T15:38:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to print verbose logs from requests to see the headers and cookies in each request.\r\nI followed [this page](https://requests.readthedocs.io/en/v0.6.6/user/advanced/), which says to run:\r\n\r\n```\r\nrequests.settings.verbose = sys.stderr\r\n````\r\n\r\nI suspect this may be a case of outdated documentation, but I can't find anything more up to date.\r\n\r\n## Expected Result\r\n\r\nVerbose logging should be enabled.\r\n\r\n## Actual Result\r\n\r\nMy IDE gives a warning about `settings not being a reference in __init__.pyi`. Running the program throws the exception `AttributeError: module 'requests' has no attribute 'settings'`\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nrequests.settings.verbose = sys.stderr\r\n```\r\n\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.9.2\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010107f\",\r\n    \"version\": \"19.1.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5478", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5478/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5478/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5478/events", "html_url": "https://github.com/psf/requests/issues/5478", "id": 630172597, "node_id": "MDU6SXNzdWU2MzAxNzI1OTc=", "number": 5478, "title": "Implicit JSON Content-Type is missing charset", "user": {"login": "reinderien", "id": 1236420, "node_id": "MDQ6VXNlcjEyMzY0MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1236420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reinderien", "html_url": "https://github.com/reinderien", "followers_url": "https://api.github.com/users/reinderien/followers", "following_url": "https://api.github.com/users/reinderien/following{/other_user}", "gists_url": "https://api.github.com/users/reinderien/gists{/gist_id}", "starred_url": "https://api.github.com/users/reinderien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reinderien/subscriptions", "organizations_url": "https://api.github.com/users/reinderien/orgs", "repos_url": "https://api.github.com/users/reinderien/repos", "events_url": "https://api.github.com/users/reinderien/events{/privacy}", "received_events_url": "https://api.github.com/users/reinderien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-03T17:11:15Z", "updated_at": "2020-06-03T19:03:03Z", "closed_at": "2020-06-03T19:03:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code in `requests/models.py`:\r\n\r\n```python\r\n            content_type = 'application/json'\r\n            body = complexjson.dumps(json)\r\n            if not isinstance(body, bytes):\r\n                body = body.encode('utf-8')\r\n# ...\r\n            # Add content-type if it wasn't explicitly provided.\r\n            if content_type and ('content-type' not in self.headers):\r\n                self.headers['Content-Type'] = content_type\r\n```\r\n\r\nhas an incomplete `Content-Type`.\r\n\r\n## Expected Result\r\n\r\nThat `Content-Type` be `application/json; charset=utf-8`\r\n\r\n## Actual Result\r\n\r\n`Content-Type` is only `application/json`\r\n\r\n## Reproduction Steps\r\n\r\nMake any request passing `json={}` and without explicitly setting any headers.\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010106f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5476", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5476/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5476/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5476/events", "html_url": "https://github.com/psf/requests/issues/5476", "id": 627300152, "node_id": "MDU6SXNzdWU2MjczMDAxNTI=", "number": 5476, "title": "urllib3.exceptions.LocationParseError: Failed to parse", "user": {"login": "nickwebha", "id": 1606679, "node_id": "MDQ6VXNlcjE2MDY2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1606679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickwebha", "html_url": "https://github.com/nickwebha", "followers_url": "https://api.github.com/users/nickwebha/followers", "following_url": "https://api.github.com/users/nickwebha/following{/other_user}", "gists_url": "https://api.github.com/users/nickwebha/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickwebha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickwebha/subscriptions", "organizations_url": "https://api.github.com/users/nickwebha/orgs", "repos_url": "https://api.github.com/users/nickwebha/repos", "events_url": "https://api.github.com/users/nickwebha/events{/privacy}", "received_events_url": "https://api.github.com/users/nickwebha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-29T14:11:30Z", "updated_at": "2020-06-29T22:26:44Z", "closed_at": "2020-06-11T16:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "`python3 -c \"import requests; requests.get('https://google.com');\"` produces error.\r\n\r\n## Expected Result\r\n\r\n`requests.get()` gets the URL in question.\r\n\r\n## Actual Result\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/requests/models.py\", line 379, in prepare_url\r\n    scheme, auth, host, port, path, query, fragment = parse_url(url)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/util/url.py\", line 392, in parse_url\r\n    return six.raise_from(LocationParseError(source_url), None)\r\n  File \"<string>\", line 3, in raise_from\r\nurllib3.exceptions.LocationParseError: Failed to parse: https://google.com\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 75, in get\r\n    return request('get', url, params=params, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 60, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 519, in request\r\n    prep = self.prepare_request(req)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 452, in prepare_request\r\n    p.prepare(\r\n  File \"/usr/lib/python3/dist-packages/requests/models.py\", line 313, in prepare\r\n    self.prepare_url(url, params)\r\n  File \"/usr/lib/python3/dist-packages/requests/models.py\", line 381, in prepare_url\r\n    raise InvalidURL(*e.args)\r\nrequests.exceptions.InvalidURL: Failed to parse: https://google.com\r\n```\r\n\r\n## Reproduction Steps\r\n\r\n`python3 -c \"import requests; requests.get('https://google.com');\"` on CLI.\r\n\r\n## System Information\r\n\r\n    $ python3 -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.2\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.4.0-33-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010104f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010106f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n\r\n## Other Information\r\n\r\nWhen I try to hit that URL in my browser it works fine.\r\n\r\nI am seeing the same thing with [Certbot](https://github.com/certbot/certbot) and [Emscripten](https://github.com/emscripten-core/emscripten).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5474", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5474/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5474/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5474/events", "html_url": "https://github.com/psf/requests/issues/5474", "id": 625758756, "node_id": "MDU6SXNzdWU2MjU3NTg3NTY=", "number": 5474, "title": "Malformed URL leads to unexpected UnicodeError", "user": {"login": "musically-ut", "id": 502876, "node_id": "MDQ6VXNlcjUwMjg3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/502876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/musically-ut", "html_url": "https://github.com/musically-ut", "followers_url": "https://api.github.com/users/musically-ut/followers", "following_url": "https://api.github.com/users/musically-ut/following{/other_user}", "gists_url": "https://api.github.com/users/musically-ut/gists{/gist_id}", "starred_url": "https://api.github.com/users/musically-ut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/musically-ut/subscriptions", "organizations_url": "https://api.github.com/users/musically-ut/orgs", "repos_url": "https://api.github.com/users/musically-ut/repos", "events_url": "https://api.github.com/users/musically-ut/events{/privacy}", "received_events_url": "https://api.github.com/users/musically-ut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-27T14:43:26Z", "updated_at": "2020-06-15T14:49:41Z", "closed_at": "2020-06-15T14:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Giving the malformed URL `http://.com` should lead to `InvalidURL` but results in a misleading `UnicodeError`.\r\n\r\n## Expected Result\r\n\r\nShould raise `InvalidURL`.\r\n\r\n## Actual Result\r\n\r\nRaises `UnicodeError`.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nrequests.get(\"https://.com\")\r\n```\r\n\r\nresults in:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nUnicodeError                              Traceback (most recent call last)\r\n~/miniconda3/lib/python3.7/encodings/idna.py in encode(self, input, errors)\r\n    164                 if not (0 < len(label) < 64):\r\n--> 165                     raise UnicodeError(\"label empty or too long\")\r\n    166             if len(labels[-1]) >= 64:\r\n\r\nUnicodeError: label empty or too long\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nUnicodeError                              Traceback (most recent call last)\r\n<ipython-input-33-45504cf090ae> in <module>\r\n----> 1 requests.get('http://.com')\r\n\r\n~/miniconda3/lib/python3.7/site-packages/requests/api.py in get(url, params, **kwargs)\r\n     73\r\n     74     kwargs.setdefault('allow_redirects', True)\r\n---> 75     return request('get', url, params=params, **kwargs)\r\n     76\r\n     77\r\n\r\n~/miniconda3/lib/python3.7/site-packages/requests/api.py in request(method, url, **kwargs)\r\n     58     # cases, and look like a memory leak in others.\r\n     59     with sessions.Session() as session:\r\n---> 60         return session.request(method=method, url=url, **kwargs)\r\n     61\r\n     62\r\n\r\n~/miniconda3/lib/python3.7/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\r\n    531         }\r\n    532         send_kwargs.update(settings)\r\n--> 533         resp = self.send(prep, **send_kwargs)\r\n    534\r\n    535         return resp\r\n\r\n~/miniconda3/lib/python3.7/site-packages/requests/sessions.py in send(self, request, **kwargs)\r\n    644\r\n    645         # Send the request\r\n--> 646         r = adapter.send(request, **kwargs)\r\n    647\r\n    648         # Total elapsed time of the request (approximately)\r\n\r\n~/miniconda3/lib/python3.7/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\r\n    447                     decode_content=False,\r\n    448                     retries=self.max_retries,\r\n--> 449                     timeout=timeout\r\n    450                 )\r\n    451\r\n\r\n~/miniconda3/lib/python3.7/site-packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\r\n    598                                                   timeout=timeout_obj,\r\n    599                                                   body=body, headers=headers,\r\n--> 600                                                   chunked=chunked)\r\n    601\r\n    602             # If we're going to release the connection in ``finally:``, then\r\n\r\n~/miniconda3/lib/python3.7/site-packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)\r\n    352             conn.request_chunked(method, url, **httplib_request_kw)\r\n    353         else:\r\n--> 354             conn.request(method, url, **httplib_request_kw)\r\n    355\r\n    356         # Reset the timeout for the recv() on the socket\r\n\r\n~/miniconda3/lib/python3.7/http/client.py in request(self, method, url, body, headers, encode_chunked)\r\n   1227                 encode_chunked=False):\r\n   1228         \"\"\"Send a complete request to the server.\"\"\"\r\n-> 1229         self._send_request(method, url, body, headers, encode_chunked)\r\n   1230\r\n   1231     def _send_request(self, method, url, body, headers, encode_chunked):\r\n\r\n~/miniconda3/lib/python3.7/http/client.py in _send_request(self, method, url, body, headers, encode_chunked)\r\n   1273             # default charset of iso-8859-1.\r\n   1274             body = _encode(body, 'body')\r\n-> 1275         self.endheaders(body, encode_chunked=encode_chunked)\r\n   1276\r\n   1277     def getresponse(self):\r\n\r\n~/miniconda3/lib/python3.7/http/client.py in endheaders(self, message_body, encode_chunked)\r\n   1222         else:\r\n   1223             raise CannotSendHeader()\r\n-> 1224         self._send_output(message_body, encode_chunked=encode_chunked)\r\n   1225\r\n   1226     def request(self, method, url, body=None, headers={}, *,\r\n\r\n~/miniconda3/lib/python3.7/http/client.py in _send_output(self, message_body, encode_chunked)\r\n   1014         msg = b\"\\r\\n\".join(self._buffer)\r\n   1015         del self._buffer[:]\r\n-> 1016         self.send(msg)\r\n   1017\r\n   1018         if message_body is not None:\r\n\r\n~/miniconda3/lib/python3.7/http/client.py in send(self, data)\r\n    954         if self.sock is None:\r\n    955             if self.auto_open:\r\n--> 956                 self.connect()\r\n    957             else:\r\n    958                 raise NotConnected()\r\n\r\n~/miniconda3/lib/python3.7/site-packages/urllib3/connection.py in connect(self)\r\n    179\r\n    180     def connect(self):\r\n--> 181         conn = self._new_conn()\r\n    182         self._prepare_conn(conn)\r\n    183\r\n\r\n~/miniconda3/lib/python3.7/site-packages/urllib3/connection.py in _new_conn(self)\r\n    157         try:\r\n    158             conn = connection.create_connection(\r\n--> 159                 (self._dns_host, self.port), self.timeout, **extra_kw)\r\n    160\r\n    161         except SocketTimeout:\r\n\r\n~/miniconda3/lib/python3.7/site-packages/urllib3/util/connection.py in create_connection(address, timeout, source_address, socket_options)\r\n     55     family = allowed_gai_family()\r\n     56\r\n---> 57     for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n     58         af, socktype, proto, canonname, sa = res\r\n     59         sock = None\r\n\r\n~/miniconda3/lib/python3.7/socket.py in getaddrinfo(host, port, family, type, proto, flags)\r\n    746     # and socket type values to enum constants.\r\n    747     addrlist = []\r\n--> 748     for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\n    749         af, socktype, proto, canonname, sa = res\r\n    750         addrlist.append((_intenum_converter(af, AddressFamily),\r\n\r\nUnicodeError: encoding with 'idna' codec failed (UnicodeError: label empty or too long)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n\u2794 python -m requests.help\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.7\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.7\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.4.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010103f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.20.1\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010103f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.24.3\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5472", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5472/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5472/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5472/events", "html_url": "https://github.com/psf/requests/issues/5472", "id": 623660010, "node_id": "MDU6SXNzdWU2MjM2NjAwMTA=", "number": 5472, "title": "Problem with python3.6", "user": {"login": "FathiHamed", "id": 25548515, "node_id": "MDQ6VXNlcjI1NTQ4NTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/25548515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FathiHamed", "html_url": "https://github.com/FathiHamed", "followers_url": "https://api.github.com/users/FathiHamed/followers", "following_url": "https://api.github.com/users/FathiHamed/following{/other_user}", "gists_url": "https://api.github.com/users/FathiHamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/FathiHamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FathiHamed/subscriptions", "organizations_url": "https://api.github.com/users/FathiHamed/orgs", "repos_url": "https://api.github.com/users/FathiHamed/repos", "events_url": "https://api.github.com/users/FathiHamed/events{/privacy}", "received_events_url": "https://api.github.com/users/FathiHamed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-23T13:23:00Z", "updated_at": "2020-05-23T13:32:45Z", "closed_at": "2020-05-23T13:32:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to send a request via python3.6 to this url: \"https://www.khaneyeshoma.ir/\", it waits until Timeout exception is raised. But when I try the same request via python2.7 it is successfully completed with status code: 200. Can you help me?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5471", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5471/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5471/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5471/events", "html_url": "https://github.com/psf/requests/issues/5471", "id": 623634261, "node_id": "MDU6SXNzdWU2MjM2MzQyNjE=", "number": 5471, "title": "about session?", "user": {"login": "sjm1992st", "id": 15169452, "node_id": "MDQ6VXNlcjE1MTY5NDUy", "avatar_url": "https://avatars2.githubusercontent.com/u/15169452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjm1992st", "html_url": "https://github.com/sjm1992st", "followers_url": "https://api.github.com/users/sjm1992st/followers", "following_url": "https://api.github.com/users/sjm1992st/following{/other_user}", "gists_url": "https://api.github.com/users/sjm1992st/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjm1992st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjm1992st/subscriptions", "organizations_url": "https://api.github.com/users/sjm1992st/orgs", "repos_url": "https://api.github.com/users/sjm1992st/repos", "events_url": "https://api.github.com/users/sjm1992st/events{/privacy}", "received_events_url": "https://api.github.com/users/sjm1992st/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-23T10:57:54Z", "updated_at": "2020-06-17T20:18:30Z", "closed_at": "2020-06-17T20:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I generate a seesion for different domain names in the same program,\r\n for example :\r\n    url1:\r\n       session1 = requests.session ()\r\n    url2:\r\n       session2 = requests.session ()\r\n\r\nWhat's the difference with me only generating a session for url1 and url2?\r\nWill there be any difference in performance?\r\nthanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5470", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5470/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5470/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5470/events", "html_url": "https://github.com/psf/requests/issues/5470", "id": 623616111, "node_id": "MDU6SXNzdWU2MjM2MTYxMTE=", "number": 5470, "title": "for non-english response, may add apparent_text for convenient", "user": {"login": "NewUserHa", "id": 32261870, "node_id": "MDQ6VXNlcjMyMjYxODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/32261870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NewUserHa", "html_url": "https://github.com/NewUserHa", "followers_url": "https://api.github.com/users/NewUserHa/followers", "following_url": "https://api.github.com/users/NewUserHa/following{/other_user}", "gists_url": "https://api.github.com/users/NewUserHa/gists{/gist_id}", "starred_url": "https://api.github.com/users/NewUserHa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NewUserHa/subscriptions", "organizations_url": "https://api.github.com/users/NewUserHa/orgs", "repos_url": "https://api.github.com/users/NewUserHa/repos", "events_url": "https://api.github.com/users/NewUserHa/events{/privacy}", "received_events_url": "https://api.github.com/users/NewUserHa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-23T09:11:18Z", "updated_at": "2020-07-21T06:01:01Z", "closed_at": "2020-07-21T06:01:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "most non-English response has incorrect r.encoding so it need:\r\n```\r\nr.encoding = r.apparent_encoding\r\nr.text\r\n```\r\n\r\nwhat about a new attribute like `r.apparent_text` or `r.text(chardect=True)`for the result?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5469", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5469/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5469/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5469/events", "html_url": "https://github.com/psf/requests/issues/5469", "id": 622730139, "node_id": "MDU6SXNzdWU2MjI3MzAxMzk=", "number": 5469, "title": "Does `Response.content` decode the unicode character in JSON implictly?", "user": {"login": "Phi-Li", "id": 13658574, "node_id": "MDQ6VXNlcjEzNjU4NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/13658574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phi-Li", "html_url": "https://github.com/Phi-Li", "followers_url": "https://api.github.com/users/Phi-Li/followers", "following_url": "https://api.github.com/users/Phi-Li/following{/other_user}", "gists_url": "https://api.github.com/users/Phi-Li/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phi-Li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phi-Li/subscriptions", "organizations_url": "https://api.github.com/users/Phi-Li/orgs", "repos_url": "https://api.github.com/users/Phi-Li/repos", "events_url": "https://api.github.com/users/Phi-Li/events{/privacy}", "received_events_url": "https://api.github.com/users/Phi-Li/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-21T19:29:42Z", "updated_at": "2020-05-21T20:38:20Z", "closed_at": "2020-05-21T20:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.8.2, requests 2.23.0\r\n\r\nCode for reproduce:\r\n\r\n```python\r\nheaders = {\r\n    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0'\r\n}\r\nresp = requests.get('https://api.bgm.tv/subject/12', headers=headers)\r\nprint(resp.content)\r\n```\r\n\r\nExpect `resp.content` to be bytes containing the original payload bytes (https://requests.readthedocs.io/en/master/user/quickstart/#binary-response-content), but unicode character in the JSON is decoded as unicode representation with a prefix `\\u`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5467", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5467/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5467/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5467/events", "html_url": "https://github.com/psf/requests/issues/5467", "id": 622152527, "node_id": "MDU6SXNzdWU2MjIxNTI1Mjc=", "number": 5467, "title": "Stale requests2 package on pypi", "user": {"login": "ccope", "id": 412019, "node_id": "MDQ6VXNlcjQxMjAxOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/412019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccope", "html_url": "https://github.com/ccope", "followers_url": "https://api.github.com/users/ccope/followers", "following_url": "https://api.github.com/users/ccope/following{/other_user}", "gists_url": "https://api.github.com/users/ccope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccope/subscriptions", "organizations_url": "https://api.github.com/users/ccope/orgs", "repos_url": "https://api.github.com/users/ccope/repos", "events_url": "https://api.github.com/users/ccope/events{/privacy}", "received_events_url": "https://api.github.com/users/ccope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-20T23:48:15Z", "updated_at": "2020-07-21T06:02:48Z", "closed_at": "2020-07-21T06:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not totally sure where the right place to report this is, but there is a confusing stale copy of requests on pypi, called requests2: https://pypi.org/project/requests2/\r\n\r\nIt is:\r\n*  3 years old\r\n* uploaded by the original maintainer\r\n* showing a README with some healthy-looking badges\r\n* listed as Development Status: 5 - Production/Stable in pypi\r\n* getting used accidentally in new projects: https://libraries.io/pypi/requests2/usage\r\n* easy to find when searching for requests:\r\n![Selection_142](https://user-images.githubusercontent.com/412019/82508158-12027680-9ab9-11ea-9c41-45f7ee47d0d3.png)\r\n\r\n\r\nI believe it should be [yanked](https://www.python.org/dev/peps/pep-0592/) and/or [replaced with a redirect](https://www.dampfkraft.com/code/how-to-deprecate-a-pypi-package.html#provide-a-redirect).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5463", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5463/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5463/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5463/events", "html_url": "https://github.com/psf/requests/issues/5463", "id": 620984402, "node_id": "MDU6SXNzdWU2MjA5ODQ0MDI=", "number": 5463, "title": "response header has encoding error", "user": {"login": "MineEric64", "id": 25432800, "node_id": "MDQ6VXNlcjI1NDMyODAw", "avatar_url": "https://avatars0.githubusercontent.com/u/25432800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MineEric64", "html_url": "https://github.com/MineEric64", "followers_url": "https://api.github.com/users/MineEric64/followers", "following_url": "https://api.github.com/users/MineEric64/following{/other_user}", "gists_url": "https://api.github.com/users/MineEric64/gists{/gist_id}", "starred_url": "https://api.github.com/users/MineEric64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MineEric64/subscriptions", "organizations_url": "https://api.github.com/users/MineEric64/orgs", "repos_url": "https://api.github.com/users/MineEric64/repos", "events_url": "https://api.github.com/users/MineEric64/events{/privacy}", "received_events_url": "https://api.github.com/users/MineEric64/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T13:37:23Z", "updated_at": "2020-05-20T05:22:54Z", "closed_at": "2020-05-20T05:22:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary. some http response header without English (using utf-8) has encoding error.\r\noriginal text (2. \ud575\uc2ec\uc815\ubcf4\ub97c \ub2f4\uc740 \ubc1c\ud45c \ud615\uc131\ud3c9\uac00 5\uc6d4 19\uc77c) I uploaded this text on server.\r\n\r\nand I responded to server with get function. (`requests.get()`)\r\nbut I got this text (2. \u00ed\u0095\u00b5\u00ec\u008b\u00ac\u00ec\u00a0\u0095\u00eb\u00b3\u00b4\u00eb\u00a5\u00bc \u00eb\u008b\u00b4\u00ec\u009d\u0080 \u00eb\u00b0\u009c\u00ed\u0091\u009c \u00ed\u0098\u0095\u00ec\u0084\u00b1\u00ed\u008f\u0089\u00ea\u00b0\u0080 5\u00ec\u009b\u0094 19\u00ec\u009d\u00bc) from http response header.\r\n\r\nI converted the text has encoding error to ascii to utf8 converter. It converts successfully.\r\nmaybe requests package gets http response header with ascii encoding.\r\n\r\n**EDIT** I tried this code `req.encoding = 'utf-8'` but this code didn't work.\r\ncode:\r\n```\r\nheaders = {\r\n            'Accept-Encoding': 'gzip, deflate, br',\r\n            'Accept-Language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',\r\n            'Content-type': 'text/plain; charset=utf-8'\r\n        }\r\n\r\n        req = requests.get(link, headers=headers, allow_redirects=True)\r\n        req.encoding = 'utf-8'\r\nprint(req.headers['Content-Disposition']) # this code prints the text has encoding error\r\n```\r\n\r\n## Expected Result\r\n\ud575\uc2ec\uc815\ubcf4\ub97c \ub2f4\uc740 \ubc1c\ud45c \ud615\uc131\ud3c9\uac00 5\uc6d4 19\uc77c\r\n\r\n## Actual Result\r\n\r\n\u00ed\u0095\u00b5\u00ec\u008b\u00ac\u00ec\u00a0\u0095\u00eb\u00b3\u00b4\u00eb\u00a5\u00bc \u00eb\u008b\u00b4\u00ec\u009d\u0080 \u00eb\u00b0\u009c\u00ed\u0091\u009c \u00ed\u0098\u0095\u00ec\u0084\u00b1\u00ed\u008f\u0089\u00ea\u00b0\u0080 5\u00ec\u009b\u0094 19\u00ec\u009d\u00bc\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\nI am using python 3.7.3, requests latest version (v2.23.0)\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"101000af\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n\r\nthank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5462", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5462/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5462/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5462/events", "html_url": "https://github.com/psf/requests/issues/5462", "id": 620276105, "node_id": "MDU6SXNzdWU2MjAyNzYxMDU=", "number": 5462, "title": "Python Requests normalizes the URL", "user": {"login": "hopkinskong", "id": 2718385, "node_id": "MDQ6VXNlcjI3MTgzODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2718385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hopkinskong", "html_url": "https://github.com/hopkinskong", "followers_url": "https://api.github.com/users/hopkinskong/followers", "following_url": "https://api.github.com/users/hopkinskong/following{/other_user}", "gists_url": "https://api.github.com/users/hopkinskong/gists{/gist_id}", "starred_url": "https://api.github.com/users/hopkinskong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hopkinskong/subscriptions", "organizations_url": "https://api.github.com/users/hopkinskong/orgs", "repos_url": "https://api.github.com/users/hopkinskong/repos", "events_url": "https://api.github.com/users/hopkinskong/events{/privacy}", "received_events_url": "https://api.github.com/users/hopkinskong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-18T14:54:33Z", "updated_at": "2020-05-20T16:31:15Z", "closed_at": "2020-05-20T16:31:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When requesting a URL (get/post), Requests normalizes the URL.\r\nFor example:\r\n```\r\nr = requests.get(\"http://123.123.123.123/../../../../../../test\")\r\nprint(str(r.status_code))\r\n```\r\n\r\n## Expected Result\r\n\r\n```\r\nGET /../../../../../../test HTTP/1.1\r\nHost: 123.123.123.123\r\nConnection: close\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nUser-Agent: python-requests/2.22.0\r\n```\r\n\r\n## Actual Result\r\n\r\n```\r\nGET /test HTTP/1.1\r\nHost: 123.123.123.123\r\nConnection: close\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nUser-Agent: python-requests/2.22.0\r\n```\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nr = requests.get(\"http://123.123.123.123/../../../../../../test\")\r\nprint(str(r.status_code))\r\n```\r\n\r\n## System Information\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  }, \r\n  \"cryptography\": {\r\n    \"version\": \"2.8\"\r\n  }, \r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  }, \r\n  \"implementation\": {\r\n    \"name\": \"CPython\", \r\n    \"version\": \"2.7.17\"\r\n  }, \r\n  \"platform\": {\r\n    \"release\": \"5.3.0-51-generic\", \r\n    \"system\": \"Linux\"\r\n  }, \r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010104f\", \r\n    \"version\": \"17.5.0\"\r\n  }, \r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  }, \r\n  \"system_ssl\": {\r\n    \"version\": \"1010100f\"\r\n  }, \r\n  \"urllib3\": {\r\n    \"version\": \"1.25.6\"\r\n  }, \r\n  \"using_pyopenssl\": true\r\n}\r\n\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5460", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5460/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5460/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5460/events", "html_url": "https://github.com/psf/requests/issues/5460", "id": 619681679, "node_id": "MDU6SXNzdWU2MTk2ODE2Nzk=", "number": 5460, "title": "Make content-type be multi-part without being given files", "user": {"login": "dasyad00", "id": 19555626, "node_id": "MDQ6VXNlcjE5NTU1NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/19555626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dasyad00", "html_url": "https://github.com/dasyad00", "followers_url": "https://api.github.com/users/dasyad00/followers", "following_url": "https://api.github.com/users/dasyad00/following{/other_user}", "gists_url": "https://api.github.com/users/dasyad00/gists{/gist_id}", "starred_url": "https://api.github.com/users/dasyad00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dasyad00/subscriptions", "organizations_url": "https://api.github.com/users/dasyad00/orgs", "repos_url": "https://api.github.com/users/dasyad00/repos", "events_url": "https://api.github.com/users/dasyad00/events{/privacy}", "received_events_url": "https://api.github.com/users/dasyad00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-05-17T11:47:05Z", "updated_at": "2020-05-17T13:08:22Z", "closed_at": "2020-05-17T12:49:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, to post a multipart/form-data with boundaries, you either need to give a File or make the data File-like. This feature aims to allow uploading of data without uploading files.\r\n\r\nI am working on a fix with @Marti2203 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5458", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5458/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5458/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5458/events", "html_url": "https://github.com/psf/requests/issues/5458", "id": 617604293, "node_id": "MDU6SXNzdWU2MTc2MDQyOTM=", "number": 5458, "title": "All requests to www.scoutbook.com result in 404s", "user": {"login": "thatcomputerguy0101", "id": 46465633, "node_id": "MDQ6VXNlcjQ2NDY1NjMz", "avatar_url": "https://avatars0.githubusercontent.com/u/46465633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatcomputerguy0101", "html_url": "https://github.com/thatcomputerguy0101", "followers_url": "https://api.github.com/users/thatcomputerguy0101/followers", "following_url": "https://api.github.com/users/thatcomputerguy0101/following{/other_user}", "gists_url": "https://api.github.com/users/thatcomputerguy0101/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatcomputerguy0101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatcomputerguy0101/subscriptions", "organizations_url": "https://api.github.com/users/thatcomputerguy0101/orgs", "repos_url": "https://api.github.com/users/thatcomputerguy0101/repos", "events_url": "https://api.github.com/users/thatcomputerguy0101/events{/privacy}", "received_events_url": "https://api.github.com/users/thatcomputerguy0101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T16:53:08Z", "updated_at": "2020-05-13T18:02:44Z", "closed_at": "2020-05-13T18:02:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any requests to https://www.scoutbook.com and subdirectories result in 404 Not Found errors. Requests using the http library, the urllib library, curl, the Node.JS https library, and a web browser all work and return a 200 status code for the exact same URL.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nrequests.get(\"https://www.scoutbook.com/\") # returns a Response object with 404 status code\r\n\r\n```\r\n\r\n## Expected Result\r\n\r\nA 200 response with the body returned by the following code:\r\n\r\n```python\r\nimport urllib\r\n\r\nurllib.request.urlopen(\"https://www.scoutbook.com/\").read()\r\n```\r\n\r\n## Actual Result\r\n\r\nA 404 response with the following body:\r\n\r\n```html\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">  <html>  <head>  <title>Requested URL cannot be found</title>  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">  <style type=\"text/css\">  td { font-family: verdana, arial, sans-serif; }  td { font-size: 12px; }  table { margin-left: 50px; }  a.al:link {color: #0000ff; text-decoration: none;}  a.al:visited {color: #0000ff;text-decoration: none;}  a.al:hover {color: #0000ff;text-decoration: underline;}  p {line-height: 20px; margin-bottom: 15px;}  p.ec {color: red;}  p.lid {}    </style>    <script type=\"text/javascript\">    function timed_redirect(seconds, url)  {     document.getElementById('countdown').innerHTML = seconds;     if (seconds <= 0)        window.location = url;     else        setTimeout('timed_redirect(' + --seconds + ', \"' + url + '\")', 1000);  }  </script>        </head>    <body>  <table align=\"left\" width=\"50%\" cellpadding=\"0\" cellspacing=\"0\">  <tr>  <td align=\"left\">  <p>&nbsp;</p>  <h2>Requested URL cannot be found</h2>  <p>We are sorry, but the page you are looking for cannot be found. The page has either been removed, renamed or is temporarily unavailable.</p> <p class=\"ec\">404 Not Found</p><p class=\"lid\">Reference ID: f0106a6c-9538-11ea-af75-126f438b3e33</p>  <hr>  <p><a href=\"javascript:history.back(1)\">Back to previous page</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<a href=\"/\">Proceed to homepage</a></p>  </td>  </tr>  <tr>  <td>  <p>&nbsp;</p>        </td>  </tr>  </table>    </body>  </html> \r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```json\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.2\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.4.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"101000af\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\nPython 3.7.2, requests installed through pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5457", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5457/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5457/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5457/events", "html_url": "https://github.com/psf/requests/issues/5457", "id": 617592048, "node_id": "MDU6SXNzdWU2MTc1OTIwNDg=", "number": 5457, "title": "Possible bug or incorrect usage (on my end)", "user": {"login": "liquidoshin", "id": 12190639, "node_id": "MDQ6VXNlcjEyMTkwNjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/12190639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liquidoshin", "html_url": "https://github.com/liquidoshin", "followers_url": "https://api.github.com/users/liquidoshin/followers", "following_url": "https://api.github.com/users/liquidoshin/following{/other_user}", "gists_url": "https://api.github.com/users/liquidoshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/liquidoshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liquidoshin/subscriptions", "organizations_url": "https://api.github.com/users/liquidoshin/orgs", "repos_url": "https://api.github.com/users/liquidoshin/repos", "events_url": "https://api.github.com/users/liquidoshin/events{/privacy}", "received_events_url": "https://api.github.com/users/liquidoshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-13T16:34:19Z", "updated_at": "2020-06-15T14:56:34Z", "closed_at": "2020-06-15T14:56:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi so I'm using your requests module and everything was working fine when I was using it with python2. However, now that I'm on Mac OS Catalina and there's only python3 I've had to revise my code a little and now I'm getting some errors. So I have a little bit of code as follows:\r\nresponse = requests.get(resource,\r\n                                    headers={\r\n                                        \"Authorization\": \"Basic \" + base64.b64encode(\r\n                                            self.username + \":\" + self.passwd\r\n                                        ),\r\n                                        \"Accept\": datatype\r\n                                    },\r\n                                    proxies={\"https\": None,\r\n                                             \"http\": None})\r\n\r\nAnd when I run my script it gives me an error:\r\nFile \"/Users/dwalker/Documents/workspace/jamfapi/jamfapi_src/jamfapi/jss/JSSRestIface.py\", line 48, in jamfApiCall\r\n    self.username + \":\" + self.passwd\r\n  File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/base64.py\", line 58, in b64encode\r\n    encoded = binascii.b2a_base64(s, newline=False)\r\nTypeError: a bytes-like object is required, not 'str'\r\n\r\nNow I had issues similar to this in another project when we converted from py2 to py3 and we resolved it by running .decode(\"utf-8\") with the output object we were getting back from a command being run. However, I'm not sure if this is the same issue. Any ideas on what I'm doing wrong here or how I'm using requests incorrectly?\r\n\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5456", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5456/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5456/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5456/events", "html_url": "https://github.com/psf/requests/issues/5456", "id": 617424468, "node_id": "MDU6SXNzdWU2MTc0MjQ0Njg=", "number": 5456, "title": "ValueError: Timeout value connect was Timeout", "user": {"login": "sithara", "id": 3234964, "node_id": "MDQ6VXNlcjMyMzQ5NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3234964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sithara", "html_url": "https://github.com/sithara", "followers_url": "https://api.github.com/users/sithara/followers", "following_url": "https://api.github.com/users/sithara/following{/other_user}", "gists_url": "https://api.github.com/users/sithara/gists{/gist_id}", "starred_url": "https://api.github.com/users/sithara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sithara/subscriptions", "organizations_url": "https://api.github.com/users/sithara/orgs", "repos_url": "https://api.github.com/users/sithara/repos", "events_url": "https://api.github.com/users/sithara/events{/privacy}", "received_events_url": "https://api.github.com/users/sithara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T12:54:47Z", "updated_at": "2020-05-14T13:34:05Z", "closed_at": "2020-05-14T13:34:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "We  have been using docker-compose for running multiple containers. All of a sudden started receiving the below error. There were no updates performed on the server box:\r\n\r\n```\r\n[app]# docker-compose ps\r\nTraceback (most recent call last):\r\n  File \"/bin/docker-compose\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/lib/python2.7/site-packages/compose/cli/main.py\", line 68, in main\r\n    command()\r\n  File \"/usr/lib/python2.7/site-packages/compose/cli/main.py\", line 118, in perf                                                                             orm_command\r\n    handler(command, command_options)\r\n  File \"/usr/lib/python2.7/site-packages/compose/cli/main.py\", line 601, in ps\r\n    self.project.containers(service_names=options['SERVICE'], stopped=True) +\r\n  File \"/usr/lib/python2.7/site-packages/compose/project.py\", line 498, in conta                                                                             iners\r\n    containers = self._labeled_containers(stopped, one_off)\r\n  File \"/usr/lib/python2.7/site-packages/compose/project.py\", line 489, in _labe                                                                             led_containers\r\n    filters={'label': self.labels(one_off=one_off)})])\r\n  File \"/usr/lib/python2.7/site-packages/docker/api/container.py\", line 189, in                                                                              containers\r\n    res = self._result(self._get(u, params=params), True)\r\n  File \"/usr/lib/python2.7/site-packages/docker/utils/decorators.py\", line 47, i                                                                             n inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/docker/api/client.py\", line 183, in _ge                                                                             t\r\n    return self.get(url, **self._set_request_timeout(kwargs))\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 498, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 486, in req                                                                             uest\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 598, in sen                                                                             d\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/adapters.py\", line 370, in sen                                                                             d\r\n    timeout=timeout\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpoo                                                                             l.py\", line 582, in urlopen\r\n    timeout_obj = self._get_timeout(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpoo                                                                             l.py\", line 309, in _get_timeout\r\n    return Timeout.from_float(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/timeout.                                                                             py\", line 154, in from_float\r\n    return Timeout(read=timeout, connect=timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/timeout.                                                                             py\", line 97, in __init__\r\n    self._connect = self._validate_timeout(connect, 'connect')\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/timeout.                                                                             py\", line 127, in _validate_timeout\r\n    \"int or float.\" % (name, value))\r\nValueError: Timeout value connect was Timeout(connect=60, read=60, total=None),                                                                              but it must be an int or float.\r\n```\r\nHere's my `pip list`\r\n\r\n```\r\npip list\r\nDEPRECATION: The default format will switch to columns in the future. You can use --format=(legacy|columns) (or define a format=(legacy|columns) in your pip.conf under the [list] section) to disable this warning.\r\nawscli (1.11.92)\r\nbackports.ssl-match-hostname (3.5.0.1)\r\nbotocore (1.5.55)\r\ncached-property (1.3.0)\r\ncffi (1.6.0)\r\nchardet (2.2.1)\r\ncolorama (0.3.7)\r\nconfigobj (4.7.2)\r\nconfigshell-fb (1.1.25)\r\ncryptography (1.7.2)\r\ncustodia (0.3.1)\r\ndecorator (3.4.0)\r\ndnspython (1.12.0)\r\ndocker (2.3.0)\r\ndocker-compose (1.13.0)\r\ndocker-pycreds (0.2.1)\r\ndockerpty (0.4.1)\r\ndocopt (0.6.2)\r\ndocutils (0.13.1)\r\nenum34 (1.0.4)\r\nethtool (0.8)\r\nfunctools32 (3.2.3-2)\r\nfutures (3.1.1)\r\ngssapi (1.2.0)\r\nidna (2.4)\r\niniparse (0.4)\r\niotop (0.6)\r\nipaclient (4.6.5)\r\nipaddress (1.0.16)\r\nipalib (4.6.5)\r\nipaplatform (4.6.5)\r\nipapython (4.6.5)\r\nIPy (0.75)\r\njavapackages (1.0.0)\r\njmespath (0.9.2)\r\njsonschema (2.6.0)\r\njwcrypto (0.4.2)\r\nkitchen (1.1.1)\r\nkmod (0.1)\r\nlangtable (0.0.31)\r\nlxml (3.2.1)\r\nMagic-file-extensions (0.2)\r\nMySQL-python (1.2.5)\r\nnetaddr (0.7.5)\r\nnetifaces (0.10.4)\r\nnose (1.3.7)\r\nnumpy (1.7.1)\r\npcp (4.1)\r\nperf (0.1)\r\npip (9.0.1)\r\nply (3.4)\r\npolicycoreutils-default-encoding (0.1)\r\npsycopg2 (2.5.1)\r\npyasn1 (0.1.9)\r\npyasn1-modules (0.0.8)\r\npycparser (2.14)\r\npycurl (7.19.0)\r\npygobject (3.22.0)\r\npygpgme (0.3)\r\npyinotify (0.9.4)\r\npyliblzma (0.5.3)\r\npyOpenSSL (0.13.1)\r\npyparsing (1.5.6)\r\npython-augeas (0.5.0)\r\npython-dateutil (2.6.0)\r\npython-dmidecode (3.10.13)\r\npython-ldap (2.4.15)\r\npython-linux-procfs (0.4.9)\r\npython-nss (0.16.0)\r\npython-yubico (1.2.3)\r\npyudev (0.15)\r\npyusb (1.0.0b1)\r\npyxattr (0.5.1)\r\nPyYAML (3.12)\r\nqrcode (5.0.1)\r\nrequests (2.11.1)\r\nrsa (3.4.2)\r\nrtslib-fb (2.1.69)\r\ns3transfer (0.1.10)\r\nschedutils (0.4)\r\nseobject (0.1)\r\nsepolicy (1.1)\r\nsetuptools (0.9.8)\r\nsix (1.9.0)\r\nslip (0.4.0)\r\nslip.dbus (0.4.0)\r\nSSSDConfig (1.16.4)\r\nsubscription-manager (1.24.13)\r\nsyspurpose (1.24.13)\r\ntargetcli-fb (2.1.fb49)\r\ntexttable (0.8.8)\r\nurlgrabber (3.10)\r\nurllib3 (1.10.2)\r\nurwid (1.1.1)\r\nvirtualenv (15.1.0)\r\nwebsocket-client (0.40.0)\r\nwheel (0.29.0)\r\nyum-langpacks (0.4.2)\r\nyum-metadata-parser (1.1.4)\r\nYou are using pip version 9.0.1, however version 20.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```\r\nKindly request help on fixing this ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5455", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5455/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5455/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5455/events", "html_url": "https://github.com/psf/requests/issues/5455", "id": 617307432, "node_id": "MDU6SXNzdWU2MTczMDc0MzI=", "number": 5455, "title": "please support HTTP/2 and  HTTP/3", "user": {"login": "hktalent", "id": 18223385, "node_id": "MDQ6VXNlcjE4MjIzMzg1", "avatar_url": "https://avatars2.githubusercontent.com/u/18223385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hktalent", "html_url": "https://github.com/hktalent", "followers_url": "https://api.github.com/users/hktalent/followers", "following_url": "https://api.github.com/users/hktalent/following{/other_user}", "gists_url": "https://api.github.com/users/hktalent/gists{/gist_id}", "starred_url": "https://api.github.com/users/hktalent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hktalent/subscriptions", "organizations_url": "https://api.github.com/users/hktalent/orgs", "repos_url": "https://api.github.com/users/hktalent/repos", "events_url": "https://api.github.com/users/hktalent/events{/privacy}", "received_events_url": "https://api.github.com/users/hktalent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T09:49:04Z", "updated_at": "2020-05-13T18:05:43Z", "closed_at": "2020-05-13T18:05:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "please support HTTP/2 and  HTTP/3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5450", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5450/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5450/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5450/events", "html_url": "https://github.com/psf/requests/issues/5450", "id": 615249244, "node_id": "MDU6SXNzdWU2MTUyNDkyNDQ=", "number": 5450, "title": "timeout 2x as long as parameter", "user": {"login": "minusf", "id": 3632883, "node_id": "MDQ6VXNlcjM2MzI4ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3632883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minusf", "html_url": "https://github.com/minusf", "followers_url": "https://api.github.com/users/minusf/followers", "following_url": "https://api.github.com/users/minusf/following{/other_user}", "gists_url": "https://api.github.com/users/minusf/gists{/gist_id}", "starred_url": "https://api.github.com/users/minusf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minusf/subscriptions", "organizations_url": "https://api.github.com/users/minusf/orgs", "repos_url": "https://api.github.com/users/minusf/repos", "events_url": "https://api.github.com/users/minusf/events{/privacy}", "received_events_url": "https://api.github.com/users/minusf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-09T19:58:06Z", "updated_at": "2020-05-10T15:25:33Z", "closed_at": "2020-05-10T14:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that when I set a `timeout`, the exception is raised after `2 * timeout` seconds.\r\n\r\n## Expected Result\r\n\r\nlog message shows up after `timout` seconds.\r\n\r\n## Actual Result\r\n\r\n```\r\n2020-05-09 21:53:10,148 DEBUG: before get\r\n2020-05-09 21:53:30,167 ERROR: timeout\r\n```\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\nlogger.debug(\"before get\")\r\ntry:\r\n    resp = requests.get(some_url, headers=some_headers, timeout=10)\r\nexcept requests.Timeout:\r\n    logger.error(\"timeout\")\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.7\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.4.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5448", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5448/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5448/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5448/events", "html_url": "https://github.com/psf/requests/issues/5448", "id": 613383513, "node_id": "MDU6SXNzdWU2MTMzODM1MTM=", "number": 5448, "title": "urllib3.exceptions.ProxySchemeUnknown: Not supported proxy scheme None", "user": {"login": "ShunTono", "id": 64898062, "node_id": "MDQ6VXNlcjY0ODk4MDYy", "avatar_url": "https://avatars1.githubusercontent.com/u/64898062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShunTono", "html_url": "https://github.com/ShunTono", "followers_url": "https://api.github.com/users/ShunTono/followers", "following_url": "https://api.github.com/users/ShunTono/following{/other_user}", "gists_url": "https://api.github.com/users/ShunTono/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShunTono/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShunTono/subscriptions", "organizations_url": "https://api.github.com/users/ShunTono/orgs", "repos_url": "https://api.github.com/users/ShunTono/repos", "events_url": "https://api.github.com/users/ShunTono/events{/privacy}", "received_events_url": "https://api.github.com/users/ShunTono/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-06T14:52:45Z", "updated_at": "2020-05-07T13:00:32Z", "closed_at": "2020-05-06T22:41:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5447", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5447/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5447/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5447/events", "html_url": "https://github.com/psf/requests/issues/5447", "id": 612483449, "node_id": "MDU6SXNzdWU2MTI0ODM0NDk=", "number": 5447, "title": "How to set an effective useragent for Session?", "user": {"login": "raisoon", "id": 58616477, "node_id": "MDQ6VXNlcjU4NjE2NDc3", "avatar_url": "https://avatars1.githubusercontent.com/u/58616477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raisoon", "html_url": "https://github.com/raisoon", "followers_url": "https://api.github.com/users/raisoon/followers", "following_url": "https://api.github.com/users/raisoon/following{/other_user}", "gists_url": "https://api.github.com/users/raisoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/raisoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raisoon/subscriptions", "organizations_url": "https://api.github.com/users/raisoon/orgs", "repos_url": "https://api.github.com/users/raisoon/repos", "events_url": "https://api.github.com/users/raisoon/events{/privacy}", "received_events_url": "https://api.github.com/users/raisoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-05T10:02:24Z", "updated_at": "2020-06-17T20:21:03Z", "closed_at": "2020-06-17T20:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have set a useragent for the requests session:\r\n\r\nsession = requests.session()\r\nheaders = {}\r\nheaders['user-agent'] = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36'\r\nresp = session.get('http://www.gov.cn',headers=headers)\r\nprint(session.headers)\r\n\r\nbut in the result, the user-agent is 'python-requests/2.22.0'.\r\n{'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}\r\n\r\nhow can i set an effective useragent?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5446", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5446/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5446/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5446/events", "html_url": "https://github.com/psf/requests/issues/5446", "id": 612397162, "node_id": "MDU6SXNzdWU2MTIzOTcxNjI=", "number": 5446, "title": "Modified file content after upload", "user": {"login": "ssy-lehmann", "id": 54662729, "node_id": "MDQ6VXNlcjU0NjYyNzI5", "avatar_url": "https://avatars2.githubusercontent.com/u/54662729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssy-lehmann", "html_url": "https://github.com/ssy-lehmann", "followers_url": "https://api.github.com/users/ssy-lehmann/followers", "following_url": "https://api.github.com/users/ssy-lehmann/following{/other_user}", "gists_url": "https://api.github.com/users/ssy-lehmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssy-lehmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssy-lehmann/subscriptions", "organizations_url": "https://api.github.com/users/ssy-lehmann/orgs", "repos_url": "https://api.github.com/users/ssy-lehmann/repos", "events_url": "https://api.github.com/users/ssy-lehmann/events{/privacy}", "received_events_url": "https://api.github.com/users/ssy-lehmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-05T07:30:16Z", "updated_at": "2020-05-08T04:36:36Z", "closed_at": "2020-05-08T04:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Also I have been looking into documentation I didn't found the problem/explanation.\r\n\r\n## Szenario:\r\n\r\n- The server does use WebDav and I can use a PUT request for uploading\r\n- In addition it must be digest authentication\r\n- it works with curl using --digest and --user \"xxxxxxx:yyyyyy\"\r\n\r\nThe difference between curl and the Python script after here is\r\nthat the script seems to modify the content of the file while uploading.\r\nIf I look at http://internal-demo-url/uploads/demo.properties the\r\ncontent looks like following:\r\n\r\n## The uploaded file\r\n\r\n```\r\n--6cb2e8363c8d7f9191d2068b62828985\r\nContent-Disposition: form-data; name=\"file\"; filename=\"demo.properties\"\r\nContent-Type: text/plain\r\n\r\ntitle=demo\r\ncontext=upload\r\nmessage=hello world 3!\r\n\r\n--6cb2e8363c8d7f9191d2068b62828985--\r\n````   \r\n\r\nOf course I just would like to have the three lines in the middle.\r\n**What did I wrong?**\r\n\r\n\r\n## The Python code (upload.py)\r\n\r\n```python\r\nfrom requests import put\r\nfrom requests.auth import HTTPDigestAuth\r\n\r\nurl = 'http://internal-demo-url/uploads'\r\nwith open('demo.properties', 'rb') as handle:\r\n    headers = {}\r\n    files = {'file':('demo.properties', handle, 'text/plain')}\r\n    response = put(url, auth=HTTPDigestAuth('xxxxxx', 'yyyyyy'),\r\n                        files=files, headers=headers)\r\n    print(response.status_code)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5445", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5445/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5445/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5445/events", "html_url": "https://github.com/psf/requests/issues/5445", "id": 611401340, "node_id": "MDU6SXNzdWU2MTE0MDEzNDA=", "number": 5445, "title": "utf-8 page wrongly detected as ISO-8859-1", "user": {"login": "klartext", "id": 3165583, "node_id": "MDQ6VXNlcjMxNjU1ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3165583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klartext", "html_url": "https://github.com/klartext", "followers_url": "https://api.github.com/users/klartext/followers", "following_url": "https://api.github.com/users/klartext/following{/other_user}", "gists_url": "https://api.github.com/users/klartext/gists{/gist_id}", "starred_url": "https://api.github.com/users/klartext/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klartext/subscriptions", "organizations_url": "https://api.github.com/users/klartext/orgs", "repos_url": "https://api.github.com/users/klartext/repos", "events_url": "https://api.github.com/users/klartext/events{/privacy}", "received_events_url": "https://api.github.com/users/klartext/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-03T12:21:41Z", "updated_at": "2020-07-21T06:06:03Z", "closed_at": "2020-07-21T06:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "A webpage has been detcected as being ISO-8859-1 encoded, even though it is encoded in utf-8.\r\n\r\n## Expected Result\r\n\r\nCorrect classification as utf-8.\r\n\r\n## Actual Result\r\n\r\nutf-8 page detected as ISO-8859-1.\r\n\r\n\r\n## Reproduction Steps\r\n\r\n```\r\n#!/usr/bin/python\r\n\r\nimport requests\r\n\r\n# example url\r\nurl = \"https://digitalezivilgesellschaft.org/\"\r\n\r\n# get the page and print the supposed encoding\r\nresponse = requests.get(url)\r\nprint(response.encoding)\r\n```\r\nCompare that with\r\n\r\n```\r\nrm -f index.html; wget -nv https://digitalezivilgesellschaft.org/  2>/dev/null&& file index.html  | grep index | tail -1\r\n```\r\n\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\nexplore_requests_bug$ python -m requests.help\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.2\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.6.8-arch1-1\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010107f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n\r\n\r\nThis concrete problem seems to be related to the more general issue\r\nhttps://github.com/psf/requests/issues/2086", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5444", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5444/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5444/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5444/events", "html_url": "https://github.com/psf/requests/issues/5444", "id": 610673102, "node_id": "MDU6SXNzdWU2MTA2NzMxMDI=", "number": 5444, "title": "requests.get() with both a query string in URL and params defined does not adhere to HTML5 specifications for form interaction", "user": {"login": "snorpdorp", "id": 64635888, "node_id": "MDQ6VXNlcjY0NjM1ODg4", "avatar_url": "https://avatars3.githubusercontent.com/u/64635888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snorpdorp", "html_url": "https://github.com/snorpdorp", "followers_url": "https://api.github.com/users/snorpdorp/followers", "following_url": "https://api.github.com/users/snorpdorp/following{/other_user}", "gists_url": "https://api.github.com/users/snorpdorp/gists{/gist_id}", "starred_url": "https://api.github.com/users/snorpdorp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snorpdorp/subscriptions", "organizations_url": "https://api.github.com/users/snorpdorp/orgs", "repos_url": "https://api.github.com/users/snorpdorp/repos", "events_url": "https://api.github.com/users/snorpdorp/events{/privacy}", "received_events_url": "https://api.github.com/users/snorpdorp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-01T09:57:47Z", "updated_at": "2020-05-08T14:49:17Z", "closed_at": "2020-05-08T14:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "[As per HTML5 specifications section \"4.10.22.3 Form submission algorithm\"](https://www.w3.org/TR/2011/WD-html5-20110525/association-of-controls-and-forms.html#form-submission-algorithm) , when a form with an action which contains a query string, and has a method of GET is executed, the query string in the action should be completely ignored and overwritten by the query string generated by the form.\r\n\r\nHowever, in requests, when a request is formed with an URL including a query string, as well as a params parameter, the 2 query strings are merged, with both being used.\r\n\r\n(I have no idea why any website would ever produce such a form, but this is explicitly mentioned in the specifications.)\r\n\r\nThere may be some debate over whether this is to be intended behavior or not: there is no strict implication that a GET with param data is meant specifically to emulate behavior of an HTML form, although that would seem to be the most common case to me. Some HTTP APIs may have some endpoint which includes a query string and also request additional data to be sent as part of the query string.  However, [OpenAPI](https://swagger.io/docs/specification/describing-parameters/) does not mention anything about what to do if an endpoint itself contains a query string, only stating to \"Query parameters are the most common type of parameters. They appear at the end of the request URL after a question mark (?), with different name=value pairs separated by ampersands (&). Query parameters can be required and optional.\"\r\n\r\nThis also makes it sound like explicitly mentioned \"params\" parameter should refer to everything after the question-mark delimiter, but I do not think they meant to be so specific as to talk about this strange edge-case.\r\n\r\nSo it seems that regardless of RESTful APIs, or sending GET forms, the parameters sent to the server should be the ones explicitly mentioned in params, and the parameters given to requests in the url should be ignored.\r\n\r\n```\r\nimport requests\r\nrequest = requests.Request(method=\"GET\", url=\"https://somewebsite.com?pointless+key=pointless+value\", params={\"actual key\": \"actual value\"})\r\nsession = requests.Session()\r\nprepared_request = session.prepare_request(request)\r\nprint(request.url)\r\n```\r\n\r\n## Expected Result\r\n```\r\nhttps://somewebsite.com/?actual+key=actual+value\r\n```\r\n\r\n## Actual Result\r\n```\r\nhttps://somewebsite.com/?pointless+key=pointless+value&actual+key=actual+value\r\n```\r\n\r\n## Reproduction Steps\r\n```\r\nimport requests\r\nrequest = requests.Request(method=\"GET\", url=\"https://somewebsite.com?pointless+key=pointless+value\", params={\"actual key\": \"actual value\"})\r\nsession = requests.Session()\r\nprepared_request = session.prepare_request(request)\r\nprint(request.url)\r\n```\r\n\r\n## System Information\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.4.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.21.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"20000000\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.24.1\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5442", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5442/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5442/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5442/events", "html_url": "https://github.com/psf/requests/issues/5442", "id": 608105258, "node_id": "MDU6SXNzdWU2MDgxMDUyNTg=", "number": 5442, "title": "How to access token based API using requests in python?", "user": {"login": "vvksahoo", "id": 56999733, "node_id": "MDQ6VXNlcjU2OTk5NzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/56999733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvksahoo", "html_url": "https://github.com/vvksahoo", "followers_url": "https://api.github.com/users/vvksahoo/followers", "following_url": "https://api.github.com/users/vvksahoo/following{/other_user}", "gists_url": "https://api.github.com/users/vvksahoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvksahoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvksahoo/subscriptions", "organizations_url": "https://api.github.com/users/vvksahoo/orgs", "repos_url": "https://api.github.com/users/vvksahoo/repos", "events_url": "https://api.github.com/users/vvksahoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vvksahoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-28T07:55:30Z", "updated_at": "2020-04-30T15:53:00Z", "closed_at": "2020-04-30T15:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to call one API from another API. So external API is having jwt token based authentication .\r\n```\r\nimport requests\r\nresponse = requests.get('http://host:port/api/users', auth= (\"username\",\"password\"))\r\n````\r\nI am getting error :\r\n```\r\n{\"error\":\"authentication failed: jwt parse error: token contains an invalid number of segments\",\"code\":16,\"message\":\"authentication failed: jwt parse error: token contains an invalid number of segments\",\"details\":[]}\r\n```\r\nOr , First i need to call login API ,get the token and while calling another API apply that token in header.\r\nPlease suggest here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5439", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5439/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5439/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5439/events", "html_url": "https://github.com/psf/requests/issues/5439", "id": 606952999, "node_id": "MDU6SXNzdWU2MDY5NTI5OTk=", "number": 5439, "title": "should the shebang be removed?", "user": {"login": "sandy-lcq", "id": 39258624, "node_id": "MDQ6VXNlcjM5MjU4NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/39258624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandy-lcq", "html_url": "https://github.com/sandy-lcq", "followers_url": "https://api.github.com/users/sandy-lcq/followers", "following_url": "https://api.github.com/users/sandy-lcq/following{/other_user}", "gists_url": "https://api.github.com/users/sandy-lcq/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandy-lcq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandy-lcq/subscriptions", "organizations_url": "https://api.github.com/users/sandy-lcq/orgs", "repos_url": "https://api.github.com/users/sandy-lcq/repos", "events_url": "https://api.github.com/users/sandy-lcq/events{/privacy}", "received_events_url": "https://api.github.com/users/sandy-lcq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T08:20:31Z", "updated_at": "2020-04-26T08:32:21Z", "closed_at": "2020-04-26T08:32:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "certs.py have shebang \"#!/usr/bin/env python\",  on some host,  like fedora31 docker image, \r\nonly python3 installed,  and no python link to python3, in this case,  maybe error like \"python: command not found\" will repored when run certs.py .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5438", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5438/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5438/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5438/events", "html_url": "https://github.com/psf/requests/issues/5438", "id": 606939270, "node_id": "MDU6SXNzdWU2MDY5MzkyNzA=", "number": 5438, "title": "Unexpected Prepared Request behavior", "user": {"login": "hairygeek", "id": 36673811, "node_id": "MDQ6VXNlcjM2NjczODEx", "avatar_url": "https://avatars0.githubusercontent.com/u/36673811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hairygeek", "html_url": "https://github.com/hairygeek", "followers_url": "https://api.github.com/users/hairygeek/followers", "following_url": "https://api.github.com/users/hairygeek/following{/other_user}", "gists_url": "https://api.github.com/users/hairygeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hairygeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hairygeek/subscriptions", "organizations_url": "https://api.github.com/users/hairygeek/orgs", "repos_url": "https://api.github.com/users/hairygeek/repos", "events_url": "https://api.github.com/users/hairygeek/events{/privacy}", "received_events_url": "https://api.github.com/users/hairygeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-26T06:59:29Z", "updated_at": "2020-05-08T14:55:04Z", "closed_at": "2020-05-08T14:55:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "`requests.Session.send` raises random error if you change `headers` in Prepared Request and send a `POST` request with `json` parameter.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests as rq\r\ns = rq.Session()\r\nr = rq.Request('POST', 'https://google.com', json={'foo':'bar'})\r\np = r.prepare()\r\np.headers = {}\r\ns.send(p)\r\n```\r\n**Error:**\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/home/hairygeek/.local/share/virtualenvs/slink-9m8Vdza8/lib/python3.8/site-packages/requests/sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/hairygeek/.local/share/virtualenvs/slink-9m8Vdza8/lib/python3.8/site-packages/requests/adapters.py\", line 470, in send\r\n    low_conn.send(hex(len(i))[2:].encode('utf-8'))\r\nTypeError: object of type 'int' has no len()\r\n```\r\nHowever this works:\r\n```python\r\nr = rq.Request('POST', 'https://google.com')\r\np = r.prepare()\r\np.headers = {}\r\ns.send(p)\r\n<Response [405]>\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.2\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.5.10-arch1-1\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010105f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.9\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5435", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5435/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5435/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5435/events", "html_url": "https://github.com/psf/requests/issues/5435", "id": 605677935, "node_id": "MDU6SXNzdWU2MDU2Nzc5MzU=", "number": 5435, "title": "QUES: Default port for Dockerfile", "user": {"login": "joehoeller", "id": 5199900, "node_id": "MDQ6VXNlcjUxOTk5MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5199900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joehoeller", "html_url": "https://github.com/joehoeller", "followers_url": "https://api.github.com/users/joehoeller/followers", "following_url": "https://api.github.com/users/joehoeller/following{/other_user}", "gists_url": "https://api.github.com/users/joehoeller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joehoeller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joehoeller/subscriptions", "organizations_url": "https://api.github.com/users/joehoeller/orgs", "repos_url": "https://api.github.com/users/joehoeller/repos", "events_url": "https://api.github.com/users/joehoeller/events{/privacy}", "received_events_url": "https://api.github.com/users/joehoeller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-23T16:33:04Z", "updated_at": "2020-04-30T15:57:33Z", "closed_at": "2020-04-30T15:57:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "What port do I need to map to in Dockerfile so requests can make a request out?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5433", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5433/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5433/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5433/events", "html_url": "https://github.com/psf/requests/issues/5433", "id": 604190015, "node_id": "MDU6SXNzdWU2MDQxOTAwMTU=", "number": 5433, "title": "Requests library can hang indefinitely on windows, even if a timeout is set", "user": {"login": "earonesty", "id": 50769, "node_id": "MDQ6VXNlcjUwNzY5", "avatar_url": "https://avatars3.githubusercontent.com/u/50769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/earonesty", "html_url": "https://github.com/earonesty", "followers_url": "https://api.github.com/users/earonesty/followers", "following_url": "https://api.github.com/users/earonesty/following{/other_user}", "gists_url": "https://api.github.com/users/earonesty/gists{/gist_id}", "starred_url": "https://api.github.com/users/earonesty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/earonesty/subscriptions", "organizations_url": "https://api.github.com/users/earonesty/orgs", "repos_url": "https://api.github.com/users/earonesty/repos", "events_url": "https://api.github.com/users/earonesty/events{/privacy}", "received_events_url": "https://api.github.com/users/earonesty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T18:23:32Z", "updated_at": "2020-04-22T11:35:30Z", "closed_at": "2020-04-22T01:55:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n\r\nAssume you have a website that listens for and accepts connections, but never responds.\r\n\r\n`requests.get('https://sitethatneverresponds.com', timeout=1)`\r\n\r\nI expect this should *always* raise a timeout error.\r\n\r\nInstead, if you put Windows into \"sleep\" mode during an openssl handshake, then wake it up a few minute later, socket events are silently dropped and the socket hangs forever.\r\n\r\n## Reproduction Steps\r\n\r\nOn a laptop run do this a bunch of times:\r\n\r\n`requests.get('https://sitethatneverresponds.com', timeout=1)`\r\n\r\nThen close the laptop lid, and lift it up 5 minutes later (or whatever the tcp discard window is).  The get request never times out, and never returns.    If someone knows a better way of making a socket \"disappear\" and not time out, let me know.\r\n\r\nIt's possible to get a call stack by turning on python's tracing system and killing the process:\r\n\r\n## Call stack of hung thread:\r\n\r\n```\r\nThread 0x000070000823a000 (most recent call first):\r\n  File \"site-packages/OpenSSL/SSL.py\", line 1813 in recv_into\r\n  File \"site-packages/urllib3/contrib/pyopenssl.py\", line 313 in recv_into\r\n  File \"socket.py\", line 586 in readinto\r\n  File \"http/client.py\", line 258 in _read_status\r\n  File \"http/client.py\", line 297 in begin\r\n  File \"http/client.py\", line 1331 in getresponse\r\n  File \"site-packages/urllib3/connectionpool.py\", line 421 in _make_request\r\n  File \"site-packages/urllib3/connectionpool.py\", line 677 in urlopen\r\n  File \"site-packages/requests/adapters.py\", line 449 in send\r\n  File \"site-packages/requests/sessions.py\", line 643 in send\r\n```\r\n\r\n## Related Issue with pyopenssl:\r\n\r\npyopnessl, by not doing it themselves, has essentially decided that the caller must handle this by putting the socket into non-blocking mode, and calling select in a loop:\r\n\r\nSee: https://github.com/pyca/pyopenssl/issues/168 for potential solutions.\r\n\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.8\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"10\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010104f\",\r\n    \"version\": \"19.1.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1000211f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5432", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5432/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5432/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5432/events", "html_url": "https://github.com/psf/requests/issues/5432", "id": 603610585, "node_id": "MDU6SXNzdWU2MDM2MTA1ODU=", "number": 5432, "title": "Timeout exception not being raised", "user": {"login": "alexbode", "id": 25521899, "node_id": "MDQ6VXNlcjI1NTIxODk5", "avatar_url": "https://avatars3.githubusercontent.com/u/25521899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbode", "html_url": "https://github.com/alexbode", "followers_url": "https://api.github.com/users/alexbode/followers", "following_url": "https://api.github.com/users/alexbode/following{/other_user}", "gists_url": "https://api.github.com/users/alexbode/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbode/subscriptions", "organizations_url": "https://api.github.com/users/alexbode/orgs", "repos_url": "https://api.github.com/users/alexbode/repos", "events_url": "https://api.github.com/users/alexbode/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T00:01:17Z", "updated_at": "2020-04-21T01:32:12Z", "closed_at": "2020-04-21T01:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am testing a backend api and expect an exception to be raised when the request takes longer than specified timeout. I am running a flask app behind nginx behind an aws elb. The app is running in a private subnet and the elb is in the public subnet. Don't know if this is an issue related to the backend architecture or a requests bug. When I go to the url in a browser flask returns the json response immediately. Interestingly, using the requests library, the response is returned at a time about double the specified timeout (see screenshots). \r\n\r\n## Expected Result\r\n\r\nRaised exception\r\n\r\n## Actual Result\r\n\r\nReturns response after specified (2 * timeout)\r\n\r\n## Reproduction Steps\r\n<img width=\"510\" alt=\"image\" src=\"https://user-images.githubusercontent.com/25521899/79810594-3fc49600-8328-11ea-96d4-c067679433a4.png\">\r\n<img width=\"497\" alt=\"image\" src=\"https://user-images.githubusercontent.com/25521899/79810605-45ba7700-8328-11ea-9fb5-fbcc32a12c52.png\">\r\n\r\n\r\n```python\r\nimport time\r\nstart = time.time()\r\nprint(requests.get(\"https://******.com/test\", timeout=2).json())\r\nprint(time.time() - start)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.4\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.4.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1000213f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.6\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\nPython 3.7.4\r\nrequests==2.22.0\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5429", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5429/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5429/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5429/events", "html_url": "https://github.com/psf/requests/issues/5429", "id": 602573158, "node_id": "MDU6SXNzdWU2MDI1NzMxNTg=", "number": 5429, "title": "Not able to import requests ", "user": {"login": "DutchviewSumit", "id": 56107942, "node_id": "MDQ6VXNlcjU2MTA3OTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/56107942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchviewSumit", "html_url": "https://github.com/DutchviewSumit", "followers_url": "https://api.github.com/users/DutchviewSumit/followers", "following_url": "https://api.github.com/users/DutchviewSumit/following{/other_user}", "gists_url": "https://api.github.com/users/DutchviewSumit/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchviewSumit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchviewSumit/subscriptions", "organizations_url": "https://api.github.com/users/DutchviewSumit/orgs", "repos_url": "https://api.github.com/users/DutchviewSumit/repos", "events_url": "https://api.github.com/users/DutchviewSumit/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchviewSumit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-18T23:15:23Z", "updated_at": "2020-04-30T15:57:57Z", "closed_at": "2020-04-30T15:57:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I am trying to install requests it is showing requirement already satisfied but If I am trying to import then it is throwing error. Traceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'requests'.\r\n I am running the command pip3 list then it is showing requests   2.23.0. but not able to import.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5428", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5428/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5428/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5428/events", "html_url": "https://github.com/psf/requests/issues/5428", "id": 602436746, "node_id": "MDU6SXNzdWU2MDI0MzY3NDY=", "number": 5428, "title": "Received response with content-encoding: gzip, but failed to decode it.", "user": {"login": "petasis", "id": 1636393, "node_id": "MDQ6VXNlcjE2MzYzOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1636393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petasis", "html_url": "https://github.com/petasis", "followers_url": "https://api.github.com/users/petasis/followers", "following_url": "https://api.github.com/users/petasis/following{/other_user}", "gists_url": "https://api.github.com/users/petasis/gists{/gist_id}", "starred_url": "https://api.github.com/users/petasis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petasis/subscriptions", "organizations_url": "https://api.github.com/users/petasis/orgs", "repos_url": "https://api.github.com/users/petasis/repos", "events_url": "https://api.github.com/users/petasis/events{/privacy}", "received_events_url": "https://api.github.com/users/petasis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-18T11:19:28Z", "updated_at": "2020-05-03T12:21:31Z", "closed_at": "2020-04-30T15:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get an error while trying to download from https://www.huffingtonpost.gr/feeds/index.xml.\r\n\r\n## Expected Result\r\n\r\nTo download the data.\r\n\r\n## Actual Result\r\n\r\nI get an exception.\r\n('Received response with content-encoding: gzip, but failed to decode it.', error('Error -3 while decompressing data: incorrect header check'))\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\nrequests.get('https://www.huffingtonpost.gr/feeds/index.xml', timeout=5.0, allow_redirects=True)\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.6.1\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.6\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.5.15-200.fc31.x86_64\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010104f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.22.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010104f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.7\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5427", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5427/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5427/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5427/events", "html_url": "https://github.com/psf/requests/issues/5427", "id": 602242935, "node_id": "MDU6SXNzdWU2MDIyNDI5MzU=", "number": 5427, "title": "Cannot download files larger than 124MB", "user": {"login": "poriazis", "id": 61763378, "node_id": "MDQ6VXNlcjYxNzYzMzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/61763378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poriazis", "html_url": "https://github.com/poriazis", "followers_url": "https://api.github.com/users/poriazis/followers", "following_url": "https://api.github.com/users/poriazis/following{/other_user}", "gists_url": "https://api.github.com/users/poriazis/gists{/gist_id}", "starred_url": "https://api.github.com/users/poriazis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poriazis/subscriptions", "organizations_url": "https://api.github.com/users/poriazis/orgs", "repos_url": "https://api.github.com/users/poriazis/repos", "events_url": "https://api.github.com/users/poriazis/events{/privacy}", "received_events_url": "https://api.github.com/users/poriazis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-17T21:26:53Z", "updated_at": "2020-05-12T18:57:15Z", "closed_at": "2020-05-12T17:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using requests to download files from my remote server. All files under 124MB are downloaded and saved properly. Files larger than that are only downloaded up to 124MB and the rest of the data is skipped. \r\n\r\nOriginally I hadn't set **stream** to **True** and I was simply saving the data using **r.content**. I thought setting **stream** to **True** and iterating over chunks with **iter_content()** would fix my problem but it persists.\r\n\r\n Am I doing something wrong?\r\n\r\nHere's my code\r\n```python\r\nfor file in files_list:\r\n    url = \"http://server:8080/path/\" + file\r\n    r = requests.get(url, stream=True)\r\n    with open(file, 'wb') as f:\r\n        for chunk in r.iter_content(chunk_size=1024): \r\n            if chunk:\r\n                f.write(chunk)\r\n                f.flush()\r\n```\r\n\r\n**Edit:** I previously stated that it downloaded up to 130MB, but it's actually 124MB. \r\n\r\n**Edit 2:** Solution that worked for me: https://serverfault.com/questions/470403/apache-2-4-on-windows-2008-large-file-downloads-are-corrupt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5425", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5425/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5425/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5425/events", "html_url": "https://github.com/psf/requests/issues/5425", "id": 600500899, "node_id": "MDU6SXNzdWU2MDA1MDA4OTk=", "number": 5425, "title": "Requests does not terminate sending data if a response is received", "user": {"login": "crabtreej", "id": 44279559, "node_id": "MDQ6VXNlcjQ0Mjc5NTU5", "avatar_url": "https://avatars3.githubusercontent.com/u/44279559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crabtreej", "html_url": "https://github.com/crabtreej", "followers_url": "https://api.github.com/users/crabtreej/followers", "following_url": "https://api.github.com/users/crabtreej/following{/other_user}", "gists_url": "https://api.github.com/users/crabtreej/gists{/gist_id}", "starred_url": "https://api.github.com/users/crabtreej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crabtreej/subscriptions", "organizations_url": "https://api.github.com/users/crabtreej/orgs", "repos_url": "https://api.github.com/users/crabtreej/repos", "events_url": "https://api.github.com/users/crabtreej/events{/privacy}", "received_events_url": "https://api.github.com/users/crabtreej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T18:26:23Z", "updated_at": "2020-04-16T17:56:35Z", "closed_at": "2020-04-16T17:56:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Summary**\r\nA request.post() will continue sending the entirety of the provided data after the receiver has already attempted to terminate the request. Specifically, this problem is occurring with requests 2.23.0, and the request is being sent to a Django server running Django 3.0.5. I was unsure if this should be a bug or a feature, but since it deviates from other standard tools (e.g. curl), I figured it should be a bug.\r\n\r\n**Expected Result**\r\n1. I send a POST request to a Django server's endpoint containing some large (>200 mb) multi-part encoded file. \r\n2. The Django server quickly returns an HTTP 400 response to the sender. \r\n3. I expect that the sender would then stop sending data over the socket, collect Django's response, and return from the POST without sending the rest of the data, which will never be read.\r\n\r\nThis is Curl's response to handling receiving an early response.\r\n\r\n**Actual Result**\r\n\r\nStep 1 and 2 proceed as normal. In step 3, requests will instead continue sending all of the data to the server even though a response has already been received. \r\n\r\nMy use case is sending files on the order of several GB (which I know is not typical), and request's behavior will kill the receiving server because Django will attempt to read all the 'leftover' data (which is a huge amount) in one run.\r\n\r\n**Reproduction Steps**\r\n\r\n**Request's Side**\r\n```python\r\nimport requests\r\nfile_name = 'test.txt'\r\nf_handle = open(file_name, 'rb')\r\nres = requests.post('http://localhost:8000/upload', files={'file': (file_name, f_handle, 'raw')})\r\nres.raise_for_status()\r\n```\r\n\r\nThe error can be difficult to see here because at a certain file size there will be a memory error from requests, so it's hard to tell if it's stuck sending. Using requests-toolbelt allows arbitrarily large multipart files by streaming them, and I originally posted the error there - [Requests-Toolbelt error](https://github.com/requests/toolbelt/issues/292). If it makes the hang when requests sends the entire file easier to see, here's code using a MultipartEncoder as well, toolbelt version 0.9.1.\r\n**Alt Request's Side**: \r\n```python\r\nimport requests\r\nfrom requests_toolbelt.multipart.encoder import MultipartEncoder\r\n\r\nfile_name = 'test.txt'\r\nf_handle = open(file_name, 'rb')\r\nm = MultipartEncoder({'file': (file_name, f_handle, 'raw')})\r\nres = requests.post('http://localhost:8000/upload', data=m, headers={'Content-Type': m.content_type})\r\nres.raise_for_status()\r\n```\r\n\r\n**Django views.py**: Just kicks back an error\r\n```python\r\nfrom django.http import HttpResponse\r\nfrom django.views.decorators.csrf import csrf_exempt\r\nfrom django.views.decorators.http import require_POST\r\n\r\n@csrf_exempt\r\n@require_POST\r\ndef upload(request):\r\n    return HttpResponse(\"Done!\", status=400)\r\n```\r\n\r\n**Curl's Behavior**: Sending an ~800mb file, stops immediately (147 bytes in) and shows Django's response.\r\n`curl -F file=test.txt -k http://localhost:8000/upload`\r\n\r\n```\r\n%       Total    %      Received %    Xferd    Average Speed    Time    Time     Time      Current\r\n                                               Dload   Upload   Total   Spent    Left        Speed\r\n100    152      100     5       100   147      333     9800      --:--:-- --:--:-- --:--:--   10133 Done!\r\n```\r\n\r\n**System Information**\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.6\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"7\",\r\n    \"system\": \"Windows\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"100020ff\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5423", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5423/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5423/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5423/events", "html_url": "https://github.com/psf/requests/issues/5423", "id": 599509923, "node_id": "MDU6SXNzdWU1OTk1MDk5MjM=", "number": 5423, "title": "HTTPS under Jython 2.7.2 failes", "user": {"login": "lukicsl", "id": 23736716, "node_id": "MDQ6VXNlcjIzNzM2NzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/23736716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukicsl", "html_url": "https://github.com/lukicsl", "followers_url": "https://api.github.com/users/lukicsl/followers", "following_url": "https://api.github.com/users/lukicsl/following{/other_user}", "gists_url": "https://api.github.com/users/lukicsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukicsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukicsl/subscriptions", "organizations_url": "https://api.github.com/users/lukicsl/orgs", "repos_url": "https://api.github.com/users/lukicsl/repos", "events_url": "https://api.github.com/users/lukicsl/events{/privacy}", "received_events_url": "https://api.github.com/users/lukicsl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-14T11:45:47Z", "updated_at": "2020-04-14T15:54:45Z", "closed_at": "2020-04-14T15:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not able to use request for https site, without SSL things run fine\r\nJython 2.7.2 running in a docker container.\r\n```\r\nroot@5ddd8c24f29b:/# python\r\nJython 2.7.2 (v2.7.2:925a3cc3b49d, Mar 21 2020, 10:03:58)\r\n[OpenJDK Server VM (AdoptOpenJDK)] on java14\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import requests\r\n>>> import json\r\n>>> r =requests.get('http://api.eiswarnung.de/')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/jython/Lib/site-packages/requests/api.py\", line 76, in get\r\n    return request('get', url, params=params, **kwargs)\r\n  File \"/usr/local/jython/Lib/site-packages/requests/api.py\", line 61, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/local/jython/Lib/site-packages/requests/sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/local/jython/Lib/site-packages/requests/sessions.py\", line 665, in send\r\n    history = [resp for resp in gen] if allow_redirects else []\r\n  File \"/usr/local/jython/Lib/site-packages/requests/sessions.py\", line 237, in resolve_redirects\r\n    resp = self.send(\r\n  File \"/usr/local/jython/Lib/site-packages/requests/sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/jython/Lib/site-packages/requests/adapters.py\", line 514, in send\r\n    raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='www.eiswarnung.de', port=443): Max retries exceeded with url: /api/public/ (Caused by SSLError(SSLError(1, u'Received fatal alert: internal_error'),))\r\n>>> \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5422", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5422/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5422/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5422/events", "html_url": "https://github.com/psf/requests/issues/5422", "id": 599413579, "node_id": "MDU6SXNzdWU1OTk0MTM1Nzk=", "number": 5422, "title": "Usage of SourceAddressAdapter to create multiple source ip", "user": {"login": "kaushik853", "id": 10762524, "node_id": "MDQ6VXNlcjEwNzYyNTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/10762524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaushik853", "html_url": "https://github.com/kaushik853", "followers_url": "https://api.github.com/users/kaushik853/followers", "following_url": "https://api.github.com/users/kaushik853/following{/other_user}", "gists_url": "https://api.github.com/users/kaushik853/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaushik853/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaushik853/subscriptions", "organizations_url": "https://api.github.com/users/kaushik853/orgs", "repos_url": "https://api.github.com/users/kaushik853/repos", "events_url": "https://api.github.com/users/kaushik853/events{/privacy}", "received_events_url": "https://api.github.com/users/kaushik853/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T09:06:44Z", "updated_at": "2020-04-14T13:12:47Z", "closed_at": "2020-04-14T13:12:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nCan you tell how can i test it with multiple source ip address . Something i tried like\r\n```python\r\nfrom requests_toolbelt.adapters import source\r\nsession = PACSession(pac)\r\nlist_source_ip_and_url = [(\"10.129.xx.yy\", \"https://google.com\"), (\"10.189.yy.xx\", \"https://random.com/Surveyor.Web/\")]\r\nresponses = []\r\ntry:\r\n    for source_ip, url in list_source_ip_and_url:\r\n        new_source = source.SourceAddressAdapter(source_ip)\r\n        session.mount('http://', new_source)\r\n        session.mount('https://', new_source)\r\n        responses.append(session.get(url))\r\n    print(responses)\r\nexcept Exception as e:\r\n    print(e)\r\n```\r\nI am getting error like:\r\nHTTPSConnectionPool(host='google.com', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x033D5547>: Failed to establish a new connection: [WinError 10049] The requested address is not valid in its context'))\r\nLooks like im hitting some requests module error.\r\nIs it because i can't assign source ip to my interface?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5421", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5421/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5421/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5421/events", "html_url": "https://github.com/psf/requests/issues/5421", "id": 598734110, "node_id": "MDU6SXNzdWU1OTg3MzQxMTA=", "number": 5421, "title": "How can I use sendfile?", "user": {"login": "ImSingee", "id": 11208082, "node_id": "MDQ6VXNlcjExMjA4MDgy", "avatar_url": "https://avatars2.githubusercontent.com/u/11208082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ImSingee", "html_url": "https://github.com/ImSingee", "followers_url": "https://api.github.com/users/ImSingee/followers", "following_url": "https://api.github.com/users/ImSingee/following{/other_user}", "gists_url": "https://api.github.com/users/ImSingee/gists{/gist_id}", "starred_url": "https://api.github.com/users/ImSingee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ImSingee/subscriptions", "organizations_url": "https://api.github.com/users/ImSingee/orgs", "repos_url": "https://api.github.com/users/ImSingee/repos", "events_url": "https://api.github.com/users/ImSingee/events{/privacy}", "received_events_url": "https://api.github.com/users/ImSingee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-13T07:49:52Z", "updated_at": "2020-04-30T16:03:16Z", "closed_at": "2020-04-30T16:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried\r\n\r\n```\r\nr = requests.get(SOME_URL, stream=True, verify=False)\r\n\r\nwith open('/path/to/dest', 'wb') as f:\r\n    socket.fromfd(r.raw.fileno(), socket.AF_INET, socket.SOCK_STREAM).sendfile(f)\r\n```\r\n\r\n\r\nbut it doesn't work.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5420", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5420/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5420/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5420/events", "html_url": "https://github.com/psf/requests/issues/5420", "id": 598384959, "node_id": "MDU6SXNzdWU1OTgzODQ5NTk=", "number": 5420, "title": "json parameter should transform booleans", "user": {"login": "Dynatrace-Adam-Gardner", "id": 13639658, "node_id": "MDQ6VXNlcjEzNjM5NjU4", "avatar_url": "https://avatars3.githubusercontent.com/u/13639658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dynatrace-Adam-Gardner", "html_url": "https://github.com/Dynatrace-Adam-Gardner", "followers_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/followers", "following_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/following{/other_user}", "gists_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/subscriptions", "organizations_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/orgs", "repos_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/repos", "events_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/events{/privacy}", "received_events_url": "https://api.github.com/users/Dynatrace-Adam-Gardner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-12T01:15:38Z", "updated_at": "2020-04-13T23:13:56Z", "closed_at": "2020-04-13T23:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n`json=` parameter should correctly transform booleans.\r\n\r\n## Expected Result\r\nGiven this:\r\n\r\n```\r\nresp = req.post('https://example.com/endPoint',\r\n  json={ \"foo\": false }\r\n)\r\n```\r\nI'd expect this to work, and python to correctly transform `false` to `False`.\r\n\r\n## Actual Result\r\nInstead, I get `\"foo\": false, NameError: name 'false' is not defined`\r\n\r\nThis works:\r\n\r\n```\r\nresp = req.post('https://example.com/endPoint',\r\n  json={ \"foo\": False }\r\n)\r\n```\r\n\r\nAnd this works:\r\n\r\n```\r\npayload = json.loads(\"{ \"foo\": false }\")\r\nresp = req.post('https://example.com/endPoint',\r\n  json=payload\r\n)\r\n```\r\n\r\nTherefore this is an request for enhancement that the `requests` library handle this for us, so that it \"just works\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5419", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5419/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5419/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5419/events", "html_url": "https://github.com/psf/requests/issues/5419", "id": 598354716, "node_id": "MDU6SXNzdWU1OTgzNTQ3MTY=", "number": 5419, "title": "\"Authorization\" header is rewritten for HTTP Basic Auth, even when it is explicitly set in the headers kwarg", "user": {"login": "terminalmage", "id": 328598, "node_id": "MDQ6VXNlcjMyODU5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/328598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terminalmage", "html_url": "https://github.com/terminalmage", "followers_url": "https://api.github.com/users/terminalmage/followers", "following_url": "https://api.github.com/users/terminalmage/following{/other_user}", "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}", "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions", "organizations_url": "https://api.github.com/users/terminalmage/orgs", "repos_url": "https://api.github.com/users/terminalmage/repos", "events_url": "https://api.github.com/users/terminalmage/events{/privacy}", "received_events_url": "https://api.github.com/users/terminalmage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-11T21:28:37Z", "updated_at": "2020-04-12T15:49:05Z", "closed_at": "2020-04-12T15:49:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried setting the `Authorization` header manually to make a request to the Github API, but authentication failed despite the same token working fine when making the request using cURL, `urllib.request.Request()`, and other methods. \r\n\r\n## Expected Result\r\n\r\nSuccessful auth and a `200 OK` response.\r\n\r\n## Actual Result\r\n\r\nAuthentication fails with a `401 Bad Credentials` response.\r\n\r\nUpon inspecting the response's `request` attribute, I found that the `Authorization` header had been overwritten (looks like this happens [here](https://github.com/psf/requests/blob/9cdf294/requests/auth.py#L95-L97)).\r\n\r\nI've since worked around this, but in my opinion, one should expect that if they are setting the `Authorization` header manually (rather than using the `auth` param), the header should not be overwritten.\r\n\r\nI can draft a PR to address this if the project maintainers agree to such a change.\r\n\r\n## Reproduction Steps\r\n\r\nCreate an [access token](https://github.com/settings/tokens) and then try to auth to the API like so:\r\n\r\n```python\r\nrequests.get(\r\n    'https://api.github.com/notifications',\r\n    headers={'Authorization': 'token MY_TOKEN_HERE'}\r\n)\r\n```\r\n\r\n## System Information\r\n\r\n```python\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.8.2\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.6.3-arch1-1\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010106f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5417", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5417/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5417/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5417/events", "html_url": "https://github.com/psf/requests/issues/5417", "id": 596550777, "node_id": "MDU6SXNzdWU1OTY1NTA3Nzc=", "number": 5417, "title": "Downloading corrupted files with Python", "user": {"login": "Pablo-Marina", "id": 62334013, "node_id": "MDQ6VXNlcjYyMzM0MDEz", "avatar_url": "https://avatars0.githubusercontent.com/u/62334013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pablo-Marina", "html_url": "https://github.com/Pablo-Marina", "followers_url": "https://api.github.com/users/Pablo-Marina/followers", "following_url": "https://api.github.com/users/Pablo-Marina/following{/other_user}", "gists_url": "https://api.github.com/users/Pablo-Marina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pablo-Marina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pablo-Marina/subscriptions", "organizations_url": "https://api.github.com/users/Pablo-Marina/orgs", "repos_url": "https://api.github.com/users/Pablo-Marina/repos", "events_url": "https://api.github.com/users/Pablo-Marina/events{/privacy}", "received_events_url": "https://api.github.com/users/Pablo-Marina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T12:46:07Z", "updated_at": "2020-04-10T18:37:55Z", "closed_at": "2020-04-10T18:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI have a XAMPP Server on Windows, from which I aim to download remotely a pdf file located in C:/xampp/htdocs/ using requests library from python to generate it in the very same folder but with another name (later I'll change the direction to downloads folder once it works)\r\nThe server is running in IP address 192.168.1.134 port 8081. \r\nThis is the part of the code:\r\n  ```\r\n  url=\"http://192.168.1.134:8081/c:/xampp/htdocs/informe.pdf\"\r\n  response=requests.get(url)\r\n  tofile=open('informelocal.pdf','wb')\r\n  tofile.write(response.content)\r\n  tofile.close()\r\n\r\n```\r\nThe thing is, once I try to open the local file, I can't open it, because it's corrupted.\r\nI think something is matter with that URL, but I don't know how to put it right.\r\nThanks for your time", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5416", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5416/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5416/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5416/events", "html_url": "https://github.com/psf/requests/issues/5416", "id": 596240232, "node_id": "MDU6SXNzdWU1OTYyNDAyMzI=", "number": 5416, "title": "Add a Pull request template", "user": {"login": "to09", "id": 45192178, "node_id": "MDQ6VXNlcjQ1MTkyMTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/45192178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/to09", "html_url": "https://github.com/to09", "followers_url": "https://api.github.com/users/to09/followers", "following_url": "https://api.github.com/users/to09/following{/other_user}", "gists_url": "https://api.github.com/users/to09/gists{/gist_id}", "starred_url": "https://api.github.com/users/to09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/to09/subscriptions", "organizations_url": "https://api.github.com/users/to09/orgs", "repos_url": "https://api.github.com/users/to09/repos", "events_url": "https://api.github.com/users/to09/events{/privacy}", "received_events_url": "https://api.github.com/users/to09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T01:06:05Z", "updated_at": "2020-04-30T16:12:18Z", "closed_at": "2020-04-30T16:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "To make easier for the contributors and guide them in the right way to contribute with the deploy preview check.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5415", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5415/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5415/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5415/events", "html_url": "https://github.com/psf/requests/issues/5415", "id": 595860962, "node_id": "MDU6SXNzdWU1OTU4NjA5NjI=", "number": 5415, "title": "Specifying number of retries in requests.get", "user": {"login": "ndvbd", "id": 845175, "node_id": "MDQ6VXNlcjg0NTE3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/845175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndvbd", "html_url": "https://github.com/ndvbd", "followers_url": "https://api.github.com/users/ndvbd/followers", "following_url": "https://api.github.com/users/ndvbd/following{/other_user}", "gists_url": "https://api.github.com/users/ndvbd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndvbd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndvbd/subscriptions", "organizations_url": "https://api.github.com/users/ndvbd/orgs", "repos_url": "https://api.github.com/users/ndvbd/repos", "events_url": "https://api.github.com/users/ndvbd/events{/privacy}", "received_events_url": "https://api.github.com/users/ndvbd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-07T13:17:56Z", "updated_at": "2020-04-10T18:43:01Z", "closed_at": "2020-04-10T18:43:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to specify number of retries in requests.get?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5412", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5412/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5412/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5412/events", "html_url": "https://github.com/psf/requests/issues/5412", "id": 593519559, "node_id": "MDU6SXNzdWU1OTM1MTk1NTk=", "number": 5412, "title": "Expecting property name enclosed in double quotes", "user": {"login": "jeffreyscottgraham", "id": 1139228, "node_id": "MDQ6VXNlcjExMzkyMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1139228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffreyscottgraham", "html_url": "https://github.com/jeffreyscottgraham", "followers_url": "https://api.github.com/users/jeffreyscottgraham/followers", "following_url": "https://api.github.com/users/jeffreyscottgraham/following{/other_user}", "gists_url": "https://api.github.com/users/jeffreyscottgraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffreyscottgraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffreyscottgraham/subscriptions", "organizations_url": "https://api.github.com/users/jeffreyscottgraham/orgs", "repos_url": "https://api.github.com/users/jeffreyscottgraham/repos", "events_url": "https://api.github.com/users/jeffreyscottgraham/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffreyscottgraham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 167537670, "node_id": "MDU6TGFiZWwxNjc1Mzc2NzA=", "url": "https://api.github.com/repos/psf/requests/labels/Propose%20Close", "name": "Propose Close", "color": "f7c6c7", "default": false, "description": null}, {"id": 162780722, "node_id": "MDU6TGFiZWwxNjI3ODA3MjI=", "url": "https://api.github.com/repos/psf/requests/labels/Question/Not%20a%20bug", "name": "Question/Not a bug", "color": "777777", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-03T17:03:09Z", "updated_at": "2020-04-10T18:43:45Z", "closed_at": "2020-04-10T18:43:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\nCant parse json result because property names are in single quotes instead of double\r\n\r\n## Expected Result\r\nA proper parse of course.\r\n\r\n\r\n## Actual Result\r\nCaught exception Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\r\n\r\n## Reproduction Steps\r\nres=requests.get(...)\r\ns=str(res.json())\r\nj=json.loads(s)\r\n\r\n\r\n## System Information\r\n\r\npython3 -m requests.help\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.3\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.6\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"5.0.0-38-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010100f\",\r\n    \"version\": \"19.0.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.21.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010102f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.24.1\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n\r\nThis is running on up-to-date Ubuntu 19.04 and python 3.7.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5409", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5409/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5409/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5409/events", "html_url": "https://github.com/psf/requests/issues/5409", "id": 591214341, "node_id": "MDU6SXNzdWU1OTEyMTQzNDE=", "number": 5409, "title": "missing implementation of \"json\" argument in \"put\" method", "user": {"login": "liyakun", "id": 7370334, "node_id": "MDQ6VXNlcjczNzAzMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7370334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyakun", "html_url": "https://github.com/liyakun", "followers_url": "https://api.github.com/users/liyakun/followers", "following_url": "https://api.github.com/users/liyakun/following{/other_user}", "gists_url": "https://api.github.com/users/liyakun/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyakun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyakun/subscriptions", "organizations_url": "https://api.github.com/users/liyakun/orgs", "repos_url": "https://api.github.com/users/liyakun/repos", "events_url": "https://api.github.com/users/liyakun/events{/privacy}", "received_events_url": "https://api.github.com/users/liyakun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-31T15:43:20Z", "updated_at": "2020-03-31T17:16:45Z", "closed_at": "2020-03-31T17:16:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that the implementation of \"json\" argument was forgot, see [1].\r\n\r\n[1] https://github.com/psf/requests/blob/bebf5250b0df1b922ff534e987a4481cc4dde99d/requests/api.py#L128", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5408", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5408/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5408/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5408/events", "html_url": "https://github.com/psf/requests/issues/5408", "id": 590886333, "node_id": "MDU6SXNzdWU1OTA4ODYzMzM=", "number": 5408, "title": "Commercial Usage Rights", "user": {"login": "hi2rashid", "id": 10250923, "node_id": "MDQ6VXNlcjEwMjUwOTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/10250923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi2rashid", "html_url": "https://github.com/hi2rashid", "followers_url": "https://api.github.com/users/hi2rashid/followers", "following_url": "https://api.github.com/users/hi2rashid/following{/other_user}", "gists_url": "https://api.github.com/users/hi2rashid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi2rashid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi2rashid/subscriptions", "organizations_url": "https://api.github.com/users/hi2rashid/orgs", "repos_url": "https://api.github.com/users/hi2rashid/repos", "events_url": "https://api.github.com/users/hi2rashid/events{/privacy}", "received_events_url": "https://api.github.com/users/hi2rashid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T08:02:43Z", "updated_at": "2020-04-03T17:41:12Z", "closed_at": "2020-04-03T17:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using this module in our application with Django.\r\n\r\nCan you please confirm if its okay to be used commercially.\r\n\r\nThank you in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5405", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5405/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5405/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5405/events", "html_url": "https://github.com/psf/requests/issues/5405", "id": 589818769, "node_id": "MDU6SXNzdWU1ODk4MTg3Njk=", "number": 5405, "title": "JSON with Umlaut (\u00e4\u00fc\u00f6) not ok on Python 2.7", "user": {"login": "lukicsl", "id": 23736716, "node_id": "MDQ6VXNlcjIzNzM2NzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/23736716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukicsl", "html_url": "https://github.com/lukicsl", "followers_url": "https://api.github.com/users/lukicsl/followers", "following_url": "https://api.github.com/users/lukicsl/following{/other_user}", "gists_url": "https://api.github.com/users/lukicsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukicsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukicsl/subscriptions", "organizations_url": "https://api.github.com/users/lukicsl/orgs", "repos_url": "https://api.github.com/users/lukicsl/repos", "events_url": "https://api.github.com/users/lukicsl/events{/privacy}", "received_events_url": "https://api.github.com/users/lukicsl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-29T15:35:57Z", "updated_at": "2020-03-30T10:27:51Z", "closed_at": "2020-03-30T10:27:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having the following code:\r\n```\r\n            r =requests.get('http://{}/api/{}/groups/37'.format(HUE_BRIDGE, API_CODE))\r\n            log.info('r.content: {} '.format(r.content))\r\n            log.info('r.headers[\"content-type\"]: {} '.format(r.headers['content-type']))\r\n            log.info('r.json(): {} '.format(r.json()))\r\n\r\n```\r\nthe log output:\r\n\r\n```\r\n2020-03-29 17:10:57.224 [INFO ] [jsr223.jython.huegroups.log         ] - r.headers[\"content-type\"]: application/json; charset=utf-8 \r\n2020-03-29 17:10:57.234 [INFO ] [jsr223.jython.huegroups.log         ] - r.json(): {u'devicemembership': [], u'type': u'LightGroup', u'name': u'T\\xe4st Gruppe', u'scenes': [{u'transitiontime': 10, u'name': u'Morning', u'id': u'1', u'lightcount': 3}, {u'transitiontime': 10, u'name': u'Evening', u'id': u'2', u'lightcount': 3}, {u'transitiontime': 10, u'name': u'Middle OFF', u'id': u'3', u'lightcount': 3}], u'action': {u'xy': [0, 0], u'sat': 127, u'scene': u'3', u'ct': 370, u'effect': u'none', u'bri': 74, u'hue': 0, u'colormode': u'ct', u'on': False}, u'etag': u'b5e003450e01af7f862214ded33c74b6', u'id': u'37', u'state': {u'all_on': False, u'any_on': False}, u'lights': [u'17', u'2', u'6']} \r\n\r\n```\r\nOne of the values is **T\\xe4st Gruppe** instead of **T\\xe4st Gruppe** is delivered\r\n\r\nRunning the same request from the Chrome REST Client:\r\n```\r\n{\"action\":{\"bri\":74,\"colormode\":\"ct\",\"ct\":370,\"effect\":\"none\",\"hue\":0,\"on\":false,\"sat\":127,\"scene\":\"3\",\"xy\":[0,0]},\"devicemembership\":[],\"etag\":\"b5e003450e01af7f862214ded33c74b6\",\"id\":\"37\",\"lights\":[\"17\",\"2\",\"6\"],\"name\":\"T\u00e4st Gruppe\",\"scenes\":[{\"id\":\"1\",\"lightcount\":3,\"name\":\"Morning\",\"transitiontime\":10},{\"id\":\"2\",\"lightcount\":3,\"name\":\"Evening\",\"transitiontime\":10},{\"id\":\"3\",\"lightcount\":3,\"name\":\"Middle OFF\",\"transitiontime\":10}],\"state\":{\"all_on\":false,\"any_on\":false},\"type\":\"LightGroup\"}\r\n\r\n```\r\nresponse headers:\r\n```\r\naccess-control-allow-origin: *\r\ncontent-type: application/json; charset=utf-8\r\ncontent-length: 498\r\n```\r\n\r\nI am running on Jython 2.7.1, this is my installation log:\r\n```\r\n(lukics@vevedock-02:~/git.com/docker-swarm-and-compose/openhab $ sudo pip install --upgrade --target=/datavol/openhab-2.5.1/openhab_conf/automation/lib/python requests\r\nLooking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple\r\nCollecting requests\r\n  Using cached https://files.pythonhosted.org/packages/1a/70/1935c770cb3be6e3a8b78ced23d7e0f3b187f5cbfab4749523ed65d7c9b1/requests-2.23.0-py2.py3-none-any.whl\r\nCollecting idna<3,>=2.5 (from requests)\r\n  Using cached https://files.pythonhosted.org/packages/89/e3/afebe61c546d18fb1709a61bee788254b40e736cff7271c7de5de2dc4128/idna-2.9-py2.py3-none-any.whl\r\nCollecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests)\r\n  Using cached https://files.pythonhosted.org/packages/e8/74/6e4f91745020f967d09332bb2b8b9b10090957334692eb88ea4afe91b77f/urllib3-1.25.8-py2.py3-none-any.whl\r\nCollecting certifi>=2017.4.17 (from requests)\r\n  Using cached https://files.pythonhosted.org/packages/b9/63/df50cac98ea0d5b006c55a399c3bf1db9da7b5a24de7890bc9cfd5dd9e99/certifi-2019.11.28-py2.py3-none-any.whl\r\nCollecting chardet<4,>=3.0.2 (from requests)\r\n  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl\r\nInstalling collected packages: idna, urllib3, certifi, chardet, requests\r\nSuccessfully installed certifi-2019.11.28 chardet-3.0.4 idna-2.9 requests-2.23.0 urllib3-1.25.8\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5401", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5401/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5401/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5401/events", "html_url": "https://github.com/psf/requests/issues/5401", "id": 589347245, "node_id": "MDU6SXNzdWU1ODkzNDcyNDU=", "number": 5401, "title": "Missing Occasional *space char/url %20* in HTML?", "user": {"login": "treatmesubj", "id": 39680353, "node_id": "MDQ6VXNlcjM5NjgwMzUz", "avatar_url": "https://avatars0.githubusercontent.com/u/39680353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treatmesubj", "html_url": "https://github.com/treatmesubj", "followers_url": "https://api.github.com/users/treatmesubj/followers", "following_url": "https://api.github.com/users/treatmesubj/following{/other_user}", "gists_url": "https://api.github.com/users/treatmesubj/gists{/gist_id}", "starred_url": "https://api.github.com/users/treatmesubj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treatmesubj/subscriptions", "organizations_url": "https://api.github.com/users/treatmesubj/orgs", "repos_url": "https://api.github.com/users/treatmesubj/repos", "events_url": "https://api.github.com/users/treatmesubj/events{/privacy}", "received_events_url": "https://api.github.com/users/treatmesubj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T19:02:25Z", "updated_at": "2020-03-28T16:02:39Z", "closed_at": "2020-03-28T16:02:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Requesting HTML to grab some links out of <script> at the end of the HTML, but I noticed that some strings being pulled from the requests_html.HTML object were missing space characters compared to strings in my Firefox developer source file. \r\n\r\n## Expected Result\r\n\r\nExpected to find strings as they are in my Firefox Developer Debugger.\r\nThey have occasional spaces that I can't systematically understand, so I just went to get them from the script as they are.\r\n\r\nLike this one with a weird space before the parentheses:\r\n```'11 - Im Gonna Be Ft Jhene Aiko  (Prod by keY Wane).mp3'```\r\n\r\n!Actually, it's not even showing the extra space here when I submit my post, but I can see it in the raw text?\r\n\r\n## Actual Result\r\n\r\nWhen parsing the requests_html.HTML object for the same string, I found that the weird space wasn't there.\r\n\r\nLike this: \r\n```'11 - Im Gonna Be Ft Jhene Aiko (Prod by keY Wane).mp3'```\r\n\r\n## Reproduction Steps\r\n\r\n```\r\nimport requests\r\nfrom requests_html import HTML\r\n\r\nplayer_link = f\"https://embeds.datpiff.com/mixtape/390127\"\r\nplayer_html = HTML(html=requests.get(player_link).text)\r\n\r\njs = player_html.find(\"body>script\")[-1].text\r\nprint(js)\r\n\r\n\"\"\"\r\nrequests html: '11 - Im Gonna Be Ft Jhene Aiko (Prod by keY Wane).mp3'\r\njs in Firefox: '11 - Im Gonna Be Ft Jhene Aiko  (Prod by keY Wane).mp3'\r\n\"\"\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5400", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5400/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5400/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5400/events", "html_url": "https://github.com/psf/requests/issues/5400", "id": 588704171, "node_id": "MDU6SXNzdWU1ODg3MDQxNzE=", "number": 5400, "title": "SSLError: HTTPSConnectionPool(host='free-proxy-list.net', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')])\")))", "user": {"login": "victorb37", "id": 55036280, "node_id": "MDQ6VXNlcjU1MDM2Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/55036280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorb37", "html_url": "https://github.com/victorb37", "followers_url": "https://api.github.com/users/victorb37/followers", "following_url": "https://api.github.com/users/victorb37/following{/other_user}", "gists_url": "https://api.github.com/users/victorb37/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorb37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorb37/subscriptions", "organizations_url": "https://api.github.com/users/victorb37/orgs", "repos_url": "https://api.github.com/users/victorb37/repos", "events_url": "https://api.github.com/users/victorb37/events{/privacy}", "received_events_url": "https://api.github.com/users/victorb37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T20:24:13Z", "updated_at": "2020-04-03T17:46:06Z", "closed_at": "2020-04-03T17:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**I am getting this error in return when running Twitterscraper on Python. \r\n\r\nThis is the the code that was used:** \r\n\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nSpyder Editor\r\n\r\nThis is a temporary script file.\r\n\"\"\"\r\n\r\nfrom twitterscraper import query_tweets\r\nimport datetime as dt\r\nimport pandas as pd\r\n\r\nbegin_date = dt.date(2020, 2, 17)\r\nend_date = dt.date(2020, 3, 20)\r\n\r\nlimit = 2000\r\nlang = 'english'\r\n\r\ntweets = query_tweets('coronavirus deaths', begindate = begin_date, enddate = end_date, limit = limit, lang = lang)\r\n\r\ndf = pd.DataFrame(t.__dict__ for t in tweets)\r\n\r\nfilt = df['text'].str.contains('coronavirus deaths')\r\n\r\ndf = df.loc[filt]\r\n\r\nexport_excel = df.to_excel (r'C:\\Users\\victo\\Desktop\\coronavirus.xlsx', index = None, header=True)\r\n\r\n**How can I fix this issue?**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5399", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5399/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5399/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5399/events", "html_url": "https://github.com/psf/requests/issues/5399", "id": 588700250, "node_id": "MDU6SXNzdWU1ODg3MDAyNTA=", "number": 5399, "title": "SSLError: HTTPSConnectionPool(host='free-proxy-list.net', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')])\")))", "user": {"login": "victorb37", "id": 55036280, "node_id": "MDQ6VXNlcjU1MDM2Mjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/55036280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorb37", "html_url": "https://github.com/victorb37", "followers_url": "https://api.github.com/users/victorb37/followers", "following_url": "https://api.github.com/users/victorb37/following{/other_user}", "gists_url": "https://api.github.com/users/victorb37/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorb37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorb37/subscriptions", "organizations_url": "https://api.github.com/users/victorb37/orgs", "repos_url": "https://api.github.com/users/victorb37/repos", "events_url": "https://api.github.com/users/victorb37/events{/privacy}", "received_events_url": "https://api.github.com/users/victorb37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-26T20:17:11Z", "updated_at": "2020-03-26T20:20:27Z", "closed_at": "2020-03-26T20:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5398", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5398/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5398/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5398/events", "html_url": "https://github.com/psf/requests/issues/5398", "id": 588590092, "node_id": "MDU6SXNzdWU1ODg1OTAwOTI=", "number": 5398, "title": "Request returns broken encoding (how to use with BeautifulSoup)?", "user": {"login": "h56cho", "id": 52889259, "node_id": "MDQ6VXNlcjUyODg5MjU5", "avatar_url": "https://avatars1.githubusercontent.com/u/52889259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h56cho", "html_url": "https://github.com/h56cho", "followers_url": "https://api.github.com/users/h56cho/followers", "following_url": "https://api.github.com/users/h56cho/following{/other_user}", "gists_url": "https://api.github.com/users/h56cho/gists{/gist_id}", "starred_url": "https://api.github.com/users/h56cho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h56cho/subscriptions", "organizations_url": "https://api.github.com/users/h56cho/orgs", "repos_url": "https://api.github.com/users/h56cho/repos", "events_url": "https://api.github.com/users/h56cho/events{/privacy}", "received_events_url": "https://api.github.com/users/h56cho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T17:21:08Z", "updated_at": "2020-04-03T18:01:22Z", "closed_at": "2020-04-03T18:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to web scrap a site that contains lots of ELA questions (permission obtained). I have been trying to implement the code below:\r\n```python\r\n    login_url = 'https://www.helpteaching.com/registration/login.htm?'\r\n    data = {\r\n        'name': '<myUserName>',\r\n        'password': '<myPassword>',\r\n        'remember_me': 1\r\n        }\r\n\r\n    with requests.Session() as s:\r\n        response = requests.post(login_url , data)\r\n        s.encoding='utf_8'\r\n        index_page= s.get('https://www.helpteaching.com/questions/Reading_Strategies')\r\n        soup = BeautifulSoup(index_page.text, 'html.parser')\r\n```\r\n\r\nNote that the encoding used by the site is utf-8, and I even manually adjusted the encoding to 'utf-8'.\r\nHowever, when execute the code above, the texts are all broken.\r\n\r\nIs there any way that I can use Requests with BeautifulSoup?\r\n\r\nI am using Python 3.7.0.\r\n\r\nThank you,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5395", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5395/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5395/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5395/events", "html_url": "https://github.com/psf/requests/issues/5395", "id": 585800346, "node_id": "MDU6SXNzdWU1ODU4MDAzNDY=", "number": 5395, "title": "ssl.SSLError: [SSL: KRB5_S_TKT_NYV]", "user": {"login": "faizanwahla", "id": 27058472, "node_id": "MDQ6VXNlcjI3MDU4NDcy", "avatar_url": "https://avatars1.githubusercontent.com/u/27058472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faizanwahla", "html_url": "https://github.com/faizanwahla", "followers_url": "https://api.github.com/users/faizanwahla/followers", "following_url": "https://api.github.com/users/faizanwahla/following{/other_user}", "gists_url": "https://api.github.com/users/faizanwahla/gists{/gist_id}", "starred_url": "https://api.github.com/users/faizanwahla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faizanwahla/subscriptions", "organizations_url": "https://api.github.com/users/faizanwahla/orgs", "repos_url": "https://api.github.com/users/faizanwahla/repos", "events_url": "https://api.github.com/users/faizanwahla/events{/privacy}", "received_events_url": "https://api.github.com/users/faizanwahla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-22T20:03:50Z", "updated_at": "2020-04-03T18:04:16Z", "closed_at": "2020-04-03T18:04:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please refer to our [Stack Overflow tag](https://stackoverflow.com/questions/tagged/python-requests) for guidance.\r\nI was logging in with facebook on this python script the day before \r\n\r\n\r\n it was working good  but now it throw the following error\r\n\r\n> Traceback (most recent call last):\r\nFile \"fbwv2b.py\", line 553, in\r\nlogin()\r\nFile \"fbwv2b.py\", line 116, in login\r\nbr.select_form(nr=0)\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nite-packages/mechanize/_mechanize.py\", line 633, in sel\r\nect_form\r\nglobal_form = self._factory.global_form\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nite-packages/mechanize/_html.py\", line 313, in global_f\r\norm\r\nself.forms()\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nite-packages/mechanize/_html.py\", line 320, in forms\r\nself._current_forms, self._current_global_form = se\r\nlf._get_forms()\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nite-packages/mechanize/_html.py\", line 335, in _get_for\r\nms\r\nif self.root is None:\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nite-packages/mechanize/_html.py\", line 289, in root\r\nraw = self._response.read() if self._response else\r\nb''\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nite-packages/mechanize/_response.py\", line 199, in read\r\nself.__cache.write(self.wrapped.read())\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nocket.py\", line 355, in read\r\ndata = self._sock.recv(rbufsize)\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/h\r\nttplib.py\", line 607, in read\r\ns = self.fp.read(amt)\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nocket.py\", line 384, in read\r\ndata = self._sock.recv(left)\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nsl.py\", line 754, in recv\r\nreturn self.read(buflen)\r\nFile \"/data/data/com.termux/files/usr/lib/python2.7/s\r\nsl.py\", line 641, in read\r\nv = self._sslobj.read(len)\r\nssl.SSLError: [SSL: KRB5_S_TKT_NYV] unexpected eof whil\r\ne reading (_ssl.c:1946)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5394", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5394/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5394/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5394/events", "html_url": "https://github.com/psf/requests/issues/5394", "id": 585697084, "node_id": "MDU6SXNzdWU1ODU2OTcwODQ=", "number": 5394, "title": "time limit / lifetime of request", "user": {"login": "flipchan", "id": 12517945, "node_id": "MDQ6VXNlcjEyNTE3OTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/12517945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flipchan", "html_url": "https://github.com/flipchan", "followers_url": "https://api.github.com/users/flipchan/followers", "following_url": "https://api.github.com/users/flipchan/following{/other_user}", "gists_url": "https://api.github.com/users/flipchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/flipchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flipchan/subscriptions", "organizations_url": "https://api.github.com/users/flipchan/orgs", "repos_url": "https://api.github.com/users/flipchan/repos", "events_url": "https://api.github.com/users/flipchan/events{/privacy}", "received_events_url": "https://api.github.com/users/flipchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-22T11:27:15Z", "updated_at": "2020-04-16T16:56:34Z", "closed_at": "2020-04-03T18:13:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a program and in order verify that the user doesnt download such big files using input i need a time limit on how long each request is allowed to take.\r\n\r\nDoes anyone know a good way to put a time limit(/lifetime) on each python requests get requests so if it takes 10 seconds an exception will be thrown.\r\n\r\nThanks\r\n\r\n\r\nPlease refer to the [Stack Overflow question here as well](https://stackoverflow.com/questions/60798728/put-a-time-limit-on-a-request).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5393", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5393/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5393/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5393/events", "html_url": "https://github.com/psf/requests/issues/5393", "id": 584360231, "node_id": "MDU6SXNzdWU1ODQzNjAyMzE=", "number": 5393, "title": "requests.get failed with AuthenticationRequired error but urllib.request.urlopen works", "user": {"login": "jiongjiongli", "id": 33146359, "node_id": "MDQ6VXNlcjMzMTQ2MzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/33146359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiongjiongli", "html_url": "https://github.com/jiongjiongli", "followers_url": "https://api.github.com/users/jiongjiongli/followers", "following_url": "https://api.github.com/users/jiongjiongli/following{/other_user}", "gists_url": "https://api.github.com/users/jiongjiongli/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiongjiongli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiongjiongli/subscriptions", "organizations_url": "https://api.github.com/users/jiongjiongli/orgs", "repos_url": "https://api.github.com/users/jiongjiongli/repos", "events_url": "https://api.github.com/users/jiongjiongli/events{/privacy}", "received_events_url": "https://api.github.com/users/jiongjiongli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T11:57:14Z", "updated_at": "2020-04-06T13:10:02Z", "closed_at": "2020-04-03T18:22:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\nrequests.get failed with AuthenticationRequired error but urllib.request.urlopen works.\r\nThe computer access google url with shadowsocks client.\r\n\r\n```\r\n>>> requests.__version__\r\n'2.23.0'\r\n>>>\r\n>>> url = 'http://storage.googleapis.com/tfds-data'\r\n>>>\r\n>>> response = requests.get(url)\r\n>>> response\r\n<Response [401]>\r\n>>> response.content\r\nb\"<?xml version='1.0' encoding='UTF-8'?><Error><Code>AuthenticationRequired</Code><Message>Authentication required.</Message></Error>\"\r\n>>>\r\n>>> urllib.request.urlopen(url).msg\r\n'OK'\r\n```\r\n\r\n## Expected Result\r\nrequests.get(url) works.\r\n\r\n## Actual Result\r\n```\r\n>>> response\r\n<Response [401]>\r\n>>> response.content\r\nb\"<?xml version='1.0' encoding='UTF-8'?><Error><Code>AuthenticationRequired</Code><Message>Authentication required.</Message></Error>\"\r\n```\r\n## Reproduction Steps\r\nThe computer access google url with shadowsocks client.\r\n\r\n```python\r\nimport requests\r\nimport urllib.request\r\nurl = 'http://storage.googleapis.com/tfds-data'\r\nresponse = requests.get(url) # It doesn't work.\r\nresponse\r\nresponse.content\r\nurllib.request.urlopen(url).msg # It works.\r\n```\r\n\r\n## System Information\r\n\r\n    $ python -m requests.help\r\n\r\n```\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.7.3\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"19.3.0\",\r\n    \"system\": \"Darwin\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"\",\r\n    \"version\": null\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1000213f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.24.3\"\r\n  },\r\n  \"using_pyopenssl\": false\r\n}\r\n```\r\n\r\nThis command is only available on Requests v2.16.4 and greater. Otherwise,\r\nplease provide some basic information about your system (Python version,\r\noperating system, &c).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5392", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5392/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5392/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5392/events", "html_url": "https://github.com/psf/requests/issues/5392", "id": 584171674, "node_id": "MDU6SXNzdWU1ODQxNzE2NzQ=", "number": 5392, "title": "Requests+Gevnet trigger SSLERROR when use goproxy", "user": {"login": "djerrystyle", "id": 24947060, "node_id": "MDQ6VXNlcjI0OTQ3MDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/24947060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djerrystyle", "html_url": "https://github.com/djerrystyle", "followers_url": "https://api.github.com/users/djerrystyle/followers", "following_url": "https://api.github.com/users/djerrystyle/following{/other_user}", "gists_url": "https://api.github.com/users/djerrystyle/gists{/gist_id}", "starred_url": "https://api.github.com/users/djerrystyle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djerrystyle/subscriptions", "organizations_url": "https://api.github.com/users/djerrystyle/orgs", "repos_url": "https://api.github.com/users/djerrystyle/repos", "events_url": "https://api.github.com/users/djerrystyle/events{/privacy}", "received_events_url": "https://api.github.com/users/djerrystyle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T05:26:44Z", "updated_at": "2020-03-19T09:04:56Z", "closed_at": "2020-03-19T05:44:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary.\r\n\r\n## Expected Result\r\n<Response [200]>\r\n\r\n## Actual Result\r\nHTTPSConnectionPool(host='www.baidu.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert unexpected message')],)\",),))\r\n\r\n## Reproduction Steps\r\n```bash\r\necho \"ignore timeout error!\"\r\necho \"\r\nimport gevent\r\nfrom gevent import monkey, pool\r\nfrom gevent.subprocess import Popen, PIPE\r\nmonkey.patch_all(select=False)\r\nimport requests\r\nrequests.packages.urllib3.disable_warnings()\r\nimport time\r\nimport os\r\n\r\ndef poc():\r\n    return requests.get('https://www.qq.com:443/', proxies={'http': 'http://127.0.0.1:30000', 'https': 'http://127.0.0.1:30000'},verify=False,timeout=5)\r\n\r\nfor i in range(10):\r\n    try:\r\n        print(poc())\r\n    except Exception as e:\r\n        print(e)\r\n\" > error.py\r\n\r\necho \"\r\nimport requests\r\nrequests.packages.urllib3.disable_warnings()\r\nimport time\r\nimport os\r\n\r\ndef poc():\r\n    return requests.get('https://www.qq.com:443/', proxies={'http': 'http://127.0.0.1:30000', 'https': 'http://127.0.0.1:30000'},verify=False,timeout=5)\r\n\r\nfor i in range(10):\r\n    try:\r\n        print(poc())\r\n    except Exception as e:\r\n        print(e)\r\n\" > success.py\r\n\r\npython3 error.py\r\npython3 success.py\r\n```\r\nResult:\r\n```\r\n# python3 error.py\r\n<Response [200]>\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\n\r\n# python3 success.py\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n```\r\n\r\n## System Information\r\n```\r\n1. ubuntu 18.04\r\n2. gevent is lastest\r\n3. request.help:\r\n{\r\n  \"chardet\": {\r\n    \"version\": \"3.0.4\"\r\n  },\r\n  \"cryptography\": {\r\n    \"version\": \"2.8\"\r\n  },\r\n  \"idna\": {\r\n    \"version\": \"2.9\"\r\n  },\r\n  \"implementation\": {\r\n    \"name\": \"CPython\",\r\n    \"version\": \"3.6.8\"\r\n  },\r\n  \"platform\": {\r\n    \"release\": \"4.15.0-45-generic\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"pyOpenSSL\": {\r\n    \"openssl_version\": \"1010104f\",\r\n    \"version\": \"19.1.0\"\r\n  },\r\n  \"requests\": {\r\n    \"version\": \"2.23.0\"\r\n  },\r\n  \"system_ssl\": {\r\n    \"version\": \"1010100f\"\r\n  },\r\n  \"urllib3\": {\r\n    \"version\": \"1.25.8\"\r\n  },\r\n  \"using_pyopenssl\": true\r\n}\r\n```\r\n\r\n## the proxy i use\r\n```bash\r\nwget https://github.com/snail007/goproxy/releases/download/v8.9/proxy-linux-386.tar.gz\r\nmkdir proxy_here\r\ntar -xzvf proxy-linux-386.tar.gz  -C proxy_here\r\ncd proxy_here\r\nchmod +x proxy\r\n./proxy http -p \"127.0.0.1:30000\"\r\n\r\n# you can try other parament for test:\r\n# eg.1 daemon model\r\n# ./proxy http -p \"127.0.0.1:30000\" --daemon --forever --max-conns-rate 0\r\n\r\n# eg.2 https cert model\r\n# proxy keygen -C proxy\r\n# proxy http -p \"127.0.0.1:30000\" -C proxy.crt -K proxy.key -T tls\r\n```\r\nwhen i use eg.2:\r\npython3 error.py\r\n```\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(104, 'Connection reset by peer')))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', RemoteDisconnected('Remote end closed connection without response',)))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(104, 'Connection reset by peer')))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(104, 'Connection reset by peer')))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', RemoteDisconnected('Remote end closed connection without response',)))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', RemoteDisconnected('Remote end closed connection without response',)))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(104, 'Connection reset by peer')))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', RemoteDisconnected('Remote end closed connection without response',)))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(104, 'Connection reset by peer')))\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by ProxyError('Cannot connect to proxy.', ConnectionResetError(104, 'Connection reset by peer')))\r\n```\r\n\r\npython3 success.py\r\n```\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\n<Response [200]>\r\nHTTPSConnectionPool(host='www.qq.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",),))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5390", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5390/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5390/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5390/events", "html_url": "https://github.com/psf/requests/issues/5390", "id": 583126226, "node_id": "MDU6SXNzdWU1ODMxMjYyMjY=", "number": 5390, "title": "[Question/Suggest] Session requests return", "user": {"login": "Rasko1", "id": 61156046, "node_id": "MDQ6VXNlcjYxMTU2MDQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/61156046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rasko1", "html_url": "https://github.com/Rasko1", "followers_url": "https://api.github.com/users/Rasko1/followers", "following_url": "https://api.github.com/users/Rasko1/following{/other_user}", "gists_url": "https://api.github.com/users/Rasko1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rasko1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rasko1/subscriptions", "organizations_url": "https://api.github.com/users/Rasko1/orgs", "repos_url": "https://api.github.com/users/Rasko1/repos", "events_url": "https://api.github.com/users/Rasko1/events{/privacy}", "received_events_url": "https://api.github.com/users/Rasko1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T16:08:44Z", "updated_at": "2020-04-03T18:24:35Z", "closed_at": "2020-04-03T18:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "As most of the people who will make requests to web sites will need to have the source, why don't you implement an optional parameter so when creating the session object we can set it to true so we have an attribute of the object that store the return of the last requests, with that we wouldn't need to create a new variable each time, that will save lot of times for coders and is easy to implement (from my point of view), I can do a PR if you think this suggestion is Good. Of course, I could modify my local version to do that but that wouldn't make any sense when sharing to others", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5389", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5389/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5389/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5389/events", "html_url": "https://github.com/psf/requests/issues/5389", "id": 582376408, "node_id": "MDU6SXNzdWU1ODIzNzY0MDg=", "number": 5389, "title": "Close connection immediately after proxies fail.", "user": {"login": "ZeRoss0000", "id": 48416425, "node_id": "MDQ6VXNlcjQ4NDE2NDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/48416425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZeRoss0000", "html_url": "https://github.com/ZeRoss0000", "followers_url": "https://api.github.com/users/ZeRoss0000/followers", "following_url": "https://api.github.com/users/ZeRoss0000/following{/other_user}", "gists_url": "https://api.github.com/users/ZeRoss0000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZeRoss0000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZeRoss0000/subscriptions", "organizations_url": "https://api.github.com/users/ZeRoss0000/orgs", "repos_url": "https://api.github.com/users/ZeRoss0000/repos", "events_url": "https://api.github.com/users/ZeRoss0000/events{/privacy}", "received_events_url": "https://api.github.com/users/ZeRoss0000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-16T15:13:38Z", "updated_at": "2020-03-16T22:52:43Z", "closed_at": "2020-03-16T22:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using proxy list that include proxies that sometimes stop working and that slow down the process a lot even if i'm using timeout is there anyway to bypass that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5387", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5387/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5387/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5387/events", "html_url": "https://github.com/psf/requests/issues/5387", "id": 579812944, "node_id": "MDU6SXNzdWU1Nzk4MTI5NDQ=", "number": 5387, "title": "kali linux mimtf installation error", "user": {"login": "dr55555", "id": 62097137, "node_id": "MDQ6VXNlcjYyMDk3MTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/62097137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dr55555", "html_url": "https://github.com/dr55555", "followers_url": "https://api.github.com/users/dr55555/followers", "following_url": "https://api.github.com/users/dr55555/following{/other_user}", "gists_url": "https://api.github.com/users/dr55555/gists{/gist_id}", "starred_url": "https://api.github.com/users/dr55555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dr55555/subscriptions", "organizations_url": "https://api.github.com/users/dr55555/orgs", "repos_url": "https://api.github.com/users/dr55555/repos", "events_url": "https://api.github.com/users/dr55555/events{/privacy}", "received_events_url": "https://api.github.com/users/dr55555/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T09:44:58Z", "updated_at": "2020-03-12T14:56:54Z", "closed_at": "2020-03-12T14:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Received response with content-encoding: gzip, but failed to decode it  error -3 while installing mimtf \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5385", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5385/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5385/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5385/events", "html_url": "https://github.com/psf/requests/issues/5385", "id": 579680368, "node_id": "MDU6SXNzdWU1Nzk2ODAzNjg=", "number": 5385, "title": "Segmentation fault on response.json()", "user": {"login": "akshayamaldhure", "id": 8114665, "node_id": "MDQ6VXNlcjgxMTQ2NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8114665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshayamaldhure", "html_url": "https://github.com/akshayamaldhure", "followers_url": "https://api.github.com/users/akshayamaldhure/followers", "following_url": "https://api.github.com/users/akshayamaldhure/following{/other_user}", "gists_url": "https://api.github.com/users/akshayamaldhure/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshayamaldhure/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshayamaldhure/subscriptions", "organizations_url": "https://api.github.com/users/akshayamaldhure/orgs", "repos_url": "https://api.github.com/users/akshayamaldhure/repos", "events_url": "https://api.github.com/users/akshayamaldhure/events{/privacy}", "received_events_url": "https://api.github.com/users/akshayamaldhure/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-12T04:12:59Z", "updated_at": "2020-03-23T06:37:09Z", "closed_at": "2020-03-12T04:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the nearly full trace of the issue.\r\n\r\nThread 0x00007f6c37fff700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c54e79700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c5567a700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c55e7b700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c566bc700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c56ebd700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c576be700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c57f7f700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 67 in _worker\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c6ced6700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 463 in _handle_results\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c6d6d7700 (most recent call first):\r\n  File \"/usr/lib/python3.6/threading.py\", line 295 in wait\r\n  File \"/usr/lib/python3.6/queue.py\", line 164 in get\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 415 in _handle_tasks\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nThread 0x00007f6c6ded8700 (most recent call first):\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 406 in _handle_workers\r\n  File \"/usr/lib/python3.6/threading.py\", line 864 in run\r\n  File \"/usr/lib/python3.6/threading.py\", line 916 in _bootstrap_inner\r\n  File \"/usr/lib/python3.6/threading.py\", line 884 in _bootstrap\r\n\r\nCurrent thread 0x00007f6c6e6d9700 (most recent call first):\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 355 in raw_decode\r\n  File \"/usr/lib/python3.6/json/decoder.py\", line 339 in decode\r\n  File \"/usr/lib/python3.6/json/__init__.py\", line 354 in loads\r\n  File \"/var/lib/jenkins/.local/lib/python3.6/site-packages/requests/models.py\", line 897 in json\r\n  **File \"/var/lib/jenkins/workspace/my_job/consumers/api_helpers/some_helper.py\", line 13 in hit_an_api_and_get_some_status**\r\n\r\nAt the last line indicated in bold, my code is this:\r\n\r\n`return response.json()[\"status\"] if response.status_code == 200 else None`\r\n\r\n## Expected Result\r\n\r\nThere should be no segmentation fault.\r\n\r\n## Actual Result\r\n\r\nMy code fails with a segmentation fault.\r\n\r\n## Reproduction Steps\r\n\r\n```python\r\nimport requests\r\n\r\n```\r\n\r\n(the code is indicated above)\r\n\r\n## System Information\r\nrequests version 2.22.0\r\nPython version 3.6 running on Ubuntu 16.04 LTS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5384", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5384/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5384/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5384/events", "html_url": "https://github.com/psf/requests/issues/5384", "id": 579552189, "node_id": "MDU6SXNzdWU1Nzk1NTIxODk=", "number": 5384, "title": "request.get(url, proxies=proxies) is possibly sending CONNECT as two TCP transmission, breaking custom readers and TLS handshakes. ", "user": {"login": "zkynet", "id": 20964930, "node_id": "MDQ6VXNlcjIwOTY0OTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/20964930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkynet", "html_url": "https://github.com/zkynet", "followers_url": "https://api.github.com/users/zkynet/followers", "following_url": "https://api.github.com/users/zkynet/following{/other_user}", "gists_url": "https://api.github.com/users/zkynet/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkynet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkynet/subscriptions", "organizations_url": "https://api.github.com/users/zkynet/orgs", "repos_url": "https://api.github.com/users/zkynet/repos", "events_url": "https://api.github.com/users/zkynet/events{/privacy}", "received_events_url": "https://api.github.com/users/zkynet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-11T21:20:33Z", "updated_at": "2020-08-04T16:17:31Z", "closed_at": "2020-08-04T15:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, I have been experiencing something strange when using python to send requests to proxies. The python library is either slow(unlikely) or is sending the last two \\r\\n of the CONNECT request as a seperate transmission somehow. \r\n\r\n# Expected Result\r\n\u276f python test.py\r\n{\r\n  \"ip\": \"82.76.235.76\",\r\n  \"hostname\": \"82-76-235-76.rdsnet.ro\",\r\n  \"city\": \"Bucharest\",\r\n  \"region\": \"Bucure\u015fti\",\r\n  \"country\": \"RO\",\r\n  \"loc\": \"44.4323,26.1063\",\r\n  \"org\": \"AS8708 RCS & RDS SA\",\r\n  \"postal\": \"020011\",\r\n  \"timezone\": \"Europe/Bucharest\",\r\n  \"readme\": \"https://ipinfo.io/missingauth\"\r\n}\r\n\r\n\r\n\r\n# Actual Result\r\n\r\n\u276f python test.py\r\nTraceback (most recent call last):\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/packages/urllib3/contrib/pyopenssl.py\", line 348, in ssl_wrap_socket\r\n    cnx.do_handshake()\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/OpenSSL/SSL.py\", line 1934, in do_handshake\r\n    self._raise_ssl_error(self._ssl, result)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/OpenSSL/SSL.py\", line 1671, in _raise_ssl_error\r\n    _raise_current_error()\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/OpenSSL/_util.py\", line 54, in exception_from_error_queue\r\n    raise exception_type(errors)\r\nOpenSSL.SSL.Error: [('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 589, in urlopen\r\n    self._prepare_proxy(conn)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 797, in _prepare_proxy\r\n    conn.connect()\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/packages/urllib3/connection.py\", line 289, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/packages/urllib3/contrib/pyopenssl.py\", line 355, in ssl_wrap_socket\r\n    raise ssl.SSLError('bad handshake: %r' % e)\r\nssl.SSLError: (\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')])\",)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/adapters.py\", line 423, in send\r\n    timeout=timeout\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 621, in urlopen\r\n    raise SSLError(e)\r\nrequests.packages.urllib3.exceptions.SSLError: (\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')])\",)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 8, in <module>\r\n    response = requests.get(\"https://ipinfo.io/json\", proxies=proxies)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/api.py\", line 70, in get\r\n    return request('get', url, params=params, **kwargs)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/api.py\", line 56, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/sessions.py\", line 475, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/sessions.py\", line 596, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/zkynet/.local/lib/python3.7/site-packages/requests/adapters.py\", line 497, in send\r\n    raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: (\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')])\",)\r\n\r\n\r\n\r\n# Reproduction Steps\r\n```python\r\nimport requests\r\nproxies = {\"https\": \"http://IP:PORT\"}\r\nresponse = requests.get(\"https://ipinfo.io/json\", proxies=proxies)\r\nprint(response.text)\r\n```\r\n# What request sends to the proxy server:\r\n1. Transmission: \r\nCONNECT ipinfo.io:443 HTTP/1.0\\r\\n\r\n **67 79 78 78 69 67 84 32 105 112 105 110 102 111 46 105 111 58 52 52 51 32 72 84 84 80 47 49 46 48 13 10**\r\n2. Transmission:\r\n\\r\\n\r\n**13 10**\r\n\r\n# What should have been sent to the proxy server in a single transmission:\r\n **67 79 78 78 69 67 84 32 105 112 105 110 102 111 46 105 111 58 52 52 51 32 72 84 84 80 47 49 46 48 13 10 13 10**\r\nCONNECT ipinfo.io:443 HTTP/1.0\\r\\n\\r\\n\r\n\r\n\r\n\r\n\r\n## System Information\r\n\r\n$ python -m requests.help ( I could not execute this command for some reason)\r\n\r\n**here is my version info:** \r\n```\r\n\u276f pip install requests\r\nDefaulting to user installation because normal site-packages is not writeable\r\nRequirement already satisfied: requests in /home/zkynet/.local/lib/python3.7/site-packages (2.11.1)\r\n\r\n\u276f python\r\nPython 3.7.6 (default, Jan 30 2020, 09:44:41) \r\n[GCC 9.2.1 20190827 (Red Hat 9.2.1-1)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> \r\n \r\n```\r\n\r\n# Note on version\r\nI did upgrade to 2.16.4 a bit later and found the same behaviour\r\n`\r\n pip3.7 install  'requests==2.16.4'\r\nDefaulting to user installation because normal site-packages is not writeable\r\nCollecting requests==2.16.4\r\n  Downloading requests-2.16.4-py2.py3-none-any.whl (87 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 87 kB 603 kB/s \r\nCollecting idna<2.6,>=2.5\r\n  Downloading idna-2.5-py2.py3-none-any.whl (55 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 55 kB 2.9 MB/s \r\nRequirement already satisfied: certifi>=2017.4.17 in ./.local/lib/python3.7/site-packages (from requests==2.16.4) (2019.11.28)\r\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/lib/python3.7/site-packages (from requests==2.16.4) (3.0.4)\r\nCollecting urllib3<1.22,>=1.21.1\r\n  Downloading urllib3-1.21.1-py2.py3-none-any.whl (131 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 131 kB 5.5 MB/s \r\nInstalling collected packages: idna, urllib3, requests\r\nSuccessfully installed idna-2.5 requests-2.16.4 urllib3-1.21.1\r\n`\r\n\r\n# So let's disect this \r\nWhat is happening is that this library is first sending the connect request and then somehow in a seperate transmission you are sending the last \\r\\n (13 10) and it's breaking the TLS handshake because the receiving end thinks it's the start of the handshake. \r\n\r\n## Possible reasons why this could be happening\r\n1. You might be parsing/trying to inject something inn between the CONNECT and the closing tag ? maybe headers, cookies .. something like that. It could be causing a delay in the seinding of the closing tag. This forces TCP to split your transmission into two parts. \r\n2. Python might simple be slow at putting these bytes on the wire, causing my app to think the last 13 10 are a part of another series ( highly unlikely )\r\n3. You might be putting some kind of 0 bytes in between the first \\r\\n and the last \\r\\n. Many TCP readers consider the 0 byte an EOF or a delimiter between messages. ( I am too lazy to open wireshark and dig through the packets to verify this one since I also think it's highly unlikely )\r\n\r\nI personally suspect you might be doing 2x writes to the connection. The reason why I think so is because NO OTHER tools exhibits this behaviour. I've tested browsers, proxy plugins, golang, nodejs, bash, curl, wget.. to name a few. \r\n\r\n**Disclaimer: I know I can easily work around this bit either waiting for the second \\r\\n or just dismissing it when it arrives as the second transmission. But making special cases is something that shakes me to the bone.** \r\n\r\n# Where to go from here\r\nI would love it if someone could look into this a little more. I don't know python and it would take me forever to try to understand this library. \r\n\r\n# What I (and possibly others) would LOVE to see happen\r\nIf you could compose your full CONNECT method and send it in a single transmission over the wire, you would save a lot of people a lot of time in the future. Not only that but make sure any developer making their own custom TCP listener/proxy service could easily integrade with your package without having to do some special cases. \r\n\r\nPlease let me know if I can help in any way, Peace and Love. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5383", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5383/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5383/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5383/events", "html_url": "https://github.com/psf/requests/issues/5383", "id": 579289675, "node_id": "MDU6SXNzdWU1NzkyODk2NzU=", "number": 5383, "title": "How can call my C# rest api using requests lib?", "user": {"login": "SaddamBInSyed", "id": 10062672, "node_id": "MDQ6VXNlcjEwMDYyNjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/10062672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaddamBInSyed", "html_url": "https://github.com/SaddamBInSyed", "followers_url": "https://api.github.com/users/SaddamBInSyed/followers", "following_url": "https://api.github.com/users/SaddamBInSyed/following{/other_user}", "gists_url": "https://api.github.com/users/SaddamBInSyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaddamBInSyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaddamBInSyed/subscriptions", "organizations_url": "https://api.github.com/users/SaddamBInSyed/orgs", "repos_url": "https://api.github.com/users/SaddamBInSyed/repos", "events_url": "https://api.github.com/users/SaddamBInSyed/events{/privacy}", "received_events_url": "https://api.github.com/users/SaddamBInSyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T14:05:44Z", "updated_at": "2020-03-11T16:54:34Z", "closed_at": "2020-03-11T16:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to consume my existing webapi (.NET) from python?\r\n\r\nHow can I do the same?\r\n\r\nplease advise", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5381", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5381/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5381/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5381/events", "html_url": "https://github.com/psf/requests/issues/5381", "id": 578126536, "node_id": "MDU6SXNzdWU1NzgxMjY1MzY=", "number": 5381, "title": "timeout exception: session.get() vs requests.get() behavior discrepancy", "user": {"login": "lakokaz", "id": 31391912, "node_id": "MDQ6VXNlcjMxMzkxOTEy", "avatar_url": "https://avatars0.githubusercontent.com/u/31391912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lakokaz", "html_url": "https://github.com/lakokaz", "followers_url": "https://api.github.com/users/lakokaz/followers", "following_url": "https://api.github.com/users/lakokaz/following{/other_user}", "gists_url": "https://api.github.com/users/lakokaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lakokaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lakokaz/subscriptions", "organizations_url": "https://api.github.com/users/lakokaz/orgs", "repos_url": "https://api.github.com/users/lakokaz/repos", "events_url": "https://api.github.com/users/lakokaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lakokaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-09T19:03:01Z", "updated_at": "2020-04-10T18:55:30Z", "closed_at": "2020-04-10T18:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "When testing my code for its behavior in case of time-outs, I have run into the following observation. When I issue my request through:\r\n\r\n***A.*** `requests.get('http://xxx.yy.com:8080/', timeout=(10.0001,0.000001))`, the stack-trace and the Exception triggered look as such:\r\n\r\n    /.../anaconda3/lib/python3.4/site-packages/requests/sessions.py in send(self, request, **kwargs)\r\n        571\r\n        572         # Send the request\r\n    --> 573         r = adapter.send(request, **kwargs)\r\n        574\r\n        575         # Total elapsed time of the request (approximately)\r\n    \r\n    /.../anaconda3/lib/python3.4/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\r\n        431                 raise SSLError(e, request=request)\r\n        432             elif isinstance(e, ReadTimeoutError):\r\n    --> 433                 raise ReadTimeout(e, request=request)\r\n        434             else:\r\n        435                 raise\r\n    \r\n    ReadTimeout: HTTPConnectionPool(host='xxx.yy.com', port=8080): Read timed out. (read timeout=1e-06)\r\n\r\n***B.*** `session.get('http://xxx.yy.com:8080/', timeout=(10.0001,0.000001))`, the stack-trace and the Exception triggered look as such:\r\n\r\n    /.../anaconda3/lib/python3.4/site-packages/requests/sessions.py in send(self, request, **kwargs)\r\n        571\r\n        572         # Send the request\r\n    --> 573         r = adapter.send(request, **kwargs)\r\n        574\r\n        575         # Total elapsed time of the request (approximately)\r\n    \r\n    /.../anaconda3/lib/python3.4/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\r\n        422                 raise RetryError(e, request=request)\r\n        423\r\n    --> 424             raise ConnectionError(e, request=request)\r\n        425\r\n        426         except _ProxyError as e:\r\n    \r\n    ConnectionError: HTTPConnectionPool(host='xxx.yy.com', port=8080): Max retries exceeded with url: / (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='xxx.yy.com', port=8080): Read timed out. (read timeout=1e-06)\",))\r\n\r\nThis is however to a fundamentally different end-result in terms of Exception handling, as - surprisingly ! - it looks as if when using the `session.get`, one needs to catch `ConnectionError` rather than `ReadTimeout`? This is quite counter intuitive. Can someone advise? Why the difference, and how/what to catch in the code? Is that a bug?\r\n\r\nThis is for requests 2.7.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5378", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5378/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5378/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5378/events", "html_url": "https://github.com/psf/requests/issues/5378", "id": 577105122, "node_id": "MDU6SXNzdWU1NzcxMDUxMjI=", "number": 5378, "title": "Hostname resolution slow", "user": {"login": "LsHallo", "id": 22171518, "node_id": "MDQ6VXNlcjIyMTcxNTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/22171518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LsHallo", "html_url": "https://github.com/LsHallo", "followers_url": "https://api.github.com/users/LsHallo/followers", "following_url": "https://api.github.com/users/LsHallo/following{/other_user}", "gists_url": "https://api.github.com/users/LsHallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/LsHallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LsHallo/subscriptions", "organizations_url": "https://api.github.com/users/LsHallo/orgs", "repos_url": "https://api.github.com/users/LsHallo/repos", "events_url": "https://api.github.com/users/LsHallo/events{/privacy}", "received_events_url": "https://api.github.com/users/LsHallo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T18:35:53Z", "updated_at": "2020-03-11T00:18:02Z", "closed_at": "2020-03-11T00:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When making a request to a hostname it is very slow. In my case I have multiple docker containers with different services that communicate using requests. Every container has it's own cherrypy server and is adressed like so: `requests.get('http://main:8083')` or `requests.get('http://controller:8082')`. The docker version is `Docker version 18.03.1-ce, build 9ee9f40` on Ubuntu 18.04 LTS. All containers are part of a compose stack and have a common network created by docker-compose.\r\n\r\nI've written a small bench application since the problem also exists on my host machine running windows and trying to get a localhost page.\r\n\r\nThe request work just fine when using the ip address (127.0.0.1) in this case but that is not an option since the ip's of the containers might change.\r\n\r\nWeirdly however I don't have the problem on the host machine of the docker daemon. If I run my bench program on there (Ubuntu 18.04 LTS) it works just fine with `localhost` and `127.0.0.1`.\r\n\r\nbench.py\r\n```python\r\nimport http.client\r\nfrom math import floor\r\nimport urllib3\r\nimport requests\r\nfrom time import time\r\nimport socket\r\n\r\n\r\ndef print_with_dashes(text: str, length: int = 50, symbol: str = '-'):\r\n    text_len = len(text)\r\n    part = length - text_len\r\n    if part % 2 == 1:\r\n        part = floor(part / 2)\r\n        print(symbol * part + text + symbol * part)\r\n    else:\r\n        part = floor(part / 2)\r\n        print(symbol * part + text + symbol * (part - 1))\r\n\r\n\r\nprint_with_dashes('urllib3')\r\nurllib_3 = urllib3.PoolManager()\r\npre = time()\r\nurllib_3.request('GET', 'http://localhost')\r\nprint('localhost:', time() - pre)\r\npre = time()\r\nurllib_3.request('GET', 'http://127.0.0.1')\r\nprint('127.0.0.1:', time() - pre)\r\n\r\n# ---------------------------------------------------\r\n\r\nprint_with_dashes('requests')\r\npre = time()\r\nrequests.get('http://localhost')\r\nprint('localhost:', time() - pre)\r\npre = time()\r\nrequests.get('http://127.0.0.1')\r\nprint('127.0.0.1:', time() - pre)\r\n\r\n# ---------------------------------------------------\r\n\r\nprint_with_dashes('requests with session')\r\nsession = requests.session()\r\nsession.trust_env = False\r\nsession.proxies = {\r\n    'http': None\r\n}\r\npre = time()\r\nsession.get('http://localhost')\r\nprint('localhost:', time() - pre)\r\npre = time()\r\nsession.get('http://127.0.0.1')\r\nprint('127.0.0.1:', time() - pre)\r\n\r\n# ---------------------------------------------------\r\n\r\n# testing if it might be caching\r\nprint_with_dashes('requests repeated x3')\r\npre = time()\r\nfor i in range(0, 3):\r\n    requests.get('http://localhost')\r\nprint('localhost:', time() - pre)\r\npre = time()\r\nfor i in range(0, 3):\r\n    requests.get('http://127.0.0.1')\r\nprint('127.0.0.1:', time() - pre)\r\n\r\n# ---------------------------------------------------\r\n\r\nprint_with_dashes('http.client.HTTPConnection')\r\npre = time()\r\nconn = http.client.HTTPConnection(\"localhost\", 80)\r\nconn.request(\"GET\", \"/\")\r\nprint('localhost:', time() - pre)\r\npre = time()\r\nconn = http.client.HTTPConnection(\"127.0.0.1\", 80)\r\nconn.request(\"GET\", \"/\")\r\nprint('127.0.0.1:', time() - pre)\r\n\r\n# ---------------------------------------------------\r\n\r\nprint()\r\nprint_with_dashes('Possible Solutions', symbol='#')\r\nprint_with_dashes('socket.gethostbyname')\r\npre = time()\r\naddress = socket.gethostbyname('localhost')\r\nrequests.get('http://' + address)\r\nprint('localhost:', time() - pre)\r\npre = time()\r\naddress = socket.gethostbyname('127.0.0.1')\r\nrequests.get('http://' + address)\r\nprint('127.0.0.1:', time() - pre)\r\n```\r\n\r\nserver.py\r\n```python\r\nimport cherrypy\r\n\r\n\r\nclass HelloWorld(object):\r\n    @cherrypy.expose\r\n    def index(self):\r\n        return \"Hello World\"\r\n\r\n\r\ncherrypy.config.update({'server.socket_port': 80})\r\ncherrypy.quickstart(HelloWorld())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/requests/issues/5377", "repository_url": "https://api.github.com/repos/psf/requests", "labels_url": "https://api.github.com/repos/psf/requests/issues/5377/labels{/name}", "comments_url": "https://api.github.com/repos/psf/requests/issues/5377/comments", "events_url": "https://api.github.com/repos/psf/requests/issues/5377/events", "html_url": "https://github.com/psf/requests/issues/5377", "id": 576693086, "node_id": "MDU6SXNzdWU1NzY2OTMwODY=", "number": 5377, "title": "Bug", "user": {"login": "yanz-androidify", "id": 56470643, "node_id": "MDQ6VXNlcjU2NDcwNjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/56470643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanz-androidify", "html_url": "https://github.com/yanz-androidify", "followers_url": "https://api.github.com/users/yanz-androidify/followers", "following_url": "https://api.github.com/users/yanz-androidify/following{/other_user}", "gists_url": "https://api.github.com/users/yanz-androidify/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanz-androidify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanz-androidify/subscriptions", "organizations_url": "https://api.github.com/users/yanz-androidify/orgs", "repos_url": "https://api.github.com/users/yanz-androidify/repos", "events_url": "https://api.github.com/users/yanz-androidify/events{/privacy}", "received_events_url": "https://api.github.com/users/yanz-androidify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-06T04:37:12Z", "updated_at": "2020-03-06T04:37:30Z", "closed_at": "2020-03-06T04:37:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Requests is not accepting feature requests at this time.\r\n", "performed_via_github_app": null, "score": 1.0}]}