{"total_count": 38, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/69", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/69/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/69/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/69", "id": 638123725, "node_id": "MDU6SXNzdWU2MzgxMjM3MjU=", "number": 69, "title": "Locals are shared between clients", "user": {"login": "louie-github", "id": 30176969, "node_id": "MDQ6VXNlcjMwMTc2OTY5", "avatar_url": "https://avatars3.githubusercontent.com/u/30176969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louie-github", "html_url": "https://github.com/louie-github", "followers_url": "https://api.github.com/users/louie-github/followers", "following_url": "https://api.github.com/users/louie-github/following{/other_user}", "gists_url": "https://api.github.com/users/louie-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/louie-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louie-github/subscriptions", "organizations_url": "https://api.github.com/users/louie-github/orgs", "repos_url": "https://api.github.com/users/louie-github/repos", "events_url": "https://api.github.com/users/louie-github/events{/privacy}", "received_events_url": "https://api.github.com/users/louie-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-13T08:42:23Z", "updated_at": "2020-06-13T10:28:53Z", "closed_at": "2020-06-13T10:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! As of now, I'm using this code to start a remote server:\r\n\r\n```\r\nasync def run_backdoor(bot=None):\r\n        server_backdoor = await aioconsole.server.start_console_server(\r\n            host=\"0.0.0.0\", port=[PORT], locals={\"bot\": bot}\r\n        )\r\n````\r\nI use `start_console_server` instead of `start_interactive_server` so I can pass `locals`.\r\n\r\nHowever, when I use this server, when I connect to it using `rlwrap nc [IP_ADDR] [PORT]`, the `print` function does not work:\r\n\r\n```\r\nPython 3.7.3 (default, Dec 20 2019, 18:57:59)\r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n---\r\nThis console is running in an asyncio event loop.\r\nIt allows you to wait for coroutines using the '{0}' syntax.\r\nTry: await asyncio.sleep(1, result=3)\r\n---\r\n>>> print(\"yes\")\r\n>>>\r\n```\r\n\r\nI also attempted it without using rlwrap by executing `nc [IP_ADDR] [PORT]` but the behavior stayed the same. I've seen issue #40, but the problem persists here.\r\n\r\nAny help? Is it the custom `locals` variable that's giving it trouble?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/67", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/67/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/67/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/67", "id": 636363721, "node_id": "MDU6SXNzdWU2MzYzNjM3MjE=", "number": 67, "title": "@asyncio.coroutine is deprecated, switch to async def", "user": {"login": "gjcarneiro", "id": 2197096, "node_id": "MDQ6VXNlcjIxOTcwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2197096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjcarneiro", "html_url": "https://github.com/gjcarneiro", "followers_url": "https://api.github.com/users/gjcarneiro/followers", "following_url": "https://api.github.com/users/gjcarneiro/following{/other_user}", "gists_url": "https://api.github.com/users/gjcarneiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjcarneiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjcarneiro/subscriptions", "organizations_url": "https://api.github.com/users/gjcarneiro/orgs", "repos_url": "https://api.github.com/users/gjcarneiro/repos", "events_url": "https://api.github.com/users/gjcarneiro/events{/privacy}", "received_events_url": "https://api.github.com/users/gjcarneiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T15:53:36Z", "updated_at": "2020-06-10T17:15:17Z", "closed_at": "2020-06-10T17:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see tons of warnings like:\r\n\r\n```\r\n/env/lib/python3.8/site-packages/aioconsole/stream.py:167\r\n  /env/lib/python3.8/site-packages/aioconsole/stream.py:167: DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def get_standard_streams(*, cache={}, use_stderr=False, loop=None):\r\n```\r\n\r\n`async def` is supported since Python 3.5, which is pretty ancient by now, so, should be pretty uncontroversial to require Python >= 3.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/65", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/65/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/65/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/65", "id": 619893794, "node_id": "MDU6SXNzdWU2MTk4OTM3OTQ=", "number": 65, "title": "Pressing ctrl-d when running interact(stop=False) in a loop causes unexpected behaviour", "user": {"login": "iExalt", "id": 7889894, "node_id": "MDQ6VXNlcjc4ODk4OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7889894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iExalt", "html_url": "https://github.com/iExalt", "followers_url": "https://api.github.com/users/iExalt/followers", "following_url": "https://api.github.com/users/iExalt/following{/other_user}", "gists_url": "https://api.github.com/users/iExalt/gists{/gist_id}", "starred_url": "https://api.github.com/users/iExalt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iExalt/subscriptions", "organizations_url": "https://api.github.com/users/iExalt/orgs", "repos_url": "https://api.github.com/users/iExalt/repos", "events_url": "https://api.github.com/users/iExalt/events{/privacy}", "received_events_url": "https://api.github.com/users/iExalt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 274732049, "node_id": "MDU6TGFiZWwyNzQ3MzIwNDk=", "url": "https://api.github.com/repos/vxgmichel/aioconsole/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-18T04:11:40Z", "updated_at": "2020-05-19T08:44:49Z", "closed_at": "2020-05-19T08:44:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python 3.8, aioconsole 0.1.16\r\n\r\nContrived example:\r\n```\r\nimport asyncio\r\n\r\nfrom aioconsole import interact\r\n\r\n\r\nasync def test():\r\n    while True:\r\n        await interact(stop=False)\r\n        asyncio.sleep(1)\r\n\r\nasyncio.run(test())\r\n\r\n```\r\n\r\nExpected behaviour:\r\n- I'm running `await interact(stop=False)` in a `while True:` loop as I don't want the \"debug console\" to close on stray ctrl-d presses. \r\n- I expect that the console will quit, and after a short time another console will be ready to be interacted with\r\n\r\nObserved behaviour:\r\n- When I quit using `quit()` or `exit()` the next console spawns fine and I can interact with it perfectly fine\r\n- When I quit using ctrl-d, the console startup message is spammed without any further interaction and I can't interact with the successive consoles at all\r\n\r\nOutput:\r\n```\r\nPython 3.8.0 (default, Oct 28 2019, 16:14:01)\r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n---\r\nThis console is running in an asyncio event loop.\r\nIt allows you to wait for coroutines using the 'await' syntax.\r\nTry: await asyncio.sleep(1, result=3)\r\n---\r\n>>>\r\nPython 3.8.0 (default, Oct 28 2019, 16:14:01)\r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n---\r\nThis console is running in an asyncio event loop.\r\nIt allows you to wait for coroutines using the 'await' syntax.\r\nTry: await asyncio.sleep(1, result=3)\r\n---\r\n>>>\r\n```\r\nand so on and so forth", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/60", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/60/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/60/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/60", "id": 581700577, "node_id": "MDU6SXNzdWU1ODE3MDA1Nzc=", "number": 60, "title": "Module `aioconsole.code` might conflict with the `code` module from the standard library", "user": {"login": "ronaaronson", "id": 9965463, "node_id": "MDQ6VXNlcjk5NjU0NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9965463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronaaronson", "html_url": "https://github.com/ronaaronson", "followers_url": "https://api.github.com/users/ronaaronson/followers", "following_url": "https://api.github.com/users/ronaaronson/following{/other_user}", "gists_url": "https://api.github.com/users/ronaaronson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronaaronson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronaaronson/subscriptions", "organizations_url": "https://api.github.com/users/ronaaronson/orgs", "repos_url": "https://api.github.com/users/ronaaronson/repos", "events_url": "https://api.github.com/users/ronaaronson/events{/privacy}", "received_events_url": "https://api.github.com/users/ronaaronson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-15T14:40:59Z", "updated_at": "2020-03-17T14:39:21Z", "closed_at": "2020-03-16T18:19:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running Python 3.6.4 under Windows 10 and when I try to import aioconsole I mmediately get the following error:\r\n\r\n>>> import aioconsole\r\n2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\aioconsole\\__init__.py\", line 7, in <module>\r\n    from .code import AsynchronousConsole, interact\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\aioconsole\\code.py\", line 36, in <module>\r\n    class AsynchronousConsole(code.InteractiveConsole):\r\nAttributeError: module 'code' has no attribute 'InteractiveConsole'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/59", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/59/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/59/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/59", "id": 580082350, "node_id": "MDU6SXNzdWU1ODAwODIzNTA=", "number": 59, "title": "Fails to freeze with cx_freeze", "user": {"login": "Berserker66", "id": 3189725, "node_id": "MDQ6VXNlcjMxODk3MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3189725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Berserker66", "html_url": "https://github.com/Berserker66", "followers_url": "https://api.github.com/users/Berserker66/followers", "following_url": "https://api.github.com/users/Berserker66/following{/other_user}", "gists_url": "https://api.github.com/users/Berserker66/gists{/gist_id}", "starred_url": "https://api.github.com/users/Berserker66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Berserker66/subscriptions", "organizations_url": "https://api.github.com/users/Berserker66/orgs", "repos_url": "https://api.github.com/users/Berserker66/repos", "events_url": "https://api.github.com/users/Berserker66/events{/privacy}", "received_events_url": "https://api.github.com/users/Berserker66/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-12T17:04:57Z", "updated_at": "2020-03-17T14:39:35Z", "closed_at": "2020-03-16T18:19:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"__startup__.py\", line 40, in run\r\n  File \"Console.py\", line 37, in run\r\n  File \"MultiClient.py\", line 16, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\r\n  File \"<frozen zipimport>\", line 259, in load_module\r\n  File \"aioconsole\\__init__.py\", line 7, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\r\n  File \"<frozen zipimport>\", line 259, in load_module\r\n  File \"aioconsole\\code.py\", line 36, in <module>\r\n  File \"aioconsole\\code.py\", line 67, in AsynchronousConsole\r\nNameError: name 'help' is not defined\r\n```\r\n\r\nLine 67 in aioconsole is:\r\n\r\n```\r\n    @functools.wraps(help)\r\n    def help(self, obj):\r\n        self.print(pydoc.render_doc(obj))\r\n```\r\n\r\nI'm guessing the help command is not available when frozen. Would it be possible to make that command optional or some other solution?\r\n\r\nDon't need the command myself but it makes automatic builds of the software fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/56", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/56/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/56/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/56", "id": 452601677, "node_id": "MDU6SXNzdWU0NTI2MDE2Nzc=", "number": 56, "title": "Recognize and load code from PYTHONSTARTUP envar", "user": {"login": "vEpiphyte", "id": 26100278, "node_id": "MDQ6VXNlcjI2MTAwMjc4", "avatar_url": "https://avatars2.githubusercontent.com/u/26100278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vEpiphyte", "html_url": "https://github.com/vEpiphyte", "followers_url": "https://api.github.com/users/vEpiphyte/followers", "following_url": "https://api.github.com/users/vEpiphyte/following{/other_user}", "gists_url": "https://api.github.com/users/vEpiphyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/vEpiphyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vEpiphyte/subscriptions", "organizations_url": "https://api.github.com/users/vEpiphyte/orgs", "repos_url": "https://api.github.com/users/vEpiphyte/repos", "events_url": "https://api.github.com/users/vEpiphyte/events{/privacy}", "received_events_url": "https://api.github.com/users/vEpiphyte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-05T16:34:22Z", "updated_at": "2019-08-26T13:18:42Z", "closed_at": "2019-08-26T13:18:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to add support for certain environment variables when starting a interactive instance of aioconsole, such as PYTHONSTARTUP ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/54", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/54/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/54/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/54", "id": 442803032, "node_id": "MDU6SXNzdWU0NDI4MDMwMzI=", "number": 54, "title": "\"RuntimeError: Event loop is closed\" when call aprint with pytest-repeat", "user": {"login": "jitbasemartin", "id": 23301195, "node_id": "MDQ6VXNlcjIzMzAxMTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/23301195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jitbasemartin", "html_url": "https://github.com/jitbasemartin", "followers_url": "https://api.github.com/users/jitbasemartin/followers", "following_url": "https://api.github.com/users/jitbasemartin/following{/other_user}", "gists_url": "https://api.github.com/users/jitbasemartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jitbasemartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jitbasemartin/subscriptions", "organizations_url": "https://api.github.com/users/jitbasemartin/orgs", "repos_url": "https://api.github.com/users/jitbasemartin/repos", "events_url": "https://api.github.com/users/jitbasemartin/events{/privacy}", "received_events_url": "https://api.github.com/users/jitbasemartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-10T16:37:37Z", "updated_at": "2019-08-26T14:42:37Z", "closed_at": "2019-05-10T19:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got `RuntimeError: Event loop is closed` in my tests when I use `pytest-repeat`\r\nI can reproduce the bug with this simple test:\r\n\r\n```\r\nimport asyncio\r\nimport logging\r\n\r\nimport aioconsole\r\nimport pytest\r\n\r\nlogging.basicConfig(filename=\"aioconsole.log\", level=\"DEBUG\")\r\nLOGGER = logging.getLogger(\"test_aioconsole\")\r\n\r\n\r\n@pytest.mark.repeat(3)\r\n@pytest.mark.asyncio\r\nasync def test_aprint_repeat():\r\n    LOGGER.info(\"---------- Begin ----------\")\r\n    loop = asyncio.get_event_loop()\r\n    LOGGER.info(\"Event loop: %s\", loop)\r\n    await aioconsole.aprint(\"Hello world\", loop=loop)\r\n```\r\n\r\nAnd I obtain this output:\r\n\r\n```\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform darwin -- Python 3.7.3, pytest-3.10.1, py-1.8.0, pluggy-0.9.0 -- /usr/local/opt/python/bin/python3.7\r\ncachedir: .pytest_cache\r\nrootdir: test_aioconsole, inifile:\r\nplugins: requests-mock-1.5.2, repeat-0.8.0, profiling-1.6.0, ordering-0.6, cov-2.7.1, asyncio-0.10.0, aiohttp-0.3.0\r\ncollected 3 items                                                                                                                                                                                                 \r\n\r\ntest_aioconsole.py::test_aprint_repeat[1-3] PASSED                                                                                                                                                          [ 33%]\r\ntest_aioconsole.py::test_aprint_repeat[2-3] FAILED                                                                                                                                                          [ 66%]\r\ntest_aioconsole.py::test_aprint_repeat[3-3] FAILED                                                                                                                                                          [100%]\r\n\r\n==================================================================================================== FAILURES =====================================================================================================\r\n_____________________________________________________________________________________________ test_aprint_repeat[2-3] _____________________________________________________________________________________________\r\n\r\n    @pytest.mark.repeat(3)\r\n    @pytest.mark.asyncio\r\n    async def test_aprint_repeat():\r\n        LOGGER.info(\"---------- Begin ----------\")\r\n        loop = asyncio.get_event_loop()\r\n        LOGGER.info(\"Event loop: %s\", loop)\r\n>       await aioconsole.aprint(\"Hello world\", loop=loop)\r\n\r\ntest_aioconsole.py:17: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/local/lib/python3.7/site-packages/aioconsole/stream.py:207: in aprint\r\n    yield from writer.drain()\r\n/usr/local/lib/python3.7/site-packages/aioconsole/stream.py:133: in drain\r\n    yield from self.loop.run_in_executor(None, flush)\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py:743: in run_in_executor\r\n    self._check_closed()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <_UnixSelectorEventLoop running=False closed=True debug=False>\r\n\r\n    def _check_closed(self):\r\n        if self._closed:\r\n>           raise RuntimeError('Event loop is closed')\r\nE           RuntimeError: Event loop is closed\r\n\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py:480: RuntimeError\r\n----------------------------------------------------------------------------------------------- Captured log setup ------------------------------------------------------------------------------------------------\r\nselector_events.py          53 DEBUG    Using selector: KqueueSelector\r\n---------------------------------------------------------------------------------------------- Captured stdout call -----------------------------------------------------------------------------------------------\r\nHello world\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\ntest_aioconsole.py          14 INFO     ---------- Begin ----------\r\ntest_aioconsole.py          16 INFO     Event loop: <_UnixSelectorEventLoop running=True closed=False debug=False>\r\n_____________________________________________________________________________________________ test_aprint_repeat[3-3] _____________________________________________________________________________________________\r\n\r\n    @pytest.mark.repeat(3)\r\n    @pytest.mark.asyncio\r\n    async def test_aprint_repeat():\r\n        LOGGER.info(\"---------- Begin ----------\")\r\n        loop = asyncio.get_event_loop()\r\n        LOGGER.info(\"Event loop: %s\", loop)\r\n>       await aioconsole.aprint(\"Hello world\", loop=loop)\r\n\r\ntest_aioconsole.py:17: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/local/lib/python3.7/site-packages/aioconsole/stream.py:207: in aprint\r\n    yield from writer.drain()\r\n/usr/local/lib/python3.7/site-packages/aioconsole/stream.py:133: in drain\r\n    yield from self.loop.run_in_executor(None, flush)\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py:743: in run_in_executor\r\n    self._check_closed()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <_UnixSelectorEventLoop running=False closed=True debug=False>\r\n\r\n    def _check_closed(self):\r\n        if self._closed:\r\n>           raise RuntimeError('Event loop is closed')\r\nE           RuntimeError: Event loop is closed\r\n\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py:480: RuntimeError\r\n----------------------------------------------------------------------------------------------- Captured log setup ------------------------------------------------------------------------------------------------\r\nselector_events.py          53 DEBUG    Using selector: KqueueSelector\r\n---------------------------------------------------------------------------------------------- Captured stdout call -----------------------------------------------------------------------------------------------\r\nHello world\r\n------------------------------------------------------------------------------------------------ Captured log call ------------------------------------------------------------------------------------------------\r\ntest_aioconsole.py          14 INFO     ---------- Begin ----------\r\ntest_aioconsole.py          16 INFO     Event loop: <_UnixSelectorEventLoop running=True closed=False debug=False>\r\n======================================================================================= 2 failed, 1 passed in 0.21 seconds ========================================================================================\r\n```\r\n\r\nI'm on macOS with Python 3.7\r\n```\r\n> pip3 show aioconsole                                                                                                                                                  \r\nName: aioconsole\r\nVersion: 0.1.14\r\nSummary: Asynchronous console and interfaces for asyncio\r\nHome-page: https://github.com/vxgmichel/aioconsole\r\nAuthor: Vincent Michel\r\nAuthor-email: vxgmichel@gmail.com\r\nLicense: GPLv3\r\nLocation: /usr/local/lib/python3.7/site-packages\r\n``` \r\n\r\nCan you help me ? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/53", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/53/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/53/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/53", "id": 432025268, "node_id": "MDU6SXNzdWU0MzIwMjUyNjg=", "number": 53, "title": "UnicodeEncodeError when running apython on Ubuntu 18.04", "user": {"login": "JonasVautherin", "id": 2606672, "node_id": "MDQ6VXNlcjI2MDY2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonasVautherin", "html_url": "https://github.com/JonasVautherin", "followers_url": "https://api.github.com/users/JonasVautherin/followers", "following_url": "https://api.github.com/users/JonasVautherin/following{/other_user}", "gists_url": "https://api.github.com/users/JonasVautherin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonasVautherin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonasVautherin/subscriptions", "organizations_url": "https://api.github.com/users/JonasVautherin/orgs", "repos_url": "https://api.github.com/users/JonasVautherin/repos", "events_url": "https://api.github.com/users/JonasVautherin/events{/privacy}", "received_events_url": "https://api.github.com/users/JonasVautherin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-11T13:30:50Z", "updated_at": "2019-05-12T14:54:13Z", "closed_at": "2019-05-12T14:54:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `apython` from `aioconsole-0.1.14` on an Ubuntu 18.04 docker container, I get the following error:\r\n\r\n```\r\n# apython\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/apython\", line 11, in <module>\r\n    sys.exit(run_apython())\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/apython.py\", line 97, in run_apython\r\n    code = run_apython_in_subprocess(args, namespace.prompt_control)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/apython.py\", line 153, in run_apython_in_subprocess\r\n    use_stderr=True)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/rlwrap.py\", line 24, in rlwrap_process\r\n    **{'stderr' if use_stderr else 'stdout': subprocess.PIPE})\r\n  File \"/usr/lib/python3.6/subprocess.py\", line 709, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"/usr/lib/python3.6/subprocess.py\", line 1275, in _execute_child\r\n    restore_signals, start_new_session, preexec_fn)\r\nUnicodeEncodeError: 'ascii' codec can't encode character '\\u200b' in position 0: ordinal not in range(128)\r\n```\r\n\r\nRunning the same version on Arch Linux (installed from pip) works, though.\r\n\r\nWhy could that be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/52", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/52/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/52/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/52", "id": 430045073, "node_id": "MDU6SXNzdWU0MzAwNDUwNzM=", "number": 52, "title": "Acknowledge aioconsole prompt limitations and advertise alternatives", "user": {"login": "iTosun", "id": 22146339, "node_id": "MDQ6VXNlcjIyMTQ2MzM5", "avatar_url": "https://avatars1.githubusercontent.com/u/22146339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iTosun", "html_url": "https://github.com/iTosun", "followers_url": "https://api.github.com/users/iTosun/followers", "following_url": "https://api.github.com/users/iTosun/following{/other_user}", "gists_url": "https://api.github.com/users/iTosun/gists{/gist_id}", "starred_url": "https://api.github.com/users/iTosun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iTosun/subscriptions", "organizations_url": "https://api.github.com/users/iTosun/orgs", "repos_url": "https://api.github.com/users/iTosun/repos", "events_url": "https://api.github.com/users/iTosun/events{/privacy}", "received_events_url": "https://api.github.com/users/iTosun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "vxgmichel", "id": 7490006, "node_id": "MDQ6VXNlcjc0OTAwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vxgmichel", "html_url": "https://github.com/vxgmichel", "followers_url": "https://api.github.com/users/vxgmichel/followers", "following_url": "https://api.github.com/users/vxgmichel/following{/other_user}", "gists_url": "https://api.github.com/users/vxgmichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vxgmichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vxgmichel/subscriptions", "organizations_url": "https://api.github.com/users/vxgmichel/orgs", "repos_url": "https://api.github.com/users/vxgmichel/repos", "events_url": "https://api.github.com/users/vxgmichel/events{/privacy}", "received_events_url": "https://api.github.com/users/vxgmichel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vxgmichel", "id": 7490006, "node_id": "MDQ6VXNlcjc0OTAwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vxgmichel", "html_url": "https://github.com/vxgmichel", "followers_url": "https://api.github.com/users/vxgmichel/followers", "following_url": "https://api.github.com/users/vxgmichel/following{/other_user}", "gists_url": "https://api.github.com/users/vxgmichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vxgmichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vxgmichel/subscriptions", "organizations_url": "https://api.github.com/users/vxgmichel/orgs", "repos_url": "https://api.github.com/users/vxgmichel/repos", "events_url": "https://api.github.com/users/vxgmichel/events{/privacy}", "received_events_url": "https://api.github.com/users/vxgmichel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-04-06T15:30:07Z", "updated_at": "2020-05-19T10:54:36Z", "closed_at": "2020-05-19T10:54:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if it has the same style of tab completion as the normal python console.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/51", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/51/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/51/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/51", "id": 420056844, "node_id": "MDU6SXNzdWU0MjAwNTY4NDQ=", "number": 51, "title": "Is there any way to read one character at the time?", "user": {"login": "tartavull", "id": 4648166, "node_id": "MDQ6VXNlcjQ2NDgxNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4648166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tartavull", "html_url": "https://github.com/tartavull", "followers_url": "https://api.github.com/users/tartavull/followers", "following_url": "https://api.github.com/users/tartavull/following{/other_user}", "gists_url": "https://api.github.com/users/tartavull/gists{/gist_id}", "starred_url": "https://api.github.com/users/tartavull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tartavull/subscriptions", "organizations_url": "https://api.github.com/users/tartavull/orgs", "repos_url": "https://api.github.com/users/tartavull/repos", "events_url": "https://api.github.com/users/tartavull/events{/privacy}", "received_events_url": "https://api.github.com/users/tartavull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T15:39:49Z", "updated_at": "2019-04-08T09:36:10Z", "closed_at": "2019-04-08T09:36:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to run a function when the arrow keys are pressed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/48", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/48/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/48/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/48", "id": 415222153, "node_id": "MDU6SXNzdWU0MTUyMjIxNTM=", "number": 48, "title": "[Question] How to do the equivalent of code.interact(dict(globals(), **locals()))?", "user": {"login": "NightMachinary", "id": 36224762, "node_id": "MDQ6VXNlcjM2MjI0NzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/36224762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NightMachinary", "html_url": "https://github.com/NightMachinary", "followers_url": "https://api.github.com/users/NightMachinary/followers", "following_url": "https://api.github.com/users/NightMachinary/following{/other_user}", "gists_url": "https://api.github.com/users/NightMachinary/gists{/gist_id}", "starred_url": "https://api.github.com/users/NightMachinary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NightMachinary/subscriptions", "organizations_url": "https://api.github.com/users/NightMachinary/orgs", "repos_url": "https://api.github.com/users/NightMachinary/repos", "events_url": "https://api.github.com/users/NightMachinary/events{/privacy}", "received_events_url": "https://api.github.com/users/NightMachinary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-27T16:47:26Z", "updated_at": "2019-02-28T00:00:41Z", "closed_at": "2019-02-28T00:00:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/47", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/47/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/47/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/47", "id": 409977483, "node_id": "MDU6SXNzdWU0MDk5Nzc0ODM=", "number": 47, "title": "ainput on apython raise a NameError. (discord.py)", "user": {"login": "cyvax", "id": 27162110, "node_id": "MDQ6VXNlcjI3MTYyMTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/27162110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyvax", "html_url": "https://github.com/cyvax", "followers_url": "https://api.github.com/users/cyvax/followers", "following_url": "https://api.github.com/users/cyvax/following{/other_user}", "gists_url": "https://api.github.com/users/cyvax/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyvax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyvax/subscriptions", "organizations_url": "https://api.github.com/users/cyvax/orgs", "repos_url": "https://api.github.com/users/cyvax/repos", "events_url": "https://api.github.com/users/cyvax/events{/privacy}", "received_events_url": "https://api.github.com/users/cyvax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-02-13T20:03:23Z", "updated_at": "2019-03-13T00:37:39Z", "closed_at": "2019-03-13T00:37:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nSome problem with ainput in discord.py inside apython terminal : \r\n\r\n```python\r\nfrom discord.ext import commands\r\nfrom aioconsole import aprint,ainput\r\n\r\nclient = commands.Bot(command_prefix=None)\r\nusr_id = \"115946460419194889\" # usr_id\r\n\r\nasync def background_task():\r\n    await client.wait_until_ready()\r\n    channel = await client.get_user_info(usr_id)\r\n    while not client.is_closed:\r\n        console_input = await ainput(\"Input to send to channel: \")\r\n        await client.send_message(channel, console_input)\r\n\r\nclient.loop.create_task(background_task())\r\nclient.run('token')\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/27162110/52739911-2f04eb80-2fd2-11e9-9684-2c5e4a671a34.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/45", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/45/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/45/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/45", "id": 409627746, "node_id": "MDU6SXNzdWU0MDk2Mjc3NDY=", "number": 45, "title": "Windows compatibility broken by fcntl import", "user": {"login": "chriscline", "id": 24940426, "node_id": "MDQ6VXNlcjI0OTQwNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/24940426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriscline", "html_url": "https://github.com/chriscline", "followers_url": "https://api.github.com/users/chriscline/followers", "following_url": "https://api.github.com/users/chriscline/following{/other_user}", "gists_url": "https://api.github.com/users/chriscline/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriscline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriscline/subscriptions", "organizations_url": "https://api.github.com/users/chriscline/orgs", "repos_url": "https://api.github.com/users/chriscline/repos", "events_url": "https://api.github.com/users/chriscline/events{/privacy}", "received_events_url": "https://api.github.com/users/chriscline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-13T04:59:31Z", "updated_at": "2019-02-13T18:40:21Z", "closed_at": "2019-02-13T18:40:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `import fcntl` line introduced in #43 broke Windows compatibility, since fcntl is not available on Windows. This import should probably be conditional on the platform.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/44", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/44/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/44/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/44", "id": 409274793, "node_id": "MDU6SXNzdWU0MDkyNzQ3OTM=", "number": 44, "title": "How to add autocomplete when using ainput?", "user": {"login": "HatBoy", "id": 8274796, "node_id": "MDQ6VXNlcjgyNzQ3OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8274796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HatBoy", "html_url": "https://github.com/HatBoy", "followers_url": "https://api.github.com/users/HatBoy/followers", "following_url": "https://api.github.com/users/HatBoy/following{/other_user}", "gists_url": "https://api.github.com/users/HatBoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/HatBoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HatBoy/subscriptions", "organizations_url": "https://api.github.com/users/HatBoy/orgs", "repos_url": "https://api.github.com/users/HatBoy/repos", "events_url": "https://api.github.com/users/HatBoy/events{/privacy}", "received_events_url": "https://api.github.com/users/HatBoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T12:30:37Z", "updated_at": "2019-02-14T01:23:56Z", "closed_at": "2019-02-14T01:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to add autocomplete when using ainput like prompt_toolkit, or can I use ainput  with prompt_toolkit? Thanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/42", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/42/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/42/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/42", "id": 394504062, "node_id": "MDU6SXNzdWUzOTQ1MDQwNjI=", "number": 42, "title": "apython exits when there is too much output", "user": {"login": "gnachman", "id": 427546, "node_id": "MDQ6VXNlcjQyNzU0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/427546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnachman", "html_url": "https://github.com/gnachman", "followers_url": "https://api.github.com/users/gnachman/followers", "following_url": "https://api.github.com/users/gnachman/following{/other_user}", "gists_url": "https://api.github.com/users/gnachman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnachman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnachman/subscriptions", "organizations_url": "https://api.github.com/users/gnachman/orgs", "repos_url": "https://api.github.com/users/gnachman/repos", "events_url": "https://api.github.com/users/gnachman/events{/privacy}", "received_events_url": "https://api.github.com/users/gnachman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-27T22:49:20Z", "updated_at": "2019-02-11T12:32:52Z", "closed_at": "2019-02-11T12:32:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To reproduce:\r\n\r\n1. Run `apython`\r\n2. Do something that produces a lot of output, such as `help(str)`\r\n\r\nThe apython shell terminates abruptly, exiting and returning to the shell.\r\n\r\nWith a bit of hacking around I got a stack trace out of it:\r\n\r\n```\r\n  File \"/usr/local/bin/apython\", line 11, in <module>\r\n    sys.exit(run_apython())\r\n  File \"/usr/local/lib/python3.7/site-packages/aioconsole/apython.py\", line 97, in run_apython\r\n    code = run_apython_in_subprocess(args, namespace.prompt_control)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioconsole/apython.py\", line 154, in run_apython_in_subprocess\r\n    use_stderr=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioconsole/rlwrap.py\", line 23, in rlwrap_process\r\n    return _rlwrap(process, prompt_control, use_stderr)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioconsole/rlwrap.py\", line 44, in _rlwrap\r\n    prompt = future.result()\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/_base.py\", line 432, in result\r\n    return self.__get_result()\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/_base.py\", line 384, in __get_result\r\n    raise self._exception\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioconsole/rlwrap.py\", line 91, in wait_for_prompt\r\n    write(current)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioconsole/rlwrap.py\", line 84, in write\r\n    dest.flush()\r\nBlockingIOError: [Errno 35] write could not complete without blocking\r\n```\r\n\r\nIt can be fixed (apparently) by adding this to the top of `wait_for_prompt`:\r\n\r\n```\r\nfcntl.fcntl(dest.fileno(), fcntl.F_SETFL, 0)\r\n```\r\n\r\nFor some reason removing the O_NONBLOCK flag has to be done the *second* time `wait_for_prompt` is called. I can't figure out where it's getting changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/40", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/40/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/40/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/40", "id": 383881658, "node_id": "MDU6SXNzdWUzODM4ODE2NTg=", "number": 40, "title": "Printing not showing in the console", "user": {"login": "JonasVautherin", "id": 2606672, "node_id": "MDQ6VXNlcjI2MDY2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonasVautherin", "html_url": "https://github.com/JonasVautherin", "followers_url": "https://api.github.com/users/JonasVautherin/followers", "following_url": "https://api.github.com/users/JonasVautherin/following{/other_user}", "gists_url": "https://api.github.com/users/JonasVautherin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonasVautherin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonasVautherin/subscriptions", "organizations_url": "https://api.github.com/users/JonasVautherin/orgs", "repos_url": "https://api.github.com/users/JonasVautherin/repos", "events_url": "https://api.github.com/users/JonasVautherin/events{/privacy}", "received_events_url": "https://api.github.com/users/JonasVautherin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-23T16:34:49Z", "updated_at": "2018-11-28T20:39:55Z", "closed_at": "2018-11-28T16:10:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I guess that's a limitation, but I just want to make sure of it.\r\n\r\nI am running an asyncio task that sometimes prints something (say a \"progress status\"). Ideally, I'd like to run it from `apython`, and have the prints show when they arrive. But they don't show directly (until I hit \"enter\" where they suddenly all appear).\r\n\r\nIs that expected behavior, or is there a way to have a status showing spontaneously in the console?\r\n\r\nAnd thanks for the project, I love aioconsole for prototyping and playing with asyncio!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/36", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/36/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/36/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/36", "id": 371533124, "node_id": "MDU6SXNzdWUzNzE1MzMxMjQ=", "number": 36, "title": "CI failure for python 3.8-dev", "user": {"login": "yxwangcs", "id": 10323518, "node_id": "MDQ6VXNlcjEwMzIzNTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10323518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxwangcs", "html_url": "https://github.com/yxwangcs", "followers_url": "https://api.github.com/users/yxwangcs/followers", "following_url": "https://api.github.com/users/yxwangcs/following{/other_user}", "gists_url": "https://api.github.com/users/yxwangcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxwangcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxwangcs/subscriptions", "organizations_url": "https://api.github.com/users/yxwangcs/orgs", "repos_url": "https://api.github.com/users/yxwangcs/repos", "events_url": "https://api.github.com/users/yxwangcs/events{/privacy}", "received_events_url": "https://api.github.com/users/yxwangcs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T13:33:52Z", "updated_at": "2018-10-25T15:56:18Z", "closed_at": "2018-10-25T15:56:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I saw you disabled 3.8-dev branch for the moment, so I think it\u2019s nice to open an issue for discussion if you don\u2019t mind. :)\r\n\r\nThe problem is in `test_server` function, it seems that it doesn\u2019t halt. `reader.readline()` doesn't seem to return.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/32", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/32/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/32/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/32", "id": 370897493, "node_id": "MDU6SXNzdWUzNzA4OTc0OTM=", "number": 32, "title": "Using a linux pipe as stdin breaks the stream ", "user": {"login": "vxgmichel", "id": 7490006, "node_id": "MDQ6VXNlcjc0OTAwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vxgmichel", "html_url": "https://github.com/vxgmichel", "followers_url": "https://api.github.com/users/vxgmichel/followers", "following_url": "https://api.github.com/users/vxgmichel/following{/other_user}", "gists_url": "https://api.github.com/users/vxgmichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vxgmichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vxgmichel/subscriptions", "organizations_url": "https://api.github.com/users/vxgmichel/orgs", "repos_url": "https://api.github.com/users/vxgmichel/repos", "events_url": "https://api.github.com/users/vxgmichel/events{/privacy}", "received_events_url": "https://api.github.com/users/vxgmichel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-17T04:47:46Z", "updated_at": "2018-10-18T05:53:39Z", "closed_at": "2018-10-18T05:53:39Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Consider `test.py`:\r\n```python\r\nimport asyncio\r\nfrom aioconsole import ainput\r\n\r\nasync def main():\r\n    res = await ainput(\">>> \")\r\n    print(res)\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n```\r\nRun:\r\n```bash\r\n$ echo test | python test.py\r\n```\r\nError:\r\n```python\r\nException in callback StandardStreamReaderProtocol.connection_made(<_UnixWritePi...dle bufsize=0>)\r\nhandle: <Handle StandardStreamReaderProtocol.connection_made(<_UnixWritePi...dle bufsize=0>)>\r\nTraceback (most recent call last):\r\n  File \"/home/vimiche/miniconda/lib/python3.7/asyncio/events.py\", line 88, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"/home/vimiche/aioconsole/aioconsole/stream.py\", line 40, in connection_made\r\n    if self._stream_reader._transport is not None:\r\nAttributeError: 'NoneType' object has no attribute '_transport'\r\n>>> Traceback (most recent call last):\r\n  File \"test.py\", line 9, in <module>\r\n    asyncio.run(main())\r\n  File \"/home/vimiche/miniconda/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/home/vimiche/miniconda/lib/python3.7/asyncio/base_events.py\", line 568, in run_until_complete\r\n    return future.result()\r\n  File \"test.py\", line 5, in main\r\n    res = await ainput(\">>> \")\r\n  File \"/home/vimiche/aioconsole/aioconsole/stream.py\", line 175, in ainput\r\n    yield from writer.drain()\r\n  File \"/home/vimiche/miniconda/lib/python3.7/asyncio/streams.py\", line 348, in drain\r\n    await self._protocol._drain_helper()\r\n  File \"/home/vimiche/miniconda/lib/python3.7/asyncio/streams.py\", line 202, in _drain_helper\r\n    raise ConnectionResetError('Connection lost')\r\nConnectionResetError: Connection lost\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/31", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/31/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/31/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/31", "id": 370633192, "node_id": "MDU6SXNzdWUzNzA2MzMxOTI=", "number": 31, "title": "Provide shortcut for aprint?", "user": {"login": "yxwangcs", "id": 10323518, "node_id": "MDQ6VXNlcjEwMzIzNTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10323518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxwangcs", "html_url": "https://github.com/yxwangcs", "followers_url": "https://api.github.com/users/yxwangcs/followers", "following_url": "https://api.github.com/users/yxwangcs/following{/other_user}", "gists_url": "https://api.github.com/users/yxwangcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxwangcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxwangcs/subscriptions", "organizations_url": "https://api.github.com/users/yxwangcs/orgs", "repos_url": "https://api.github.com/users/yxwangcs/repos", "events_url": "https://api.github.com/users/yxwangcs/events{/privacy}", "received_events_url": "https://api.github.com/users/yxwangcs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T14:12:18Z", "updated_at": "2018-10-18T05:23:51Z", "closed_at": "2018-10-18T05:23:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the print function doesn't work well with async code. see at https://gist.github.com/nathan-hoad/8966377#gistcomment-1222842 \r\n\r\nIf you feed a few hundred bytes into print function, you will see BlockingIOError. \r\n\r\nIt is very easy to solve this problem in aioconsole IMO\r\n\r\nA sample code could be:\r\n```python\r\nfrom aioconsole.stream import get_standard_streams\r\n\r\nasync def aprint(string):\r\n    _, writer = get_standard_streams()\r\n    writer.write(string.encode('utf-8'))\r\n    writer.write('\\n'.encode('utf-8'))\r\n    await writer.drain()\r\n```\r\n\r\nPerhaps provide a shortcut for `aprint` might be easy for developers since we have `ainput` in the package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/29", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/29/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/29/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/29", "id": 343587743, "node_id": "MDU6SXNzdWUzNDM1ODc3NDM=", "number": 29, "title": "0.1.9 fails with TypeError (Python 3.6)", "user": {"login": "berekuk", "id": 89368, "node_id": "MDQ6VXNlcjg5MzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/89368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berekuk", "html_url": "https://github.com/berekuk", "followers_url": "https://api.github.com/users/berekuk/followers", "following_url": "https://api.github.com/users/berekuk/following{/other_user}", "gists_url": "https://api.github.com/users/berekuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/berekuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berekuk/subscriptions", "organizations_url": "https://api.github.com/users/berekuk/orgs", "repos_url": "https://api.github.com/users/berekuk/repos", "events_url": "https://api.github.com/users/berekuk/events{/privacy}", "received_events_url": "https://api.github.com/users/berekuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-23T11:07:40Z", "updated_at": "2018-07-23T12:00:27Z", "closed_at": "2018-07-23T12:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ apython\r\nTraceback (most recent call last):\r\n  File \"/Users/berekuk/.local/share/virtualenvs/core--9goXGUj/bin/apython\", line 11, in <module>\r\n    sys.exit(run_apython())\r\n  File \"/Users/berekuk/.local/share/virtualenvs/core--9goXGUj/lib/python3.6/site-packages/aioconsole/apython.py\", line 90, in run_apython\r\n    code = run_apython_in_subprocess(args, namespace.prompt_control)\r\n  File \"/Users/berekuk/.local/share/virtualenvs/core--9goXGUj/lib/python3.6/site-packages/aioconsole/apython.py\", line 139, in run_apython_in_subprocess\r\n    proc_args + args,\r\nTypeError: can only concatenate list (not \"NoneType\") to list\r\n```\r\n\r\nDowngrading to 0.1.8 fixes this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/28", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/28/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/28/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/28", "id": 340713820, "node_id": "MDU6SXNzdWUzNDA3MTM4MjA=", "number": 28, "title": "Reading a file from standardinput using ainput", "user": {"login": "srbcheema1", "id": 18245518, "node_id": "MDQ6VXNlcjE4MjQ1NTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/18245518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srbcheema1", "html_url": "https://github.com/srbcheema1", "followers_url": "https://api.github.com/users/srbcheema1/followers", "following_url": "https://api.github.com/users/srbcheema1/following{/other_user}", "gists_url": "https://api.github.com/users/srbcheema1/gists{/gist_id}", "starred_url": "https://api.github.com/users/srbcheema1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srbcheema1/subscriptions", "organizations_url": "https://api.github.com/users/srbcheema1/orgs", "repos_url": "https://api.github.com/users/srbcheema1/repos", "events_url": "https://api.github.com/users/srbcheema1/events{/privacy}", "received_events_url": "https://api.github.com/users/srbcheema1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T16:37:30Z", "updated_at": "2018-07-12T17:13:10Z", "closed_at": "2018-07-12T17:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have written a code that works on asyncio. In that code, I had to read a file from standard input using `./check.py < file.txt` I am able to give input from the terminal. normally it works fine. But it doesn't work for reading data from a file from standard input.\r\n\r\n```\r\n#!/usr/bin/env python3.6\r\n\r\nimport asyncio\r\nfrom aioconsole import ainput\r\n\r\nasync def read_input():\r\n    while True:\r\n        inp = await ainput()\r\n        print('got ' + inp)\r\n\r\nif (__name__ == \"__main__\"):\r\n    asyncio.get_event_loop().run_until_complete(read_input())\r\n```\r\n\r\nnormally it works like\r\n\r\n```\r\n$ ./check.py \r\n4\r\ngot 4\r\n5\r\ngot 5\r\n```\r\n\r\nBut while reading from file directly I face this log:\r\n\r\n```\r\n$ ./check.py  < test/test_case \r\nTraceback (most recent call last):\r\n  File \"./check.py\", line 12, in <module>\r\n    asyncio.get_event_loop().run_until_complete(read_input())\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"./check.py\", line 8, in read_input\r\n    inp = await ainput()\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/stream.py\", line 156, in ainput\r\n    reader, writer = yield from get_standard_streams(loop=loop)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/stream.py\", line 144, in get_standard_streams\r\n    cache[key] = yield from connection\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/stream.py\", line 132, in create_standard_streams\r\n    reader, writer = yield from future\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioconsole/stream.py\", line 114, in open_pipe_connection\r\n    yield from loop.connect_read_pipe(lambda: protocol, pipe_in)\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 1099, in connect_read_pipe\r\n    transport = self._make_read_pipe_transport(pipe, protocol, waiter)\r\n  File \"/usr/lib/python3.6/asyncio/unix_events.py\", line 185, in _make_read_pipe_transport\r\n    return _UnixReadPipeTransport(self, pipe, protocol, waiter, extra)\r\n  File \"/usr/lib/python3.6/asyncio/unix_events.py\", line 353, in __init__\r\n    raise ValueError(\"Pipe transport is for pipes/sockets only.\")\r\nValueError: Pipe transport is for pipes/sockets only.\r\n```\r\nUnable to get why is it behaving differently? I want to read a file like ./check.py < file.txt using coroutines.\r\nThanks in advance :)\r\n\r\nRegards,\r\nSarbjit Singh", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/26", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/26/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/26/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/26", "id": 335079386, "node_id": "MDU6SXNzdWUzMzUwNzkzODY=", "number": 26, "title": "Console gets mixedup after specific output", "user": {"login": "tiagocoutinho", "id": 2684070, "node_id": "MDQ6VXNlcjI2ODQwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2684070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagocoutinho", "html_url": "https://github.com/tiagocoutinho", "followers_url": "https://api.github.com/users/tiagocoutinho/followers", "following_url": "https://api.github.com/users/tiagocoutinho/following{/other_user}", "gists_url": "https://api.github.com/users/tiagocoutinho/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagocoutinho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagocoutinho/subscriptions", "organizations_url": "https://api.github.com/users/tiagocoutinho/orgs", "repos_url": "https://api.github.com/users/tiagocoutinho/repos", "events_url": "https://api.github.com/users/tiagocoutinho/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagocoutinho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-23T07:57:35Z", "updated_at": "2018-07-06T14:41:07Z", "closed_at": "2018-07-06T14:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Executing any python code that results in printing to the screen a line that ends with  `'. \\n'` or `'> \\n'` messes up the console.\r\nExample: printing any string on the screen that ends with `'. \\n'` or `'> \\n'` messes up the console:\r\n\r\n```\r\n$ apython\r\n>>> print('> ')\r\n> # cursor stays here as if waiting from a user prompt. \r\n\r\n# From now on the console is in a weird state\r\n```\r\n\r\nExpected:\r\n```\r\n$ apython\r\n>>> print('> ')\r\n> \r\n>>> # I get the prompt back\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/23", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/23/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/23/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/23", "id": 323385535, "node_id": "MDU6SXNzdWUzMjMzODU1MzU=", "number": 23, "title": "python 3.7 compatibility", "user": {"login": "drankinn", "id": 1199706, "node_id": "MDQ6VXNlcjExOTk3MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1199706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drankinn", "html_url": "https://github.com/drankinn", "followers_url": "https://api.github.com/users/drankinn/followers", "following_url": "https://api.github.com/users/drankinn/following{/other_user}", "gists_url": "https://api.github.com/users/drankinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/drankinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drankinn/subscriptions", "organizations_url": "https://api.github.com/users/drankinn/orgs", "repos_url": "https://api.github.com/users/drankinn/repos", "events_url": "https://api.github.com/users/drankinn/events{/privacy}", "received_events_url": "https://api.github.com/users/drankinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-15T21:13:11Z", "updated_at": "2018-05-15T21:42:11Z", "closed_at": "2018-05-15T21:40:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "aioconsole isn't able to run on python 3.7 because of a few deprecated asyncio.async calls.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/20", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/20/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/20/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/20", "id": 322451756, "node_id": "MDU6SXNzdWUzMjI0NTE3NTY=", "number": 20, "title": "Custom banner for apython", "user": {"login": "gnachman", "id": 427546, "node_id": "MDQ6VXNlcjQyNzU0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/427546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnachman", "html_url": "https://github.com/gnachman", "followers_url": "https://api.github.com/users/gnachman/followers", "following_url": "https://api.github.com/users/gnachman/following{/other_user}", "gists_url": "https://api.github.com/users/gnachman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnachman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnachman/subscriptions", "organizations_url": "https://api.github.com/users/gnachman/orgs", "repos_url": "https://api.github.com/users/gnachman/repos", "events_url": "https://api.github.com/users/gnachman/events{/privacy}", "received_events_url": "https://api.github.com/users/gnachman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-11T22:26:13Z", "updated_at": "2018-05-17T09:23:09Z", "closed_at": "2018-05-17T09:22:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I plan to use aioconsole's apython for an interactive REPL for iTerm2's upcoming Python scripting API. It's almost perfect, except that customizing the banner is not possible. In order to keep things simple, I would like not to ship my own implementation of your apython script, since I expect it may change over time. Would you be open to adding `--banner` to apython.py?\r\n\r\nThanks for a great module!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/18", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/18/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/18/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/18", "id": 319532186, "node_id": "MDU6SXNzdWUzMTk1MzIxODY=", "number": 18, "title": "Allow quoting of multi-word arguments with AsynchronousCli", "user": {"login": "Terrance", "id": 4025899, "node_id": "MDQ6VXNlcjQwMjU4OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4025899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Terrance", "html_url": "https://github.com/Terrance", "followers_url": "https://api.github.com/users/Terrance/followers", "following_url": "https://api.github.com/users/Terrance/following{/other_user}", "gists_url": "https://api.github.com/users/Terrance/gists{/gist_id}", "starred_url": "https://api.github.com/users/Terrance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Terrance/subscriptions", "organizations_url": "https://api.github.com/users/Terrance/orgs", "repos_url": "https://api.github.com/users/Terrance/repos", "events_url": "https://api.github.com/users/Terrance/events{/privacy}", "received_events_url": "https://api.github.com/users/Terrance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-02T12:28:49Z", "updated_at": "2018-05-02T13:30:27Z", "closed_at": "2018-05-02T13:27:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `args` is built as a space-separated list of arguments:\r\n\r\nhttps://github.com/vxgmichel/aioconsole/blob/95844cc6b39dccee61f46b5be0000dadf33b628a/aioconsole/command.py#L61-L70\r\n\r\nIt would be useful to quote arguments containing spaces so they're treated as one arg, particularly given `argparse` usually applies to shell args.  `shlex.split(source)` could be a drop-in replacement, though it potentially breaks any usage of unmatched quotes in arguments (which would now raise `ValueError`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/17", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/17/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/17/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/17", "id": 285975419, "node_id": "MDU6SXNzdWUyODU5NzU0MTk=", "number": 17, "title": "ainput doesn't work with uvloop", "user": {"login": "busimus", "id": 4591884, "node_id": "MDQ6VXNlcjQ1OTE4ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4591884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busimus", "html_url": "https://github.com/busimus", "followers_url": "https://api.github.com/users/busimus/followers", "following_url": "https://api.github.com/users/busimus/following{/other_user}", "gists_url": "https://api.github.com/users/busimus/gists{/gist_id}", "starred_url": "https://api.github.com/users/busimus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busimus/subscriptions", "organizations_url": "https://api.github.com/users/busimus/orgs", "repos_url": "https://api.github.com/users/busimus/repos", "events_url": "https://api.github.com/users/busimus/events{/privacy}", "received_events_url": "https://api.github.com/users/busimus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-04T12:46:28Z", "updated_at": "2018-01-04T13:52:41Z", "closed_at": "2018-01-04T13:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using uvloop, I get this exception whenever I run `ainput`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/user/client.py\", line 88, in client\r\n    msg = await ainput(\"Message: \")\r\n  File \"/usr/lib/python3.6/site-packages/aioconsole-0.1.7.dev0-py3.6.egg/aioconsole/stream.py\", line 157, in ainput\r\n    reader, writer = yield from get_standard_streams(loop=loop)\r\n  File \"/usr/lib/python3.6/site-packages/aioconsole-0.1.7.dev0-py3.6.egg/aioconsole/stream.py\", line 145, in get_standard_streams\r\n    cache[key] = yield from connection\r\n  File \"/usr/lib/python3.6/site-packages/aioconsole-0.1.7.dev0-py3.6.egg/aioconsole/stream.py\", line 133, in create_standard_streams\r\n    reader, writer = yield from future\r\n  File \"/usr/lib/python3.6/site-packages/aioconsole-0.1.7.dev0-py3.6.egg/aioconsole/stream.py\", line 117, in open_pipe_connection\r\n    loop.remove_reader(transport.get_extra_info('pipe').fileno())\r\n  File \"uvloop/loop.pyx\", line 2088, in uvloop.loop.Loop.remove_reader\r\n  File \"uvloop/loop.pyx\", line 681, in uvloop.loop.Loop._remove_reader\r\n  File \"uvloop/loop.pyx\", line 649, in uvloop.loop.Loop._ensure_fd_no_transport\r\nRuntimeError: File descriptor 1 is used by transport <WriteUnixTransport closed=False reading=True 0x7f177a34d3d8>\r\n```\r\n\r\nHappens on both the release and dev versions. \r\nuvloop version is 0.9.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/15", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/15/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/15/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/15", "id": 284883507, "node_id": "MDU6SXNzdWUyODQ4ODM1MDc=", "number": 15, "title": "Bootstrap error at MacOS", "user": {"login": "strongbugman", "id": 16114285, "node_id": "MDQ6VXNlcjE2MTE0Mjg1", "avatar_url": "https://avatars3.githubusercontent.com/u/16114285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strongbugman", "html_url": "https://github.com/strongbugman", "followers_url": "https://api.github.com/users/strongbugman/followers", "following_url": "https://api.github.com/users/strongbugman/following{/other_user}", "gists_url": "https://api.github.com/users/strongbugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/strongbugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strongbugman/subscriptions", "organizations_url": "https://api.github.com/users/strongbugman/orgs", "repos_url": "https://api.github.com/users/strongbugman/repos", "events_url": "https://api.github.com/users/strongbugman/events{/privacy}", "received_events_url": "https://api.github.com/users/strongbugman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-28T10:11:58Z", "updated_at": "2018-01-03T16:56:20Z", "closed_at": "2018-01-03T16:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cant run the command at MacOS, there are outputs:\r\n```\r\n\u276f apython\r\nPython 3.6.3 (default, Nov 23 2017, 18:02:45)\r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.38)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n---\r\nThis console is running in an asyncio event loop.\r\nIt allows you to wait for coroutines using the 'await' syntax.\r\nTry: await asyncio.sleep(1, result=3)\r\n---\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/apython\", line 11, in <module>\r\n    sys.exit(run_apython())\r\n  File \"/usr/local/lib/python3.6/site-packages/aioconsole/apython.py\", line 57, in run_apython\r\n    code = run_apython_in_subprocess(args)\r\n  File \"/usr/local/lib/python3.6/site-packages/aioconsole/apython.py\", line 102, in run_apython_in_subprocess\r\n    raw = input_with_stderr_prompt(prompt) + '\\n'\r\n  File \"/usr/local/lib/python3.6/site-packages/aioconsole/apython.py\", line 144, in input_with_stderr_prompt\r\n    fin = ctypes.c_void_p.in_dll(api, 'stdin')\r\nValueError: dlsym(RTLD_DEFAULT, stdin): symbol not found\r\n```\r\nIt is my os problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/14", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/14/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/14/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/14", "id": 283192455, "node_id": "MDU6SXNzdWUyODMxOTI0NTU=", "number": 14, "title": "Exception when exiting apython using python 3.5", "user": {"login": "rogpeppe", "id": 66491, "node_id": "MDQ6VXNlcjY2NDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/66491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogpeppe", "html_url": "https://github.com/rogpeppe", "followers_url": "https://api.github.com/users/rogpeppe/followers", "following_url": "https://api.github.com/users/rogpeppe/following{/other_user}", "gists_url": "https://api.github.com/users/rogpeppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogpeppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogpeppe/subscriptions", "organizations_url": "https://api.github.com/users/rogpeppe/orgs", "repos_url": "https://api.github.com/users/rogpeppe/repos", "events_url": "https://api.github.com/users/rogpeppe/events{/privacy}", "received_events_url": "https://api.github.com/users/rogpeppe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-19T11:18:39Z", "updated_at": "2018-01-04T13:52:23Z", "closed_at": "2018-01-03T17:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a normal python REPL, an EOF results in a clean exit.\r\nIn apython, I see the following:\r\n\r\n\t% apython\r\n\tPython 3.5.2 (default, Nov 23 2017, 16:37:01) \r\n\t[GCC 5.4.0 20160609] on linux\r\n\tType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\t---\r\n\tThis console is running in an asyncio event loop.\r\n\tIt allows you to wait for coroutines using the 'await' syntax.\r\n\tTry: await asyncio.sleep(1, result=3)\r\n\t---\r\n\t>>> \u0004\r\n\tException ignored in: <bound method StandardStreamReader.__del__ of <StreamReader eof t=<_UnixReadPipeTransport closed fd=0 closed>>>\r\n\tTraceback (most recent call last):\r\n\t  File \"/usr/local/lib/python3.5/dist-packages/aioconsole/stream.py\", line 20, in __del__\r\n\tValueError: I/O operation on closed file\r\n\t% ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/13", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/13/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/13/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/13", "id": 283191923, "node_id": "MDU6SXNzdWUyODMxOTE5MjM=", "number": 13, "title": "VIRTUAL_ENV appears to be ignored when using apython", "user": {"login": "rogpeppe", "id": 66491, "node_id": "MDQ6VXNlcjY2NDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/66491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogpeppe", "html_url": "https://github.com/rogpeppe", "followers_url": "https://api.github.com/users/rogpeppe/followers", "following_url": "https://api.github.com/users/rogpeppe/following{/other_user}", "gists_url": "https://api.github.com/users/rogpeppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogpeppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogpeppe/subscriptions", "organizations_url": "https://api.github.com/users/rogpeppe/orgs", "repos_url": "https://api.github.com/users/rogpeppe/repos", "events_url": "https://api.github.com/users/rogpeppe/events{/privacy}", "received_events_url": "https://api.github.com/users/rogpeppe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-19T11:16:36Z", "updated_at": "2018-01-03T16:56:50Z", "closed_at": "2018-01-03T16:56:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I set $VIRTUAL_ENV, the standard Python uses packages from there when importing, but apython does not seem to.\r\n\r\nA sample transcript. I would expect the `__file__` members to print the same whether I'm running python3 or apython.\r\n\r\n\trog@snazzy:~$ export VIRTUAL_ENV=/home/rog/src/python-libjuju/.tox/py35\r\n\trog@snazzy:~$ PATH=\"$VIRTUAL_ENV/bin:$PATH\"\r\n\trog@snazzy:~$ python3\r\n\tPython 3.5.2 (default, Nov 23 2017, 16:37:01) \r\n\t[GCC 5.4.0 20160609] on linux\r\n\tType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\t>>> import juju\r\n\t>>> juju.__file__\r\n\t'/home/rog/src/python-libjuju/juju/__init__.py'\r\n\t>>> \u0004\r\n\trog@snazzy:~$ \r\n\trog@snazzy:~$ \r\n\trog@snazzy:~$ apython\r\n\tPython 3.5.2 (default, Nov 23 2017, 16:37:01) \r\n\t[GCC 5.4.0 20160609] on linux\r\n\tType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\t---\r\n\tThis console is running in an asyncio event loop.\r\n\tIt allows you to wait for coroutines using the 'await' syntax.\r\n\tTry: await asyncio.sleep(1, result=3)\r\n\t---\r\n\t>>> import juju\r\n\t>>> juju.__file__\r\n\t/usr/local/lib/python3.5/dist-packages/juju/__init__.py\r\n\r\nThis is running Ubuntu 16.04.\r\n\r\nLinux snazzy 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/12", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/12/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/12/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/12", "id": 278525864, "node_id": "MDU6SXNzdWUyNzg1MjU4NjQ=", "number": 12, "title": "Why does print() have an impact on ainput()?", "user": {"login": "haukero", "id": 3535662, "node_id": "MDQ6VXNlcjM1MzU2NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3535662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haukero", "html_url": "https://github.com/haukero", "followers_url": "https://api.github.com/users/haukero/followers", "following_url": "https://api.github.com/users/haukero/following{/other_user}", "gists_url": "https://api.github.com/users/haukero/gists{/gist_id}", "starred_url": "https://api.github.com/users/haukero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haukero/subscriptions", "organizations_url": "https://api.github.com/users/haukero/orgs", "repos_url": "https://api.github.com/users/haukero/repos", "events_url": "https://api.github.com/users/haukero/events{/privacy}", "received_events_url": "https://api.github.com/users/haukero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-01T16:43:53Z", "updated_at": "2017-12-12T18:59:49Z", "closed_at": "2017-12-12T18:59:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following simple test program to test ainput() behavior:\r\n\r\n```python\r\nimport aioconsole\r\nimport asyncio\r\n\r\nasync def do_sleep(delay):\r\n    while True:\r\n        await asyncio.sleep(delay)\r\n        print('Did sleep {:.2f} seconds.'.format(delay))\r\n\r\nasync def print_input(prompt):\r\n    while True:\r\n        s = await aioconsole.ainput(prompt)\r\n        print('Input was:', s)\r\n\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.create_task(do_sleep(10.0))\r\n    loop.create_task(print_input('Enter string: '))\r\n    loop.run_forever()\r\n```\r\n\r\nIt is supposed to print the sleep message every 10 seconds and the input string after entering some text and pressing enter. This works well when I enter some text and press enter before the sleep message is printed in between, see below:\r\n\r\n1. Input string is entered before sleep message is printed.\r\n\r\n```\r\nEnter string: abc\r\nInput was: abc\r\n```\r\n\r\n2. Input string is entered after sleep message is printed.\r\n\r\n```\r\nEnter string: Did sleep 10.00 seconds.\r\nabc\r\nInput was: abc\r\n```\r\n\r\nHowever, when the sleep message interferes while entering some text, everything before the sleep message seems to get lost.\r\n\r\n```\r\nEnter string: aDid sleep 10.00 seconds.\r\nbDid sleep 10.00 seconds.\r\ncDid sleep 10.00 seconds.\r\nd\r\nInput was: d\r\n```\r\n\r\nSo is this the correct behavior and if yes, why does it behave like this?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/11", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/11/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/11/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/11", "id": 276448712, "node_id": "MDU6SXNzdWUyNzY0NDg3MTI=", "number": 11, "title": "Exceptions aren't shown when using apython in Ubuntu", "user": {"login": "rogpeppe", "id": 66491, "node_id": "MDQ6VXNlcjY2NDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/66491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogpeppe", "html_url": "https://github.com/rogpeppe", "followers_url": "https://api.github.com/users/rogpeppe/followers", "following_url": "https://api.github.com/users/rogpeppe/following{/other_user}", "gists_url": "https://api.github.com/users/rogpeppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogpeppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogpeppe/subscriptions", "organizations_url": "https://api.github.com/users/rogpeppe/orgs", "repos_url": "https://api.github.com/users/rogpeppe/repos", "events_url": "https://api.github.com/users/rogpeppe/events{/privacy}", "received_events_url": "https://api.github.com/users/rogpeppe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-23T18:03:24Z", "updated_at": "2017-12-12T16:17:21Z", "closed_at": "2017-12-10T09:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "apython doesn't seem to show exceptions when they happen.\r\nFor example:\r\n\r\n\t% apython\r\n\tPython 3.5.2 (default, Nov 17 2016, 17:05:23) \r\n\t[GCC 5.4.0 20160609] on linux\r\n\tType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\t---\r\n\tThis console is running in an asyncio event loop.\r\n\tIt allows you to wait for coroutines using the 'await' syntax.\r\n\tTry: await asyncio.sleep(1, result=3, loop=loop)\r\n\t---\r\n\t>>> raise Exception('foo')\r\n\t>>>\r\n\r\nI was hoping to be able to use apython for interactively debugging async Python code, but this makes it not nearly so useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/10", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/10/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/10/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/10", "id": 272106535, "node_id": "MDU6SXNzdWUyNzIxMDY1MzU=", "number": 10, "title": "Feature request get partial input (before Enter) in ainput", "user": {"login": "xtipacko", "id": 18727066, "node_id": "MDQ6VXNlcjE4NzI3MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/18727066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtipacko", "html_url": "https://github.com/xtipacko", "followers_url": "https://api.github.com/users/xtipacko/followers", "following_url": "https://api.github.com/users/xtipacko/following{/other_user}", "gists_url": "https://api.github.com/users/xtipacko/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtipacko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtipacko/subscriptions", "organizations_url": "https://api.github.com/users/xtipacko/orgs", "repos_url": "https://api.github.com/users/xtipacko/repos", "events_url": "https://api.github.com/users/xtipacko/events{/privacy}", "received_events_url": "https://api.github.com/users/xtipacko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-08T08:07:09Z", "updated_at": "2017-11-08T19:16:12Z", "closed_at": "2017-11-08T16:46:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to implement behavior similar to Cisco's \"logging synchronous\":\r\n![capture_cli](https://user-images.githubusercontent.com/18727066/32537592-3394f368-c474-11e7-9e6b-b64976ea64c5.gif)\r\n*correction to gif: And it doesn't interfere with my input\r\n\r\nHere is an example of code:\r\n```\r\nimport asyncio\r\nfrom aioconsole import ainput\r\n\r\nasync def produce(queue, n):\r\n    for x in range(1, n + 1):\r\n        # produce an item\r\n        #IS THERE ASYNC CLI INPUT LIKE THIS??? \r\n        word = await ainput('You produce: ')\r\n        # put the item in the queue\r\n        await queue.put(word)\r\n\r\n    # indicate the producer is done\r\n    await queue.put(None)\r\n\r\n\r\nasync def consume(queue):\r\n    while True:\r\n        # wait for an item from the producer\r\n        item = await queue.get()\r\n        if item is None:\r\n            # the producer emits None to indicate that it is done\r\n            break\r\n        # process the item\r\n        print(f'\\r\\nI consume {item}')\r\n        # simulate i/o operation using sleep\r\n        await asyncio.sleep(5)\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\nqueue = asyncio.Queue(loop=loop)\r\nproducer_coro = produce(queue, 30)\r\nconsumer_coro = consume(queue)\r\nloop.run_until_complete(asyncio.gather(producer_coro, consumer_coro))\r\nloop.close()\r\n```\r\n\r\n\r\n\r\nIt will be cool to have a feature to get current \"partial input\" before ainput returns control and complete input to me...\r\nIt will allow me to copy this partial input to the end of my programm's output so user will have consistent \r\n (not torn apart) propmpt+last partial input...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/8", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/8/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/8/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/8", "id": 257983727, "node_id": "MDU6SXNzdWUyNTc5ODM3Mjc=", "number": 8, "title": "Can't use ainput within apython", "user": {"login": "lilydjwg", "id": 440661, "node_id": "MDQ6VXNlcjQ0MDY2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/440661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilydjwg", "html_url": "https://github.com/lilydjwg", "followers_url": "https://api.github.com/users/lilydjwg/followers", "following_url": "https://api.github.com/users/lilydjwg/following{/other_user}", "gists_url": "https://api.github.com/users/lilydjwg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilydjwg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilydjwg/subscriptions", "organizations_url": "https://api.github.com/users/lilydjwg/orgs", "repos_url": "https://api.github.com/users/lilydjwg/repos", "events_url": "https://api.github.com/users/lilydjwg/events{/privacy}", "received_events_url": "https://api.github.com/users/lilydjwg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-15T09:43:47Z", "updated_at": "2018-07-06T14:38:39Z", "closed_at": "2018-07-06T14:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/7", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/7/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/7/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/7", "id": 251578216, "node_id": "MDU6SXNzdWUyNTE1NzgyMTY=", "number": 7, "title": "Support readline or equivalent alternatives", "user": {"login": "achimnol", "id": 555156, "node_id": "MDQ6VXNlcjU1NTE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/555156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achimnol", "html_url": "https://github.com/achimnol", "followers_url": "https://api.github.com/users/achimnol/followers", "following_url": "https://api.github.com/users/achimnol/following{/other_user}", "gists_url": "https://api.github.com/users/achimnol/gists{/gist_id}", "starred_url": "https://api.github.com/users/achimnol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achimnol/subscriptions", "organizations_url": "https://api.github.com/users/achimnol/orgs", "repos_url": "https://api.github.com/users/achimnol/repos", "events_url": "https://api.github.com/users/achimnol/events{/privacy}", "received_events_url": "https://api.github.com/users/achimnol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-21T07:59:54Z", "updated_at": "2017-11-16T10:00:04Z", "closed_at": "2017-11-16T10:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Googling leads me to [this SO question](https://stackoverflow.com/questions/45659928/readline-python-module-does-not-work-with-aioconsole-ainput) but there is no reply yet.\r\n\r\nPython already provides a binding module to GNU readline or libedit, but this does not work together with aioconsole since it does not have coroutine-based interfaces. Maybe we need a new lower-level wrapper for the readline library.\r\n\r\nThis issue is both question and feature request:\r\n * Is there any plan to support readline or readline-style interactive prompts?\r\n * Are there any known/fundamental technical issues related to supporting readline (except that the stdlib readline does not have coroutines)?\r\n   - Could we just make the user prompt to be synchronous while leaving user codes running between prompts asynchronous?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/6", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/6/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/6/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/6", "id": 240611560, "node_id": "MDU6SXNzdWUyNDA2MTE1NjA=", "number": 6, "title": "Feature: Access locals of invoking program?", "user": {"login": "trimitri", "id": 408340, "node_id": "MDQ6VXNlcjQwODM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/408340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trimitri", "html_url": "https://github.com/trimitri", "followers_url": "https://api.github.com/users/trimitri/followers", "following_url": "https://api.github.com/users/trimitri/following{/other_user}", "gists_url": "https://api.github.com/users/trimitri/gists{/gist_id}", "starred_url": "https://api.github.com/users/trimitri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trimitri/subscriptions", "organizations_url": "https://api.github.com/users/trimitri/orgs", "repos_url": "https://api.github.com/users/trimitri/repos", "events_url": "https://api.github.com/users/trimitri/events{/privacy}", "received_events_url": "https://api.github.com/users/trimitri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-05T10:48:08Z", "updated_at": "2017-07-14T10:36:48Z", "closed_at": "2017-07-14T10:36:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Vincent,\r\nvery cool project indeed! I struggled with writing or finding something like this.\r\n\r\nTo interact with my running asyncio program though, I would need to access it's `locals`. I've read through the documentation and also searched in the code. It seems that the `AsynchronousConsole` class supports passing the current scope. Is it somehow possible to inject my locals into `apython.start_interactive_server()`?\r\n\r\nAny way: thanks for your work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/5", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/5/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/5/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/5", "id": 237790259, "node_id": "MDU6SXNzdWUyMzc3OTAyNTk=", "number": 5, "title": "problem when using uvloop", "user": {"login": "shaljam", "id": 3776621, "node_id": "MDQ6VXNlcjM3NzY2MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3776621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaljam", "html_url": "https://github.com/shaljam", "followers_url": "https://api.github.com/users/shaljam/followers", "following_url": "https://api.github.com/users/shaljam/following{/other_user}", "gists_url": "https://api.github.com/users/shaljam/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaljam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaljam/subscriptions", "organizations_url": "https://api.github.com/users/shaljam/orgs", "repos_url": "https://api.github.com/users/shaljam/repos", "events_url": "https://api.github.com/users/shaljam/events{/privacy}", "received_events_url": "https://api.github.com/users/shaljam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-22T09:49:25Z", "updated_at": "2017-06-22T11:49:02Z", "closed_at": "2017-06-22T11:49:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following exception when using `uvloop`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 353, in handle_console\r\n    line = await ainput(\">>> \")\r\n  File \"/Users/ali/.pyenv/versions/3.5.3/lib/python3.5/site-packages/aioconsole/stream.py\", line 147, in ainput\r\n    reader, writer = yield from get_standard_streams(loop=loop)\r\n  File \"/Users/ali/.pyenv/versions/3.5.3/lib/python3.5/site-packages/aioconsole/stream.py\", line 135, in get_standard_streams\r\n    cache[key] = yield from connection\r\n  File \"/Users/ali/.pyenv/versions/3.5.3/lib/python3.5/site-packages/aioconsole/stream.py\", line 123, in create_standard_streams\r\n    reader, writer = yield from future\r\n  File \"/Users/ali/.pyenv/versions/3.5.3/lib/python3.5/site-packages/aioconsole/stream.py\", line 109, in open_pipe_connection\r\n    loop.remove_reader(transport._fileno)\r\nAttributeError: 'uvloop.loop.WriteUnixTransport' object has no attribute '_fileno'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/4", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/4/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/4/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/4", "id": 232769744, "node_id": "MDU6SXNzdWUyMzI3Njk3NDQ=", "number": 4, "title": "Windows Compatibility", "user": {"login": "ekevoo", "id": 871714, "node_id": "MDQ6VXNlcjg3MTcxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/871714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekevoo", "html_url": "https://github.com/ekevoo", "followers_url": "https://api.github.com/users/ekevoo/followers", "following_url": "https://api.github.com/users/ekevoo/following{/other_user}", "gists_url": "https://api.github.com/users/ekevoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekevoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekevoo/subscriptions", "organizations_url": "https://api.github.com/users/ekevoo/orgs", "repos_url": "https://api.github.com/users/ekevoo/repos", "events_url": "https://api.github.com/users/ekevoo/events{/privacy}", "received_events_url": "https://api.github.com/users/ekevoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-01T05:29:11Z", "updated_at": "2017-06-01T16:36:54Z", "closed_at": "2017-06-01T16:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://cloud.githubusercontent.com/assets/871714/26665664/49a294b4-4669-11e7-9ec6-521ee471c381.png)\r\n\r\nThe \"apython\" command installs itself normally in Windows, as it's also added to %PATH%, but it shows nothing. I've also tried to type \"exit()\" blind to see if it's just an output problem, but apparently it's also an input problem.\r\n\r\nI'll try to investigate further in the next few days, but I saw no mention of support of lack thereof anywhere, so I decided a heads-up issue was in order... Just in case I'm missing something obvious, or maybe it's a just documentation bug. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/1", "repository_url": "https://api.github.com/repos/vxgmichel/aioconsole", "labels_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/1/comments", "events_url": "https://api.github.com/repos/vxgmichel/aioconsole/issues/1/events", "html_url": "https://github.com/vxgmichel/aioconsole/issues/1", "id": 120171947, "node_id": "MDU6SXNzdWUxMjAxNzE5NDc=", "number": 1, "title": "Feature request: a REPL server using asyncio", "user": {"login": "gjcarneiro", "id": 2197096, "node_id": "MDQ6VXNlcjIxOTcwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2197096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjcarneiro", "html_url": "https://github.com/gjcarneiro", "followers_url": "https://api.github.com/users/gjcarneiro/followers", "following_url": "https://api.github.com/users/gjcarneiro/following{/other_user}", "gists_url": "https://api.github.com/users/gjcarneiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjcarneiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjcarneiro/subscriptions", "organizations_url": "https://api.github.com/users/gjcarneiro/orgs", "repos_url": "https://api.github.com/users/gjcarneiro/repos", "events_url": "https://api.github.com/users/gjcarneiro/events{/privacy}", "received_events_url": "https://api.github.com/users/gjcarneiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-03T13:31:44Z", "updated_at": "2015-12-04T17:56:09Z", "closed_at": "2015-12-04T17:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cool project!\n\nIf I can make a suggestion, add a REPL server module.  Something similar to [eventlet's backdoor module](http://eventlet.net/doc/modules/backdoor.html).  It listens on a TCP port, and you can connect to it (I usually run `rlwrap nc localhost <port>`), and execute Python commands. That is super useful for debugging server applications!\n\nYou can find the eventlet code [here](https://github.com/eventlet/eventlet/blob/master/eventlet/backdoor.py).\n", "performed_via_github_app": null, "score": 1.0}]}