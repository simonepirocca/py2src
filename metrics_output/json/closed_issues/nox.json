{"total_count": 119, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/theacodes/nox/issues/337", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/337/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/337/events", "html_url": "https://github.com/theacodes/nox/issues/337", "id": 657028007, "node_id": "MDU6SXNzdWU2NTcwMjgwMDc=", "number": 337, "title": "Macro Issues", "user": {"login": "D4nGuerrero", "id": 20586092, "node_id": "MDQ6VXNlcjIwNTg2MDky", "avatar_url": "https://avatars0.githubusercontent.com/u/20586092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/D4nGuerrero", "html_url": "https://github.com/D4nGuerrero", "followers_url": "https://api.github.com/users/D4nGuerrero/followers", "following_url": "https://api.github.com/users/D4nGuerrero/following{/other_user}", "gists_url": "https://api.github.com/users/D4nGuerrero/gists{/gist_id}", "starred_url": "https://api.github.com/users/D4nGuerrero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/D4nGuerrero/subscriptions", "organizations_url": "https://api.github.com/users/D4nGuerrero/orgs", "repos_url": "https://api.github.com/users/D4nGuerrero/repos", "events_url": "https://api.github.com/users/D4nGuerrero/events{/privacy}", "received_events_url": "https://api.github.com/users/D4nGuerrero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T03:15:24Z", "updated_at": "2020-07-15T12:14:13Z", "closed_at": "2020-07-15T12:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's 3 ways I could record my macro and none satisfied this need:\r\n1. Recording mouse movement is great but lacks hotkeys\r\n2. The one wth keymapping works well too but it disables the screen, why? I need to move and see results to know how much to record.\r\n3. I could write a script with slide but it lacks ms delay?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/334", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/334/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/334/events", "html_url": "https://github.com/theacodes/nox/issues/334", "id": 642581702, "node_id": "MDU6SXNzdWU2NDI1ODE3MDI=", "number": 334, "title": "Speed up install time", "user": {"login": "FFY00", "id": 11718923, "node_id": "MDQ6VXNlcjExNzE4OTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/11718923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FFY00", "html_url": "https://github.com/FFY00", "followers_url": "https://api.github.com/users/FFY00/followers", "following_url": "https://api.github.com/users/FFY00/following{/other_user}", "gists_url": "https://api.github.com/users/FFY00/gists{/gist_id}", "starred_url": "https://api.github.com/users/FFY00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FFY00/subscriptions", "organizations_url": "https://api.github.com/users/FFY00/orgs", "repos_url": "https://api.github.com/users/FFY00/repos", "events_url": "https://api.github.com/users/FFY00/events{/privacy}", "received_events_url": "https://api.github.com/users/FFY00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-21T15:12:40Z", "updated_at": "2020-07-02T01:28:28Z", "closed_at": "2020-06-21T23:03:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nWhen I run my tests, `session.install()` always takes too much time. This slows down the test run significantly. I did a quick benchmark on one of my projects, when I run the tests as is it takes 48s, after I comment out all `session.install()` calls it only takes 16s.\r\n\r\nIn my use case the tests are pretty quick to run, but I test with a wide variety of environments (multiple python versions). It is exactly the kind of use-case that would benefit from this.\r\n\r\n**Describe the solution you'd like**\r\nThere are two solutions I can think of, the first would be to parse the requirement strings we get in `session.install()` and check if the requirements are met before invoking pip, the second one would be to add an option to skip the install step. I think the first approach is the best, pip has a fairly big overhead when checking for dependencies, we can do it much faster. The second one is simpler, but can result in tests being run in broken environments.\r\n\r\n**Describe alternatives you've considered**\r\nI also considered saving the `seession.install()` arguments as metadata and checking for differences when running `nox`. If the data saved is different from what is currently defined in `noxfile.py`, we would proceed with the install, otherwise we would skip it. That could also be an option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/333", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/333/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/333/events", "html_url": "https://github.com/theacodes/nox/issues/333", "id": 637045730, "node_id": "MDU6SXNzdWU2MzcwNDU3MzA=", "number": 333, "title": "Question: is there any way of calling nox API inside a test framework (e.g. pytest)?", "user": {"login": "abravalheri", "id": 320755, "node_id": "MDQ6VXNlcjMyMDc1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/320755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abravalheri", "html_url": "https://github.com/abravalheri", "followers_url": "https://api.github.com/users/abravalheri/followers", "following_url": "https://api.github.com/users/abravalheri/following{/other_user}", "gists_url": "https://api.github.com/users/abravalheri/gists{/gist_id}", "starred_url": "https://api.github.com/users/abravalheri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abravalheri/subscriptions", "organizations_url": "https://api.github.com/users/abravalheri/orgs", "repos_url": "https://api.github.com/users/abravalheri/repos", "events_url": "https://api.github.com/users/abravalheri/events{/privacy}", "received_events_url": "https://api.github.com/users/abravalheri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T14:07:00Z", "updated_at": "2020-06-18T12:24:28Z", "closed_at": "2020-06-18T05:17:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you very much for nox. It is really handy and the API is very slick!\r\nSo much so that I was wondering if there is any way of calling it programatically from inside a test file to write integration/acceptance/end-to-end tests...\r\n\r\nLet me explain a little bit more, it is very common for me to create CLI python programs. Therefore it is important to test them running using different set of (optional) dependencies; if they work correctly when installed via conda, venv, virtualenv, wheel, sdist, ...; if they are correctly build/packed using setup tools...\r\nIt looks to me that nox's session API (or very much all nox API) would be perfect for this use case.\r\nHowever, it is nice to be able to use something like pytest to orchestrate and report these tests instead of directly creating nox tasks (after all, pytest allows debugging when things go wrong, we can use xdist, and loads of other niceties).\r\n\r\nOptimistically, the flow `nox (as task manger) > pytest > nox python API (to create venvs, install packages and run commands inside tests)`  would be the ultimate integration/acceptance/... test tool.\r\n\r\nSo, to summarise: is there any way of using nox session's API from a regular python file? (and: is there a way of capturing `session.run`'s `stdout/stderr`?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/330", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/330/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/330/events", "html_url": "https://github.com/theacodes/nox/issues/330", "id": 633771864, "node_id": "MDU6SXNzdWU2MzM3NzE4NjQ=", "number": 330, "title": "Add `run_always()` for \"install-type\" actions that don't use `pip`.", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-07T21:17:30Z", "updated_at": "2020-06-08T18:14:30Z", "closed_at": "2020-06-08T18:10:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See discussion in https://github.com/dhermes/bezier/issues/224.\r\n\r\nI am filing this issue because I'll be implementing this feature today.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/328", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/328/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/328/events", "html_url": "https://github.com/theacodes/nox/issues/328", "id": 627014027, "node_id": "MDU6SXNzdWU2MjcwMTQwMjc=", "number": 328, "title": "nox 2020.5.24 does not work on Python 3.5.2", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-29T05:43:44Z", "updated_at": "2020-05-29T05:43:48Z", "closed_at": "2020-05-29T05:43:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "As @theacodes knows, we're using nox in urllib3 to test Python 2 and Python 3, but the latest release of nox breaks on Travis when testing Python 2: https://travis-ci.org/github/urllib3/urllib3/jobs/692095744\r\n\r\n`python3` in Travis points to Python 3.5.2, which contains this typing bug: https://github.com/python/typing/issues/259, triggered by Nox.\r\n\r\nI'm not saying that nox should fix this, which is why I'm going to close this, but I thought you would be interested to know about it. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/321", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/321/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/321/events", "html_url": "https://github.com/theacodes/nox/issues/321", "id": 615203867, "node_id": "MDU6SXNzdWU2MTUyMDM4Njc=", "number": 321, "title": "ModuleNotFoundError: No module named 'nox' after pip installation", "user": {"login": "staticdev", "id": 1446633, "node_id": "MDQ6VXNlcjE0NDY2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1446633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staticdev", "html_url": "https://github.com/staticdev", "followers_url": "https://api.github.com/users/staticdev/followers", "following_url": "https://api.github.com/users/staticdev/following{/other_user}", "gists_url": "https://api.github.com/users/staticdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/staticdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staticdev/subscriptions", "organizations_url": "https://api.github.com/users/staticdev/orgs", "repos_url": "https://api.github.com/users/staticdev/repos", "events_url": "https://api.github.com/users/staticdev/events{/privacy}", "received_events_url": "https://api.github.com/users/staticdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-09T15:48:08Z", "updated_at": "2020-05-09T22:13:08Z", "closed_at": "2020-05-09T22:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\nI have upgraded Ubuntu to 20.04, it seems nox got uninstalled. I have `pip install --user nox`, also `pip install nox` and got successful installation on both.\r\n\r\n**How to reproduce**\r\nI run `nox` on a project with nox config files and get the error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/bin/nox\", line 6, in <module>\r\n    from nox.__main__ import main\r\nModuleNotFoundError: No module named 'nox'\r\n```\r\n\r\n**Expected behavior**\r\nnox run as usual.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/318", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/318/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/318/events", "html_url": "https://github.com/theacodes/nox/issues/318", "id": 604884028, "node_id": "MDU6SXNzdWU2MDQ4ODQwMjg=", "number": 318, "title": "Allow `session.install` and `session.conda_install` to run when no venv backend is set", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-22T16:15:32Z", "updated_at": "2020-05-24T05:40:36Z", "closed_at": "2020-05-24T05:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of now, when no venv backend is set (either through `python=False` or by setting the venv to `'none'`), users get a `ValueError` when trying to `install` or `conda_install`.\r\n\r\nIn some cases (See also #301 ) this would be actually useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/317", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/317/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/317/events", "html_url": "https://github.com/theacodes/nox/issues/317", "id": 604585226, "node_id": "MDU6SXNzdWU2MDQ1ODUyMjY=", "number": 317, "title": "Be able to force the backend temporarily", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-22T09:02:55Z", "updated_at": "2020-05-24T05:40:36Z", "closed_at": "2020-05-24T05:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We can imagine that a user working on some opensource project and cloning it will maybe have different settings than the project's continuous integration engine.\r\n\r\nIt could therefore be quite interesting to allow users to override the venv backend through a commandline or a global option.\r\n\r\nThis would be even interesting if combined to a \"no_venv\" choice of backend, in order to directly work on a passthrough (see #301 )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/315", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/315/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/315/events", "html_url": "https://github.com/theacodes/nox/issues/315", "id": 604019189, "node_id": "MDU6SXNzdWU2MDQwMTkxODk=", "number": 315, "title": "New global option `nox.options.venv_backend` to set the default backend", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-21T13:56:20Z", "updated_at": "2020-05-24T05:40:36Z", "closed_at": "2020-05-24T05:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As you've understood from my recent activity on this repo, I am a conda user ;)\r\n\r\nI like my `noxfile.py` but it could be much lighter if I did not have to write `venv_backend=\"conda\"` everywhere.\r\n\r\nTherefore I propose to define a new global option `nox.options.venv_backend` (or whatever alternate name you'll prefer of course)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/313", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/313/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/313/events", "html_url": "https://github.com/theacodes/nox/issues/313", "id": 603767475, "node_id": "MDU6SXNzdWU2MDM3Njc0NzU=", "number": 313, "title": "`CommandFailed` when using `conda_install` while being offline, even if env is fully setup", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T07:19:26Z", "updated_at": "2020-06-21T23:01:28Z", "closed_at": "2020-06-21T23:01:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As opposed to `session.install`, that continues to work nicely when no internet connection is present **but** all required packages are already installed, `session.conda_install` fails miserably.\r\n\r\n```\r\nsession.conda_install('pip')\r\nconda install --yes --prefix C:\\_dev\\python_ws\\my_project\\.nox\\lint-3-7 pip\r\nCommand conda install --yes --prefix C:\\_dev\\python_ws\\my_project\\.nox\\lint-3-7 pip failed with exit code 1:\r\nCollecting package metadata (current_repodata.json): ...working... failed\r\n# >>>>>>>>>>>>>>>>>>>>>> ERROR REPORT <<<<<<<<<<<<<<<<<<<<<<\r\n    Traceback (most recent call last):\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connection.py\", line 157, in _new_conn\r\n        (self._dns_host, self.port), self.timeout, **extra_kw\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\util\\connection.py\", line 61, in create_connection\r\n        for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n      File \"C:\\Miniconda3\\lib\\socket.py\", line 748, in getaddrinfo\r\n        for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\n    socket.gaierror: [Errno 11001] getaddrinfo failed\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 672, in urlopen\r\n        chunked=chunked,\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 376, in _make_request\r\n        self._validate_conn(conn)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 994, in _validate_conn\r\n        conn.connect()\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connection.py\", line 334, in connect\r\n        conn = self._new_conn()\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connection.py\", line 169, in _new_conn\r\n        self, \"Failed to establish a new connection: %s\" % e\r\n    urllib3.exceptions.NewConnectionError: <urllib3.connection.VerifiedHTTPSConnection object at 0x000001AD90D23F60>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\requests\\adapters.py\", line 449, in send\r\n        timeout=timeout\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 760, in urlopen\r\n        **response_kw\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 760, in urlopen\r\n        **response_kw\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 760, in urlopen\r\n        **response_kw\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\connectionpool.py\", line 720, in urlopen\r\n        method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\urllib3\\util\\retry.py\", line 436, in increment\r\n        raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\n    urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='repo.anaconda.com', port=443): Max retries exceeded with url: /pkgs/main/win-64/current_repodata.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x000001AD90D23F60>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 485, in fetch_repodata_remote_request\r\n        timeout=timeout)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\requests\\sessions.py\", line 546, in get\r\n        return self.request('GET', url, **kwargs)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\requests\\sessions.py\", line 533, in request\r\n        resp = self.send(prep, **send_kwargs)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\requests\\sessions.py\", line 646, in send\r\n        r = adapter.send(request, **kwargs)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\requests\\adapters.py\", line 516, in send\r\n        raise ConnectionError(e, request=request)\r\n    requests.exceptions.ConnectionError: HTTPSConnectionPool(host='repo.anaconda.com', port=443): Max retries exceeded with url: /pkgs/main/win-64/current_repodata.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x000001AD90D23F60>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\exceptions.py\", line 1078, in __call__\r\n        return func(*args, **kwargs)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\cli\\main.py\", line 84, in _main\r\n        exit_code = do_call(args, p)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\cli\\conda_argparse.py\", line 82, in do_call\r\n        exit_code = getattr(module, func_name)(args, parser)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\cli\\main_install.py\", line 20, in execute\r\n        install(args, parser, 'install')\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\cli\\install.py\", line 265, in install\r\n        should_retry_solve=(_should_retry_unfrozen or repodata_fn != repodata_fns[-1]),\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\solve.py\", line 117, in solve_for_transaction\r\n        should_retry_solve)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\solve.py\", line 158, in solve_for_diff\r\n        force_remove, should_retry_solve)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\solve.py\", line 262, in solve_final_state\r\n        ssc = self._collect_all_metadata(ssc)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\common\\io.py\", line 88, in decorated\r\n        return f(*args, **kwds)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\solve.py\", line 415, in _collect_all_metadata\r\n        index, r = self._prepare(prepared_specs)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\solve.py\", line 1004, in _prepare\r\n        self.subdirs, prepared_specs, self._repodata_fn)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\index.py\", line 229, in get_reduced_index\r\n        repodata_fn=repodata_fn)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 105, in query_all\r\n        result = tuple(concat(executor.map(subdir_query, channel_urls)))\r\n      File \"C:\\Miniconda3\\lib\\concurrent\\futures\\_base.py\", line 586, in result_iterator\r\n        yield fs.pop().result()\r\n      File \"C:\\Miniconda3\\lib\\concurrent\\futures\\_base.py\", line 432, in result\r\n        return self.__get_result()\r\n      File \"C:\\Miniconda3\\lib\\concurrent\\futures\\_base.py\", line 384, in __get_result\r\n        raise self._exception\r\n      File \"C:\\Miniconda3\\lib\\concurrent\\futures\\thread.py\", line 57, in run\r\n        result = self.fn(*self.args, **self.kwargs)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 98, in <lambda>\r\n        package_ref_or_match_spec))\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 110, in query\r\n        self.load()\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 174, in load\r\n        _internal_state = self._load()\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 248, in _load\r\n        repodata_fn=self.repodata_fn)\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\core\\subdir_data.py\", line 581, in fetch_repodata_remote_request\r\n        \"\"\") % maybe_unquote(repr(e))\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\common\\url.py\", line 368, in maybe_unquote\r\n        return unquote_plus(remove_auth(url)) if url else url\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\common\\url.py\", line 372, in remove_auth\r\n        url_parts = parse_url(url)._asdict()\r\n      File \"C:\\Miniconda3\\lib\\site-packages\\conda\\_vendor\\urllib3\\util\\url.py\", line 196, in parse_url\r\n        raise LocationParseError(url)\r\n    conda._vendor.urllib3.exceptions.LocationParseError: Failed to parse: ConnectionError(MaxRetryError(\"HTTPSConnectionPool(host='repo.anaconda.com', port=443): Max retries exceeded with url: \r\n`$ C:\\Miniconda3\\Scripts\\conda-script.py install --yes --prefix C:\\_dev\\python_ws\\my_project\\.nox\\lint-3-7 pip`\r\n  environment variables:\r\n                 CIO_TEST=<not set>\r\n        CONDA_DEFAULT_ENV=tools_py37\r\n                CONDA_EXE=C:\\Miniconda3\\condabin\\..\\Scripts\\conda.exe\r\n               CONDA_EXES=\"C:\\Miniconda3\\condabin\\..\\Scripts\\conda.exe\"\r\n             CONDA_PREFIX=C:\\Miniconda3\\envs\\tools_py37\r\n    CONDA_PROMPT_MODIFIER=(tools_py37)\r\n               CONDA_ROOT=C:\\Miniconda3\r\n              CONDA_SHLVL=1\r\n                 HOMEPATH=\\Users\\(...)\r\n                     PATH=C:\\Miniconda3;(...)\r\n             PSMODULEPATH=%ProgramFiles%\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPo\r\n                          werShell\\v1.0\\Modules\r\n  PYTHONDONTWRITEBYTECODE=1\r\n         PYTHONIOENCODING=UTF-8\r\n               PYTHONPATH=(...)\r\n         PYTHONUNBUFFERED=1\r\n       REQUESTS_CA_BUNDLE=<not set>\r\n            SSL_CERT_FILE=<not set>\r\n    VBOX_MSI_INSTALL_PATH=C:\\Program Files\\Oracle\\VirtualBox\\\r\n     active environment : tools_py37\r\n    active env location : C:\\Miniconda3\\envs\\tools_py37\r\n            shell level : 1\r\n       user config file : C:\\Users\\(...)\\.condarc\r\n populated config files : C:\\Users\\(...)\\.condarc\r\n          conda version : 4.8.0\r\n    conda-build version : not installed\r\n         python version : 3.7.3.final.0\r\n       virtual packages : __cuda=9.2\r\n       base environment : C:\\Miniconda3  (writable)\r\n           channel URLs : https://repo.anaconda.com/pkgs/main/win-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/free/win-64\r\n                          https://repo.anaconda.com/pkgs/free/noarch\r\n                          https://repo.anaconda.com/pkgs/r/win-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n                          https://repo.anaconda.com/pkgs/msys2/win-64\r\n                          https://repo.anaconda.com/pkgs/msys2/noarch\r\n          package cache : C:\\Miniconda3\\pkgs\r\n                          C:\\Users\\(...)\\.conda\\pkgs\r\n                          C:\\Users\\(...)\\AppData\\Local\\conda\\conda\\pkgs\r\n       envs directories : C:\\Miniconda3\\envs\r\n                          C:\\Users\\(...)\\.conda\\envs\r\n                          C:\\Users\\(...)\\AppData\\Local\\conda\\conda\\envs\r\n               platform : win-64\r\n             user-agent : conda/4.8.0 requests/2.22.0 CPython/3.7.3 Windows/10 Windows/10.0.18362\r\n          administrator : False\r\n             netrc file : None\r\n           offline mode : False\r\nAn unexpected error has occurred. Conda has prepared the above report.\r\nUpload did not complete.\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2019.2\\plugins\\python-ce\\helpers\\pydev\\_pydevd_bundle\\pydevd_exec2.py\", line 3, in Exec\r\n    exec(exp, global_vars, local_vars)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\_dev\\python_ws\\_Libs_OpenSource\\nox\\nox\\sessions.py\", line 327, in conda_install\r\n    **kwargs\r\n  File \"C:\\_dev\\python_ws\\_Libs_OpenSource\\nox\\nox\\sessions.py\", line 277, in _run\r\n    return nox.command.run(args, env=env, paths=self.bin_paths, **kwargs)\r\n  File \"C:\\_dev\\python_ws\\_Libs_OpenSource\\nox\\nox\\command.py\", line 125, in run\r\n    raise CommandFailed(\"Returned code {}\".format(return_code))\r\nnox.command.CommandFailed: Returned code 1\r\n```\r\n\r\nThis is of course a conda shortcoming but I think that we could easily solve this in `conda_install` by detecting when network is unavailable and adding the `\"--offline\"` flag when it is the case. I'll propose a PR.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/311", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/311/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/311/events", "html_url": "https://github.com/theacodes/nox/issues/311", "id": 603097337, "node_id": "MDU6SXNzdWU2MDMwOTczMzc=", "number": 311, "title": "`conda_install` should automatically escape args when they contain version constraints", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-20T09:45:12Z", "updated_at": "2020-06-24T20:57:26Z", "closed_at": "2020-06-24T20:57:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `Session.conda_install` one reads this example:\r\n\r\n```python\r\nsession.conda_install('--channel=conda-forge', 'dask==2.1.0')\r\n```\r\n\r\nNow consider that we tweak it very lightly: \r\n\r\n```python\r\nsession.conda_install('--channel=conda-forge', 'dask>2.0.0')\r\n```\r\n\r\nRunning it, at least on windows, will \r\n\r\n - not take into account the constraint \">2.0.0\"\r\n - write a nice but completely useless file named \"2.0.0\" in the working dir, containing the installation log.\r\n\r\nEven worse: reverting the sign (`'dask<2.0.0'`) yields an error:\r\n\r\n```shell\r\nCommand conda install --yes --prefix C:\\......\\.nox\\tests-2-7 --channel=conda-forge dask<2.0.0 failed with exit code 1:\r\nThe system cannot find the file specified.\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"C:\\_dev\\python_ws\\_Libs_OpenSource\\nox\\nox\\sessions.py\", line 293, in conda_install\r\n    **kwargs\r\n  File \"C:\\_dev\\python_ws\\_Libs_OpenSource\\nox\\nox\\sessions.py\", line 246, in _run\r\n    return nox.command.run(args, env=env, paths=self.bin_paths, **kwargs)\r\n  File \"C:\\_dev\\python_ws\\_Libs_OpenSource\\nox\\nox\\command.py\", line 125, in run\r\n    raise CommandFailed(\"Returned code {}\".format(return_code))\r\nnox.command.CommandFailed: Returned code 1\r\n```\r\n\r\nThis is of course because the `>` and `<` operators are handled by the shell and should be escaped. I'll try to propose some fix.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/301", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/301/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/301/events", "html_url": "https://github.com/theacodes/nox/issues/301", "id": 589410178, "node_id": "MDU6SXNzdWU1ODk0MTAxNzg=", "number": 301, "title": "Add a command line option for setting python=False", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-27T20:59:29Z", "updated_at": "2020-05-24T05:40:36Z", "closed_at": "2020-05-24T05:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nIf you have a `noxfile.py` that you use for development but also use `Docker` as a part of your CI you can skip having to create a virtualenv and reinstall dependencies that may have been installed as a part of your Docker image build step. For instance if I have:\r\n\r\n```dockerfile\r\nFROM python:3\r\n\r\nCOPY dev-requirements.txt .\r\nRUN python -m pip install -r dev-requirements.txt\r\n\r\nCOPY . .\r\nRUN nox -s test --use-current-env\r\n```\r\n\r\nthen my `session.install(\"-r\", \"dev-requirements.txt\")` step within my `noxfile.py` would only require checking cache, much faster to run. \r\n\r\n**Describe the solution you'd like**\r\n\r\nUsing `--use-current-env` (or alternative name, I'm fine with anything!) would override any `python=[]` within `noxfile.py` to `python=False` and use interpreter at `sys.executable`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/296", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/296/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/296/events", "html_url": "https://github.com/theacodes/nox/issues/296", "id": 578463637, "node_id": "MDU6SXNzdWU1Nzg0NjM2Mzc=", "number": 296, "title": "How to create environments with pyenv?", "user": {"login": "rsalmei", "id": 6652853, "node_id": "MDQ6VXNlcjY2NTI4NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6652853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsalmei", "html_url": "https://github.com/rsalmei", "followers_url": "https://api.github.com/users/rsalmei/followers", "following_url": "https://api.github.com/users/rsalmei/following{/other_user}", "gists_url": "https://api.github.com/users/rsalmei/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsalmei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsalmei/subscriptions", "organizations_url": "https://api.github.com/users/rsalmei/orgs", "repos_url": "https://api.github.com/users/rsalmei/repos", "events_url": "https://api.github.com/users/rsalmei/events{/privacy}", "received_events_url": "https://api.github.com/users/rsalmei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-10T10:02:17Z", "updated_at": "2020-03-23T18:37:27Z", "closed_at": "2020-03-23T18:15:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI can't run the following noxfile, could you help me?\r\n```\r\nimport nox\r\n\r\n\r\n@nox.session(python=['2.7', '3.6', '3.7', '3.8'])\r\ndef tests(session):\r\n    session.run('make', 'install')\r\n    session.run('pytest')\r\n```\r\n\r\nIt can't find one or more python interpreters:\r\n```\r\nnox > Ran multiple sessions:\r\nnox > * tests-2.7: success\r\nnox > * tests-3.6: failed\r\nnox > * tests-3.7: success\r\nnox > * tests-3.8: failed\r\n```\r\n\r\nBut I do have them installed, I use `pyenv` to manage my python interpreters:\r\n```\r\n$ pyenv versions --skip-aliases\r\n  system\r\n  2.7.15\r\n  2.7.15/envs/clearly27\r\n  3.6.6\r\n  3.6.6/envs/clearly36\r\n  3.6.6/envs/tsp\r\n  3.6.6/envs/wsaver\r\n  3.7.3\r\n  3.7.3/envs/about-time\r\n  3.7.3/envs/alive-progress\r\n  3.7.3/envs/clearly37\r\n  3.8.0\r\n```\r\n\r\nIn this dir I'm using a virtualenv of the `3.7.3` one:\r\n```\r\n$ pyenv version\r\nabout-time (set by /Users/rogerio/Documents/projects/about-time/.python-version)```\r\n```\r\n\r\nIn fact, I really can't call them:\r\n```\r\n$ python3.6\r\npyenv: python3.6: command not found\r\n\r\nThe `python3.6' command exists in these Python versions:\r\n  3.6.6\r\n```\r\n\r\nIf I change to 3.8.0 for example, 2.7, 3.7 and 3.8 works, only 3.6 doesn't:\r\n```\r\nnox > Running session tests-3.6\r\nnox > Creating virtual environment (virtualenv) using python3.6 in .nox/tests-3-6\r\nnox > Command /Users/rogerio/.pyenv/versions/3.8.0/bin/python3.8 -m virtualenv /Users/rogerio/Documents/projects/about-time/.nox/tests-3-6 -p python3.6 failed with exit code 1:\r\nRuntimeError: failed to find interpreter for Builtin discover of python_spec='python3.6'\r\nnox > Session tests-3.6 failed.\r\n```\r\n\r\nAny clues, please?\r\nI'd like to include nox in all my projects, testing first in `about_time`...\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/295", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/295/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/295/events", "html_url": "https://github.com/theacodes/nox/issues/295", "id": 577019468, "node_id": "MDU6SXNzdWU1NzcwMTk0Njg=", "number": 295, "title": "Coverage fails to run on 3.6.0", "user": {"login": "Peilonrayz", "id": 5623093, "node_id": "MDQ6VXNlcjU2MjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5623093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peilonrayz", "html_url": "https://github.com/Peilonrayz", "followers_url": "https://api.github.com/users/Peilonrayz/followers", "following_url": "https://api.github.com/users/Peilonrayz/following{/other_user}", "gists_url": "https://api.github.com/users/Peilonrayz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peilonrayz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peilonrayz/subscriptions", "organizations_url": "https://api.github.com/users/Peilonrayz/orgs", "repos_url": "https://api.github.com/users/Peilonrayz/repos", "events_url": "https://api.github.com/users/Peilonrayz/events{/privacy}", "received_events_url": "https://api.github.com/users/Peilonrayz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-06T15:54:13Z", "updated_at": "2020-03-18T22:02:57Z", "closed_at": "2020-03-18T22:02:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I run the tests, `nox`, to ensure I've not broken anything when submitting a PR, [tests-3.6](https://github.com/theacodes/nox/blob/8869bf2a20d51343e76459ca50ae2dc36d2b46e2/noxfile.py#L23) always fails. This is due to a bug in [CPython 3.6.0](https://github.com/python/cpython/commit/76995cab69d5ef83d31d8a5754cbad11be4038cb). Due to this bug [`coveragepy` doesn't work on 3.6.0](https://github.com/nedbat/coveragepy/issues/703).\r\n\r\nI need to run tests on 3.6.0 for other projects. Uninstalling and reinstalling between 3.6.0 and 3.6.1+ is doable, but IIRC would require me to uninstall and reinstall 3.7.0 and 3.8.0 each time. As Python doesn't allow you to install an older version if you have a newer version installed.\r\n\r\nCan the `noxfile.py` be updated so if you're on so 3.6.0 it either:\r\n\r\n1.  Doesn't run tests-3.6.\r\n2.  Doesn't run pytest-cov on 3.6, just pytest.  \r\n    It's possible to check the Python version, and just change the arguments to `session.run`. pytest-cov can be installed, only the arguments to run need to change.\r\n\r\n    ```python\r\n    def is_python_version(session, version):\r\n        if not version.startswith(session.python):\r\n            return False\r\n        py_version = session.run(\"python\", \"-V\", silent=True)\r\n        py_version = py_version.partition(' ')[2].strip()\r\n        return py_version.startswith(version)\r\n\r\n\r\n    is_python_version(session, \"3.6.0\")\r\n    ```\r\n\r\nI am happy to submit a PR.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/291", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/291/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/291/events", "html_url": "https://github.com/theacodes/nox/issues/291", "id": 576560177, "node_id": "MDU6SXNzdWU1NzY1NjAxNzc=", "number": 291, "title": "Universal wheel when Python 2.7 support has long been dropped", "user": {"login": "schuderer", "id": 4430527, "node_id": "MDQ6VXNlcjQ0MzA1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4430527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schuderer", "html_url": "https://github.com/schuderer", "followers_url": "https://api.github.com/users/schuderer/followers", "following_url": "https://api.github.com/users/schuderer/following{/other_user}", "gists_url": "https://api.github.com/users/schuderer/gists{/gist_id}", "starred_url": "https://api.github.com/users/schuderer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schuderer/subscriptions", "organizations_url": "https://api.github.com/users/schuderer/orgs", "repos_url": "https://api.github.com/users/schuderer/repos", "events_url": "https://api.github.com/users/schuderer/events{/privacy}", "received_events_url": "https://api.github.com/users/schuderer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1362260657, "node_id": "MDU6TGFiZWwxMzYyMjYwNjU3", "url": "https://api.github.com/repos/theacodes/nox/labels/Good%20first%20issue", "name": "Good first issue", "color": "f90cde", "default": false, "description": ""}, {"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-05T22:06:51Z", "updated_at": "2020-03-06T17:37:23Z", "closed_at": "2020-03-06T17:37:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "More of a cleanup suggestion really. \r\n\r\n**Describe the bug**\r\nNox ist still distributed using a universal wheel, while at the same time, Python 2.7 is not supported.\r\n\r\nI am not 100% sure about the repercussions of this (tools checking compatibility and maybe claiming nox would work when it wouldn't?), but it seems sensible to remove the `universal` config setting.\r\n\r\nIn any case, it would make it possible to outright remove `setup.cfg`, making the project directory just a *tad* cleaner. :)\r\n\r\n**How to reproduce**\r\nNox's [wheel file on PyPI](https://pypi.org/project/nox/#files) has contains the identifier `py2.py3`.\r\n`setup.cfg` contains:\r\n```ini\r\n[bdist_wheel]\r\nuniversal = 1\r\n```\r\n\r\n**Expected behavior**\r\nNo inadvertent hinting of Python 2 compatibility. One fewer config file. \ud83c\udf89 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/287", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/287/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/287/events", "html_url": "https://github.com/theacodes/nox/issues/287", "id": 567834216, "node_id": "MDU6SXNzdWU1Njc4MzQyMTY=", "number": 287, "title": "Improve typing around untyped callables attributes.", "user": {"login": "Peilonrayz", "id": 5623093, "node_id": "MDQ6VXNlcjU2MjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5623093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peilonrayz", "html_url": "https://github.com/Peilonrayz", "followers_url": "https://api.github.com/users/Peilonrayz/followers", "following_url": "https://api.github.com/users/Peilonrayz/following{/other_user}", "gists_url": "https://api.github.com/users/Peilonrayz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peilonrayz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peilonrayz/subscriptions", "organizations_url": "https://api.github.com/users/Peilonrayz/orgs", "repos_url": "https://api.github.com/users/Peilonrayz/repos", "events_url": "https://api.github.com/users/Peilonrayz/events{/privacy}", "received_events_url": "https://api.github.com/users/Peilonrayz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Peilonrayz", "id": 5623093, "node_id": "MDQ6VXNlcjU2MjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5623093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peilonrayz", "html_url": "https://github.com/Peilonrayz", "followers_url": "https://api.github.com/users/Peilonrayz/followers", "following_url": "https://api.github.com/users/Peilonrayz/following{/other_user}", "gists_url": "https://api.github.com/users/Peilonrayz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peilonrayz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peilonrayz/subscriptions", "organizations_url": "https://api.github.com/users/Peilonrayz/orgs", "repos_url": "https://api.github.com/users/Peilonrayz/repos", "events_url": "https://api.github.com/users/Peilonrayz/events{/privacy}", "received_events_url": "https://api.github.com/users/Peilonrayz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Peilonrayz", "id": 5623093, "node_id": "MDQ6VXNlcjU2MjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5623093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peilonrayz", "html_url": "https://github.com/Peilonrayz", "followers_url": "https://api.github.com/users/Peilonrayz/followers", "following_url": "https://api.github.com/users/Peilonrayz/following{/other_user}", "gists_url": "https://api.github.com/users/Peilonrayz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peilonrayz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peilonrayz/subscriptions", "organizations_url": "https://api.github.com/users/Peilonrayz/orgs", "repos_url": "https://api.github.com/users/Peilonrayz/repos", "events_url": "https://api.github.com/users/Peilonrayz/events{/privacy}", "received_events_url": "https://api.github.com/users/Peilonrayz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-19T20:42:38Z", "updated_at": "2020-03-06T02:22:05Z", "closed_at": "2020-03-06T02:22:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\n\r\nCurrently in nox there are quite a few callables with untyped attributes. For example; [`nox._parametrize.generate_calls`](https://github.com/theacodes/nox/blob/1bd08bc7d85f7276b07a72b720c673a5df384188/nox/_parametrize.py#L172) assigns `param_spec` to a `Callable[..., Any]`, thus losing it's type and causing errors. This along with what seems like another one or two decorators, with custom attributes, are causing [large amounts of `# type: ignore`s](https://github.com/theacodes/nox/blob/1bd08bc7d85f7276b07a72b720c673a5df384188/nox/manifest.py#L164).\r\n\r\nI would like to change the code to be able to remove these `# type: ignore`s that are cluttering up the place, and making mypy less reliable.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to change these decorators from function decorators to class decorators.\r\nTake for example the following as a rewrite of `nox._parametrize.generate_calls`:\r\n\r\n```python\r\nclass Call:\r\n    def __init__(self, func, param_spec):\r\n        self._func = func\r\n        self.param_spec = param_spec\r\n        self.session_signature = \"({})\".format(param_spec)\r\n\r\n    def __call__(self, *args, **kwargs):\r\n        kwargs.update(self.param_spec.call_spec)\r\n        return self._func(*args, **kwargs)\r\n\r\n    @classmethod\r\n    def generate_calls(cls, func, param_specs):\r\n        return [\r\n            functools.wraps(func)(cls(func, param_spec))\r\n            for param_spec in param_specs\r\n        ]\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAn alternate is to utilize [`typing.Protocol`](https://docs.python.org/3/library/typing.html#typing.Protocol) available in Python 3.8. With the backport [`typing_extensions.Protocol`](https://github.com/python/typing/tree/master/typing_extensions) working in everything except Python 3.5.0. This would mean adding `typing_extensions` as a requirement.\r\n\r\nIf you don't know what it is, then they're a means of defining an interface. It would look something like:\r\n\r\n```python\r\nclass Call(Protocol):\r\n    param_spec: Any\r\n    session_signature: str\r\n\r\n    def __call__(self, *args: Any, **kwargs: Any) -> Any:\r\n        ...\r\n\r\ndef generate_calls(\r\n    func: Callable[..., Any], param_specs: Iterable[Param]\r\n) -> Call:\r\n    ...\r\n```\r\n\r\n---\r\n\r\nWhen implementing I'd try to find the actual typings rather than just discard them with those tasty `Any`s. They're merely as proof of concepts.\r\n\r\nCurrently my typing skills with `Protocol` are sub-par. However I would prefer an explicit class as it allows me to more easily navigate the code and find what's doing what. It also means that later code can be expanded upon without mutating an instance of a function. Something I'm not a big fan of.\r\n\r\nI would like to mention that I've not looked any more than skin deep on this issue. And so a resolution with either, may require more than just changing a function decorator to a class decorator or using a protocol.\r\n\r\nWould you like this as a change? Would you like one of the above solutions, or is there a better way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/285", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/285/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/285/events", "html_url": "https://github.com/theacodes/nox/issues/285", "id": 564058148, "node_id": "MDU6SXNzdWU1NjQwNTgxNDg=", "number": 285, "title": "nox invocation of `poetry install` fails with TypeError (passing None)", "user": {"login": "ToddG", "id": 104545, "node_id": "MDQ6VXNlcjEwNDU0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/104545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ToddG", "html_url": "https://github.com/ToddG", "followers_url": "https://api.github.com/users/ToddG/followers", "following_url": "https://api.github.com/users/ToddG/following{/other_user}", "gists_url": "https://api.github.com/users/ToddG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ToddG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ToddG/subscriptions", "organizations_url": "https://api.github.com/users/ToddG/orgs", "repos_url": "https://api.github.com/users/ToddG/repos", "events_url": "https://api.github.com/users/ToddG/events{/privacy}", "received_events_url": "https://api.github.com/users/ToddG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-12T15:00:10Z", "updated_at": "2020-02-12T21:42:33Z", "closed_at": "2020-02-12T20:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\nI'm following this tutorial:\r\nhttps://cjolowicz.github.io/posts/hypermodern-python-01-setup/\r\n\r\nRunning `nox` or `nox -r` fails due to an error in poetry. It seems that nox is invoking poetry differently from the command line (which successfully runs `poetry install`).\r\n\r\nnoxfile\r\n```python\r\n    session.run(\"poetry\", \"install\", \"-v\", external=True)\r\n```\r\nerror\r\n```bash\r\n[TypeError]\r\nexpected string or bytes-like object\r\n```\r\n\r\nI've detailed this bug in greater detail here:\r\nhttps://github.com/cjolowicz/hypermodern-python/issues/18\r\n\r\nAnd added to a SO thread here:\r\nhttps://stackoverflow.com/questions/59768651/how-to-use-nox-with-poetry/60190989#60190989\r\n\r\n**How to reproduce**\r\n```bash\r\ngit clone https://github.com/cjolowicz/hypermodern-python.git\r\ncd hypermodern-python.git\r\ngit co -b remotes/origin/chapter07\r\nnox\r\n```\r\n\r\n**Expected behavior**\r\nShould have installed the local project, 'hypermodern-python',  and then proceeded to run the test suite.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/284", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/284/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/284/events", "html_url": "https://github.com/theacodes/nox/issues/284", "id": 563008086, "node_id": "MDU6SXNzdWU1NjMwMDgwODY=", "number": 284, "title": "Having a space in the username keeps Nox from finding needed files", "user": {"login": "paw-lu", "id": 30049606, "node_id": "MDQ6VXNlcjMwMDQ5NjA2", "avatar_url": "https://avatars1.githubusercontent.com/u/30049606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paw-lu", "html_url": "https://github.com/paw-lu", "followers_url": "https://api.github.com/users/paw-lu/followers", "following_url": "https://api.github.com/users/paw-lu/following{/other_user}", "gists_url": "https://api.github.com/users/paw-lu/gists{/gist_id}", "starred_url": "https://api.github.com/users/paw-lu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paw-lu/subscriptions", "organizations_url": "https://api.github.com/users/paw-lu/orgs", "repos_url": "https://api.github.com/users/paw-lu/repos", "events_url": "https://api.github.com/users/paw-lu/events{/privacy}", "received_events_url": "https://api.github.com/users/paw-lu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1362260657, "node_id": "MDU6TGFiZWwxMzYyMjYwNjU3", "url": "https://api.github.com/repos/theacodes/nox/labels/Good%20first%20issue", "name": "Good first issue", "color": "f90cde", "default": false, "description": ""}, {"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 730127473, "node_id": "MDU6TGFiZWw3MzAxMjc0NzM=", "url": "https://api.github.com/repos/theacodes/nox/labels/os:%20windows", "name": "os: windows", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-11T06:48:18Z", "updated_at": "2020-03-04T02:25:16Z", "closed_at": "2020-03-04T02:25:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\nAny installation command results in a `FileNotFoundError` when using Nox in Windows Subsystem for Linux if there is a space in the username.\r\n\r\n**How to reproduce**\r\n<!-- If possible, include your Noxfile and how you invoked Nox -->\r\n\r\n```python\r\nimport nox\r\n\r\n@nox.session\r\ndef tests(session):\r\n    session.install('pytest')\r\n\r\n```\r\n\r\nCalling\r\n\r\n```zsh\r\n\u279c  nox --version\r\n2019.11.9\r\n\u279c nox\r\nnox > Running session tests\r\nnox > Creating virtual environment (virtualenv) using python in .nox/tests\r\nnox > pip install pytest\r\nnox > Session tests raised exception FileNotFoundError(2, 'No such file or directory')\r\nTraceback (most recent call last):\r\n  File \"/home/pcosta/.local/pipx/venvs/nox/lib/python3.8/site-packages/nox/sessions.py\", line 406, in execute\r\n    self.func(session)\r\n  File \"/mnt/c/Users/Paulo Costa/linux/test/noxfile.py\", line 5, in tests\r\n    session.install('pytest')\r\n  File \"/home/pcosta/.local/pipx/venvs/nox/lib/python3.8/site-packages/nox/sessions.py\", line 306, in install\r\n    self._run(\"pip\", \"install\", *args, external=\"error\", **kwargs)\r\n  File \"/home/pcosta/.local/pipx/venvs/nox/lib/python3.8/site-packages/nox/sessions.py\", line 222, in _run\r\n    return nox.command.run(args, env=env, path=self.bin, **kwargs)\r\n  File \"/home/pcosta/.local/pipx/venvs/nox/lib/python3.8/site-packages/nox/command.py\", line 108, in run\r\n    return_code, output = popen(\r\n  File \"/home/pcosta/.local/pipx/venvs/nox/lib/python3.8/site-packages/nox/popen.py\", line 28, in popen\r\n    proc = subprocess.Popen(args, env=env, stdout=stdout, stderr=stderr)\r\n  File \"/home/pcosta/.pyenv/versions/3.8.1/lib/python3.8/subprocess.py\", line 854, in __init__\r\n    self._execute_child(args, executable, preexec_fn, close_fds,\r\n  File \"/home/pcosta/.pyenv/versions/3.8.1/lib/python3.8/subprocess.py\", line 1702, in _execute_child\r\n    raise child_exception_type(errno_num, err_msg, err_filename)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/mnt/c/Users/Paulo Costa/linux/test/.nox/tests/bin/pip'\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\nSeems that the process does not properly account for the space in the user name. Path _should_ be `/mnt/c/Users/Paulo\\ Costa/linux/test/.nox/tests/bin/pip`.\r\n\r\n---\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/276", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/276/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/276/events", "html_url": "https://github.com/theacodes/nox/issues/276", "id": 556777657, "node_id": "MDU6SXNzdWU1NTY3Nzc2NTc=", "number": 276, "title": "Are more type hints desired?", "user": {"login": "Peilonrayz", "id": 5623093, "node_id": "MDQ6VXNlcjU2MjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5623093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peilonrayz", "html_url": "https://github.com/Peilonrayz", "followers_url": "https://api.github.com/users/Peilonrayz/followers", "following_url": "https://api.github.com/users/Peilonrayz/following{/other_user}", "gists_url": "https://api.github.com/users/Peilonrayz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peilonrayz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peilonrayz/subscriptions", "organizations_url": "https://api.github.com/users/Peilonrayz/orgs", "repos_url": "https://api.github.com/users/Peilonrayz/repos", "events_url": "https://api.github.com/users/Peilonrayz/events{/privacy}", "received_events_url": "https://api.github.com/users/Peilonrayz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-29T10:42:14Z", "updated_at": "2020-02-19T18:18:10Z", "closed_at": "2020-02-19T18:18:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was interested in adding a different virtual environment / package manager to nox, independently. And noticed you don't have many type hints. The [`noxfile.py` runs mypy](https://github.com/theacodes/nox/blob/8151acdf0a8206559a0c42e50b0b199c5592da8e/noxfile.py#L70), so I'm thinking the answer is yes.\r\n\r\nAre more type hints / static typing desired?\r\n\r\n---\r\n\r\nIf you do:\r\n\r\n-   Is there anything you don't want to be typed?\r\n-   If required, are you ok with adding `typing_extensions` as an additional requirement?  \r\n    Should it be avoided at all costs?\r\n-   If a situation arises where mypy errors unless a substantial refactor occurs, what is the desired solution?\r\n\r\n    If it's not deemed possible to resolve the situation with type hints or variable annotations alone. Should the error be silenced, `# type: ignore`, and a todo, `# TODO: ...`, be added?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/271", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/271/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/271/events", "html_url": "https://github.com/theacodes/nox/issues/271", "id": 547138645, "node_id": "MDU6SXNzdWU1NDcxMzg2NDU=", "number": 271, "title": "Include `setuptools` as an explicit project requirement due to `import pkg_resources`", "user": {"login": "jwilges", "id": 6744187, "node_id": "MDQ6VXNlcjY3NDQxODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6744187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwilges", "html_url": "https://github.com/jwilges", "followers_url": "https://api.github.com/users/jwilges/followers", "following_url": "https://api.github.com/users/jwilges/following{/other_user}", "gists_url": "https://api.github.com/users/jwilges/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwilges/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwilges/subscriptions", "organizations_url": "https://api.github.com/users/jwilges/orgs", "repos_url": "https://api.github.com/users/jwilges/repos", "events_url": "https://api.github.com/users/jwilges/events{/privacy}", "received_events_url": "https://api.github.com/users/jwilges/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1362260657, "node_id": "MDU6TGFiZWwxMzYyMjYwNjU3", "url": "https://api.github.com/repos/theacodes/nox/labels/Good%20first%20issue", "name": "Good first issue", "color": "f90cde", "default": false, "description": ""}, {"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 718269511, "node_id": "MDU6TGFiZWw3MTgyNjk1MTE=", "url": "https://api.github.com/repos/theacodes/nox/labels/packaging", "name": "packaging", "color": "fcc7e3", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-08T22:25:18Z", "updated_at": "2020-01-29T10:40:22Z", "closed_at": "2020-01-10T18:09:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n`nox` depends on `setuptools` but does not specify it explicitly in `setup.py`. This may not be a common issue, but in a minimal CI environment, I ran into this issue.\r\n\r\n**How to reproduce**\r\nIf `setuptools` is not present, `nox` cannot import `pkg_resources`.\r\n\r\nSee the abbreviated console session below for an example:\r\n\r\n```\r\n> nox --help\r\nTraceback (most recent call last):\r\n  File \"...\\python38\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"...\\python38\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"...\\AppData\\Roaming\\Python\\Python38\\Scripts\\nox.exe\\__main__.py\", line 5, in <module>\r\n  File \"...\\AppData\\Roaming\\Python\\Python38\\site-packages\\nox\\__main__.py\", line 24, in <module>\r\n    import pkg_resources\r\nModuleNotFoundError: No module named 'pkg_resources'\r\n> pip install setuptools\r\nCollecting setuptools\r\n  ...\r\nSuccessfully installed setuptools-44.0.0\r\n> nox --help\r\nusage: nox [-h] [--version] [-l] [-s [SESSIONS [SESSIONS ...]]] [-k KEYWORDS] [-v] [-r] [--no-reuse-existing-virtualenvs] [-f NOXFILE] [--envdir ENVDIR]\r\n           [-x] [--no-stop-on-first-error] [--error-on-missing-interpreters] [--no-error-on-missing-interpreters] [--error-on-external-run]\r\n           [--no-error-on-external-run] [--install-only] [--report REPORT] [--non-interactive] [--nocolor] [--forcecolor]\r\n           ...\r\n\r\nNox is a Python automation toolkit.\r\n```\r\n\r\n**Expected behavior**\r\nThe `nox` package should pull `setuptools` as an explicit dependency in `setup.py`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/269", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/269/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/269/events", "html_url": "https://github.com/theacodes/nox/issues/269", "id": 544177706, "node_id": "MDU6SXNzdWU1NDQxNzc3MDY=", "number": 269, "title": "Support for python3.8", "user": {"login": "lewoudar", "id": 10879977, "node_id": "MDQ6VXNlcjEwODc5OTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/10879977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lewoudar", "html_url": "https://github.com/lewoudar", "followers_url": "https://api.github.com/users/lewoudar/followers", "following_url": "https://api.github.com/users/lewoudar/following{/other_user}", "gists_url": "https://api.github.com/users/lewoudar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lewoudar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lewoudar/subscriptions", "organizations_url": "https://api.github.com/users/lewoudar/orgs", "repos_url": "https://api.github.com/users/lewoudar/repos", "events_url": "https://api.github.com/users/lewoudar/events{/privacy}", "received_events_url": "https://api.github.com/users/lewoudar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-31T12:26:18Z", "updated_at": "2020-01-06T19:18:04Z", "closed_at": "2020-01-06T15:45:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi everyone,\r\nI forked the project to update noxfile and ci configuration for python3.8 but when I test on my laptop I was surprised that the session tests-3.7 failed, to be precise it is nox/sessions and nox/virtualenv tests that failed .\r\n\r\n**How to reproduce**\r\nI use a Windows 10 PC and I have installed dependencies using `pip install -e .`\r\n\r\nDoes anyone have an explanation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/266", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/266/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/266/events", "html_url": "https://github.com/theacodes/nox/issues/266", "id": 531627124, "node_id": "MDU6SXNzdWU1MzE2MjcxMjQ=", "number": 266, "title": "Colorized output is not disabled when output is redirected", "user": {"login": "software-dov", "id": 2960535, "node_id": "MDQ6VXNlcjI5NjA1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/software-dov", "html_url": "https://github.com/software-dov", "followers_url": "https://api.github.com/users/software-dov/followers", "following_url": "https://api.github.com/users/software-dov/following{/other_user}", "gists_url": "https://api.github.com/users/software-dov/gists{/gist_id}", "starred_url": "https://api.github.com/users/software-dov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/software-dov/subscriptions", "organizations_url": "https://api.github.com/users/software-dov/orgs", "repos_url": "https://api.github.com/users/software-dov/repos", "events_url": "https://api.github.com/users/software-dov/events{/privacy}", "received_events_url": "https://api.github.com/users/software-dov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1362260657, "node_id": "MDU6TGFiZWwxMzYyMjYwNjU3", "url": "https://api.github.com/repos/theacodes/nox/labels/Good%20first%20issue", "name": "Good first issue", "color": "f90cde", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-03T00:24:57Z", "updated_at": "2019-12-11T18:58:23Z", "closed_at": "2019-12-11T18:58:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\nRedirecting nox output does not correctly determine that stdout is not a tty and adds color control codes to the output.\r\n\r\n**How to reproduce**\r\nGiven a noxfile that defines some targets, e.g. unit tests, run\r\n`cd path/to/repo && python -m nox -s &> output-log.txt`\r\n\r\n**Expected behavior**\r\nThe contents of `output-log.txt` should be plain ASCII (or UTF-8) and not contain cursor control codes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/261", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/261/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/261/events", "html_url": "https://github.com/theacodes/nox/issues/261", "id": 515506837, "node_id": "MDU6SXNzdWU1MTU1MDY4Mzc=", "number": 261, "title": "Command line: handle additional arguments as posargs", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1057221799, "node_id": "MDU6TGFiZWwxMDU3MjIxNzk5", "url": "https://api.github.com/repos/theacodes/nox/labels/needs%20clarification", "name": "needs clarification", "color": "ff8649", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-31T15:06:02Z", "updated_at": "2019-11-05T06:52:02Z", "closed_at": "2019-11-01T07:47:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nAt the moment, invoking `nox` with trailing arguments gives an error:\r\n\r\n```\r\n>nox serve\r\nusage: nox [-h] [--version] [-l] [-s [SESSIONS [SESSIONS ...]]] [-k KEYWORDS]\r\n           [-v] [-r] [--no-reuse-existing-virtualenvs] [-f NOXFILE]\r\n           [--envdir ENVDIR] [-x] [--no-stop-on-first-error]\r\n           [--error-on-missing-interpreters]\r\n           [--no-error-on-missing-interpreters] [--error-on-external-run]\r\n           [--no-error-on-external-run] [--install-only] [--report REPORT]\r\n           [--non-interactive] [--nocolor] [--forcecolor]\r\n           ...\r\nnox: error: Unknown argument(s) 'serve'.\r\n```\r\n\r\nThis is not very useful. Allowing additional arguments to be handled as a `posargs` array (without needing `--`) would make for more natural command line usage in certain cases:\r\n\r\n```python\r\nimport nox\r\n\r\n@nox.session\r\ndef admin(session):\r\n    session.install(\"nikola\")\r\n    session.cd(\"website\")\r\n    if session.posargs[0] == \"build\":\r\n        session.run(\"nikola\", \"build\")\r\n    elif session.posargs[0] == \"serve\":\r\n        session.run(\"nikola\", \"serve\")\r\n    else:\r\n        print(\"Unknown admin command:\", session.posargs[0])\r\n```\r\n\r\nWith the above noxfile, `nox serve` reads much better than `nox -- serve`.\r\n\r\n**Describe the solution you'd like**\r\nAllow posargs to be recognised without needing `--`. As far as I can see there is no conflict, as nox currently does not take non-optional command line arguments at all.\r\n\r\nI don't know how hard this would be to implement in practice - my understanding was that `argparse` (which I think `nox` uses) doesn't require the `--`, which suggests that special effort might have been made to require it - in which case, implementation may be harder than I'm anticipating.\r\n\r\n**Describe alternatives you've considered**\r\nAs noted, the current workaround is `nox -- posargs`, which isn't *that* bad, it just looks a little ugly.\r\n\r\nOther tools, designed more specifically for interactive use (like `invoke`) parse the command line more naturally, but don't have the virtual environment management features that `nox` has, so there's a lot more boilerplate needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/256", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/256/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/256/events", "html_url": "https://github.com/theacodes/nox/issues/256", "id": 505619730, "node_id": "MDU6SXNzdWU1MDU2MTk3MzA=", "number": 256, "title": "Session.run finds incorrect Python ", "user": {"login": "JeremyBYU", "id": 6628085, "node_id": "MDQ6VXNlcjY2MjgwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6628085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeremyBYU", "html_url": "https://github.com/JeremyBYU", "followers_url": "https://api.github.com/users/JeremyBYU/followers", "following_url": "https://api.github.com/users/JeremyBYU/following{/other_user}", "gists_url": "https://api.github.com/users/JeremyBYU/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeremyBYU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeremyBYU/subscriptions", "organizations_url": "https://api.github.com/users/JeremyBYU/orgs", "repos_url": "https://api.github.com/users/JeremyBYU/repos", "events_url": "https://api.github.com/users/JeremyBYU/events{/privacy}", "received_events_url": "https://api.github.com/users/JeremyBYU/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-11T03:42:50Z", "updated_at": "2020-06-21T22:58:43Z", "closed_at": "2020-06-21T22:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n`session.run('python', ..., ....)` can not find the *virtual* environments python. \r\n\r\n**How to reproduce**\r\nHere is my noxfile.py. The last line is the where the issue occurs.  There are **no** issues in creating a conda environment, installing conda packages, installing pip packages, and performing the pytest. I have verified it all and it completely works as expected (installing and using binaries and scripts in the virtual environment). The issue is only the last command which could only find a default python on the system (external). I have diagnosed the issue and it is explained below.\r\n\r\n```python\r\nimport nox\r\nimport os\r\nVENV = 'conda' if os.name == 'nt' else None\r\nNAME = 'win' if os.name == 'nt' else 'linux'\r\n\r\n@nox.session(\r\n    python=['3.6', '3.7'],\r\n    reuse_venv=True,\r\n    venv_backend=VENV,\r\n    name='test_' + NAME)\r\ndef test(session):\r\n    if VENV == 'conda':\r\n        session.conda_install('--channel=conda-forge', 'shapely')\r\n    session.install('-e', '.[dev]')\r\n    session.run('pytest')\r\n    session.run('python', 'setup.py', 'sdist', 'bdist_wheel')\r\n```\r\n\r\n**Fix**\r\n\r\nThe issue is here:  https://github.com/theacodes/nox/blob/ac0992332a266f85152db8a5252b1fdf9818eb75/nox/command.py#L82\r\n\r\nwhere `cmd` is `python` and  `path` will be to the virtual environments `Script` directory. Here is a picture of what `path` is:\r\n![scripts](https://user-images.githubusercontent.com/6628085/66622663-90f41000-ebb6-11e9-93a9-80962aacd700.PNG)\r\n\r\nAs you can see there is no python here. The correct python is here:\r\n\r\n![python](https://user-images.githubusercontent.com/6628085/66622736-dc0e2300-ebb6-11e9-9dd3-7237cb01bb08.PNG)\r\n\r\n\r\nThe change I performed to fix this issue is highlighted in the images. I changed this:\r\nhttps://github.com/theacodes/nox/blob/ac0992332a266f85152db8a5252b1fdf9818eb75/nox/command.py#L36\r\n\r\nto this:\r\n\r\n```\r\nif path:\r\n        full_path = py.path.local.sysfind(program, paths=[path, os.path.dirname(path)])\r\n```\r\n\r\nNow everything works as expected. I am not sure if this is the best way to fix but it works well for me. If this is acceptable I can do a pull request if you would like.\r\n\r\nThanks for your great work!\r\n\r\n  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/252", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/252/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/252/events", "html_url": "https://github.com/theacodes/nox/issues/252", "id": 499766839, "node_id": "MDU6SXNzdWU0OTk3NjY4Mzk=", "number": 252, "title": "Missing interpreters aren't skipped under pyenv", "user": {"login": "florimondmanca", "id": 15911462, "node_id": "MDQ6VXNlcjE1OTExNDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/15911462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florimondmanca", "html_url": "https://github.com/florimondmanca", "followers_url": "https://api.github.com/users/florimondmanca/followers", "following_url": "https://api.github.com/users/florimondmanca/following{/other_user}", "gists_url": "https://api.github.com/users/florimondmanca/gists{/gist_id}", "starred_url": "https://api.github.com/users/florimondmanca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florimondmanca/subscriptions", "organizations_url": "https://api.github.com/users/florimondmanca/orgs", "repos_url": "https://api.github.com/users/florimondmanca/repos", "events_url": "https://api.github.com/users/florimondmanca/events{/privacy}", "received_events_url": "https://api.github.com/users/florimondmanca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-28T12:34:42Z", "updated_at": "2019-09-28T12:53:30Z", "closed_at": "2019-09-28T12:39:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "EDIT: the solution is to activate all installed targeted Python versions in `pyenv`, see https://github.com/theacodes/nox/issues/252#issuecomment-536185910.\r\n\r\n---\r\n\r\n<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\n<!-- Please be as detailed as possible! -->\r\n\r\nThe shims inserted by `pyenv` into the shell fool the `py.path.local.sysfind()` call made [here](https://github.com/theacodes/nox/blob/e9baf4faad8661f3567ee697666203d42a1108c9/nox/virtualenv.py#L274), and results in Nox not correctly skipping missing interpreters.\r\n\r\n**How to reproduce**\r\n<!-- If possible, include your Noxfile and how you invoked Nox -->\r\n- Have [`pyenv`](https://github.com/pyenv/pyenv) installed with at least 2 different Python minor versions.\r\n  - Docker setup (installing may take a while):\r\n\r\n```console\r\n$ docker pull themattrix/pyenv\r\n$ docker run --rm -it themattrix/pyenv bash\r\n# pyenv install 3.6.5\r\n# pyenv install 3.7.0\r\n# pyenv global 3.7.0\r\n# pip install nox\r\n```\r\n\r\n- Sample `noxfile.py`:\r\n\r\n```python\r\nimport nox\r\n\r\n\r\n@nox.session(python=[\"3.6\", \"3.7\"])\r\ndef test(session):\r\n    pass\r\n```\r\n\r\n  - Copy-paste, then run `$ pbpaste > noxfile.py` on macOS, or in the Docker container:\r\n\r\n```console\r\n# apt update\r\n# apt install nano\r\n# touch noxfile.py\r\n# nano noxfile.py\r\n... Paste contents within nano ...\r\n```\r\n\r\n- Run `$ nox`.\r\n\r\n**Expected behavior**\r\n<!-- What should have happened? -->\r\n\r\nAll sessions except the one using the Python version currently setup by `pyenv` (3.7 in my case) should be skipped, as explained in [the docs](https://nox.thea.codes/en/stable/usage.html#failing-sessions-when-the-interpreter-is-missing)\r\n\r\n**Actual behavior**\r\n\r\nNox tries to run all versions, and fails. In my case, it fails on 3.6.\r\n\r\nFull output:\r\n\r\n```console\r\n$ nox\r\nnox > Running session test-3.6\r\nnox > Creating virtualenv using python3.6 in .nox/test-3-6\r\nnox > Command /Users/florimond/.pyenv/versions/3.7.3/bin/python3.7 -m virtualenv /Users/florimond/Desktop/nox-pyenv/.nox/test-3-6 -p python3.6 failed with exit code 127:\r\npyenv: python3.6: command not found\r\n\r\nThe `python3.6' command exists in these Python versions:\r\n  3.6.8\r\n\r\nRunning virtualenv with interpreter /Users/florimond/.pyenv/shims/python3.6\r\nnox > Session test-3.6 failed.\r\nnox > Running session test-3.7\r\nnox > Creating virtualenv using python3.7 in .nox/test-3-7\r\nnox > Session test-3.7 was successful.\r\nnox > Ran multiple sessions:\r\nnox > * test-3.6: failed\r\nnox > * test-3.7: success\r\n```\r\n\r\n**Extra debugging material**\r\n\r\n- Output of `$ pyenv versions` on my machine:\r\n\r\n```console\r\n  system\r\n  2.7.15\r\n  3.5.6\r\n  3.6.8\r\n* 3.7.3 (set by /Users/florimond/.pyenv/version)\r\n```\r\n\r\n- Output of checking for Python versions on my machine:\r\n\r\n```console\r\n$ which python3.6\r\n/Users/florimond/.pyenv/shims/python3.6\r\n$ which python3.7\r\n/Users/florimond/.pyenv/shims/python3.7\r\n$ python3.6 -V\r\npyenv: python3.6: command not found\r\n\r\n\r\nThe `python3.6' command exists in these Python versions:\r\n  3.6.8\r\n\r\n$ python3.7 -V\r\nPython 3.7.3\r\n```\r\n\r\n- Output of `$ nox -l` on my machine:\r\n\r\n```console\r\n$ nox -l\r\nSessions defined in /Users/florimond/Desktop/nox-pyenv/noxfile.py:\r\n\r\n* test-3.6\r\n* test-3.7\r\n\r\nsessions marked with * are selected, sessions marked with - are skipped.\r\n```\r\n\r\n**Possible solutions**\r\n\r\nThere's a difference in output when running `sysfind()` on a version that's available but not selected, and the version that's currently selected. Example in my case (running 3.7 with 3.6.8 available):\r\n\r\n```python\r\n>>> import py\r\n>>> py.path.local.sysfind(\"python3.6\")\r\nlocal('/Users/florimond/.pyenv/shims/python3.6')\r\n>>> py.path.local.sysfind(\"python3.7\")\r\nlocal('/Users/florimond/.pyenv/versions/3.7.3/bin/python3.7')\r\n>>> \r\n```\r\n\r\nWe could detect that we're running under `pyenv`, and if so only use the result from `sysfind()` if it doesn't contain `shims` in the path? \ud83e\udd37\u200d\u2642\ufe0f\r\n\r\n(We shouldn't rely on the output of `sysfind` to detect that we're using `pyenv` though, because the `.pyenv` shown there is the `PYENV_ROOT`, and that is configurable. I'd suggest to make a `$ pyenv --version` call instead.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/251", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/251/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/251/events", "html_url": "https://github.com/theacodes/nox/issues/251", "id": 495927911, "node_id": "MDU6SXNzdWU0OTU5Mjc5MTE=", "number": 251, "title": "Unable to glob files in session.run()", "user": {"login": "inhumantsar", "id": 494253, "node_id": "MDQ6VXNlcjQ5NDI1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/494253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inhumantsar", "html_url": "https://github.com/inhumantsar", "followers_url": "https://api.github.com/users/inhumantsar/followers", "following_url": "https://api.github.com/users/inhumantsar/following{/other_user}", "gists_url": "https://api.github.com/users/inhumantsar/gists{/gist_id}", "starred_url": "https://api.github.com/users/inhumantsar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inhumantsar/subscriptions", "organizations_url": "https://api.github.com/users/inhumantsar/orgs", "repos_url": "https://api.github.com/users/inhumantsar/repos", "events_url": "https://api.github.com/users/inhumantsar/events{/privacy}", "received_events_url": "https://api.github.com/users/inhumantsar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-19T17:19:16Z", "updated_at": "2019-09-19T17:31:24Z", "closed_at": "2019-09-19T17:31:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running some commands against many files whose existence may not be predictable, the most common method of addressing these files is with wildcards on the command line. Enumerating them with python inside the noxfile is certainly possible, but globbing is more readable and concise.\r\n\r\n**How to reproduce**\r\n```python\r\n@nox.session(reuse_venv=True)\r\ndef glob(session):\r\n  session.run('ls', '*')\r\n```\r\n\r\n```\r\n$ nox -s glob\r\n...\r\nnox > ls *\r\nnox > Warning: ls is not installed into the virtualenv, is it located at /bin/ls. This might cause issues! Pass external=True into run() to silence this message.\r\n/bin/ls: cannot access '*': No such file or directory\r\n...\r\n\r\n$ ls *\r\n...happy list of files that do exist...\r\n```\r\n\r\n**Expected behavior**\r\n<!-- What should have happened? -->\r\n```\r\n$ nox -s glob\r\n...\r\nnox > ls *\r\nnox > Warning: ls is not installed into the virtualenv, is it located at /bin/ls. This might cause issues! Pass external=True into run() to silence this message.\r\n...happy list of files that do exist...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/248", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/248/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/248/events", "html_url": "https://github.com/theacodes/nox/issues/248", "id": 489876672, "node_id": "MDU6SXNzdWU0ODk4NzY2NzI=", "number": 248, "title": "Exceptions raised during Noxfile import are shadowed by \"Noxfile not found\" error.", "user": {"login": "rock5003", "id": 54613021, "node_id": "MDQ6VXNlcjU0NjEzMDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/54613021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rock5003", "html_url": "https://github.com/rock5003", "followers_url": "https://api.github.com/users/rock5003/followers", "following_url": "https://api.github.com/users/rock5003/following{/other_user}", "gists_url": "https://api.github.com/users/rock5003/gists{/gist_id}", "starred_url": "https://api.github.com/users/rock5003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rock5003/subscriptions", "organizations_url": "https://api.github.com/users/rock5003/orgs", "repos_url": "https://api.github.com/users/rock5003/repos", "events_url": "https://api.github.com/users/rock5003/events{/privacy}", "received_events_url": "https://api.github.com/users/rock5003/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-05T16:39:31Z", "updated_at": "2020-01-16T15:21:20Z", "closed_at": "2020-01-16T15:21:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "This bug occurs when an OSError is raised inside the noxfile. Instead of showing the error inside of the noxfile, it says that the noxfile is not found.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/243", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/243/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/243/events", "html_url": "https://github.com/theacodes/nox/issues/243", "id": 485658943, "node_id": "MDU6SXNzdWU0ODU2NTg5NDM=", "number": 243, "title": "Stacked parametrize example in the documentation has incorrect combination", "user": {"login": "vikrambhat11", "id": 12434594, "node_id": "MDQ6VXNlcjEyNDM0NTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/12434594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vikrambhat11", "html_url": "https://github.com/vikrambhat11", "followers_url": "https://api.github.com/users/vikrambhat11/followers", "following_url": "https://api.github.com/users/vikrambhat11/following{/other_user}", "gists_url": "https://api.github.com/users/vikrambhat11/gists{/gist_id}", "starred_url": "https://api.github.com/users/vikrambhat11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vikrambhat11/subscriptions", "organizations_url": "https://api.github.com/users/vikrambhat11/orgs", "repos_url": "https://api.github.com/users/vikrambhat11/repos", "events_url": "https://api.github.com/users/vikrambhat11/events{/privacy}", "received_events_url": "https://api.github.com/users/vikrambhat11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-27T08:20:22Z", "updated_at": "2019-08-27T14:23:25Z", "closed_at": "2019-08-27T14:23:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nStacked parametrize example in the documentation has incorrect combination\r\nCurrently this is what is seen\r\n```\r\n* tests(django='1.9', database='postgres')\r\n* tests(django='2.0', database='mysql')\r\n* tests(django='1.9', database='postgres')\r\n* tests(django='2.0', database='mysql')\r\n```\r\nIf you see closely it is the same 2 combinations printed twice. \r\nWe need to correct it to \r\n```\r\n    * tests(database='postgres', django='1.9')\r\n    * tests(database='mysql', django='1.9')\r\n    * tests(database='postgres', django='2.0')\r\n    * tests(database='mysql', django='2.0')\r\n```\r\nwhich will be the correct 4 combinations\r\n\r\n**How to reproduce**\r\nAs of 08/27/2019 1:20AM PST, https://nox.readthedocs.io/en/stable/config.html#parametrizing-sessions had the issue\r\n\r\n**Expected behavior**\r\nSpecified above in the description stage\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/232", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/232/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/232/events", "html_url": "https://github.com/theacodes/nox/issues/232", "id": 477172004, "node_id": "MDU6SXNzdWU0NzcxNzIwMDQ=", "number": 232, "title": "add session argument to tell nox to skip autorunning ", "user": {"login": "cs01", "id": 5715368, "node_id": "MDQ6VXNlcjU3MTUzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5715368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cs01", "html_url": "https://github.com/cs01", "followers_url": "https://api.github.com/users/cs01/followers", "following_url": "https://api.github.com/users/cs01/following{/other_user}", "gists_url": "https://api.github.com/users/cs01/gists{/gist_id}", "starred_url": "https://api.github.com/users/cs01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cs01/subscriptions", "organizations_url": "https://api.github.com/users/cs01/orgs", "repos_url": "https://api.github.com/users/cs01/repos", "events_url": "https://api.github.com/users/cs01/events{/privacy}", "received_events_url": "https://api.github.com/users/cs01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1057221799, "node_id": "MDU6TGFiZWwxMDU3MjIxNzk5", "url": "https://api.github.com/repos/theacodes/nox/labels/needs%20clarification", "name": "needs clarification", "color": "ff8649", "default": false, "description": ""}, {"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-06T05:09:40Z", "updated_at": "2019-08-09T16:55:37Z", "closed_at": "2019-08-09T16:55:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nSome sessions in the nox file behave kind of like make targets: you want to run them since they automate something, but you don't necessarily want to run them all at once automatically.\r\n\r\nFor example, usually you want to run unit tests, lint, and document builds when running `nox` to ensure the code is all good. But it's also do things in nox such as `publish`, `blacken`, `watch_docs`, etc, that are run in a one-off basis. \r\n\r\nThe nox project itself accomplishes this by opting *in* with the environment variable `NOXSESSION`.\r\n\r\nThe pipx project has two files: a standard noxfile.py and another file called automation.py.\r\nhttps://github.com/pipxproject/pipx/blob/master/noxfile.py\r\nhttps://github.com/pipxproject/pipx/blob/master/automation.py\r\n\r\n**Describe the solution you'd like**\r\n<!-- If you have an idea of how to do this, write it here! -->\r\nAdd a new argument to opt *out* of automatically running the session, so that it can *only* be run when specifically called on the cli: `nox -s my_non_automated_session`.\r\n\r\nThe argument could be something like `autorun=False`, or `run_in_suite` and would default to True if not present.\r\n\r\n```\r\n@nox.session(python=\"3.7\", autorun=False)\r\ndef blacken(session):\r\n    \"\"\"Run black code formater.\"\"\"\r\n    session.install(\"black\")\r\n    session.run(\"black\", \"nox\", \"tests\", \"noxfile.py\", \"setup.py\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/227", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/227/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/227/events", "html_url": "https://github.com/theacodes/nox/issues/227", "id": 476568606, "node_id": "MDU6SXNzdWU0NzY1Njg2MDY=", "number": 227, "title": "shell completion", "user": {"login": "cs01", "id": 5715368, "node_id": "MDQ6VXNlcjU3MTUzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5715368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cs01", "html_url": "https://github.com/cs01", "followers_url": "https://api.github.com/users/cs01/followers", "following_url": "https://api.github.com/users/cs01/following{/other_user}", "gists_url": "https://api.github.com/users/cs01/gists{/gist_id}", "starred_url": "https://api.github.com/users/cs01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cs01/subscriptions", "organizations_url": "https://api.github.com/users/cs01/orgs", "repos_url": "https://api.github.com/users/cs01/repos", "events_url": "https://api.github.com/users/cs01/events{/privacy}", "received_events_url": "https://api.github.com/users/cs01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 1484164066, "node_id": "MDU6TGFiZWwxNDg0MTY0MDY2", "url": "https://api.github.com/repos/theacodes/nox/labels/open%20collective%20eligible", "name": "open collective eligible", "color": "8157b2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-04T16:08:31Z", "updated_at": "2019-08-12T02:03:42Z", "closed_at": "2019-08-12T02:03:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\n<!-- Describe any use cases this solves or frustrations it alleviates.   -->\r\nMore efficient cli usage. Would autocomplete session names so `nox -l` doesn't have to be typed, and session names don't have to be fully typed out.\r\n\r\n**Describe the solution you'd like**\r\n<!-- If you have an idea of how to do this, write it here! -->\r\nSince nox uses argparse, it can use argcomplete to add tab completion functionality. https://github.com/kislyuk/argcomplete\r\n\r\nI just added this to pipx (https://github.com/pipxproject/pipx/pull/182) and I find it is helpful when completing package names. It was very easy to add (argcomplete is awesome!). In nox's case it would be really helpful to auto-complete session names.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/226", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/226/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/226/events", "html_url": "https://github.com/theacodes/nox/issues/226", "id": 476567213, "node_id": "MDU6SXNzdWU0NzY1NjcyMTM=", "number": 226, "title": "raise error when unknown argument is passed", "user": {"login": "cs01", "id": 5715368, "node_id": "MDQ6VXNlcjU3MTUzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5715368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cs01", "html_url": "https://github.com/cs01", "followers_url": "https://api.github.com/users/cs01/followers", "following_url": "https://api.github.com/users/cs01/following{/other_user}", "gists_url": "https://api.github.com/users/cs01/gists{/gist_id}", "starred_url": "https://api.github.com/users/cs01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cs01/subscriptions", "organizations_url": "https://api.github.com/users/cs01/orgs", "repos_url": "https://api.github.com/users/cs01/repos", "events_url": "https://api.github.com/users/cs01/events{/privacy}", "received_events_url": "https://api.github.com/users/cs01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-04T15:52:18Z", "updated_at": "2019-08-17T19:57:32Z", "closed_at": "2019-08-17T19:57:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\nI often want to run a particular nox session. When I run `nox -l` I get something like \r\n\r\n```\r\n* unittests-3.6\r\n* unittests-3.7\r\n* lint-3.6\r\n* lint-3.7\r\n* docs-3.6\r\n* docs-3.7\r\n```\r\n\r\nI then often run\r\n```\r\nnox lint-3.6\r\n```\r\nwhich is not how one specifies a nox session, but nox doesn't care and starts to run *all sessions*. After I start seeing unit test output, I cancel and re run with the correct command, `nox -s lint3.6`. I have made this mistake so many times that I decided to file a bug because I doubt I'm alone.\r\n\r\n**Expected behavior**\r\nI would expect an error to be raised or that session to be run. \r\n\r\nBecause `--` is not passed, I wouldn't expect the arguments (in this case `lint-3.6`) to be passed to the session, so I don't really know what nox ends up doing with them.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/222", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/222/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/222/events", "html_url": "https://github.com/theacodes/nox/issues/222", "id": 471482433, "node_id": "MDU6SXNzdWU0NzE0ODI0MzM=", "number": 222, "title": "Nox Fails : 'Python Interpreter 3.6 not found', but Python version is present.", "user": {"login": "saran001", "id": 19660860, "node_id": "MDQ6VXNlcjE5NjYwODYw", "avatar_url": "https://avatars1.githubusercontent.com/u/19660860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saran001", "html_url": "https://github.com/saran001", "followers_url": "https://api.github.com/users/saran001/followers", "following_url": "https://api.github.com/users/saran001/following{/other_user}", "gists_url": "https://api.github.com/users/saran001/gists{/gist_id}", "starred_url": "https://api.github.com/users/saran001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saran001/subscriptions", "organizations_url": "https://api.github.com/users/saran001/orgs", "repos_url": "https://api.github.com/users/saran001/repos", "events_url": "https://api.github.com/users/saran001/events{/privacy}", "received_events_url": "https://api.github.com/users/saran001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-23T04:35:04Z", "updated_at": "2019-07-23T14:39:42Z", "closed_at": "2019-07-23T14:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nI just now found about nox and started learning about it. I created a simple package and tried automating some tests with nox. I have two Python versions - 2.7.10 and 3.6.5 . I've installed nox in Python 3.6.5 . On trying to run nox for both these versions, I'm getting a warning saying 'Python Interpreter 3.6 is not found'. Here is my nox code :\r\n\r\n```\r\nimport nox\r\n\r\n\r\n@nox.session(python=[\"3.6\", \"2.7\"], reuse_venv=True)\r\ndef pytest(session):\r\n    session.install(\"numpy\")\r\n    session.install(\"pytest\")\r\n    session.run(\"python\", \"setup.py\", \"develop\")\r\n    session.run(\"pytest\", \"-v\", \"tests\")\r\n```  \r\n\r\nand this is the result :    \r\n\r\n![image](https://user-images.githubusercontent.com/19660860/61682837-d67c0c00-ad30-11e9-9571-ef0c35adc0a5.png)\r\n\r\nBut I have Python 3.6.5 in my laptop : \r\n\r\n![image](https://user-images.githubusercontent.com/19660860/61682878-f8758e80-ad30-11e9-91f0-f01415aaeb5b.png)\r\n\r\nBut when I run with only python 3.6, it is working. I'm unable to figure out why this is so. I even tried removing Python 2.7 from the environment PATH variable. Can someone please help me figure out what I'm doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/220", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/220/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/220/events", "html_url": "https://github.com/theacodes/nox/issues/220", "id": 469996011, "node_id": "MDU6SXNzdWU0Njk5OTYwMTE=", "number": 220, "title": "session.run() fails with Windows builtin CLI commands", "user": {"login": "schuderer", "id": 4430527, "node_id": "MDQ6VXNlcjQ0MzA1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4430527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schuderer", "html_url": "https://github.com/schuderer", "followers_url": "https://api.github.com/users/schuderer/followers", "following_url": "https://api.github.com/users/schuderer/following{/other_user}", "gists_url": "https://api.github.com/users/schuderer/gists{/gist_id}", "starred_url": "https://api.github.com/users/schuderer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schuderer/subscriptions", "organizations_url": "https://api.github.com/users/schuderer/orgs", "repos_url": "https://api.github.com/users/schuderer/repos", "events_url": "https://api.github.com/users/schuderer/events{/privacy}", "received_events_url": "https://api.github.com/users/schuderer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-18T21:24:08Z", "updated_at": "2019-07-24T16:55:49Z", "closed_at": "2019-07-24T14:42:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nTL;DR: Windows builtin cmd.exe commands like `del`, `mkdir`, etc. cannot be invoked using `session.run()` because they don't have their own binary file with a location in the filesystem, which `nox` requires.\r\n\r\nI am trying to use noxfiles cross-platform (Mac/Linux/Win), using a conditional like the following:\r\n```python\r\nfrom sys import platform\r\nimport nox\r\n@nox.session\r\ndef my_session(session):\r\n    if platform == \"win32\":\r\n        session.run(\"del\", \"docs\\\\mymodule.rst\")\r\n    else:\r\n        session.run(\"rm\", \"-f\", \"docs/mymodule.rst\")\r\n    ...\r\n```\r\n\r\nThis fails on Windows 10 with the message \"Program del not found.\" at [nox.command.which()](https://github.com/theacodes/nox/blob/2fbced3f0766e8b29f455645c2c4083f30aa582c/nox/command.py#L32-L48)\r\n\r\nIf I replace the line\r\n```python\r\n        session.run(\"del\", \"docs\\\\mymodule.rst\")\r\n```\r\nwith\r\n```python\r\n        session.run(\"ping\", \"localhost\", \"-n\", \"1\")\r\n```\r\nthen it works.\r\n\r\nWhy the difference? `del` is a builtin `cmd.exe` command, while `ping.exe` is a binary which actually *has* a location. This can be checked on the command line: `where del` gives an error, while `where ping` prints something like `C:\\windows\\system32\\ping.exe`.\r\n\r\n**Expected behavior**\r\n`session.run()` should be able to run common Windows CLI commands like `del`, `rmdir` etc.\r\n\r\n**Current Workaround**\r\nI'd probably create a batch file as a wrapper for Windows commands. I'd prefer to avoid this, because I'm trying to use `nox` to reduce the number of test/build/dist-related scripts.\r\n\r\n**Suggestion**\r\n`session.run()` uses `nox.command.which()` to find the full path to the binary, and `which()` raises an error if a path cannot be determined. I would suggest adding another `if` statement to `which()` testing whether the command is among the known builtin commands, akin to:\r\n```python\r\nfrom sys import platform\r\n...\r\ndef which(program, path):\r\n    \"\"\"Finds the full path to an executable.\"\"\"\r\n    full_path = None\r\n    ...\r\n\r\n    if full_path:\r\n        return full_path.strpath\r\n\r\n    if platform == \"win32\" and program in WIN32_CMD_BUILDINS:\r\n        return program\r\n\r\n    logger.error(\"Program {} not found.\".format(program))\r\n    raise CommandFailed(\"Program {} not found\".format(program))\r\n```\r\nwhere `WIN32_CMD_BUILDINS = [\"ASSOC\", \"BREAK\", \"CALL\" , \"CD\", \"CHDIR\", \"CLS\", \"COLOR\", \"COPY\", \"DATE\", \"DEL\", \"DIR\", \"DPATH\", \"ECHO\", \"ENDLOCAL\", \"ERASE\", \"EXIT\", \"FOR\", \"FTYPE\", \"GOTO\", \"IF\", \"KEYS\", \"MD\", \"MKDIR\", \"MKLINK\", \"MOVE\", \"PATH\", \"PAUSE\", \"POPD\", \"PROMPT\", \"PUSHD\", \"REM\", \"REN\", \"RENAME\", \"RD\", \"RMDIR\", \"SET\", \"SETLOCAL\", \"SHIFT\", \"START\", \"TIME\", \"TITLE\", \"TYPE\", \"VER\", \"VERIFY\", \"VOL\"]`\r\n\r\nI did not find a way to easily programmatically determine the builtins, so they'd probably have to go to the top of the module as a constant. Provided there is a consensus on the validity of this bug report, and this is seen as an acceptable solution, I'd be happy to create a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/219", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/219/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/219/events", "html_url": "https://github.com/theacodes/nox/issues/219", "id": 469902902, "node_id": "MDU6SXNzdWU0Njk5MDI5MDI=", "number": 219, "title": "Python interpreter not found on conda/win32", "user": {"login": "schuderer", "id": 4430527, "node_id": "MDQ6VXNlcjQ0MzA1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4430527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schuderer", "html_url": "https://github.com/schuderer", "followers_url": "https://api.github.com/users/schuderer/followers", "following_url": "https://api.github.com/users/schuderer/following{/other_user}", "gists_url": "https://api.github.com/users/schuderer/gists{/gist_id}", "starred_url": "https://api.github.com/users/schuderer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schuderer/subscriptions", "organizations_url": "https://api.github.com/users/schuderer/orgs", "repos_url": "https://api.github.com/users/schuderer/repos", "events_url": "https://api.github.com/users/schuderer/events{/privacy}", "received_events_url": "https://api.github.com/users/schuderer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 501000638, "node_id": "MDU6TGFiZWw1MDEwMDA2Mzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-18T17:39:43Z", "updated_at": "2019-08-16T18:09:53Z", "closed_at": "2019-08-16T18:09:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nUsing Anaconda on Windows 10, `nox` skips all sessions that explicitly specify a python version using the session decorator, e.g. `@nox.session(python=\"3.6\")`, even though a python interpreter of the correct version is present in the path:\r\n```\r\n(base) C:\\dev\\mytest>where python\r\nC:\\ProgramData\\Anaconda3\\python.exe\r\n\r\n(base) C:\\dev\\mytest>python --version\r\nPython 3.6.5 :: Anaconda, Inc.\r\n```\r\n\r\n**How to reproduce**\r\n\r\nCreate a `noxfile.py` with at least one session that explicitly specifies the python version, e.g.\r\n```python\r\nimport nox\r\n\r\n@nox.session(python=\"3.6\")\r\ndef with_version36(session):\r\n    print(\"With python 3.6\")\r\n\r\n@nox.session(python=\"3.7\")\r\ndef with_version37(session):\r\n    print(\"With python 3.7\")\r\n\r\n@nox.session(python=\"3.7\")\r\ndef without_version(session):\r\n    print(\"Without python version\")\r\n```\r\n\r\nInstall Anaconda, open Anaconda Prompt, install nox, navigate to the directory containing the noxfile, and run `nox`:\r\n```\r\n(base) C:\\>pip install nox\r\n...\r\nSuccessfully installed colorlog-3.2.0 nox-2019.5.30\r\n\r\n(base) C:\\>cd C:\\dev\\mytest\r\n\r\n(base) C:\\dev\\mytest>nox\r\nnox > Running session with_version36\r\nnox > Session with_version36 skipped: Python interpreter 3.6 not found\r\nnox > Running session with_version37\r\nnox > Session with_version37 skipped: Python interpreter 3.7 not found\r\nnox > Running session without_version\r\nnox > Creating virtualenv using python.exe in .nox\\without_version\r\nWithout python version\r\n...\r\n```\r\n\r\nChecking the location of the interpreter reveals that there is a python 3.6 in the path:\r\n```\r\n(base) C:\\dev\\mytest>where python\r\nC:\\ProgramData\\Anaconda3\\python.exe\r\n\r\n(base) C:\\dev\\mytest>python --version\r\nPython 3.6.5 :: Anaconda, Inc.\r\n```\r\n\r\nI also tried it out in another 3.7-conda environment, even matrioshka'd inside a pipenv environment, with the same results.\r\n\r\n**Expected behavior**\r\nI expected both sessions `with_version36` and `without_version` to run.\r\nI think the python interpreter of the correct version should be discoverable on conda, too.\r\n\r\nIs `nox` perhaps looking for python binaries by name (expecting python3.exe, python36.exe and so on), instead of finding all interpreters in the path and then checking `--version`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/218", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/218/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/218/events", "html_url": "https://github.com/theacodes/nox/issues/218", "id": 469883575, "node_id": "MDU6SXNzdWU0Njk4ODM1NzU=", "number": 218, "title": "Support stdout file redirects in session.run()", "user": {"login": "schuderer", "id": 4430527, "node_id": "MDQ6VXNlcjQ0MzA1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4430527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schuderer", "html_url": "https://github.com/schuderer", "followers_url": "https://api.github.com/users/schuderer/followers", "following_url": "https://api.github.com/users/schuderer/following{/other_user}", "gists_url": "https://api.github.com/users/schuderer/gists{/gist_id}", "starred_url": "https://api.github.com/users/schuderer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schuderer/subscriptions", "organizations_url": "https://api.github.com/users/schuderer/orgs", "repos_url": "https://api.github.com/users/schuderer/repos", "events_url": "https://api.github.com/users/schuderer/events{/privacy}", "received_events_url": "https://api.github.com/users/schuderer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-18T17:00:17Z", "updated_at": "2019-07-18T18:14:54Z", "closed_at": "2019-07-18T18:14:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nWhen building projects, I find myself having to use commands which generate output to stdout (such as `pipenv lock -r`) which I want to redirect to a file (e.g. `>docs/requirements.txt`). This currently is not possible with `session.run()`, because, as I understand it, special characters such as `>` are being escaped before they are run.\r\n\r\n**Describe the solution you'd like**\r\nIt would be handy if `session.run()` would accept something like `session.run(\"echo\", \"hello\", \">hello.txt\")` or `session.run(\"echo\", \"hello\", \">\", \"hello.txt\")` and pass the redirect through so it gets executed when running the command.\r\n\r\n**Describe alternatives you've considered**\r\nI am using `Makefile`s and, for cross-platform reasons, `make.bat`. I also played around with task-specific shell/batch files. Having `nox` at hand, I am hoping I can centralize all my test-, but also more general build-related processes into one neat and tidy script, replacing non-Windows-compatible `Makefile`s and reducing clutter.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/216", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/216/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/216/events", "html_url": "https://github.com/theacodes/nox/issues/216", "id": 469482662, "node_id": "MDU6SXNzdWU0Njk0ODI2NjI=", "number": 216, "title": "Recursive python symlinks in virtualenv", "user": {"login": "omry", "id": 376455, "node_id": "MDQ6VXNlcjM3NjQ1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/376455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omry", "html_url": "https://github.com/omry", "followers_url": "https://api.github.com/users/omry/followers", "following_url": "https://api.github.com/users/omry/following{/other_user}", "gists_url": "https://api.github.com/users/omry/gists{/gist_id}", "starred_url": "https://api.github.com/users/omry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omry/subscriptions", "organizations_url": "https://api.github.com/users/omry/orgs", "repos_url": "https://api.github.com/users/omry/repos", "events_url": "https://api.github.com/users/omry/events{/privacy}", "received_events_url": "https://api.github.com/users/omry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T22:42:11Z", "updated_at": "2019-07-29T20:12:23Z", "closed_at": "2019-07-29T20:12:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "versions:\r\nnox==2019.5.30\r\nvirtualenv==16.6.2\r\n\r\nTrying to debug, I wanted to enter the virtualenv:\r\n`$ virtualenv .nox/session-XYZ`\r\n\r\nThis resulted in \r\nOSError: [Errno 40] Too many levels of symbolic links: 'ENV_DIR/bin/python'\r\n\r\nLooking inside, looks like python -> python3.6 and python3.6 -> python.\r\n```\r\n\r\n$ ls-l .nox/session-XYZ/bin | grep python\r\nlrwxrwxrwx 1 omry omry    9 Jul 17 15:32 python -> python3.6\r\nlrwxrwxrwx 1 omry omry    6 Jul 17 15:37 python3 -> python\r\nlrwxrwxrwx 1 omry omry    6 Jul 17 15:37 python3.6 -> python\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/212", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/212/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/212/events", "html_url": "https://github.com/theacodes/nox/issues/212", "id": 464982004, "node_id": "MDU6SXNzdWU0NjQ5ODIwMDQ=", "number": 212, "title": "`imp.load_source` is deprecated", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1362260657, "node_id": "MDU6TGFiZWwxMzYyMjYwNjU3", "url": "https://api.github.com/repos/theacodes/nox/labels/Good%20first%20issue", "name": "Good first issue", "color": "f90cde", "default": false, "description": ""}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 730126717, "node_id": "MDU6TGFiZWw3MzAxMjY3MTc=", "url": "https://api.github.com/repos/theacodes/nox/labels/hygiene", "name": "hygiene", "color": "25baba", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-07T18:58:36Z", "updated_at": "2019-07-08T17:47:31Z", "closed_at": "2019-07-08T17:47:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://github.com/theacodes/nox/blob/096886af3d822d5c0dcb85087480d0a9233274b8/nox/tasks.py#L57-L57\r\n\r\nThat function is only documented in python2, in python3 isn't documented, so it's deprecated https://docs.python.org/3.7/library/imp.html\r\n\r\nAlso, the `imp` module itself is deprecated\r\n\r\n> Deprecated since version 3.4: The imp package is pending deprecation in favor of importlib.\r\n\r\nThis should be replaced by importlib https://docs.python.org/3.7/library/importlib.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/199", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/199/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/199/events", "html_url": "https://github.com/theacodes/nox/issues/199", "id": 448597651, "node_id": "MDU6SXNzdWU0NDg1OTc2NTE=", "number": 199, "title": "Allow use of venv rather than virtualenv", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 501000638, "node_id": "MDU6TGFiZWw1MDEwMDA2Mzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cs01", "id": 5715368, "node_id": "MDQ6VXNlcjU3MTUzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5715368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cs01", "html_url": "https://github.com/cs01", "followers_url": "https://api.github.com/users/cs01/followers", "following_url": "https://api.github.com/users/cs01/following{/other_user}", "gists_url": "https://api.github.com/users/cs01/gists{/gist_id}", "starred_url": "https://api.github.com/users/cs01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cs01/subscriptions", "organizations_url": "https://api.github.com/users/cs01/orgs", "repos_url": "https://api.github.com/users/cs01/repos", "events_url": "https://api.github.com/users/cs01/events{/privacy}", "received_events_url": "https://api.github.com/users/cs01/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cs01", "id": 5715368, "node_id": "MDQ6VXNlcjU3MTUzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5715368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cs01", "html_url": "https://github.com/cs01", "followers_url": "https://api.github.com/users/cs01/followers", "following_url": "https://api.github.com/users/cs01/following{/other_user}", "gists_url": "https://api.github.com/users/cs01/gists{/gist_id}", "starred_url": "https://api.github.com/users/cs01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cs01/subscriptions", "organizations_url": "https://api.github.com/users/cs01/orgs", "repos_url": "https://api.github.com/users/cs01/repos", "events_url": "https://api.github.com/users/cs01/events{/privacy}", "received_events_url": "https://api.github.com/users/cs01/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2019-05-26T19:20:57Z", "updated_at": "2019-08-12T02:00:54Z", "closed_at": "2019-08-12T02:00:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nSome projects (for example, `pipx`) have test suites that cannot run under virtualenv, but require venv. Being able to choose whether to use virtualenv or venv would allow using nox to run the test suite.\r\n\r\n**Describe the solution you'd like**\r\nThe simplest solution I can think of is to use a parameter to `nox.session`, something like `@nox.session(stdlib_venv=True)`. But honestly, it doesn't matter much to me how it gets specified.\r\n\r\n**Describe alternatives you've considered**\r\nI can't really think of a good alternative, other than \"use something else\" :-( Ideally, `virtualenv` and `venv` would be sufficiently compatible that it doesn't matter which you use, but that simply doesn't seem to be the case.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/197", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/197/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/197/events", "html_url": "https://github.com/theacodes/nox/issues/197", "id": 446323135, "node_id": "MDU6SXNzdWU0NDYzMjMxMzU=", "number": 197, "title": "Add an option to not changed directory to the one the noxfile is in.", "user": {"login": "Peilonrayz", "id": 5623093, "node_id": "MDQ6VXNlcjU2MjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5623093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peilonrayz", "html_url": "https://github.com/Peilonrayz", "followers_url": "https://api.github.com/users/Peilonrayz/followers", "following_url": "https://api.github.com/users/Peilonrayz/following{/other_user}", "gists_url": "https://api.github.com/users/Peilonrayz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peilonrayz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peilonrayz/subscriptions", "organizations_url": "https://api.github.com/users/Peilonrayz/orgs", "repos_url": "https://api.github.com/users/Peilonrayz/repos", "events_url": "https://api.github.com/users/Peilonrayz/events{/privacy}", "received_events_url": "https://api.github.com/users/Peilonrayz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-20T21:41:11Z", "updated_at": "2019-10-02T14:30:08Z", "closed_at": "2019-10-02T14:30:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\n\r\nCurrently I'm writing a wrapper to Nox that doesn't publicly expose the `noxfile.py`. Nox then changes directory to my package with no clean way to not do this or get back.\r\n\r\n**Describe the solution you'd like**\r\n\r\n - Add a `--cwd` argument that allows the user to specify the directory they want to work in. Or,\r\n - Add a `--no-change-cwd` flag that disables changing the CWD.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n - Locally I've removed [tasks.py#55](https://github.com/theacodes/nox/blob/1709f163505d7a1af54b1078f8cc5527bf05eb74/nox/tasks.py#L55) which has fixed this.*\r\n\r\n    Given the comment above this line I don't think this is a valid solution.\r\n\r\n - Pre-invocation of Nox I could add a file to where I know Nox will change directory. This file will contain the directory I actually want to be in. I could then change directory in each session from this file.\r\n\r\n    This is really a hack, not a solution.\r\n\r\n\\* It should be noted when removing tasks.py#55, each session is in the unwanted directory but not the global scope. This can be solved by adding the CWD to the global scope and changing in each session. I'm unsure what's causing this however.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/195", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/195/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/195/events", "html_url": "https://github.com/theacodes/nox/issues/195", "id": 445269517, "node_id": "MDU6SXNzdWU0NDUyNjk1MTc=", "number": 195, "title": "Change project website to https", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-17T05:23:30Z", "updated_at": "2019-05-17T17:34:59Z", "closed_at": "2019-05-17T17:34:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently, it points to the http version of the documentation\r\n\r\n![Screenshot_2019-05-17 theacodes nox](https://user-images.githubusercontent.com/4975310/57904753-bcf2ab80-7839-11e9-9c0a-d26121ae8825.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/189", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/189/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/189/events", "html_url": "https://github.com/theacodes/nox/issues/189", "id": 444739413, "node_id": "MDU6SXNzdWU0NDQ3Mzk0MTM=", "number": 189, "title": "Add session.interactive to easily determine if Nox is being run by a human.", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1362260657, "node_id": "MDU6TGFiZWwxMzYyMjYwNjU3", "url": "https://api.github.com/repos/theacodes/nox/labels/Good%20first%20issue", "name": "Good first issue", "color": "f90cde", "default": false, "description": ""}, {"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-16T03:39:32Z", "updated_at": "2019-08-01T03:18:54Z", "closed_at": "2019-08-01T03:18:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nIn many cases its useful to know if nox is being run in an actual terminal or via CI or some other \"headless\" means.\r\n\r\n**Describe the solution you'd like**\r\nA new property on `Session` called `interactive`.  It would look like this:\r\n\r\n```python\r\n@nox.session\r\ndef docs(session):\r\n    if session.interactive:\r\n        session.run(\"sphinx-autobuild\", ...)\r\n    else:\r\n        session.run(\"sphinx\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/188", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/188/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/188/events", "html_url": "https://github.com/theacodes/nox/issues/188", "id": 444737541, "node_id": "MDU6SXNzdWU0NDQ3Mzc1NDE=", "number": 188, "title": "Promote contributors to maintainers", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-05-16T03:29:40Z", "updated_at": "2019-05-29T17:15:13Z", "closed_at": "2019-05-29T17:15:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Nox has grown so much with significant contributions from people other than me.\r\n\r\nI would very much like to promote more people to maintainers on this project. Some of you already have \"push\" access, but I would like to go further. Maintainers would:\r\n\r\n1. Have access to the PyPI package.\r\n2. Have complete autonomy in reviewing and merging pull requests.\r\n3. Have complete autonomy in responding to and resolving issues.\r\n4. Be specifically called out in the documentation.\r\n\r\nThis project is fairly low maintenance but I think with a few more hands it could really shine. Maintainers could put as little or as much time in as they'd like. My only constraint is to follow the Code of Conduct and be kind to each other and our contributors.\r\n\r\nRight now my picks for maintainers are:\r\n\r\n- @dhermes \r\n- @lukesneeringer \r\n- @crwilcox \r\n- @stsewd \r\n\r\nPlease let me know if this is something you'd be interested in doing. If not, that's totally fine. If none of you are up for it right now - that's fine too. I'll try to build up more people from the community to take on this role.\r\n\r\n\ud83d\udc9c ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/183", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/183/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/183/events", "html_url": "https://github.com/theacodes/nox/issues/183", "id": 442848313, "node_id": "MDU6SXNzdWU0NDI4NDgzMTM=", "number": 183, "title": "Include Conda-install package functionality", "user": {"login": "Pragnya02", "id": 11578347, "node_id": "MDQ6VXNlcjExNTc4MzQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/11578347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pragnya02", "html_url": "https://github.com/Pragnya02", "followers_url": "https://api.github.com/users/Pragnya02/followers", "following_url": "https://api.github.com/users/Pragnya02/following{/other_user}", "gists_url": "https://api.github.com/users/Pragnya02/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pragnya02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pragnya02/subscriptions", "organizations_url": "https://api.github.com/users/Pragnya02/orgs", "repos_url": "https://api.github.com/users/Pragnya02/repos", "events_url": "https://api.github.com/users/Pragnya02/events{/privacy}", "received_events_url": "https://api.github.com/users/Pragnya02/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-05-10T18:44:16Z", "updated_at": "2019-08-01T03:08:51Z", "closed_at": "2019-08-01T03:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nReading the documentation , nox provides automated pip-install packages feature ( that can be defined in the configuration file).\r\n It would be useful to support conda-install as well , to be able to include installing miniconda/anaconda package install .\r\n\r\nI would like to work on this as my first contribution , if anyone could help me get started, would be really helpful!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/175", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/175/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/175/events", "html_url": "https://github.com/theacodes/nox/issues/175", "id": 429503695, "node_id": "MDU6SXNzdWU0Mjk1MDM2OTU=", "number": 175, "title": "Consider using semantic versioning", "user": {"login": "richin13", "id": 8370058, "node_id": "MDQ6VXNlcjgzNzAwNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8370058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richin13", "html_url": "https://github.com/richin13", "followers_url": "https://api.github.com/users/richin13/followers", "following_url": "https://api.github.com/users/richin13/following{/other_user}", "gists_url": "https://api.github.com/users/richin13/gists{/gist_id}", "starred_url": "https://api.github.com/users/richin13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richin13/subscriptions", "organizations_url": "https://api.github.com/users/richin13/orgs", "repos_url": "https://api.github.com/users/richin13/repos", "events_url": "https://api.github.com/users/richin13/events{/privacy}", "received_events_url": "https://api.github.com/users/richin13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-04T22:06:56Z", "updated_at": "2019-04-04T23:07:04Z", "closed_at": "2019-04-04T23:07:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\n\r\nIt'll enable better integration with new tools like [poetry](https://poetry.eustace.io/) that heavily rely on semantic versioning\r\n\r\n**Describe the solution you'd like**\r\n\r\nFuture releases of `nox` are versioned using the [Semantic](https://semver.org/) spec\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNot applicable\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/173", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/173/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/173/events", "html_url": "https://github.com/theacodes/nox/issues/173", "id": 420563830, "node_id": "MDU6SXNzdWU0MjA1NjM4MzA=", "number": 173, "title": "Log pip install command output", "user": {"login": "s0undt3ch", "id": 300048, "node_id": "MDQ6VXNlcjMwMDA0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/300048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s0undt3ch", "html_url": "https://github.com/s0undt3ch", "followers_url": "https://api.github.com/users/s0undt3ch/followers", "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}", "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions", "organizations_url": "https://api.github.com/users/s0undt3ch/orgs", "repos_url": "https://api.github.com/users/s0undt3ch/repos", "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}", "received_events_url": "https://api.github.com/users/s0undt3ch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-13T15:27:14Z", "updated_at": "2019-09-25T20:56:31Z", "closed_at": "2019-09-25T20:56:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nBesides making it similar to tox(allowing for a smoother transition to nox), it's often useful in case of issues to, even though installing the requirements didn't fail, know which versions were actually installed.\r\n\r\n**Describe the solution you'd like**\r\nOne solution would be do always show that output.\r\nThe other solution would be to add a `--verbose` boolean flag which, when passed, would additionally log the output of the pip install command (https://github.com/s0undt3ch/nox/commit/b5049abd13682a4e8b10fb67c413de53645cd1b4)\r\n\r\n\r\n**Describe alternatives you've considered**\r\nThe only alternative is \"patching\" nox or submitting a PR to fix/enhance nox.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/169", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/169/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/169/events", "html_url": "https://github.com/theacodes/nox/issues/169", "id": 411713470, "node_id": "MDU6SXNzdWU0MTE3MTM0NzA=", "number": 169, "title": "Include changelog in docs", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 612578848, "node_id": "MDU6TGFiZWw2MTI1Nzg4NDg=", "url": "https://api.github.com/repos/theacodes/nox/labels/docs", "name": "docs", "color": "e99695", "default": false, "description": null}, {"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-19T02:14:12Z", "updated_at": "2019-04-11T18:59:32Z", "closed_at": "2019-04-11T18:59:32Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\n\r\nRight now the changelog lives only in the repo.\r\nWould be nice to have it in http://nox.thea.codes/en/stable/changelog.html where it's more visible.\r\n\r\nWe could just link from there to the file in the repo or convert the file from markdown to rst, so it would be rendered in the docs page.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/166", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/166/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/166/events", "html_url": "https://github.com/theacodes/nox/issues/166", "id": 404034201, "node_id": "MDU6SXNzdWU0MDQwMzQyMDE=", "number": 166, "title": "Update nox-automation to point to nox", "user": {"login": "alixhami", "id": 19769177, "node_id": "MDQ6VXNlcjE5NzY5MTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/19769177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alixhami", "html_url": "https://github.com/alixhami", "followers_url": "https://api.github.com/users/alixhami/followers", "following_url": "https://api.github.com/users/alixhami/following{/other_user}", "gists_url": "https://api.github.com/users/alixhami/gists{/gist_id}", "starred_url": "https://api.github.com/users/alixhami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alixhami/subscriptions", "organizations_url": "https://api.github.com/users/alixhami/orgs", "repos_url": "https://api.github.com/users/alixhami/repos", "events_url": "https://api.github.com/users/alixhami/events{/privacy}", "received_events_url": "https://api.github.com/users/alixhami/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 718269511, "node_id": "MDU6TGFiZWw3MTgyNjk1MTE=", "url": "https://api.github.com/repos/theacodes/nox/labels/packaging", "name": "packaging", "color": "fcc7e3", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-01-28T22:22:44Z", "updated_at": "2019-05-13T20:23:00Z", "closed_at": "2019-05-13T20:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Thank you for filing a bug! Please feel free to answer as much or as little of this template as you can. -->\r\n\r\n**Describe the bug**\r\nI used to have nox-automation installed, then the package changed at some point and I started getting confusing errors until I finally realized I needed to uninstall nox-automation and install nox. It would be nice to have the old package name somehow point to the new package, or have a deprecation warning when nox-automation is installed or updated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/165", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/165/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/165/events", "html_url": "https://github.com/theacodes/nox/issues/165", "id": 401092197, "node_id": "MDU6SXNzdWU0MDEwOTIxOTc=", "number": 165, "title": "Alternate Nox config", "user": {"login": "s0undt3ch", "id": 300048, "node_id": "MDQ6VXNlcjMwMDA0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/300048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s0undt3ch", "html_url": "https://github.com/s0undt3ch", "followers_url": "https://api.github.com/users/s0undt3ch/followers", "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}", "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions", "organizations_url": "https://api.github.com/users/s0undt3ch/orgs", "repos_url": "https://api.github.com/users/s0undt3ch/repos", "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}", "received_events_url": "https://api.github.com/users/s0undt3ch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1057221799, "node_id": "MDU6TGFiZWwxMDU3MjIxNzk5", "url": "https://api.github.com/repos/theacodes/nox/labels/needs%20clarification", "name": "needs clarification", "color": "ff8649", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2019-01-20T12:20:59Z", "updated_at": "2019-09-19T15:31:07Z", "closed_at": "2019-04-11T18:11:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Been looking at nox and I believe it suites one of our projects needs which is currently using tox, though I would prefer to have more leeway, hence considering Nox.\r\n\r\nI'd prefer not to have a `noxfile.py` file on the root of our repo.\r\n\r\nWould you be willing to accept a PR which still defaults to `noxfile.py` but can look for alternative paths?\r\n\r\nAt first I though about `.nox/noxfile.py` but I guess nuking the `.nox` directory to delete the virtualenvs is something users do a lot, so, perhaps:\r\n\r\n* `.noxdir/conf.py` for linux, ,`_noxdir/conf.py` for windows?\r\n* `.noxconf/conf.py`?\r\nI guess I would even be ok with a `.noxfile` without the `.py` extension.\r\n\r\nOf course, the purpose is not having to pass the alternate config on the nox CLI.\r\n\r\nLook at `setup.cfg` and/or `pyproject.toml` for a nox section where we can then define the path to the `noxfile.py`?\r\n\r\nAnyway, totally open for the alternative, but I wanted to ask before I set out to add support and it just gets rejected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/162", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/162/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/162/events", "html_url": "https://github.com/theacodes/nox/issues/162", "id": 392659201, "node_id": "MDU6SXNzdWUzOTI2NTkyMDE=", "number": 162, "title": "[Help Wanted] - Runnng nox fails with a Syntax Error: invalid syntax - error", "user": {"login": "naveenwashere", "id": 4409744, "node_id": "MDQ6VXNlcjQ0MDk3NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4409744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naveenwashere", "html_url": "https://github.com/naveenwashere", "followers_url": "https://api.github.com/users/naveenwashere/followers", "following_url": "https://api.github.com/users/naveenwashere/following{/other_user}", "gists_url": "https://api.github.com/users/naveenwashere/gists{/gist_id}", "starred_url": "https://api.github.com/users/naveenwashere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naveenwashere/subscriptions", "organizations_url": "https://api.github.com/users/naveenwashere/orgs", "repos_url": "https://api.github.com/users/naveenwashere/repos", "events_url": "https://api.github.com/users/naveenwashere/events{/privacy}", "received_events_url": "https://api.github.com/users/naveenwashere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-19T15:42:52Z", "updated_at": "2018-12-19T17:04:22Z", "closed_at": "2018-12-19T17:04:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nThanks in advance for looking into this issue. I'm a first time user of nox and I'm trying to run some tests on a project that uses nox (which is the `google-cloud-python` project). I installed nox using `pip` and ran the unit tests as instructed on google's project, but always end up with the following error, but I'm not sure what's wrong:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/bin/nox\", line 7, in <module>\r\n    from nox.__main__ import main\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nox/__main__.py\", line 155\r\n    print(dist.version, file=sys.stderr)\r\n                            ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nI apologize if this is a very silly error or if there's a fundamental setup issue on my laptop. Here are the steps that I followed:\r\n* Clone `google-cloud-python` project\r\n* Create a virtual virtual environmene using `virtualenv`\r\n* Install `nox` using `pip install nox`\r\n* Run the following command to run the tests in the repo: `nox -f bigtable/noxfile.py -s unit-2.7`\r\n\r\nThis results in the error trace I've posted above, every time. I installed all other requirements that the project requires based on their `docs/requirements.txt` file, but always end up in this issue.\r\n\r\nDevelopment Environment details:\r\n- Python 2.7.13\r\n- MacOS Mojave\r\n\r\nPlease let me know if any more info is required from me.\r\n\r\nThanks,\r\nNaveen", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/161", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/161/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/161/events", "html_url": "https://github.com/theacodes/nox/issues/161", "id": 390430557, "node_id": "MDU6SXNzdWUzOTA0MzA1NTc=", "number": 161, "title": "List all sections when a list of sections is set using nox.options", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-12-12T22:10:13Z", "updated_at": "2019-05-14T03:33:28Z", "closed_at": "2019-05-14T03:33:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nSetting `nox.options.sessions` results in `nox -l` only those sections, not all the sections.\r\n\r\n**How to reproduce**\r\nCreate a `noxfile.py` with 3 sessions (format, tests, docs) and set `nox.options.sessions = [\"format\"]`, then run `nox -l`:\r\n\r\n```\r\nAvailable sessions:\r\n* format\r\n```\r\n\r\n**Expected behavior**\r\nIt would be better if `nox -l` would actually list all the sessions.\r\n\r\n---\r\n\r\nRelated Feature Request: The sessions that are run by default be marked with a `*` while the others won't have a bullet:\r\n\r\n```\r\nAvailable sessions:\r\n* format\r\n  tests\r\n  docs\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/159", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/159/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/159/events", "html_url": "https://github.com/theacodes/nox/issues/159", "id": 383204767, "node_id": "MDU6SXNzdWUzODMyMDQ3Njc=", "number": 159, "title": "pipenv support", "user": {"login": "stefanhoelzl", "id": 1478183, "node_id": "MDQ6VXNlcjE0NzgxODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1478183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanhoelzl", "html_url": "https://github.com/stefanhoelzl", "followers_url": "https://api.github.com/users/stefanhoelzl/followers", "following_url": "https://api.github.com/users/stefanhoelzl/following{/other_user}", "gists_url": "https://api.github.com/users/stefanhoelzl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanhoelzl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanhoelzl/subscriptions", "organizations_url": "https://api.github.com/users/stefanhoelzl/orgs", "repos_url": "https://api.github.com/users/stefanhoelzl/repos", "events_url": "https://api.github.com/users/stefanhoelzl/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanhoelzl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-21T16:42:20Z", "updated_at": "2019-09-03T23:00:07Z", "closed_at": "2019-09-03T23:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "**How would this feature be useful?**\r\nnox could be used easily with [pipenv](https://pipenv.readthedocs.io/en/latest/) based projects.\r\nHavent used nox yet, but when having this feature, I would use it for my projects.\r\n\r\n**Describe the solution you'd like**\r\nThe following code would use the Pipfile and pipenv in the project directory to setup the virtualenv.\r\n```python\r\n@nox.session(python=['2.7', '3.6'], pipenv=True)\r\ndef tests(session):\r\n    \u2026\r\n```\r\n\r\nAlternative, when needing`dev-packages` specified the Pipfile\r\n```python\r\n@nox.session(python=['2.7', '3.6'], pipenv=\"dev\")\r\ndef tests(session):\r\n    \u2026\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nNot sure if there is another way to use nox with pipenv based projects.\r\n\r\n\r\nI would help out implementing/testing this feature!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/156", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/156/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/156/events", "html_url": "https://github.com/theacodes/nox/issues/156", "id": 377170973, "node_id": "MDU6SXNzdWUzNzcxNzA5NzM=", "number": 156, "title": "Calling session.install() with keyword argument silent causes TypeError", "user": {"login": "erinwild", "id": 35078476, "node_id": "MDQ6VXNlcjM1MDc4NDc2", "avatar_url": "https://avatars1.githubusercontent.com/u/35078476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erinwild", "html_url": "https://github.com/erinwild", "followers_url": "https://api.github.com/users/erinwild/followers", "following_url": "https://api.github.com/users/erinwild/following{/other_user}", "gists_url": "https://api.github.com/users/erinwild/gists{/gist_id}", "starred_url": "https://api.github.com/users/erinwild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erinwild/subscriptions", "organizations_url": "https://api.github.com/users/erinwild/orgs", "repos_url": "https://api.github.com/users/erinwild/repos", "events_url": "https://api.github.com/users/erinwild/events{/privacy}", "received_events_url": "https://api.github.com/users/erinwild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-04T16:45:56Z", "updated_at": "2018-11-12T03:37:05Z", "closed_at": "2018-11-12T03:37:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example, running `session.install(\"requests\", \"urllib3\", silent=False)` results in the following error:\r\n```\r\nTypeError: run() got multiple values for keyword argument 'silent'\r\n```\r\n\r\nThis is because `session.install()` calls `self.run(\"pip\", \"install\", \"--upgrade\", *args, silent=True, external=\"error\", **kwargs)` which doesn't allow for `silent` or `external` to be set in kwargs.\r\n\r\nI'll be opening a pull request shortly which checks if `silent` is found in kwargs before attempting to set a default.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/150", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/150/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/150/events", "html_url": "https://github.com/theacodes/nox/issues/150", "id": 371184937, "node_id": "MDU6SXNzdWUzNzExODQ5Mzc=", "number": 150, "title": "Nox is no longer executing sessions in the order specified on the command line", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-10-17T17:24:37Z", "updated_at": "2018-10-17T22:29:32Z", "closed_at": "2018-10-17T22:29:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/146", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/146/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/146/events", "html_url": "https://github.com/theacodes/nox/issues/146", "id": 369731859, "node_id": "MDU6SXNzdWUzNjk3MzE4NTk=", "number": 146, "title": "Re-factor how Nox documents and stores command line flags", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 730126717, "node_id": "MDU6TGFiZWw3MzAxMjY3MTc=", "url": "https://api.github.com/repos/theacodes/nox/labels/hygiene", "name": "hygiene", "color": "25baba", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-10-12T22:35:12Z", "updated_at": "2019-05-28T22:19:01Z", "closed_at": "2019-05-28T22:19:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As brought up in #145 (and #147), it's cumbersome to manage the flags and their documentation. There are several locations where new flags have to be updated:\r\n\r\n1. `usage.rst`.\r\n2. `__main__.py` (several spots).\r\n3. `test_main.py`\r\n4. `test_sessions.py` (usually).\r\n\r\nPreferably, we'd have one source of truth for the name, type, and description of these args. We'd use this source of truth to generate the rest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/142", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/142/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/142/events", "html_url": "https://github.com/theacodes/nox/issues/142", "id": 363291729, "node_id": "MDU6SXNzdWUzNjMyOTE3Mjk=", "number": 142, "title": "Group command-line flags for readability", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-24T19:40:56Z", "updated_at": "2018-10-10T03:56:18Z", "closed_at": "2018-10-10T03:56:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Context: https://github.com/theacodes/nox/pull/140/files#r219871178", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/141", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/141/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/141/events", "html_url": "https://github.com/theacodes/nox/issues/141", "id": 362770517, "node_id": "MDU6SXNzdWUzNjI3NzA1MTc=", "number": 141, "title": "Allow specifying command-line parameters in `noxfile`", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-21T20:52:19Z", "updated_at": "2018-10-12T22:19:48Z", "closed_at": "2018-10-12T22:19:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Related #133, #40, #135.\r\n\r\nNoxfiles should be able to specify *some* of the command-line args in the noxfile, for example:\r\n\r\n```python\r\nimport nox\r\n\r\nnox.options.envdir = \".cache\"\r\nnox.options.sessions = [\"tests\", \"lint\"]\r\n\r\n...\r\n```\r\n\r\nCommand-line args should *override* these \"defaults\" in the noxfile.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/137", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/137/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/137/events", "html_url": "https://github.com/theacodes/nox/issues/137", "id": 361920913, "node_id": "MDU6SXNzdWUzNjE5MjA5MTM=", "number": 137, "title": "Fix some warnings", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 730126717, "node_id": "MDU6TGFiZWw3MzAxMjY3MTc=", "url": "https://api.github.com/repos/theacodes/nox/labels/hygiene", "name": "hygiene", "color": "25baba", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-19T20:46:33Z", "updated_at": "2018-10-10T04:14:45Z", "closed_at": "2018-10-10T04:14:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\n.../nox/nox/sessions.py:35: DeprecationWarning: invalid escape sequence \\w\r\n  path = re.sub(\"[^\\w\\s-]\", \"-\", path).strip().lower()\r\n\r\n.../nox/nox/sessions.py:36: DeprecationWarning: invalid escape sequence \\s\r\n  path = re.sub(\"[-\\s]+\", \"-\", path)\r\n\r\n.../nox/.nox/tests-3-7/lib/python3.7/site-packages/markupsafe/__init__.py:13: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  from collections import Mapping\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```\r\n\r\n@theacodes I wouldn't have seen this if I didn't make some tests fail. Worth changing how `pytest` is invoked so that warnings turn to errors?\r\n\r\nThe third is out of our control, but has been filed / fixed already: https://github.com/pallets/markupsafe/issues/99", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/136", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/136/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/136/events", "html_url": "https://github.com/theacodes/nox/issues/136", "id": 361833637, "node_id": "MDU6SXNzdWUzNjE4MzM2Mzc=", "number": 136, "title": "Skip sessions that want to use 32-bit Python on non-Windows", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-19T16:41:12Z", "updated_at": "2018-09-24T20:02:24Z", "closed_at": "2018-09-24T20:02:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The current experience is not a good one:\r\n\r\n```\r\n$ nox -s unit-3.5-32 -r\r\nnox > Running session unit-3.5-32\r\nnox > Session unit-3.5-32 raised exception RuntimeError(\"Locating 32-bit Python ('3.5-32') is only supported on Windows.\")\r\nTraceback (most recent call last):\r\n  File \".../.pyenv/versions/3.7.0/lib/python3.7/site-packages/nox/sessions.py\", line 295, in execute\r\n    self._create_venv()\r\n  File \".../.pyenv/versions/3.7.0/lib/python3.7/site-packages/nox/sessions.py\", line 281, in _create_venv\r\n    self.venv.create()\r\n  File \".../.pyenv/versions/3.7.0/lib/python3.7/site-packages/nox/virtualenv.py\", line 209, in create\r\n    cmd.extend([\"-p\", self._resolved_interpreter])\r\n  File \".../.pyenv/versions/3.7.0/lib/python3.7/site-packages/nox/virtualenv.py\", line 165, in _resolved_interpreter\r\n    raise self._resolved\r\nRuntimeError: Locating 32-bit Python ('3.5-32') is only supported on Windows.\r\nnox > Session unit-3.5-32 failed.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/133", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/133/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/133/events", "html_url": "https://github.com/theacodes/nox/issues/133", "id": 360501768, "node_id": "MDU6SXNzdWUzNjA1MDE3Njg=", "number": 133, "title": "Allow customizing the directory nox uses to put its artifacts", "user": {"login": "moshez", "id": 422703, "node_id": "MDQ6VXNlcjQyMjcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/422703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshez", "html_url": "https://github.com/moshez", "followers_url": "https://api.github.com/users/moshez/followers", "following_url": "https://api.github.com/users/moshez/following{/other_user}", "gists_url": "https://api.github.com/users/moshez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshez/subscriptions", "organizations_url": "https://api.github.com/users/moshez/orgs", "repos_url": "https://api.github.com/users/moshez/repos", "events_url": "https://api.github.com/users/moshez/events{/privacy}", "received_events_url": "https://api.github.com/users/moshez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-09-15T03:08:55Z", "updated_at": "2018-09-21T20:53:25Z", "closed_at": "2018-09-21T20:53:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Tox supports `toxworkdir=path`. This helps me keep `.gitignore` file small by putting the work dir inside an already-ignored directory (I prefer `build`) and also not naming it as a dot-file. I'm happy to submit a PR, but first wanted to see if this feature is deemed useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/131", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/131/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/131/events", "html_url": "https://github.com/theacodes/nox/issues/131", "id": 357408039, "node_id": "MDU6SXNzdWUzNTc0MDgwMzk=", "number": 131, "title": "Some internal links in docs have low color contrast", "user": {"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 612578848, "node_id": "MDU6TGFiZWw2MTI1Nzg4NDg=", "url": "https://api.github.com/repos/theacodes/nox/labels/docs", "name": "docs", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-05T21:19:20Z", "updated_at": "2018-09-07T00:39:02Z", "closed_at": "2018-09-07T00:39:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some internal reference links in https://nox.readthedocs.io/ have similarly colored text and backgrounds.\r\n\r\nSee https://nox.readthedocs.io/en/stable/config.html#module-nox.sessions\r\n![en9pwt8ygme](https://user-images.githubusercontent.com/8822365/45120505-2949d680-b113-11e8-8f70-aa30be735a01.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/130", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/130/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/130/events", "html_url": "https://github.com/theacodes/nox/issues/130", "id": 355690130, "node_id": "MDU6SXNzdWUzNTU2OTAxMzA=", "number": 130, "title": "`nox` uses `PATH` to find executables", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 1057221799, "node_id": "MDU6TGFiZWwxMDU3MjIxNzk5", "url": "https://api.github.com/repos/theacodes/nox/labels/needs%20clarification", "name": "needs clarification", "color": "ff8649", "default": false, "description": ""}, {"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-08-30T17:52:08Z", "updated_at": "2018-10-13T04:35:04Z", "closed_at": "2018-10-13T04:35:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is a bit `tox`-like to suggest, so feel free to reject.\r\n\r\nI was recently migrating my Pelican blog from a `Makefile` to a `noxfile`. I had `pelican` installed in a few of my base environments, but forgot to install it into the virtual environment. However, the sessions ran just fine because they referenced the `pelican` executable on my `${PATH}` even though none existed in the `virtualenv`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/126", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/126/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/126/events", "html_url": "https://github.com/theacodes/nox/issues/126", "id": 354501492, "node_id": "MDU6SXNzdWUzNTQ1MDE0OTI=", "number": 126, "title": "Where did `session.virtualenv_dirname` go?", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-27T22:28:55Z", "updated_at": "2018-08-28T01:09:02Z", "closed_at": "2018-08-28T01:09:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I.e. what is the equivalent feature in the new implementation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/125", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/125/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/125/events", "html_url": "https://github.com/theacodes/nox/issues/125", "id": 354501333, "node_id": "MDU6SXNzdWUzNTQ1MDEzMzM=", "number": 125, "title": "Add `session.interpreter` @property?", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-08-27T22:28:18Z", "updated_at": "2018-09-16T03:42:34Z", "closed_at": "2018-09-15T04:24:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This would redirect to `self.virtualenv.interpreter`. As a follow-up to this, I think there is another question:\r\n\r\n- ~~Should `Virtualenv._resolve_interpreter` be allowed to mutate the value of `self.interpreter`. Modifying the value makes it hard to do checks like `if session.interpreter == \"foo\"` in a user's `noxfile.py`, since the value the user passed in may change~~ (Resolved in #127)\r\n- ~~Should `Virtualenv._resolve_interpreter` be cached forever after the first usage? I think this answer is a resounding yes?~~ (Resolved in #127)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/120", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/120/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/120/events", "html_url": "https://github.com/theacodes/nox/issues/120", "id": 353985910, "node_id": "MDU6SXNzdWUzNTM5ODU5MTA=", "number": 120, "title": "Outdated travis deploy script", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 718269511, "node_id": "MDU6TGFiZWw3MTgyNjk1MTE=", "url": "https://api.github.com/repos/theacodes/nox/labels/packaging", "name": "packaging", "color": "fcc7e3", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-25T05:40:59Z", "updated_at": "2018-08-28T19:53:56Z", "closed_at": "2018-08-28T19:53:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The travis deploy script is still using an old env var\r\n\r\nhttps://github.com/theacodes/nox/blob/fe5276969d3073faeeb4bb1e4803cd9e32960415/.travis.yml#L27-L27", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/118", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/118/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/118/events", "html_url": "https://github.com/theacodes/nox/issues/118", "id": 353958495, "node_id": "MDU6SXNzdWUzNTM5NTg0OTU=", "number": 118, "title": "Should single-Python sessions have the version added?", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-08-24T23:35:05Z", "updated_at": "2018-10-15T18:22:00Z", "closed_at": "2018-10-15T18:22:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For example, [in our config][1]\r\n\r\n```python\r\n@nox.session(python=\"3.6\")\r\ndef blacken(session):\r\n    ...\r\n```\r\n\r\nthis gets expanded to\r\n\r\n```\r\nAvailable sessions:\r\n...\r\n* blacken-3.6\r\n...\r\n```\r\n\r\nbut it seems the expanding should only happen if the value of `python=` is an iterable?\r\n\r\n[1]: https://github.com/theacodes/nox/blob/fe5276969d3073faeeb4bb1e4803cd9e32960415/noxfile.py#L45-L48", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/116", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/116/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/116/events", "html_url": "https://github.com/theacodes/nox/issues/116", "id": 353647220, "node_id": "MDU6SXNzdWUzNTM2NDcyMjA=", "number": 116, "title": "Tox to nox template needs to be updated", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-24T05:13:56Z", "updated_at": "2018-08-26T05:36:36Z", "closed_at": "2018-08-26T05:36:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I haven't look at the file in the detail, but there are lines that still use `session.interpreter`.\r\n\r\nhttps://github.com/theacodes/nox/blob/master/nox/tox_to_nox.jinja2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/114", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/114/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/114/events", "html_url": "https://github.com/theacodes/nox/issues/114", "id": 353486731, "node_id": "MDU6SXNzdWUzNTM0ODY3MzE=", "number": 114, "title": "Use `black` for code formatting", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-23T17:48:15Z", "updated_at": "2018-08-24T03:55:07Z", "closed_at": "2018-08-24T02:33:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Fancy new [code formatter][1]. I use the following on my projects:\r\n\r\n```\r\n$ virtualenv venv\r\n$ venv/bin/pip install git+https://github.com/ambv/black\r\n$ venv/bin/black --line-length=79 $(git ls-files '*.py') \r\n```\r\n\r\n[1]: https://github.com/ambv/black", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/112", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/112/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/112/events", "html_url": "https://github.com/theacodes/nox/issues/112", "id": 353468814, "node_id": "MDU6SXNzdWUzNTM0Njg4MTQ=", "number": 112, "title": "Allow to adding a description to each session", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T16:56:21Z", "updated_at": "2018-08-26T05:20:55Z", "closed_at": "2018-08-26T05:20:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In tox you have a `description` option, and this is shown when you run `tox -l -v`\r\n\r\nOutput example:\r\n\r\n```\r\ndefault environments:\r\npy27 -> run test suite for the application with python2.7\r\npy36 -> run test suite for the application with python3.6\r\nlint -> run linter (prospector) to ensure the source code corresponds to our coding standards\r\ndocs -> build documentation\r\n```\r\n\r\nWe could add this in a pythonic way, using `__doc__` (only show the first line). And show this when running `nox -l -v` and/or `nox -ll`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/106", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/106/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/106/events", "html_url": "https://github.com/theacodes/nox/issues/106", "id": 353158017, "node_id": "MDU6SXNzdWUzNTMxNTgwMTc=", "number": 106, "title": "VirtualEnv._resolved_interpreter() is using bad regex for pythonX.Y", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-22T23:03:59Z", "updated_at": "2018-08-24T02:19:10Z", "closed_at": "2018-08-24T02:19:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In particular, `2.7.15` fails:\r\n\r\n```python\r\n>>> import re\r\n>>> re.match(r'^\\d\\.\\d\\.?\\d?$', '2.7.15')\r\n>>> re.match(r'^\\d\\.\\d\\.?\\d?$', '2.7.1')\r\n<re.Match object; span=(0, 5), match='2.7.1'>\r\n```\r\n\r\nAlso it seems to me that if `X.Y.Z` matches then the `.Z` should be stripped?\r\n\r\n[1]: https://github.com/theacodes/nox/blob/abb8e95a60110b025e53aec7a80a31a23c411b96/nox/virtualenv.py#L111-L113", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/103", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/103/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/103/events", "html_url": "https://github.com/theacodes/nox/issues/103", "id": 353150712, "node_id": "MDU6SXNzdWUzNTMxNTA3MTI=", "number": 103, "title": "nox.session and nox.parameterize no longer play nice together", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-22T22:33:43Z", "updated_at": "2018-08-23T20:32:10Z", "closed_at": "2018-08-23T20:32:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "With `2018.7.31.dev1`, the following \"legacy\" config\r\n\r\n```python\r\nimport nox\r\n\r\n\r\n@nox.session\r\n@nox.parametrize(\"py\", [\"2.7\", \"3.7\"])\r\ndef now(session, py):\r\n    session.interpreter = \"python{}\".format(py)\r\n    session.install(\"pytest\")\r\n    session.run(\"py.test\")\r\n```\r\n\r\nfails with a hard-to-grok (I'm still source-diving) error:\r\n\r\n```\r\n$ nox -s \"now(py='2.7')\" -r\r\nnox > Running session now(py='2.7')\r\nnox > Session now(py='2.7') raised exception AttributeError(\"'function' object has no attribute 'python'\")\r\nTraceback (most recent call last):\r\n  File \".../python3.7/site-packages/nox/sessions.py\", line 283, in execute\r\n    self._create_venv()\r\n  File \".../python3.7/site-packages/nox/sessions.py\", line 256, in _create_venv\r\n    if self.func.python is False:\r\nAttributeError: 'function' object has no attribute 'python'\r\nnox > Session now(py='2.7') failed.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/102", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/102/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/102/events", "html_url": "https://github.com/theacodes/nox/issues/102", "id": 353141485, "node_id": "MDU6SXNzdWUzNTMxNDE0ODU=", "number": 102, "title": "Use a configuration file for Read the Docs", "user": {"login": "stsewd", "id": 4975310, "node_id": "MDQ6VXNlcjQ5NzUzMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4975310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsewd", "html_url": "https://github.com/stsewd", "followers_url": "https://api.github.com/users/stsewd/followers", "following_url": "https://api.github.com/users/stsewd/following{/other_user}", "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions", "organizations_url": "https://api.github.com/users/stsewd/orgs", "repos_url": "https://api.github.com/users/stsewd/repos", "events_url": "https://api.github.com/users/stsewd/events{/privacy}", "received_events_url": "https://api.github.com/users/stsewd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 730126717, "node_id": "MDU6TGFiZWw3MzAxMjY3MTc=", "url": "https://api.github.com/repos/theacodes/nox/labels/hygiene", "name": "hygiene", "color": "25baba", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-22T21:58:36Z", "updated_at": "2018-08-23T20:06:23Z", "closed_at": "2018-08-23T20:06:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I notice this comment here https://github.com/theacodes/nox/blob/c64cc8e43ca41ef1e9eae71073f0b696538e3dc3/nox.py#L65\r\n\r\nIf you want to install using pip on rtd, you can, but you need to use a configuration file https://docs.readthedocs.io/en/latest/yaml-config.html#python-pip-install", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/98", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/98/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/98/events", "html_url": "https://github.com/theacodes/nox/issues/98", "id": 350204859, "node_id": "MDU6SXNzdWUzNTAyMDQ4NTk=", "number": 98, "title": "Upgrade dependency on colorlog", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-13T21:42:29Z", "updated_at": "2018-08-14T19:36:48Z", "closed_at": "2018-08-14T19:36:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "When I try to `pip install --upgrade` all my packages, it makes `pip` sad.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/97", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/97/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/97/events", "html_url": "https://github.com/theacodes/nox/issues/97", "id": 345609764, "node_id": "MDU6SXNzdWUzNDU2MDk3NjQ=", "number": 97, "title": "No links in README.rst", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-30T04:45:54Z", "updated_at": "2018-08-01T05:40:18Z", "closed_at": "2018-08-01T05:40:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current README.rst file doesn't include any links.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/96", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/96/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/96/events", "html_url": "https://github.com/theacodes/nox/issues/96", "id": 345585788, "node_id": "MDU6SXNzdWUzNDU1ODU3ODg=", "number": 96, "title": "Add ability to customize session name for parametrized tests", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/theacodes/nox/milestones/1", "html_url": "https://github.com/theacodes/nox/milestone/1", "labels_url": "https://api.github.com/repos/theacodes/nox/milestones/1/labels", "id": 3530808, "node_id": "MDk6TWlsZXN0b25lMzUzMDgwOA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 7, "state": "open", "created_at": "2018-07-30T02:05:07Z", "updated_at": "2019-05-15T07:04:18Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2018-07-30T01:57:15Z", "updated_at": "2019-05-15T07:04:18Z", "closed_at": "2019-05-15T07:04:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://docs.pytest.org/en/latest/example/parametrize.html#different-options-for-test-ids", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/93", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/93/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/93/events", "html_url": "https://github.com/theacodes/nox/issues/93", "id": 343401523, "node_id": "MDU6SXNzdWUzNDM0MDE1MjM=", "number": 93, "title": "When a Python version isn't installed, nox fails (without going on to the next session)", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/theacodes/nox/milestones/1", "html_url": "https://github.com/theacodes/nox/milestone/1", "labels_url": "https://api.github.com/repos/theacodes/nox/milestones/1/labels", "id": 3530808, "node_id": "MDk6TWlsZXN0b25lMzUzMDgwOA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 7, "state": "open", "created_at": "2018-07-30T02:05:07Z", "updated_at": "2019-05-15T07:04:18Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-07-22T12:17:12Z", "updated_at": "2018-08-24T03:01:02Z", "closed_at": "2018-08-24T03:01:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a `nox.py` file for testing my project, and I want to specify all of the Python versions I support. That's easy enough, and works fine for CI. But when running nox on my local PC, I don't have all those Python versions installed. As a result, I get `RuntimeError: Unable to locate Python interpreter \"python3.5\".` when I run plain `nox`, and the run stops there.\r\n\r\nTwo things would be a huge improvement:\r\n\r\n1. Respect the `--stop-on-first-error` setting, and by default skip sessions that can't be created because the Python interpreter isn't installed.\r\n2. Avoid the ugly traceback, and simply print an error \"Python interpreter XXX not installed - skipping\".\r\n\r\nManually specifying just the environments I want to run isn't really practical (apart from anything else, the syntax for specifying a parametrised environment is much more verbose than tox's `-e py36`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/92", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/92/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/92/events", "html_url": "https://github.com/theacodes/nox/issues/92", "id": 322599581, "node_id": "MDU6SXNzdWUzMjI1OTk1ODE=", "number": 92, "title": "Add `.nox` to GitHub's .gitignore", "user": {"login": "amitsaha", "id": 512598, "node_id": "MDQ6VXNlcjUxMjU5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/512598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amitsaha", "html_url": "https://github.com/amitsaha", "followers_url": "https://api.github.com/users/amitsaha/followers", "following_url": "https://api.github.com/users/amitsaha/following{/other_user}", "gists_url": "https://api.github.com/users/amitsaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/amitsaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amitsaha/subscriptions", "organizations_url": "https://api.github.com/users/amitsaha/orgs", "repos_url": "https://api.github.com/users/amitsaha/repos", "events_url": "https://api.github.com/users/amitsaha/events{/privacy}", "received_events_url": "https://api.github.com/users/amitsaha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-13T14:42:55Z", "updated_at": "2018-05-14T02:26:57Z", "closed_at": "2018-05-14T02:26:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for `nox`. I made a [PR](https://github.com/amitsaha/gitignore/pull/1) to add `.nox` to GitHub's `.gitignore` file. But, I couldn't find a place in the documentation where it talks about it. Is that correct? if so, would a PR be welcome?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/91", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/91/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/91/events", "html_url": "https://github.com/theacodes/nox/issues/91", "id": 322517406, "node_id": "MDU6SXNzdWUzMjI1MTc0MDY=", "number": 91, "title": "Make nox imperative, not declarative. ", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-05-12T14:51:42Z", "updated_at": "2018-07-30T02:01:35Z", "closed_at": "2018-07-30T02:01:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Because Nox collects all commands before executing them it's hard to do any sort of branching logic in sessions. We should consider changing Nox to be imperative. I argue that this is closer to how people actually conceptualize the session.\r\n\r\nThere is *one* big problem with this approach right now: the virtualenv configuration. Presently, you can tell Nox how to make your virtualenv by setting properties on the session:\r\n\r\n```python\r\n@nox.session\r\ndef tests(s):\r\n    s.interpreter = 'python3.6'\r\n```\r\n\r\nUnfortunately we can't do this if we switch to imperative. There are two options I can think of:\r\n\r\n*Option 1*: Remove all of the properties and add a new imperative command called `virtualenv` to the session. It will create the virtualenv and then all following commands will use the virtualenv configuration:\r\n\r\n```python\r\n@nox.session\r\ndef tests(s):\r\n    s.virtualenv('python3.6')\r\n    s.run('python' ,'--version')   # uses Python in the virtualenv.\r\n```\r\n\r\nThis unfortunately will break almost every nox script currently in existence, but the \"fix\" is relatively straightforward and I could maybe even write a tool that will migrate for you. Also, the change in behavior from declarative to imperative might break some people.\r\n\r\n*Option 2*: Do some magic. Almost all nox scripts in existence setup the virtualenv properties before calling `install` or `run`. We could make nox create the virtualenv on the first call to either `install` or `run`. I'm not a huge fan of this, but it would be mostly backwards-compatible. \r\n\r\n/cc @pradyunsg @lukesneeringer @dhermes ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/90", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/90/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/90/events", "html_url": "https://github.com/theacodes/nox/issues/90", "id": 322514971, "node_id": "MDU6SXNzdWUzMjI1MTQ5NzE=", "number": 90, "title": "Support/Bug: nox not creating virtualenv", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-12T14:18:03Z", "updated_at": "2018-06-17T13:48:20Z", "closed_at": "2018-06-17T13:48:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```py\r\nimport nox\r\n\r\n\r\n@nox.session\r\ndef hello(session):\r\n    session.interpreter = \"python2.7\"\r\n\r\n    session.run(\"python3\", \"-m\", \"flit\", \"build\")\r\n    files = glob.glob(\"./dist/*.whl\")\r\n    if not files:\r\n        session.error(\"Could not find any built wheels.\")\r\n    session.install(*files)\r\n    session.install(\"-r\", \"tools/reqs/test.txt\")\r\n\r\n    session.run(\"pytest\", *session.posargs)\r\n```\r\n\r\nSomehow, the above script results in nox not even building a virtualenv.\r\n\r\n```\r\n$ nox -s hello\r\nnox > Running session hello\r\nnox > Could not find any built wheels.\r\nnox > Session hello aborted.\r\n```\r\n\r\nIf nox is composing the list of commands before actually executing them, it would result in an empty call to `install`. Here, however, it isn't even creating the virtual environment.\r\n\r\n---\r\n\r\nHonestly, I'm not sure what's happening here. If I comment out the second `install` line, somehow nox executes the session, but with `-r tools/reqs/test.txt`, which is exactly what was commented out. :/\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/87", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/87/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/87/events", "html_url": "https://github.com/theacodes/nox/issues/87", "id": 300389289, "node_id": "MDU6SXNzdWUzMDAzODkyODk=", "number": 87, "title": "`tox-to-nox` is missing dependencies (tox, jinja2) for v0.18.2", "user": {"login": "vlcinsky", "id": 635911, "node_id": "MDQ6VXNlcjYzNTkxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/635911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlcinsky", "html_url": "https://github.com/vlcinsky", "followers_url": "https://api.github.com/users/vlcinsky/followers", "following_url": "https://api.github.com/users/vlcinsky/following{/other_user}", "gists_url": "https://api.github.com/users/vlcinsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlcinsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlcinsky/subscriptions", "organizations_url": "https://api.github.com/users/vlcinsky/orgs", "repos_url": "https://api.github.com/users/vlcinsky/repos", "events_url": "https://api.github.com/users/vlcinsky/events{/privacy}", "received_events_url": "https://api.github.com/users/vlcinsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-26T20:45:16Z", "updated_at": "2018-02-26T23:05:51Z", "closed_at": "2018-02-26T21:10:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just installed `nox` and learned, that extra `tox-to-nox` is not provided any more.\r\n\r\nIt was nice to find out, it is already included, but running it fails with complains about missing `jinja2` and then `tox` dependencies.\r\n\r\nAfter installing these dependencies, the `tox-to-nox` command worked well.\r\n\r\nConsider adding the `jinja2` and `tox` to packages being required (and installed) by the package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/84", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/84/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/84/events", "html_url": "https://github.com/theacodes/nox/issues/84", "id": 292030435, "node_id": "MDU6SXNzdWUyOTIwMzA0MzU=", "number": 84, "title": "[Future] Consider the possibility of different types of sessions/workflows/tasks", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-26T21:02:05Z", "updated_at": "2018-05-12T14:24:50Z", "closed_at": "2018-05-12T14:24:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Right now, Nox is pretty specialized as a Python automation tool - For example, it by default creates virtualenvs, `session.install` installs Python packages, etc.\r\n\r\nHowever, there could be usefulness in making nox a bit more generic. I'd like to use this issue as a discussion around what a more generic Nox would look like. This touches on topics like plugins as well.\r\n\r\nContext: As Google Cloud works on automating parts of client library maintenance, a useful automation tool that works across languages might be useful. Whether Nox ends up being used for that purpose, it's still a useful conversation to have long term about this tool.\r\n\r\n## Some thoughts\r\n\r\n### Session classes\r\n\r\nWhat if we make it possible to have different \"classes\" of sessions? For example, today's sessions could be used like this:\r\n\r\n```python\r\n@nox.session(nox.PythonSession)\r\ndef run_py_tests(session):\r\n    session.install('py.test')  # installs Python packages using pip\r\n    session.run('py.test', 'tests')\r\n```\r\n\r\nWe could of course make `PythonSession` the default so that noxfiles aren't needlessly noisy, and/or have a `nox.default_session_class = nox.PythonSession`.\r\n\r\nEven for just Python automation this is useful, imagine:\r\n\r\n```python\r\n# uses pipenv instead of virtualenv, and automatically installs everything in pipfile.\r\n@nox.session(nox.PipenvSession)\r\ndef run_py_tests(session):\r\n    session.run('py.test', 'tests')\r\n```\r\n\r\nBut this becomes super interesting with other workflows. Imagine replacing [this](https://github.com/GoogleCloudPlatform/google-cloud-python/pull/4759/commits/0f3d38fc620620026ab4287d0e64fe63d1ca936a) with this:\r\n\r\n```python\r\n@nox.session(googleapis_nox.SplicerSession)\r\ndef regenerate_gapic(session):\r\n    # Clones googleapis, installs artman, runs it to generate logging gapic.\r\n    session.artman('google/logging/artman_logging.yaml', language='python')\r\n\r\n    # Splices the generated client into the repository.\r\n    import_pkg = 'logging_v2'\r\n    session.copy('/docs')\r\n    session.copy(f'/google/cloud/{import_pkg}')\r\n    session.copy('/tests/unit/gapic')\r\n    session.copy('/tests/system/gapic')\r\n```\r\n\r\n### libnox\r\n\r\nNox has a lot of useful low-level features that aren't easy to access outside of nox. Independent of other topics, we should consider splitting these lower-level features into a stable `libnox` that can be used to create the `nox` tool. We can then use `libnox` to create any number of specialized automation tools.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/82", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/82/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/82/events", "html_url": "https://github.com/theacodes/nox/issues/82", "id": 289081733, "node_id": "MDU6SXNzdWUyODkwODE3MzM=", "number": 82, "title": "`-r` flag should not skip `session.install()`", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-16T22:43:30Z", "updated_at": "2018-02-25T01:27:21Z", "closed_at": "2018-02-25T01:27:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It seems the concept `--reuse-existing-virtualenvs` is getting mixed up with [`_should_install_deps`][2].\r\n [Here][1] is where the skip happens.\r\n\r\nBut if the `virtualenv` already exists and the deps have already been installed, then `pip install --upgrade` is usually a no-op.\r\n\r\nThe **one exception** (which is what past-tense @jonparrott may have been thinking) is that if the user has installed the \"current\" package, but not in editable (`-e`) mode, then it may confuse the `nox` users.\r\n\r\n[1]: https://github.com/jonparrott/nox/blob/3614a4c926d91232c04b9da97ff6c5d541a2aa00/nox/sessions.py#L280-L285\r\n[2]: https://github.com/jonparrott/nox/blob/3614a4c926d91232c04b9da97ff6c5d541a2aa00/nox/sessions.py#L234", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/79", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/79/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/79/events", "html_url": "https://github.com/theacodes/nox/issues/79", "id": 287317471, "node_id": "MDU6SXNzdWUyODczMTc0NzE=", "number": 79, "title": "Allow passing env to `session.install()`", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/theacodes/nox/milestones/1", "html_url": "https://github.com/theacodes/nox/milestone/1", "labels_url": "https://api.github.com/repos/theacodes/nox/milestones/1/labels", "id": 3530808, "node_id": "MDk6TWlsZXN0b25lMzUzMDgwOA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 7, "state": "open", "created_at": "2018-07-30T02:05:07Z", "updated_at": "2019-05-15T07:04:18Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-01-10T05:14:36Z", "updated_at": "2018-07-30T03:07:57Z", "closed_at": "2018-07-30T03:07:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For example, if I want to build a C extension in \"debug\" mode, I have to swap\r\n\r\n```python\r\nsession.install('.')\r\n```\r\n\r\nfor\r\n\r\n```python\r\nsession.run('pip', 'install', '--upgrade', '.', env={'DEBUG': 'True'})\r\n```\r\n\r\nFor context, here are the current [`InstallCommand` constructor][1] and [`SessionConfig.install()`][2].\r\n\r\n[1]: https://github.com/jonparrott/nox/blob/v0.18.2/nox/command.py#L163-L165\r\n[2]: https://github.com/jonparrott/nox/blob/v0.18.2/nox/sessions.py#L195", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/78", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/78/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/78/events", "html_url": "https://github.com/theacodes/nox/issues/78", "id": 283733318, "node_id": "MDU6SXNzdWUyODM3MzMzMTg=", "number": 78, "title": "Add --nocolor flag for plain text output", "user": {"login": "duggelz", "id": 608338, "node_id": "MDQ6VXNlcjYwODMzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/608338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duggelz", "html_url": "https://github.com/duggelz", "followers_url": "https://api.github.com/users/duggelz/followers", "following_url": "https://api.github.com/users/duggelz/following{/other_user}", "gists_url": "https://api.github.com/users/duggelz/gists{/gist_id}", "starred_url": "https://api.github.com/users/duggelz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duggelz/subscriptions", "organizations_url": "https://api.github.com/users/duggelz/orgs", "repos_url": "https://api.github.com/users/duggelz/repos", "events_url": "https://api.github.com/users/duggelz/events{/privacy}", "received_events_url": "https://api.github.com/users/duggelz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-12-21T00:06:30Z", "updated_at": "2018-02-25T00:53:52Z", "closed_at": "2018-02-25T00:53:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I mostly look at nox output in text files, in contexts that don't render ansi escape sequences.  So the output looks like this:\r\n\r\n```\r\nStep #7: ^[[36mnox > ^[[32mSession unit(py='3.6') was successful.^[[0m\r\nStep #7: ^[[36mnox > ^[[33mRan multiple sessions:^[[0m\r\nStep #7: ^[[36mnox > ^[[32m* unit(py='2.7'): success^[[0m\r\nStep #7: ^[[36mnox > ^[[32m* unit(py='3.4'): success^[[0m\r\nStep #7: ^[[36mnox > ^[[32m* unit(py='3.5'): success^[[0m\r\nStep #7: ^[[36mnox > ^[[32m* unit(py='3.6'): success^[[0m\r\nStep #7: ^[[36mnox > ^[[31m\"Sessions not found: unit(py='2.7'), unit(py='3.4'), unit(py='3.5'), unit(py='3.6')\"^[[0m\r\nStep #7: ^[[36mnox > ^[[33mRunning session unit(py='2.7')^[[0m\r\nStep #7: ^[[36mnox > ^[[34m/usr/bin/python -m virtualenv /home/vmagent/app/google-cloud-python/.nox/unit-2-7 -p python2.7^[[0m\r\nStep #7: ^[[36mnox > ^[[36mchdir /home/vmagent/app/google-cloud-python/bigtable^[[0m\r\nStep #7: ^[[36mnox > ^[[34mpip install --upgrade mock pytest pytest-cov ../api_core ../core^[[0m\r\nStep #7: ^[[36mnox > ^[[34mpip install --upgrade -e .^[[0m\r\nStep #7: ^[[36mnox > ^[[34mpy.test --quiet --cov=google.cloud.bigtable --cov=tests.unit --cov-append --cov-config=.coveragerc --cov-report= --cov-fail-under=97 tests/unit^[[0m\r\n```\r\n\r\nIt would be nicer if there was a command line flag to inhibit escape sequences in the output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/77", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/77/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/77/events", "html_url": "https://github.com/theacodes/nox/issues/77", "id": 283728745, "node_id": "MDU6SXNzdWUyODM3Mjg3NDU=", "number": 77, "title": "Better error message for invalid session names", "user": {"login": "duggelz", "id": 608338, "node_id": "MDQ6VXNlcjYwODMzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/608338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duggelz", "html_url": "https://github.com/duggelz", "followers_url": "https://api.github.com/users/duggelz/followers", "following_url": "https://api.github.com/users/duggelz/following{/other_user}", "gists_url": "https://api.github.com/users/duggelz/gists{/gist_id}", "starred_url": "https://api.github.com/users/duggelz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duggelz/subscriptions", "organizations_url": "https://api.github.com/users/duggelz/orgs", "repos_url": "https://api.github.com/users/duggelz/repos", "events_url": "https://api.github.com/users/duggelz/events{/privacy}", "received_events_url": "https://api.github.com/users/duggelz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/theacodes/nox/milestones/1", "html_url": "https://github.com/theacodes/nox/milestone/1", "labels_url": "https://api.github.com/repos/theacodes/nox/milestones/1/labels", "id": 3530808, "node_id": "MDk6TWlsZXN0b25lMzUzMDgwOA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 7, "state": "open", "created_at": "2018-07-30T02:05:07Z", "updated_at": "2019-05-15T07:04:18Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-12-20T23:38:26Z", "updated_at": "2018-08-24T02:56:56Z", "closed_at": "2018-08-24T02:56:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To reproduce:\r\n- git clone google-cloud-python\r\n- cd google-cloud-python\r\n- nox -f container/nox.py -e \"unit(py='2.7')\"\r\n\r\nActual result:\r\n```\r\nnox > \"Sessions not found: unit(py='2.7')\"\r\n```\r\n\r\nDesired result:\r\n\r\nSomething with the word \"ERROR\" or \"FAIL\".  Ideally something with the name of the nox.py file and/or current directory.\r\n\r\nThe actual error message is red on the terminal, but when I was looking at it in a log file, everything is just unrendered escape sequences that I mentally filter out.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/76", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/76/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/76/events", "html_url": "https://github.com/theacodes/nox/issues/76", "id": 275886830, "node_id": "MDU6SXNzdWUyNzU4ODY4MzA=", "number": 76, "title": "nox start up errors", "user": {"login": "chemelnucfin", "id": 3982092, "node_id": "MDQ6VXNlcjM5ODIwOTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3982092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chemelnucfin", "html_url": "https://github.com/chemelnucfin", "followers_url": "https://api.github.com/users/chemelnucfin/followers", "following_url": "https://api.github.com/users/chemelnucfin/following{/other_user}", "gists_url": "https://api.github.com/users/chemelnucfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/chemelnucfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chemelnucfin/subscriptions", "organizations_url": "https://api.github.com/users/chemelnucfin/orgs", "repos_url": "https://api.github.com/users/chemelnucfin/repos", "events_url": "https://api.github.com/users/chemelnucfin/events{/privacy}", "received_events_url": "https://api.github.com/users/chemelnucfin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-21T22:50:53Z", "updated_at": "2017-11-21T23:35:14Z", "closed_at": "2017-11-21T23:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know what I did, but I can't start nox any more.\r\nI tried pip uninstall and then reinstalling\r\nI tried restarting the computer (using Ubuntu 16.04)\r\n\r\nThis file has 0 bytes, ~/.local/venvs/nox-automation/bin/python\r\nand I tried substituting that with #!usr//bin/python\r\n\r\nThis is the error message that I get\r\n`from: can't read /var/mail/nox.main`\r\n`~/.local/bin/nox:10: syntax error near unexpected token `('`\r\n\r\n`~/.local/bin/nox:10: `    sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])'\r\n\r\nAny other suggestions?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/75", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/75/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/75/events", "html_url": "https://github.com/theacodes/nox/issues/75", "id": 274631551, "node_id": "MDU6SXNzdWUyNzQ2MzE1NTE=", "number": 75, "title": "Add a list of projects using Nox to the documentation.", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 612578848, "node_id": "MDU6TGFiZWw2MTI1Nzg4NDg=", "url": "https://api.github.com/repos/theacodes/nox/labels/docs", "name": "docs", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-11-16T19:15:32Z", "updated_at": "2018-07-27T19:33:18Z", "closed_at": "2018-07-27T19:33:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- https://github.com/dhermes/bezier\r\n- https://github.com/GoogleCloudPlatform/google-resumable-media-python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/73", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/73/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/73/events", "html_url": "https://github.com/theacodes/nox/issues/73", "id": 267746984, "node_id": "MDU6SXNzdWUyNjc3NDY5ODQ=", "number": 73, "title": "Add support for later/lazy evaluation of Python code", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T17:11:43Z", "updated_at": "2018-07-30T02:02:05Z", "closed_at": "2018-07-30T02:02:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For example if one command generates files and a second command needs to rely on them:\r\n\r\n```\r\nsession.run('do', 'thing', 'to', 'files', nox.lazy(glob.glob, *args, **kwargs))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/67", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/67/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/67/events", "html_url": "https://github.com/theacodes/nox/issues/67", "id": 265108800, "node_id": "MDU6SXNzdWUyNjUxMDg4MDA=", "number": 67, "title": "If `session.virtualenv = False`, then `session.interpreter` is not \"respected\"", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-12T22:27:27Z", "updated_at": "2018-07-30T02:02:33Z", "closed_at": "2018-07-30T02:02:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For example:\r\n\r\n```python\r\nimport nox\r\n\r\n\r\n@nox.session\r\ndef foo(session):\r\n    session.virtualenv = False\r\n    session.interpreter = 'python3.6'\r\n    command = 'import sys; print(sys.executable)'\r\n    session.run('python', '-c', command)\r\n```\r\n\r\nresults in\r\n\r\n```\r\nC:\\Users\\dhermes>venv\\Scripts\\nox.exe -s foo\r\nnox > Running session foo\r\nnox > chdir C:\\Users\\dhermes\r\nnox > python -c import sys; print(sys.executable)\r\nC:\\Users\\dhermes\\AppData\\Local\\Continuum\\Miniconda2\\python.EXE\r\nnox > Session foo was successful.\r\n```\r\n\r\nI expected to see\r\n\r\n```\r\nC:\\Users\\dhermes\\AppData\\Local\\Programs\\Python\\Python36\\python.EXE\r\n```\r\n\r\nas the value of `sys.executable`.\r\n\r\n@jonparrott indicated that this could be fixed in [`which`][1].\r\n\r\n[1]: https://github.com/jonparrott/nox/blob/7360b26a2e07f7a5af748b3b6b404480fea5d45e/nox/command.py#L35", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/66", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/66/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/66/events", "html_url": "https://github.com/theacodes/nox/issues/66", "id": 265105724, "node_id": "MDU6SXNzdWUyNjUxMDU3MjQ=", "number": 66, "title": "BUG: `nox` crashes if a parameter name collides with a session name", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-12T22:15:18Z", "updated_at": "2017-10-12T22:16:06Z", "closed_at": "2017-10-12T22:16:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I would **not** rate this bug as very severe.\r\n\r\n```python\r\nimport nox\r\n\r\n\r\n@nox.session\r\n@nox.parametrize('py', ['2.7', '3.5', '3.6'])\r\ndef py(session):\r\n    session.virtualenv = False\r\n    session.interpreter = 'python{}'.format(py)\r\n    command = 'import sys; print(sys.executable)'\r\n    session.run('python', '-c', command)\r\n```\r\n\r\nresults in\r\n\r\n```\r\nC:\\Users\\dhermes>venv\\Scripts\\nox.exe -s \"py(py='2.7')\"\r\nnox > Running session py(py='2.7')\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\dhermes\\venv\\Scripts\\nox-script.py\", line 11, in <module>\r\n    load_entry_point('nox-automation==0.18.1', 'console_scripts', 'nox')()\r\n  File \"C:\\Users\\dhermes\\venv\\lib\\site-packages\\nox\\main.py\", line 107, in main\r\n    tasks.final_reduce,\r\n  File \"C:\\Users\\dhermes\\venv\\lib\\site-packages\\nox\\workflow.py\", line 44, in execute\r\n    return_value = function_(*args, global_config=global_config)\r\n  File \"C:\\Users\\dhermes\\venv\\lib\\site-packages\\nox\\tasks.py\", line 175, in run_manifest\r\n    result = session.execute()\r\n  File \"C:\\Users\\dhermes\\venv\\lib\\site-packages\\nox\\sessions.py\", line 296, in execute\r\n    self._create_config()\r\n  File \"C:\\Users\\dhermes\\venv\\lib\\site-packages\\nox\\sessions.py\", line 249, in _create_config\r\n    self.func(self.config)\r\n  File \"C:\\Users\\dhermes\\venv\\lib\\site-packages\\nox\\_parametrize.py\", line 80, in call_wrapper\r\n    return func(*args, **kwargs)\r\nTypeError: py() got an unexpected keyword argument 'py'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/61", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/61/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/61/events", "html_url": "https://github.com/theacodes/nox/issues/61", "id": 261781865, "node_id": "MDU6SXNzdWUyNjE3ODE4NjU=", "number": 61, "title": "Importing issues w/ nox.py", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-29T21:58:05Z", "updated_at": "2017-09-29T22:18:51Z", "closed_at": "2017-09-29T22:13:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I feel like I'm missing something obvious, but the recommendation to put configuration in a `nox.py` file isn't working for me (at least on my system).\r\n\r\nUsing the example from the docs:\r\n```\r\n$ cat nox.py\r\nimport nox\r\n\r\n@nox.session\r\ndef tests(session):\r\n    session.install('py.test')\r\n    session.run('py.test')\r\n\r\n@nox.session\r\ndef lint(session):\r\n    session.install('flake8')\r\n    session.run('flake8', '--import-order-style', 'google')\r\n```\r\n\r\nAnd the latest version:\r\n```\r\n$ pip freeze | grep nox\r\nnox-automation==0.18.1\r\n```\r\n\r\nThis is what I get:\r\n```\r\n$ nox\r\nTraceback (most recent call last):\r\n  File \"/private/tmp/env/bin/nox\", line 7, in <module>\r\n    from nox.main import main\r\n  File \"/private/tmp/nox.py\", line 3, in <module>\r\n    @nox.session\r\nAttributeError: module 'nox' has no attribute 'session'\r\n```\r\n\r\nAs far as I'm aware this is the expected importing behavior when a local file shadows a 3rd party module... what am I missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/60", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/60/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/60/events", "html_url": "https://github.com/theacodes/nox/issues/60", "id": 260453849, "node_id": "MDU6SXNzdWUyNjA0NTM4NDk=", "number": 60, "title": "Pass through the architecture on OS X", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/theacodes/nox/milestones/1", "html_url": "https://github.com/theacodes/nox/milestone/1", "labels_url": "https://api.github.com/repos/theacodes/nox/milestones/1/labels", "id": 3530808, "node_id": "MDk6TWlsZXN0b25lMzUzMDgwOA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 7, "state": "open", "created_at": "2018-07-30T02:05:07Z", "updated_at": "2019-05-15T07:04:18Z", "due_on": null, "closed_at": null}, "comments": 11, "created_at": "2017-09-26T00:24:05Z", "updated_at": "2018-09-24T17:37:00Z", "closed_at": "2018-09-24T17:37:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This allows `nox` to test on both 32-bit and 64-bit architectures.\r\n\r\nWith a Python script that is architecture aware ([`check.py`][1]) it's possible to write a [`nox` config][2] that sends along the \"correct\" `arch -32` prefix for commands. (Unfortunately prepending `arch -32` to a command doesn't show up in `sys.argv`.)\r\n\r\n-----\r\n\r\nRunning it with my magic trick turned on does the right thing:\r\n\r\n```\r\n$ /Library/Frameworks/Python.framework/Versions/3.6/bin/nox -s 'check(do_hack=True)'\r\nnox > Running session check(do_hack=True)\r\nnox > /Library/Frameworks/Python.framework/Versions/3.6/bin/python -m virtualenv ...\r\nnox > chdir ${HOME}/nox-bug-report\r\nnox > arch -64 python check.py\r\nArchitecture: 64-bit\r\n      Prefix: ${HOME}/nox-bug-report/.nox/check-do_hack-true/bin/..\r\n Real prefix: /Library/Frameworks/Python.framework/Versions/3.6\r\nnox > Session check(do_hack=True) was successful.\r\n$\r\n$ # Re-use\r\n$ arch -32 \\\r\n>   /Library/Frameworks/Python.framework/Versions/3.6/bin/nox -s 'check(do_hack=True)' -r\r\nnox > Running session check(do_hack=True)\r\nnox > Re-using existing virtualenv at ${HOME}/nox-bug-report/.nox/check-do_hack-true.\r\nnox > chdir ${HOME}/nox-bug-report\r\nnox > arch -32 python check.py\r\nArchitecture: 32-bit\r\n      Prefix: ${HOME}/nox-bug-report/.nox/check-do_hack-true/bin/..\r\n Real prefix: /Library/Frameworks/Python.framework/Versions/3.6\r\nnox > Session check(do_hack=True) was successful.\r\n```\r\n\r\nRunning it in the default mode for `nox` doesn't pass through the architecture\r\n\r\n```\r\n$ /Library/Frameworks/Python.framework/Versions/3.6/bin/nox -s 'check(do_hack=False)'\r\nnox > Running session check(do_hack=False)\r\nnox > /Library/Frameworks/Python.framework/Versions/3.6/bin/python -m virtualenv ...\r\nnox > chdir ${HOME}/nox-bug-report\r\nnox > python check.py\r\nArchitecture: 64-bit\r\n      Prefix: ${HOME}/nox-bug-report/.nox/check-do_hack-false/bin/..\r\n Real prefix: /Library/Frameworks/Python.framework/Versions/3.6\r\nnox > Session check(do_hack=False) was successful.\r\n$\r\n$ # Re-use\r\n$ arch -32 \\\r\n>   /Library/Frameworks/Python.framework/Versions/3.6/bin/nox -s 'check(do_hack=False)' -r\r\nnox > Running session check(do_hack=False)\r\nnox > Re-using existing virtualenv at ${HOME}/nox-bug-report/.nox/check-do_hack-false.\r\nnox > chdir ${HOME}/nox-bug-report\r\nnox > python check.py\r\nArchitecture: 64-bit\r\n      Prefix: ${HOME}/nox-bug-report/.nox/check-do_hack-false/bin/..\r\n Real prefix: /Library/Frameworks/Python.framework/Versions/3.6\r\nnox > Session check(do_hack=False) was successful.\r\n```\r\n\r\nRunning this with the wrong Python binary is a \"not gonna happen\":\r\n\r\n```\r\n$ arch -32 ${HOME}/.pyenv/versions/3.6.2/bin/nox -s check\r\narch: posix_spawnp: ${HOME}/.pyenv/versions/3.6.2/bin/nox: Bad CPU type in executable\r\n```\r\n\r\nThis is relevant because it might mean you don't have to check if the Python binary [`is_dual_architecture()`][3].\r\n\r\n[1]: https://gist.github.com/dhermes/e7aa8cbf8c2f38eca0f899752c6022ca#file-check-py\r\n[2]: https://gist.github.com/dhermes/e7aa8cbf8c2f38eca0f899752c6022ca#file-nox-py\r\n[3]: https://github.com/dhermes/bezier/blob/7cb82188cd0a7da08054a3fbe6b1a42e9a8ed18a/setup_helpers_osx.py#L65-L94", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/58", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/58/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/58/events", "html_url": "https://github.com/theacodes/nox/issues/58", "id": 259051115, "node_id": "MDU6SXNzdWUyNTkwNTExMTU=", "number": 58, "title": "Delete v0.8.0 release notes draft?", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-20T06:15:16Z", "updated_at": "2017-09-20T15:44:10Z", "closed_at": "2017-09-20T15:44:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Seems accidental?\r\n\r\n(Also, should `0.18.1` get release notes?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/54", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/54/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/54/events", "html_url": "https://github.com/theacodes/nox/issues/54", "id": 258919447, "node_id": "MDU6SXNzdWUyNTg5MTk0NDc=", "number": 54, "title": "`nox` always exits with 0, even if a test fails.", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-19T18:30:38Z", "updated_at": "2017-09-19T20:32:27Z", "closed_at": "2017-09-19T20:32:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See [repro][1]. It is making my [builds][2] pass when they didn't mean to.\r\n\r\nH/T to @will-e-p for being my OS X guinea pig.\r\n\r\n[1]: https://gist.github.com/dhermes/1153863ddd3dfb44c2e3cf3206a0bcea\r\n[2]: https://travis-ci.org/dhermes/bezier/jobs/277146609", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/52", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/52/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/52/events", "html_url": "https://github.com/theacodes/nox/issues/52", "id": 258694093, "node_id": "MDU6SXNzdWUyNTg2OTQwOTM=", "number": 52, "title": "virtualenv creation line is hilariously long after #47", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042781, "node_id": "MDU6TGFiZWwzMzEwNDI3ODE=", "url": "https://api.github.com/repos/theacodes/nox/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-19T04:38:26Z", "updated_at": "2018-07-30T02:04:19Z", "closed_at": "2018-07-30T02:04:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For example:\r\n\r\n```\r\nnox > Running session functional(python_version='2.7')\r\nnox > /home/dhermes/.pyenv/versions/3.6.2/bin/python3.6 -m virtualenv /home/dhermes/bezier/.nox/functional-python_version-2-7 -p python2.7\r\nnox > chdir /home/dhermes/bezier\r\n```\r\n\r\n@jonparrott DYT anything should be done or it's fine?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/51", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/51/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/51/events", "html_url": "https://github.com/theacodes/nox/issues/51", "id": 258609290, "node_id": "MDU6SXNzdWUyNTg2MDkyOTA=", "number": 51, "title": "Add AppVeyor badge to README", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-18T20:23:06Z", "updated_at": "2017-10-17T19:08:00Z", "closed_at": "2017-10-17T19:08:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If you feel like you are getting too many badges, you can make a table like [`pytest-cov`][1] does.\r\n\r\n[1]: https://github.com/pytest-dev/pytest-cov/tree/cde7c378b6a1971957759f42ac91e2860b41cf89", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/46", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/46/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/46/events", "html_url": "https://github.com/theacodes/nox/issues/46", "id": 258412794, "node_id": "MDU6SXNzdWUyNTg0MTI3OTQ=", "number": 46, "title": "Locate Python interpreters on Windows via the `py.exe` launcher", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042776, "node_id": "MDU6TGFiZWwzMzEwNDI3NzY=", "url": "https://api.github.com/repos/theacodes/nox/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 331042779, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzk=", "url": "https://api.github.com/repos/theacodes/nox/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-18T09:13:08Z", "updated_at": "2017-10-17T18:42:55Z", "closed_at": "2017-10-17T18:42:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Windows, the versioned Python executables (`python3.6` and similar) don't exist. So to set a specific interpreter needs a hard-coded path (as far as I can tell from some simple experiments). The nox code says that it is based on the `tox` code, but it omits the `locate_via_py` step in tox that uses the `py.exe` launcher to resolve names like `python3.6`.\r\n\r\nCould this be added, as the \"standard\" location is wrong for Python 3.6+, and if the user overrides the standard location, the current nox code won't handle this whereas the launcher will?\r\n\r\nI'm willing to try to put together a PR if needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/45", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/45/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/45/events", "html_url": "https://github.com/theacodes/nox/issues/45", "id": 258336880, "node_id": "MDU6SXNzdWUyNTgzMzY4ODA=", "number": 45, "title": "Use virtualenv from the current Python running nox", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-17T21:36:06Z", "updated_at": "2017-09-18T17:03:39Z", "closed_at": "2017-09-18T17:03:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "... rather than just getting `virtualenv` from `PATH`.\r\n\r\nAs @jonparrott [mentioned][1]\r\n\r\n> This would be pretty straightforward, we should just invoke `python -m virtualenv`\r\n\r\n(#44 was originally titled this, but I accidentally repurposed that issue)\r\n\r\n[1]: https://github.com/jonparrott/nox/issues/44#issuecomment-330067012", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/44", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/44/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/44/events", "html_url": "https://github.com/theacodes/nox/issues/44", "id": 258319047, "node_id": "MDU6SXNzdWUyNTgzMTkwNDc=", "number": 44, "title": "`venv/bin/pip install` breaks when __PYVENV_LAUNCHER__ is present", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-09-17T17:31:50Z", "updated_at": "2017-09-18T17:48:11Z", "closed_at": "2017-09-18T17:48:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "... rather than just getting `virtualenv` from `PATH`. I am currently having some hard-to-debug issues on Travis CI (OS X, with python.org CPython installers) right now ([e.g.][1]) partly because the system `virtualenv` is not what I want `nox` to use. ([Also relevant][2])\r\n\r\n[1]: https://travis-ci.org/dhermes/bezier/jobs/276557367\r\n[2]: https://github.com/pypa/virtualenv/issues/620", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/43", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/43/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/43/events", "html_url": "https://github.com/theacodes/nox/issues/43", "id": 257924311, "node_id": "MDU6SXNzdWUyNTc5MjQzMTE=", "number": 43, "title": "Support `python -m nox`", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/theacodes/nox/milestones/1", "html_url": "https://github.com/theacodes/nox/milestone/1", "labels_url": "https://api.github.com/repos/theacodes/nox/milestones/1/labels", "id": 3530808, "node_id": "MDk6TWlsZXN0b25lMzUzMDgwOA==", "number": 1, "title": "1.0.0", "description": "", "creator": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 7, "state": "open", "created_at": "2018-07-30T02:05:07Z", "updated_at": "2019-05-15T07:04:18Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2017-09-15T04:26:53Z", "updated_at": "2018-08-24T02:57:49Z", "closed_at": "2018-08-24T02:57:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently this fails because `nox` is a package and `nox.py` doesn't exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/theacodes/nox/issues/42", "repository_url": "https://api.github.com/repos/theacodes/nox", "labels_url": "https://api.github.com/repos/theacodes/nox/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/theacodes/nox/issues/42/comments", "events_url": "https://api.github.com/repos/theacodes/nox/issues/42/events", "html_url": "https://github.com/theacodes/nox/issues/42", "id": 254512572, "node_id": "MDU6SXNzdWUyNTQ1MTI1NzI=", "number": 42, "title": "Support a \"presession\"/\"postsession\" session", "user": {"login": "duggelz", "id": 608338, "node_id": "MDQ6VXNlcjYwODMzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/608338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duggelz", "html_url": "https://github.com/duggelz", "followers_url": "https://api.github.com/users/duggelz/followers", "following_url": "https://api.github.com/users/duggelz/following{/other_user}", "gists_url": "https://api.github.com/users/duggelz/gists{/gist_id}", "starred_url": "https://api.github.com/users/duggelz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duggelz/subscriptions", "organizations_url": "https://api.github.com/users/duggelz/orgs", "repos_url": "https://api.github.com/users/duggelz/repos", "events_url": "https://api.github.com/users/duggelz/events{/privacy}", "received_events_url": "https://api.github.com/users/duggelz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 331042778, "node_id": "MDU6TGFiZWwzMzEwNDI3Nzg=", "url": "https://api.github.com/repos/theacodes/nox/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-01T01:34:35Z", "updated_at": "2018-02-25T01:07:06Z", "closed_at": "2018-02-25T01:07:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a somewhat half-baked idea.  For the google-cloud-python config, we have a parametrized 'tests' session, that collects coverage information over several different parametrized runs, and a non-parametrized 'cover' session that collects everything and creates a single coverage report.  It would be nice if we could make some function or session that runs once after every 'tests' session is done, so that 'nox -s tests' produces the coverage report by itself.\r\n\r\nThis could be done really grossly by a variety of means: Giving the 'cover' session a mangled name like 'tests_post', adding a new kind of 'parametrize' that just appends a single new session instead of doing an MxN product of all previous parameters, or passing in a 'is_last_parameter' to the tests session.\r\n\r\nThis can be done right now by something like:\r\n\r\n```\r\n@nox.session\r\n@nox.parametrize('version', ['2.7', '3.4', '3.5', '3.6'])\r\n@nox.parametrize('subdir', ['runtime_builders','otherdir'])\r\n@nox.parametrize('coverage_report', [False, True])\r\ndef tests(session, version, subdir, coverage_report):\r\n  if not coverage_report:\r\n    .. do normal tests\r\n  elif version == '2.7' and subdir == 'runtime_builders': # FRAGILE\r\n    .. produce coverage report\r\n```\r\n    ", "performed_via_github_app": null, "score": 1.0}]}