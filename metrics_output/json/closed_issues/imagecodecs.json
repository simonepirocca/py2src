{"total_count": 126, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/madler/zlib/issues/518", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/518/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/518/events", "html_url": "https://github.com/madler/zlib/issues/518", "id": 678711155, "node_id": "MDU6SXNzdWU2Nzg3MTExNTU=", "number": 518, "title": "MemorySanitizer, use of uninitialized in slide_hash zlib/deflate.c:219:20", "user": {"login": "alexhultman", "id": 3397140, "node_id": "MDQ6VXNlcjMzOTcxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3397140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhultman", "html_url": "https://github.com/alexhultman", "followers_url": "https://api.github.com/users/alexhultman/followers", "following_url": "https://api.github.com/users/alexhultman/following{/other_user}", "gists_url": "https://api.github.com/users/alexhultman/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhultman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhultman/subscriptions", "organizations_url": "https://api.github.com/users/alexhultman/orgs", "repos_url": "https://api.github.com/users/alexhultman/repos", "events_url": "https://api.github.com/users/alexhultman/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhultman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-13T20:21:32Z", "updated_at": "2020-08-13T21:17:50Z", "closed_at": "2020-08-13T20:36:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "#517\r\n\r\nWhile fuzzing, uninitialized memory allocated in zcalloc is eventually used in:\r\n\r\n  | #0 0x53443d in slide_hash zlib/deflate.c:219:20\r\n  | #1 0x52b179 in fill_window zlib/deflate.c:1516:13\r\n  | #2 0x53b4d0 in deflate_fast zlib/deflate.c:1838:13\r\n  | #3 0x531e70 in deflate zlib/deflate.c:1003:18\r\n\r\nVersion of zlib is 1.2.11 compiled with proper -fsanitize=memory flags on x64 Linux. I can provide more info if needed, including reproducing code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/517", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/517/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/517/events", "html_url": "https://github.com/madler/zlib/issues/517", "id": 678652396, "node_id": "MDU6SXNzdWU2Nzg2NTIzOTY=", "number": 517, "title": "MemorySanitizer: zcalloc does not guarantee initialized allocation", "user": {"login": "alexhultman", "id": 3397140, "node_id": "MDQ6VXNlcjMzOTcxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3397140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhultman", "html_url": "https://github.com/alexhultman", "followers_url": "https://api.github.com/users/alexhultman/followers", "following_url": "https://api.github.com/users/alexhultman/following{/other_user}", "gists_url": "https://api.github.com/users/alexhultman/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhultman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhultman/subscriptions", "organizations_url": "https://api.github.com/users/alexhultman/orgs", "repos_url": "https://api.github.com/users/alexhultman/repos", "events_url": "https://api.github.com/users/alexhultman/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhultman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T18:34:26Z", "updated_at": "2020-08-13T20:02:37Z", "closed_at": "2020-08-13T20:02:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using MemorySanitizer with a fuzzer on a clean compile of zlib I find issues in zcalloc in zlib/zutil.c:311. This beacuse that function does not always return calloc, but malloc, which is uninitialized:\r\n\r\nUninitialized value was created by a heap allocation\r\n--\r\n\u00a0 | #0 0x4d24dd in malloc /src/llvm-project/compiler-rt/lib/msan/msan_interceptors.cpp:901:3\r\n\u00a0 | #1 0x563677 in zcalloc zlib/zutil.c:311:39\r\n\u00a0 | #2 0x528912 in deflateInit2_ zlib/deflate.c:322:27\r\n\r\nThis line makes no sense to me:\r\n\r\n```\r\nreturn sizeof(uInt) > 2 ? (voidpf)malloc(items * size) :\r\n                              (voidpf)calloc(items, size);\r\n```\r\n\r\nif sizeof(uInt) is bigger than 2 then it returns malloc rather than calloc. This files MemorySanitizer security issues:\r\n\r\n\r\n==1==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n--\r\n\u00a0 | #0 0x53443d in slide_hash zlib/deflate.c:219:20\r\n\u00a0 | #1 0x52b179 in fill_window zlib/deflate.c:1516:13\r\n\u00a0 | #2 0x53b4d0 in deflate_fast zlib/deflate.c:1838:13\r\n\u00a0 | #3 0x531e70 in deflate zlib/deflate.c:1003:18\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/515", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/515/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/515/events", "html_url": "https://github.com/madler/zlib/issues/515", "id": 662684600, "node_id": "MDU6SXNzdWU2NjI2ODQ2MDA=", "number": 515, "title": "uncompress second param always return same number", "user": {"login": "scorpion9111", "id": 13959441, "node_id": "MDQ6VXNlcjEzOTU5NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/13959441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scorpion9111", "html_url": "https://github.com/scorpion9111", "followers_url": "https://api.github.com/users/scorpion9111/followers", "following_url": "https://api.github.com/users/scorpion9111/following{/other_user}", "gists_url": "https://api.github.com/users/scorpion9111/gists{/gist_id}", "starred_url": "https://api.github.com/users/scorpion9111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scorpion9111/subscriptions", "organizations_url": "https://api.github.com/users/scorpion9111/orgs", "repos_url": "https://api.github.com/users/scorpion9111/repos", "events_url": "https://api.github.com/users/scorpion9111/events{/privacy}", "received_events_url": "https://api.github.com/users/scorpion9111/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-21T07:18:42Z", "updated_at": "2020-07-22T07:11:32Z", "closed_at": "2020-07-21T07:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "uncompress second param always return same number\r\nByte uncompr[512];\r\nuLong uncomprLen=512;\r\nuncompress(uncompr, &uncomprLen, compr, comprLen);\r\nuncomprLen always = 512\r\n\r\ntry 1.2.8 and 1.2.11 both have this problem\r\n\r\ncode:\r\n\r\n#define CHECK_ERR(err, msg) { \\\r\n    if (err != Z_OK) { \\\r\n        aos_printf(0, \"%s error: %d\\n\", msg, err); \\\r\n    } \\\r\n}\r\n\r\nvoid test_compress(void)\r\n{\r\n\tz_const char hello[] = \"hello, hello, hello, hello, hello, hello, hello, hello, hello, hello, hello, hello, hello, hello, hello, hello!\";\r\n\tByte compr[512], uncompr[512];\r\n    uLong comprLen=512, uncomprLen=512;\r\n    int err;\r\n    uLong len = (uLong)strlen(hello)+1;\r\n\r\n    err = compress(compr, &comprLen, (const Bytef*)hello, len);\r\n    CHECK_ERR(err, \"compress\");\r\n\r\n    strcpy((char*)uncompr, \"garbage\");\r\n\r\n    err = uncompress(uncompr, &uncomprLen, (const Bytef*)compr, comprLen);\r\n    CHECK_ERR(err, \"uncompress\");\r\n\r\n    if (strcmp((char*)uncompr, hello)) {\r\n        printf(0, \"bad uncompress\\n\");\r\n    } else {\r\n        printf(0, \"uncompress(): %s\\n\", (char *)uncompr);\r\n    }\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/513", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/513/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/513/events", "html_url": "https://github.com/madler/zlib/issues/513", "id": 658317979, "node_id": "MDU6SXNzdWU2NTgzMTc5Nzk=", "number": 513, "title": "Probable unwanted execution of code", "user": {"login": "Meithal", "id": 12249929, "node_id": "MDQ6VXNlcjEyMjQ5OTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/12249929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Meithal", "html_url": "https://github.com/Meithal", "followers_url": "https://api.github.com/users/Meithal/followers", "following_url": "https://api.github.com/users/Meithal/following{/other_user}", "gists_url": "https://api.github.com/users/Meithal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Meithal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Meithal/subscriptions", "organizations_url": "https://api.github.com/users/Meithal/orgs", "repos_url": "https://api.github.com/users/Meithal/repos", "events_url": "https://api.github.com/users/Meithal/events{/privacy}", "received_events_url": "https://api.github.com/users/Meithal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T15:43:09Z", "updated_at": "2020-07-16T15:58:16Z", "closed_at": "2020-07-16T15:58:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/madler/zlib/blob/master/deflate.c#L603\r\n\r\nThis else statement would only execute one instruction of the CLEAR_HASH macro, which looks unwanted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/505", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/505/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/505/events", "html_url": "https://github.com/madler/zlib/issues/505", "id": 628925417, "node_id": "MDU6SXNzdWU2Mjg5MjU0MTc=", "number": 505, "title": "Access violation - code c0000005 (!!! second chance !!!)", "user": {"login": "kouzhudong", "id": 18212165, "node_id": "MDQ6VXNlcjE4MjEyMTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/18212165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kouzhudong", "html_url": "https://github.com/kouzhudong", "followers_url": "https://api.github.com/users/kouzhudong/followers", "following_url": "https://api.github.com/users/kouzhudong/following{/other_user}", "gists_url": "https://api.github.com/users/kouzhudong/gists{/gist_id}", "starred_url": "https://api.github.com/users/kouzhudong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kouzhudong/subscriptions", "organizations_url": "https://api.github.com/users/kouzhudong/orgs", "repos_url": "https://api.github.com/users/kouzhudong/repos", "events_url": "https://api.github.com/users/kouzhudong/events{/privacy}", "received_events_url": "https://api.github.com/users/kouzhudong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-02T06:03:25Z", "updated_at": "2020-06-03T01:25:40Z", "closed_at": "2020-06-03T01:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nMicrosoft (R) Windows Debugger Version 10.0.18362.1 X86\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\n*** wait with pending attach\r\n\r\n************* Path validation summary **************\r\nResponse                         Time (ms)     Location\r\nDeferred                                       srv*C:\\symbols*http://msdl.microsoft.com/download/symbols\r\nWARNING: Whitespace at end of path element\r\n\r\n************* Path validation summary **************\r\nResponse                         Time (ms)     Location\r\nDeferred                                       srv*C:\\symbols*http://msdl.microsoft.com/download/symbols\r\nWARNING: Whitespace at end of path element\r\nSymbol search path is: srv*C:\\symbols*http://msdl.microsoft.com/download/symbols;srv*C:\\symbols*http://msdl.microsoft.com/download/symbols \r\nExecutable search path is: \r\nModLoad: 00400000 0040b000   F:\\git\\\u5176\u4ed6\\zlib\\contrib\\vstudio\\vc15\\x86\\MiniUnzipDebug\\miniunz.exe\r\nModLoad: 775b0000 7774a000   C:\\WINDOWS\\SYSTEM32\\ntdll.dll\r\nModLoad: 75ec0000 75fa0000   C:\\WINDOWS\\System32\\KERNEL32.DLL\r\nModLoad: 74dc0000 74fbe000   C:\\WINDOWS\\System32\\KERNELBASE.dll\r\nModLoad: 10000000 10030000   F:\\git\\\u5176\u4ed6\\zlib\\contrib\\vstudio\\vc15\\x86\\MiniUnzipDebug\\zlibwapi.dll\r\nModLoad: 79230000 7924d000   C:\\WINDOWS\\SYSTEM32\\VCRUNTIME140D.dll\r\nModLoad: 790b0000 79225000   C:\\WINDOWS\\SYSTEM32\\ucrtbased.dll\r\n(7098.4784): Access violation - code c0000005 (!!! second chance !!!)\r\n*** WARNING: Unable to verify checksum for F:\\git\\\u5176\u4ed6\\zlib\\contrib\\vstudio\\vc15\\x86\\MiniUnzipDebug\\zlibwapi.dll\r\neax=000e0fc0 ebx=cdcdcdcd ecx=00000016 edx=00000000 esi=0074e090 edi=0074c008\r\neip=1000215f esp=0019f998 ebp=0000003e iopl=0         nv up ei pl nz na po nc\r\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00210202\r\nzlibwapi!_inflate_fast+0x3af:\r\n1000215f 8b0483          mov     eax,dword ptr [ebx+eax*4] ds:002b:ce060ccd=????????\r\n*** WARNING: Unable to verify checksum for F:\\git\\\u5176\u4ed6\\zlib\\contrib\\vstudio\\vc15\\x86\\MiniUnzipDebug\\miniunz.exe\r\n0:000> kv\r\n # ChildEBP RetAddr  Args to Child              \r\n00 0019f9e8 10010309 007493b4 00002000 00000000 zlibwapi!_inflate_fast+0x3af (FPO: [Uses EBP] [4,16,0]) (CONV: cdecl) [F:\\git\\\u5176\u4ed6\\zlib\\contrib\\masmx86\\inffas32.asm @ 669] \r\n01 0019fb00 00401c7e 00749290 0074c008 00002000 zlibwapi!inflate+0x1659 (FPO: [Non-Fpo]) (CONV: stdcall) [F:\\git\\\u5176\u4ed6\\zlib\\inflate.c @ 1047] \r\n02 0019fd20 00401df8 00749290 0019fd70 0019fd74 miniunz!do_extract_currentfile+0x2fe (FPO: [Non-Fpo]) (CONV: cdecl) [F:\\git\\\u5176\u4ed6\\zlib\\contrib\\minizip\\miniunz.c @ 435] \r\n03 0019fd64 004021f7 00749290 00000000 00000000 miniunz!do_extract+0x78 (FPO: [Non-Fpo]) (CONV: cdecl) [F:\\git\\\u5176\u4ed6\\zlib\\contrib\\minizip\\miniunz.c @ 494] \r\n04 0019fee4 00402d13 00000002 007468c0 00746750 miniunz!main+0x327 (FPO: [Non-Fpo]) (CONV: cdecl) [F:\\git\\\u5176\u4ed6\\zlib\\contrib\\minizip\\miniunz.c @ 652] \r\n05 0019ff04 00402b67 9b7607c3 004011db 004011db miniunz!invoke_main+0x33 (FPO: [Non-Fpo]) (CONV: cdecl) [d:\\agent\\_work\\7\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 78] \r\n06 0019ff60 004029fd 0019ff70 00402d98 0019ff80 miniunz!__scrt_common_main_seh+0x157 (FPO: [Non-Fpo]) (CONV: cdecl) [d:\\agent\\_work\\7\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 288] \r\n07 0019ff68 00402d98 0019ff80 75ed6359 003b8000 miniunz!__scrt_common_main+0xd (FPO: [Non-Fpo]) (CONV: cdecl) [d:\\agent\\_work\\7\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 331] \r\n08 0019ff70 75ed6359 003b8000 75ed6340 0019ffdc miniunz!mainCRTStartup+0x8 (FPO: [Non-Fpo]) (CONV: cdecl) [d:\\agent\\_work\\7\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_main.cpp @ 17] \r\n09 0019ff80 77617c24 003b8000 23fa9f16 00000000 KERNEL32!BaseThreadInitThunk+0x19 (FPO: [Non-Fpo])\r\n0a 0019ffdc 77617bf4 ffffffff 77638fff 00000000 ntdll!__RtlUserThreadStart+0x2f (FPO: [SEH])\r\n0b 0019ffec 00000000 004011db 003b8000 00000000 ntdll!_RtlUserThreadStart+0x1b (FPO: [Non-Fpo])\r\n0:000> dv\r\n           strm = 0x00003faf\r\n          flush = 0n0\r\n             in = 0\r\n           have = 1\r\n            ret = 0n0\r\n           copy = 0\r\n            put = 0x0019fd1c \"`J!\"\r\n           hbuf = unsigned char [4] \"???\"\r\n           bits = 0xd0\r\n           last = struct code\r\n           hold = 0x47\r\n          state = 0xfdfdfdfd\r\n            out = 0x74bfe8\r\n           here = struct code\r\n           next = 0x00000000 \"\"\r\n           left = 0xc007071\r\n          order = unsigned short [19]\r\n           from = 0x00000000 \"\"\r\n            len = 0x67d782b3\r\n\r\n\r\n\u770b\u6837\u5b50\u662f\u6808\u7834\u574f\u4e86\u3002\r\n\r\n\u6c47\u7f16\u7684\u7f16\u8bd1\u662f\u9ed8\u8ba4\u7684\u3002\r\nDLL\u7684\u7f16\u8bd1\u662f\uff1a\u5426 (/SAFESEH:NO)\u3002", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/494", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/494/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/494/events", "html_url": "https://github.com/madler/zlib/issues/494", "id": 619891064, "node_id": "MDU6SXNzdWU2MTk4OTEwNjQ=", "number": 494, "title": "Installation failed: Failed to find a pointer-size integer type.", "user": {"login": "ptoche", "id": 6339274, "node_id": "MDQ6VXNlcjYzMzkyNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6339274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptoche", "html_url": "https://github.com/ptoche", "followers_url": "https://api.github.com/users/ptoche/followers", "following_url": "https://api.github.com/users/ptoche/following{/other_user}", "gists_url": "https://api.github.com/users/ptoche/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptoche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptoche/subscriptions", "organizations_url": "https://api.github.com/users/ptoche/orgs", "repos_url": "https://api.github.com/users/ptoche/repos", "events_url": "https://api.github.com/users/ptoche/events{/privacy}", "received_events_url": "https://api.github.com/users/ptoche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-18T04:01:20Z", "updated_at": "2020-05-18T21:51:21Z", "closed_at": "2020-05-18T21:51:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Specs: **macOS Catalina 10.15.4** with newest version of `xcode` (both `MacOSX10.14.sdk` and `MacOSX10.15.sdk` available in `Library/Developer/CommandLineTools/SDKs/`\r\n\r\nError message includes: `Installation failed: Failed to find a pointer-size integer type.`\r\n\r\nPlease let me know if more information is needed. \r\n\r\n        cd zlib-1.2.11\r\n        ./configure\r\n        Checking for gcc...\r\n        Checking for shared library support...\r\n        Building shared library libz.1.2.11.dylib with gcc.\r\n        Checking for size_t... No.\r\n        Checking for long long... Yes.\r\n        Failed to find a pointer-size integer type.\r\n        ** ./configure aborting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/486", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/486/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/486/events", "html_url": "https://github.com/madler/zlib/issues/486", "id": 604386492, "node_id": "MDU6SXNzdWU2MDQzODY0OTI=", "number": 486, "title": "Compilation error under Cygwin c++ 9.3.0", "user": {"login": "WinteryFox", "id": 1648591, "node_id": "MDQ6VXNlcjE2NDg1OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1648591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WinteryFox", "html_url": "https://github.com/WinteryFox", "followers_url": "https://api.github.com/users/WinteryFox/followers", "following_url": "https://api.github.com/users/WinteryFox/following{/other_user}", "gists_url": "https://api.github.com/users/WinteryFox/gists{/gist_id}", "starred_url": "https://api.github.com/users/WinteryFox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WinteryFox/subscriptions", "organizations_url": "https://api.github.com/users/WinteryFox/orgs", "repos_url": "https://api.github.com/users/WinteryFox/repos", "events_url": "https://api.github.com/users/WinteryFox/events{/privacy}", "received_events_url": "https://api.github.com/users/WinteryFox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-22T01:31:42Z", "updated_at": "2020-08-02T13:36:05Z", "closed_at": "2020-08-02T13:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Compiling with the latest Cygwin distribution which uses c++ 9.3.0 as compiler I get the following error;\r\n`/usr/bin/windres: [redacted]/zlib/win32/zlib1.rc:7: syntax error`\r\nPlease advice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/479", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/479/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/479/events", "html_url": "https://github.com/madler/zlib/issues/479", "id": 581944654, "node_id": "MDU6SXNzdWU1ODE5NDQ2NTQ=", "number": 479, "title": "doubt about the coding of match len and distance", "user": {"login": "sunny-shu", "id": 55616357, "node_id": "MDQ6VXNlcjU1NjE2MzU3", "avatar_url": "https://avatars3.githubusercontent.com/u/55616357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunny-shu", "html_url": "https://github.com/sunny-shu", "followers_url": "https://api.github.com/users/sunny-shu/followers", "following_url": "https://api.github.com/users/sunny-shu/following{/other_user}", "gists_url": "https://api.github.com/users/sunny-shu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunny-shu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunny-shu/subscriptions", "organizations_url": "https://api.github.com/users/sunny-shu/orgs", "repos_url": "https://api.github.com/users/sunny-shu/repos", "events_url": "https://api.github.com/users/sunny-shu/events{/privacy}", "received_events_url": "https://api.github.com/users/sunny-shu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-16T02:33:09Z", "updated_at": "2020-03-16T04:28:56Z", "closed_at": "2020-03-16T03:21:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "@madler\r\nhello madler:\r\n    recently i am focusing on compression algorithms\u3002i read the zlib writed by you\u3002\r\n    in zlib,when encoding match length or distance\uff0cyou first do a mapper\uff0cthen make a entropy coding and write the extra bits immediately into the out buffer.\r\n    i think the mapper can not improve the compression ratio,instead it will reduce the compression ratio a little.(From the perspective of entropy)\r\n    it just improve the coding speed and reduce memory use,because the quantity of symbols have being reduced.\r\n    am i right?\r\n    i am expecting for you answer,thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/464", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/464/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/464/events", "html_url": "https://github.com/madler/zlib/issues/464", "id": 545387286, "node_id": "MDU6SXNzdWU1NDUzODcyODY=", "number": 464, "title": "Comment for z_stream::zalloc. NO THROW", "user": {"login": "dmitry-lipetsk", "id": 4594554, "node_id": "MDQ6VXNlcjQ1OTQ1NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4594554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitry-lipetsk", "html_url": "https://github.com/dmitry-lipetsk", "followers_url": "https://api.github.com/users/dmitry-lipetsk/followers", "following_url": "https://api.github.com/users/dmitry-lipetsk/following{/other_user}", "gists_url": "https://api.github.com/users/dmitry-lipetsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitry-lipetsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitry-lipetsk/subscriptions", "organizations_url": "https://api.github.com/users/dmitry-lipetsk/orgs", "repos_url": "https://api.github.com/users/dmitry-lipetsk/repos", "events_url": "https://api.github.com/users/dmitry-lipetsk/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitry-lipetsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-05T08:06:34Z", "updated_at": "2020-01-06T08:38:13Z", "closed_at": "2020-01-05T23:35:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI review some C++ code, which uses zlib. And read manual for zlib :)\r\n\r\nI see initialization of z_stream::zalloc by throw-based allocation function.\r\n\r\nzlib manual say: \"zalloc must return Z_NULL if there is not enough memory for the object.\"\r\n\r\nI offer to correct comment for z_stream::zalloc\r\n\r\nhttps://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/zlib.h#L98\r\n\r\nfrom \" used to allocate the internal state\" to  \"used to allocate the internal state. **NO THROW**\"\r\n\r\nOr to any other text with attention about prevent of exception usage.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/463", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/463/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/463/events", "html_url": "https://github.com/madler/zlib/issues/463", "id": 542870948, "node_id": "MDU6SXNzdWU1NDI4NzA5NDg=", "number": 463, "title": "Unable to Unzip file , created from an empty directory zipping", "user": {"login": "VivekZak-samsung", "id": 59285285, "node_id": "MDQ6VXNlcjU5Mjg1Mjg1", "avatar_url": "https://avatars0.githubusercontent.com/u/59285285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VivekZak-samsung", "html_url": "https://github.com/VivekZak-samsung", "followers_url": "https://api.github.com/users/VivekZak-samsung/followers", "following_url": "https://api.github.com/users/VivekZak-samsung/following{/other_user}", "gists_url": "https://api.github.com/users/VivekZak-samsung/gists{/gist_id}", "starred_url": "https://api.github.com/users/VivekZak-samsung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VivekZak-samsung/subscriptions", "organizations_url": "https://api.github.com/users/VivekZak-samsung/orgs", "repos_url": "https://api.github.com/users/VivekZak-samsung/repos", "events_url": "https://api.github.com/users/VivekZak-samsung/events{/privacy}", "received_events_url": "https://api.github.com/users/VivekZak-samsung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-27T13:11:14Z", "updated_at": "2020-04-11T10:07:38Z", "closed_at": "2019-12-30T21:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps:\r\nCreated an empty directory -> Zipped using zip.h (zipOpen) -> unzOpen returns NULL for the same file (unzip.h)\r\nNote: \r\n1. Zipped file size is non zero  \r\n2. 7zip/winzip also cant unzip the file\r\n\r\n@version1.2.11 #latest", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/461", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/461/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/461/events", "html_url": "https://github.com/madler/zlib/issues/461", "id": 540863352, "node_id": "MDU6SXNzdWU1NDA4NjMzNTI=", "number": 461, "title": "contrib/minizip/mztools.c:40: missing sanity check on fopen return value ?", "user": {"login": "dcb314", "id": 4262901, "node_id": "MDQ6VXNlcjQyNjI5MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4262901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcb314", "html_url": "https://github.com/dcb314", "followers_url": "https://api.github.com/users/dcb314/followers", "following_url": "https://api.github.com/users/dcb314/following{/other_user}", "gists_url": "https://api.github.com/users/dcb314/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcb314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcb314/subscriptions", "organizations_url": "https://api.github.com/users/dcb314/orgs", "repos_url": "https://api.github.com/users/dcb314/repos", "events_url": "https://api.github.com/users/dcb314/events{/privacy}", "received_events_url": "https://api.github.com/users/dcb314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-20T08:48:02Z", "updated_at": "2020-01-03T17:13:55Z", "closed_at": "2020-01-03T17:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Source code is\r\n\r\n  FILE* fpZip = fopen(file, \"rb\");\r\n  FILE* fpOut = fopen(fileOut, \"wb\");\r\n  FILE* fpOutCD = fopen(fileOutTmp, \"wb\");\r\n  if (fpZip != NULL &&  fpOut != NULL) {\r\n\r\nMaybe better:\r\n\r\n  FILE* fpZip = fopen(file, \"rb\");\r\n  FILE* fpOut = fopen(fileOut, \"wb\");\r\n  FILE* fpOutCD = fopen(fileOutTmp, \"wb\");\r\n  if (fpZip != NULL &&  fpOut != NULL && fpOutCD != NULL) {\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/456", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/456/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/456/events", "html_url": "https://github.com/madler/zlib/issues/456", "id": 534010453, "node_id": "MDU6SXNzdWU1MzQwMTA0NTM=", "number": 456, "title": "zlib.def: file format not recognized; treating as linker script", "user": {"login": "darksectordds", "id": 11490033, "node_id": "MDQ6VXNlcjExNDkwMDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11490033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darksectordds", "html_url": "https://github.com/darksectordds", "followers_url": "https://api.github.com/users/darksectordds/followers", "following_url": "https://api.github.com/users/darksectordds/following{/other_user}", "gists_url": "https://api.github.com/users/darksectordds/gists{/gist_id}", "starred_url": "https://api.github.com/users/darksectordds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darksectordds/subscriptions", "organizations_url": "https://api.github.com/users/darksectordds/orgs", "repos_url": "https://api.github.com/users/darksectordds/repos", "events_url": "https://api.github.com/users/darksectordds/events{/privacy}", "received_events_url": "https://api.github.com/users/darksectordds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-06T14:05:55Z", "updated_at": "2019-12-06T14:52:10Z", "closed_at": "2019-12-06T14:50:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. Tried to build win32 version, but take it same issue:\r\n\r\n```\r\n\u03bb make -f win32/Makefile.gcc install BINARY_PATH=/mingw/bin INCLUDE_PATH=/mingw/include LIBRARY_PATH=/mingw/lib\r\ngcc  -O3 -Wall -DNO_VIZ -c -o adler32.o adler32.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o compress.o compress.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o crc32.o crc32.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o deflate.o deflate.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o gzclose.o gzclose.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o gzlib.o gzlib.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o gzread.o gzread.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o gzwrite.o gzwrite.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o infback.o infback.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o inffast.o inffast.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o inflate.o inflate.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o inftrees.o inftrees.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o trees.o trees.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o uncompr.o uncompr.c\r\ngcc  -O3 -Wall -DNO_VIZ -c -o zutil.o zutil.c\r\nar rcs libz.a adler32.o compress.o crc32.o deflate.o gzclose.o gzlib.o gzread.o gzwrite.o infback.o inffast.o inflate.o inftrees.o trees.o uncompr.o zutil.o\r\nwindres --define GCC_WINDRES -o zlibrc.o win32/zlib1.rc\r\ngcc -shared -Wl,--out-implib,libzdll.a  -o zlib1.dll win32/zlib.def adler32.o compress.o crc32.o deflate.o gzclose.o gzlib.o gzread.o gzwrite.o infback.o inffast.o inflate.o inftrees.o trees.o uncompr.o zutil.o  zlibrc.o\r\nd:/mytest2/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: win32/zlib.def:4: syntax error\r\nd:/mytest2/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe:win32/zlib.def: file format not recognized; treating as linker script\r\nd:/mytest2/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe:win32/zlib.def:2: syntax error\r\ncollect2.exe: error: ld returned 1 exit status\r\nmake: *** [zlib1.dll] Error 1\r\n```\r\n\r\nThat is going on when `LIBRARY` exists in `win32/zlib.def`. If you remove it then build fine.\r\n\r\n```\r\nmake -f win32/Makefile.gcc install BINARY_PATH=/mingw/bin INCLUDE_PATH=/mingw/include LIBRARY_PATH=/mingw/lib\r\ngcc -shared -Wl,--out-implib,libzdll.a  \\\r\n-o zlib1.dll win32/zlib.def adler32.o compress.o crc32.o deflate.o gzclose.o gzlib.o gzread.o gzwrite.o infback.o inffast.o inflate.o inftrees.o trees.o uncompr.o zutil.o  zlibrc.o\r\nstrip zlib1.dll\r\nif [ \"0\" = \"1\" ]; then \\\r\n        mkdir -p /mingw/bin; \\\r\n        cp -fp zlib1.dll /mingw/bin; \\\r\n        cp -fp libzdll.a /mingw/lib; \\\r\nfi\r\ncp -fp zlib.h /mingw/include\r\ncp -fp zconf.h /mingw/include\r\ncp -fp libz.a /mingw/lib\r\n```\r\n\r\nPS: tested on Windows 10 with mingw\r\n```\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=d:/mytest2/mingw/bin/../libexec/gcc/mingw32/8.2.0/lto-wrapper.exe\r\nTarget: mingw32\r\nConfigured with: ../src/gcc-8.2.0/configure --build=x86_64-pc-linux-gnu --host=mingw32 --target=mingw32 --prefix=/mingw --disable-win32-registry --with-arch=i586 --with-tune=generic --enable-languages=c,c++,objc,obj-c++,fortran,ada --with-pkgversion='MinGW.org GCC-8.2.0-5' --with-gmp=/mingw --with-mpfr=/mingw --with-mpc=/mingw --enable-static --enable-shared --enable-threads --with-dwarf2 --disable-sjlj-exceptions --enable-version-specific-runtime-libs --with-libiconv-prefix=/mingw --with-libintl-prefix=/mingw --enable-libstdcxx-debug --with-isl=/mingw --enable-libgomp --disable-libvtv --enable-nls --disable-build-format-warnings\r\nThread model: win32\r\ngcc version 8.2.0 (MinGW.org GCC-8.2.0-5)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/455", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/455/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/455/events", "html_url": "https://github.com/madler/zlib/issues/455", "id": 533541997, "node_id": "MDU6SXNzdWU1MzM1NDE5OTc=", "number": 455, "title": "does avail_in == 0 guarantee that Z_SYNC_FLUSH block is completed in the output?", "user": {"login": "AleXoundOS", "id": 464913, "node_id": "MDQ6VXNlcjQ2NDkxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/464913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AleXoundOS", "html_url": "https://github.com/AleXoundOS", "followers_url": "https://api.github.com/users/AleXoundOS/followers", "following_url": "https://api.github.com/users/AleXoundOS/following{/other_user}", "gists_url": "https://api.github.com/users/AleXoundOS/gists{/gist_id}", "starred_url": "https://api.github.com/users/AleXoundOS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AleXoundOS/subscriptions", "organizations_url": "https://api.github.com/users/AleXoundOS/orgs", "repos_url": "https://api.github.com/users/AleXoundOS/repos", "events_url": "https://api.github.com/users/AleXoundOS/events{/privacy}", "received_events_url": "https://api.github.com/users/AleXoundOS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-05T19:15:29Z", "updated_at": "2019-12-06T18:47:46Z", "closed_at": "2019-12-05T19:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that despite avail_in is 0 I have to call deflate again in order for the EOB to be produced.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/450", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/450/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/450/events", "html_url": "https://github.com/madler/zlib/issues/450", "id": 500308514, "node_id": "MDU6SXNzdWU1MDAzMDg1MTQ=", "number": 450, "title": "Ambiguous and non-free \u201cUse by owners of Che Guevarra parafernalia is prohibited\u201d licence term ", "user": {"login": "hikari-no-yume", "id": 579774, "node_id": "MDQ6VXNlcjU3OTc3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/579774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hikari-no-yume", "html_url": "https://github.com/hikari-no-yume", "followers_url": "https://api.github.com/users/hikari-no-yume/followers", "following_url": "https://api.github.com/users/hikari-no-yume/following{/other_user}", "gists_url": "https://api.github.com/users/hikari-no-yume/gists{/gist_id}", "starred_url": "https://api.github.com/users/hikari-no-yume/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hikari-no-yume/subscriptions", "organizations_url": "https://api.github.com/users/hikari-no-yume/orgs", "repos_url": "https://api.github.com/users/hikari-no-yume/repos", "events_url": "https://api.github.com/users/hikari-no-yume/events{/privacy}", "received_events_url": "https://api.github.com/users/hikari-no-yume/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-30T14:18:46Z", "updated_at": "2019-11-08T21:31:24Z", "closed_at": "2019-11-08T18:01:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/contrib/amd64/amd64-match.S#L1-9\r\n\r\n```\r\n/*\r\n * match.S -- optimized version of longest_match()\r\n * based on the similar work by Gilles Vollant, and Brian Raiter, written 1998\r\n *\r\n * This is free software; you can redistribute it and/or modify it\r\n * under the terms of the BSD License. Use by owners of Che Guevarra\r\n * parafernalia is prohibited, where possible, and highly discouraged\r\n * elsewhere.\r\n */\r\n```\r\n\r\nThe licence terms in this file are problematic for several reasons:\r\n\r\n1. They are ambiguous: is the file_actually_ covered by BSD, given there is this following prohibition statement? Does it or does it not create an exception to the BSD licence?\r\n2. It is vague (\u201cuse\u201d \u2014 what kind? \u201cBSD License\u201d \u2014 which version?).\r\n3. If it is enforceable then it is a non-free licence term, that is, the file is not free software, and possibly not \u201copen source\u201d, because it cannot be used by anyone for any purpose.\r\n4. It's either a joke or an ideological statement, and both might (in the eye of the beholder of course) reflect poorly on zlib.\r\n\r\nLuckily, this file is optional. Unfortunately, it seems like it has made its way into larger software without the distributors or developers seemingly being fully aware of it.\r\n\r\nI am aware of course [that](https://github.com/madler/zlib/blob/d6f0da2fa3bad566a43c7778259c55069416bd25/contrib/README.contrib)\r\n\r\n> All files under this contrib directory are UNSUPPORTED. There were\r\nprovided by users of zlib and were not tested by the authors of zlib.\r\nUse at your own risk. Please contact the authors of the contributions\r\nfor help about these, not the zlib authors. Thanks.\r\n\r\nBut the licence is nonetheless on a file included with zlib.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/445", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/445/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/445/events", "html_url": "https://github.com/madler/zlib/issues/445", "id": 489784791, "node_id": "MDU6SXNzdWU0ODk3ODQ3OTE=", "number": 445, "title": "zipOpen2 using APPEND_STATUS_ADDINZIP fails to open a zipfile to append to", "user": {"login": "geerit", "id": 19824485, "node_id": "MDQ6VXNlcjE5ODI0NDg1", "avatar_url": "https://avatars0.githubusercontent.com/u/19824485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geerit", "html_url": "https://github.com/geerit", "followers_url": "https://api.github.com/users/geerit/followers", "following_url": "https://api.github.com/users/geerit/following{/other_user}", "gists_url": "https://api.github.com/users/geerit/gists{/gist_id}", "starred_url": "https://api.github.com/users/geerit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geerit/subscriptions", "organizations_url": "https://api.github.com/users/geerit/orgs", "repos_url": "https://api.github.com/users/geerit/repos", "events_url": "https://api.github.com/users/geerit/events{/privacy}", "received_events_url": "https://api.github.com/users/geerit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-05T14:18:44Z", "updated_at": "2019-09-06T22:51:04Z", "closed_at": "2019-09-06T22:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/442", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/442/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/442/events", "html_url": "https://github.com/madler/zlib/issues/442", "id": 484903846, "node_id": "MDU6SXNzdWU0ODQ5MDM4NDY=", "number": 442, "title": "improve inflate decompressing speed", "user": {"login": "MrMehdi", "id": 5598389, "node_id": "MDQ6VXNlcjU1OTgzODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5598389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrMehdi", "html_url": "https://github.com/MrMehdi", "followers_url": "https://api.github.com/users/MrMehdi/followers", "following_url": "https://api.github.com/users/MrMehdi/following{/other_user}", "gists_url": "https://api.github.com/users/MrMehdi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrMehdi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrMehdi/subscriptions", "organizations_url": "https://api.github.com/users/MrMehdi/orgs", "repos_url": "https://api.github.com/users/MrMehdi/repos", "events_url": "https://api.github.com/users/MrMehdi/events{/privacy}", "received_events_url": "https://api.github.com/users/MrMehdi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-25T08:12:48Z", "updated_at": "2019-08-25T21:27:24Z", "closed_at": "2019-08-25T21:27:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi i have a question \r\ni want improve zlib inflate decompressing routine\r\nis any idea about this?\r\nhow can i use a fixed Huffman trees for efficient decoding?\r\ni see a inffixed.h ,whats this file?\r\nthx for your attention \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/424", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/424/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/424/events", "html_url": "https://github.com/madler/zlib/issues/424", "id": 447523134, "node_id": "MDU6SXNzdWU0NDc1MjMxMzQ=", "number": 424, "title": "Is this switch-case fallthrough intentional?", "user": {"login": "TorKlingberg", "id": 227449, "node_id": "MDQ6VXNlcjIyNzQ0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/227449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TorKlingberg", "html_url": "https://github.com/TorKlingberg", "followers_url": "https://api.github.com/users/TorKlingberg/followers", "following_url": "https://api.github.com/users/TorKlingberg/following{/other_user}", "gists_url": "https://api.github.com/users/TorKlingberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/TorKlingberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TorKlingberg/subscriptions", "organizations_url": "https://api.github.com/users/TorKlingberg/orgs", "repos_url": "https://api.github.com/users/TorKlingberg/repos", "events_url": "https://api.github.com/users/TorKlingberg/events{/privacy}", "received_events_url": "https://api.github.com/users/TorKlingberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-23T08:44:10Z", "updated_at": "2019-07-24T08:39:05Z", "closed_at": "2019-05-24T00:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/infback.c#L480\r\n\r\nIs that an intentional fall-through?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/419", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/419/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/419/events", "html_url": "https://github.com/madler/zlib/issues/419", "id": 436746415, "node_id": "MDU6SXNzdWU0MzY3NDY0MTU=", "number": 419, "title": "ubsan warning in zlib", "user": {"login": "htuch", "id": 10914751, "node_id": "MDQ6VXNlcjEwOTE0NzUx", "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htuch", "html_url": "https://github.com/htuch", "followers_url": "https://api.github.com/users/htuch/followers", "following_url": "https://api.github.com/users/htuch/following{/other_user}", "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}", "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htuch/subscriptions", "organizations_url": "https://api.github.com/users/htuch/orgs", "repos_url": "https://api.github.com/users/htuch/repos", "events_url": "https://api.github.com/users/htuch/events{/privacy}", "received_events_url": "https://api.github.com/users/htuch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-24T14:56:45Z", "updated_at": "2019-08-15T19:38:36Z", "closed_at": "2019-06-18T19:44:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The call to `_tr_stored_block` at https://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/deflate.c#L1025 results in a `zmemcpy` with NULL source pointer and zero length at https://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/trees.c#L873. \r\n\r\nThis in turn triggers an UBSAN warning:\r\n```\r\n/usr/local/google/home/htuch/.cache/bazel/_bazel_htuch/d994dfb436942cc737a6ac7e679f7c24/sandbox/linux-sandbox/3/execroot/envoy/external/com_github_madler_zlib/trees.c:873:42: runtime error: null pointer passed as argument 2, which is declared to never be null                                                            \r\n/usr/include/string.h:43:28: note: nonnull attribute specified here\r\n    #0 0x42e5529 in _tr_stored_block /usr/local/google/home/htuch/.cache/bazel/_bazel_htuch/d994dfb436942cc737a6ac7e679f7c24/sandbox/linux-sandbox/3/execroot/envoy/external/com_github_madler_zlib/trees.c:873:5                                                                                                              \r\n    #1 0x42c13c1 in deflate /usr/local/google/home/htuch/.cache/bazel/_bazel_htuch/d994dfb436942cc737a6ac7e679f7c24/sandbox/linux-sandbox/3/execroot/envoy/external/com_github_madler_zlib/deflate.c:1025:17                                                                                                                   \r\n    #2 0x1d2f9d4 in Envoy::Compressor::ZlibCompressorImpl::deflateNext(long) /proc/self/cwd/source/common/compressor/zlib_compressor_impl.cc:61:22\r\n```\r\n\r\nPresumably we can just skip the `zmemcpy` here, but maybe there is an earlier short circuit that can be made for zero length. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/417", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/417/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/417/events", "html_url": "https://github.com/madler/zlib/issues/417", "id": 432017965, "node_id": "MDU6SXNzdWU0MzIwMTc5NjU=", "number": 417, "title": "using gzoffset to check written file size differs with actual file size by 20 bytes", "user": {"login": "Displacer", "id": 1288799, "node_id": "MDQ6VXNlcjEyODg3OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1288799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Displacer", "html_url": "https://github.com/Displacer", "followers_url": "https://api.github.com/users/Displacer/followers", "following_url": "https://api.github.com/users/Displacer/following{/other_user}", "gists_url": "https://api.github.com/users/Displacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Displacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Displacer/subscriptions", "organizations_url": "https://api.github.com/users/Displacer/orgs", "repos_url": "https://api.github.com/users/Displacer/repos", "events_url": "https://api.github.com/users/Displacer/events{/privacy}", "received_events_url": "https://api.github.com/users/Displacer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-11T13:16:36Z", "updated_at": "2019-04-14T00:12:40Z", "closed_at": "2019-04-14T00:12:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to check actual compressed file size written this way:\r\n\r\ngzflush(outputFIle, Z_FINISH);\r\nactualFileSize = gzoffset(outputFIle);   // + 20 ?\r\ngzclose(outputFIle);\r\n\r\nUnfortunately resulting actual file size is 20 bytes more then gzoffset returns. Is it correct to add 20 bytes to gzoffset value to get actualFileSize? Is there a different method to get actual file size written?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/416", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/416/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/416/events", "html_url": "https://github.com/madler/zlib/issues/416", "id": 428829995, "node_id": "MDU6SXNzdWU0Mjg4Mjk5OTU=", "number": 416, "title": "Implicit declaration in gzread.c causing bad ARM64 assembly generation", "user": {"login": "kenavolic", "id": 48068032, "node_id": "MDQ6VXNlcjQ4MDY4MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/48068032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenavolic", "html_url": "https://github.com/kenavolic", "followers_url": "https://api.github.com/users/kenavolic/followers", "following_url": "https://api.github.com/users/kenavolic/following{/other_user}", "gists_url": "https://api.github.com/users/kenavolic/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenavolic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenavolic/subscriptions", "organizations_url": "https://api.github.com/users/kenavolic/orgs", "repos_url": "https://api.github.com/users/kenavolic/repos", "events_url": "https://api.github.com/users/kenavolic/events{/privacy}", "received_events_url": "https://api.github.com/users/kenavolic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-03T15:21:42Z", "updated_at": "2019-04-30T09:57:21Z", "closed_at": "2019-04-30T09:57:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Environment\r\n\r\n**Zlib version**: 1.2.8\r\n**Compiler**: clang 6.0\r\n**Target platform**: arm64\r\n\r\n### Description:\r\n\r\nCompilation leads to the following warning _\"error: implicit declaration of function 'gets' is invalid in C99\"_. This seems armless but clang will make a wrong assumption on _read_ signature for x64 builds:\r\n```\r\n ssize_t read(int fd, void *buf, size_t count); // correct signature\r\n ssize_t read(int fd, void *buf, int count); // implicitly deduced by the compiler\r\n```\r\nThe consequence is the generation of bad IR and thus flawed assembly by the compiler leading to undefined behavior (e.g bad `count` type -> wrong  assumptions by optimizer when `gz_avail `and `gz_load `are inlined in `gz_look` -> bad memory access). \r\n\r\n### Fixes:\r\n\r\nAdd explicit declaration by including `unistd.h` for POSIX system in `gzguts.h`\r\n\r\n### Related Issues\r\n* #62 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/415", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/415/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/415/events", "html_url": "https://github.com/madler/zlib/issues/415", "id": 428713287, "node_id": "MDU6SXNzdWU0Mjg3MTMyODc=", "number": 415, "title": "GCC warning that sounds like a bug regarding deflate.c:603", "user": {"login": "coypoop", "id": 14857674, "node_id": "MDQ6VXNlcjE0ODU3Njc0", "avatar_url": "https://avatars1.githubusercontent.com/u/14857674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coypoop", "html_url": "https://github.com/coypoop", "followers_url": "https://api.github.com/users/coypoop/followers", "following_url": "https://api.github.com/users/coypoop/following{/other_user}", "gists_url": "https://api.github.com/users/coypoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/coypoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coypoop/subscriptions", "organizations_url": "https://api.github.com/users/coypoop/orgs", "repos_url": "https://api.github.com/users/coypoop/repos", "events_url": "https://api.github.com/users/coypoop/events{/privacy}", "received_events_url": "https://api.github.com/users/coypoop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-03T11:27:48Z", "updated_at": "2019-07-24T08:45:05Z", "closed_at": "2019-04-04T18:17:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "While building with a wide variety of systems, came across this GCC 8.2.0 warning:\r\n\r\n````\r\ndeflate.c: In function 'deflateParams':\r\ndeflate.c:602:28: warning: macro expands to multiple statements [-Wmultistatement-macros]\r\n                 CLEAR_HASH(s);\r\n                            ^\r\ndeflate.c:193:5: note: in definition of macro 'CLEAR_HASH'\r\n     s->head[s->hash_size-1] = NIL; \\\r\n     ^\r\ndeflate.c:601:13: note: some parts of macro expansion are not guarded by this 'else' clause\r\n             else\r\n             ^~~~\r\n````\r\n\r\n````\r\n#define CLEAR_HASH(s) \\\r\n    s->head[s->hash_size-1] = NIL; \\\r\n    zmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));\r\n...\r\n            if (s->matches == 1)\r\n                slide_hash(s);\r\n            else\r\n                CLEAR_HASH(s);\r\n````\r\n\r\nthis expands to:\r\n````\r\n            if (s->matches == 1)\r\n                slide_hash(s);\r\n            else\r\n                s->head[s->hash_size-1] = NIL;\r\n            zmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));\r\n````\r\n\r\nThis looks far from the intention!\r\n\r\nchanging the definition to use\r\n````\r\n#define CLEAR_HASH(s) \\\r\ndo { \\\r\ns->head[s->hash_size-1] = NIL; \\\r\nzmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head)); \\\r\n} while(0)\r\n````\r\n\r\nWill do the expected thing under all circumstances, but I haven't looked at the code to know if this is correct!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/413", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/413/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/413/events", "html_url": "https://github.com/madler/zlib/issues/413", "id": 426466154, "node_id": "MDU6SXNzdWU0MjY0NjYxNTQ=", "number": 413, "title": "gvmat64.asm uses memory below rsp, violates Windows amd64 ABI", "user": {"login": "KalleOlaviNiemitalo", "id": 46201428, "node_id": "MDQ6VXNlcjQ2MjAxNDI4", "avatar_url": "https://avatars2.githubusercontent.com/u/46201428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KalleOlaviNiemitalo", "html_url": "https://github.com/KalleOlaviNiemitalo", "followers_url": "https://api.github.com/users/KalleOlaviNiemitalo/followers", "following_url": "https://api.github.com/users/KalleOlaviNiemitalo/following{/other_user}", "gists_url": "https://api.github.com/users/KalleOlaviNiemitalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/KalleOlaviNiemitalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KalleOlaviNiemitalo/subscriptions", "organizations_url": "https://api.github.com/users/KalleOlaviNiemitalo/orgs", "repos_url": "https://api.github.com/users/KalleOlaviNiemitalo/repos", "events_url": "https://api.github.com/users/KalleOlaviNiemitalo/events{/privacy}", "received_events_url": "https://api.github.com/users/KalleOlaviNiemitalo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-28T12:30:44Z", "updated_at": "2019-03-28T12:56:54Z", "closed_at": "2019-03-28T12:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "In zlib-1.2.11/contrib/masmx64/gvmat64.asm, `longest_match` starts by saving registers:\r\n\r\n```asm\r\n        mov [save_rdi],rdi\r\n```\r\n\r\n`save_rdi` is defined like this:\r\n\r\n```asm\r\n LocalVarsSize   equ 72\r\n```\r\n\r\n```asm\r\nsave_rdi        equ  rsp + 24 - LocalVarsSize\r\n```\r\n\r\nSo, it writes to `[rsp + 24 - 72]`, or `[rsp - 48]`. This memory is at the wrong side of the stack pointer and can be overwritten during handling of a continuable exception, as explained in [Why do we even need to define a red zone? Can't I just use my stack for anything? | The Old New Thing](https://devblogs.microsoft.com/oldnewthing/20190111-00/?p=100685).\r\n\r\ngvmat64.asm should be changed to adjust the stack pointer, like this comment already claims it does:\r\n\r\n```asm\r\n;;; Save registers that the compiler may be using, and adjust esp to\r\n;;; make room for our stack frame.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/397", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/397/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/397/events", "html_url": "https://github.com/madler/zlib/issues/397", "id": 395069868, "node_id": "MDU6SXNzdWUzOTUwNjk4Njg=", "number": 397, "title": "Condition always false", "user": {"login": "irwir", "id": 20182149, "node_id": "MDQ6VXNlcjIwMTgyMTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/20182149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irwir", "html_url": "https://github.com/irwir", "followers_url": "https://api.github.com/users/irwir/followers", "following_url": "https://api.github.com/users/irwir/following{/other_user}", "gists_url": "https://api.github.com/users/irwir/gists{/gist_id}", "starred_url": "https://api.github.com/users/irwir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irwir/subscriptions", "organizations_url": "https://api.github.com/users/irwir/orgs", "repos_url": "https://api.github.com/users/irwir/repos", "events_url": "https://api.github.com/users/irwir/events{/privacy}", "received_events_url": "https://api.github.com/users/irwir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-01T09:51:41Z", "updated_at": "2019-01-03T04:43:07Z", "closed_at": "2019-01-03T04:43:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/madler/zlib/blob/7c0c75e990ca5395139c148f120042048b0ce091/inflate.c#L1436\r\n\r\nPlease check: the conditional block at the line 1414 ensures that `state->mode` has `SYNC` value, and that will remain unchanged at the line 1436.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/387", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/387/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/387/events", "html_url": "https://github.com/madler/zlib/issues/387", "id": 368894447, "node_id": "MDU6SXNzdWUzNjg4OTQ0NDc=", "number": 387, "title": "Implicit Fall-through?", "user": {"login": "clin1234", "id": 39310467, "node_id": "MDQ6VXNlcjM5MzEwNDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/39310467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clin1234", "html_url": "https://github.com/clin1234", "followers_url": "https://api.github.com/users/clin1234/followers", "following_url": "https://api.github.com/users/clin1234/following{/other_user}", "gists_url": "https://api.github.com/users/clin1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/clin1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clin1234/subscriptions", "organizations_url": "https://api.github.com/users/clin1234/orgs", "repos_url": "https://api.github.com/users/clin1234/repos", "events_url": "https://api.github.com/users/clin1234/events{/privacy}", "received_events_url": "https://api.github.com/users/clin1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-10T23:30:36Z", "updated_at": "2018-10-10T23:57:57Z", "closed_at": "2018-10-10T23:57:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "While compiling the develop branch of zlib with the following CFLAGS to gcc: -Wall -Wextra -Wpedantic -Wunused, I noticed various warnings about implicit fall-through, as shown in stdout: \r\n\r\n```\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o example.o test/example.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o adler32.o adler32.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o crc32.o crc32.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o deflate.o deflate.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o infback.o infback.c\r\ninfback.c: In function \u2018inflateBack\u2019:\r\ninfback.c:479:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LEN;\r\n             ~~~~~~~~~~~~^~~~~\r\ninfback.c:481:9: note: here\r\n         case LEN:\r\n         ^~~~\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inffast.o inffast.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inflate.o inflate.c\r\ninflate.c: In function \u2018inflate\u2019:\r\ninflate.c:742:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = EXLEN;\r\n             ~~~~~~~~~~~~^~~~~~~\r\ninflate.c:743:9: note: here\r\n         case EXLEN:\r\n         ^~~~\r\ninflate.c:755:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = EXTRA;\r\n             ~~~~~~~~~~~~^~~~~~~\r\ninflate.c:756:9: note: here\r\n         case EXTRA:\r\n         ^~~~\r\ninflate.c:777:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = NAME;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:778:9: note: here\r\n         case NAME:\r\n         ^~~~\r\ninflate.c:798:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = COMMENT;\r\n             ~~~~~~~~~~~~^~~~~~~~~\r\ninflate.c:799:9: note: here\r\n         case COMMENT:\r\n         ^~~~\r\ninflate.c:818:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = HCRC;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:819:9: note: here\r\n         case HCRC:\r\n         ^~~~\r\ninflate.c:841:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DICT;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:842:9: note: here\r\n         case DICT:\r\n         ^~~~\r\ninflate.c:848:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = TYPE;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:849:9: note: here\r\n         case TYPE:\r\n         ^~~~\r\ninflate.c:850:34: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             if (flush == Z_BLOCK || flush == Z_TREES) goto inf_leave;\r\ninflate.c:851:9: note: here\r\n         case TYPEDO:\r\n         ^~~~\r\ninflate.c:900:16: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             if (flush == Z_TREES) goto inf_leave;\r\n                ^\r\ninflate.c:901:9: note: here\r\n         case COPY_:\r\n         ^~~~\r\ninflate.c:902:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = COPY;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:903:9: note: here\r\n         case COPY:\r\n         ^~~~\r\ninflate.c:1041:16: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             if (flush == Z_TREES) goto inf_leave;\r\n                ^\r\ninflate.c:1042:9: note: here\r\n         case LEN_:\r\n         ^~~~\r\ninflate.c:1043:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LEN;\r\n             ~~~~~~~~~~~~^~~~~\r\ninflate.c:1044:9: note: here\r\n         case LEN:\r\n         ^~~~\r\ninflate.c:1092:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LENEXT;\r\n             ~~~~~~~~~~~~^~~~~~~~\r\ninflate.c:1093:9: note: here\r\n         case LENEXT:\r\n         ^~~~\r\ninflate.c:1102:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DIST;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:1103:9: note: here\r\n         case DIST:\r\n         ^~~~\r\ninflate.c:1129:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DISTEXT;\r\n             ~~~~~~~~~~~~^~~~~~~~~\r\ninflate.c:1130:9: note: here\r\n         case DISTEXT:\r\n         ^~~~\r\ninflate.c:1145:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = MATCH;\r\n             ~~~~~~~~~~~~^~~~~~~\r\ninflate.c:1146:9: note: here\r\n         case MATCH:\r\n         ^~~~\r\ninflate.c:1220:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LENGTH;\r\n             ~~~~~~~~~~~~^~~~~~~~\r\ninflate.c:1221:9: note: here\r\n         case LENGTH:\r\n         ^~~~\r\ninflate.c:1233:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DONE;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:1234:9: note: here\r\n         case DONE:\r\n         ^~~~\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o inftrees.o inftrees.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o trees.o trees.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o zutil.o zutil.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o compress.o compress.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o uncompr.o uncompr.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzclose.o gzclose.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzlib.o gzlib.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzread.o gzread.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -c -o gzwrite.o gzwrite.c\r\nar rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o \r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example example.o -L. libz.a\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -c -o minigzip.o test/minigzip.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip minigzip.o -L. libz.a\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/adler32.o adler32.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/crc32.o crc32.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/deflate.o deflate.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/infback.o infback.c\r\ninfback.c: In function \u2018inflateBack\u2019:\r\ninfback.c:479:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LEN;\r\n             ~~~~~~~~~~~~^~~~~\r\ninfback.c:481:9: note: here\r\n         case LEN:\r\n         ^~~~\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inffast.o inffast.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inflate.o inflate.c\r\ninflate.c: In function \u2018inflate\u2019:\r\ninflate.c:742:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = EXLEN;\r\n             ~~~~~~~~~~~~^~~~~~~\r\ninflate.c:743:9: note: here\r\n         case EXLEN:\r\n         ^~~~\r\ninflate.c:755:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = EXTRA;\r\n             ~~~~~~~~~~~~^~~~~~~\r\ninflate.c:756:9: note: here\r\n         case EXTRA:\r\n         ^~~~\r\ninflate.c:777:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = NAME;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:778:9: note: here\r\n         case NAME:\r\n         ^~~~\r\ninflate.c:798:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = COMMENT;\r\n             ~~~~~~~~~~~~^~~~~~~~~\r\ninflate.c:799:9: note: here\r\n         case COMMENT:\r\n         ^~~~\r\ninflate.c:818:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = HCRC;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:819:9: note: here\r\n         case HCRC:\r\n         ^~~~\r\ninflate.c:841:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DICT;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:842:9: note: here\r\n         case DICT:\r\n         ^~~~\r\ninflate.c:848:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = TYPE;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:849:9: note: here\r\n         case TYPE:\r\n         ^~~~\r\ninflate.c:850:34: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             if (flush == Z_BLOCK || flush == Z_TREES) goto inf_leave;\r\ninflate.c:851:9: note: here\r\n         case TYPEDO:\r\n         ^~~~\r\ninflate.c:900:16: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             if (flush == Z_TREES) goto inf_leave;\r\n                ^\r\ninflate.c:901:9: note: here\r\n         case COPY_:\r\n         ^~~~\r\ninflate.c:902:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = COPY;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:903:9: note: here\r\n         case COPY:\r\n         ^~~~\r\ninflate.c:1041:16: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             if (flush == Z_TREES) goto inf_leave;\r\n                ^\r\ninflate.c:1042:9: note: here\r\n         case LEN_:\r\n         ^~~~\r\ninflate.c:1043:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LEN;\r\n             ~~~~~~~~~~~~^~~~~\r\ninflate.c:1044:9: note: here\r\n         case LEN:\r\n         ^~~~\r\ninflate.c:1092:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LENEXT;\r\n             ~~~~~~~~~~~~^~~~~~~~\r\ninflate.c:1093:9: note: here\r\n         case LENEXT:\r\n         ^~~~\r\ninflate.c:1102:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DIST;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:1103:9: note: here\r\n         case DIST:\r\n         ^~~~\r\ninflate.c:1129:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DISTEXT;\r\n             ~~~~~~~~~~~~^~~~~~~~~\r\ninflate.c:1130:9: note: here\r\n         case DISTEXT:\r\n         ^~~~\r\ninflate.c:1145:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = MATCH;\r\n             ~~~~~~~~~~~~^~~~~~~\r\ninflate.c:1146:9: note: here\r\n         case MATCH:\r\n         ^~~~\r\ninflate.c:1220:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = LENGTH;\r\n             ~~~~~~~~~~~~^~~~~~~~\r\ninflate.c:1221:9: note: here\r\n         case LENGTH:\r\n         ^~~~\r\ninflate.c:1233:25: warning: this statement may fall through [-Wimplicit-fallthrough=]\r\n             state->mode = DONE;\r\n             ~~~~~~~~~~~~^~~~~~\r\ninflate.c:1234:9: note: here\r\n         case DONE:\r\n         ^~~~\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/inftrees.o inftrees.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/trees.o trees.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/zutil.o zutil.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/compress.o compress.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/uncompr.o uncompr.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzclose.o gzclose.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzlib.o gzlib.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzread.o gzread.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN  -DPIC -c -o objs/gzwrite.o gzwrite.c\r\ngcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -Wall -Wextra -Wpedantic -Wunused -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o libz.so.1.2.11.1-motley adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  -lc \r\nrm -f libz.so libz.so.1\r\nln -s libz.so.1.2.11.1-motley libz.so\r\nln -s libz.so.1.2.11.1-motley libz.so.1\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o examplesh example.o -L. libz.so.1.2.11.1-motley\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzipsh minigzip.o -L. libz.so.1.2.11.1-motley\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o example64.o test/example.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o example64 example64.o -L. libz.a\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -I. -D_FILE_OFFSET_BITS=64 -c -o minigzip64.o test/minigzip.c\r\ngcc -Wall -Wextra -Wpedantic -Wunused -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -o minigzip64 minigzip64.o -L. libz.a\r\n```\r\nIs the fall-through intentional?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/382", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/382/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/382/events", "html_url": "https://github.com/madler/zlib/issues/382", "id": 365491307, "node_id": "MDU6SXNzdWUzNjU0OTEzMDc=", "number": 382, "title": "Public key", "user": {"login": "loskiq", "id": 22175047, "node_id": "MDQ6VXNlcjIyMTc1MDQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/22175047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loskiq", "html_url": "https://github.com/loskiq", "followers_url": "https://api.github.com/users/loskiq/followers", "following_url": "https://api.github.com/users/loskiq/following{/other_user}", "gists_url": "https://api.github.com/users/loskiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/loskiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loskiq/subscriptions", "organizations_url": "https://api.github.com/users/loskiq/orgs", "repos_url": "https://api.github.com/users/loskiq/repos", "events_url": "https://api.github.com/users/loskiq/events{/privacy}", "received_events_url": "https://api.github.com/users/loskiq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-01T14:35:00Z", "updated_at": "2018-10-01T15:59:12Z", "closed_at": "2018-10-01T15:59:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where is public key for verify gpg signature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/378", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/378/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/378/events", "html_url": "https://github.com/madler/zlib/issues/378", "id": 360976643, "node_id": "MDU6SXNzdWUzNjA5NzY2NDM=", "number": 378, "title": "zran.c doesn't support a gzip file which contains multi-concatenated gzip streams", "user": {"login": "sweatmonkey", "id": 43351603, "node_id": "MDQ6VXNlcjQzMzUxNjAz", "avatar_url": "https://avatars2.githubusercontent.com/u/43351603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sweatmonkey", "html_url": "https://github.com/sweatmonkey", "followers_url": "https://api.github.com/users/sweatmonkey/followers", "following_url": "https://api.github.com/users/sweatmonkey/following{/other_user}", "gists_url": "https://api.github.com/users/sweatmonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sweatmonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sweatmonkey/subscriptions", "organizations_url": "https://api.github.com/users/sweatmonkey/orgs", "repos_url": "https://api.github.com/users/sweatmonkey/repos", "events_url": "https://api.github.com/users/sweatmonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/sweatmonkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-17T17:53:26Z", "updated_at": "2018-10-21T03:57:31Z", "closed_at": "2018-10-21T03:57:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using build_index() & extract() in zran.c, which is fantastic.\r\nHowever the two functions don't support multi-concatenated gzip streams.\r\nWhat can I do on it? Would some experts enhance it or give some advice?\r\n\r\nThanks you very much in advance!!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/373", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/373/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/373/events", "html_url": "https://github.com/madler/zlib/issues/373", "id": 351789090, "node_id": "MDU6SXNzdWUzNTE3ODkwOTA=", "number": 373, "title": "zlib not found by anaconda R", "user": {"login": "clouds-drift", "id": 7713642, "node_id": "MDQ6VXNlcjc3MTM2NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7713642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clouds-drift", "html_url": "https://github.com/clouds-drift", "followers_url": "https://api.github.com/users/clouds-drift/followers", "following_url": "https://api.github.com/users/clouds-drift/following{/other_user}", "gists_url": "https://api.github.com/users/clouds-drift/gists{/gist_id}", "starred_url": "https://api.github.com/users/clouds-drift/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clouds-drift/subscriptions", "organizations_url": "https://api.github.com/users/clouds-drift/orgs", "repos_url": "https://api.github.com/users/clouds-drift/repos", "events_url": "https://api.github.com/users/clouds-drift/events{/privacy}", "received_events_url": "https://api.github.com/users/clouds-drift/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-18T04:22:25Z", "updated_at": "2018-08-19T23:10:59Z", "closed_at": "2018-08-19T23:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When install the R package \"shortread\", zlib was not found.\r\nWhile \"zlib\" has been installed by \"conda install -c anaconda zlib \".\r\n\r\nError log when install \"shortread\" by bioconductor:\r\nconfigure:2700: checking for gzeof in -lz\r\nconfigure:2735: gcc -o conftest -g -O2   conftest.c -lz   >&5\r\n/export/data2/anaconda2/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.2.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: cannot find -lz\r\ncollect2: error: ld returned 1 exit status\r\nconfigure:2742: $? = 1\r\nconfigure: failed program was:\r\n| /* confdefs.h.  */\r\n| #define PACKAGE_NAME \"\"\r\n| #define PACKAGE_TARNAME \"\"\r\n| #define PACKAGE_VERSION \"\"\r\n| #define PACKAGE_STRING \"\"\r\n| #define PACKAGE_BUGREPORT \"\"\r\n| /* end confdefs.h.  */\r\n| \r\n| /* Override any GCC internal prototype to avoid an error.\r\n|    Use char because int might match the return type of a GCC\r\n|    builtin and then its argument prototype would still apply.  */\r\n| #ifdef __cplusplus\r\n| extern \"C\"\r\n| #endif\r\n| char gzeof ();\r\n| int\r\n| main ()\r\n| {\r\n| return gzeof ();\r\n|   ;\r\n|   return 0;\r\n| }\r\nconfigure:2763: result: no\r\nconfigure:2773: error: zlib not found", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/371", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/371/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/371/events", "html_url": "https://github.com/madler/zlib/issues/371", "id": 345329666, "node_id": "MDU6SXNzdWUzNDUzMjk2NjY=", "number": 371, "title": "[question] keeping the z_stream live for whole application lifetime", "user": {"login": "CristoferMartins", "id": 1008865, "node_id": "MDQ6VXNlcjEwMDg4NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CristoferMartins", "html_url": "https://github.com/CristoferMartins", "followers_url": "https://api.github.com/users/CristoferMartins/followers", "following_url": "https://api.github.com/users/CristoferMartins/following{/other_user}", "gists_url": "https://api.github.com/users/CristoferMartins/gists{/gist_id}", "starred_url": "https://api.github.com/users/CristoferMartins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CristoferMartins/subscriptions", "organizations_url": "https://api.github.com/users/CristoferMartins/orgs", "repos_url": "https://api.github.com/users/CristoferMartins/repos", "events_url": "https://api.github.com/users/CristoferMartins/events{/privacy}", "received_events_url": "https://api.github.com/users/CristoferMartins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-27T18:48:38Z", "updated_at": "2018-07-27T19:58:29Z", "closed_at": "2018-07-27T19:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got a application that runs for 24 hours long. I'm using one z_stream which is initialized at the application startup(call to deflateInit2) and it will call deflateEnd at the application shutdown. After the call to deflate(&stream, Z_FINISH) i'm calling deflateReset. My question is if there will be any problem with this setup like a memory leak or maybe a chance of crash since we gonna be using the same z_stream a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/368", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/368/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/368/events", "html_url": "https://github.com/madler/zlib/issues/368", "id": 338553022, "node_id": "MDU6SXNzdWUzMzg1NTMwMjI=", "number": 368, "title": "Memcpy ranges overlap", "user": {"login": "cleric", "id": 40859724, "node_id": "MDQ6VXNlcjQwODU5NzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/40859724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cleric", "html_url": "https://github.com/cleric", "followers_url": "https://api.github.com/users/cleric/followers", "following_url": "https://api.github.com/users/cleric/following{/other_user}", "gists_url": "https://api.github.com/users/cleric/gists{/gist_id}", "starred_url": "https://api.github.com/users/cleric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cleric/subscriptions", "organizations_url": "https://api.github.com/users/cleric/orgs", "repos_url": "https://api.github.com/users/cleric/repos", "events_url": "https://api.github.com/users/cleric/events{/privacy}", "received_events_url": "https://api.github.com/users/cleric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-05T12:26:30Z", "updated_at": "2018-07-05T12:32:56Z", "closed_at": "2018-07-05T12:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey\r\n\r\nWhen compiling with memory sanitizers I get an error. You are calling memcpy on overlapping ranges.\r\nFollowing patch fixes the error:\r\n\r\n> diff --git a/unzip.c b/unzip.c\r\n> index e6d3092..c43119c 100644\r\n> --- a/unzip.c\r\n> +++ b/unzip.c\r\n> @@ -1325,7 +1325,7 @@ extern int ZEXPORT unzReadCurrentFile(unzFile file, voidp buf, uint32_t len)\r\n>                      s->pfile_in_zip_read->stream.next_in);\r\n>              bytes_to_read -= bytes_not_read;\r\n>              if (bytes_not_read > 0)\r\n> -                memcpy(s->pfile_in_zip_read->read_buffer, s->pfile_in_zip_read->stream.next_in, bytes_not_read);\r\n> +                memmove(s->pfile_in_zip_read->read_buffer, s->pfile_in_zip_read->stream.next_in, bytes_not_read);\r\n>              if (s->pfile_in_zip_read->rest_read_compressed < bytes_to_read)\r\n>                  bytes_to_read = (uint16_t)s->pfile_in_zip_read->rest_read_compressed;\r\n\r\n \r\nCould you please fit it?\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/361", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/361/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/361/events", "html_url": "https://github.com/madler/zlib/issues/361", "id": 326793949, "node_id": "MDU6SXNzdWUzMjY3OTM5NDk=", "number": 361, "title": "Failed to find a pointer-size integer type.", "user": {"login": "adyshimony", "id": 6388409, "node_id": "MDQ6VXNlcjYzODg0MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6388409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adyshimony", "html_url": "https://github.com/adyshimony", "followers_url": "https://api.github.com/users/adyshimony/followers", "following_url": "https://api.github.com/users/adyshimony/following{/other_user}", "gists_url": "https://api.github.com/users/adyshimony/gists{/gist_id}", "starred_url": "https://api.github.com/users/adyshimony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adyshimony/subscriptions", "organizations_url": "https://api.github.com/users/adyshimony/orgs", "repos_url": "https://api.github.com/users/adyshimony/repos", "events_url": "https://api.github.com/users/adyshimony/events{/privacy}", "received_events_url": "https://api.github.com/users/adyshimony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-05-27T07:23:57Z", "updated_at": "2018-11-18T07:31:37Z", "closed_at": "2018-11-18T07:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting this error:\r\n\r\nUnpacking download/zlib-1.2.11.tar.gz to build/zlib/ios-x86_64...\r\nUsing ar\r\nBuilding static library libz.a version 1.2.11 with clang.\r\nChecking for size_t... No.\r\nChecking for long long... Yes.\r\nFailed to find a pointer-size integer type.\r\n** ./configure aborting.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/356", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/356/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/356/events", "html_url": "https://github.com/madler/zlib/issues/356", "id": 320606941, "node_id": "MDU6SXNzdWUzMjA2MDY5NDE=", "number": 356, "title": "Calculation of NMAX in Adler32 checksum", "user": {"login": "hjred", "id": 11563941, "node_id": "MDQ6VXNlcjExNTYzOTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/11563941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjred", "html_url": "https://github.com/hjred", "followers_url": "https://api.github.com/users/hjred/followers", "following_url": "https://api.github.com/users/hjred/following{/other_user}", "gists_url": "https://api.github.com/users/hjred/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjred/subscriptions", "organizations_url": "https://api.github.com/users/hjred/orgs", "repos_url": "https://api.github.com/users/hjred/repos", "events_url": "https://api.github.com/users/hjred/events{/privacy}", "received_events_url": "https://api.github.com/users/hjred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-06T16:30:45Z", "updated_at": "2018-05-06T17:31:29Z", "closed_at": "2018-05-06T17:27:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\ni have a question regarding the value of nmax in the Adler32 checksum. Why is it 5552?\r\nIf i use the basic formulas found on wikipedia for example:\r\n\r\n     A = 1 + D1 + D2 + ... + Dn (mod 65521)\r\n     B = A1 + A2 + ... + An = (1 + D1) + (1 + D1 + D2) + ... + (1 + D1 + D2 + ... + Dn) (mod 65521)\r\n\r\nif i set every value to 255 (for D) and let me calculate max n so B is less than the maximum of uint32 say by wolframalpha\r\nhttp://www.wolframalpha.com/input/?i=(1%2B1*255)%2B(1%2B2*255)%2B(1%2B3*255)%2B...%2B(1%2Bn*255)%3C%3D4294967295\r\n\r\nthe solution is (sqrt(8761733347849) - 257) / 510 for nmax, which is 5803 (rounded).\r\n\r\nI got the same answer (5803) using a little program with 255 as input all the time and checking for the first overflow.\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/351", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/351/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/351/events", "html_url": "https://github.com/madler/zlib/issues/351", "id": 316439002, "node_id": "MDU6SXNzdWUzMTY0MzkwMDI=", "number": 351, "title": "Static constants ", "user": {"login": "irwir", "id": 20182149, "node_id": "MDQ6VXNlcjIwMTgyMTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/20182149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irwir", "html_url": "https://github.com/irwir", "followers_url": "https://api.github.com/users/irwir/followers", "following_url": "https://api.github.com/users/irwir/following{/other_user}", "gists_url": "https://api.github.com/users/irwir/gists{/gist_id}", "starred_url": "https://api.github.com/users/irwir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irwir/subscriptions", "organizations_url": "https://api.github.com/users/irwir/orgs", "repos_url": "https://api.github.com/users/irwir/repos", "events_url": "https://api.github.com/users/irwir/events{/privacy}", "received_events_url": "https://api.github.com/users/irwir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-20T23:27:18Z", "updated_at": "2018-06-10T10:54:04Z", "closed_at": "2018-06-10T10:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/compress.c#L31\r\nhttps://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/uncompr.c#L35\r\nIn these two cases constants should have been `static`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/340", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/340/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/340/events", "html_url": "https://github.com/madler/zlib/issues/340", "id": 296134610, "node_id": "MDU6SXNzdWUyOTYxMzQ2MTA=", "number": 340, "title": "Uncompress & Unzip aborts", "user": {"login": "topwizprogramming", "id": 30784115, "node_id": "MDQ6VXNlcjMwNzg0MTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/30784115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topwizprogramming", "html_url": "https://github.com/topwizprogramming", "followers_url": "https://api.github.com/users/topwizprogramming/followers", "following_url": "https://api.github.com/users/topwizprogramming/following{/other_user}", "gists_url": "https://api.github.com/users/topwizprogramming/gists{/gist_id}", "starred_url": "https://api.github.com/users/topwizprogramming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topwizprogramming/subscriptions", "organizations_url": "https://api.github.com/users/topwizprogramming/orgs", "repos_url": "https://api.github.com/users/topwizprogramming/repos", "events_url": "https://api.github.com/users/topwizprogramming/events{/privacy}", "received_events_url": "https://api.github.com/users/topwizprogramming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-10T21:16:07Z", "updated_at": "2018-02-11T00:54:00Z", "closed_at": "2018-02-11T00:54:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I downloaded the most recent version 1.2.11 from www.zlib.net and compiled it with Visual Studio 2012 on Windows 10.\r\nCompress & creating zip files works great. Uncompress and unzip abort. I tested by running minunz against a zip file created by minizip containing one file. I also tested using a zip file created with Windows built in zip file creation and had the same result.\r\nI added calls to OutputDebugStringA and found that it is somewhere in the inflate function.\r\nHere is a text grab from my command window:\r\n\r\n>miniunz test.zip\r\nMiniUnz 1.01b, demo of zLib + Unz package written by Gilles Vollant\r\nmore info at http://www.winimage.com/zLibDll/unzip.html\r\ntest.zip opened\r\n extracting: zlib.ico\r\n>\r\n\r\nThe file zlib.ico is created but contains zero bytes.\r\n\r\nThe pre-compiled zlibwapi.dll is version 1.2.3 from 2005 so I am trying to get the latest version. I have been using zlibwapi.dll from PowerBuilder apps and seem to have a problem with really large data. One of the most recent versions has a fix for large data so I am hoping it will fix the problem in PowerBuilder.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/332", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/332/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/332/events", "html_url": "https://github.com/madler/zlib/issues/332", "id": 287615537, "node_id": "MDU6SXNzdWUyODc2MTU1Mzc=", "number": 332, "title": "potential bug in deflateParams", "user": {"login": "angeleno", "id": 12095148, "node_id": "MDQ6VXNlcjEyMDk1MTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/12095148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angeleno", "html_url": "https://github.com/angeleno", "followers_url": "https://api.github.com/users/angeleno/followers", "following_url": "https://api.github.com/users/angeleno/following{/other_user}", "gists_url": "https://api.github.com/users/angeleno/gists{/gist_id}", "starred_url": "https://api.github.com/users/angeleno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angeleno/subscriptions", "organizations_url": "https://api.github.com/users/angeleno/orgs", "repos_url": "https://api.github.com/users/angeleno/repos", "events_url": "https://api.github.com/users/angeleno/events{/privacy}", "received_events_url": "https://api.github.com/users/angeleno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-10T23:38:52Z", "updated_at": "2018-01-11T00:06:52Z", "closed_at": "2018-01-11T00:06:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Mark\r\n\r\nPerhaps there is a potential bug here:\r\n\r\nhttps://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/deflate.c#L602-L603\r\n\r\ncommitted thru:\r\nhttps://github.com/madler/zlib/commit/9dc5a8585f429109ef1948ab71b6b71bfa7181e2\r\n\r\n`CLEAR_HASH` is a multiple statement macro and unless you put curly-braces around it it is wrong.\r\nBTW: it was caught when running clang-tidy.\r\n\r\nIf you agree, I will do a pull-request.\r\n\r\nBest,\r\nSarang", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/314", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/314/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/314/events", "html_url": "https://github.com/madler/zlib/issues/314", "id": 275761491, "node_id": "MDU6SXNzdWUyNzU3NjE0OTE=", "number": 314, "title": "HP-UX 11 \"CFLAGS = -z +DD64 -mt\" failed to build shared zlib-1.2.11 with gcc", "user": {"login": "sunnyap", "id": 12934625, "node_id": "MDQ6VXNlcjEyOTM0NjI1", "avatar_url": "https://avatars2.githubusercontent.com/u/12934625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunnyap", "html_url": "https://github.com/sunnyap", "followers_url": "https://api.github.com/users/sunnyap/followers", "following_url": "https://api.github.com/users/sunnyap/following{/other_user}", "gists_url": "https://api.github.com/users/sunnyap/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunnyap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunnyap/subscriptions", "organizations_url": "https://api.github.com/users/sunnyap/orgs", "repos_url": "https://api.github.com/users/sunnyap/repos", "events_url": "https://api.github.com/users/sunnyap/events{/privacy}", "received_events_url": "https://api.github.com/users/sunnyap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-21T15:49:50Z", "updated_at": "2017-12-01T04:35:44Z", "closed_at": "2017-12-01T04:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "./configure -shared is picking libz.a since ld operation failed.\r\n```\r\nCC=cc ./configure -shared\r\nbash-4.3$ CC=cc ./configure -shared\r\nChecking for shared library support...\r\nNo shared library support; try without defining CC and CFLAGS\r\nBuilding static library libz.a version 1.2.11 with cc.\r\nChecking for size_t... Yes.\r\nChecking for off64_t... Yes.\r\nChecking for fseeko... Yes.\r\nChecking for strerror... Yes.\r\nChecking for unistd.h... Yes.\r\nChecking for stdarg.h... Yes.\r\nChecking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().\r\nChecking for vsnprintf() in stdio.h... Yes.\r\nChecking for return value of vsnprintf()... Yes.\r\n```\r\n\r\n[configure.log](https://github.com/madler/zlib/files/1491979/configure.log) shows\r\n```\r\nld: Unrecognized argument: +z\r\nFatal error.\r\n(exit code 1)\r\nNo shared library support; try without defining CC and CFLAGS\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/305", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/305/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/305/events", "html_url": "https://github.com/madler/zlib/issues/305", "id": 265076399, "node_id": "MDU6SXNzdWUyNjUwNzYzOTk=", "number": 305, "title": "Processing ZIP files in Java broken with latest zlib", "user": {"login": "sithmein", "id": 4947218, "node_id": "MDQ6VXNlcjQ5NDcyMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4947218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sithmein", "html_url": "https://github.com/sithmein", "followers_url": "https://api.github.com/users/sithmein/followers", "following_url": "https://api.github.com/users/sithmein/following{/other_user}", "gists_url": "https://api.github.com/users/sithmein/gists{/gist_id}", "starred_url": "https://api.github.com/users/sithmein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sithmein/subscriptions", "organizations_url": "https://api.github.com/users/sithmein/orgs", "repos_url": "https://api.github.com/users/sithmein/repos", "events_url": "https://api.github.com/users/sithmein/events{/privacy}", "received_events_url": "https://api.github.com/users/sithmein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-10-12T20:32:50Z", "updated_at": "2019-06-16T20:59:36Z", "closed_at": "2017-10-14T20:59:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "After the upgrade to macOS High Sierra several Java applications that compress data stopped working correctly. Example are [KNIME Analytics Platform](https://www.knime.com/forum/knime-general/high-sierra-and-node-out-zip-files) or [Tomcat](https://stackoverflow.com/questions/46539453/tomcat-with-compression-enabled-causes-error-on-os-x-high-sierra). I was able to track down the problem to a potential bug in the zlib version shipped with High Sierra (1.12.11). Version 1.2.5 which is used in Sierra works find. The bug is caused by changing the compression levels for different entries.\r\n[CreateZip.java.txt](https://github.com/madler/zlib/files/1380603/CreateZip.java.txt)\r\n (rename to .java) demonstrates the problem. Compile and start with _/tmp 100_ as arguments.\r\nIt works fine on any operating system except macOS High Sierra. If you comment the three lines that are marked with \"Triggers the bug\" the program also works as expected.\r\nThis is a blocker for any Java application that changes compression levels on macOS therefore please consider this a critical bug.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/296", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/296/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/296/events", "html_url": "https://github.com/madler/zlib/issues/296", "id": 255031584, "node_id": "MDU6SXNzdWUyNTUwMzE1ODQ=", "number": 296, "title": "memcpy-related UB, round two!", "user": {"login": "Sebbyastian", "id": 5820558, "node_id": "MDQ6VXNlcjU4MjA1NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5820558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sebbyastian", "html_url": "https://github.com/Sebbyastian", "followers_url": "https://api.github.com/users/Sebbyastian/followers", "following_url": "https://api.github.com/users/Sebbyastian/following{/other_user}", "gists_url": "https://api.github.com/users/Sebbyastian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sebbyastian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sebbyastian/subscriptions", "organizations_url": "https://api.github.com/users/Sebbyastian/orgs", "repos_url": "https://api.github.com/users/Sebbyastian/repos", "events_url": "https://api.github.com/users/Sebbyastian/events{/privacy}", "received_events_url": "https://api.github.com/users/Sebbyastian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T12:44:46Z", "updated_at": "2017-10-13T02:36:39Z", "closed_at": "2017-10-13T02:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Care needs to be taken to ensure [`memcpy` isn't used to copy overlapping objects](https://stackoverflow.com/questions/4415910/memcpy-vs-memmove/), as objectively `memcpy` is implemented in one of two ways:\r\n\r\n- A loop from lowest to highest address, copying bytes\r\n- A loop from highest to lowest address, copying bytes\r\n- (any other order is possible, but realistically those are the two you're likely to see)\r\n\r\nDepending upon implementation, erratic results may occur. See the linked StackOverflow question for more details.\r\n\r\n[This](https://github.com/madler/zlib/blob/50893291621658f355bc5b4d450a8d06a563053d/examples/gzappend.c#L140) most certainly needs to be fixed.\r\n\r\n[This](https://github.com/madler/zlib/blob/cacf7f1d4e3d44d871b605da3b647f07d718623f/gzwrite.c#L444) might also need to be fixed.\r\n\r\nI suggest auditing all uses of `memcpy` for issues like this and #290 since it appears to be a hotspot...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/294", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/294/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/294/events", "html_url": "https://github.com/madler/zlib/issues/294", "id": 254015387, "node_id": "MDU6SXNzdWUyNTQwMTUzODc=", "number": 294, "title": "zlib dislike .NET garbage collector ", "user": {"login": "dimzon", "id": 908946, "node_id": "MDQ6VXNlcjkwODk0Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/908946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimzon", "html_url": "https://github.com/dimzon", "followers_url": "https://api.github.com/users/dimzon/followers", "following_url": "https://api.github.com/users/dimzon/following{/other_user}", "gists_url": "https://api.github.com/users/dimzon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimzon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimzon/subscriptions", "organizations_url": "https://api.github.com/users/dimzon/orgs", "repos_url": "https://api.github.com/users/dimzon/repos", "events_url": "https://api.github.com/users/dimzon/events{/privacy}", "received_events_url": "https://api.github.com/users/dimzon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T14:16:33Z", "updated_at": "2017-10-13T02:48:39Z", "closed_at": "2017-10-13T02:48:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "(deflate.c @ 361) checks ```s->strm != strm```\r\nthe problem is if ```strm``` is allocated into .NET managed heap. .NET garbage collector can run between zlib invokations. This mean real ```strm``` address can be changed during GC memory-defragmentation phase. So next call to Zlib will produce Z_STREAM_ERROR. This behavior doen't described into ```zlib.h```.\r\nTo workaround this check I need to use ```GCHandle.Alloc``` to lock ```strm``` into same memory address during whole compression cycle. This prevents the garbage collector from moving the object and hence undermines the efficiency of the garbage collector.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/293", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/293/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/293/events", "html_url": "https://github.com/madler/zlib/issues/293", "id": 253089104, "node_id": "MDU6SXNzdWUyNTMwODkxMDQ=", "number": 293, "title": "zlib asm test freeze on x86 msvc2015", "user": {"login": "silverqx", "id": 86900, "node_id": "MDQ6VXNlcjg2OTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/86900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silverqx", "html_url": "https://github.com/silverqx", "followers_url": "https://api.github.com/users/silverqx/followers", "following_url": "https://api.github.com/users/silverqx/following{/other_user}", "gists_url": "https://api.github.com/users/silverqx/gists{/gist_id}", "starred_url": "https://api.github.com/users/silverqx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silverqx/subscriptions", "organizations_url": "https://api.github.com/users/silverqx/orgs", "repos_url": "https://api.github.com/users/silverqx/repos", "events_url": "https://api.github.com/users/silverqx/events{/privacy}", "received_events_url": "https://api.github.com/users/silverqx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-26T12:31:32Z", "updated_at": "2017-10-13T06:27:09Z", "closed_at": "2017-10-13T04:21:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't compile `zlib asm` version anymore. I did some tests and it started from `v1.2.9` version, reproducible on master branch too.\r\n\r\nIt happens only for x86 version and only when asm version is compiled. 64bit version works fine and x86 standard version too.\r\n\r\nI Compiled as is described in `win32/Makefile.msc`.\r\n`nmake -f win32/Makefile.msc LOC=\"-DASMV -DASMINF\" OBJA=\"inffas32.obj match686.obj\"`\r\n\r\nAnd test runned with:\r\n`nmake -f win32/Makefile.msc LOC=\"-DASMV -DASMINF\" OBJA=\"inffas32.obj match686.obj\" test`\r\n\r\nI didn't tried with other msvc versions, only with msvc2015.\r\n\r\n`v1.2.8` version works fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/290", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/290/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/290/events", "html_url": "https://github.com/madler/zlib/issues/290", "id": 250267314, "node_id": "MDU6SXNzdWUyNTAyNjczMTQ=", "number": 290, "title": "Undefined behaviour in trees.c:1203", "user": {"login": "fgsch", "id": 241785, "node_id": "MDQ6VXNlcjI0MTc4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/241785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgsch", "html_url": "https://github.com/fgsch", "followers_url": "https://api.github.com/users/fgsch/followers", "following_url": "https://api.github.com/users/fgsch/following{/other_user}", "gists_url": "https://api.github.com/users/fgsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgsch/subscriptions", "organizations_url": "https://api.github.com/users/fgsch/orgs", "repos_url": "https://api.github.com/users/fgsch/repos", "events_url": "https://api.github.com/users/fgsch/events{/privacy}", "received_events_url": "https://api.github.com/users/fgsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-15T09:35:20Z", "updated_at": "2017-10-13T12:05:10Z", "closed_at": "2017-10-13T02:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "_tr_stored_block() is called twice in deflate.c with the second argument being NULL, first in deflate() and then in deflate_stored().\r\n\r\nAs per C standard, calling memcpy with a NULL argument is undefined even if the size is 0.\r\n\r\nFound by ubsan.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/288", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/288/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/288/events", "html_url": "https://github.com/madler/zlib/issues/288", "id": 246666253, "node_id": "MDU6SXNzdWUyNDY2NjYyNTM=", "number": 288, "title": "Bug in deflateParams()", "user": {"login": "chund", "id": 26091233, "node_id": "MDQ6VXNlcjI2MDkxMjMz", "avatar_url": "https://avatars2.githubusercontent.com/u/26091233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chund", "html_url": "https://github.com/chund", "followers_url": "https://api.github.com/users/chund/followers", "following_url": "https://api.github.com/users/chund/following{/other_user}", "gists_url": "https://api.github.com/users/chund/gists{/gist_id}", "starred_url": "https://api.github.com/users/chund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chund/subscriptions", "organizations_url": "https://api.github.com/users/chund/orgs", "repos_url": "https://api.github.com/users/chund/repos", "events_url": "https://api.github.com/users/chund/events{/privacy}", "received_events_url": "https://api.github.com/users/chund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-31T07:22:11Z", "updated_at": "2017-07-31T15:29:08Z", "closed_at": "2017-07-31T15:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This statement seems to be not correct. Not sure if it causes issues.\r\n\r\n600             if (s->matches == 1) \r\n601                 slide_hash(s); \r\n602             else \r\n603                 CLEAR_HASH(s); \r\n\r\nReason: CLEAR_HASH is a 2 line macro. Only the 1st line of the macro \"s->head[s->hash_size-1] = NIL;\" will be part of the else. The 2nd line of the macro \"zmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));\" will be executed always.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/287", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/287/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/287/events", "html_url": "https://github.com/madler/zlib/issues/287", "id": 246596204, "node_id": "MDU6SXNzdWUyNDY1OTYyMDQ=", "number": 287, "title": "Function arguments names inconsistencies", "user": {"login": "irwir", "id": 20182149, "node_id": "MDQ6VXNlcjIwMTgyMTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/20182149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irwir", "html_url": "https://github.com/irwir", "followers_url": "https://api.github.com/users/irwir/followers", "following_url": "https://api.github.com/users/irwir/following{/other_user}", "gists_url": "https://api.github.com/users/irwir/gists{/gist_id}", "starred_url": "https://api.github.com/users/irwir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irwir/subscriptions", "organizations_url": "https://api.github.com/users/irwir/orgs", "repos_url": "https://api.github.com/users/irwir/repos", "events_url": "https://api.github.com/users/irwir/events{/privacy}", "received_events_url": "https://api.github.com/users/irwir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-30T17:08:40Z", "updated_at": "2017-10-13T02:57:51Z", "closed_at": "2017-10-13T02:57:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "A minor thing, but having the same names would be preferable.\r\n\r\nFrom _cppcheck_ output:\r\ncrc32.c, line 203\r\nFunction 'crc32_z' argument 1 names different: declaration 'adler' definition 'crc'.\r\ngzwrite.c, line 354\r\nFunction 'gzputs' argument 2 names different: declaration 's' definition 'str'.\r\ntrees.c, lines 1159, 1160\r\nFunction 'bi_reverse' argument 1 names different: declaration 'value' definition 'code'.\r\nFunction 'bi_reverse' argument 2 names different: declaration 'length' definition 'len'.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/280", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/280/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/280/events", "html_url": "https://github.com/madler/zlib/issues/280", "id": 243838755, "node_id": "MDU6SXNzdWUyNDM4Mzg3NTU=", "number": 280, "title": "Minimum size of inflate output buffer?", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-18T20:19:10Z", "updated_at": "2017-10-13T03:01:41Z", "closed_at": "2017-10-13T03:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Lets say I am inflating a stream, and on the last call I provide the remainder of the stream contents minus the 4-byte \"empty\" deflate block (`0x00, 0x00, 0xff, 0xff `), and specify **Z_FLUSH**. There is plenty of output space.\r\n\r\nSo now I have no more input remaining except the empty deflate block, my question is what is the minimum size of the output area necessary to collect all the output that could be produced by feeding the empty deflate block in, on a call to `inflate`?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/276", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/276/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/276/events", "html_url": "https://github.com/madler/zlib/issues/276", "id": 242432833, "node_id": "MDU6SXNzdWUyNDI0MzI4MzM=", "number": 276, "title": "Convert ZLib to use 64 bit long types on x64 systems", "user": {"login": "Thormidable", "id": 5021041, "node_id": "MDQ6VXNlcjUwMjEwNDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5021041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thormidable", "html_url": "https://github.com/Thormidable", "followers_url": "https://api.github.com/users/Thormidable/followers", "following_url": "https://api.github.com/users/Thormidable/following{/other_user}", "gists_url": "https://api.github.com/users/Thormidable/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thormidable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thormidable/subscriptions", "organizations_url": "https://api.github.com/users/Thormidable/orgs", "repos_url": "https://api.github.com/users/Thormidable/repos", "events_url": "https://api.github.com/users/Thormidable/events{/privacy}", "received_events_url": "https://api.github.com/users/Thormidable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-12T16:02:33Z", "updated_at": "2017-10-13T04:24:12Z", "closed_at": "2017-10-13T04:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having to juggle memory to compress data sets which are greater than 4GB on a system which default supports 64 bit ints is a bit awkward.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/275", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/275/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/275/events", "html_url": "https://github.com/madler/zlib/issues/275", "id": 242143704, "node_id": "MDU6SXNzdWUyNDIxNDM3MDQ=", "number": 275, "title": "deflate.c/deflateReset/deflateResetKeep does not reset deflate_state.high_water", "user": {"login": "xuemingshen", "id": 1056654, "node_id": "MDQ6VXNlcjEwNTY2NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1056654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuemingshen", "html_url": "https://github.com/xuemingshen", "followers_url": "https://api.github.com/users/xuemingshen/followers", "following_url": "https://api.github.com/users/xuemingshen/following{/other_user}", "gists_url": "https://api.github.com/users/xuemingshen/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuemingshen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuemingshen/subscriptions", "organizations_url": "https://api.github.com/users/xuemingshen/orgs", "repos_url": "https://api.github.com/users/xuemingshen/repos", "events_url": "https://api.github.com/users/xuemingshen/events{/privacy}", "received_events_url": "https://api.github.com/users/xuemingshen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-11T18:35:55Z", "updated_at": "2017-10-13T01:49:09Z", "closed_at": "2017-10-13T01:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "The internal status deflate_state.high_water is not reset in deflateReset/deflateResetKeep/lm_init().\r\nIt triggers a regression from 1.2.8 to 1.2.11 [1] when the \"strategy/levle is changed\" and the \"reset\" is called, due to the condition check changed from \"strm->total_in!=0\" to \"s->high_water\" (for the flush last buffer\" branch) in deflate.c/deflateParams().\r\n\r\nfrom\r\n\r\n    if ((strategy != s->strategy || func != configuration_table[level].func) &&\r\n        strm->total_in != 0) {\r\n        /* Flush the last buffer: */\r\n        err = deflate(strm, Z_BLOCK);\r\n        if (err == Z_BUF_ERROR && s->pending == 0)\r\n            err = Z_OK;\r\n    }\r\n\r\nto\r\n\r\n    if ((strategy != s->strategy || func != configuration_table[level].func) &&\r\n        s->high_water) {\r\n        /* Flush the last buffer: */\r\n        int err = deflate(strm, Z_BLOCK);\r\n        if (err == Z_STREAM_ERROR)\r\n            return err;\r\n        if (strm->avail_out == 0)\r\n            return Z_BUF_ERROR;\r\n    }\r\n\r\nIt seems reasonable to reset the \"high_water\" inside either deflateResetKeep() or lm_init().\r\n\r\n[1] https://bugs.openjdk.java.net/browse/JDK-8184306", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/274", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/274/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/274/events", "html_url": "https://github.com/madler/zlib/issues/274", "id": 241217142, "node_id": "MDU6SXNzdWUyNDEyMTcxNDI=", "number": 274, "title": "Bug in inflate.c", "user": {"login": "umokk", "id": 7175477, "node_id": "MDQ6VXNlcjcxNzU0Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7175477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umokk", "html_url": "https://github.com/umokk", "followers_url": "https://api.github.com/users/umokk/followers", "following_url": "https://api.github.com/users/umokk/following{/other_user}", "gists_url": "https://api.github.com/users/umokk/gists{/gist_id}", "starred_url": "https://api.github.com/users/umokk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umokk/subscriptions", "organizations_url": "https://api.github.com/users/umokk/orgs", "repos_url": "https://api.github.com/users/umokk/repos", "events_url": "https://api.github.com/users/umokk/events{/privacy}", "received_events_url": "https://api.github.com/users/umokk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-07T10:01:23Z", "updated_at": "2017-10-13T03:03:07Z", "closed_at": "2017-10-13T03:03:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Zlib 1.2.11 supposedly has a bug in inflate.c.\r\nHow to reproduce:\r\n1. Build zlib with asm enabled for x86 (Visual Studio 2017).\r\n2. Build test\\example.c.\r\n3. Run.\r\nYou'll get access violation in contrib\\masmx86\\inffas32.asm, line 669: mov  eax, [ebx+eax*4]\r\n\r\nx64 works fine.\r\n1.2.8 worked fine for both x86 and x64.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/272", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/272/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/272/events", "html_url": "https://github.com/madler/zlib/issues/272", "id": 240571752, "node_id": "MDU6SXNzdWUyNDA1NzE3NTI=", "number": 272, "title": "deflate.c (603) 'else' block seems to be missing braces", "user": {"login": "hadrien-psydk", "id": 7605293, "node_id": "MDQ6VXNlcjc2MDUyOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7605293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hadrien-psydk", "html_url": "https://github.com/hadrien-psydk", "followers_url": "https://api.github.com/users/hadrien-psydk/followers", "following_url": "https://api.github.com/users/hadrien-psydk/following{/other_user}", "gists_url": "https://api.github.com/users/hadrien-psydk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hadrien-psydk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hadrien-psydk/subscriptions", "organizations_url": "https://api.github.com/users/hadrien-psydk/orgs", "repos_url": "https://api.github.com/users/hadrien-psydk/repos", "events_url": "https://api.github.com/users/hadrien-psydk/events{/privacy}", "received_events_url": "https://api.github.com/users/hadrien-psydk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-05T08:13:48Z", "updated_at": "2017-07-05T13:34:03Z", "closed_at": "2017-07-05T13:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\n[In deflate.c, line 603](../blob/master/deflate.c#L603), there is a call to the CLEAR_HASH macro in a 'else' block that does not have braces.\r\n\r\nThe definition of [CLEAR_HASH](../blob/master/deflate.c#L192) is made of two statements, so the second statement is executed outside the 'else'. Is that intended or am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/262", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/262/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/262/events", "html_url": "https://github.com/madler/zlib/issues/262", "id": 228303993, "node_id": "MDU6SXNzdWUyMjgzMDM5OTM=", "number": 262, "title": "CID 1401053:  Control flow issues  (NESTING_INDENT_MISMATCH)", "user": {"login": "fgsch", "id": 241785, "node_id": "MDQ6VXNlcjI0MTc4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/241785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgsch", "html_url": "https://github.com/fgsch", "followers_url": "https://api.github.com/users/fgsch/followers", "following_url": "https://api.github.com/users/fgsch/following{/other_user}", "gists_url": "https://api.github.com/users/fgsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgsch/subscriptions", "organizations_url": "https://api.github.com/users/fgsch/orgs", "repos_url": "https://api.github.com/users/fgsch/repos", "events_url": "https://api.github.com/users/fgsch/events{/privacy}", "received_events_url": "https://api.github.com/users/fgsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-12T14:11:12Z", "updated_at": "2017-08-22T10:31:15Z", "closed_at": "2017-08-22T10:31:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/lib/libvgz/deflate.c: 605 in deflateParams()\r\n599     }\r\n600     if (s->level != level) {\r\n601         if (s->level == 0 && s->matches != 0) {\r\n602             if (s->matches == 1)\r\n603                 slide_hash(s);\r\n604             else\r\n>>> CID 1401053:  Control flow issues  (NESTING_INDENT_MISMATCH)\r\n>>> The macro on this line expands into multiple statements, only\r\n>>> the first of which is nested within the preceding parent while\r\n>>> the rest are not.\r\n605                 CLEAR_HASH(s);\r\n606             s->matches = 0;\r\n607         }\r\n608         s->level = level;\r\n609         s->max_lazy_match   = configuration_table[level].max_lazy;\r\n610         s->good_match       = configuration_table[level].good_length;\r\n```\r\n\r\nSpotted by Coverity.\r\n\r\nOur fix at https://github.com/varnishcache/varnish-cache/commit/ea111153098fe636f7c42ab8da4efdc5954e894e.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/258", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/258/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/258/events", "html_url": "https://github.com/madler/zlib/issues/258", "id": 227048994, "node_id": "MDU6SXNzdWUyMjcwNDg5OTQ=", "number": 258, "title": "inconsistencies in ZLIB-1.2.11 builds using mingw-w64 and MSVC on Windows", "user": {"login": "sav-ix", "id": 3617101, "node_id": "MDQ6VXNlcjM2MTcxMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3617101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sav-ix", "html_url": "https://github.com/sav-ix", "followers_url": "https://api.github.com/users/sav-ix/followers", "following_url": "https://api.github.com/users/sav-ix/following{/other_user}", "gists_url": "https://api.github.com/users/sav-ix/gists{/gist_id}", "starred_url": "https://api.github.com/users/sav-ix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sav-ix/subscriptions", "organizations_url": "https://api.github.com/users/sav-ix/orgs", "repos_url": "https://api.github.com/users/sav-ix/repos", "events_url": "https://api.github.com/users/sav-ix/events{/privacy}", "received_events_url": "https://api.github.com/users/sav-ix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-08T13:39:20Z", "updated_at": "2017-10-13T15:42:44Z", "closed_at": "2017-10-13T03:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, everyone,\r\n\r\nGot few issues with ZLIB builds on Windows.\r\n\r\n1. For builds using mingw-w64 with asm code usage got error:\r\n```\r\nsh-4.4$ make -f win32/Makefile.gcc LOC=-DASMV OBJA=match.o\r\n[snip]\r\ndeflate.c:91:11: note: #pragma message: Assembler code may have bugs -- use at your own risk\r\n #  pragma message(\"Assembler code may have bugs -- use at your own risk\")\r\n           ^~~~~~~\r\n[snip]\r\nmake: *** No rule to make target 'match.o', needed by 'libz.a'.  Stop.\r\n```\r\n\r\nAnd testsuite run finishes with errors:\r\n```\r\nsh-4.4$ make test testdll -f win32/Makefile.gcc\r\n[snip]\r\nar rcs libz.a adler32.o compress.o crc32.o deflate.o gzclose.o gzlib.o gzread.o gzwrite.o infback.o inffast.o inflate.o inftrees.o trees.o uncompr.o zutil.o\r\ngcc  -o example.exe example.o libz.a\r\nlibz.a(deflate.o):deflate.c:(.text+0x745): undefined reference to `longest_match'\r\nlibz.a(deflate.o):deflate.c:(.text+0x1444): undefined reference to `longest_match'\r\nlibz.a(deflate.o):deflate.c:(.text+0x1ce1): undefined reference to `match_init'\r\nlibz.a(deflate.o):deflate.c:(.text+0x3fee): undefined reference to `match_init'\r\nlibz.a(deflate.o):deflate.c:(.text+0x43da): undefined reference to `match_init'\r\ncollect2.exe: error: ld returned 1 exit status\r\nmake: *** [win32/Makefile.gcc:101: example.exe] Error 1\r\n```\r\n\r\nNot reproduced for mingw-w64 builds without `LOC=-DASMV OBJA=match.o` keys and for MSVC builds with `LOC=\"-DASMV -DASMINF -I.\"...` keys.\r\n\r\n\r\n2. Missing `install` and `uninstall` rules in file `win32/Makefile.msc`, which available in `win32/Makefile.gcc`.\r\n\r\n\r\n3. Usage instructions in files `win32/Makefile.gcc` and `win32/Makefile.msc` are significantly different, though relate to the same platform.\r\n\r\n\r\nEnvironment:\r\n- Windows 10 x64,\r\n- VS 2015 Update 3,\r\n- Windows SDK 10.0.14393.33,\r\n- mingw-w64 6.3.0,\r\n- MSYS2 20161025,\r\n- ZLIB-1.2.11.\r\n\r\n\r\nAlexander\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/254", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/254/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/254/events", "html_url": "https://github.com/madler/zlib/issues/254", "id": 223927555, "node_id": "MDU6SXNzdWUyMjM5Mjc1NTU=", "number": 254, "title": "Android NDK r15 and minizip", "user": {"login": "alexcohn", "id": 736435, "node_id": "MDQ6VXNlcjczNjQzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/736435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcohn", "html_url": "https://github.com/alexcohn", "followers_url": "https://api.github.com/users/alexcohn/followers", "following_url": "https://api.github.com/users/alexcohn/following{/other_user}", "gists_url": "https://api.github.com/users/alexcohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcohn/subscriptions", "organizations_url": "https://api.github.com/users/alexcohn/orgs", "repos_url": "https://api.github.com/users/alexcohn/repos", "events_url": "https://api.github.com/users/alexcohn/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcohn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-24T19:33:55Z", "updated_at": "2017-10-13T04:25:44Z", "closed_at": "2017-10-13T04:25:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the new Android NDK (r15) and unified headers, minizip fails to compile for APP_API < 21. The fix seems to be simple and should not cause big problems: there is little chance that these old device will ever be challenged to open files larger than 4GB.\r\n\r\nhttps://github.com/android-ndk/ndk/issues/364#issuecomment-296699881\r\n\r\n> our fix was to modify [one line](https://github.com/madler/zlib/blob/master/contrib/minizip/ioapi.h#L24):\r\n> \r\n>     -#if (!defined(_WIN32)) && (!defined(WIN32)) && (!defined(__APPLE__))\r\n>     +#if (!defined(_WIN32)) && (!defined(WIN32)) && (!defined(__APPLE__)) && (!defined(ANDROID))\r\n>\r\n> (actually, we had `-DIOAPI_NO_64` even before).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/252", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/252/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/252/events", "html_url": "https://github.com/madler/zlib/issues/252", "id": 222000973, "node_id": "MDU6SXNzdWUyMjIwMDA5NzM=", "number": 252, "title": "Valgrind finds issues when inflateSync is used", "user": {"login": "pmqs", "id": 2691108, "node_id": "MDQ6VXNlcjI2OTExMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2691108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmqs", "html_url": "https://github.com/pmqs", "followers_url": "https://api.github.com/users/pmqs/followers", "following_url": "https://api.github.com/users/pmqs/following{/other_user}", "gists_url": "https://api.github.com/users/pmqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmqs/subscriptions", "organizations_url": "https://api.github.com/users/pmqs/orgs", "repos_url": "https://api.github.com/users/pmqs/repos", "events_url": "https://api.github.com/users/pmqs/events{/privacy}", "received_events_url": "https://api.github.com/users/pmqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-16T09:38:26Z", "updated_at": "2017-04-16T18:34:02Z", "closed_at": "2017-04-16T15:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Modified version of examples/zpipe.c, called **malloc.c** [here ](https://gist.github.com/pmqs/add7f08d50747956b6e336f258b7ad48), does the following\r\n\r\n1. creates a deflate stream with a full flush point\r\n2. uses **inflateSync** to skip to the flush point\r\n3. then inflates the rest of the stream\r\n\r\nI ran as follows with zlib 1.2.11 on a 64-bit Linux  to get valgrind to test the call to **inflate**\r\n\r\n    cat malloc.c  | ./malloc | valgrind --show-reachable=yes --track-origins=yes ./malloc -d >/dev/null\r\n\r\nValgrind finds a few issues with **inflate** after the call to **inflateSync** - see end of message. The uninitialized values referenced in all the valgrind errors are testing **inflate_state.flags** or **inflate_state.check** .\r\n\r\nInitializing **inflate_state.flags** and **inflate_state.check** to zero in **__inflateInit2** makes all of the errors go away.\r\n\r\nAs you would expect I can also make all the valgrind errors go away by setting **z_stream.zalloc** to use **calloc** in my test code.\r\n\r\nInteresting to note that **zcalloc** (in zutil.c), which is in the backtrace for the source of all the valgrind errors, will _conditionally_ use **calloc** itself, but only if an **unsigned int** is greater than 16 bits. The naming of that function suggests it should be doing a the equivalent of a **calloc** all the time. That doesn't seem to be the case for my test.\r\n\r\n    voidpf ZLIB_INTERNAL zcalloc (opaque, items, size)\r\n        voidpf opaque;\r\n        unsigned items;\r\n        unsigned size;\r\n    {\r\n        (void)opaque;\r\n        return sizeof(uInt) > 2 ? (voidpf)malloc(items * size) :\r\n                                  (voidpf)calloc(items, size);\r\n    }\r\n\r\nWould it be safer to just use **calloc** all the time?\r\n\r\nHere are the valgrind errors\r\n\r\n    ==20121== Memcheck, a memory error detector\r\n    ==20121== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\r\n    ==20121== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\r\n    ==20121== Command: ./malloc -d\r\n    ==20121== \r\n    ==20121== Conditional jump or move depends on uninitialised value(s)\r\n    ==20121==    at 0x409437: inflate (inflate.c:1268)\r\n    ==20121==    by 0x400D7A: inf (malloc.c:206)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121==  Uninitialised value was created by a heap allocation\r\n    ==20121==    at 0x4C2DB8F: malloc (vg_replace_malloc.c:299)\r\n    ==20121==    by 0x40E243: zcalloc (zutil.c:311)\r\n    ==20121==    by 0x406D12: inflateInit2_ (inflate.c:223)\r\n    ==20121==    by 0x406DC4: inflateInit_ (inflate.c:244)\r\n    ==20121==    by 0x400C57: inf (malloc.c:151)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121== \r\n    ==20121== Conditional jump or move depends on uninitialised value(s)\r\n    ==20121==    at 0x4090CC: inflate (inflate.c:1205)\r\n    ==20121==    by 0x400D7A: inf (malloc.c:206)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121==  Uninitialised value was created by a heap allocation\r\n    ==20121==    at 0x4C2DB8F: malloc (vg_replace_malloc.c:299)\r\n    ==20121==    by 0x40E243: zcalloc (zutil.c:311)\r\n    ==20121==    by 0x406D12: inflateInit2_ (inflate.c:223)\r\n    ==20121==    by 0x406DC4: inflateInit_ (inflate.c:244)\r\n    ==20121==    by 0x400C57: inf (malloc.c:151)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121== \r\n    ==20121== Conditional jump or move depends on uninitialised value(s)\r\n    ==20121==    at 0x409159: inflate (inflate.c:1209)\r\n    ==20121==    by 0x400D7A: inf (malloc.c:206)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121==  Uninitialised value was created by a heap allocation\r\n    ==20121==    at 0x4C2DB8F: malloc (vg_replace_malloc.c:299)\r\n    ==20121==    by 0x40E243: zcalloc (zutil.c:311)\r\n    ==20121==    by 0x406D12: inflateInit2_ (inflate.c:223)\r\n    ==20121==    by 0x406DC4: inflateInit_ (inflate.c:244)\r\n    ==20121==    by 0x400C57: inf (malloc.c:151)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121== \r\n    ==20121== Conditional jump or move depends on uninitialised value(s)\r\n    ==20121==    at 0x4091A5: inflate (inflate.c:1207)\r\n    ==20121==    by 0x400D7A: inf (malloc.c:206)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121==  Uninitialised value was created by a heap allocation\r\n    ==20121==    at 0x4C2DB8F: malloc (vg_replace_malloc.c:299)\r\n    ==20121==    by 0x40E243: zcalloc (zutil.c:311)\r\n    ==20121==    by 0x406D12: inflateInit2_ (inflate.c:223)\r\n    ==20121==    by 0x406DC4: inflateInit_ (inflate.c:244)\r\n    ==20121==    by 0x400C57: inf (malloc.c:151)\r\n    ==20121==    by 0x40105D: main (malloc.c:275)\r\n    ==20121== \r\n    zpipe: invalid or incomplete deflate data\r\n    ==20121== \r\n    ==20121== HEAP SUMMARY:\r\n    ==20121==     in use at exit: 0 bytes in 0 blocks\r\n    ==20121==   total heap usage: 4 allocs, 4 frees, 48,120 bytes allocated\r\n    ==20121== \r\n    ==20121== All heap blocks were freed -- no leaks are possible\r\n    ==20121== \r\n    ==20121== For counts of detected and suppressed errors, rerun with: -v\r\n    ==20121== ERROR SUMMARY: 10 errors from 4 contexts (suppressed: 0 from 0)\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/250", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/250/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/250/events", "html_url": "https://github.com/madler/zlib/issues/250", "id": 220553174, "node_id": "MDU6SXNzdWUyMjA1NTMxNzQ=", "number": 250, "title": "Zlib: deflateEnd() fails after deflateInit2()/deflateReset() when initialized for \"Raw Deflate Compression\"", "user": {"login": "1234sv", "id": 8476520, "node_id": "MDQ6VXNlcjg0NzY1MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8476520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1234sv", "html_url": "https://github.com/1234sv", "followers_url": "https://api.github.com/users/1234sv/followers", "following_url": "https://api.github.com/users/1234sv/following{/other_user}", "gists_url": "https://api.github.com/users/1234sv/gists{/gist_id}", "starred_url": "https://api.github.com/users/1234sv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1234sv/subscriptions", "organizations_url": "https://api.github.com/users/1234sv/orgs", "repos_url": "https://api.github.com/users/1234sv/repos", "events_url": "https://api.github.com/users/1234sv/events{/privacy}", "received_events_url": "https://api.github.com/users/1234sv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-04-10T06:55:21Z", "updated_at": "2018-05-26T18:23:27Z", "closed_at": "2017-10-13T03:59:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Description of the problem is:\r\n \r\ndeflateInit () for *raw deflate* moves internal state to BUSY_STATE (where as it is INIT_STATE for zlib). BUSY_STATE is considered to be == INIT_STATE for *raw deflate*.\r\nSo, when deflateEnd() is called, it has no way to identify whether stream is in the start or middle of core deflate operation()  thus reports an Z_DATA_ERROR.\r\n\r\nHow does it affect:\r\n \r\n//This will work:\r\ndeflateInit2()\r\ndeflate(strmp,Z_FINISH);\r\ndeflateEnd()\r\n \r\n//This will not work\r\ndeflateInit2()\r\nwhile(cnt\u2014)\r\n{\r\n deflate(strmp,Z_FINISH);\r\n  deflateReset()<--required to re-initiate deflate() on next input.\r\n}\r\ndeflateEnd();\r\n\r\ntest_def_init_term.c - a simple test case to reproduce issue.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/249", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/249/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/249/events", "html_url": "https://github.com/madler/zlib/issues/249", "id": 220234163, "node_id": "MDU6SXNzdWUyMjAyMzQxNjM=", "number": 249, "title": "zlib 1.2.11 crashes in 'inffas32.asm' if 'avail_out' CHUNK size > 257 ", "user": {"login": "vanillycpp", "id": 12745329, "node_id": "MDQ6VXNlcjEyNzQ1MzI5", "avatar_url": "https://avatars0.githubusercontent.com/u/12745329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vanillycpp", "html_url": "https://github.com/vanillycpp", "followers_url": "https://api.github.com/users/vanillycpp/followers", "following_url": "https://api.github.com/users/vanillycpp/following{/other_user}", "gists_url": "https://api.github.com/users/vanillycpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/vanillycpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vanillycpp/subscriptions", "organizations_url": "https://api.github.com/users/vanillycpp/orgs", "repos_url": "https://api.github.com/users/vanillycpp/repos", "events_url": "https://api.github.com/users/vanillycpp/events{/privacy}", "received_events_url": "https://api.github.com/users/vanillycpp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-07T14:40:47Z", "updated_at": "2017-04-11T12:20:32Z", "closed_at": "2017-04-10T18:17:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I have some test data in \r\nRFC 1951 (deflate compressed format) (with no header)\r\nhttp://tilesearth.com/tmp/def_log.txt\r\n\r\nIm trying to decompress it\r\nhere is my code\r\n\r\n----------------------------------------------------------------------\r\n`#define ZLIB_WINAPI`\r\n`#define CHUNK 258`\r\n\r\n`#include <stdio.h>`\r\n`#include <fstream>`\r\n`#include \"zlib.h\"`\r\n\r\n`int main()`\r\n`{`\r\n\t`char buf[50];`\r\n\t`char res[CHUNK];`\r\n  \r\n        std::ifstream file;\r\n\tfile.open(\"def_log.txt\", std::ios::binary | std::ios::ate);\r\n\r\n\tstd::streamsize size = file.tellg();\r\n\tfile.seekg(0, std::ios::beg);\r\n\r\n\tif (file.is_open())\r\n\t{\r\n\t\tfile.read((char*)buf, size);\r\n\t\tfile.close();\r\n\t}\r\n\r\n\tz_stream strm;\r\n\tstrm.zalloc = Z_NULL;\r\n\tstrm.zfree = Z_NULL;\r\n\tstrm.opaque = Z_NULL;\r\n\tstrm.avail_in = size;\r\n\tstrm.next_in = (Bytef *)buf;\r\n\tstrm.avail_out = (uInt)CHUNK;\r\n\tstrm.next_out = (Bytef *)res;\r\n\r\n\tif (inflateInit2(&strm, -MAX_WBITS) == Z_OK)\r\n\t{\r\n\t\tinflate(&strm, Z_NO_FLUSH);\r\n\t\tinflateEnd(&strm);\r\n\t}\r\n    return 0;\r\n`}`\r\n\r\n----------------------------------------------------------------------\r\n\r\nso, in case when `#define CHUNK 257`\r\neverything works fine\r\nbut, if I change this `#define CHUNK 258`\r\nprogram crashes at `inffas32.asm line 669`\r\n![zlib_crach](https://cloud.githubusercontent.com/assets/12745329/24803370/afc38d7e-1bb3-11e7-9b93-54c1eb05bda4.jpg)\r\n\r\ncould you help me to understand what is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/247", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/247/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/247/events", "html_url": "https://github.com/madler/zlib/issues/247", "id": 219394627, "node_id": "MDU6SXNzdWUyMTkzOTQ2Mjc=", "number": 247, "title": "Incorrect multi-line macro usage in the if-else clause", "user": {"login": "yurymik", "id": 880206, "node_id": "MDQ6VXNlcjg4MDIwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/880206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurymik", "html_url": "https://github.com/yurymik", "followers_url": "https://api.github.com/users/yurymik/followers", "following_url": "https://api.github.com/users/yurymik/following{/other_user}", "gists_url": "https://api.github.com/users/yurymik/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurymik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurymik/subscriptions", "organizations_url": "https://api.github.com/users/yurymik/orgs", "repos_url": "https://api.github.com/users/yurymik/repos", "events_url": "https://api.github.com/users/yurymik/events{/privacy}", "received_events_url": "https://api.github.com/users/yurymik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-04T21:47:44Z", "updated_at": "2017-04-04T22:08:49Z", "closed_at": "2017-04-04T22:08:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Macro `CLEAR_HASH` is [defined](https://github.com/madler/zlib/blob/master/deflate.c#L192) as follows:\r\n\r\n```\r\n#define CLEAR_HASH(s) \\\r\n    s->head[s->hash_size-1] = NIL; \\\r\n    zmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));\r\n```\r\n\r\nand then [used](https://github.com/madler/zlib/blob/master/deflate.c#L603) in `deflateParams`:\r\n\r\n```\r\n          if (s->matches == 1)\r\n                slide_hash(s);\r\n          else\r\n                CLEAR_HASH(s);\r\n          s->matches = 0;\r\n```\r\n\r\nCall to `zmemzero` will be executed regardless of the `s->matches` value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/246", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/246/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/246/events", "html_url": "https://github.com/madler/zlib/issues/246", "id": 218741447, "node_id": "MDU6SXNzdWUyMTg3NDE0NDc=", "number": 246, "title": "Failed to find pointer-size integer type on Alpine Linux / musl", "user": {"login": "JoeUX", "id": 8071692, "node_id": "MDQ6VXNlcjgwNzE2OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8071692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoeUX", "html_url": "https://github.com/JoeUX", "followers_url": "https://api.github.com/users/JoeUX/followers", "following_url": "https://api.github.com/users/JoeUX/following{/other_user}", "gists_url": "https://api.github.com/users/JoeUX/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoeUX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoeUX/subscriptions", "organizations_url": "https://api.github.com/users/JoeUX/orgs", "repos_url": "https://api.github.com/users/JoeUX/repos", "events_url": "https://api.github.com/users/JoeUX/events{/privacy}", "received_events_url": "https://api.github.com/users/JoeUX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-04-02T04:36:28Z", "updated_at": "2020-05-11T13:15:48Z", "closed_at": "2020-05-11T13:15:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm running into an obstacle running `./configure` on Alpine Linux v. 3.5.2 (latest), x86_64 version. The error says \"Failed to find a pointer-size integer type\", whereupon it aborts. Screenshot below:\r\n\r\n![2017-04-01_20-50-21](https://cloud.githubusercontent.com/assets/8071692/24584416/8696b506-1722-11e7-8921-0af9797e19ce.png)\r\n\r\nAlpine Linux uses the [musl c library](https://www.musl-libc.org/) instead of glibc. Is this part of the issue? How can I fix this?\r\n\r\nOther info: I doubt this would matter, but I'm running Alpine as a guest in Virtual Box 5.1.18 on a Windows 10 host.\r\n\r\nI'm following the [setup instructions](https://www.nginx.com/resources/admin-guide/installing-nginx-open-source/) on the nginx website, but at this stage nothing nginx-related is happening yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/245", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/245/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/245/events", "html_url": "https://github.com/madler/zlib/issues/245", "id": 218325199, "node_id": "MDU6SXNzdWUyMTgzMjUxOTk=", "number": 245, "title": "Use-of-uninitialized-value in inflate()", "user": {"login": "npm1", "id": 25042744, "node_id": "MDQ6VXNlcjI1MDQyNzQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/25042744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npm1", "html_url": "https://github.com/npm1", "followers_url": "https://api.github.com/users/npm1/followers", "following_url": "https://api.github.com/users/npm1/following{/other_user}", "gists_url": "https://api.github.com/users/npm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/npm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npm1/subscriptions", "organizations_url": "https://api.github.com/users/npm1/orgs", "repos_url": "https://api.github.com/users/npm1/repos", "events_url": "https://api.github.com/users/npm1/events{/privacy}", "received_events_url": "https://api.github.com/users/npm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-30T20:55:19Z", "updated_at": "2017-08-03T21:11:10Z", "closed_at": "2017-03-30T21:45:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are a couple of places in inflate() where UPDATE is called with state->check as its first parameter, without a guarantee that this value has been initialized (state comes from a ZALLOC in inflateInit). This causes use of uninitialized check value.\r\n\r\nSuggested fix:\r\nAdd state->check=0; around here:\r\nhttps://github.com/madler/zlib/blob/master/inflate.c#L230", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/244", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/244/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/244/events", "html_url": "https://github.com/madler/zlib/issues/244", "id": 217258422, "node_id": "MDU6SXNzdWUyMTcyNTg0MjI=", "number": 244, "title": "deflateBound returns uLong but avail_out is uInt", "user": {"login": "DbxDev", "id": 5981212, "node_id": "MDQ6VXNlcjU5ODEyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5981212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DbxDev", "html_url": "https://github.com/DbxDev", "followers_url": "https://api.github.com/users/DbxDev/followers", "following_url": "https://api.github.com/users/DbxDev/following{/other_user}", "gists_url": "https://api.github.com/users/DbxDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/DbxDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DbxDev/subscriptions", "organizations_url": "https://api.github.com/users/DbxDev/orgs", "repos_url": "https://api.github.com/users/DbxDev/repos", "events_url": "https://api.github.com/users/DbxDev/events{/privacy}", "received_events_url": "https://api.github.com/users/DbxDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T14:09:37Z", "updated_at": "2017-03-27T15:24:45Z", "closed_at": "2017-03-27T15:24:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "In case of a one shot compression the result of deflateBound is a uLong, but the value of avail_out\r\nis a uInt, which makes the type returned by deflateBound at least inconsistent, and unsafe in extreme cases (risk of integer overflow).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/236", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/236/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/236/events", "html_url": "https://github.com/madler/zlib/issues/236", "id": 211604116, "node_id": "MDU6SXNzdWUyMTE2MDQxMTY=", "number": 236, "title": "Redundant test in inflate_fast().", "user": {"login": "sh1boot", "id": 3655508, "node_id": "MDQ6VXNlcjM2NTU1MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3655508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh1boot", "html_url": "https://github.com/sh1boot", "followers_url": "https://api.github.com/users/sh1boot/followers", "following_url": "https://api.github.com/users/sh1boot/following{/other_user}", "gists_url": "https://api.github.com/users/sh1boot/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh1boot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh1boot/subscriptions", "organizations_url": "https://api.github.com/users/sh1boot/orgs", "repos_url": "https://api.github.com/users/sh1boot/repos", "events_url": "https://api.github.com/users/sh1boot/events{/privacy}", "received_events_url": "https://api.github.com/users/sh1boot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-03T06:13:13Z", "updated_at": "2017-10-13T04:04:26Z", "closed_at": "2017-10-13T04:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `inflate_fast()` the [`wnext == 0`](https://github.com/madler/zlib/blob/master/inffast.c#L200) case and the [`wnext >= op`](https://github.com/madler/zlib/blob/master/inffast.c#L229) are nearly identical, and they can be merged by setting\r\n\r\n    wnext = (wnext == 0 && whave >= wsize) ? wsize : wnext;\r\n\r\nat the beginning of the function.  This eliminates one test from the main loop (and the misleading comment along with it; if libpng operates row-at-a-time `wnext` will almost never be zero).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/235", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/235/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/235/events", "html_url": "https://github.com/madler/zlib/issues/235", "id": 211186191, "node_id": "MDU6SXNzdWUyMTExODYxOTE=", "number": 235, "title": "gzip specifications regarding OS code", "user": {"login": "hadrien-psydk", "id": 7605293, "node_id": "MDQ6VXNlcjc2MDUyOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7605293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hadrien-psydk", "html_url": "https://github.com/hadrien-psydk", "followers_url": "https://api.github.com/users/hadrien-psydk/followers", "following_url": "https://api.github.com/users/hadrien-psydk/following{/other_user}", "gists_url": "https://api.github.com/users/hadrien-psydk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hadrien-psydk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hadrien-psydk/subscriptions", "organizations_url": "https://api.github.com/users/hadrien-psydk/orgs", "repos_url": "https://api.github.com/users/hadrien-psydk/repos", "events_url": "https://api.github.com/users/hadrien-psydk/events{/privacy}", "received_events_url": "https://api.github.com/users/hadrien-psydk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-01T19:39:51Z", "updated_at": "2017-06-13T05:06:50Z", "closed_at": "2017-03-01T19:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since zlib 1.2.11 the OS_CODE for Windows stored in the gzip header has a value of 10, as specified by PkZip APPNOTE.TXT file.\r\n\r\nThe value for Windows used to be 11, as specified by RFC 1952. This is a bit confusing. For example, when I compress a gzip archive with zlib 1.2.11 and open it with an archiver tool (like 7-zip), I get \"TOPS-20\" as the OS.\r\n\r\nIs there any plan to update the RFC (or release a new official document) in order to update the operating system code mapping? That way any program that would implement gzip would use the new values instead of the old ones.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/232", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/232/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/232/events", "html_url": "https://github.com/madler/zlib/issues/232", "id": 210239299, "node_id": "MDU6SXNzdWUyMTAyMzkyOTk=", "number": 232, "title": "Warnings when building 64 bit version of library using MSVC", "user": {"login": "boxerab", "id": 95393, "node_id": "MDQ6VXNlcjk1Mzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/95393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxerab", "html_url": "https://github.com/boxerab", "followers_url": "https://api.github.com/users/boxerab/followers", "following_url": "https://api.github.com/users/boxerab/following{/other_user}", "gists_url": "https://api.github.com/users/boxerab/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxerab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxerab/subscriptions", "organizations_url": "https://api.github.com/users/boxerab/orgs", "repos_url": "https://api.github.com/users/boxerab/repos", "events_url": "https://api.github.com/users/boxerab/events{/privacy}", "received_events_url": "https://api.github.com/users/boxerab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T14:56:02Z", "updated_at": "2017-02-25T14:57:48Z", "closed_at": "2017-02-25T14:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": " I get these warnings when building master branch on 64 bit using VS 2015.  I doubt these warnings indicate bugs, but it would be nice to be warning-free by adding the appropriate casts.  \r\nThanks!!   I can make a pull request if you like.\r\n\r\n\r\n    libz\\gzread.c(319): warning C4267: '=': conversion from 'size_t' to 'unsigned int', possible loss of data\r\n    libz\\gzread.c(400): warning C4267: '=': conversion from 'size_t' to 'unsigned int', possible loss of data\r\n    libz\\gzread.c(472): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data\r\n    libz\\gzwrite.c(211): warning C4267: '=': conversion from 'size_t' to 'unsigned int', possible loss of data\r\n    libz\\gzwrite.c(231): warning C4267: '=': conversion from 'size_t' to 'unsigned int', possible loss of data\r\n    libz\\gzwrite.c(370): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/227", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/227/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/227/events", "html_url": "https://github.com/madler/zlib/issues/227", "id": 208654348, "node_id": "MDU6SXNzdWUyMDg2NTQzNDg=", "number": 227, "title": "zlib appears to have a heap issue", "user": {"login": "tztester", "id": 25867882, "node_id": "MDQ6VXNlcjI1ODY3ODgy", "avatar_url": "https://avatars0.githubusercontent.com/u/25867882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tztester", "html_url": "https://github.com/tztester", "followers_url": "https://api.github.com/users/tztester/followers", "following_url": "https://api.github.com/users/tztester/following{/other_user}", "gists_url": "https://api.github.com/users/tztester/gists{/gist_id}", "starred_url": "https://api.github.com/users/tztester/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tztester/subscriptions", "organizations_url": "https://api.github.com/users/tztester/orgs", "repos_url": "https://api.github.com/users/tztester/repos", "events_url": "https://api.github.com/users/tztester/events{/privacy}", "received_events_url": "https://api.github.com/users/tztester/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-18T17:06:54Z", "updated_at": "2017-02-18T17:57:06Z", "closed_at": "2017-02-18T17:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried out the zlib distribution for Win64. Build the different versions of the libraries successfully on Win7 on VS2010.  Did some quick stress testing with the included app [testzlib] and ran it with Microsoft's AppVerifier (appverif.exe) and pointed AppVerifier to the testzlib binary.  With just the basic stress test, the testzlib fails in the deflate routine for certain files larger than a few hundred megabytes.   Looked at the stack and the bug appears to end up in the gvmat64.asm / longest_match() routine.  Running some tests, empirically it appeared to only happened with me for Release builds (Debug builds didn't fail).  So to get additional information, I modified the Release build to provided debug info so I could drill down to the problem.   Below are some background screenshots.   Any suggestions you may have to resolve this issue (whether it be a compiler setting, configuration issue, or a bug fix) will be greatly appreciated.\r\n\r\n![2017-02-18_12-00-02](https://cloud.githubusercontent.com/assets/25867882/23095091/314619fa-f5d2-11e6-94a3-8950be280406.png)\r\n![2017-02-18_11-54-23](https://cloud.githubusercontent.com/assets/25867882/23095094/3dddbc4a-f5d2-11e6-8600-81e2b0188e1f.png)\r\n![2017-02-18_11-57-41](https://cloud.githubusercontent.com/assets/25867882/23095096/47c94e5e-f5d2-11e6-86d1-98235389d58f.png)\r\n![2017-02-18_11-58-04](https://cloud.githubusercontent.com/assets/25867882/23095098/50df97aa-f5d2-11e6-80fe-63a7e2eec27e.png)\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/223", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/223/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/223/events", "html_url": "https://github.com/madler/zlib/issues/223", "id": 206267557, "node_id": "MDU6SXNzdWUyMDYyNjc1NTc=", "number": 223, "title": "Crash in inflate()", "user": {"login": "Snuff-Daddy", "id": 25643534, "node_id": "MDQ6VXNlcjI1NjQzNTM0", "avatar_url": "https://avatars0.githubusercontent.com/u/25643534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Snuff-Daddy", "html_url": "https://github.com/Snuff-Daddy", "followers_url": "https://api.github.com/users/Snuff-Daddy/followers", "following_url": "https://api.github.com/users/Snuff-Daddy/following{/other_user}", "gists_url": "https://api.github.com/users/Snuff-Daddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Snuff-Daddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Snuff-Daddy/subscriptions", "organizations_url": "https://api.github.com/users/Snuff-Daddy/orgs", "repos_url": "https://api.github.com/users/Snuff-Daddy/repos", "events_url": "https://api.github.com/users/Snuff-Daddy/events{/privacy}", "received_events_url": "https://api.github.com/users/Snuff-Daddy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-08T17:29:09Z", "updated_at": "2018-05-11T09:31:53Z", "closed_at": "2017-02-12T06:12:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a crash in inflate() but only when ASMV and ASMINF are defined.  Zlib 1.2.11.  Visual Studio 2015 on Windows 7.  Using zlibstat.\r\n\r\n```\r\nL_do_loop:\r\n; 437 \"inffast.S\"\r\n\tcmp  bl,15\r\n\tja   L_get_length_code\r\n\r\n\txor  eax,eax\r\n\tlodsw\r\n\tmov  cl,bl\r\n\tadd  bl,16\r\n\tshl  eax,cl\r\n\tor  ebp,eax\r\n\r\nL_get_length_code:\r\n\tmov  edx, [esp+0]\r\n\tmov  ecx, [esp+8]\r\n\tand  edx,ebp\r\n\tmov  eax, [ecx+edx*4]         <<<<< CRASH HERE ecx=0xCDCDCDCD (heap allocated but uninitialized)\r\n\r\nL_dolen:\r\n\tmov  cl,ah\r\n\tsub  bl,ah\r\n\tshr  ebp,cl\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/222", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/222/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/222/events", "html_url": "https://github.com/madler/zlib/issues/222", "id": 206262632, "node_id": "MDU6SXNzdWUyMDYyNjI2MzI=", "number": 222, "title": "deflateParams not working correctly in zlib 1.2.11", "user": {"login": "stanguturi", "id": 998296, "node_id": "MDQ6VXNlcjk5ODI5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/998296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanguturi", "html_url": "https://github.com/stanguturi", "followers_url": "https://api.github.com/users/stanguturi/followers", "following_url": "https://api.github.com/users/stanguturi/following{/other_user}", "gists_url": "https://api.github.com/users/stanguturi/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanguturi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanguturi/subscriptions", "organizations_url": "https://api.github.com/users/stanguturi/orgs", "repos_url": "https://api.github.com/users/stanguturi/repos", "events_url": "https://api.github.com/users/stanguturi/events{/privacy}", "received_events_url": "https://api.github.com/users/stanguturi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-08T17:11:06Z", "updated_at": "2017-02-12T06:21:36Z", "closed_at": "2017-02-12T06:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been using zlib 1.2.8 and didn't find any issues. Only after updating my code to build with zlib 1.2.11, I have encountered the issue. deflateParams() when called to change the compression level, changes the avail_out which causes the next deflate() to call to fail.\r\n\r\nUse case: In our code, we first try to compress a block of data using Z_BEST_COMPRESSION level. If the block of data can not be compressed in the given amount of 'output buffer', we try to call deflate() with 'Z_NO_COMPRESSION' with more output buffer. The second deflate call fails even when we have the necessary amount of 'output buffer'\r\n\r\nFollowing is the list of sequence of APIs called:\r\n\r\n1. deflateInit2(&zStream, Z_BEST_COMPRESSION, ....)\r\n\r\n   (avail_in = 32768, avail_out = 32778)\r\n2. deflateParams(&_zStream, Z_BEST_COMPRESSION, Z_DEFAULT_STRATEGY)\r\n\r\n3. deflate(&_zStream, Z_FINISH)\r\n   deflate returned Z_OK. This means, that more space is required.\r\n\r\n4. deflateReset(&_zStream)\r\n\r\n   (avail_in = 32768, avail_out = 32779)\r\n   (Using Z_NO_COMPRESSION, avail_out should be sufficient)\r\n5. deflateParams(&_zStream, Z_NO_COMPRESSION, Z_DEFAULT_STRATEGY)\r\n   The above call is made to change the compression level.\r\n\r\n   After 5, avail_out is changed to 1. This doesn't happen with zlib 1.2.8.\r\n6. deflate(&_zStream, Z_FINISH)\r\n   This deflate() returns Z_OK instead of Z_STREAM_END\r\n\r\nFor Zlib 1.2.8, 6th step returns Z_STREAM_END. But in Zlib 1.2.11, 6th step returns Z_OK which is\r\na regression.\r\n\r\nOn further debugging, I noticed that step 5 changes the avail_out attribute. It should not be changed. Is this a new behavior for zlib 1.2.11? Can someone please check this. Please do let me know if any other information is required from my side. Will be happy to provide.\r\n\r\nThanks\r\nSankar.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/221", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/221/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/221/events", "html_url": "https://github.com/madler/zlib/issues/221", "id": 206159861, "node_id": "MDU6SXNzdWUyMDYxNTk4NjE=", "number": 221, "title": "missing fclose", "user": {"login": "maddin200", "id": 10232540, "node_id": "MDQ6VXNlcjEwMjMyNTQw", "avatar_url": "https://avatars3.githubusercontent.com/u/10232540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maddin200", "html_url": "https://github.com/maddin200", "followers_url": "https://api.github.com/users/maddin200/followers", "following_url": "https://api.github.com/users/maddin200/following{/other_user}", "gists_url": "https://api.github.com/users/maddin200/gists{/gist_id}", "starred_url": "https://api.github.com/users/maddin200/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maddin200/subscriptions", "organizations_url": "https://api.github.com/users/maddin200/orgs", "repos_url": "https://api.github.com/users/maddin200/repos", "events_url": "https://api.github.com/users/maddin200/events{/privacy}", "received_events_url": "https://api.github.com/users/maddin200/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-08T10:45:36Z", "updated_at": "2017-10-13T04:05:45Z", "closed_at": "2017-10-13T04:05:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "\\contrib\\minizip\\mztools.c line 290\r\n\r\nmissing fclose(fpOutCD);", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/214", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/214/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/214/events", "html_url": "https://github.com/madler/zlib/issues/214", "id": 204112314, "node_id": "MDU6SXNzdWUyMDQxMTIzMTQ=", "number": 214, "title": "Potential division by zero in gzfread/gzfwrite()", "user": {"login": "bnason-nf", "id": 12075374, "node_id": "MDQ6VXNlcjEyMDc1Mzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/12075374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnason-nf", "html_url": "https://github.com/bnason-nf", "followers_url": "https://api.github.com/users/bnason-nf/followers", "following_url": "https://api.github.com/users/bnason-nf/following{/other_user}", "gists_url": "https://api.github.com/users/bnason-nf/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnason-nf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnason-nf/subscriptions", "organizations_url": "https://api.github.com/users/bnason-nf/orgs", "repos_url": "https://api.github.com/users/bnason-nf/repos", "events_url": "https://api.github.com/users/bnason-nf/events{/privacy}", "received_events_url": "https://api.github.com/users/bnason-nf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-30T19:53:39Z", "updated_at": "2017-01-30T20:38:44Z", "closed_at": "2017-01-30T20:38:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI ran the clang static analyzer on zlib 1.2.11 and it reported these potential issues:\r\n\r\n```c\r\nLogic error: Division by zero (zlib/gzread.c:438)\r\nzlib/gzread.c\r\n\r\n   424    \r\n   425        /* check that we're reading and that there's no (serious) error */\r\n   426        if (state->mode != GZ_READ ||\r\n   427                (state->err != Z_OK && state->err != Z_BUF_ERROR))\r\n   428            return 0;\r\n   429    \r\n   430        /* compute bytes to read -- error on overflow */\r\n   431        len = nitems * size;\r\n   432        if (size && len / size != nitems) {\r\n   433            gz_error(state, Z_STREAM_ERROR, \"request does not fit in a size_t\");\r\n   434            return 0;\r\n   435        }\r\n   436    \r\n   437        /* read len or fewer bytes to buf, return the number of full items read */\r\n   438        return len ? gz_read(state, buf, len) / size : 0;\r\n                                                    ^ Logic error: Division by zero\r\n   439    }\r\n   440    \r\n   441    /* -- see zlib.h -- */\r\n   442    #ifdef Z_PREFIX_SET\r\n   443    #  undef z_gzgetc\r\n   444    #else\r\n   445    #  undef gzgetc\r\n   446    #endif\r\n   447    int ZEXPORT gzgetc(file)\r\n   448        gzFile file;\r\n   449    {\r\n   450        int ret;\r\n   451        unsigned char buf[1];\r\n   452        gz_statep state;\r\n \r\nAssuming 'file' is not equal to null\r\nzlib/gzread.c\r\n\r\n   418        gz_statep state;\r\n   419    \r\n   420        /* get internal structure */\r\n   421        if (file == NULL)\r\n                  ^ Assuming 'file' is not equal to null\r\n   422            return 0;\r\n   423        state = (gz_statep)file;\r\n   424    \r\n \r\nAssuming 'len' is not equal to 0\r\nzlib/gzread.c\r\n\r\n   435        }\r\n   436    \r\n   437        /* read len or fewer bytes to buf, return the number of full items read */\r\n   438        return len ? gz_read(state, buf, len) / size : 0;\r\n                     ^ Assuming 'len' is not equal to 0\r\n   439    }\r\n   440    \r\n   441    /* -- see zlib.h -- */\r\n \r\nDivision by zero\r\nzlib/gzread.c\r\n\r\n   435        }\r\n   436    \r\n   437        /* read len or fewer bytes to buf, return the number of full items read */\r\n   438        return len ? gz_read(state, buf, len) / size : 0;\r\n                                                    ^ Division by zero\r\n   439    }\r\n   440    \r\n   441    /* -- see zlib.h -- */\r\n \r\n \r\n----------\r\n\r\nLogic error: Division by zero (zlib/gzwrite.c:300)\r\nzlib/gzwrite.c\r\n\r\n   286        state = (gz_statep)file;\r\n   287    \r\n   288        /* check that we're writing and that there's no error */\r\n   289        if (state->mode != GZ_WRITE || state->err != Z_OK)\r\n   290            return 0;\r\n   291    \r\n   292        /* compute bytes to read -- error on overflow */\r\n   293        len = nitems * size;\r\n   294        if (size && len / size != nitems) {\r\n   295            gz_error(state, Z_STREAM_ERROR, \"request does not fit in a size_t\");\r\n   296            return 0;\r\n   297        }\r\n   298    \r\n   299        /* write len bytes to buf, return the number of full items written */\r\n   300        return len ? gz_write(state, buf, len) / size : 0;\r\n                                                     ^ Logic error: Division by zero\r\n   301    }\r\n   302    \r\n   303    /* -- see zlib.h -- */\r\n   304    int ZEXPORT gzputc(file, c)\r\n   305        gzFile file;\r\n   306        int c;\r\n   307    {\r\n   308        unsigned have;\r\n   309        unsigned char buf[1];\r\n   310        gz_statep state;\r\n   311        z_streamp strm;\r\n   312    \r\n   313        /* get internal structure */\r\n   314        if (file == NULL)\r\n \r\nAssuming 'file' is not equal to null\r\nzlib/gzwrite.c\r\n\r\n   281        gz_statep state;\r\n   282    \r\n   283        /* get internal structure */\r\n   284        if (file == NULL)\r\n                  ^ Assuming 'file' is not equal to null\r\n   285            return 0;\r\n   286        state = (gz_statep)file;\r\n   287    \r\n \r\nAssuming 'len' is not equal to 0\r\nzlib/gzwrite.c\r\n\r\n   297        }\r\n   298    \r\n   299        /* write len bytes to buf, return the number of full items written */\r\n   300        return len ? gz_write(state, buf, len) / size : 0;\r\n                     ^ Assuming 'len' is not equal to 0\r\n   301    }\r\n   302    \r\n   303    /* -- see zlib.h -- */\r\n \r\nDivision by zero\r\nzlib/gzwrite.c\r\n\r\n   297        }\r\n   298    \r\n   299        /* write len bytes to buf, return the number of full items written */\r\n   300        return len ? gz_write(state, buf, len) / size : 0;\r\n                                                     ^ Division by zero\r\n   301    }\r\n   302    \r\n   303    /* -- see zlib.h -- */\r\n```\r\n\r\nI don't know if it's a real concern, but I guess if someone calls gzfread/gzfwrite() with a value of zero for the size parameter, it would crash.\r\n\r\nThanks,\r\nBenbuck", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/213", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/213/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/213/events", "html_url": "https://github.com/madler/zlib/issues/213", "id": 204046260, "node_id": "MDU6SXNzdWUyMDQwNDYyNjA=", "number": 213, "title": "inflate returns Z_DATA_ERROR", "user": {"login": "minhajakhterkhan199", "id": 25435779, "node_id": "MDQ6VXNlcjI1NDM1Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/25435779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minhajakhterkhan199", "html_url": "https://github.com/minhajakhterkhan199", "followers_url": "https://api.github.com/users/minhajakhterkhan199/followers", "following_url": "https://api.github.com/users/minhajakhterkhan199/following{/other_user}", "gists_url": "https://api.github.com/users/minhajakhterkhan199/gists{/gist_id}", "starred_url": "https://api.github.com/users/minhajakhterkhan199/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minhajakhterkhan199/subscriptions", "organizations_url": "https://api.github.com/users/minhajakhterkhan199/orgs", "repos_url": "https://api.github.com/users/minhajakhterkhan199/repos", "events_url": "https://api.github.com/users/minhajakhterkhan199/events{/privacy}", "received_events_url": "https://api.github.com/users/minhajakhterkhan199/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-30T15:45:13Z", "updated_at": "2017-02-02T07:09:17Z", "closed_at": "2017-02-02T06:54:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear,\r\nI am trying to decompress data by calling the inflate function and after decompressing around few thousand bytes inflate through Z_DATA_ERROR  error. Input data is correct and verified by gzip on Ubuntu. \r\nPlease find the function below and advise to resolve the issue.\r\n\r\nint Decompress(unsigned char * pDest, unsigned long * ulDestLen, const unsigned char *  pSource, int iSourceLen)\r\n{\r\n    int ret = 0;\r\n    unsigned int uiUncompressedBytes = 0; // Number of uncompressed bytes returned from inflate() function\r\n    unsigned char * pPositionDestBuffer = pDest; // Current position in dest buffer\r\n    unsigned char * pLastSource = &pSource[iSourceLen]; // Last position in source buffer\r\n    z_stream strm;\r\n\r\n\r\n\r\n    // We should now be at the beginning of the stream data\r\n    /* allocate inflate state */\r\n    strm.zalloc = Z_NULL;\r\n    strm.zfree = Z_NULL;\r\n    strm.opaque = Z_NULL;\r\n    strm.avail_in = 0;\r\n    strm.next_in = Z_NULL;\r\n    //ret = inflateInit2(&strm, MAX_WBITS);         // 40       agay error\r\n    ret = inflateInit2(&strm,16 +  MAX_WBITS);                  // 256 , 258, 64    yaha error\r\n    if (ret != Z_OK)\r\n    {\r\n        tau_printf(\" inflateInit2: %d \\n\\r\",ret);\r\n         Sleep(1);\r\n        return -1;\r\n    }\r\n\r\n    // Uncompress the data\r\n    strm.avail_in = iSourceLen;\r\n    strm.next_in = pSource;\r\n\r\n    do {\r\n            strm.avail_out = *ulDestLen;\r\n            strm.next_out = pPositionDestBuffer;\r\n            ret = inflate(&strm, Z_NO_FLUSH);\r\n            tau_printf(\" ret: %d \\n\\r\",ret);\r\n             Sleep(1);\r\n            assert(ret != Z_STREAM_ERROR);  /* state not clobbered */\r\n            switch (ret)\r\n            {\r\n                case Z_NEED_DICT:\r\n                    ret = Z_DATA_ERROR;     /* and fall through */\r\n                case Z_DATA_ERROR:\r\n                case Z_MEM_ERROR:\r\n                    (void)inflateEnd(&strm);\r\n                return -2;\r\n            }\r\n            uiUncompressedBytes = *ulDestLen - strm.avail_out;\r\n            *ulDestLen -= uiUncompressedBytes; // ulDestSize holds number of free/empty bytes in buffer\r\n            pPositionDestBuffer += uiUncompressedBytes;\r\n    } while (strm.avail_out == 0);\r\n\r\n    // Close the decompression stream\r\n    inflateEnd(&strm);\r\n    assert(ret == Z_STREAM_END);\r\n\r\n    return 0;\r\n} \r\nWaiting for your response. \r\nBest Regards,\r\nMinhaj Akhter\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/212", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/212/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/212/events", "html_url": "https://github.com/madler/zlib/issues/212", "id": 203424890, "node_id": "MDU6SXNzdWUyMDM0MjQ4OTA=", "number": 212, "title": "adler32_combine is broken", "user": {"login": "alejolp", "id": 157891, "node_id": "MDQ6VXNlcjE1Nzg5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/157891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alejolp", "html_url": "https://github.com/alejolp", "followers_url": "https://api.github.com/users/alejolp/followers", "following_url": "https://api.github.com/users/alejolp/following{/other_user}", "gists_url": "https://api.github.com/users/alejolp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alejolp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alejolp/subscriptions", "organizations_url": "https://api.github.com/users/alejolp/orgs", "repos_url": "https://api.github.com/users/alejolp/repos", "events_url": "https://api.github.com/users/alejolp/events{/privacy}", "received_events_url": "https://api.github.com/users/alejolp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-26T16:53:11Z", "updated_at": "2017-01-26T17:47:48Z", "closed_at": "2017-01-26T17:47:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've been using ADLER32 to calculate the checksum of some custom data files and we're trying to speed up the process by doing the checksum in threads in parallel. It is my understanding that adler32_combine allows the combination of independent calculations of ADLER32 checksums for example to be used from independent threads, but a test program gives me a wrong result. After some digging I wrapped up the adler32_combine in my own call:\r\n\r\n```\r\n/*\r\n$ ./a.out\r\nadler32 buffer1: 4, 325013f\r\nadler32 buffer2: 4, 2cb011e\r\nadler32 buffer3: 8, aec025d\r\nadler32_combine: ae8025c\r\nadler32_combine fix: aec025d\r\n*/\r\n\r\nuLong adler32_combine_fix(uLong a1, uLong a2, z_off_t len2) {\r\n    uLong acomb = adler32_combine(a1, a2, len2);\r\n    return (((acomb & 0xffff) + 1) % 65521) | \r\n        (((((acomb >> 16) & 0xffff) + len2) % 65521) << 16);\r\n}\r\n\r\nint main(int argc, char** argv) {\r\n    (void)argc;\r\n    (void)argv;\r\n\r\n    const char* buffer1 = DATA1;\r\n    const char* buffer2 = DATA2;\r\n    const char* buffer3 = DATA1 DATA2;\r\n\r\n    unsigned int len1 = strlen(buffer1);\r\n    unsigned int len2 = strlen(buffer2);\r\n    unsigned int len3 = strlen(buffer3);\r\n\r\n    uLong a1 = adler32(0L, (const Bytef *)buffer1, len1);\r\n    uLong a2 = adler32(0L, (const Bytef *)buffer2, len2);\r\n    uLong a3 = adler32(0L, (const Bytef *)buffer3, len3);\r\n    uLong acomb = adler32_combine(a1, a2, len2);\r\n    uLong acombfix = adler32_combine_fix(a1, a2, len2);\r\n\r\n    printf(\"adler32 buffer1: %u, %lx\\n\", len1, a1);\r\n    printf(\"adler32 buffer2: %u, %lx\\n\", len2, a2);\r\n    printf(\"adler32 buffer3: %u, %lx\\n\", len3, a3);\r\n\r\n    printf(\"adler32_combine: %lx\\n\", acomb);\r\n    printf(\"adler32_combine fix: %lx\\n\", acombfix);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\nWhat do you think? Am I missing something? Thanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/206", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/206/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/206/events", "html_url": "https://github.com/madler/zlib/issues/206", "id": 202014350, "node_id": "MDU6SXNzdWUyMDIwMTQzNTA=", "number": 206, "title": "Deflate failures confirmed in downstreams using 1.2.10 / 1.2.11", "user": {"login": "jeremyjh", "id": 90510, "node_id": "MDQ6VXNlcjkwNTEw", "avatar_url": "https://avatars3.githubusercontent.com/u/90510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyjh", "html_url": "https://github.com/jeremyjh", "followers_url": "https://api.github.com/users/jeremyjh/followers", "following_url": "https://api.github.com/users/jeremyjh/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyjh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyjh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyjh/subscriptions", "organizations_url": "https://api.github.com/users/jeremyjh/orgs", "repos_url": "https://api.github.com/users/jeremyjh/repos", "events_url": "https://api.github.com/users/jeremyjh/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyjh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-01-20T00:20:49Z", "updated_at": "2017-01-26T12:18:27Z", "closed_at": "2017-01-20T16:28:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry this is not a more helpful bug report as I don't know the nature of the issue or have a simple test program but I thought I should leave it here in case it helps others. \r\n\r\nI found a problem this week in the Erlang `dialyzer` program on Arch Linux; it was not able to recognize its own file formats after an update.  I isolated the failure to the recent zlib update and then found someone else from the Arch forum had also found a [zlib problem in an SDL game](https://bbs.archlinux.org/viewtopic.php?id=222116).\r\n\r\n\r\n\r\n@michelboaventura had also seen the `dialyzer` issue using 1.2.11 on gentoo, after hearing it was linked to zlib  he was kind enough to bisect the zlib commit history and isolated the fault to b516b4bdd7c0c9f0858adfebf732089014f7b282 (this is reported in this [thread](http://erlang.org/pipermail/erlang-bugs/2017-January/005206.html)). The same commit was confirmed to be where the issue was introduced in the manaplus game mentioned in the Arch thread.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/204", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/204/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/204/events", "html_url": "https://github.com/madler/zlib/issues/204", "id": 201617855, "node_id": "MDU6SXNzdWUyMDE2MTc4NTU=", "number": 204, "title": "automated version check", "user": {"login": "HTPCGuides", "id": 20207612, "node_id": "MDQ6VXNlcjIwMjA3NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/20207612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HTPCGuides", "html_url": "https://github.com/HTPCGuides", "followers_url": "https://api.github.com/users/HTPCGuides/followers", "following_url": "https://api.github.com/users/HTPCGuides/following{/other_user}", "gists_url": "https://api.github.com/users/HTPCGuides/gists{/gist_id}", "starred_url": "https://api.github.com/users/HTPCGuides/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HTPCGuides/subscriptions", "organizations_url": "https://api.github.com/users/HTPCGuides/orgs", "repos_url": "https://api.github.com/users/HTPCGuides/repos", "events_url": "https://api.github.com/users/HTPCGuides/events{/privacy}", "received_events_url": "https://api.github.com/users/HTPCGuides/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-18T16:11:30Z", "updated_at": "2017-01-18T17:19:25Z", "closed_at": "2017-01-18T17:05:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We include this awesome library when building nginx from scratch, we are having to manually update the zlib version in the script and was hoping there was a way to get the current version via the command line to include in the bash script.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/200", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/200/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/200/events", "html_url": "https://github.com/madler/zlib/issues/200", "id": 200894048, "node_id": "MDU6SXNzdWUyMDA4OTQwNDg=", "number": 200, "title": "Read access violation in inffas32.asm on Win32 build", "user": {"login": "ketjow4", "id": 5654602, "node_id": "MDQ6VXNlcjU2NTQ2MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5654602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ketjow4", "html_url": "https://github.com/ketjow4", "followers_url": "https://api.github.com/users/ketjow4/followers", "following_url": "https://api.github.com/users/ketjow4/following{/other_user}", "gists_url": "https://api.github.com/users/ketjow4/gists{/gist_id}", "starred_url": "https://api.github.com/users/ketjow4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ketjow4/subscriptions", "organizations_url": "https://api.github.com/users/ketjow4/orgs", "repos_url": "https://api.github.com/users/ketjow4/repos", "events_url": "https://api.github.com/users/ketjow4/events{/privacy}", "received_events_url": "https://api.github.com/users/ketjow4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-01-15T21:00:57Z", "updated_at": "2017-11-10T19:36:28Z", "closed_at": "2017-01-21T10:33:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a read access violation in mentioned file. It's on line 669. \r\n\r\nMy setup:\r\n-Visual Studio 2015 Community\r\n-Zlib 1.2.11 sources.\r\n\r\nI downloaded sources compiled library with projects in contrib/vstudio/vc14. Then I linked it to my own project. When i try to run zpipe.c example in x86(win32) there is read access violation. On x64 it works completely fine, both debug and release. This happen on only decompresion. I managed to compress some file with this library that I build. On run I just redirect that compressed file to stdin. My project is c++ if it can change something.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/198", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/198/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/198/events", "html_url": "https://github.com/madler/zlib/issues/198", "id": 199429724, "node_id": "MDU6SXNzdWUxOTk0Mjk3MjQ=", "number": 198, "title": "1.2.10 deflateParams issue", "user": {"login": "pmqs", "id": 2691108, "node_id": "MDQ6VXNlcjI2OTExMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2691108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmqs", "html_url": "https://github.com/pmqs", "followers_url": "https://api.github.com/users/pmqs/followers", "following_url": "https://api.github.com/users/pmqs/following{/other_user}", "gists_url": "https://api.github.com/users/pmqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmqs/subscriptions", "organizations_url": "https://api.github.com/users/pmqs/orgs", "repos_url": "https://api.github.com/users/pmqs/repos", "events_url": "https://api.github.com/users/pmqs/events{/privacy}", "received_events_url": "https://api.github.com/users/pmqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-08T16:05:44Z", "updated_at": "2017-01-15T17:53:25Z", "closed_at": "2017-01-15T17:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code  [here](https://gist.github.com/pmqs/52c1e397a2510bcfe28b037e62a5046a) a hacked version of examples/zpipe.c\r\nThe inflate code has not been changed. The deflate code has been changed to do the following\r\n \r\n\r\n- read block of data\r\n- deflate with Z_NO_FLUSH\r\n- deflate with Z_BLOCK\r\n- deflateParams - level to Z_NO_COMPRESSION\r\n\r\n- read block of data\r\n- deflate with Z_NO_FLUSH\r\n- deflate with Z_FINISH\r\n\r\n\r\n\r\nFirst with zlib 1.2.8\r\n\r\n```\r\n$ zpipe < /etc/dictionaries-common/words >/tmp/xxx\r\n \r\nThis is [1.2.8][1.2.8]\r\nDEFLATE out 2, return 0\r\nFLUSH Z_BLOCK 1254, return 0\r\ndeflateParams Level to Z_NO_COMPRESSION, got 0\r\nDEFLATE out 0, return 0\r\nFLUSH Z_FINISH 4096, return 0\r\nFLUSH Z_FINISH 9, return 1\r\nRET 1\r\n```\r\n\r\nuncompressing with zpipe works without issue.\r\n\r\nNow compress with zlib 1.2.10 \r\n\r\n```\r\n$ zpipe < /etc/dictionaries-common/words >/tmp/xxx\r\nThis is [1.2.10][1.2.10]\r\nDEFLATE out 2, return 0\r\nFLUSH Z_BLOCK 1254, return 0\r\ndeflateParams Level to Z_NO_COMPRESSION, got 0\r\nDEFLATE out 0, return 0\r\nFLUSH Z_FINISH 4096, return 0\r\nFLUSH Z_FINISH 4, return 1\r\nRET 1\r\n```\r\n\r\n\r\n\r\nUncompressing with 1.2.10 I'm seeing Z_DATA_ERROR\r\n\r\n\r\n```\r\n$ zpipe -d </tmp/xxx >/dev/null\r\nThis is [1.2.10][1.2.10]\r\nzpipe: invalid or incomplete deflate data\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/192", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/192/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/192/events", "html_url": "https://github.com/madler/zlib/issues/192", "id": 198424311, "node_id": "MDU6SXNzdWUxOTg0MjQzMTE=", "number": 192, "title": "test suite", "user": {"login": "arekm", "id": 50869, "node_id": "MDQ6VXNlcjUwODY5", "avatar_url": "https://avatars2.githubusercontent.com/u/50869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arekm", "html_url": "https://github.com/arekm", "followers_url": "https://api.github.com/users/arekm/followers", "following_url": "https://api.github.com/users/arekm/following{/other_user}", "gists_url": "https://api.github.com/users/arekm/gists{/gist_id}", "starred_url": "https://api.github.com/users/arekm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arekm/subscriptions", "organizations_url": "https://api.github.com/users/arekm/orgs", "repos_url": "https://api.github.com/users/arekm/repos", "events_url": "https://api.github.com/users/arekm/events{/privacy}", "received_events_url": "https://api.github.com/users/arekm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-03T07:50:07Z", "updated_at": "2017-10-13T04:33:01Z", "closed_at": "2017-10-13T04:33:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure which build method (cmake or old ./configure && make) is the official way now but seems that each of these method runs different test suite at \"make test\".\r\n\r\nThat's the first problem.\r\n\r\nSecond problem is that running old way - \"./configure; make; make test\" doesn't exit with non-zero status if any test fails. exit status is always 0 regardless of actual test result.\r\n\r\nFedora, PLD and possibly other distros use 'make test' to run test suite. With exit status being always 0 that test is useless.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/191", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/191/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/191/events", "html_url": "https://github.com/madler/zlib/issues/191", "id": 198379139, "node_id": "MDU6SXNzdWUxOTgzNzkxMzk=", "number": 191, "title": "rpm-4.11.3 fails to install packages built with zlib-1.2.9 installed", "user": {"login": "chris2553", "id": 12952774, "node_id": "MDQ6VXNlcjEyOTUyNzc0", "avatar_url": "https://avatars0.githubusercontent.com/u/12952774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris2553", "html_url": "https://github.com/chris2553", "followers_url": "https://api.github.com/users/chris2553/followers", "following_url": "https://api.github.com/users/chris2553/following{/other_user}", "gists_url": "https://api.github.com/users/chris2553/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris2553/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris2553/subscriptions", "organizations_url": "https://api.github.com/users/chris2553/orgs", "repos_url": "https://api.github.com/users/chris2553/repos", "events_url": "https://api.github.com/users/chris2553/events{/privacy}", "received_events_url": "https://api.github.com/users/chris2553/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-02T20:44:45Z", "updated_at": "2017-01-03T03:02:40Z", "closed_at": "2017-01-03T03:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've built and installed zlib-1.2.9 on my system (home rolled but based on Linux From Scratch). I've found that rpms created with this system cannot be installed. Nor can their contents be viewed with Midnight Commander (mc).\r\nThe error produced by rpm is:\r\n[chris:~/rpm]$ sudo rpm -i x86_64/whois-5.2.14-1.x86_64.rpm \r\nerror: unpacking of archive failed on file /usr/bin/whois;586aad21: cpio: read failed - No such file or directory\r\nerror: whois-5.2.14-1.x86_64: install failed\r\nWhen trying to view an rpm with mc a dialogue box pops up containing the message \"Premature end of cpio archive\".\r\n\r\nIf I revert to zlib-1.2.8 and rebuild the rpms, everything is OK, although rpms built when zlib-1.2.9 was installed still cannot be installed.\r\n\r\nThis table summarises what I have found:\r\n\r\nBUILD       INSTALL    RESULT\r\n1.2.8            1.2.8         GOOD\r\n1.2.8            1.2.9         GOOD\r\n1.2.9            1.2.8         FAIL\r\n1.2.9            1.2.9         FAIL\r\n\r\nI've bisected the problem and that ended with:\r\n[chris:~/build/zlib]$ git bisect bad\r\n4f1df003ed39280c2e4f62581888a62def3e34fe is the first bad commit\r\ncommit 4f1df003ed39280c2e4f62581888a62def3e34fe\r\nAuthor: Mark Adler <madler@alumni.caltech.edu>\r\nDate:   Tue Apr 5 03:09:59 2016 -0700\r\n\r\n    Loop on write() calls in gzwrite.c in case of non-blocking I/O.\r\n\r\n:100644 100644 efff93af013c756fd22808e171ce412d18606a36 f07731a423e5d19444c563bd1340ed83be271c41 M      gzwrite.c\r\n\r\nUnfortunately, this commit does not revert because of subsequent commits, so I haven't tried that.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/190", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/190/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/190/events", "html_url": "https://github.com/madler/zlib/issues/190", "id": 198350074, "node_id": "MDU6SXNzdWUxOTgzNTAwNzQ=", "number": 190, "title": "1.2.9 deflateParams API change", "user": {"login": "pmqs", "id": 2691108, "node_id": "MDQ6VXNlcjI2OTExMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2691108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmqs", "html_url": "https://github.com/pmqs", "followers_url": "https://api.github.com/users/pmqs/followers", "following_url": "https://api.github.com/users/pmqs/following{/other_user}", "gists_url": "https://api.github.com/users/pmqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmqs/subscriptions", "organizations_url": "https://api.github.com/users/pmqs/orgs", "repos_url": "https://api.github.com/users/pmqs/repos", "events_url": "https://api.github.com/users/pmqs/events{/privacy}", "received_events_url": "https://api.github.com/users/pmqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-02T15:32:11Z", "updated_at": "2017-01-31T13:08:20Z", "closed_at": "2017-01-03T03:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "My Perl interface to zlib exposes the deflateParams function. This is currently broken with 1.2.9.\r\n\r\nLooking at the difference in the documentaion for deflateParams between the 1.2.8 and 1.2.9 it looks like a backward incompatible API change.\r\n\r\nThis is what 1.2.8 says about deflateParams\r\n\r\n```\r\n     Before the call of deflateParams, the stream state must be set as for\r\n   a call of deflate(), since the currently available input may have to be\r\n   compressed and flushed.  In particular, strm->avail_out must be non-zero.\r\n```\r\n\r\n\r\nNote the final sentence. I used that in my code so I could get by with setting strm->avail_out to 1. That meant that the internal state in my mapping code only had to remember one extra compressed byte to output with the next call to deflate.\r\n\r\nzlib 1.2.9 seems to have changed that and I'm seeing deflateParams fail with Z_BUF_ERROR. That ties in with the new documentation for deflateParams as it now expects to be able to flush all internal data to the output buffer.\r\n\r\nI can code around the API change, but wonder if this change will break anything else?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/189", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/189/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/189/events", "html_url": "https://github.com/madler/zlib/issues/189", "id": 198330168, "node_id": "MDU6SXNzdWUxOTgzMzAxNjg=", "number": 189, "title": "access to start and stop markers in a stream of compressed files", "user": {"login": "ingvarha", "id": 1633022, "node_id": "MDQ6VXNlcjE2MzMwMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1633022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ingvarha", "html_url": "https://github.com/ingvarha", "followers_url": "https://api.github.com/users/ingvarha/followers", "following_url": "https://api.github.com/users/ingvarha/following{/other_user}", "gists_url": "https://api.github.com/users/ingvarha/gists{/gist_id}", "starred_url": "https://api.github.com/users/ingvarha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ingvarha/subscriptions", "organizations_url": "https://api.github.com/users/ingvarha/orgs", "repos_url": "https://api.github.com/users/ingvarha/repos", "events_url": "https://api.github.com/users/ingvarha/events{/privacy}", "received_events_url": "https://api.github.com/users/ingvarha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-02T12:39:22Z", "updated_at": "2017-01-26T04:56:18Z", "closed_at": "2017-01-26T04:48:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Two years ago today, I posted this issue to the zlib-devel list. To celebrate this, I'll add a github issue to track any further progress.\r\n\r\nVarnish, a fast web cache, uses a library libvgz, which is zlib with a small patch. This patch gives access to start and stop markers in a stream of compressed files. Varnish uses this to sort out edge side includes when putting together http pages from backend servers for http clients. The patch was originally written by Paul-Henning Kamp. He has written some more high level info about the usage of zlib in varnish here: https://varnish-cache.org/docs/trunk/phk/gzip.html\r\n\r\nAs the downstream maintainer of varnish in Fedora, I would like to see these features added to zlib if possible, to avoid bundling a zlib fork with varnish.\r\n\r\nJohn Reiser added, on the zlib-devel list, in a followup post:\r\n\r\n> A call to  deflate(strm, SYNC_FLUSH);  will align the stream to a byte boundary.\r\n> This works even for (0 == strm->avail_in), so such a call may be inserted after any\r\n> other call to deflate(), without modifying or interfering with any existing logic.\r\n> The space cost for aligning the stream is the cost for an empty [zero-length]\r\n> stored block: three bits, plus filler bits to the next byte boundary, plus\r\n> four bytes (00 00 ff ff); see the comments which follow the declaration of\r\n> deflate() in zlib.h.\r\n> \r\n> Thus it seems to me that the varnish patch is equivalent to an optimization\r\n> to save about 5 bytes of space per marker in the output stream.\r\n> Is this savings valuable enough to make the patch worthwhile? \r\n\r\n\r\nI stripped down the changes to a minimal patch attached here. It applies cleanly and runs the test suite on Linux.\r\n\r\nPlease consider including it in zlib\r\n\r\nBest regards,\r\nIngvar Hagelund\r\n\r\n[varnish_zlib.patch.txt](https://github.com/madler/zlib/files/680760/varnish_zlib.patch.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/185", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/185/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/185/events", "html_url": "https://github.com/madler/zlib/issues/185", "id": 198278517, "node_id": "MDU6SXNzdWUxOTgyNzg1MTc=", "number": 185, "title": "Visual studio static code analysis on latest release", "user": {"login": "boxerab", "id": 95393, "node_id": "MDQ6VXNlcjk1Mzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/95393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxerab", "html_url": "https://github.com/boxerab", "followers_url": "https://api.github.com/users/boxerab/followers", "following_url": "https://api.github.com/users/boxerab/following{/other_user}", "gists_url": "https://api.github.com/users/boxerab/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxerab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxerab/subscriptions", "organizations_url": "https://api.github.com/users/boxerab/orgs", "repos_url": "https://api.github.com/users/boxerab/repos", "events_url": "https://api.github.com/users/boxerab/events{/privacy}", "received_events_url": "https://api.github.com/users/boxerab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-01T19:27:02Z", "updated_at": "2019-07-15T21:15:01Z", "closed_at": "2017-01-01T19:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for maintaining this library!\r\n\r\nHere are some warnings from visual studio 2015:   \r\n\r\n\r\n    \\gzlib.c(214): warning C6031: Return value ignored: 'snprintf'.\r\n    \\gzlib.c(296): warning C6031: Return value ignored: 'snprintf'.\r\n    \\gzlib.c(611): warning C6031: Return value ignored: 'snprintf'.\r\n    \\gzread.c(100): warning C6297: Arithmetic overflow:  32-bit value is shifted, then cast to 64-bit value.      Results might not be an expected value.\r\n     \\gzread.c(513): warning C6297: Arithmetic overflow:  32-bit value is shifted, then cast to 64-bit value.  Results might not be an expected value.\r\n     \\gzread.c(529): warning C6297: Arithmetic overflow:  32-bit value is shifted, then cast to 64-bit value.  Results might not be an expected value.\r\n     \\gzwrite.c(24): warning C6297: Arithmetic overflow:  32-bit value is shifted, then cast to 64-bit value.  Results might not be an expected value.\r\n     trees.c(534): warning C6385: Reading invalid data from 's->bl_count':  the readable size is '32' bytes, but '-2' bytes may be read.\r\n     \\trees.c(550): warning C6385: Reading invalid data from 's->bl_count':  the readable size is '32' bytes, but 'bits' bytes may be read.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/183", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/183/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/183/events", "html_url": "https://github.com/madler/zlib/issues/183", "id": 198234366, "node_id": "MDU6SXNzdWUxOTgyMzQzNjY=", "number": 183, "title": "shifting a negative signed value is undefined (\"-1L << 16\" in inflate.c)", "user": {"login": "cliffordwolf", "id": 619764, "node_id": "MDQ6VXNlcjYxOTc2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/619764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cliffordwolf", "html_url": "https://github.com/cliffordwolf", "followers_url": "https://api.github.com/users/cliffordwolf/followers", "following_url": "https://api.github.com/users/cliffordwolf/following{/other_user}", "gists_url": "https://api.github.com/users/cliffordwolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/cliffordwolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cliffordwolf/subscriptions", "organizations_url": "https://api.github.com/users/cliffordwolf/orgs", "repos_url": "https://api.github.com/users/cliffordwolf/repos", "events_url": "https://api.github.com/users/cliffordwolf/events{/privacy}", "received_events_url": "https://api.github.com/users/cliffordwolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-31T14:34:08Z", "updated_at": "2016-12-31T17:17:54Z", "closed_at": "2016-12-31T16:16:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "inflate.c triggers the following warning in clang version 3.8.0-2ubuntu4:\r\n\r\n```\r\ninflate.c:1507:61: warning: shifting a negative signed value is undefined [-Wshift-negative-value]\r\n    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;\r\n                                                        ~~~ ^\r\n```\r\n\r\nI believe `~0UL << 16` has defined behavior and yields the expected result.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/173", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/173/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/173/events", "html_url": "https://github.com/madler/zlib/issues/173", "id": 188440018, "node_id": "MDU6SXNzdWUxODg0NDAwMTg=", "number": 173, "title": "Crash in deflateEnd", "user": {"login": "Windeal", "id": 8803957, "node_id": "MDQ6VXNlcjg4MDM5NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8803957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Windeal", "html_url": "https://github.com/Windeal", "followers_url": "https://api.github.com/users/Windeal/followers", "following_url": "https://api.github.com/users/Windeal/following{/other_user}", "gists_url": "https://api.github.com/users/Windeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Windeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Windeal/subscriptions", "organizations_url": "https://api.github.com/users/Windeal/orgs", "repos_url": "https://api.github.com/users/Windeal/repos", "events_url": "https://api.github.com/users/Windeal/events{/privacy}", "received_events_url": "https://api.github.com/users/Windeal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-10T07:39:14Z", "updated_at": "2016-12-30T22:27:33Z", "closed_at": "2016-12-30T22:27:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to compress network stream by `deflate`, my code as below, \r\n```\r\ndeflateInit2_(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL,\r\n                         Z_DEFAULT_STRATEGY, version, stream_size);\r\n```\r\n\r\n```\r\nint SpdySession::deflate(std::string& out, const uint8_t* in, size_t inlen) {\r\n  if (!compress_body_) {\r\n    out.resize(inlen);\r\n    memcpy((uint8_t*)out.c_str(), in, inlen);\r\n    return 0;\r\n  }\r\n  int outlen = deflateBound(&zstream_, inlen);\r\n  out.resize(outlen);\r\n  zstream_.avail_in = inlen;\r\n  zstream_.next_in = (uint8_t*)in;\r\n  zstream_.avail_out = outlen;\r\n  zstream_.next_out = (uint8_t*)&out[0];\r\n\r\n  int rv, ret = 0;\r\n  rv = deflateParams(&zstream_, COMPRESSION_LEVEL, Z_DEFAULT_STRATEGY);\r\n  LOG(INFO) << \"ENABLE compress request body \" << this;\r\n  assert(Z_OK == rv);\r\n\r\n  rv = ::deflate(&zstream_, Z_SYNC_FLUSH);\r\n  if (rv == Z_OK) {\r\n    outlen = outlen - zstream_.avail_out;\r\n    out.resize(outlen);\r\n    ret = 0;\r\n  } else {\r\n    ret = -1;\r\n  }\r\n\r\n  return ret;\r\n}\r\n```\r\n\r\nand then, when encounter EOF of stream,  my program crash in `deflateEnd`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/172", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/172/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/172/events", "html_url": "https://github.com/madler/zlib/issues/172", "id": 185173075, "node_id": "MDU6SXNzdWUxODUxNzMwNzU=", "number": 172, "title": "Assert fails with Z_HUFFMAN_ONLY", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-25T16:49:13Z", "updated_at": "2016-10-28T05:57:18Z", "closed_at": "2016-10-28T05:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I define `DEBUG`, ZLib is failing this assertion for one of my cases:\n\n```\nAssert(buf != (char*)0, \"lost buf\");\n```\n\nThe assertion is from this line:\nhttps://github.com/madler/zlib/blob/master/trees.c#L951\n\nIs this something I should be worried about? If necessary, I can put together a stand-alone program that reproduces the defect but before I do that work I want to know if it is an actual problem. If I don't define `DEBUG` everything seems to work. Here is my test code:\nhttps://github.com/vinniefalco/Beast/blob/zlib/test/zlib/deflate_stream.cpp#L317\n\nThat line fails when `level=0`, `windowBits=9`, and `strategy=2` (these are the parameters used in the call to `deflateInit2`).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/171", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/171/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/171/events", "html_url": "https://github.com/madler/zlib/issues/171", "id": 184723909, "node_id": "MDU6SXNzdWUxODQ3MjM5MDk=", "number": 171, "title": "deflate bug with windowBits == 8?", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-10-23T23:30:40Z", "updated_at": "2019-09-12T12:26:37Z", "closed_at": "2016-10-24T00:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "What's all this about?\n\n```\n    if (windowBits == 8) windowBits = 9;  /* until 256-byte window bug fixed */\n```\n\nhttps://github.com/madler/zlib/blob/master/deflate.c#L276\n\nDoes this mean that 256-byte windows are broken?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/166", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/166/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/166/events", "html_url": "https://github.com/madler/zlib/issues/166", "id": 178266210, "node_id": "MDU6SXNzdWUxNzgyNjYyMTA=", "number": 166, "title": "make vc14 (Visual Studio 2015) Project files.", "user": {"login": "AraHaan", "id": 15173749, "node_id": "MDQ6VXNlcjE1MTczNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/15173749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AraHaan", "html_url": "https://github.com/AraHaan", "followers_url": "https://api.github.com/users/AraHaan/followers", "following_url": "https://api.github.com/users/AraHaan/following{/other_user}", "gists_url": "https://api.github.com/users/AraHaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AraHaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AraHaan/subscriptions", "organizations_url": "https://api.github.com/users/AraHaan/orgs", "repos_url": "https://api.github.com/users/AraHaan/repos", "events_url": "https://api.github.com/users/AraHaan/events{/privacy}", "received_events_url": "https://api.github.com/users/AraHaan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-21T07:18:52Z", "updated_at": "2017-01-02T06:33:24Z", "closed_at": "2017-01-02T06:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be very simple if there was project files for vc14, I use the latest supplied in VS2015.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/165", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/165/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/165/events", "html_url": "https://github.com/madler/zlib/issues/165", "id": 178263863, "node_id": "MDU6SXNzdWUxNzgyNjM4NjM=", "number": 165, "title": "Compress or decompress data specified by a pointer.", "user": {"login": "AraHaan", "id": 15173749, "node_id": "MDQ6VXNlcjE1MTczNzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/15173749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AraHaan", "html_url": "https://github.com/AraHaan", "followers_url": "https://api.github.com/users/AraHaan/followers", "following_url": "https://api.github.com/users/AraHaan/following{/other_user}", "gists_url": "https://api.github.com/users/AraHaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AraHaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AraHaan/subscriptions", "organizations_url": "https://api.github.com/users/AraHaan/orgs", "repos_url": "https://api.github.com/users/AraHaan/repos", "events_url": "https://api.github.com/users/AraHaan/events{/privacy}", "received_events_url": "https://api.github.com/users/AraHaan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-21T07:05:17Z", "updated_at": "2016-10-25T04:17:26Z", "closed_at": "2016-10-25T04:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like for there to be a version of comression and decompression where the data that is being pointed would be compressed or decompressed without modifying the original file so that way I can only write the compressed data in a mass body file of all files that I need to process with zlib only to append a special xml header with some other data on top. Also another reason why on this is because I would have to calculate Crc32's for the XML as well.\n\nBut the unfortunate thing is that it would have to process the data the pointer is pointing to and point to that data's compressed / decompressed data. But it is better than overwriting the original files.\n\nYeah Granted the ones that requires a opened file may or may not write to the file that was opened. Who knows. But yeah having a little memory compression/decompression only that is pointed to would be helpful for me. Also it would be nice t have a example on how to use the CRC32 functions as well. I find the example of a simple one on the zlib website to not include CRC32.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/158", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/158/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/158/events", "html_url": "https://github.com/madler/zlib/issues/158", "id": 165943410, "node_id": "MDU6SXNzdWUxNjU5NDM0MTA=", "number": 158, "title": "Small issues spotted by static analyzers", "user": {"login": "irwir", "id": 20182149, "node_id": "MDQ6VXNlcjIwMTgyMTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/20182149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irwir", "html_url": "https://github.com/irwir", "followers_url": "https://api.github.com/users/irwir/followers", "following_url": "https://api.github.com/users/irwir/following{/other_user}", "gists_url": "https://api.github.com/users/irwir/gists{/gist_id}", "starred_url": "https://api.github.com/users/irwir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irwir/subscriptions", "organizations_url": "https://api.github.com/users/irwir/orgs", "repos_url": "https://api.github.com/users/irwir/repos", "events_url": "https://api.github.com/users/irwir/events{/privacy}", "received_events_url": "https://api.github.com/users/irwir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-16T19:14:24Z", "updated_at": "2016-12-30T22:33:03Z", "closed_at": "2016-12-30T22:33:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "1) According to standards there is no need to check pointer for null before calling _free()_.\nThat means, lines 97 and 99 in _zlib\\gzread.c_ could be removed.\nAlso in _zlib\\contrib\\minizip\\unzip.c_ and _zlib\\contrib\\minizip\\zip.c_ macro TRYFREE() might be simplified or replaced with direct free() calls.\n\n2) Inconsistency with _szComment_ pointer usage in  function\n_extern int ZEXPORT unzGetGlobalComment (unzFile file, char \\* szComment, uLong uSizeBuf)_, file _zlib\\contrib\\minizip\\unzip.c_.\nThe pointer is dereferenced in line 2068, but checked for null at line 2073.\nIf check for null is necessary then probably it might be moved up to line 2055 like this:\n`if (file==NULL || szComment==NULL)`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/154", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/154/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/154/events", "html_url": "https://github.com/madler/zlib/issues/154", "id": 164664745, "node_id": "MDU6SXNzdWUxNjQ2NjQ3NDU=", "number": 154, "title": "BUG: fixed tables don't match the generated output", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-09T12:19:41Z", "updated_at": "2016-10-24T06:15:08Z", "closed_at": "2016-10-24T06:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that the fixed table constants in inffixed.h don't match the output produced by `fixedtables()` when `BUILDFIXED` is defined.\n\nThe differences occur in array indexes 99, 227, 335, and 483 of the `lencode` table. When `BUILDFIXED` is defined, these elements have `code::op` equal to 72, 78, 72, and 78 respectively. But in the fixed table constants, `op` is 64.\n\nDoes this matter?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/149", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/149/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/149/events", "html_url": "https://github.com/madler/zlib/issues/149", "id": 159625319, "node_id": "MDU6SXNzdWUxNTk2MjUzMTk=", "number": 149, "title": "Bug in deflate with Z_FULL_FLUSH and a specific output buffer size", "user": {"login": "vinniefalco", "id": 1503976, "node_id": "MDQ6VXNlcjE1MDM5NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1503976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinniefalco", "html_url": "https://github.com/vinniefalco", "followers_url": "https://api.github.com/users/vinniefalco/followers", "following_url": "https://api.github.com/users/vinniefalco/following{/other_user}", "gists_url": "https://api.github.com/users/vinniefalco/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinniefalco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinniefalco/subscriptions", "organizations_url": "https://api.github.com/users/vinniefalco/orgs", "repos_url": "https://api.github.com/users/vinniefalco/repos", "events_url": "https://api.github.com/users/vinniefalco/events{/privacy}", "received_events_url": "https://api.github.com/users/vinniefalco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-10T12:33:51Z", "updated_at": "2016-06-10T17:01:39Z", "closed_at": "2016-06-10T15:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When `deflate` is called with a buffer that is exactly large enough to hold the output, `avail_out` comes back as zero. As per the ZLib documentation:\n\n_If deflate returns Z_OK and with zero avail_out, it must be called again after making room in the output buffer because there might be more output pending._\n\nNote that in this case, the sync trailer has already been emitted (0x00, 0x00, 0xff, 0xff). On the subsequent call to `deflate`, a second sync trailer is emitted. This results in an unnecessary 4 bytes being added to the output.\n\nThis example program illustrates the problem. The result of compress should be the same no matter the value of `availOut`. But it isn't, the first string is 24 bytes in size and the second string is 19 bytes in size even though both inflate to the same result.\n\n```\n#include <iostream>\n#include <zlib.h>\n\nstd::string\ncompress(std::string const& in, std::size_t availOut)\n{\n    z_stream zs;\n    zs.zalloc = Z_NULL;\n    zs.zfree = Z_NULL;\n    zs.opaque = Z_NULL;\n    zs.avail_in = 0;\n    zs.next_in = Z_NULL;\n    deflateInit2(&zs,\n        Z_DEFAULT_COMPRESSION,\n        Z_DEFLATED, -15,\n        4, // memory level 1-9\n        Z_DEFAULT_STRATEGY\n    );\n\n    std::string out;\n    zs.avail_in = in.size();\n    zs.next_in = (Bytef*)in.data();\n    do\n    {\n        out.resize(out.size() + availOut);\n        zs.avail_out = availOut;\n        zs.next_out = (Bytef*)&out[zs.total_out];\n        deflate(&zs, Z_FULL_FLUSH);\n    }\n    while(zs.avail_out == 0);\n    out.resize(zs.total_out);\n    deflateEnd(&zs);\n    return out;\n}\n\nint main()\n{\n    auto s1 = compress(\"Hello, world!\", 19);\n    auto s2 = compress(\"Hello, world!\", 30);\n\n    if(s1 != s2)\n        std::cerr << \"Strings are different!\";\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/136", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/136/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/136/events", "html_url": "https://github.com/madler/zlib/issues/136", "id": 142946706, "node_id": "MDU6SXNzdWUxNDI5NDY3MDY=", "number": 136, "title": "minizip creates corrupted zip files and miniunz cannot open zip files", "user": {"login": "leinadn", "id": 17905166, "node_id": "MDQ6VXNlcjE3OTA1MTY2", "avatar_url": "https://avatars3.githubusercontent.com/u/17905166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leinadn", "html_url": "https://github.com/leinadn", "followers_url": "https://api.github.com/users/leinadn/followers", "following_url": "https://api.github.com/users/leinadn/following{/other_user}", "gists_url": "https://api.github.com/users/leinadn/gists{/gist_id}", "starred_url": "https://api.github.com/users/leinadn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leinadn/subscriptions", "organizations_url": "https://api.github.com/users/leinadn/orgs", "repos_url": "https://api.github.com/users/leinadn/repos", "events_url": "https://api.github.com/users/leinadn/events{/privacy}", "received_events_url": "https://api.github.com/users/leinadn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-23T12:25:38Z", "updated_at": "2016-03-23T12:30:27Z", "closed_at": "2016-03-23T12:30:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found the reason why this happens:\n\nIn the file of zlib-1.2.8\\contrib\\minizip\\iowin32.c\nin function of\n`long ZCALLBACK win32_seek64_file_func (voidpf opaque, voidpf stream, ZPOS64_T offset, int origin)`\nthe line\n`if (!MySetFilePointerEx(hFile, pos, NULL, FILE_CURRENT))`\nshould be\n`if (!MySetFilePointerEx(hFile, pos, NULL, dwMoveMethod))`\n\nand in function of\n`static BOOL MySetFilePointerEx(HANDLE hFile, LARGE_INTEGER pos, LARGE_INTEGER *newPos,  DWORD dwMoveMethod)`\nthe line\n`DWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, FILE_CURRENT);`\nshould be\n`DWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, dwMoveMethod);`\n\nThese two errors look simple mistyping/copy paste errors. FILE_CURRENT was used instead of the correct move methods. Interesting though that no one has complained about this issue.\n\nTo make things work on Win7 with VC14 I had to add\n`#undef IOWIN32_USING_WINRT_API`\nafter the lines of\n`#if defined(WINAPI_FAMILY_PARTITION) && (!(defined(IOWIN32_USING_WINRT_API)))`\n`#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)`\n`#define IOWIN32_USING_WINRT_API 1`\n`#endif`\n`#endif`\nThere is an open bug for this issue already (zlib 1.2.8 always uses Windows 8 - level API #49)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/128", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/128/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/128/events", "html_url": "https://github.com/madler/zlib/issues/128", "id": 130636940, "node_id": "MDU6SXNzdWUxMzA2MzY5NDA=", "number": 128, "title": "iowin32.c, invalid MySetFilePointerEx() in version 1.2.8", "user": {"login": "jvanlabeke", "id": 17023270, "node_id": "MDQ6VXNlcjE3MDIzMjcw", "avatar_url": "https://avatars0.githubusercontent.com/u/17023270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanlabeke", "html_url": "https://github.com/jvanlabeke", "followers_url": "https://api.github.com/users/jvanlabeke/followers", "following_url": "https://api.github.com/users/jvanlabeke/following{/other_user}", "gists_url": "https://api.github.com/users/jvanlabeke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanlabeke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanlabeke/subscriptions", "organizations_url": "https://api.github.com/users/jvanlabeke/orgs", "repos_url": "https://api.github.com/users/jvanlabeke/repos", "events_url": "https://api.github.com/users/jvanlabeke/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanlabeke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-02T10:13:53Z", "updated_at": "2017-01-02T06:33:58Z", "closed_at": "2017-01-02T06:33:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code has been factored from previous versions in a MySetFilePointerEx() method which use a dwMoveMethod argument. The code always use the hard value FILE_CURRENT instead of the argument. \n\nVersion 1.2.8:\n`static BOOL MySetFilePointerEx(HANDLE hFile, LARGE_INTEGER pos, LARGE_INTEGER *newPos,  DWORD dwMoveMethod)\n{\n# ifdef IOWIN32_USING_WINRT_API\n\n```\nreturn SetFilePointerEx(hFile, pos, newPos, dwMoveMethod);\n```\n# else\n\n```\nLONG lHigh = pos.HighPart;\nDWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, `**FILE_CURRENT**`);`\n```\n\nshould be:\n`static BOOL MySetFilePointerEx(HANDLE hFile, LARGE_INTEGER pos, LARGE_INTEGER *newPos,  DWORD dwMoveMethod)\n    {\n# ifdef IOWIN32_USING_WINRT_API\n\n```\n return SetFilePointerEx(hFile, pos, newPos, dwMoveMethod);\n```\n# else\n\n```\nLONG lHigh = pos.HighPart;\nDWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, `**dwMoveMethod**`);`\n```\n\nThere is a similar issue in the win32_seek64_file_func() method when calling MySetFilePointerEx()\n\nversion 1.2.8:\n`if (hFile)\n    {\n        LARGE_INTEGER pos;\n        pos.QuadPart = offset;\n        if (!MySetFilePointerEx(hFile, pos, NULL,`**FILE_CURRENT**`))`\n\nshould be:\n\n`if (hFile)\n    {\n        LARGE_INTEGER pos;\n        pos.QuadPart = offset;\n        if (!MySetFilePointerEx(hFile, pos, NULL,`**dwMoveMethod**`))`\n\nRegards\nJulien\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/122", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/122/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/122/events", "html_url": "https://github.com/madler/zlib/issues/122", "id": 123108659, "node_id": "MDU6SXNzdWUxMjMxMDg2NTk=", "number": 122, "title": "deflate.c:887:54: runtime error: left shift of negative value -1", "user": {"login": "crrodriguez", "id": 44466, "node_id": "MDQ6VXNlcjQ0NDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/44466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crrodriguez", "html_url": "https://github.com/crrodriguez", "followers_url": "https://api.github.com/users/crrodriguez/followers", "following_url": "https://api.github.com/users/crrodriguez/following{/other_user}", "gists_url": "https://api.github.com/users/crrodriguez/gists{/gist_id}", "starred_url": "https://api.github.com/users/crrodriguez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crrodriguez/subscriptions", "organizations_url": "https://api.github.com/users/crrodriguez/orgs", "repos_url": "https://api.github.com/users/crrodriguez/repos", "events_url": "https://api.github.com/users/crrodriguez/events{/privacy}", "received_events_url": "https://api.github.com/users/crrodriguez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-19T20:19:57Z", "updated_at": "2016-10-25T01:45:42Z", "closed_at": "2016-10-25T01:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "883     /\\* Make sure there is something to do and avoid duplicate consecutive\n 884      \\* flushes. For repeated and useless calls with Z_FINISH, we keep\n 885      \\* returning Z_STREAM_END instead of Z_BUF_ERROR.\n 886      */\n 887     } else if (strm->avail_in == 0 && RANK(flush) <= RANK(old_flush) &&\n 888                flush != Z_FINISH) {\n 889         ERR_RETURN(strm, Z_BUF_ERROR);\n 890     }\n\nold_flush may be -1.. RANK(-1) produces undefined behaviour.\n\nHow to reproduce : \n\nBuild with gcc 5.2 and fsanitize=undefined\nrun make check.\n\nhello world\nzlib version 1.2.8 = 0x1280, compile flags = 0xa9\nuncompress(): hello, hello!\ngzread(): hello, hello!\ngzgets() after gzseek:  hello!\ndeflate.c:887:54: runtime error: left shift of negative value -1\ninflate(): hello, hello!\nlarge_inflate(): OK\nafter inflateSync(): hello, hello!\ninflate with dictionary: hello, hello!\n                **\\* zlib test OK ***\nhello world\nzlib version 1.2.8 = 0x1280, compile flags = 0xa9\nuncompress(): hello, hello!\ngzread(): hello, hello!\ngzgets() after gzseek:  hello!\ndeflate.c:887:54: runtime error: left shift of negative value -1\ninflate(): hello, hello!\nlarge_inflate(): OK\nafter inflateSync(): hello, hello!\ninflate with dictionary: hello, hello!\n                **\\* zlib shared test OK ***\nhello world\nzlib version 1.2.8 = 0x1280, compile flags = 0xa9\nuncompress(): hello, hello!\ngzread(): hello, hello!\ngzgets() after gzseek:  hello!\ndeflate.c:887:54: runtime error: left shift of negative value -1\ninflate(): hello, hello!\nlarge_inflate(): OK\nafter inflateSync(): hello, hello!\ninflate with dictionary: hello, hello!\n                **\\* zlib 64-bit test OK ***\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/121", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/121/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/121/events", "html_url": "https://github.com/madler/zlib/issues/121", "id": 122126071, "node_id": "MDU6SXNzdWUxMjIxMjYwNzE=", "number": 121, "title": "OS_CODE documentation correction", "user": {"login": "ianhays", "id": 2606879, "node_id": "MDQ6VXNlcjI2MDY4Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianhays", "html_url": "https://github.com/ianhays", "followers_url": "https://api.github.com/users/ianhays/followers", "following_url": "https://api.github.com/users/ianhays/following{/other_user}", "gists_url": "https://api.github.com/users/ianhays/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianhays/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianhays/subscriptions", "organizations_url": "https://api.github.com/users/ianhays/orgs", "repos_url": "https://api.github.com/users/ianhays/repos", "events_url": "https://api.github.com/users/ianhays/events{/privacy}", "received_events_url": "https://api.github.com/users/ianhays/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-14T20:39:01Z", "updated_at": "2016-10-25T21:19:28Z", "closed_at": "2016-10-25T21:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for using Zlib to write a GZip header seems to be incorrect on the behavior of how the header fields are set.\n\nThe docs: `If deflateSetHeader is not used, the default gzip header has text false, the time set to zero, and os set to 255, with no extra, name, or comment fields.`\n\nHowever, in update 1.2.2.2 (30 December 2004) this behavior was changed to use OS_CODE in the deflate() default gzip header.\n\nOn my Windows machine this results in zlib setting the gzip header to have the OS field set to 0 rather than 255.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/117", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/117/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/117/events", "html_url": "https://github.com/madler/zlib/issues/117", "id": 117125312, "node_id": "MDU6SXNzdWUxMTcxMjUzMTI=", "number": 117, "title": "Might want to drop the local and OF preprocessor defines", "user": {"login": "schwehr", "id": 389869, "node_id": "MDQ6VXNlcjM4OTg2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/389869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schwehr", "html_url": "https://github.com/schwehr", "followers_url": "https://api.github.com/users/schwehr/followers", "following_url": "https://api.github.com/users/schwehr/following{/other_user}", "gists_url": "https://api.github.com/users/schwehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/schwehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schwehr/subscriptions", "organizations_url": "https://api.github.com/users/schwehr/orgs", "repos_url": "https://api.github.com/users/schwehr/repos", "events_url": "https://api.github.com/users/schwehr/events{/privacy}", "received_events_url": "https://api.github.com/users/schwehr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-11-16T13:42:43Z", "updated_at": "2016-10-26T17:36:48Z", "closed_at": "2016-10-26T17:36:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI just submitted a patch to minizip in GDAL that you might be interested in (aside from the C++ parts):\n\nhttps://trac.osgeo.org/gdal/changeset/31508\n\nThe 2 main things are to drop the `local` and `OF` pre-processor `#defines`.  It seems like modern debuggers should all be able to handle static functions and worrying about K&R C support these days is not worth it.  If you disagree, I'd love to hear why.  I tried looking at the mailing list archives to see if this had been discussed, but they 404 at the moment.\n\nPardon the C++ noise in the GDAL patch.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/111", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/111/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/111/events", "html_url": "https://github.com/madler/zlib/issues/111", "id": 105000061, "node_id": "MDU6SXNzdWUxMDUwMDAwNjE=", "number": 111, "title": "Build warning in inflate.c with clang 3.7", "user": {"login": "ehsan", "id": 168508, "node_id": "MDQ6VXNlcjE2ODUwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/168508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehsan", "html_url": "https://github.com/ehsan", "followers_url": "https://api.github.com/users/ehsan/followers", "following_url": "https://api.github.com/users/ehsan/following{/other_user}", "gists_url": "https://api.github.com/users/ehsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehsan/subscriptions", "organizations_url": "https://api.github.com/users/ehsan/orgs", "repos_url": "https://api.github.com/users/ehsan/repos", "events_url": "https://api.github.com/users/ehsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ehsan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-05T03:33:17Z", "updated_at": "2015-09-06T00:49:12Z", "closed_at": "2015-09-06T00:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this when building Firefox with clang 3.7:\n\n```\n 4:38.27 /Users/ehsan/moz/src/modules/zlib/src/inflate.c:1507:61: error: shifting a negative signed value is undefined [-Werror,-Wshift-negative-value]\n 4:38.27     if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;\n 4:38.27                                                         ~~~ ^\n 4:38.28 1 error generated.\n```\n\nThis warning is turned on by `-Wall`, and we treat warnings as errors, hence the error message.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/110", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/110/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/110/events", "html_url": "https://github.com/madler/zlib/issues/110", "id": 104155024, "node_id": "MDU6SXNzdWUxMDQxNTUwMjQ=", "number": 110, "title": "Unsafe casts", "user": {"login": "bshastry", "id": 2388185, "node_id": "MDQ6VXNlcjIzODgxODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2388185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bshastry", "html_url": "https://github.com/bshastry", "followers_url": "https://api.github.com/users/bshastry/followers", "following_url": "https://api.github.com/users/bshastry/following{/other_user}", "gists_url": "https://api.github.com/users/bshastry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bshastry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bshastry/subscriptions", "organizations_url": "https://api.github.com/users/bshastry/orgs", "repos_url": "https://api.github.com/users/bshastry/repos", "events_url": "https://api.github.com/users/bshastry/events{/privacy}", "received_events_url": "https://api.github.com/users/bshastry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-31T23:45:54Z", "updated_at": "2015-09-01T00:17:57Z", "closed_at": "2015-09-01T00:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am running a static scanner against zlib and have a bunch of bugs to report. From a sample:\n\n``` C\nIn gzclose(File f) Line 19 of gzclose.c\nstate = (gz_statep)file;\n```\n\n`file` points to struct of type `gzFile_s` but `state` points to struct of type `gz_state` that is much bigger than `gzFile_s` in size. The cast from `file` to `state` is thus unsafe.\n\nNote: The snippet of code is valid if macro `#ifndef NO_GZCOMPRESS` is valid.\n\nThe other warnings are listed below. To be read as `cast from Type, cast to type, line number, function name`.\n\n``` txt\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 323 of gzbuffer\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 347 of gzrewind\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 374 of gzseek64\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 459 of gztell64\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 487 of gzoffset64\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 519 of gzeof\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 537 of gzerror\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 557 of gzclearerr\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 300 of gzread\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 397 of gzgetc\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 432 of gzungetc\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 496 of gzgets\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 555 of gzdirect\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 576 of gzclose_r\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 177 of gzwrite\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 257 of gzputc\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 319 of gzvprintf\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 474 of gzflush\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 508 of gzsetparams\nInvalid cast: \nFrom struct.gzFile_s    to struct.gz_state\nLine: 548 of gzclose_w\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/109", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/109/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/109/events", "html_url": "https://github.com/madler/zlib/issues/109", "id": 103025147, "node_id": "MDU6SXNzdWUxMDMwMjUxNDc=", "number": 109, "title": "Building Glib for armv8 Processor", "user": {"login": "aagmangour", "id": 9460101, "node_id": "MDQ6VXNlcjk0NjAxMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9460101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aagmangour", "html_url": "https://github.com/aagmangour", "followers_url": "https://api.github.com/users/aagmangour/followers", "following_url": "https://api.github.com/users/aagmangour/following{/other_user}", "gists_url": "https://api.github.com/users/aagmangour/gists{/gist_id}", "starred_url": "https://api.github.com/users/aagmangour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aagmangour/subscriptions", "organizations_url": "https://api.github.com/users/aagmangour/orgs", "repos_url": "https://api.github.com/users/aagmangour/repos", "events_url": "https://api.github.com/users/aagmangour/events{/privacy}", "received_events_url": "https://api.github.com/users/aagmangour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-25T13:42:53Z", "updated_at": "2015-08-25T20:17:07Z", "closed_at": "2015-08-25T20:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to build Glib for ARMv8 (AARCH64) processor. I am getting the following error.Anyone having any idea about how to proceed .please help\n\nUsers/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../gobject/gtype.h:1531:7: note: in expansion of macro 'g_once_init_enter'\n   if (g_once_init_enter (&g_define_type_id__volatile))  \\\n       ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../gobject/gtype.h:1465:61: note: in expansion of macro '_G_DEFINE_INTERFACE_EXTENDED_BEGIN'\n #define G_DEFINE_INTERFACE_WITH_CODE(TN, t_n, T_P, _C_)     _G_DEFINE_INTERFACE_EXTENDED_BEGIN(TN, t_n, T_P) {_C_;} _G_DEFINE_INTERFACE_EXTENDED_END()\n                                                             ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../gobject/gtype.h:1446:47: note: in expansion of macro 'G_DEFINE_INTERFACE_WITH_CODE'\n #define G_DEFINE_INTERFACE(TN, t_n, T_P)      G_DEFINE_INTERFACE_WITH_CODE(TN, t_n, T_P, ;)\n                                               ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../gio/gproxy.c:45:1: note: in expansion of macro 'G_DEFINE_INTERFACE'\n G_DEFINE_INTERFACE (GProxy, g_proxy, G_TYPE_OBJECT)\n ^\nIn file included from /Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../android/glibconfig.h:9:0,\n                 from /Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../android/config.h:500,\n                 from /Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../gio/gproxy.c:23:\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../glib/gmacros.h:162:53: error: size of array '_GStaticAssertCompileTimeAssertion_1' is negative\n #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, **COUNTER**)[(expr) ? 1 : -1] G_GNUC_UNUSED\n                                                     ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../glib/gmacros.h:159:47: note: in definition of macro 'G_PASTE_ARGS'\n #define G_PASTE_ARGS(identifier1,identifier2) identifier1 ## identifier2\n                                               ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../glib/gmacros.h:162:44: note: in expansion of macro 'G_PASTE'\n #define G_STATIC_ASSERT(expr) typedef char G_PASTE (_GStaticAssertCompileTimeAssertion_, **COUNTER**)[(expr) ? 1 : -1] G_GNUC_UNUSED\n                                            ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../glib/gthread.h:257:5: note: in expansion of macro 'G_STATIC_ASSERT'\n     G_STATIC_ASSERT (sizeof *(location) == sizeof (gpointer));       \\\n     ^\n/Users/aagman/Desktop/glib/glib-2.35.8-for-android/glib-2.35.8/jni/../gobject/gtype.h:1547:7: note: in expansion of macro 'g_once_init_leave'\n       g_once_init_leave (&g_define_type_id__volatile, g_define_type_id); \\\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/108", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/108/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/108/events", "html_url": "https://github.com/madler/zlib/issues/108", "id": 101148013, "node_id": "MDU6SXNzdWUxMDExNDgwMTM=", "number": 108, "title": "static_l_desc, static_d_desc, and static_bl_desc in trees.c need const", "user": {"login": "bulk88", "id": 997168, "node_id": "MDQ6VXNlcjk5NzE2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/997168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bulk88", "html_url": "https://github.com/bulk88", "followers_url": "https://api.github.com/users/bulk88/followers", "following_url": "https://api.github.com/users/bulk88/following{/other_user}", "gists_url": "https://api.github.com/users/bulk88/gists{/gist_id}", "starred_url": "https://api.github.com/users/bulk88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bulk88/subscriptions", "organizations_url": "https://api.github.com/users/bulk88/orgs", "repos_url": "https://api.github.com/users/bulk88/repos", "events_url": "https://api.github.com/users/bulk88/events{/privacy}", "received_events_url": "https://api.github.com/users/bulk88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-15T06:43:46Z", "updated_at": "2015-08-16T01:07:41Z", "closed_at": "2015-08-16T01:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Symbols static_l_desc, static_d_desc, and static_bl_desc in trees.c need const so they are stored in readonly memory in the final binary which can be shared by the OS between processes instead of readwrite memory which is unique to each process.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/101", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/101/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/101/events", "html_url": "https://github.com/madler/zlib/issues/101", "id": 78490460, "node_id": "MDU6SXNzdWU3ODQ5MDQ2MA==", "number": 101, "title": "Is it possible to backport new functionality of gzbuffer() to boost file writing performance from zlib-1.2.5 to zlib-1.2.3?", "user": {"login": "ingvagabund", "id": 8055242, "node_id": "MDQ6VXNlcjgwNTUyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8055242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ingvagabund", "html_url": "https://github.com/ingvagabund", "followers_url": "https://api.github.com/users/ingvagabund/followers", "following_url": "https://api.github.com/users/ingvagabund/following{/other_user}", "gists_url": "https://api.github.com/users/ingvagabund/gists{/gist_id}", "starred_url": "https://api.github.com/users/ingvagabund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ingvagabund/subscriptions", "organizations_url": "https://api.github.com/users/ingvagabund/orgs", "repos_url": "https://api.github.com/users/ingvagabund/repos", "events_url": "https://api.github.com/users/ingvagabund/events{/privacy}", "received_events_url": "https://api.github.com/users/ingvagabund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-20T11:40:02Z", "updated_at": "2015-05-20T21:43:50Z", "closed_at": "2015-05-20T21:43:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs it possible to backport new functionality of gzbuffer() to boost file writing performance from zlib-1.2.5 to zlib-1.2.3? Updating to zlib-1.2.5 breaks libxml2 because of a known bug [1] of libxml2 relying on undocumented internals. libxml2 can not be updated.\n\nI can not find any notes on this new functionality in changelog so can not say if it is 1.2.5.1 or 1.2.5.2 or other.\n\n[1] http://osdir.com/ml/svn-commits-list/2010-01/msg05723.html\n\nThanks\nJan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/100", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/100/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/100/events", "html_url": "https://github.com/madler/zlib/issues/100", "id": 75128917, "node_id": "MDU6SXNzdWU3NTEyODkxNw==", "number": 100, "title": "Is it possible to recover a lost preset dictionary?", "user": {"login": "redditanalytics", "id": 4683969, "node_id": "MDQ6VXNlcjQ2ODM5Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4683969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redditanalytics", "html_url": "https://github.com/redditanalytics", "followers_url": "https://api.github.com/users/redditanalytics/followers", "following_url": "https://api.github.com/users/redditanalytics/following{/other_user}", "gists_url": "https://api.github.com/users/redditanalytics/gists{/gist_id}", "starred_url": "https://api.github.com/users/redditanalytics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redditanalytics/subscriptions", "organizations_url": "https://api.github.com/users/redditanalytics/orgs", "repos_url": "https://api.github.com/users/redditanalytics/repos", "events_url": "https://api.github.com/users/redditanalytics/events{/privacy}", "received_events_url": "https://api.github.com/users/redditanalytics/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-11T08:00:47Z", "updated_at": "2015-07-29T05:52:40Z", "closed_at": "2015-07-29T05:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mark,\n\nThanks so much for maintaining this excellent piece of software.  My question is a generic one.  I use zlib delate and inflate with a preset dictionary to help increase compression for short strings.  I was curious if it would be possible to recover a lost preset dictionary in some fashion?  If a dictionary is lost, are there steps to recover it -- especially if one knows the expected decompressed output?\n\nThanks again Mark for all your work!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/98", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/98/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/98/events", "html_url": "https://github.com/madler/zlib/issues/98", "id": 71256287, "node_id": "MDU6SXNzdWU3MTI1NjI4Nw==", "number": 98, "title": "Enable Sourcegraph", "user": {"login": "MarkJonas", "id": 12135716, "node_id": "MDQ6VXNlcjEyMTM1NzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12135716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkJonas", "html_url": "https://github.com/MarkJonas", "followers_url": "https://api.github.com/users/MarkJonas/followers", "following_url": "https://api.github.com/users/MarkJonas/following{/other_user}", "gists_url": "https://api.github.com/users/MarkJonas/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkJonas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkJonas/subscriptions", "organizations_url": "https://api.github.com/users/MarkJonas/orgs", "repos_url": "https://api.github.com/users/MarkJonas/repos", "events_url": "https://api.github.com/users/MarkJonas/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkJonas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T11:26:32Z", "updated_at": "2015-07-29T03:49:59Z", "closed_at": "2015-07-29T03:49:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use [Sourcegraph](https://sourcegraph.com) for zlib code search, browsing, and usage examples. Can an admin enable Sourcegraph for this repository? Just go to https://sourcegraph.com/github.com/madler/zlib. (It should only take 30 seconds.)\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/95", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/95/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/95/events", "html_url": "https://github.com/madler/zlib/issues/95", "id": 65840096, "node_id": "MDU6SXNzdWU2NTg0MDA5Ng==", "number": 95, "title": "gzseek broken on uncompressed streams on Windows", "user": {"login": "carlobaldassi", "id": 223753, "node_id": "MDQ6VXNlcjIyMzc1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/223753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlobaldassi", "html_url": "https://github.com/carlobaldassi", "followers_url": "https://api.github.com/users/carlobaldassi/followers", "following_url": "https://api.github.com/users/carlobaldassi/following{/other_user}", "gists_url": "https://api.github.com/users/carlobaldassi/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlobaldassi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlobaldassi/subscriptions", "organizations_url": "https://api.github.com/users/carlobaldassi/orgs", "repos_url": "https://api.github.com/users/carlobaldassi/repos", "events_url": "https://api.github.com/users/carlobaldassi/events{/privacy}", "received_events_url": "https://api.github.com/users/carlobaldassi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2015-04-02T05:16:27Z", "updated_at": "2017-02-05T08:08:02Z", "closed_at": "2016-12-30T23:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows, when calling `gzopen` on a plain text file, reading some bytes (at least 1), then calling `gzseek(f, 0L, SEEK_SET)`, all subsequent `gzread` calls fail (they return `0`).\n\nThis does not happen when opening a compressed stream.\n\nIn contrast, calling `gzrewind(f)` (which should be equivalent to the above, according to the documentation in \"zlib.h\") always works. Also, on Linux and MacOSX there is no such issue.\n\nI'm using zlib 1.2.8, and Windows 7 32bit (but I believe 64bit is also affected).\n\nHere is a simple test file which shows the problem (assuming \"tst.tmp.txt\" is any plain text file):\n\n``` c\n#include <stdio.h>\n#include <zlib.h>\n\nint main(int argc,char *argv[])\n{\n    char buf[1000];\n    int ret;\n    gzFile f = gzopen(\"tst.tmp.txt\", \"rb\");\n    //gzFile f = gzopen(\"tst.tmp.gz\", \"rb\"); // this works\n\n    while (!gzeof(f)) {\n        ret = gzread(f, buf, 1);\n        if (!ret) {\n            printf(\"READ FAILED\\n\");\n        } else {\n            printf(\"%c %i\\n\", buf[0], buf[0]);\n        }\n    }\n    printf(\"EOF\\n\");\n    ret = gzseek(f, 0, SEEK_SET);\n    printf(\"SEEK RETURNED: %i\\n\", ret);\n    while (!gzeof(f)) {\n        ret = gzread(f, buf, 1);\n        if (!ret) {\n            printf(\"READ FAILED\\n\");\n        } else {\n            printf(\"%c %i\\n\", buf[0], buf[0]);\n        }\n    }\n    printf(\"EOF\\n\");\n\n    return 0;\n}\n```\n\nwhen running the code, the first while loop succeeds, then `gzseek` returns `0`, and subsequent `gzread`s fail. If the first while loop is omitted, the rest succeeds, but as long as a single byte is read the bug is observed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/94", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/94/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/94/events", "html_url": "https://github.com/madler/zlib/issues/94", "id": 65438557, "node_id": "MDU6SXNzdWU2NTQzODU1Nw==", "number": 94, "title": "windowBits issue with Inflate for zlib format", "user": {"login": "maryamtahhan", "id": 5012288, "node_id": "MDQ6VXNlcjUwMTIyODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5012288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maryamtahhan", "html_url": "https://github.com/maryamtahhan", "followers_url": "https://api.github.com/users/maryamtahhan/followers", "following_url": "https://api.github.com/users/maryamtahhan/following{/other_user}", "gists_url": "https://api.github.com/users/maryamtahhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/maryamtahhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maryamtahhan/subscriptions", "organizations_url": "https://api.github.com/users/maryamtahhan/orgs", "repos_url": "https://api.github.com/users/maryamtahhan/repos", "events_url": "https://api.github.com/users/maryamtahhan/events{/privacy}", "received_events_url": "https://api.github.com/users/maryamtahhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-31T12:25:55Z", "updated_at": "2015-07-29T04:01:51Z", "closed_at": "2015-07-29T04:01:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \nI'm having a issue with window bits for inflate for the zlib format when window bits is set 8. A call to inflate returns a Z_DATA_ERROR with strm->msg set to: invalid window size.\n\n**Please note** not that it should be in issue but I compress the data with deflateInit2()-->deflate()--> deflateEnd() with the same windowBits I pass to inflateInit2. So I'm trying to decompress data that is compressed with the same windowbits value.\n\nthe sequence of function calls is:\n    deflateInit2()\n    deflate()\n    deflateEnd()\n    inflateInit2()\n    inflate()\n    inflateEnd()\n\nwith windowBits set to 8 for deflateInit2() and inflateInit2() I get the error Z_DATA_ERROR with strm->msg set to: invalid window size.\n\nwith windowBits set to 8 for deflateInit2() and windowBits set to 0 inflateInit2() --> pass\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/madler/zlib/issues/93", "repository_url": "https://api.github.com/repos/madler/zlib", "labels_url": "https://api.github.com/repos/madler/zlib/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/madler/zlib/issues/93/comments", "events_url": "https://api.github.com/repos/madler/zlib/issues/93/events", "html_url": "https://github.com/madler/zlib/issues/93", "id": 64356164, "node_id": "MDU6SXNzdWU2NDM1NjE2NA==", "number": 93, "title": "windowBits documentation is unclear.", "user": {"login": "jeffreydwalter", "id": 567047, "node_id": "MDQ6VXNlcjU2NzA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/567047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffreydwalter", "html_url": "https://github.com/jeffreydwalter", "followers_url": "https://api.github.com/users/jeffreydwalter/followers", "following_url": "https://api.github.com/users/jeffreydwalter/following{/other_user}", "gists_url": "https://api.github.com/users/jeffreydwalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffreydwalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffreydwalter/subscriptions", "organizations_url": "https://api.github.com/users/jeffreydwalter/orgs", "repos_url": "https://api.github.com/users/jeffreydwalter/repos", "events_url": "https://api.github.com/users/jeffreydwalter/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffreydwalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-03-25T19:44:50Z", "updated_at": "2015-07-29T04:45:30Z", "closed_at": "2015-07-29T04:45:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "In reading the documentation (and looking at the source) for inflateInit2(), it is not clear to me when it is valid to set windowBits = 0. Is doing so valid only in inflate mode, or is it also valid for unzip and gunzip?\nIt's clear that windowBits = 0 isn't valid in the raw inflate case because headers are ignored.\n\nI did some testing and it appears that windowBits = 0 only works in inflate mode. i.e., not gunzip, unzip, etc. Is this right?\n", "performed_via_github_app": null, "score": 1.0}]}