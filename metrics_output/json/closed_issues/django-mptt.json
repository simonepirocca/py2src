{"total_count": 375, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/748", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/748/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/748/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/748", "id": 625416942, "node_id": "MDU6SXNzdWU2MjU0MTY5NDI=", "number": 748, "title": "Invalid field name", "user": {"login": "minyoung90", "id": 17244668, "node_id": "MDQ6VXNlcjE3MjQ0NjY4", "avatar_url": "https://avatars1.githubusercontent.com/u/17244668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minyoung90", "html_url": "https://github.com/minyoung90", "followers_url": "https://api.github.com/users/minyoung90/followers", "following_url": "https://api.github.com/users/minyoung90/following{/other_user}", "gists_url": "https://api.github.com/users/minyoung90/gists{/gist_id}", "starred_url": "https://api.github.com/users/minyoung90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minyoung90/subscriptions", "organizations_url": "https://api.github.com/users/minyoung90/orgs", "repos_url": "https://api.github.com/users/minyoung90/repos", "events_url": "https://api.github.com/users/minyoung90/events{/privacy}", "received_events_url": "https://api.github.com/users/minyoung90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T06:28:35Z", "updated_at": "2020-05-27T07:10:05Z", "closed_at": "2020-05-27T07:10:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have these models,\r\n\r\n```\r\nclass DocumentNode(mptt.MPTTModel):\r\n    name = models.CharField(max_length=128, unique=True)\r\n    parent = mptt.TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')\r\n\r\nclass DocumentNodeVariable(models.Model):\r\n    owner_node = mptt.TreeForeignKey(DocumentNode, on_delete=models.CASCADE, related_name='variables')\r\n```\r\n\r\nso, in a view,\r\n\r\n`\r\nqueryset = DocumentNode.objects.select_related('variables').filter(id=pk)\r\n`\r\n\r\nthen, I got this error,\r\n\r\n**django.core.exceptions.FieldError: Invalid field name(s) given in select_related: 'variables'**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/747", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/747/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/747/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/747", "id": 623889303, "node_id": "MDU6SXNzdWU2MjM4ODkzMDM=", "number": 747, "title": "Order by root's node property", "user": {"login": "mmoravcik", "id": 600539, "node_id": "MDQ6VXNlcjYwMDUzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/600539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmoravcik", "html_url": "https://github.com/mmoravcik", "followers_url": "https://api.github.com/users/mmoravcik/followers", "following_url": "https://api.github.com/users/mmoravcik/following{/other_user}", "gists_url": "https://api.github.com/users/mmoravcik/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmoravcik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmoravcik/subscriptions", "organizations_url": "https://api.github.com/users/mmoravcik/orgs", "repos_url": "https://api.github.com/users/mmoravcik/repos", "events_url": "https://api.github.com/users/mmoravcik/events{/privacy}", "received_events_url": "https://api.github.com/users/mmoravcik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T15:40:12Z", "updated_at": "2020-05-30T16:59:42Z", "closed_at": "2020-05-30T16:59:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI can't seem to find a way to order all nodes by the root element's property. Is it possible?\r\n\r\ne.g. `Root1.name->child1.name->child2.name, Root2.name->child3.name->child4.name`\r\n\r\nI'd like me results to be in this order-> `Root1, Child1/2, Root2/3, Child4` or `Root2, Child3/4, Root1, Child1/2` on descending order when sorting by Root's name property", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/744", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/744/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/744/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/744", "id": 618671294, "node_id": "MDU6SXNzdWU2MTg2NzEyOTQ=", "number": 744, "title": "Django 2.2 cannot import name 'six' from django.utils", "user": {"login": "JDonMc", "id": 31463122, "node_id": "MDQ6VXNlcjMxNDYzMTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/31463122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JDonMc", "html_url": "https://github.com/JDonMc", "followers_url": "https://api.github.com/users/JDonMc/followers", "following_url": "https://api.github.com/users/JDonMc/following{/other_user}", "gists_url": "https://api.github.com/users/JDonMc/gists{/gist_id}", "starred_url": "https://api.github.com/users/JDonMc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JDonMc/subscriptions", "organizations_url": "https://api.github.com/users/JDonMc/orgs", "repos_url": "https://api.github.com/users/JDonMc/repos", "events_url": "https://api.github.com/users/JDonMc/events{/privacy}", "received_events_url": "https://api.github.com/users/JDonMc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T03:27:27Z", "updated_at": "2020-07-26T13:00:02Z", "closed_at": "2020-07-26T13:00:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/740", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/740/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/740/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/740", "id": 607742039, "node_id": "MDU6SXNzdWU2MDc3NDIwMzk=", "number": 740, "title": "add_related_count. add counts to parent/root and children ", "user": {"login": "vrsotto", "id": 1150763, "node_id": "MDQ6VXNlcjExNTA3NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1150763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrsotto", "html_url": "https://github.com/vrsotto", "followers_url": "https://api.github.com/users/vrsotto/followers", "following_url": "https://api.github.com/users/vrsotto/following{/other_user}", "gists_url": "https://api.github.com/users/vrsotto/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrsotto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrsotto/subscriptions", "organizations_url": "https://api.github.com/users/vrsotto/orgs", "repos_url": "https://api.github.com/users/vrsotto/repos", "events_url": "https://api.github.com/users/vrsotto/events{/privacy}", "received_events_url": "https://api.github.com/users/vrsotto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T18:01:30Z", "updated_at": "2020-05-02T15:29:33Z", "closed_at": "2020-05-02T15:29:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "can anyone please help how to implement a sample from https://django-mptt.readthedocs.io/en/latest/models.html#example-usage?\r\n\r\nI have an app named \"blogs\" with 2 models, Post and Category \r\n\r\nI'm thinking of having my categories with a counter (related to # of posts) on each level, something like:\r\n\r\nParent-1 (9)\r\n-- child-1 (2)\r\n-- child-2 (3)\r\n-- child-3 (4)\r\nParent-2 (6)\r\n-- child-1 (0)\r\n-- child-2 (1)\r\n-- child-3 (5) \r\n\r\n\r\nAlso, this seem's closer to what i want, but not sure how to apply them.\r\n```\r\n{% drilldown_tree_for_node genre as drilldown cumulative count tests.Game.genre in game_count %}\r\n{% for node,structure in drilldown|tree_info %}\r\n    {% if structure.new_level %}<ul><li>{% else %}</li><li>{% endif %}\r\n    {% if node == genre %}\r\n        <strong>{{ node.name }}</strong>\r\n    {% else %}\r\n        <a href=\"{{ node.get_absolute_url }}\">{{ node.name }}</a>\r\n        {% if node.parent_id == genre.pk %}({{ node.game_count }}){% endif %}\r\n    {% endif %}\r\n    {% for level in structure.closed_levels %}</li></ul>{% endfor %}\r\n{% endfor %}\r\n```\r\nshould **tests.Game.genre** be equivalent to blogs.Post.category (foreignkey) and where the game_count came from?\r\n\r\nI also thought that sample codes should be consistent with the earlier tutorial (**class Genre(MPTTModel):**) creating the music category.\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/739", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/739/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/739/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/739", "id": 607051372, "node_id": "MDU6SXNzdWU2MDcwNTEzNzI=", "number": 739, "title": "'Post' object has no attribute '_mptt_meta'", "user": {"login": "vrsotto", "id": 1150763, "node_id": "MDQ6VXNlcjExNTA3NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1150763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrsotto", "html_url": "https://github.com/vrsotto", "followers_url": "https://api.github.com/users/vrsotto/followers", "following_url": "https://api.github.com/users/vrsotto/following{/other_user}", "gists_url": "https://api.github.com/users/vrsotto/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrsotto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrsotto/subscriptions", "organizations_url": "https://api.github.com/users/vrsotto/orgs", "repos_url": "https://api.github.com/users/vrsotto/repos", "events_url": "https://api.github.com/users/vrsotto/events{/privacy}", "received_events_url": "https://api.github.com/users/vrsotto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T16:23:02Z", "updated_at": "2020-04-26T19:01:39Z", "closed_at": "2020-04-26T19:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm just trying to implement this snippet (in 'posts/index.html' template) from the django_mptt documentation.\r\n\r\n```\r\n{% load mptt_tags %}\r\n<ul>\r\n    {% recursetree categories %}\r\n        <li>\r\n            {{ node.name }}\r\n            {% if not node.is_leaf_node %}\r\n                <ul class=\"children\">\r\n                    {{ children }}\r\n                </ul>\r\n            {% endif %}\r\n        </li>\r\n    {% endrecursetree %}\r\n</ul>\r\n```\r\nbut I'm having this error\r\n> 'Post' object has no attribute '_mptt_meta'\r\n\r\nI'm new to Django/Python, not sure how to fix the issue.\r\n\r\nHere are the rest of my codes.\r\n\r\n**Model**\r\n```\r\nfrom django.db import models\r\nfrom datetime import datetime\r\nfrom django.utils.text import slugify\r\n\r\nfrom mptt.models import MPTTModel, TreeForeignKey\r\n\r\nclass Post(models.Model):\r\n    STATUS_CHOICES = (\r\n        (False, 'Draft'),\r\n        (True, 'Published'),\r\n    )\r\n    title = models.CharField(max_length=200)\r\n    slug = models.SlugField(max_length=200, unique=False, blank=True)\r\n    body = models.TextField(blank=True)\r\n    status = models.BooleanField(choices=STATUS_CHOICES, default=False)\r\n    category = TreeForeignKey('Category', on_delete=models.SET_NULL, null=True)\r\n    published_date = models.DateTimeField(default=datetime.now, blank=True)\r\n\r\n    def save(self, *args, **kwargs):\r\n        self.slug = slugify(self.title)\r\n        super(Post, self).save(*args, **kwargs)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\n\r\nclass Category(MPTTModel):\r\n    name = models.CharField(max_length=50, unique=True)\r\n    parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children', db_index=True)\r\n    slug = models.SlugField(unique=True, blank=True, editable=False)\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    class Meta:\r\n        unique_together = (('parent', 'slug',))\r\n        verbose_name_plural = 'categories'\r\n\r\n    def save(self, *args, **kwargs):\r\n        self.slug = slugify(self.name)\r\n        super(Category, self).save(*args, **kwargs)\r\n\r\n    def __str__(self):\r\n        return self.name\r\n```\r\n\r\n**View**\r\n```\r\nfrom django.shortcuts import render, get_object_or_404\r\n\r\nfrom .models import Post, Category\r\n\r\n\r\ndef posts(request):\r\n    posts = Post.objects.order_by('-published_date').filter(status=True, category__isnull=False)\r\n\r\n    context = {\r\n        'posts': posts,\r\n        'categories': Post.objects.all(),\r\n    }\r\n\r\n    return render(request, 'posts/index.html', context)\r\n```\r\n\r\nThanks, much in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/729", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/729/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/729/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/729", "id": 573325735, "node_id": "MDU6SXNzdWU1NzMzMjU3MzU=", "number": 729, "title": "Where are the **canonical** docs?", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-29T16:19:39Z", "updated_at": "2020-06-13T12:15:54Z", "closed_at": "2020-06-13T07:19:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "On this page there is a link \" check out the docs\": https://django-mptt.readthedocs.io/en/latest/tutorial.html\r\n\r\nBut this links points to github.io: http://django-mptt.github.io/django-mptt/overview.html\r\n\r\nWhere is the canonical place for the docs? readthedocs or github.io?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/728", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/728/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/728/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/728", "id": 559575781, "node_id": "MDU6SXNzdWU1NTk1NzU3ODE=", "number": 728, "title": "where are the changelog or releasenotes?", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-04T09:00:54Z", "updated_at": "2020-02-04T16:06:06Z", "closed_at": "2020-02-04T16:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "LS,\r\n\r\nI have a hard time understanding what is going on in this package. I failed to see a releasenotes or changelog published. We use this package in the core of our application and I would really like to understand what are the changes from one minor version to another. As there are only 'tags' released since <0.10 it is very difficult to follow. (upgrade and hope).\r\n\r\nCould you please report what is going on in each release and create a CHANGELOG.md of some sort between versions?\r\n\r\n(I was not the first; see also #667)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/721", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/721/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/721/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/721", "id": 541034057, "node_id": "MDU6SXNzdWU1NDEwMzQwNTc=", "number": 721, "title": "Add compatibility with Django 3.0", "user": {"login": "claudep", "id": 143192, "node_id": "MDQ6VXNlcjE0MzE5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/143192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claudep", "html_url": "https://github.com/claudep", "followers_url": "https://api.github.com/users/claudep/followers", "following_url": "https://api.github.com/users/claudep/following{/other_user}", "gists_url": "https://api.github.com/users/claudep/gists{/gist_id}", "starred_url": "https://api.github.com/users/claudep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claudep/subscriptions", "organizations_url": "https://api.github.com/users/claudep/orgs", "repos_url": "https://api.github.com/users/claudep/repos", "events_url": "https://api.github.com/users/claudep/events{/privacy}", "received_events_url": "https://api.github.com/users/claudep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-20T14:52:27Z", "updated_at": "2020-07-26T13:00:42Z", "closed_at": "2020-07-26T13:00:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, mptt tests are failing with Django 3.0, apparently due to this Django commit:\r\nhttps://github.com/django/django/commit/4122d9d3f198", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/716", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/716/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/716/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/716", "id": 505141477, "node_id": "MDU6SXNzdWU1MDUxNDE0Nzc=", "number": 716, "title": "Bug in `is_child_node`", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-10T09:16:01Z", "updated_at": "2019-11-26T04:44:37Z", "closed_at": "2019-11-26T04:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "`requirements.txt`\r\n```\r\ndjango==2.2.5\r\ndjango-mptt==0.10.0\r\n```\r\nMy tree has 65 nodes. Some of my leaf node has wrong attribute for example `#18`\r\n![Pasted_Image_10_10_19_16_11](https://user-images.githubusercontent.com/18206728/66555299-a0546880-eb78-11e9-991e-e99e68b40aed.png)\r\n\r\n```python\r\nIn [6]: q18 = Question.objects.get(id=18)\r\n\r\nIn [7]: q18.is_child_node()\r\nOut[7]: True\r\n\r\nIn [8]: q18.is_leaf_node()\r\nOut[8]: True\r\n\r\nIn [9]: q18.is_root_node()\r\nOut[9]: False\r\n```\r\n\r\n**Expected Results:**\r\n`q18.is_child_node()` must return `False`\r\n\r\n**As is:**\r\nIt returns `True`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/714", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/714/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/714/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/714", "id": 498910175, "node_id": "MDU6SXNzdWU0OTg5MTAxNzU=", "number": 714, "title": "Logging tree change when using DraggableMPTTAdmin", "user": {"login": "duduklein", "id": 2512289, "node_id": "MDQ6VXNlcjI1MTIyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2512289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duduklein", "html_url": "https://github.com/duduklein", "followers_url": "https://api.github.com/users/duduklein/followers", "following_url": "https://api.github.com/users/duduklein/following{/other_user}", "gists_url": "https://api.github.com/users/duduklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/duduklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duduklein/subscriptions", "organizations_url": "https://api.github.com/users/duduklein/orgs", "repos_url": "https://api.github.com/users/duduklein/repos", "events_url": "https://api.github.com/users/duduklein/events{/privacy}", "received_events_url": "https://api.github.com/users/duduklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-26T14:09:15Z", "updated_at": "2019-10-08T14:38:37Z", "closed_at": "2019-10-08T14:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using DraggableMPTTAdmin, the changes are not logged using the LogEntry standard model that Django uses to log all admin actions.\r\n\r\nIs it possible to log it? Would you accept a pull request?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/706", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/706/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/706/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/706", "id": 464837157, "node_id": "MDU6SXNzdWU0NjQ4MzcxNTc=", "number": 706, "title": "\u5982\u4f55\u8ba9\u6811\u5f62\u9ed8\u8ba4\u4e3a\u6536\u8d77\u72b6\u6001\uff0c\u4e0d\u5c55\u5f00\u5462\uff1f", "user": {"login": "cf313995", "id": 39183968, "node_id": "MDQ6VXNlcjM5MTgzOTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/39183968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cf313995", "html_url": "https://github.com/cf313995", "followers_url": "https://api.github.com/users/cf313995/followers", "following_url": "https://api.github.com/users/cf313995/following{/other_user}", "gists_url": "https://api.github.com/users/cf313995/gists{/gist_id}", "starred_url": "https://api.github.com/users/cf313995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cf313995/subscriptions", "organizations_url": "https://api.github.com/users/cf313995/orgs", "repos_url": "https://api.github.com/users/cf313995/repos", "events_url": "https://api.github.com/users/cf313995/events{/privacy}", "received_events_url": "https://api.github.com/users/cf313995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-06T09:39:50Z", "updated_at": "2019-09-29T08:45:26Z", "closed_at": "2019-09-29T08:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/704", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/704/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/704/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/704", "id": 462994627, "node_id": "MDU6SXNzdWU0NjI5OTQ2Mjc=", "number": 704, "title": "_is_saved fails when pk is 0.", "user": {"login": "Balthasar-eu", "id": 36669346, "node_id": "MDQ6VXNlcjM2NjY5MzQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/36669346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balthasar-eu", "html_url": "https://github.com/Balthasar-eu", "followers_url": "https://api.github.com/users/Balthasar-eu/followers", "following_url": "https://api.github.com/users/Balthasar-eu/following{/other_user}", "gists_url": "https://api.github.com/users/Balthasar-eu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balthasar-eu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balthasar-eu/subscriptions", "organizations_url": "https://api.github.com/users/Balthasar-eu/orgs", "repos_url": "https://api.github.com/users/Balthasar-eu/repos", "events_url": "https://api.github.com/users/Balthasar-eu/events{/privacy}", "received_events_url": "https://api.github.com/users/Balthasar-eu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-02T02:53:18Z", "updated_at": "2019-07-02T20:50:00Z", "closed_at": "2019-07-02T20:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the primary key is 0 the _is_saved method will always return false, even though 0 is a valid value for a primary key field.\r\nI would recommend changing this line: https://github.com/django-mptt/django-mptt/blob/32a5eccc9fe83380e541f697a9d7f383d7cd5b0e/mptt/models.py#L803 from `if not self.pk or self._mpttfield('tree_id') is None:` to `if self.pk not None or self._mpttfield('tree_id') is None:` or `if (not self.pk and self.pk not 0) or self._mpttfield('tree_id') is None:`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/703", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/703/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/703/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/703/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/703", "id": 460876707, "node_id": "MDU6SXNzdWU0NjA4NzY3MDc=", "number": 703, "title": "How can I sort children by \"create_time\"?", "user": {"login": "huchunnuan", "id": 15993878, "node_id": "MDQ6VXNlcjE1OTkzODc4", "avatar_url": "https://avatars1.githubusercontent.com/u/15993878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huchunnuan", "html_url": "https://github.com/huchunnuan", "followers_url": "https://api.github.com/users/huchunnuan/followers", "following_url": "https://api.github.com/users/huchunnuan/following{/other_user}", "gists_url": "https://api.github.com/users/huchunnuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/huchunnuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huchunnuan/subscriptions", "organizations_url": "https://api.github.com/users/huchunnuan/orgs", "repos_url": "https://api.github.com/users/huchunnuan/repos", "events_url": "https://api.github.com/users/huchunnuan/events{/privacy}", "received_events_url": "https://api.github.com/users/huchunnuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-26T10:01:08Z", "updated_at": "2020-07-26T14:45:31Z", "closed_at": "2020-07-26T12:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a comment model:\r\n_class Comment(MPTTModel):\r\n    parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children',\r\n                            db_index=True)\r\n    post = models.ForeignKey(to=Post, on_delete=models.CASCADE)\r\n    content = models.TextFild( null=True, blank=True)\r\n    created_time = models.DateTimeField(auto_now_add=True)_\r\n\r\nI can sort level 0 comment by:\r\n_Comment.objects.filter(post__pk=post_id, parent=None).order_by('-created_time')_\r\nbut I find the returned children comments are not sorted by create_time by calling get method, do you have solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/699", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/699/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/699/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/699", "id": 441707295, "node_id": "MDU6SXNzdWU0NDE3MDcyOTU=", "number": 699, "title": "Problem with model update", "user": {"login": "pyprism", "id": 1469242, "node_id": "MDQ6VXNlcjE0NjkyNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1469242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyprism", "html_url": "https://github.com/pyprism", "followers_url": "https://api.github.com/users/pyprism/followers", "following_url": "https://api.github.com/users/pyprism/following{/other_user}", "gists_url": "https://api.github.com/users/pyprism/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyprism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyprism/subscriptions", "organizations_url": "https://api.github.com/users/pyprism/orgs", "repos_url": "https://api.github.com/users/pyprism/repos", "events_url": "https://api.github.com/users/pyprism/events{/privacy}", "received_events_url": "https://api.github.com/users/pyprism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-08T12:21:54Z", "updated_at": "2019-05-09T09:53:09Z", "closed_at": "2019-05-09T09:53:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the model:\r\n\r\n```\r\nshop_options = (\r\n    ('grocery', _('Grocery')),\r\n    ('medicine', _('Medicine')),\r\n    ('electronics', _('Electronics')),\r\n    ('fashion', _('Fashion')),\r\n    ('garden', _('Garden')),\r\n    ('gift', _('Gift')),\r\n    ('baby_care', _('Baby Care')),\r\n    ('pet_care', _('Pet Care')),\r\n)\r\n\r\n\r\nclass Category(MPTTModel):\r\n    name = models.CharField(max_length=50, unique=True)\r\n    name_bn = models.CharField(max_length=50, unique=True)\r\n    active = models.BooleanField(default=True)\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children',\r\n                            db_index=True, on_delete=models.PROTECT)\r\n    slug = models.SlugField(max_length=200, db_index=True)\r\n    shop_type = models.CharField(choices=shop_options, max_length=40)\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    class Meta:\r\n        unique_together = ('parent', 'slug',)\r\n        verbose_name_plural = 'categories'\r\n\r\n    def save(self, *args, **kwargs):\r\n        if not self.id:\r\n            # Newly created object, so set slug\r\n            self.slug = slugify(self.name)\r\n\r\n        super(Category, self).save(*args, **kwargs)\r\n```\r\nand my views for updating Category model:\r\n\r\n```\r\n@login_required\r\ndef category_edit(request, pk):\r\n    cat = get_object_or_404(Category, pk=pk)\r\n    if request.method == 'POST':\r\n        category = CategoryForm(request.POST, instance=cat)\r\n        try:\r\n            parent = Category.objects.get(name=request.POST.get('parent'))\r\n        except Category.DoesNotExist:\r\n            parent = None\r\n        if category.is_valid():\r\n            category_obj = category.save(commit=False)\r\n            category_obj.parent = parent\r\n            category_obj.save()\r\n            messages.success(request, 'Category has been updated ')\r\n        else:\r\n            messages.warning(request, category.errors)\r\n        return redirect('category_create')\r\n```\r\nCategoryForm :\r\n\r\n```\r\nclass CategoryForm(ModelForm):\r\n    class Meta:\r\n        model = Category\r\n        exclude = ('parent', 'slug')\r\n```\r\nMy problem is when I tried to change shop_type from suppose grocery(or any like gift) to pet_care or baby_care, it automatically saved to gift . I am using latest version of django and django-mptt.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/696", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/696/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/696/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/696", "id": 423774592, "node_id": "MDU6SXNzdWU0MjM3NzQ1OTI=", "number": 696, "title": "ListFiltersTests fail with Django 2.1.5", "user": {"login": "vali-um", "id": 47387140, "node_id": "MDQ6VXNlcjQ3Mzg3MTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/47387140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vali-um", "html_url": "https://github.com/vali-um", "followers_url": "https://api.github.com/users/vali-um/followers", "following_url": "https://api.github.com/users/vali-um/following{/other_user}", "gists_url": "https://api.github.com/users/vali-um/gists{/gist_id}", "starred_url": "https://api.github.com/users/vali-um/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vali-um/subscriptions", "organizations_url": "https://api.github.com/users/vali-um/orgs", "repos_url": "https://api.github.com/users/vali-um/repos", "events_url": "https://api.github.com/users/vali-um/events{/privacy}", "received_events_url": "https://api.github.com/users/vali-um/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-21T14:57:53Z", "updated_at": "2019-04-13T19:25:31Z", "closed_at": "2019-04-13T19:25:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "If run with django 2.1.5 the 3 ListFiltersTests fail for 2 reasons:\r\n\r\n* django.contrib.admin.views.main.ChangeList.__init__() has an added required argument sortable_by\r\n* the tests using request_factory requests require a user to be set, see https://docs.djangoproject.com/en/2.1/topics/testing/advanced/#example\r\n\r\nIf wanted i can provide a patch that fixes those issues for django2.1.5 but breaks the tests for django1.x", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/695", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/695/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/695/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/695", "id": 421596378, "node_id": "MDU6SXNzdWU0MjE1OTYzNzg=", "number": 695, "title": "verbose_name for django admin", "user": {"login": "jeyca", "id": 37297730, "node_id": "MDQ6VXNlcjM3Mjk3NzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/37297730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeyca", "html_url": "https://github.com/jeyca", "followers_url": "https://api.github.com/users/jeyca/followers", "following_url": "https://api.github.com/users/jeyca/following{/other_user}", "gists_url": "https://api.github.com/users/jeyca/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeyca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeyca/subscriptions", "organizations_url": "https://api.github.com/users/jeyca/orgs", "repos_url": "https://api.github.com/users/jeyca/repos", "events_url": "https://api.github.com/users/jeyca/events{/privacy}", "received_events_url": "https://api.github.com/users/jeyca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-15T16:13:18Z", "updated_at": "2019-04-13T19:24:16Z", "closed_at": "2019-04-13T19:24:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to set `verbose_name` for a mptt field in django. When I used\r\n\r\n`tree = models.ManyToManyField(Role, blank=True, verbose_name='Baum')`\r\n\r\nthe verbose name was not displayed  in the admin change page, of course because I modified the ObjectForm. So I tried to set `verbose_name` for \r\n\r\n`tree = mptt.TreeNodeMultipleChoiceField(queryset=Tree.objects.all(), verbose_name='Baum')`\r\n\r\nbut this throws an error because this argument does not exist, so is there a way to set a verbose_name for a mptt field?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/692", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/692/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/692/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/692", "id": 413947602, "node_id": "MDU6SXNzdWU0MTM5NDc2MDI=", "number": 692, "title": "DELETED", "user": {"login": "uber1geek", "id": 8023116, "node_id": "MDQ6VXNlcjgwMjMxMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8023116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uber1geek", "html_url": "https://github.com/uber1geek", "followers_url": "https://api.github.com/users/uber1geek/followers", "following_url": "https://api.github.com/users/uber1geek/following{/other_user}", "gists_url": "https://api.github.com/users/uber1geek/gists{/gist_id}", "starred_url": "https://api.github.com/users/uber1geek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uber1geek/subscriptions", "organizations_url": "https://api.github.com/users/uber1geek/orgs", "repos_url": "https://api.github.com/users/uber1geek/repos", "events_url": "https://api.github.com/users/uber1geek/events{/privacy}", "received_events_url": "https://api.github.com/users/uber1geek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-25T06:07:07Z", "updated_at": "2019-02-25T07:41:54Z", "closed_at": "2019-02-25T07:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/679", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/679/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/679/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/679", "id": 386432095, "node_id": "MDU6SXNzdWUzODY0MzIwOTU=", "number": 679, "title": "Migrate from ordinary model to `mptt`", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-01T07:11:55Z", "updated_at": "2018-12-01T09:57:49Z", "closed_at": "2018-12-01T09:57:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am inheriting the `MPTTModel` to the existing model in order to make a new migration. But I stuck here.\r\n\r\n```bash\r\nYou are trying to add a non-nullable field 'level' to tweet without a default; we can't do that (the database needs something to populate existing rows).\r\nPlease select a fix:\r\n 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\r\n 2) Quit, and let me add a default in models.py\r\nSelect an option: 1\r\nPlease enter the default value now, as valid Python\r\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\r\nType 'exit' to exit this prompt\r\n>>> 0\r\nYou are trying to add a non-nullable field 'lft' to tweet without a default; we can't do that (the database needs something to populate existing rows).\r\nPlease select a fix:\r\n 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\r\n 2) Quit, and let me add a default in models.py\r\nSelect an option: 0\r\nPlease select a valid option: 1\r\nPlease enter the default value now, as valid Python\r\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\r\nType 'exit' to exit this prompt\r\n>>> 0\r\nYou are trying to add a non-nullable field 'rght' to tweet without a default; we can't do that (the database needs something to populate existing rows).\r\nPlease select a fix:\r\n 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\r\n 2) Quit, and let me add a default in models.py\r\nSelect an option: 1\r\nPlease enter the default value now, as valid Python\r\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\r\nType 'exit' to exit this prompt\r\n>>> 0\r\nYou are trying to add a non-nullable field 'tree_id' to tweet without a default; we can't do that (the database needs something to populate existing rows).\r\nPlease select a fix:\r\n 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\r\n 2) Quit, and let me add a default in models.py\r\nSelect an option: 2\r\n```\r\n\r\nHow can I migrate from ordinary `Model` to `MPTTModel`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/672", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/672/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/672/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/672", "id": 356652041, "node_id": "MDU6SXNzdWUzNTY2NTIwNDE=", "number": 672, "title": "Incorrect lft/rght of root nodes on rebuild/insert", "user": {"login": "radiophysicist", "id": 1335647, "node_id": "MDQ6VXNlcjEzMzU2NDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1335647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radiophysicist", "html_url": "https://github.com/radiophysicist", "followers_url": "https://api.github.com/users/radiophysicist/followers", "following_url": "https://api.github.com/users/radiophysicist/following{/other_user}", "gists_url": "https://api.github.com/users/radiophysicist/gists{/gist_id}", "starred_url": "https://api.github.com/users/radiophysicist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radiophysicist/subscriptions", "organizations_url": "https://api.github.com/users/radiophysicist/orgs", "repos_url": "https://api.github.com/users/radiophysicist/repos", "events_url": "https://api.github.com/users/radiophysicist/events{/privacy}", "received_events_url": "https://api.github.com/users/radiophysicist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-04T04:50:29Z", "updated_at": "2018-09-04T05:42:09Z", "closed_at": "2018-09-04T05:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've added MPTT to the existing model. After running rebuild (via admin action I also added) I can see that all root nodes have lft equal to 1. This results in incorrect tree queries like getting node descendants etc.\r\n\r\nFor example:\r\n```\r\n# select id, designator, parent_id, lft, rght, tree_id, level from products_productgroup where parent_id is null;\r\n id  |          designator          | parent_id | lft | rght | tree_id | level \r\n-----+------------------------------+-----------+-----+------+---------+-------\r\n   1 | Product group #1             |           |   1 |    6 |       1 |     0\r\n   4 | Nitrogen Fertilizers         |           |   1 |    2 |       2 |     0\r\n   5 | Phosphate Fertilizers        |           |   1 |    2 |       3 |     0\r\n   6 | Potassium Fertilizers        |           |   1 |    2 |       4 |     0\r\n   7 | Binary Compound Fertilizers  |           |   1 |    2 |       5 |     0\r\n   8 | Ternary Compound Fertilizers |           |   1 |    2 |       6 |     0\r\n   9 | Amendments                   |           |   1 |    2 |       7 |     0\r\n  10 | Mixture                      |           |   1 |    2 |       8 |     0\r\n 434 | TEST                         |           |   1 |    2 |      10 |     0\r\n  11 | Seeds                        |           |   1 |  846 |       9 |     0\r\n(10 rows)\r\n```\r\n\r\nIt is also true for newly added nodes (like id=434 in the listing above).\r\nLooking at the code it seems that lft=1 for the root nodes is hardcoded in `TreeManager.rebuild()` (https://github.com/django-mptt/django-mptt/blob/f17e93e8349d0eda2ef30261289e116eec61f1aa/mptt/managers.py#L653).\r\n\r\nIs it assumed to be correct behaviour? Is there any way to obtain unique lft values for root node elements?\r\n\r\nP.S.\r\ndjango version 2.0.1, django-mptt version 0.9.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/671", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/671/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/671/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/671", "id": 356036137, "node_id": "MDU6SXNzdWUzNTYwMzYxMzc=", "number": 671, "title": "MPTTMeta with tree_od_attr pointing to ForeignKey causing ValueError", "user": {"login": "wojtek-fliposports", "id": 15891852, "node_id": "MDQ6VXNlcjE1ODkxODUy", "avatar_url": "https://avatars0.githubusercontent.com/u/15891852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wojtek-fliposports", "html_url": "https://github.com/wojtek-fliposports", "followers_url": "https://api.github.com/users/wojtek-fliposports/followers", "following_url": "https://api.github.com/users/wojtek-fliposports/following{/other_user}", "gists_url": "https://api.github.com/users/wojtek-fliposports/gists{/gist_id}", "starred_url": "https://api.github.com/users/wojtek-fliposports/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wojtek-fliposports/subscriptions", "organizations_url": "https://api.github.com/users/wojtek-fliposports/orgs", "repos_url": "https://api.github.com/users/wojtek-fliposports/repos", "events_url": "https://api.github.com/users/wojtek-fliposports/events{/privacy}", "received_events_url": "https://api.github.com/users/wojtek-fliposports/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-31T15:54:56Z", "updated_at": "2018-08-31T16:24:17Z", "closed_at": "2018-08-31T16:24:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Settings `tree_id_attr` in `MPTTMeta` to `ForeignKey` causing `ValueError`:\r\n```\r\nclass UserTree(MPTTModel):\r\n    parent = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')\r\n    user = models.ForeignKey(settings.AUTH_USER, related_name='+', on_delete=models.CASCADE)\r\n    some_info = models.CharField(max_length=30)\r\n\r\n    class MPTTMeta:\r\n        tree_id_attr = 'user'\r\n```\r\n\r\nWhen creating root node I'm receiving:\r\n\r\n```\r\n File \"/usr/local/lib/python3.6/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/query.py\", line 413, in create\r\n    obj.save(force_insert=True, using=self.db)\r\n  File \"/usr/local/lib/python3.6/site-packages/mptt/models.py\", line 1007, in save\r\n    self.insert_at(parent, position='last-child', allow_existing_pk=True)\r\n  File \"/usr/local/lib/python3.6/site-packages/mptt/models.py\", line 730, in insert_at\r\n    refresh_target=refresh_target)\r\n  File \"/usr/local/lib/python3.6/site-packages/mptt/managers.py\", line 72, in wrapped\r\n    return method(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/mptt/managers.py\", line 529, in insert_node\r\n    setattr(node, self.tree_id_attr, tree_id)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/fields/related_descriptors.py\", line 210, in __set__\r\n    self.field.remote_field.model._meta.object_name,\r\nValueError: Cannot assign \"1\": \"UserTree.user\" must be a \"UserTree\" instance.\r\n```\r\n\r\nChanging `tree_id_attr` to `user_id` I'm receiving `SystemCheckError`:\r\n```\r\n\r\nSystemCheckError: System check identified some issues:\r\n\r\nERRORS:\r\nsome_application.UserTree.user_id: (models.E006) The field 'user_id' clashes with the field 'user' from model 'some_application.usertree'.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/667", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/667/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/667/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/667", "id": 350146860, "node_id": "MDU6SXNzdWUzNTAxNDY4NjA=", "number": 667, "title": "0.9.1 changelog", "user": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-13T18:44:21Z", "updated_at": "2020-01-20T10:30:28Z", "closed_at": "2018-09-27T09:06:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi friends!\r\n\r\nJust curious about the changelog for 0.9.1 released 12 days ago :)\r\n\r\nThanks for the great work!\r\n\r\nCC: @goodtune ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/661", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/661/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/661/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/661", "id": 339160830, "node_id": "MDU6SXNzdWUzMzkxNjA4MzA=", "number": 661, "title": "Rendering bug with django-grappelli", "user": {"login": "mpasternak", "id": 598469, "node_id": "MDQ6VXNlcjU5ODQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/598469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpasternak", "html_url": "https://github.com/mpasternak", "followers_url": "https://api.github.com/users/mpasternak/followers", "following_url": "https://api.github.com/users/mpasternak/following{/other_user}", "gists_url": "https://api.github.com/users/mpasternak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpasternak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpasternak/subscriptions", "organizations_url": "https://api.github.com/users/mpasternak/orgs", "repos_url": "https://api.github.com/users/mpasternak/repos", "events_url": "https://api.github.com/users/mpasternak/events{/privacy}", "received_events_url": "https://api.github.com/users/mpasternak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-07T17:10:43Z", "updated_at": "2018-07-18T05:19:13Z", "closed_at": "2018-07-18T05:19:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\n\r\nI saw in the source code, that ``django-mptt`` supports [django-grappelli ](http://github.com/sehmaschine/django-grappelli) and I'm very happy about that. \r\n\r\nUnfortunately, with some recent versions of [grappelli ](http://github.com/sehmaschine/django-grappelli), there were some chances introduced into template rendering, which in turn cause the ``changeless`` admin view to render improperly, see attached image. \r\n\r\n<img width=\"570\" alt=\"django-mptt-grappelli-rendering-bug\" src=\"https://user-images.githubusercontent.com/598469/42413063-30a7283e-8219-11e8-9755-8fad70678b99.png\">\r\n\r\nI have created a minimal example, which shows erroneous behaviour. Just ``migrate``, ``createsuperuser``, ``runserver`` and go to admin, edit \"Genres\". \r\n\r\n[django-mptt-with-grappelli-rendering-bug.zip](https://github.com/django-mptt/django-mptt/files/2172932/django-mptt-with-grappelli-rendering-bug.zip)\r\n\r\nI have prepared a fix for this and I will have it ready in my branch shortly. Stay tuned. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/660", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/660/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/660/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/660", "id": 333728825, "node_id": "MDU6SXNzdWUzMzM3Mjg4MjU=", "number": 660, "title": "Django mptt database migration error", "user": {"login": "photonauta35", "id": 641411, "node_id": "MDQ6VXNlcjY0MTQxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/641411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/photonauta35", "html_url": "https://github.com/photonauta35", "followers_url": "https://api.github.com/users/photonauta35/followers", "following_url": "https://api.github.com/users/photonauta35/following{/other_user}", "gists_url": "https://api.github.com/users/photonauta35/gists{/gist_id}", "starred_url": "https://api.github.com/users/photonauta35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/photonauta35/subscriptions", "organizations_url": "https://api.github.com/users/photonauta35/orgs", "repos_url": "https://api.github.com/users/photonauta35/repos", "events_url": "https://api.github.com/users/photonauta35/events{/privacy}", "received_events_url": "https://api.github.com/users/photonauta35/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T15:40:48Z", "updated_at": "2019-04-08T05:22:37Z", "closed_at": "2019-04-08T05:22:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to get mptt working with my current project, but having issues with the database migration. (django 2.0 project)\r\n\r\nhere is my model\r\n\r\n```\r\nclass Collection(MPTTModel):\r\n    \"\"\"\r\n    Main class of collection\r\n    \"\"\"\r\n    uuid = models.UUIDField(default=uuid.uuid4, max_length=32, editable=False, unique=True)\r\n    title = models.CharField(max_length=256, null=False)\r\n    other_data_test = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children', default=\"string\")\r\n\r\n    class MPTTMeta:\r\n        level_attr = 'mptt_level'\r\n        lft_attr = 'mptt_left'\r\n        rght_attr = 'mptt_right'\r\n        tree_id_attr = 'mptt_tree_id'\r\n        order_insertion_by = ['title']\r\n\r\n    def __str__(self):\r\n        return self.title\r\n```\r\n\r\nWhen a I try make migrations, I get:\r\n\r\n```\r\nYou are trying to add a non-nullable field 'lft' to collection without a default; we can't do that (the database needs something to populate existing rows).\r\nPlease select a fix:\r\n 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\r\n 2) Quit, and let me add a default in models.py\r\nSelect an option:\r\n```\r\n\r\nHow can I set a 'default value' in my model to 'level', 'lft', 'rght' and 'tree_id' fields?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/655", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/655/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/655/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/655", "id": 325403690, "node_id": "MDU6SXNzdWUzMjU0MDM2OTA=", "number": 655, "title": "Widgets? Or how to use with Django-filter?", "user": {"login": "lggwettmann", "id": 4527829, "node_id": "MDQ6VXNlcjQ1Mjc4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4527829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lggwettmann", "html_url": "https://github.com/lggwettmann", "followers_url": "https://api.github.com/users/lggwettmann/followers", "following_url": "https://api.github.com/users/lggwettmann/following{/other_user}", "gists_url": "https://api.github.com/users/lggwettmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/lggwettmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lggwettmann/subscriptions", "organizations_url": "https://api.github.com/users/lggwettmann/orgs", "repos_url": "https://api.github.com/users/lggwettmann/repos", "events_url": "https://api.github.com/users/lggwettmann/events{/privacy}", "received_events_url": "https://api.github.com/users/lggwettmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-22T18:01:54Z", "updated_at": "2018-05-22T21:53:07Z", "closed_at": "2018-05-22T21:52:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/653", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/653/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/653/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/653", "id": 322382793, "node_id": "MDU6SXNzdWUzMjIzODI3OTM=", "number": 653, "title": "getting below error on makemigrations", "user": {"login": "vinayinfo", "id": 10570630, "node_id": "MDQ6VXNlcjEwNTcwNjMw", "avatar_url": "https://avatars2.githubusercontent.com/u/10570630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinayinfo", "html_url": "https://github.com/vinayinfo", "followers_url": "https://api.github.com/users/vinayinfo/followers", "following_url": "https://api.github.com/users/vinayinfo/following{/other_user}", "gists_url": "https://api.github.com/users/vinayinfo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinayinfo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinayinfo/subscriptions", "organizations_url": "https://api.github.com/users/vinayinfo/orgs", "repos_url": "https://api.github.com/users/vinayinfo/repos", "events_url": "https://api.github.com/users/vinayinfo/events{/privacy}", "received_events_url": "https://api.github.com/users/vinayinfo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-11T17:57:17Z", "updated_at": "2018-08-23T04:58:25Z", "closed_at": "2018-08-23T04:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  class UserProfile(AbstractUser, MPTTModel):\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/base.py\", line 162, in __new__\r\n    new_class.add_to_class(obj_name, obj)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/base.py\", line 325, in add_to_class\r\n    value.contribute_to_class(cls, name)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 745, in contribute_to_class\r\n    super(ForeignObject, self).contribute_to_class(cls, name, private_only=private_only, **kwargs)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 348, in contribute_to_class\r\n    lazy_related_operation(resolve_related_class, cls, self.remote_field.model, field=self)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 85, in lazy_related_operation\r\n    return apps.lazy_model_operation(partial(function, **kwargs), *model_keys)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/apps/registry.py\", line 413, in lazy_model_operation\r\n    apply_next_model(model_class)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/apps/registry.py\", line 401, in apply_next_model\r\n    self.lazy_model_operation(next_function, *more_models)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/apps/registry.py\", line 413, in lazy_model_operation\r\n    apply_next_model(model_class)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/apps/registry.py\", line 401, in apply_next_model\r\n    self.lazy_model_operation(next_function, *more_models)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/apps/registry.py\", line 387, in lazy_model_operation\r\n    function()\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 347, in resolve_related_class\r\n    field.do_related_class(related, model)\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 407, in do_related_class\r\n    self.set_attributes_from_rel()\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 404, in set_attributes_from_rel\r\n    self.remote_field.set_field_name()\r\n  File \"/home/vinay/.virtualenvs/CCC/local/lib/python2.7/site-packages/django/db/models/fields/reverse_related.py\", line 229, in set_field_name\r\n    self.field_name = self.field_name or self.model._meta.pk.name\r\nAttributeError: 'NoneType' object has no attribute 'name'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/651", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/651/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/651/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/651", "id": 321887066, "node_id": "MDU6SXNzdWUzMjE4ODcwNjY=", "number": 651, "title": "django-mptt: bugs with multiple databases", "user": {"login": "DomHudson", "id": 10864294, "node_id": "MDQ6VXNlcjEwODY0Mjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/10864294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DomHudson", "html_url": "https://github.com/DomHudson", "followers_url": "https://api.github.com/users/DomHudson/followers", "following_url": "https://api.github.com/users/DomHudson/following{/other_user}", "gists_url": "https://api.github.com/users/DomHudson/gists{/gist_id}", "starred_url": "https://api.github.com/users/DomHudson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DomHudson/subscriptions", "organizations_url": "https://api.github.com/users/DomHudson/orgs", "repos_url": "https://api.github.com/users/DomHudson/repos", "events_url": "https://api.github.com/users/DomHudson/events{/privacy}", "received_events_url": "https://api.github.com/users/DomHudson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-10T10:38:58Z", "updated_at": "2019-01-16T05:48:11Z", "closed_at": "2018-05-13T07:55:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\nDoes django-mptt support multiple client databases? I am not expecting to be able to maintain trees between the databases but I am attempting to have each database own it's own independent tree structure.\r\n\r\nThe following code works as expected:\r\n```python\r\ndatabase = 'default'\r\n\r\nparent = Entity.objects.using(database).create()\r\nchild = Entity.objects.using(database).create()\r\nchild.parent = parent\r\nchild.save()\r\n```\r\n\r\nAs does defining the entity with the parent during creation:\r\n```python\r\ndatabase = 'default'\r\n\r\nparent = Entity.objects.using(database).create()\r\nchild = Entity.objects.using(database).create(parent = parent)\r\n```\r\n\r\n--- \r\n\r\nHowever, as soon as the entity is not in the main database issues are encountered.\r\nThe first example now reads like this:\r\n  ```python\r\ndatabase = 'anything-other-than-default'\r\n\r\nparent = Entity.objects.using(database).create()\r\nchild = Entity.objects.using(database).create()\r\nchild.parent = parent\r\nchild.save()\r\n```\r\nThis raises \r\n> mptt.exceptions.InvalidMove: A node may not be made a child of any of its descendants.\r\n\r\nThe second approach:\r\n```python\r\ndatabase = 'anything-other-than-default'\r\n\r\nparent = Entity.objects.using(database).create()\r\nchild = Entity.objects.using(database).create(parent = parent)\r\n```\r\nRaises the following:\r\n```\r\n  File \"env/lib/python3.6/site-packages/django/db/models/query.py\", line 394, in create\r\n    obj.save(force_insert=True, using=self.db)\r\n  File \"env/lib/python3.6/site-packages/mptt/models.py\", line 1015, in save\r\n    self.insert_at(parent, position='last-child', allow_existing_pk=True)\r\n  File \"env/lib/python3.6/site-packages/mptt/models.py\", line 738, in insert_at\r\n    refresh_target=refresh_target)\r\n  File \"env/lib/python3.6/site-packages/mptt/managers.py\", line 72, in wrapped\r\n    return method(self, *args, **kwargs)\r\n  File \"env/lib/python3.6/site-packages/mptt/managers.py\", line 556, in insert_node\r\n    target._mptt_refresh()\r\n  File \"env/lib/python3.6/site-packages/mptt/models.py\", line 1057, in _mptt_refresh\r\n    )[0]\r\n  File \"env/lib/python3.6/site-packages/django/db/models/query.py\", line 289, in __getitem__\r\n    return list(qs)[0]\r\nIndexError: list index out of range\r\n```\r\n\r\nIf I go to line `env/lib/python3.6/site-packages/django/db/models/query.py` line 394 I can print out `self.db` and this points to `default` despite the all entities being created in a different database.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/649", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/649/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/649/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/649", "id": 316214861, "node_id": "MDU6SXNzdWUzMTYyMTQ4NjE=", "number": 649, "title": "InvalidMove not raised if parent assigned by id instead of object", "user": {"login": "Amoki", "id": 1349751, "node_id": "MDQ6VXNlcjEzNDk3NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1349751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amoki", "html_url": "https://github.com/Amoki", "followers_url": "https://api.github.com/users/Amoki/followers", "following_url": "https://api.github.com/users/Amoki/following{/other_user}", "gists_url": "https://api.github.com/users/Amoki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amoki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amoki/subscriptions", "organizations_url": "https://api.github.com/users/Amoki/orgs", "repos_url": "https://api.github.com/users/Amoki/repos", "events_url": "https://api.github.com/users/Amoki/events{/privacy}", "received_events_url": "https://api.github.com/users/Amoki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T10:30:00Z", "updated_at": "2020-03-09T09:18:50Z", "closed_at": "2020-03-09T09:18:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass Folder(MPTTModel):\r\n    name = models.CharField(max_length=255)\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children')\r\n\r\nfolder.parent = folder  # mptt.exceptions.InvalidMove: A node may not be made a child of itself.\r\n\r\nfolder.parent_id = folder.pk  # Nothing is raised\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/634", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/634/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/634/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/634", "id": 309022912, "node_id": "MDU6SXNzdWUzMDkwMjI5MTI=", "number": 634, "title": "Proposal: Order entries observe numerical names for MPTTMeta.order_insertion_by", "user": {"login": "McCavity", "id": 3414855, "node_id": "MDQ6VXNlcjM0MTQ4NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3414855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McCavity", "html_url": "https://github.com/McCavity", "followers_url": "https://api.github.com/users/McCavity/followers", "following_url": "https://api.github.com/users/McCavity/following{/other_user}", "gists_url": "https://api.github.com/users/McCavity/gists{/gist_id}", "starred_url": "https://api.github.com/users/McCavity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McCavity/subscriptions", "organizations_url": "https://api.github.com/users/McCavity/orgs", "repos_url": "https://api.github.com/users/McCavity/repos", "events_url": "https://api.github.com/users/McCavity/events{/privacy}", "received_events_url": "https://api.github.com/users/McCavity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-27T15:36:35Z", "updated_at": "2018-03-28T07:40:56Z", "closed_at": "2018-03-28T05:19:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm generating a tree from server positions which have roughly the format:\r\n\r\ncountry / city / provider / room / row / rack / side / position [ / blade server [ / slot ]]\r\n\r\n\"position\" is actually the location inside the rack, i.e. a number between 1 and 48 (slot numbers are affected, too, they range from 1 to 14). This is what my model looks like::\r\n\r\n    class Location(MPTTModel, DirtyFieldsMixin, PrintableModel):\r\n    \r\n        class Meta:\r\n            unique_together = ('name', 'parent')\r\n            verbose_name = 'Hardware Device Location'\r\n            verbose_name_plural = 'Hardware Device Locations'\r\n    \r\n        class MPTTMeta:\r\n            order_insertion_by = ['name']\r\n    \r\n        def get_all_fields(self):\r\n            return super(Location, self).get_all_fields(['id', 'created', 'modified'])\r\n    \r\n        def __str__(self):\r\n            return self.name\r\n    \r\n        name = models.CharField(max_length=40, verbose_name='Name')\r\n        location_type = models.CharField(max_length=40, verbose_name='Type', blank=True, null=True)\r\n        parent = TreeForeignKey('self', on_delete=models.SET_NULL, null=True, blank=True, related_name='children', db_index=True, default=None)\r\n\r\nas \"name\" is a CharField, the slots of a blade server get sorted like this::\r\n\r\n    1\r\n    10\r\n    11\r\n    12\r\n    13\r\n    14\r\n    2\r\n    3\r\n    ...\r\n\r\nWhich is perfectly okay for alpahanumeric sorting. However, would it be possible to add a flag to the `MPTTMeta' class that numbers in the name field get sorted numerically?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/631", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/631/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/631/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/631", "id": 303542073, "node_id": "MDU6SXNzdWUzMDM1NDIwNzM=", "number": 631, "title": "Get number of immediate children", "user": {"login": "OskarPersson", "id": 935414, "node_id": "MDQ6VXNlcjkzNTQxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/935414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OskarPersson", "html_url": "https://github.com/OskarPersson", "followers_url": "https://api.github.com/users/OskarPersson/followers", "following_url": "https://api.github.com/users/OskarPersson/following{/other_user}", "gists_url": "https://api.github.com/users/OskarPersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/OskarPersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OskarPersson/subscriptions", "organizations_url": "https://api.github.com/users/OskarPersson/orgs", "repos_url": "https://api.github.com/users/OskarPersson/repos", "events_url": "https://api.github.com/users/OskarPersson/events{/privacy}", "received_events_url": "https://api.github.com/users/OskarPersson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T16:25:33Z", "updated_at": "2018-03-08T19:20:06Z", "closed_at": "2018-03-08T19:20:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to count immediate children of a model instance similar to `get_descendant_count` or is a query needed here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/630", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/630/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/630/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/630", "id": 301082660, "node_id": "MDU6SXNzdWUzMDEwODI2NjA=", "number": 630, "title": "How filtered tree manager rebuild to to new TreeManager", "user": {"login": "mariusgre", "id": 16613902, "node_id": "MDQ6VXNlcjE2NjEzOTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/16613902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariusgre", "html_url": "https://github.com/mariusgre", "followers_url": "https://api.github.com/users/mariusgre/followers", "following_url": "https://api.github.com/users/mariusgre/following{/other_user}", "gists_url": "https://api.github.com/users/mariusgre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariusgre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariusgre/subscriptions", "organizations_url": "https://api.github.com/users/mariusgre/orgs", "repos_url": "https://api.github.com/users/mariusgre/repos", "events_url": "https://api.github.com/users/mariusgre/events{/privacy}", "received_events_url": "https://api.github.com/users/mariusgre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-28T16:05:29Z", "updated_at": "2018-02-28T20:00:19Z", "closed_at": "2018-02-28T19:59:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello my main goal would be to show active categories, and count how many products are in a category, so mainly I need to do this:\r\n\r\n`    categories = categories = Category.objects.filter(is_active=True).add_related_count(Category.objects.all(), Product, 'category', 'product_counts', cumulative=True)`\r\n\r\nBut I am getting an error, cannot call add_related_count method, because I need to call it from TreeManager, but after a filter it becoomes a TreeQuerySet.\r\n\r\nHas any1 any idea how could I fix this problem ? \r\n\r\nEDIT: found other way... Just added Custom Category class for TreeManager.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/628", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/628/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/628/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/628", "id": 298042994, "node_id": "MDU6SXNzdWUyOTgwNDI5OTQ=", "number": 628, "title": "get_cached_trees -> no such table exception on initial migration", "user": {"login": "colindjk", "id": 15971482, "node_id": "MDQ6VXNlcjE1OTcxNDgy", "avatar_url": "https://avatars2.githubusercontent.com/u/15971482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colindjk", "html_url": "https://github.com/colindjk", "followers_url": "https://api.github.com/users/colindjk/followers", "following_url": "https://api.github.com/users/colindjk/following{/other_user}", "gists_url": "https://api.github.com/users/colindjk/gists{/gist_id}", "starred_url": "https://api.github.com/users/colindjk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colindjk/subscriptions", "organizations_url": "https://api.github.com/users/colindjk/orgs", "repos_url": "https://api.github.com/users/colindjk/repos", "events_url": "https://api.github.com/users/colindjk/events{/privacy}", "received_events_url": "https://api.github.com/users/colindjk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-17T22:48:34Z", "updated_at": "2018-02-18T15:44:38Z", "closed_at": "2018-02-18T14:57:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using python 3.6\r\n\r\n_view.py_\r\n```python\r\nclass ExampleHierarchyList(generics.ListAPIView):\r\n    serializer_class = serializers.ExampleHierarchySerializer\r\n    queryset = models.Example.objects.get_cached_trees()\r\n```\r\n\r\nI have code that looks somewhat like that (just changed the base name to Example). When I run my _initial_ migrations `python manage.py makemigrations myapp` or just `... migrate myapp`, I get the error `no such table myapp_example`. \r\n\r\nMy solution to fix the error was to remove the line \r\n```python\r\n    queryset = models.Example.objects.get_cached_trees()\r\n```\r\n\r\nThen make the necessary migrations, after which point I could add the above line back into the code. A bit jank, but it worked. \r\n\r\nAlso wanted to point out that it did seem like a similar issue found in #623. Basically mptt code is executing before the migration actually happens. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/627", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/627/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/627/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/627", "id": 296802454, "node_id": "MDU6SXNzdWUyOTY4MDI0NTQ=", "number": 627, "title": "Accessing TreeManager within models with overriden manager (objects)", "user": {"login": "EralpB", "id": 2274357, "node_id": "MDQ6VXNlcjIyNzQzNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2274357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EralpB", "html_url": "https://github.com/EralpB", "followers_url": "https://api.github.com/users/EralpB/followers", "following_url": "https://api.github.com/users/EralpB/following{/other_user}", "gists_url": "https://api.github.com/users/EralpB/gists{/gist_id}", "starred_url": "https://api.github.com/users/EralpB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EralpB/subscriptions", "organizations_url": "https://api.github.com/users/EralpB/orgs", "repos_url": "https://api.github.com/users/EralpB/repos", "events_url": "https://api.github.com/users/EralpB/events{/privacy}", "received_events_url": "https://api.github.com/users/EralpB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-13T16:32:11Z", "updated_at": "2018-02-13T19:59:20Z", "closed_at": "2018-02-13T16:50:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I've a class which defines a custom objects class and \r\n\r\n```\r\nclass Genre(mptt_models.MPTTModel):\r\n    objects = BaseManager.from_queryset(GenreQuerySet)()\r\n```\r\n\r\nnow I can't access TreeManager, because I want to `rebuild()` my tree.\r\n\r\n```\r\nGenre.objects.rebuild()\r\n = > AttributeError: 'BaseManagerFromGenreQuerySet' object has no attribute 'rebuild'\r\n```\r\n\r\nAnd another question.. if I have many nodes with level 0 (without parents) will rebuild correct all the levels? Or do I have to do it for every `root`. I assume root is any node without a parent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/621", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/621/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/621/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/621", "id": 289295017, "node_id": "MDU6SXNzdWUyODkyOTUwMTc=", "number": 621, "title": "Quick search", "user": {"login": "bylli79", "id": 25764508, "node_id": "MDQ6VXNlcjI1NzY0NTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/25764508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bylli79", "html_url": "https://github.com/bylli79", "followers_url": "https://api.github.com/users/bylli79/followers", "following_url": "https://api.github.com/users/bylli79/following{/other_user}", "gists_url": "https://api.github.com/users/bylli79/gists{/gist_id}", "starred_url": "https://api.github.com/users/bylli79/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bylli79/subscriptions", "organizations_url": "https://api.github.com/users/bylli79/orgs", "repos_url": "https://api.github.com/users/bylli79/repos", "events_url": "https://api.github.com/users/bylli79/events{/privacy}", "received_events_url": "https://api.github.com/users/bylli79/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-17T14:57:12Z", "updated_at": "2018-01-20T12:05:24Z", "closed_at": "2018-01-20T12:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nhow can I use this type of search (/root/path1/path2../path n) to get to the node?\r\nDo I have to use cycles or is there a faster way?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/620", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/620/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/620/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/620", "id": 285661436, "node_id": "MDU6SXNzdWUyODU2NjE0MzY=", "number": 620, "title": "How to change default behavior of django-mptt?", "user": {"login": "nurzhannogerbek", "id": 8999232, "node_id": "MDQ6VXNlcjg5OTkyMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8999232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nurzhannogerbek", "html_url": "https://github.com/nurzhannogerbek", "followers_url": "https://api.github.com/users/nurzhannogerbek/followers", "following_url": "https://api.github.com/users/nurzhannogerbek/following{/other_user}", "gists_url": "https://api.github.com/users/nurzhannogerbek/gists{/gist_id}", "starred_url": "https://api.github.com/users/nurzhannogerbek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nurzhannogerbek/subscriptions", "organizations_url": "https://api.github.com/users/nurzhannogerbek/orgs", "repos_url": "https://api.github.com/users/nurzhannogerbek/repos", "events_url": "https://api.github.com/users/nurzhannogerbek/events{/privacy}", "received_events_url": "https://api.github.com/users/nurzhannogerbek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-03T11:30:06Z", "updated_at": "2018-01-04T11:52:29Z", "closed_at": "2018-01-04T11:52:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all THANKS for this project! I have 2 questions.\r\n\r\nBy default django-mptt create fields like: `lft, rght, level, tree_id` in database.\r\n\r\n1) Is it possible don't create fields like `lft, rght`? I dont need them cause I dont use these fields.\r\n2) Is it possible to rename `tree_id` to other name? For example: `position`.\r\n\r\nIt seems to me that only available solution is to change `0001_initial.py` file before `migrate` command. What can you advice to me?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/614", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/614/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/614/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/614", "id": 279626163, "node_id": "MDU6SXNzdWUyNzk2MjYxNjM=", "number": 614, "title": "django.template.base.VariableDoesNotExist in Django2", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T04:49:19Z", "updated_at": "2017-12-06T06:40:24Z", "closed_at": "2017-12-06T06:40:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am excited to hear that `django-mptt` is now support Django2.0. Therefore I start my mini project and follow the official tutorial. Admin page is perfectly fine.\r\n\r\nDjango2\r\nPython3\r\ndjango-mptt 4Dec `857a4a6`\r\n\r\n`django.template.base.VariableDoesNotExist: Failed lookup for key [nodes] in [{'True': True, 'False': False, 'None': None}, {}, {}, {'paginator': None, 'page_obj': None, 'is_paginated': False, 'object_list': <TreeQuerySet [<Genre: Bedroom Items>, <Genre: Almirah>, <Genre: Bed>]>, 'genre_list': <TreeQuerySet [<Genre: Bedroom Items>, <Genre: Almirah>, <Genre: Bed>]>, 'view': <genres.views.GenreListView object at 0x10764ef28>}]`\r\n\r\n`views.py`\r\n\r\n    from django.views.generic import ListView\r\n    \r\n    from genres.models import Genre\r\n    \r\n    \r\n    class GenreListView(ListView):\r\n        model = Genre\r\n        template_name = 'genre_list.html'\r\n\r\n\r\n`genre_list.html`\r\n\r\n    <!DOCTYPE html>\r\n    {% load mptt_tags %}\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <title>Genre ListView</title>\r\n    </head>\r\n    <body>\r\n    <ul class=\"root\">\r\n        {% recursetree nodes %}\r\n            <li>\r\n                {{ node.name }}\r\n                {% if not node.is_leaf_node %}\r\n                    <ul class=\"children\">\r\n                        {{ children }}\r\n                    </ul>\r\n                {% endif %}\r\n            </li>\r\n        {% endrecursetree %}\r\n    </ul>\r\n    </body>\r\n    </html>\r\n\r\n`models.py`\r\n\r\n    from django.db import models\r\n    from mptt.models import MPTTModel, TreeForeignKey\r\n    \r\n    \r\n    class Genre(MPTTModel):\r\n        name = models.CharField(max_length=50, unique=True)\r\n        parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True,\r\n                                on_delete=models.CASCADE)\r\n    \r\n        class MPTTMeta:\r\n            order_insertion_by = ['name']\r\n    \r\n        def __str__(self):\r\n            return f'{self.name}'\r\n\r\nWhere am I wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/613", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/613/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/613/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/613", "id": 278605904, "node_id": "MDU6SXNzdWUyNzg2MDU5MDQ=", "number": 613, "title": "New release with support for django 2.0", "user": {"login": "zw3n", "id": 13300616, "node_id": "MDQ6VXNlcjEzMzAwNjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/13300616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zw3n", "html_url": "https://github.com/zw3n", "followers_url": "https://api.github.com/users/zw3n/followers", "following_url": "https://api.github.com/users/zw3n/following{/other_user}", "gists_url": "https://api.github.com/users/zw3n/gists{/gist_id}", "starred_url": "https://api.github.com/users/zw3n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zw3n/subscriptions", "organizations_url": "https://api.github.com/users/zw3n/orgs", "repos_url": "https://api.github.com/users/zw3n/repos", "events_url": "https://api.github.com/users/zw3n/events{/privacy}", "received_events_url": "https://api.github.com/users/zw3n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-12-01T21:45:47Z", "updated_at": "2018-03-08T21:49:15Z", "closed_at": "2017-12-09T00:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.0 is due to release [soon](https://www.djangoproject.com/weblog/2017/nov/15/django-20-release-candidate-1-released/) and needs fixes already on master. I can't see any breaking changes so a simple point release would do.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/610", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/610/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/610/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/610", "id": 272503835, "node_id": "MDU6SXNzdWUyNzI1MDM4MzU=", "number": 610, "title": "RemovedInDjango20 warning class is actually removed in Django 2.0", "user": {"login": "canni", "id": 385754, "node_id": "MDQ6VXNlcjM4NTc1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/385754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canni", "html_url": "https://github.com/canni", "followers_url": "https://api.github.com/users/canni/followers", "following_url": "https://api.github.com/users/canni/following{/other_user}", "gists_url": "https://api.github.com/users/canni/gists{/gist_id}", "starred_url": "https://api.github.com/users/canni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canni/subscriptions", "organizations_url": "https://api.github.com/users/canni/orgs", "repos_url": "https://api.github.com/users/canni/repos", "events_url": "https://api.github.com/users/canni/events{/privacy}", "received_events_url": "https://api.github.com/users/canni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-09T10:01:14Z", "updated_at": "2017-11-20T11:36:55Z", "closed_at": "2017-11-09T10:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Import of `RemovedInDjango20` warning class fails when actually using Django 2.0, because this warning class is no longer there :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/609", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/609/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/609/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/609", "id": 271375968, "node_id": "MDU6SXNzdWUyNzEzNzU5Njg=", "number": 609, "title": "Order insertion by a field with null value 2", "user": {"login": "hale01", "id": 6126244, "node_id": "MDQ6VXNlcjYxMjYyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6126244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hale01", "html_url": "https://github.com/hale01", "followers_url": "https://api.github.com/users/hale01/followers", "following_url": "https://api.github.com/users/hale01/following{/other_user}", "gists_url": "https://api.github.com/users/hale01/gists{/gist_id}", "starred_url": "https://api.github.com/users/hale01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hale01/subscriptions", "organizations_url": "https://api.github.com/users/hale01/orgs", "repos_url": "https://api.github.com/users/hale01/repos", "events_url": "https://api.github.com/users/hale01/events{/privacy}", "received_events_url": "https://api.github.com/users/hale01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-06T06:58:50Z", "updated_at": "2017-11-06T07:10:57Z", "closed_at": "2017-11-06T07:10:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "is issue #340 fixed, thanks, but don`t work without this part\r\n\r\n```\r\ndef insertion_target_filters(self, instance, order_insertion_by):\r\n      ...\r\n        # Additional portion of code\r\n        if value is None:\r\n            value = bool(filter_suffix=='__lt')\r\n            filter_suffix = '__isnull' \r\n        # END Additional portion of code\r\n      ...\r\n```\r\n\r\nP.S. code from issue #340", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/599", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/599/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/599/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/599", "id": 263335686, "node_id": "MDU6SXNzdWUyNjMzMzU2ODY=", "number": 599, "title": "Django 2", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-06T04:52:35Z", "updated_at": "2017-10-18T06:39:58Z", "closed_at": "2017-10-17T20:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass Category(MPTTModel, AbstractModelController):\r\n    \"\"\"Directory is shorter than class name to save monitor area\"\"\"\r\n\r\n    type = models.PositiveSmallIntegerField(choices=StaticCategories.service_type_choices,\r\n                                            verbose_name=_(\"Service Type\"))\r\n    sequence = models.PositiveSmallIntegerField(default=0, db_index=True, verbose_name=_('Sequence'))\r\n    name = models.CharField(max_length=255, blank=False, unique=True)\r\n    header_image = models.ImageField(upload_to='foto/header_image', height_field=None, width_field=None, max_length=100,\r\n                                     blank=True,\r\n                                     null=True)\r\n    content_image = models.ImageField(upload_to='foto/content_image', height_field=None, width_field=None,\r\n                                      max_length=100, blank=True,\r\n                                      null=True)\r\n    popup_image = models.ImageField(upload_to='foto/popup_image', height_field=None, width_field=None, max_length=100,\r\n                                    blank=True,\r\n                                    null=True)\r\n    attribute = JSONField(default={})\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\r\n\r\n    class MPTTMeta:\r\n        order_insertion_by = ['name']\r\n\r\n    class Meta:\r\n        verbose_name_plural = \"Categories\"\r\n\r\n    def __str__(self):\r\n        return f\"{self.name}\"\r\n```\r\n\r\nWith `Django2` I got error\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/el/.pyenv/versions/soken3.7/lib/python3.7/site-packages/django/core/management/__init__.py\", line 371, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/el/.pyenv/versions/soken3.7/lib/python3.7/site-packages/django/core/management/__init__.py\", line 347, in execute\r\n    django.setup()\r\n  File \"/Users/el/.pyenv/versions/soken3.7/lib/python3.7/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/el/.pyenv/versions/soken3.7/lib/python3.7/site-packages/django/apps/registry.py\", line 112, in populate\r\n    app_config.import_models()\r\n  File \"/Users/el/.pyenv/versions/soken3.7/lib/python3.7/site-packages/django/apps/config.py\", line 198, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/Users/el/.pyenv/versions/3.7-dev/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 679, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/el/Code/norak-cutter/soken/soken-web/soken_web/apps/categories/models.py\", line 41, in <module>\r\n    class Category(MPTTModel, AbstractModelController):\r\n  File \"/Users/el/Code/norak-cutter/soken/soken-web/soken_web/apps/categories/models.py\", line 58, in Category\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\r\nTypeError: __init__() missing 1 required positional argument: 'on_delete'\r\n```\r\nWhat is the best `on_delete` option for me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/598", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/598/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/598/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/598", "id": 263176678, "node_id": "MDU6SXNzdWUyNjMxNzY2Nzg=", "number": 598, "title": "When to rebuild and/or reload to avoid corrupt trees with bulk creates", "user": {"login": "joinghel", "id": 22074706, "node_id": "MDQ6VXNlcjIyMDc0NzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/22074706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joinghel", "html_url": "https://github.com/joinghel", "followers_url": "https://api.github.com/users/joinghel/followers", "following_url": "https://api.github.com/users/joinghel/following{/other_user}", "gists_url": "https://api.github.com/users/joinghel/gists{/gist_id}", "starred_url": "https://api.github.com/users/joinghel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joinghel/subscriptions", "organizations_url": "https://api.github.com/users/joinghel/orgs", "repos_url": "https://api.github.com/users/joinghel/repos", "events_url": "https://api.github.com/users/joinghel/events{/privacy}", "received_events_url": "https://api.github.com/users/joinghel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-05T15:51:59Z", "updated_at": "2017-10-18T10:07:20Z", "closed_at": "2017-10-18T10:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nThis is more a question than an issue, but I can't find any clarity in the docs or code. I'll try to explain this using an example based on the docs. Assume I have the  `Genre` class and I do the following operations:\r\n\r\n    rock = Genre.objects.create(name='B')\r\n    metal = Genre.objects.create(name='C')\r\n    metal.parent = rock\r\n    metal.save()\r\n\r\n    # Now add a Genre which comes before the others due to ordering on name\r\n    classic = Genre.objects.create(name='A')\r\n        \r\n    # Get the ancestors of metal, including metal\r\n    ancestors = metal.get_ancestors(ascending=True, include_self=True)\r\n\r\nWhat happens: `metal` has no ancestors. In fact, even `metal` is not in `ancestors` even though `include_self=True`.\r\n\r\nWhat I tried:\r\n- Added `Genre.objects.rebuild()` after the creates: makes no difference. So should I do this?\r\n- Added `metal.refresh_from_db()` after the creates: makes no difference.\r\n- Refreshed all Genre objects: **this works**\r\n\r\nTook me a while to figure out I had to reload the objects. So my questions: \r\n- Am I doing something wrong?\r\n- Will this happen when I have a CreateView and I call `get_ancestors` in a different view?\r\n\r\nThis actually happened while creating objects in `setUp()` during unit tests and directly calling `get_ancestors` to verify a method on my model. So normally this does not happen in my code, but I'd still like to know if I should add extra checks.\r\n\r\nI currently handle this like this (to be notified rather than doing wrong stuff):\r\n\r\n    ancestors = metal.get_ancestors(ascending=True, include_self=True)\r\n    if not ancestors:\r\n        raise EmptyResultSet\r\n\r\nThank you very much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/596", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/596/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/596/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/596", "id": 262405061, "node_id": "MDU6SXNzdWUyNjI0MDUwNjE=", "number": 596, "title": "Do you have plan for file import?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-03T12:16:11Z", "updated_at": "2017-10-18T06:43:09Z", "closed_at": "2017-10-17T20:51:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you have plan for file import feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/590", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/590/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/590/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/590", "id": 252974721, "node_id": "MDU6SXNzdWUyNTI5NzQ3MjE=", "number": 590, "title": "Duplicate tree", "user": {"login": "gabrielfast", "id": 12465752, "node_id": "MDQ6VXNlcjEyNDY1NzUy", "avatar_url": "https://avatars3.githubusercontent.com/u/12465752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielfast", "html_url": "https://github.com/gabrielfast", "followers_url": "https://api.github.com/users/gabrielfast/followers", "following_url": "https://api.github.com/users/gabrielfast/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielfast/subscriptions", "organizations_url": "https://api.github.com/users/gabrielfast/orgs", "repos_url": "https://api.github.com/users/gabrielfast/repos", "events_url": "https://api.github.com/users/gabrielfast/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielfast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-25T17:53:51Z", "updated_at": "2017-10-17T21:07:36Z", "closed_at": "2017-10-17T21:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nHow do I duplicate a tree with new tree_id?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/585", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/585/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/585/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/585", "id": 247162326, "node_id": "MDU6SXNzdWUyNDcxNjIzMjY=", "number": 585, "title": "Hierarchical urls", "user": {"login": "dg1980", "id": 12830399, "node_id": "MDQ6VXNlcjEyODMwMzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/12830399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dg1980", "html_url": "https://github.com/dg1980", "followers_url": "https://api.github.com/users/dg1980/followers", "following_url": "https://api.github.com/users/dg1980/following{/other_user}", "gists_url": "https://api.github.com/users/dg1980/gists{/gist_id}", "starred_url": "https://api.github.com/users/dg1980/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dg1980/subscriptions", "organizations_url": "https://api.github.com/users/dg1980/orgs", "repos_url": "https://api.github.com/users/dg1980/repos", "events_url": "https://api.github.com/users/dg1980/events{/privacy}", "received_events_url": "https://api.github.com/users/dg1980/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-01T18:37:39Z", "updated_at": "2017-08-02T16:00:42Z", "closed_at": "2017-08-02T16:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys, \r\n\r\nI'm trying to achieve hierarchical urls with access to specified objects in tree (for an example: /category/ gives category object in tree, /category/subcategory/ gives subcategory object in tree etc.). Unfortunately I did not find any working solution. I have tried packages like django-mptt-urls or django-clean-urls, but they don't work with Django 1.11. \r\n\r\nThis topic has been repeatedly discussed. However, I did not find the right, clean,  pythonic solution.\r\n\r\nDo you have any advice how to achieve it?\r\n\r\nI will be grateful for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/581", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/581/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/581/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/581", "id": 237876123, "node_id": "MDU6SXNzdWUyMzc4NzYxMjM=", "number": 581, "title": "How to count item that related to specific node?", "user": {"login": "james1888", "id": 8617506, "node_id": "MDQ6VXNlcjg2MTc1MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8617506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/james1888", "html_url": "https://github.com/james1888", "followers_url": "https://api.github.com/users/james1888/followers", "following_url": "https://api.github.com/users/james1888/following{/other_user}", "gists_url": "https://api.github.com/users/james1888/gists{/gist_id}", "starred_url": "https://api.github.com/users/james1888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/james1888/subscriptions", "organizations_url": "https://api.github.com/users/james1888/orgs", "repos_url": "https://api.github.com/users/james1888/repos", "events_url": "https://api.github.com/users/james1888/events{/privacy}", "received_events_url": "https://api.github.com/users/james1888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-22T15:02:06Z", "updated_at": "2019-01-23T10:17:53Z", "closed_at": "2019-01-23T08:30:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a model like this\r\n\r\n```python\r\nfrom django.db import models\r\nfrom mptt.models import MPTTModel, TreeForeignKey\r\n\r\nclass Category(MPTTModel):\r\n\tname = models.CharField(max_length=50, unique=True, blank=False)\r\n\tparent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\r\n\r\n\tdef __str__(self):\r\n\t\treturn self.name\r\n\r\n\tclass MPTTMeta:\r\n\t\torder_insertion_by = ['name']\r\n\r\n\tclass Meta:\r\n\t\tverbose_name_plural = 'Categories'\r\n\r\n\r\nclass Ad(models.Model):\r\n\ttitle = models.CharField(max_length=50, blank=False)\r\n\tcategory = models.ForeignKey(Category)\r\n```\r\n\r\nAnd I have the `Category` structure like this\r\n\r\nCars & Vehicles\r\n----Heavy Vehicles\r\n----Machinery & Construction\r\n----Motorcycles & Bikes\r\n----Commercial Vehicles\r\n----Vehicle Accessories\r\n\r\nIf I have 10 `Ad` with the category of Motorcycles & Bikes, how can I count the related item via `Category`? I want to be able to count like below in django template\r\n\r\nCars & Vehicles (63)\r\n----Heavy Vehicles (15)\r\n----Machinery & Construction (13)\r\n----Motorcycles & Bikes (10)\r\n----Commercial Vehicles (15)\r\n----Vehicle Accessories (10)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/569", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/569/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/569/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/569", "id": 229852806, "node_id": "MDU6SXNzdWUyMjk4NTI4MDY=", "number": 569, "title": "Tree_id help", "user": {"login": "andrewfam", "id": 1430616, "node_id": "MDQ6VXNlcjE0MzA2MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1430616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewfam", "html_url": "https://github.com/andrewfam", "followers_url": "https://api.github.com/users/andrewfam/followers", "following_url": "https://api.github.com/users/andrewfam/following{/other_user}", "gists_url": "https://api.github.com/users/andrewfam/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewfam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewfam/subscriptions", "organizations_url": "https://api.github.com/users/andrewfam/orgs", "repos_url": "https://api.github.com/users/andrewfam/repos", "events_url": "https://api.github.com/users/andrewfam/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewfam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-19T02:19:41Z", "updated_at": "2017-10-17T21:14:49Z", "closed_at": "2017-10-17T21:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi this is more a question then a bug.\r\n\r\nI'm using this to generate the heirachy of departments for a company.\r\nOn top of that, this heirachy changes for every product assigned to the company as part of my saas.\r\n\r\nSo for a company, I have TreeA to map the departments for Product A and TreeB will map for ProductB\r\n\r\nI'm currently having to pull all all the tree nodes for a company and filter by product to get the nodes I need. I'm seeing that all items with the same tree_id are being pulled out together.\r\n\r\nIs there any way of removing the tree_id from the querysets? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/565", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/565/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/565/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/565", "id": 226214956, "node_id": "MDU6SXNzdWUyMjYyMTQ5NTY=", "number": 565, "title": "Add a composite index on tree_id and lft", "user": {"login": "orf", "id": 1027207, "node_id": "MDQ6VXNlcjEwMjcyMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orf", "html_url": "https://github.com/orf", "followers_url": "https://api.github.com/users/orf/followers", "following_url": "https://api.github.com/users/orf/following{/other_user}", "gists_url": "https://api.github.com/users/orf/gists{/gist_id}", "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orf/subscriptions", "organizations_url": "https://api.github.com/users/orf/orgs", "repos_url": "https://api.github.com/users/orf/repos", "events_url": "https://api.github.com/users/orf/events{/privacy}", "received_events_url": "https://api.github.com/users/orf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/13", "html_url": "https://github.com/django-mptt/django-mptt/milestone/13", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/13/labels", "id": 2542364, "node_id": "MDk6TWlsZXN0b25lMjU0MjM2NA==", "number": 13, "title": "0.10", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "open", "created_at": "2017-05-25T08:22:29Z", "updated_at": "2019-04-13T19:17:14Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2017-05-04T08:53:19Z", "updated_at": "2017-09-01T08:17:13Z", "closed_at": "2017-09-01T04:19:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I can tell most `mptt` queries either filter or order on both `tree_id` and `lft` at once. It seems `mptt` adds `index=True` to all tree-related fields, however this is not too useful.\r\n\r\nIn our postgres-backed application adding a composite index like the one below improved query times tenfold, from ~150ms to ~10ms with 55638 rows and 2272 unique trees:\r\n\r\n```sql\r\nCREATE INDEX tree_idx\r\n  ON public.tree\r\n  USING btree\r\n  (tree_id ASC, lft ASC);\r\n```\r\n\r\nWith the new Django 1.11 index support adding this index in a cross-database way is as simple as adding `indexes = [models.Index(fields=['tree_id', 'lft'])]` in the `Meta` of the model.\r\n\r\nOf course we could do this ourselves, but it seems like this would be a good thing to include as a default if possible. The individual indexes on `tree_id` and `lft` could be removed in this case as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/564", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/564/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/564/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/564", "id": 225952375, "node_id": "MDU6SXNzdWUyMjU5NTIzNzU=", "number": 564, "title": "django 1.11 supported new release", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/10", "html_url": "https://github.com/django-mptt/django-mptt/milestone/10", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/10/labels", "id": 1464531, "node_id": "MDk6TWlsZXN0b25lMTQ2NDUzMQ==", "number": 10, "title": "0.9", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2015-12-17T08:37:45Z", "updated_at": "2017-12-09T00:50:00Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2017-05-03T11:13:39Z", "updated_at": "2017-12-09T00:50:00Z", "closed_at": "2017-12-09T00:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/560", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/560/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/560/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/560", "id": 220469827, "node_id": "MDU6SXNzdWUyMjA0Njk4Mjc=", "number": 560, "title": "IntegrityError when bulk creating instances", "user": {"login": "OskarPersson", "id": 935414, "node_id": "MDQ6VXNlcjkzNTQxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/935414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OskarPersson", "html_url": "https://github.com/OskarPersson", "followers_url": "https://api.github.com/users/OskarPersson/followers", "following_url": "https://api.github.com/users/OskarPersson/following{/other_user}", "gists_url": "https://api.github.com/users/OskarPersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/OskarPersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OskarPersson/subscriptions", "organizations_url": "https://api.github.com/users/OskarPersson/orgs", "repos_url": "https://api.github.com/users/OskarPersson/repos", "events_url": "https://api.github.com/users/OskarPersson/events{/privacy}", "received_events_url": "https://api.github.com/users/OskarPersson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-09T13:04:47Z", "updated_at": "2017-10-17T21:11:07Z", "closed_at": "2017-10-17T21:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to bulk create instances of the model below I get an exception, is this behaviour expected?\r\n\r\n```\r\nclass MyModel(MPTTModel):\r\n    id = models.IntegerField(primary_key=True)\r\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\r\n```\r\n\r\n```\r\n>>> m1 = MyModel(id=1)                                                                                                                     \r\n>>> m2 = MyModel(id=2, parent=m1)                                                                                                                         \r\n>>> m3 = MyModel(id=3, parent=m1)\r\n>>> l =  [m1, m2, m3] \r\n>>> MyModel.objects.bulk_create(l)\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/models/manager.py\", line 85, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/models/query.py\", line 449, in bulk_create\r\n    self._batched_insert(objs_with_pk, fields, batch_size)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/models/query.py\", line 1066, in _batched_insert\r\n    self._insert(item, fields=fields, using=self.db)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/models/query.py\", line 1043, in _insert\r\n    return query.get_compiler(using=using).execute_sql(return_id)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/models/sql/compiler.py\", line 1054, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/backends/utils.py\", line 79, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/utils.py\", line 94, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/Users/Oskar/.pyenv/versions/venv/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\", line 337, in execute\r\n    return Database.Cursor.execute(self, query, params)\r\nIntegrityError: NOT NULL constraint failed: mymodel_mymodel.lft\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/556", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/556/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/556/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/556", "id": 218797177, "node_id": "MDU6SXNzdWUyMTg3OTcxNzc=", "number": 556, "title": "cache_tree_children doesn't get all nodes passed to it", "user": {"login": "jerickbixly", "id": 2738535, "node_id": "MDQ6VXNlcjI3Mzg1MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2738535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerickbixly", "html_url": "https://github.com/jerickbixly", "followers_url": "https://api.github.com/users/jerickbixly/followers", "following_url": "https://api.github.com/users/jerickbixly/following{/other_user}", "gists_url": "https://api.github.com/users/jerickbixly/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerickbixly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerickbixly/subscriptions", "organizations_url": "https://api.github.com/users/jerickbixly/orgs", "repos_url": "https://api.github.com/users/jerickbixly/repos", "events_url": "https://api.github.com/users/jerickbixly/events{/privacy}", "received_events_url": "https://api.github.com/users/jerickbixly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-02T22:02:18Z", "updated_at": "2017-04-04T01:28:19Z", "closed_at": "2017-04-04T01:28:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "How does cache_tree_children() function exactly? I have the following model\r\n\r\n```\r\nclass AddressBook(MPTTModel):\r\n    user = models.OneToOneField(User, related_name='addressbook', **optional)\r\n    title = models.CharField(max_length=60)\r\n    employee_id = models.CharField(max_length=60, verbose_name='Employee ID', **optional)\r\n    parent = TreeForeignKey('self', verbose_name='Manager', related_name='children', **optional)\r\n```\r\n\r\nwhich i then filter on like so\r\n```\r\n            query = (Q(user__first_name__icontains=search_text) |\r\n                     Q(user__last_name__icontains=search_text) |\r\n                     Q(title__icontains=search_text) |\r\n                     Q(employee_id__icontains=search_text))\r\n\r\n            addressbook = (AddressBook.objects.filter(query)\r\n                                              .exclude(user__isnull=True)\r\n                                              .exclude(user__is_active=False)\r\n                                              .exclude(hide_user=True)).order_by('lft')\r\n```\r\n\r\nwhen i did my query, addressbook had 3 objects\r\n[<AddressBook: mbaker>, <AddressBook: djacobs>, <AddressBook: eandrews>]\r\n\r\nbut when i passed this list to cache_tree_children, it only returned <AddressBook: mbaker>. I was expecting all three to be returned. Not sure though if this is related but mbaker is at the highest level (a root) node in my AddressBook tree although it doesn't yet have children nodes while djacobs and eandrews are leaf nodes of another tree. Those two don't have children nodes. I was thinking that maybe cache_tree_children only works for non-leaf nodes so i tried passing other leaf nodes to it but the leaf nodes were returned. \r\n\r\nEdit: mbaker is a level 0 node, djacobs is a level 2 node and eandrews is a level 3 node. djacobs and eandrews belong to the same tree.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/551", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/551/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/551/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/551", "id": 213639865, "node_id": "MDU6SXNzdWUyMTM2Mzk4NjU=", "number": 551, "title": "DraggableMPTTAdmin with expanded tree on startup", "user": {"login": "normanjaeckel", "id": 2073844, "node_id": "MDQ6VXNlcjIwNzM4NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2073844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/normanjaeckel", "html_url": "https://github.com/normanjaeckel", "followers_url": "https://api.github.com/users/normanjaeckel/followers", "following_url": "https://api.github.com/users/normanjaeckel/following{/other_user}", "gists_url": "https://api.github.com/users/normanjaeckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/normanjaeckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/normanjaeckel/subscriptions", "organizations_url": "https://api.github.com/users/normanjaeckel/orgs", "repos_url": "https://api.github.com/users/normanjaeckel/repos", "events_url": "https://api.github.com/users/normanjaeckel/events{/privacy}", "received_events_url": "https://api.github.com/users/normanjaeckel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 47199, "node_id": "MDU6TGFiZWw0NzE5OQ==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Enhancement", "name": "Enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-12T22:19:28Z", "updated_at": "2017-04-07T06:50:44Z", "closed_at": "2017-04-07T06:50:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to configure DraggableMPTTAdmin so that the tree is expanded on startup? At the moment it is collapsed and I can expand all nodes via the button (and then something is stored in the local storage of the browser) but I would like to change the user experience for my admin users here.\r\n\r\nIf it is currently not possible, you can treat this as a feature request (for this very nice project btw.). Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/536", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/536/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/536/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/536", "id": 203809432, "node_id": "MDU6SXNzdWUyMDM4MDk0MzI=", "number": 536, "title": "PR #491 broke raw_id_fields on Django 1.9 and below", "user": {"login": "yakky", "id": 714711, "node_id": "MDQ6VXNlcjcxNDcxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/714711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yakky", "html_url": "https://github.com/yakky", "followers_url": "https://api.github.com/users/yakky/followers", "following_url": "https://api.github.com/users/yakky/following{/other_user}", "gists_url": "https://api.github.com/users/yakky/gists{/gist_id}", "starred_url": "https://api.github.com/users/yakky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yakky/subscriptions", "organizations_url": "https://api.github.com/users/yakky/orgs", "repos_url": "https://api.github.com/users/yakky/repos", "events_url": "https://api.github.com/users/yakky/events{/privacy}", "received_events_url": "https://api.github.com/users/yakky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-28T14:16:42Z", "updated_at": "2017-03-06T06:50:10Z", "closed_at": "2017-03-06T06:50:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Changes in #491 broke the related selection from raw_id_fields by adding Django 1.10-only syntax (``data-popup-opener``).\r\nThe old ``onclick=\"opener.dismissRelatedLookupPopup(window, &#39;%s&#39;); return false;\"`` syntax should be present for lower django versions", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/532", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/532/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/532/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/532", "id": 197520572, "node_id": "MDU6SXNzdWUxOTc1MjA1NzI=", "number": 532, "title": "TypeError in DraggableMPTTAdmin with UUIDField primary keys", "user": {"login": "tjg1", "id": 1909894, "node_id": "MDQ6VXNlcjE5MDk4OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1909894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjg1", "html_url": "https://github.com/tjg1", "followers_url": "https://api.github.com/users/tjg1/followers", "following_url": "https://api.github.com/users/tjg1/following{/other_user}", "gists_url": "https://api.github.com/users/tjg1/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjg1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjg1/subscriptions", "organizations_url": "https://api.github.com/users/tjg1/orgs", "repos_url": "https://api.github.com/users/tjg1/repos", "events_url": "https://api.github.com/users/tjg1/events{/privacy}", "received_events_url": "https://api.github.com/users/tjg1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-26T00:39:14Z", "updated_at": "2017-01-16T03:26:42Z", "closed_at": "2017-01-16T03:26:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "My project uses `UUIDField` as the primary key for all its models. Registering a model containing a `UUIDField` with `DraggableMPTTAdmin` throws a `TypeError` when viewing the model tree in Django admin. Using the regular `MPTTModelAdmin` works fine.\r\n\r\n### Traceback\r\n\r\n```\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://127.0.0.1:8000/admin/catalogue/category/\r\n\r\nDjango Version: 1.10.4\r\nPython Version: 3.5.2\r\nInstalled Applications:\r\n['catalogue.apps.CatalogueConfig',\r\n 'django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'mptt']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\core\\handlers\\exception.py\" in inner\r\n  39.             response = get_response(request)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\core\\handlers\\base.py\" in _get_response\r\n  187.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\core\\handlers\\base.py\" in _get_response\r\n  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\contrib\\admin\\options.py\" in wrapper\r\n  544.                 return self.admin_site.admin_view(view)(*args, **kwargs)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\utils\\decorators.py\" in _wrapped_view\r\n  149.                     response = view_func(request, *args, **kwargs)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\views\\decorators\\cache.py\" in _wrapped_view_func\r\n  57.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\django\\contrib\\admin\\sites.py\" in inner\r\n  211.             return view(request, *args, **kwargs)\r\n\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\mptt\\admin.py\" in changelist_view\r\n  199.                     'data-context': json.dumps(self._tree_context(request)),\r\n\r\nFile \"C:\\Python35\\Lib\\json\\__init__.py\" in dumps\r\n  230.         return _default_encoder.encode(obj)\r\n\r\nFile \"C:\\Python35\\Lib\\json\\encoder.py\" in encode\r\n  198.         chunks = self.iterencode(o, _one_shot=True)\r\n\r\nFile \"C:\\Python35\\Lib\\json\\encoder.py\" in iterencode\r\n  256.         return _iterencode(o, 0)\r\n\r\nFile \"C:\\Python35\\Lib\\json\\encoder.py\" in default\r\n  179.         raise TypeError(repr(o) + \" is not JSON serializable\")\r\n\r\nException Type: TypeError at /admin/catalogue/category/\r\nException Value: UUID('659dd628-9f85-4a73-beb2-ba676ea4e2a2') is not JSON serializable\r\n```\r\n\r\n### Relevant bit\r\n\r\n```\r\nFile \"C:\\Users\\tomg\\virtualenv\\django\\lib\\site-packages\\mptt\\admin.py\" in changelist_view\r\n  199.                     'data-context': json.dumps(self._tree_context(request)),\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/513", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/513/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/513/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/513", "id": 179780921, "node_id": "MDU6SXNzdWUxNzk3ODA5MjE=", "number": 513, "title": "wheel contains \"tests\" package?", "user": {"login": "jeroenp", "id": 492422, "node_id": "MDQ6VXNlcjQ5MjQyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/492422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeroenp", "html_url": "https://github.com/jeroenp", "followers_url": "https://api.github.com/users/jeroenp/followers", "following_url": "https://api.github.com/users/jeroenp/following{/other_user}", "gists_url": "https://api.github.com/users/jeroenp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeroenp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeroenp/subscriptions", "organizations_url": "https://api.github.com/users/jeroenp/orgs", "repos_url": "https://api.github.com/users/jeroenp/repos", "events_url": "https://api.github.com/users/jeroenp/events{/privacy}", "received_events_url": "https://api.github.com/users/jeroenp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-28T13:59:10Z", "updated_at": "2016-12-22T01:22:48Z", "closed_at": "2016-12-22T01:22:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThe django-mptt's wheel contains a \"tests\" package (just like FeinCMS, by the way) which gets installed in site-packages/. This can give issues with pip at some point when another package that also bundles a \"tests\" package tries to update/install: \n\n```\nOperation not permitted: 'hopsa/lib/python2.7/site-packages/tests/settings.py'\n```\n\nI notice that you have an include in manifest.in and an exclude in find_packages. Yet somehow I end up with mptt's \"tests\" in my 0.8.6 install:  \n\n```\n$ mkvirtualenv hopsa\n(hopsa) ~$ pip install django-mptt\n(hopsa) ~$ cdsitepackages\n(hopsa) site-packages$ pip freeze --all\ndjango-mptt==0.8.6\npip==8.1.2\nsetuptools==26.0.0\nwheel==0.29.0\n(hopsa) site-packages$ ls\ndjango_mptt-0.8.6.dist-info pip             setuptools-26.0.0.dist-info\neasy_install.py         pip-8.1.2.dist-info     tests\neasy_install.pyc        pkg_resources           wheel\nmptt                setuptools          wheel-0.29.0.dist-info\n```\n\n(I also see __pycache__'s in the wheel, which you try to exclude in manifest.in)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/510", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/510/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/510/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/510", "id": 176325934, "node_id": "MDU6SXNzdWUxNzYzMjU5MzQ=", "number": 510, "title": "Disable moving based on permissions ", "user": {"login": "frague59", "id": 1118696, "node_id": "MDQ6VXNlcjExMTg2OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1118696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frague59", "html_url": "https://github.com/frague59", "followers_url": "https://api.github.com/users/frague59/followers", "following_url": "https://api.github.com/users/frague59/following{/other_user}", "gists_url": "https://api.github.com/users/frague59/gists{/gist_id}", "starred_url": "https://api.github.com/users/frague59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frague59/subscriptions", "organizations_url": "https://api.github.com/users/frague59/orgs", "repos_url": "https://api.github.com/users/frague59/repos", "events_url": "https://api.github.com/users/frague59/events{/privacy}", "received_events_url": "https://api.github.com/users/frague59/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T09:00:43Z", "updated_at": "2016-09-12T09:35:53Z", "closed_at": "2016-09-12T09:32:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nI've implemented a Tree using MPTT. \nSome users can see a part of the tree, and some can see the whole tree. I use DragableMPTTAdmin to display this tree in the admin...\n\nIs it possible to disable the \"move\" functionalities, based on permissions ?\n\nI've tryed to override the tree_actions method, but it does not know about the request, which could provide me the user.\n\nThanks for your great tool !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/507", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/507/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/507/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/507", "id": 173605180, "node_id": "MDU6SXNzdWUxNzM2MDUxODA=", "number": 507, "title": "[RFE] make MPTTModel.delete return the same as Model.delete", "user": {"login": "radektheloner", "id": 7268060, "node_id": "MDQ6VXNlcjcyNjgwNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7268060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radektheloner", "html_url": "https://github.com/radektheloner", "followers_url": "https://api.github.com/users/radektheloner/followers", "following_url": "https://api.github.com/users/radektheloner/following{/other_user}", "gists_url": "https://api.github.com/users/radektheloner/gists{/gist_id}", "starred_url": "https://api.github.com/users/radektheloner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radektheloner/subscriptions", "organizations_url": "https://api.github.com/users/radektheloner/orgs", "repos_url": "https://api.github.com/users/radektheloner/repos", "events_url": "https://api.github.com/users/radektheloner/events{/privacy}", "received_events_url": "https://api.github.com/users/radektheloner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-27T17:02:29Z", "updated_at": "2017-01-16T03:38:19Z", "closed_at": "2017-01-16T03:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\ncould `MPTTModel.delete` return the same as what `Model.delete` returns?\n\nQuoting [Django documentation](https://docs.djangoproject.com/en/1.10/ref/models/instances/#django.db.models.Model.delete):\n\n> This method returns the number of objects deleted and a dictionary with the number of deletions per object type.\n\nThe use case:\nI'm currently extending the `delete` method of one of my models (not a subclass of `MPTTModel`). The method is going to delete the model itself and a referred `MPTTModel` instance. In order to preserve the `Model` contract, I'd like to return the concatenation the result of calling `super().delete()` and `mptt_instance.delete()`.\n\nExample:\n\n``` python\nimport collections\n\nimport django.db.models\nimport django.db.transaction\nimport mptt.models\n\nclass Bar(mptt.models.MPTTModel):\n    parent = mptt.models.TreeForeignKey('self', null=True, related_name='children')\n\nclass Foo(django.db.models.Model):\n    bar = django.db.models.OneToOneField(Bar, django.db.models.PROTECT)\n\n    @django.db.transaction.atomic\n    def delete(self, *args, **kwargs):\n        total, per_class = super().delete(*args, **kwargs)\n        total_, per_class_ = self.bar.delete(*args, **kwargs)\n        counter = collections.Counter(per_class)\n        counter.update(per_class_)\n        return total + total_, dict(counter)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/502", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/502/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/502/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/502", "id": 172869950, "node_id": "MDU6SXNzdWUxNzI4Njk5NTA=", "number": 502, "title": "Migration crash with AttributeError: can't set attribute", "user": {"login": "Jingshuai", "id": 7655285, "node_id": "MDQ6VXNlcjc2NTUyODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7655285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jingshuai", "html_url": "https://github.com/Jingshuai", "followers_url": "https://api.github.com/users/Jingshuai/followers", "following_url": "https://api.github.com/users/Jingshuai/following{/other_user}", "gists_url": "https://api.github.com/users/Jingshuai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jingshuai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jingshuai/subscriptions", "organizations_url": "https://api.github.com/users/Jingshuai/orgs", "repos_url": "https://api.github.com/users/Jingshuai/repos", "events_url": "https://api.github.com/users/Jingshuai/events{/privacy}", "received_events_url": "https://api.github.com/users/Jingshuai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-24T05:51:52Z", "updated_at": "2016-08-24T06:32:58Z", "closed_at": "2016-08-24T05:58:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm upgrading Django from 1.9.8 to 1.10. I have upgraded mptt to 0.8.6.\nIn my migration file have this code:\n\n```\nmigrations.CreateModel(\n    name='Catalog',\n    fields=[\n        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n        ('name', models.CharField(...),\n        ('lft', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('rght', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('level', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('parent', mptt.fields.TreeForeignKey(...)),\n    ],\n    managers=[\n        ('_default_manager', django.db.models.manager.Manager()),\n    ],\n),\n```\n\nWhen migrate raise:\n\n```\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/core/management/__init__.py\", line 359, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/core/management/base.py\", line 305, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 202, in handle\n    targets, plan, fake=fake, fake_initial=fake_initial\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 97, in migrate\n    state = self._migrate_all_forwards(plan, full_plan, fake=fake, fake_initial=fake_initial)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 132, in _migrate_all_forwards\n    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 237, in apply_migration\n    state = migration.apply(state, schema_editor)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 119, in apply\n    operation.state_forwards(self.app_label, project_state)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/operations/models.py\", line 90, in state_forwards\n    list(self.managers),\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/state.py\", line 93, in add_model\n    self.reload_model(app_label, model_name)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/state.py\", line 162, in reload_model\n    self.apps.render_multiple(states_to_be_rendered)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/state.py\", line 277, in render_multiple\n    model.render(self)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/migrations/state.py\", line 559, in render\n    body,\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/models/base.py\", line 157, in __new__\n    new_class.add_to_class(obj_name, obj)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/models/base.py\", line 316, in add_to_class\n    value.contribute_to_class(cls, name)\n  File \"/Users/rhcc/proton/venv/lib/python2.7/site-packages/django/db/models/manager.py\", line 120, in contribute_to_class\n    setattr(model, name, ManagerDescriptor(self))\nAttributeError: can't set attribute\n```\n\nWhen I change the code to:\n\n```\nmigrations.CreateModel(\n    name='Catalog',\n    fields=[\n        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n        ('name', models.CharField(...),\n        ('lft', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('rght', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('level', models.PositiveIntegerField(db_index=True, editable=False)),\n        ('parent', mptt.fields.TreeForeignKey(...)),\n    ],\n    # managers=[\n    #     ('_default_manager', django.db.models.manager.Manager()),\n    # ],\n),\n```\n\nthe migrate is pass. Is there anything wrong with managers or my code? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/501", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/501/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/501/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/501", "id": 172337523, "node_id": "MDU6SXNzdWUxNzIzMzc1MjM=", "number": 501, "title": "With Django-1.10  error", "user": {"login": "shtalinberg", "id": 7803600, "node_id": "MDQ6VXNlcjc4MDM2MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7803600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtalinberg", "html_url": "https://github.com/shtalinberg", "followers_url": "https://api.github.com/users/shtalinberg/followers", "following_url": "https://api.github.com/users/shtalinberg/following{/other_user}", "gists_url": "https://api.github.com/users/shtalinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtalinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtalinberg/subscriptions", "organizations_url": "https://api.github.com/users/shtalinberg/orgs", "repos_url": "https://api.github.com/users/shtalinberg/repos", "events_url": "https://api.github.com/users/shtalinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/shtalinberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-21T19:47:13Z", "updated_at": "2016-08-22T05:25:35Z", "closed_at": "2016-08-22T05:25:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "After update Django to 1.10  I see this error :\n\n```\n./manage.py runserver\nUnhandled exception in thread started by <function wrapper at 0x7f0afd514398>\nTraceback (most recent call last):\n  File \".venv/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \".venv/local/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 113, in inner_run\n    autoreload.raise_last_exception()\n  File \".venv/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(*_exception)\n  File \".venv/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \".venv/local/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \".venv/local/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \".venv/local/lib/python2.7/site-packages/django/apps/config.py\", line 199, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \".venv/local/lib/python2.7/site-packages/mptt/models.py\", line 385, in <module>\n    class MPTTModel(six.with_metaclass(MPTTModelBase, models.Model)):\n  File \".venv/local/lib/python2.7/site-packages/django/utils/six.py\", line 808, in __new__\n    return meta(name, bases, d)\n  File \".venv/local/lib/python2.7/site-packages/mptt/models.py\", line 263, in __new__\n    cls = super_new(meta, class_name, bases, class_dict)\n  File \".venv/local/lib/python2.7/site-packages/django/db/models/base.py\", line 157, in __new__\n    new_class.add_to_class(obj_name, obj)\n  File \".venv/local/lib/python2.7/site-packages/django/db/models/base.py\", line 316, in add_to_class\n    value.contribute_to_class(cls, name)\n  File \".venv/local/lib/python2.7/site-packages/mptt/managers.py\", line 82, in contribute_to_class\n    super(TreeManager, self).contribute_to_class(model, name)\n  File \".venv/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 120, in contribute_to_class\n    setattr(model, name, ManagerDescriptor(self))\nAttributeError: can't set attribute\n```\n\nversion mptt == 0.8.5\nwith Django 1.9.9 work fine.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/500", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/500/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/500/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/500", "id": 172261681, "node_id": "MDU6SXNzdWUxNzIyNjE2ODE=", "number": 500, "title": "mongodb support", "user": {"login": "aqweider", "id": 11158733, "node_id": "MDQ6VXNlcjExMTU4NzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/11158733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aqweider", "html_url": "https://github.com/aqweider", "followers_url": "https://api.github.com/users/aqweider/followers", "following_url": "https://api.github.com/users/aqweider/following{/other_user}", "gists_url": "https://api.github.com/users/aqweider/gists{/gist_id}", "starred_url": "https://api.github.com/users/aqweider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aqweider/subscriptions", "organizations_url": "https://api.github.com/users/aqweider/orgs", "repos_url": "https://api.github.com/users/aqweider/repos", "events_url": "https://api.github.com/users/aqweider/events{/privacy}", "received_events_url": "https://api.github.com/users/aqweider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-20T08:56:08Z", "updated_at": "2016-08-20T10:01:31Z", "closed_at": "2016-08-20T10:01:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this library support mongodb ?\n\nthanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/499", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/499/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/499/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/499", "id": 171807192, "node_id": "MDU6SXNzdWUxNzE4MDcxOTI=", "number": 499, "title": "Models with multiple tree managers", "user": {"login": "randlet", "id": 78128, "node_id": "MDQ6VXNlcjc4MTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/78128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randlet", "html_url": "https://github.com/randlet", "followers_url": "https://api.github.com/users/randlet/followers", "following_url": "https://api.github.com/users/randlet/following{/other_user}", "gists_url": "https://api.github.com/users/randlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/randlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randlet/subscriptions", "organizations_url": "https://api.github.com/users/randlet/orgs", "repos_url": "https://api.github.com/users/randlet/repos", "events_url": "https://api.github.com/users/randlet/events{/privacy}", "received_events_url": "https://api.github.com/users/randlet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-18T02:56:55Z", "updated_at": "2017-02-07T20:59:56Z", "closed_at": "2017-02-07T20:59:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to upgrade to Django 1.9 and MPTT 0.8.5 from Django 1.8 and MPTT 0.7.0 I ran into some MPPT behaviour that I found very confusing.  Finally today I tracked down the issue.  We have a model with two TreeManager's on it like so:\n\n```\nclass FooObjects(TreeManager):\n    def get_queryset(self):\n        return super(FooObjects, self).get_queryset().exclude(foo='')\n\nclass Bar(MPTTModel):\n    parent = models.ForeignKey('self', related_name=\"children\", ...)\n    bar = CharField(...)\n    foo = CharField(...)\n\n    objects = TreeManager()\n    foo_objects = FooObjects()\n\n```\n\nThis worked fine in MPTT 0.7.0 but when upgrading to 0.8.5 weird things like this would happen:\n\n```\nbar1 = Bar.objects.create(bar=\"b1\", foo='')\nbar2 = Bar.objects.create(bar=\"b2\", foo='')\nbar3 = Bar.objects.create(bar=\"b3\", foo='')\n\nbar2.parent = bar1\nbar2.save()\nbar3.parent = bar1\nbar3.save()\n\n# this  should have created a parent (f1) with two children (f2, f3)\n\nbar1.refresh_from_db()\nbar2.refresh_from_db()\nbar3.refresh_from_db()\n\nbar2.parent # bar1\nbar3.parent # bar1\nbar1.get_children() # empty list !\nbar1.get_ancestors() # empty list !\nbar1.children.all() # [<bar2>, <bar3>] !!!\n\n```\n\nEventually I figured out that the `_tree_manager` attribute of the `Bar` class was being set to `Bar.foo_objects` rather than `Bar.objects` as I was expecting.\n\n`MPTTModelBase` [decides what to use as the _tree_manager_attribute](https://github.com/django-mptt/django-mptt/blob/master/mptt/models.py#L337-L360) based on the first instance of a `TreeManager` it finds in the list of `cls._meta.concrete_managers + cls._.meta.abstract_managers`.  Looking at `Bar._meta.concrete_managers` I found `[(35, 'foo_objects', <FooObjects>), (34, 'objects', <TreeManager>), (36, '_base_manager', <django.db.models.manager.Manager>)]` which explains why `_tree_manager` is set to `FooObjects` rather than `objects` as expected.\n\nAs a hacky workaround you can simply do the following:\n\n```\nclass Bar(MPTTModel):\n        ...\n\nBar._tree_manager = Bar.objects\n```\n\nor\n\n```\nclass Bar(MPTTModel):\n    ...\n    __getattribute__(self, attr):\n        if attr == \"_tree_manager\":\n            return Bar.objects\n        return super(Bar, self).__getattribute__(attr)\n```\n\nbut neither of those is ideal from a future proofing perspective.\n\nAll of this to say, it would be great if at a minimum this was documented somewhere or even better if we could specify what the default tree manager should be.  Checking if `cls._default_manager` is an instance of `TreeManager` before falling back to `cls._meta.concrete_managers + cls._meta.abatract_managers` would probably work well too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/497", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/497/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/497/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/497", "id": 171370113, "node_id": "MDU6SXNzdWUxNzEzNzAxMTM=", "number": 497, "title": "It does not work with django1.10", "user": {"login": "i2ft", "id": 20158008, "node_id": "MDQ6VXNlcjIwMTU4MDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/20158008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/i2ft", "html_url": "https://github.com/i2ft", "followers_url": "https://api.github.com/users/i2ft/followers", "following_url": "https://api.github.com/users/i2ft/following{/other_user}", "gists_url": "https://api.github.com/users/i2ft/gists{/gist_id}", "starred_url": "https://api.github.com/users/i2ft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/i2ft/subscriptions", "organizations_url": "https://api.github.com/users/i2ft/orgs", "repos_url": "https://api.github.com/users/i2ft/repos", "events_url": "https://api.github.com/users/i2ft/events{/privacy}", "received_events_url": "https://api.github.com/users/i2ft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-16T09:57:52Z", "updated_at": "2016-08-16T09:59:00Z", "closed_at": "2016-08-16T09:59:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "check this issue\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/494", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/494/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/494/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/494", "id": 169758240, "node_id": "MDU6SXNzdWUxNjk3NTgyNDA=", "number": 494, "title": "Pickle error on deferred fields as of 0.8.5", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-06T17:53:43Z", "updated_at": "2016-08-16T22:31:26Z", "closed_at": "2016-08-16T22:31:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 0.8.5 there is an error with deferred fields. I've been able to bisect it to b0c8561876011e0cdd561a4fec5c0c4c0551b4af\n\nExample model:\n\n```\nfrom django.db import models\nfrom mptt.models import MPTTModel, TreeForeignKey\n\n\nclass Foo(MPTTModel):\n    parent = TreeForeignKey('self', null=True)\n    title1 = models.CharField(max_length=10)\n    title2 = models.CharField(max_length=10)\n```\n\nTest case:\n\n```\nfrom django.test import TestCase\nfrom .models import Foo \nimport pickle\n\n\nclass FooTestCase(TestCase):\n    def test_foo(self):\n        Foo.objects.create(title1=\"11\", title2=\"22\")\n\n        qs = Foo.objects.only('title1')\n        pickle.dumps(list(qs), protocol=pickle.HIGHEST_PROTOCOL)\n```\n\nThis happens in one of my projects where a deferred queryset (having a summary of the table) is cached in memcached.\n\nWhen the following line is removed from the `MPTTModel.__init__()` method, the pickling above works:\n\n`self._tree_manager = self._tree_manager.db_manager(self._state.db)`\n\nI hope this greatly helps finding this bug. My mptt knowledge kind of stops at that point..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/493", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/493/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/493/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/493", "id": 169583487, "node_id": "MDU6SXNzdWUxNjk1ODM0ODc=", "number": 493, "title": "add 'mptt' in INSTALLED_APPS", "user": {"login": "Zverushko", "id": 4013285, "node_id": "MDQ6VXNlcjQwMTMyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4013285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zverushko", "html_url": "https://github.com/Zverushko", "followers_url": "https://api.github.com/users/Zverushko/followers", "following_url": "https://api.github.com/users/Zverushko/following{/other_user}", "gists_url": "https://api.github.com/users/Zverushko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zverushko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zverushko/subscriptions", "organizations_url": "https://api.github.com/users/Zverushko/orgs", "repos_url": "https://api.github.com/users/Zverushko/repos", "events_url": "https://api.github.com/users/Zverushko/events{/privacy}", "received_events_url": "https://api.github.com/users/Zverushko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-05T11:02:21Z", "updated_at": "2016-08-05T12:41:51Z", "closed_at": "2016-08-05T12:41:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Then i add this str in list a got error:\nhttp://pastebin.com/VjwBxhZW\nhttps://yadi.sk/i/GVl0i-fatwntn\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/492", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/492/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/492/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/492", "id": 169285553, "node_id": "MDU6SXNzdWUxNjkyODU1NTM=", "number": 492, "title": "Show child from linked mptt table in django", "user": {"login": "ohid1986", "id": 14290896, "node_id": "MDQ6VXNlcjE0MjkwODk2", "avatar_url": "https://avatars0.githubusercontent.com/u/14290896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohid1986", "html_url": "https://github.com/ohid1986", "followers_url": "https://api.github.com/users/ohid1986/followers", "following_url": "https://api.github.com/users/ohid1986/following{/other_user}", "gists_url": "https://api.github.com/users/ohid1986/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohid1986/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohid1986/subscriptions", "organizations_url": "https://api.github.com/users/ohid1986/orgs", "repos_url": "https://api.github.com/users/ohid1986/repos", "events_url": "https://api.github.com/users/ohid1986/events{/privacy}", "received_events_url": "https://api.github.com/users/ohid1986/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-04T03:52:13Z", "updated_at": "2016-08-07T05:54:21Z", "closed_at": "2016-08-05T12:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have created django-mptt table which gave following tree view:\n\n```\nGroup-1 0\n    Ministry A 1\n        Division A 2\n        Division B 2\n        Division C 2\n    Ministry B 1\n    Ministry C 1\n        Division D 2\n        Division E 2\n    Ministry D 1\nGroup-2 0\n    Ministry E 1\n        Division G 2\n        Division Z 2\n    Ministry F 1\n        Division I 2\n        Division J 2\n\n```\n\nHere 0,1,2 are node level.\n\nHere is my Sitting model:\n\n```\nclass Sitting(models.Model):\n    sit_date = models.DateField(blank=False)\n    cut_off_date = models.DateField(null=True, blank=True)\n    ballot_date = models.DateField(null=True, blank=True)\n    sess_no = models.ForeignKey(Session,\n                                 on_delete=models.CASCADE)\n    genre = TreeForeignKey('Genre', null=True, blank=True, db_index=True)\n```\n\nThis is my views.py:\n\n```\ndef show_genres(request):\n    return render(\n        request,\n        'genre/genres.html',\n        {'nodes':Genre.objects.all()},)\n\ndef sitting_list(request):\n    return render(\n        request,\n        'genre/sitting_list.html',\n        {'sittings': Sitting.objects.all()}, )\n```\n\nmy templates:\n\n```\n <table>\n        <tr>\n      <th>Sitting Date</th>\n      <th>Group No</th>        \n        </tr>        \n        {% for sitting in sittings %}\n        <tr>\n           <td> {{ sitting }}</td>\n            <td>{{sitting.genre}}</td>\n     </tr>\n        {% endfor %}        \n    </table>\n\n```\n\nMy sitting output:\n\n```\nSitting Date    Group No\n2016-08-31     Group-1\n2016-09-01     Group-2\n```\n\nBut I want to show all descendants(i.e. level 1(e.g., Ministry A) and level 2(e.g., Division A)) instead of level 0 (e.g., Group-1)\n\nHow I to I do that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/490", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/490/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/490/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/490", "id": 169142766, "node_id": "MDU6SXNzdWUxNjkxNDI3NjY=", "number": 490, "title": "\"'NoneType' is not iterable\" if list_display_links is None", "user": {"login": "akolpakov", "id": 1101455, "node_id": "MDQ6VXNlcjExMDE0NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1101455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akolpakov", "html_url": "https://github.com/akolpakov", "followers_url": "https://api.github.com/users/akolpakov/followers", "following_url": "https://api.github.com/users/akolpakov/following{/other_user}", "gists_url": "https://api.github.com/users/akolpakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akolpakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akolpakov/subscriptions", "organizations_url": "https://api.github.com/users/akolpakov/orgs", "repos_url": "https://api.github.com/users/akolpakov/repos", "events_url": "https://api.github.com/users/akolpakov/events{/privacy}", "received_events_url": "https://api.github.com/users/akolpakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-03T14:18:02Z", "updated_at": "2016-08-06T06:41:27Z", "closed_at": "2016-08-06T06:41:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "If set `list_display_links = None` in Django Admin:\n\n``` python\nclass SomeAdmin(MPTTModelAdmin):\n    list_display_links = None\n```\n\nException will be raised:\n\n```\nFile \"...sandbox/lib/python2.7/site-packages/mptt/templatetags/mptt_admin.py\", line 174, in mptt_result_list\n    'results': list(mptt_results(cl))}\n  File \"...sandbox/lib/python2.7/site-packages/mptt/templatetags/mptt_admin.py\", line 164, in mptt_results\n    yield list(mptt_items_for_result(cl, res, None))\n  File \"...sandbox/lib/python2.7/site-packages/mptt/templatetags/mptt_admin.py\", line 118, in mptt_items_for_result\n    if (first and not cl.list_display_links) or field_name in cl.list_display_links:\nTypeError: argument of type 'NoneType' is not iterable\n```\n\n[Line](https://github.com/django-mptt/django-mptt/blob/master/mptt/templatetags/mptt_admin.py#L118) should be reviewed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/488", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/488/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/488/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/488", "id": 168900536, "node_id": "MDU6SXNzdWUxNjg5MDA1MzY=", "number": 488, "title": "Django 1.10 incompatibility", "user": {"login": "karolyi", "id": 987055, "node_id": "MDQ6VXNlcjk4NzA1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/987055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karolyi", "html_url": "https://github.com/karolyi", "followers_url": "https://api.github.com/users/karolyi/followers", "following_url": "https://api.github.com/users/karolyi/following{/other_user}", "gists_url": "https://api.github.com/users/karolyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/karolyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karolyi/subscriptions", "organizations_url": "https://api.github.com/users/karolyi/orgs", "repos_url": "https://api.github.com/users/karolyi/repos", "events_url": "https://api.github.com/users/karolyi/events{/privacy}", "received_events_url": "https://api.github.com/users/karolyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T14:31:43Z", "updated_at": "2016-08-03T05:51:00Z", "closed_at": "2016-08-03T05:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nI just upgraded Django to 1.10, and here's the error:\n\n``` python\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"xxxx/venv/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"xxxx/venv/lib/python3.5/site-packages/django/core/management/__init__.py\", line 341, in execute\n    django.setup()\n  File \"xxxx/venv/lib/python3.5/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"xxxx/venv/lib/python3.5/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"xxxx/venv/lib/python3.5/site-packages/django/apps/config.py\", line 199, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"xxxx/webmaster_stats/visualizer/faq/models.py\", line 7, in <module>\n    from mptt.models import MPTTModel, TreeForeignKey, TreeOneToOneField\n  File \"xxxx/venv/lib/python3.5/site-packages/mptt/models.py\", line 385, in <module>\n    class MPTTModel(six.with_metaclass(MPTTModelBase, models.Model)):\n  File \"xxxx/venv/lib/python3.5/site-packages/django/utils/six.py\", line 808, in __new__\n    return meta(name, bases, d)\n  File \"xxxx/venv/lib/python3.5/site-packages/mptt/models.py\", line 263, in __new__\n    cls = super_new(meta, class_name, bases, class_dict)\n  File \"xxxx/venv/lib/python3.5/site-packages/django/db/models/base.py\", line 157, in __new__\n    new_class.add_to_class(obj_name, obj)\n  File \"xxxx/venv/lib/python3.5/site-packages/django/db/models/base.py\", line 316, in add_to_class\n    value.contribute_to_class(cls, name)\n  File \"xxxx/venv/lib/python3.5/site-packages/mptt/managers.py\", line 82, in contribute_to_class\n    super(TreeManager, self).contribute_to_class(model, name)\n  File \"xxxx/venv/lib/python3.5/site-packages/django/db/models/manager.py\", line 120, in contribute_to_class\n    setattr(model, name, ManagerDescriptor(self))\nAttributeError: can't set attribute\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/487", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/487/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/487/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/487", "id": 168267275, "node_id": "MDU6SXNzdWUxNjgyNjcyNzU=", "number": 487, "title": "Filter __in", "user": {"login": "sam-thecoder", "id": 15666437, "node_id": "MDQ6VXNlcjE1NjY2NDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/15666437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-thecoder", "html_url": "https://github.com/sam-thecoder", "followers_url": "https://api.github.com/users/sam-thecoder/followers", "following_url": "https://api.github.com/users/sam-thecoder/following{/other_user}", "gists_url": "https://api.github.com/users/sam-thecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-thecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-thecoder/subscriptions", "organizations_url": "https://api.github.com/users/sam-thecoder/orgs", "repos_url": "https://api.github.com/users/sam-thecoder/repos", "events_url": "https://api.github.com/users/sam-thecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-thecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-29T07:33:00Z", "updated_at": "2016-07-29T09:13:13Z", "closed_at": "2016-07-29T09:13:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to do a filter for with a model with TreeManyToManyField but I get the error \nTypeError: 'Category' object is not iterable\n\ntrending = Category.objects.get(id=312)\nIn [28]: trending\nOut[28]: <Category: Lifestyle >> Trending Topics>\n\nlisty = Article.objects.filter(categories__in=trending)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/485", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/485/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/485/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/485", "id": 168124542, "node_id": "MDU6SXNzdWUxNjgxMjQ1NDI=", "number": 485, "title": "Kindly update pip package", "user": {"login": "chogarcia", "id": 4965837, "node_id": "MDQ6VXNlcjQ5NjU4Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4965837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chogarcia", "html_url": "https://github.com/chogarcia", "followers_url": "https://api.github.com/users/chogarcia/followers", "following_url": "https://api.github.com/users/chogarcia/following{/other_user}", "gists_url": "https://api.github.com/users/chogarcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chogarcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chogarcia/subscriptions", "organizations_url": "https://api.github.com/users/chogarcia/orgs", "repos_url": "https://api.github.com/users/chogarcia/repos", "events_url": "https://api.github.com/users/chogarcia/events{/privacy}", "received_events_url": "https://api.github.com/users/chogarcia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/10", "html_url": "https://github.com/django-mptt/django-mptt/milestone/10", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/10/labels", "id": 1464531, "node_id": "MDk6TWlsZXN0b25lMTQ2NDUzMQ==", "number": 10, "title": "0.9", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2015-12-17T08:37:45Z", "updated_at": "2017-12-09T00:50:00Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2016-07-28T15:26:19Z", "updated_at": "2017-01-24T19:45:01Z", "closed_at": "2017-01-24T19:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems does not have `mptt.admin.TreeRelatedFieldListFilter`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/482", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/482/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/482/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/482", "id": 165107175, "node_id": "MDU6SXNzdWUxNjUxMDcxNzU=", "number": 482, "title": "Data migration produces AttributeError: type object 'Page' has no attribute 'objects'", "user": {"login": "rrrrroman", "id": 19950021, "node_id": "MDQ6VXNlcjE5OTUwMDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/19950021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rrrrroman", "html_url": "https://github.com/rrrrroman", "followers_url": "https://api.github.com/users/rrrrroman/followers", "following_url": "https://api.github.com/users/rrrrroman/following{/other_user}", "gists_url": "https://api.github.com/users/rrrrroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rrrrroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rrrrroman/subscriptions", "organizations_url": "https://api.github.com/users/rrrrroman/orgs", "repos_url": "https://api.github.com/users/rrrrroman/repos", "events_url": "https://api.github.com/users/rrrrroman/events{/privacy}", "received_events_url": "https://api.github.com/users/rrrrroman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-12T15:19:28Z", "updated_at": "2016-07-13T12:49:48Z", "closed_at": "2016-07-13T12:49:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Django 1.9 with django-mptt 0.8.4.\n\nWhen running data migration I get an `AttributeError: type object 'Page' has no attribute 'objects'`. Here's the code I'm using:\n\n``` python\nfrom __future__ import unicode_literals\n\nfrom django.db import migrations\n\n\ndef create_initial_page_versions(apps, schema_editor):\n    Page = apps.get_model('pages', 'Page')\n     for page in Page.objects.all():  # fails with: AttributeError: type object 'Page' has no attribute 'objects'\n    # for page in Page._default_manager.all():  # this WORKS\n        version = PageVersion.objects.create(page=page, owner_id=1)\n        page.active_version = version\n        page.save()\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('pages', '0006_auto_20160712_1413'),\n    ]\n\n    operations = [\n        migrations.RunPython(create_initial_page_versions, reverse_code=migrations.RunPython.noop),\n    ]\n```\n\nPage model is inheriting from MPTTModel and I think that's where the problem is.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/477", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/477/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/477/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/477", "id": 161062272, "node_id": "MDU6SXNzdWUxNjEwNjIyNzI=", "number": 477, "title": "how to use 'recursetree' in base.html", "user": {"login": "sunjoomoon", "id": 3462279, "node_id": "MDQ6VXNlcjM0NjIyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3462279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjoomoon", "html_url": "https://github.com/sunjoomoon", "followers_url": "https://api.github.com/users/sunjoomoon/followers", "following_url": "https://api.github.com/users/sunjoomoon/following{/other_user}", "gists_url": "https://api.github.com/users/sunjoomoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjoomoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjoomoon/subscriptions", "organizations_url": "https://api.github.com/users/sunjoomoon/orgs", "repos_url": "https://api.github.com/users/sunjoomoon/repos", "events_url": "https://api.github.com/users/sunjoomoon/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjoomoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-19T08:13:35Z", "updated_at": "2016-06-19T08:45:38Z", "closed_at": "2016-06-19T08:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Below works all fine in the relevant app's list page, ex), node_list.html. \n\nNow, how do I use this in 'base.html' so menus can be used in all the pages ?\n\n```\n{% load mptt_tags %}\n...\n<ul>\n{% recursetree page_list %}\n<li>\n<a href=\"{{ node.get_absolute_url }}\">{{ node.title }}</a>\n{% if not node.is_leaf_node %}\n<ol>\n{{ children }}\n</ol>\n{% endif %}\n</li>\n{% endrecursetree %}\n</ul>\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/475", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/475/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/475/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/475", "id": 160705327, "node_id": "MDU6SXNzdWUxNjA3MDUzMjc=", "number": 475, "title": "Django itself shouldn't be referenced in install_requires", "user": {"login": "andybak", "id": 60035, "node_id": "MDQ6VXNlcjYwMDM1", "avatar_url": "https://avatars2.githubusercontent.com/u/60035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andybak", "html_url": "https://github.com/andybak", "followers_url": "https://api.github.com/users/andybak/followers", "following_url": "https://api.github.com/users/andybak/following{/other_user}", "gists_url": "https://api.github.com/users/andybak/gists{/gist_id}", "starred_url": "https://api.github.com/users/andybak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andybak/subscriptions", "organizations_url": "https://api.github.com/users/andybak/orgs", "repos_url": "https://api.github.com/users/andybak/repos", "events_url": "https://api.github.com/users/andybak/events{/privacy}", "received_events_url": "https://api.github.com/users/andybak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-16T16:33:15Z", "updated_at": "2016-06-16T19:07:12Z", "closed_at": "2016-06-16T17:51:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#3 Fixed this back in 2010 but it seems to have crept back in for some reason.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/473", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/473/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/473/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/473", "id": 159678933, "node_id": "MDU6SXNzdWUxNTk2Nzg5MzM=", "number": 473, "title": "django 1.10 'Options' object has no attribute 'concrete_managers'", "user": {"login": "burakk", "id": 176419, "node_id": "MDQ6VXNlcjE3NjQxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/176419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burakk", "html_url": "https://github.com/burakk", "followers_url": "https://api.github.com/users/burakk/followers", "following_url": "https://api.github.com/users/burakk/following{/other_user}", "gists_url": "https://api.github.com/users/burakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/burakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burakk/subscriptions", "organizations_url": "https://api.github.com/users/burakk/orgs", "repos_url": "https://api.github.com/users/burakk/repos", "events_url": "https://api.github.com/users/burakk/events{/privacy}", "received_events_url": "https://api.github.com/users/burakk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 47200, "node_id": "MDU6TGFiZWw0NzIwMA==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Defect", "name": "Defect", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-10T17:01:33Z", "updated_at": "2016-06-16T17:51:39Z", "closed_at": "2016-06-16T17:51:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am getting 'Options' object has no attribute 'concrete_managers'  error when i try to run my project.\n\nNote:\nI have modified models.py  as said in issue #469\n\nError is as:\n...    cls = meta.register(cls)\n  File \"/Users/burakk/BurakWorks/Web/VIRTUAL_ENVIRONMENTS/python3.5.0_pikto_web_dj_1_10/lib/python3.5/site-packages/mptt/models.py\", line 348, in register\n    cls_managers = cls._meta.concrete_managers + cls._meta.abstract_managers\nAttributeError: 'Options' object has no attribute 'concrete_managers'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/472", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/472/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/472/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/472", "id": 158315472, "node_id": "MDU6SXNzdWUxNTgzMTU0NzI=", "number": 472, "title": "Don't publish 'tests' as a separate package..", "user": {"login": "iljamaas", "id": 456945, "node_id": "MDQ6VXNlcjQ1Njk0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/456945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iljamaas", "html_url": "https://github.com/iljamaas", "followers_url": "https://api.github.com/users/iljamaas/followers", "following_url": "https://api.github.com/users/iljamaas/following{/other_user}", "gists_url": "https://api.github.com/users/iljamaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/iljamaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iljamaas/subscriptions", "organizations_url": "https://api.github.com/users/iljamaas/orgs", "repos_url": "https://api.github.com/users/iljamaas/repos", "events_url": "https://api.github.com/users/iljamaas/events{/privacy}", "received_events_url": "https://api.github.com/users/iljamaas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-03T08:22:48Z", "updated_at": "2016-06-03T09:23:53Z", "closed_at": "2016-06-03T09:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The distributed  django-mptt packages contain a '**tests**' directory which, when installed, is a top-level site-package, which can easily conflict with other package (doing the same thing ... )\n\nI think the tests should either be NOT included in the packages, OR, be put inside the django-mptt package to prevent conflicts.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/471", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/471/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/471/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/471", "id": 157741497, "node_id": "MDU6SXNzdWUxNTc3NDE0OTc=", "number": 471, "title": "MPTTModelAdmin broken admin view", "user": {"login": "ksanderer", "id": 1606635, "node_id": "MDQ6VXNlcjE2MDY2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1606635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksanderer", "html_url": "https://github.com/ksanderer", "followers_url": "https://api.github.com/users/ksanderer/followers", "following_url": "https://api.github.com/users/ksanderer/following{/other_user}", "gists_url": "https://api.github.com/users/ksanderer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksanderer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksanderer/subscriptions", "organizations_url": "https://api.github.com/users/ksanderer/orgs", "repos_url": "https://api.github.com/users/ksanderer/repos", "events_url": "https://api.github.com/users/ksanderer/events{/privacy}", "received_events_url": "https://api.github.com/users/ksanderer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 392588386, "node_id": "MDU6TGFiZWwzOTI1ODgzODY=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Broken%20Tree", "name": "Broken Tree", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-05-31T18:41:57Z", "updated_at": "2017-10-28T21:26:09Z", "closed_at": "2017-10-28T21:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have mptt model with such structure:\n\n```\nclass Seo(MPTTModel):\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\n\n    path = models.CharField(max_length=200, null=True, blank=True)\n    namespace = models.CharField(max_length=200, null=True, blank=True)\n    name = models.CharField(max_length=200)\n```\n\nSeo has such admin model:\n\n```\nclass SeoAdmin(MPTTModelAdmin):\n    list_display = ['name', 'path', 'namespace', 'parent']\n    search_fields = ['name', 'path', 'namespace']\n    fieldsets = [\n        (\n            None, {\n                'fields': [\n                    'parent', 'redirect', 'name', 'breadcrumb_name', 'path', 'namespace', 'title', 'h1', 'description',\n                    'keywords', 'header_content', 'footer_content'\n                ]\n            }\n        ),\n    ]\n\n\nadmin.site.register(Seo, SeoAdmin)\n```\n\nI have an issue with SEO admin view. It has totally broken indents for items. Do you have an idea what is going wrong?\n\n![image](https://cloud.githubusercontent.com/assets/1606635/15686324/6c473440-2778-11e6-9799-c90141a7210a.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/470", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/470/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/470/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/470", "id": 156393480, "node_id": "MDU6SXNzdWUxNTYzOTM0ODA=", "number": 470, "title": "Order of insertion causes new roots to get the same tree_id when order_insertion_by is defined", "user": {"login": "cmermingas", "id": 7100704, "node_id": "MDQ6VXNlcjcxMDA3MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7100704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmermingas", "html_url": "https://github.com/cmermingas", "followers_url": "https://api.github.com/users/cmermingas/followers", "following_url": "https://api.github.com/users/cmermingas/following{/other_user}", "gists_url": "https://api.github.com/users/cmermingas/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmermingas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmermingas/subscriptions", "organizations_url": "https://api.github.com/users/cmermingas/orgs", "repos_url": "https://api.github.com/users/cmermingas/repos", "events_url": "https://api.github.com/users/cmermingas/events{/privacy}", "received_events_url": "https://api.github.com/users/cmermingas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 392588386, "node_id": "MDU6TGFiZWwzOTI1ODgzODY=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Broken%20Tree", "name": "Broken Tree", "color": "d93f0b", "default": false, "description": null}, {"id": 133451733, "node_id": "MDU6TGFiZWwxMzM0NTE3MzM=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Documentation", "name": "Documentation", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-24T00:10:22Z", "updated_at": "2019-04-14T04:17:03Z", "closed_at": "2019-04-13T19:09:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `django-mptt 0.8.4`\n\nWith this model:\n\n```\nfrom django.db import models\nfrom mptt.models import MPTTModel, TreeForeignKey\n\nclass Node(MPTTModel):\n    name = models.CharField(max_length=50)\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\n\n    class MPTTMeta:\n        order_insertion_by = ['name']\n```\n\nAnd these tests:\n\n```\nfrom django.test import TestCase\nfrom .models import Node\n\n\nclass NodeTest(TestCase):\n    def test_multiple_roots_in_order(self):\n        r1 = Node.objects.create(name='A', parent=None)\n        r2 = Node.objects.create(name='B', parent=None)\n\n        self.assertNotEqual(r1.tree_id, r2.tree_id)\n\n    def test_multiple_roots_in_reverse_order(self):\n        r1 = Node.objects.create(name='B', parent=None)\n        r2 = Node.objects.create(name='A', parent=None)\n\n        self.assertNotEqual(r1.tree_id, r2.tree_id)\n```\n\nWhen the nodes are inserted \"in order\" (A before B), they go into separate trees. When the nodes are inserted in reverse order, they go into the same tree:\n\n```\nCreating test database for alias 'default'...\n.F\n======================================================================\nFAIL: test_multiple_roots_in_reverse_order (my_app.tests.NodeTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/cmermingas/django_projects/mptt_test/my_app/tests.py\", line 16, in test_multiple_roots_in_reverse_order\n    self.assertNotEqual(r1.tree_id, r2.tree_id)\nAssertionError: 1 == 1\n\n----------------------------------------------------------------------\nRan 2 tests in 0.007s\n\nFAILED (failures=1)\nDestroying test database for alias 'default'...\n```\n\nIf someone is willing to coach me a bit, I am willing to create a pull request and work on this.\n\nPlease let me know if I am doing something wrong. I'm pretty new here.\n- Edited: I had a \"suspected problem\" and a potential fix here. I removed it after discovering that I was totally wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/469", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/469/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/469/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/469", "id": 156220965, "node_id": "MDU6SXNzdWUxNTYyMjA5NjU=", "number": 469, "title": "Django 1.10 support: can't set attribute _default_manager at startup", "user": {"login": "mlorant", "id": 532337, "node_id": "MDQ6VXNlcjUzMjMzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/532337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlorant", "html_url": "https://github.com/mlorant", "followers_url": "https://api.github.com/users/mlorant/followers", "following_url": "https://api.github.com/users/mlorant/following{/other_user}", "gists_url": "https://api.github.com/users/mlorant/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlorant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlorant/subscriptions", "organizations_url": "https://api.github.com/users/mlorant/orgs", "repos_url": "https://api.github.com/users/mlorant/repos", "events_url": "https://api.github.com/users/mlorant/events{/privacy}", "received_events_url": "https://api.github.com/users/mlorant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 47200, "node_id": "MDU6TGFiZWw0NzIwMA==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Defect", "name": "Defect", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/12", "html_url": "https://github.com/django-mptt/django-mptt/milestone/12", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/12/labels", "id": 1926620, "node_id": "MDk6TWlsZXN0b25lMTkyNjYyMA==", "number": 12, "title": "0.8.6", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2016-08-06T06:46:42Z", "updated_at": "2016-08-17T11:04:37Z", "due_on": null, "closed_at": null}, "comments": 36, "created_at": "2016-05-23T08:01:15Z", "updated_at": "2016-09-26T16:17:01Z", "closed_at": "2016-08-17T11:04:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "While testing Django 1.10, mptt seems to mess with internal API of the framework, that has changed since 1.9. Here's the stacktrace I get at the loading of `manage.py runserver`:\n\n```\n$ ./manage.py runserver\nUnhandled exception in thread started by <function wrapper at 0x7f32e681faa0>\nTraceback (most recent call last):\n  File \"My_VENV/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"My_VENV/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 113, in inner_run\n    autoreload.raise_last_exception()\n  File \"My_VENV/lib/python2.7/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(*_exception)\n  File \"My_VENV/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"My_VENV/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"My_VENV/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"My_VENV/lib/python2.7/site-packages/django/apps/config.py\", line 199, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"My_VENV/lib/python2.7/site-packages/mptt/models.py\", line 379, in <module>\n    class MPTTModel(six.with_metaclass(MPTTModelBase, models.Model)):\n  File \"My_VENV/lib/python2.7/site-packages/django/utils/six.py\", line 808, in __new__\n    return meta(name, bases, d)\n  File \"My_VENV/lib/python2.7/site-packages/mptt/models.py\", line 262, in __new__\n    cls = super_new(meta, class_name, bases, class_dict)\n  File \"My_VENV/lib/python2.7/site-packages/django/db/models/base.py\", line 157, in __new__\n    new_class.add_to_class(obj_name, obj)\n  File \"My_VENV/lib/python2.7/site-packages/django/db/models/base.py\", line 316, in add_to_class\n    value.contribute_to_class(cls, name)\n  File \"My_VENV/lib/python2.7/site-packages/mptt/managers.py\", line 81, in contribute_to_class\n    super(TreeManager, self).contribute_to_class(model, name)\n  File \"My_VENV/lib/python2.7/site-packages/django/db/models/manager.py\", line 120, in contribute_to_class\n    setattr(model, name, ManagerDescriptor(self))\nAttributeError: can't set attribute\n```\n\nIn `contribute_to_class` (the method in Django file), arguments are `model=<class 'mptt.models.MPTTModel'> name=_default_manager`. It looks like `_default_manager` is now read only.\n\nIt might be linked to the following change ([from the release notes](https://docs.djangoproject.com/en/dev/releases/1.10/)):\n\n> The new Meta.base_manager_name and Meta.default_manager_name options allow controlling the _base_manager and _default_manager, respectively.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/466", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/466/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/466/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/466", "id": 154561969, "node_id": "MDU6SXNzdWUxNTQ1NjE5Njk=", "number": 466, "title": "Unique constraint failure when moving nodes", "user": {"login": "olivierdalang", "id": 1894106, "node_id": "MDQ6VXNlcjE4OTQxMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1894106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivierdalang", "html_url": "https://github.com/olivierdalang", "followers_url": "https://api.github.com/users/olivierdalang/followers", "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}", "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions", "organizations_url": "https://api.github.com/users/olivierdalang/orgs", "repos_url": "https://api.github.com/users/olivierdalang/repos", "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}", "received_events_url": "https://api.github.com/users/olivierdalang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2016-05-12T19:28:11Z", "updated_at": "2017-03-06T19:36:22Z", "closed_at": "2017-03-06T19:36:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi !\n\nI have a MPTT tree with an unique constraint on the parent and a \"code\" field. With such a setup, I get an IntegrityError when I reparent a child if there's already a child with the code, **even if I change the code so that they don't conflict** !\n\nThis means I need to change the code, save, then reparent, and save again. This also means I'll get headaches if the new code is conflicting in the initial parent.\n\nI'm surprised to find a bug with a setup that seems extremely common (wanting an unique property per parent). Did I miss something ?\n\nAnyway, thanks a lot for the tool !\n\nHere's the model I tested with :\n\n``` python\nclass TestModel( MPTTModel ):\n    class Meta:\n        unique_together = (('parent','code',),)\n    parent = TreeForeignKey('self', null=True)\n    code = models.CharField(max_length=10)\n```\n\nAnd here's the steps to reproduce\n\n``` python\nfrom MyApp.models import TestModel\na = TestModel.objects.create(code='a',parent=None)\nb = TestModel.objects.create(code='b',parent=None)\na1 = TestModel.objects.create(code='1',parent=a)\nb1 = TestModel.objects.create(code='1',parent=b)\n\nb1.code = '2'\nb1.parent = a\nb1.save() # THIS THROWS IntegrityError: UNIQUE constraint failed\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/465", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/465/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/465/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/465", "id": 154051206, "node_id": "MDU6SXNzdWUxNTQwNTEyMDY=", "number": 465, "title": "DraggableMPTTAdmin and list_editable bug", "user": {"login": "brupelo", "id": 18058492, "node_id": "MDQ6VXNlcjE4MDU4NDky", "avatar_url": "https://avatars3.githubusercontent.com/u/18058492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brupelo", "html_url": "https://github.com/brupelo", "followers_url": "https://api.github.com/users/brupelo/followers", "following_url": "https://api.github.com/users/brupelo/following{/other_user}", "gists_url": "https://api.github.com/users/brupelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/brupelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brupelo/subscriptions", "organizations_url": "https://api.github.com/users/brupelo/orgs", "repos_url": "https://api.github.com/users/brupelo/repos", "events_url": "https://api.github.com/users/brupelo/events{/privacy}", "received_events_url": "https://api.github.com/users/brupelo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-10T16:33:49Z", "updated_at": "2016-06-16T18:12:35Z", "closed_at": "2016-06-16T18:12:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've started using django-mptt today and I've seen there is a little [bug](http://screencast.com/t/oGm8uZ2bBk) when you define some fields as editable in some modelAdmin inheriting from DraggableMPTTAdmin, is it easy to fix?\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/459", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/459/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/459/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/459", "id": 153050827, "node_id": "MDU6SXNzdWUxNTMwNTA4Mjc=", "number": 459, "title": "\"Model\" object has no attribute '_deferred` - django 1.10 compatibility", "user": {"login": "ad-m", "id": 3618479, "node_id": "MDQ6VXNlcjM2MTg0Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3618479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ad-m", "html_url": "https://github.com/ad-m", "followers_url": "https://api.github.com/users/ad-m/followers", "following_url": "https://api.github.com/users/ad-m/following{/other_user}", "gists_url": "https://api.github.com/users/ad-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/ad-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ad-m/subscriptions", "organizations_url": "https://api.github.com/users/ad-m/orgs", "repos_url": "https://api.github.com/users/ad-m/repos", "events_url": "https://api.github.com/users/ad-m/events{/privacy}", "received_events_url": "https://api.github.com/users/ad-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-04T16:02:55Z", "updated_at": "2016-05-05T22:16:15Z", "closed_at": "2016-05-05T22:16:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nDjango 1.10 ( https://docs.djangoproject.com/en/dev/releases/1.10/ ) said:\n\n> The Model._deferred attribute is removed as dynamic model classes when using QuerySet.defer() and only() is removed.\n\nI believe this make django 1.10 & django-mptt following tests fail:\n\n``` pytb\n======================================================================\nERROR: setUpClass (tests.myapp.tests.AdminBatch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.CacheChildrenTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/genres.json': 'Genre' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.CacheTreeChildrenTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_node_save_after_tree_restructuring (tests.myapp.tests.ConcurrencyTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 329, in setUp\n    fruit = ConcreteModel.objects.create(name=\"Fruit\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_node_save_after_tree_restructuring_with_update_fields (tests.myapp.tests.ConcurrencyTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 329, in setUp\n    fruit = ConcreteModel.objects.create(name=\"Fruit\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_update_fields_positional (tests.myapp.tests.ConcurrencyTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 329, in setUp\n    fruit = ConcreteModel.objects.create(name=\"Fruit\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_get_next_sibling (tests.myapp.tests.CustomPKNameTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 544, in setUp\n    c1 = manager.create(name=\"c1\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'CustomPKName' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_deferred_cached_field_change (tests.myapp.tests.DeferredAttributeTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1917, in setUp\n    OrderedInsertion.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_deferred_cached_field_undeferred (tests.myapp.tests.DeferredAttributeTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1917, in setUp\n    OrderedInsertion.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_deferred_order_insertion_by (tests.myapp.tests.DeferredAttributeTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1917, in setUp\n    OrderedInsertion.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_double_context_manager (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_child (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_root (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_different_tree (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_same_tree (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_to_root (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_root_to_child (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_proxy (tests.myapp.tests.DelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 752, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.DeletionTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_double_proxy (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_child (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_root (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_different_tree (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_same_tree (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_to_root (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_root_to_child (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_single_proxy (tests.myapp.tests.DisabledUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 562, in setUp\n    self.a = ConcreteModel.objects.create(name=\"a\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'ConcreteModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_changelist (tests.myapp.tests.DraggableMPTTAdminTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1961, in test_changelist\n    p1 = Person.objects.create(name='Franz')\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'Person' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.DrilldownTreeTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/genres.json': 'Genre' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.FullTreeTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/genres.json': 'Genre' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_treerelatedfieldlistfilter_foreignkey (tests.myapp.tests.ListFiltersTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 2080, in setUp\n    self.parent_category = Category.objects.create(name='Parent category')\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_treerelatedfieldlistfilter_manytomany (tests.myapp.tests.ListFiltersTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 2080, in setUp\n    self.parent_category = Category.objects.create(name='Parent category')\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_treerelatedfieldlistfilter_reverse_relationships (tests.myapp.tests.ListFiltersTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 2080, in setUp\n    self.parent_category = Category.objects.create(name='Parent category')\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.ManagerTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_child (tests.myapp.tests.OrderedInsertionDelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 956, in setUp\n    self.c = OrderedInsertion.objects.create(name=\"c\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_root (tests.myapp.tests.OrderedInsertionDelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 956, in setUp\n    self.c = OrderedInsertion.objects.create(name=\"c\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_different_tree (tests.myapp.tests.OrderedInsertionDelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 956, in setUp\n    self.c = OrderedInsertion.objects.create(name=\"c\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_same_tree (tests.myapp.tests.OrderedInsertionDelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 956, in setUp\n    self.c = OrderedInsertion.objects.create(name=\"c\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_node_to_root (tests.myapp.tests.OrderedInsertionDelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 956, in setUp\n    self.c = OrderedInsertion.objects.create(name=\"c\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_move_root_to_child (tests.myapp.tests.OrderedInsertionDelayedUpdatesTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 956, in setUp\n    self.c = OrderedInsertion.objects.create(name=\"c\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.QuerySetTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.RecurseTreeTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.ReparentingTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/genres.json': 'Genre' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.Signals)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_alters_data (tests.myapp.tests.TestAltersData)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1607, in test_alters_data\n    node = Node()\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'Node' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_save_auto_now_date_field_model (tests.myapp.tests.TestAutoNowDateFieldModel)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1519, in test_save_auto_now_date_field_model\n    a = AutoNowDateFieldModel()\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'AutoNowDateFieldModel' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.TestDebugInfo)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.TestForms)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_ordered_BFS_backwards_nonroot_nodes (tests.myapp.tests.TestOrderedInsertionBFS)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1814, in test_insert_ordered_BFS_backwards_nonroot_nodes\n    music = OrderedInsertion.objects.create(name='music')\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_ordered_BFS_backwards_root_nodes (tests.myapp.tests.TestOrderedInsertionBFS)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1775, in test_insert_ordered_BFS_backwards_root_nodes\n    rock = OrderedInsertion.objects.create(name=\"Rock\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_ordered_DFS_backwards_nonroot_nodes (tests.myapp.tests.TestOrderedInsertionBFS)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1799, in test_insert_ordered_DFS_backwards_nonroot_nodes\n    music = OrderedInsertion.objects.create(name='music')\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_insert_ordered_DFS_backwards_root_nodes (tests.myapp.tests.TestOrderedInsertionBFS)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1762, in test_insert_ordered_DFS_backwards_root_nodes\n    rock = OrderedInsertion.objects.create(name=\"Rock\")\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 122, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 396, in create\n    obj = self.model(**kwargs)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'OrderedInsertion' object has no attribute '_deferred'\n\n======================================================================\nERROR: test_unsaved (tests.myapp.tests.TestUnsaved)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt/tests/myapp/tests.py\", line 1698, in test_unsaved\n    getattr(Genre(), method))\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nAttributeError: 'Genre' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.TreeInfoTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/genres.json': 'Genre' object has no attribute '_deferred'\n\n======================================================================\nERROR: setUpClass (tests.myapp.tests.TreeManagerTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/test/testcases.py\", line 1019, in setUpClass\n    'database': db_name,\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 130, in call_command\n    return command.execute(*args, **defaults)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 64, in handle\n    self.loaddata(fixture_labels)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 104, in loaddata\n    self.load_label(fixture_label)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/management/commands/loaddata.py\", line 161, in load_label\n    for obj in objects:\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 86, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 80, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 183, in Deserializer\n    obj = base.build_instance(Model, data, db)\n  File \"/tmp/django-mptt-env/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 218, in build_instance\n    obj = Model(**data)\n  File \"../mptt/models.py\", line 390, in __init__\n    self._mptt_meta.update_mptt_cached_fields(self)\n  File \"../mptt/models.py\", line 135, in update_mptt_cached_fields\n    if instance._deferred:\nDeserializationError: Problem installing fixture '/tmp/django-mptt/tests/myapp/fixtures/categories.json': 'Category' object has no attribute '_deferred'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/457", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/457/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/457/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/457", "id": 152831291, "node_id": "MDU6SXNzdWUxNTI4MzEyOTE=", "number": 457, "title": "ImportError: No module named util (Django 1.9.5)", "user": {"login": "andreyugit", "id": 2041192, "node_id": "MDQ6VXNlcjIwNDExOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2041192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreyugit", "html_url": "https://github.com/andreyugit", "followers_url": "https://api.github.com/users/andreyugit/followers", "following_url": "https://api.github.com/users/andreyugit/following{/other_user}", "gists_url": "https://api.github.com/users/andreyugit/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreyugit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreyugit/subscriptions", "organizations_url": "https://api.github.com/users/andreyugit/orgs", "repos_url": "https://api.github.com/users/andreyugit/repos", "events_url": "https://api.github.com/users/andreyugit/events{/privacy}", "received_events_url": "https://api.github.com/users/andreyugit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-03T17:33:05Z", "updated_at": "2016-05-03T20:16:39Z", "closed_at": "2016-05-03T20:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unhandled exception in thread started by <function wrapper at 0xa431dbc>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(_args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\n    autoreload.raise_last_exception()\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(__exception)\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(_args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/django/**init**.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/config.py\", line 202, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib/python2.7/importlib/**init**.py\", line 37, in import_module\n    **import**(name)\n  File \"/usr/local/lib/python2.7/dist-packages/mptt/models.py\", line 14, in <module>\n    from mptt.fields import TreeForeignKey, TreeOneToOneField, TreeManyToManyField\n  File \"/usr/local/lib/python2.7/dist-packages/mptt/fields.py\", line 9, in <module>\n    from mptt.forms import TreeNodeChoiceField, TreeNodeMultipleChoiceField\n  File \"/usr/local/lib/python2.7/dist-packages/mptt/forms.py\", line 7, in <module>\n    from django.forms.util import ErrorList\nImportError: No module named util\n\nWhat is the problem?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/456", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/456/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/456/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/456", "id": 151855839, "node_id": "MDU6SXNzdWUxNTE4NTU4Mzk=", "number": 456, "title": "Typo in setup.py in version 0.8.3 - test_requires", "user": {"login": "darkowic", "id": 11510581, "node_id": "MDQ6VXNlcjExNTEwNTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/11510581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkowic", "html_url": "https://github.com/darkowic", "followers_url": "https://api.github.com/users/darkowic/followers", "following_url": "https://api.github.com/users/darkowic/following{/other_user}", "gists_url": "https://api.github.com/users/darkowic/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkowic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkowic/subscriptions", "organizations_url": "https://api.github.com/users/darkowic/orgs", "repos_url": "https://api.github.com/users/darkowic/repos", "events_url": "https://api.github.com/users/darkowic/events{/privacy}", "received_events_url": "https://api.github.com/users/darkowic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-29T12:34:42Z", "updated_at": "2016-05-03T20:20:00Z", "closed_at": "2016-05-03T20:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nDownloading https://pypi.python.org/packages/3f/fa/b5080600c430007213c8cd3c6a9013d92f262abc2870df5b9466b453ee11/django-mptt-0.8.3.tar.gz#md5=3695082c1799e926c19320f49a79dafb\nProcessing django-mptt-0.8.3.tar.gz\nWriting /tmp/easy_install-hkU4DM/django-mptt-0.8.3/setup.cfg\nRunning django-mptt-0.8.3/setup.py -q bdist_egg --dist-dir /tmp/easy_install-hkU4DM/django-mptt-0.8.3/egg-dist-tmp-7ysA8x\n/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'test_requires'\n```\n\nIn 0.8.3 distribution is typo in `setup.py` - `test_requires` should be `test_require`. In master is ok. Please release new version :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/453", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/453/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/453/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/453", "id": 150347529, "node_id": "MDU6SXNzdWUxNTAzNDc1Mjk=", "number": 453, "title": "pip install creates tests folder in site-packages", "user": {"login": "bertini36", "id": 7657421, "node_id": "MDQ6VXNlcjc2NTc0MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7657421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bertini36", "html_url": "https://github.com/bertini36", "followers_url": "https://api.github.com/users/bertini36/followers", "following_url": "https://api.github.com/users/bertini36/following{/other_user}", "gists_url": "https://api.github.com/users/bertini36/gists{/gist_id}", "starred_url": "https://api.github.com/users/bertini36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bertini36/subscriptions", "organizations_url": "https://api.github.com/users/bertini36/orgs", "repos_url": "https://api.github.com/users/bertini36/repos", "events_url": "https://api.github.com/users/bertini36/events{/privacy}", "received_events_url": "https://api.github.com/users/bertini36/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 47200, "node_id": "MDU6TGFiZWw0NzIwMA==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Defect", "name": "Defect", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-22T11:49:06Z", "updated_at": "2016-05-05T22:16:51Z", "closed_at": "2016-05-05T22:16:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When install your package via pip inside site-packages folder creates two folders, your mptt folder and another named tests (that is your tests folder). So when importing from our project we have a name collision with our tests folder.\nmptt shouldn't create tests folder in site-packages :)\n\nThank you \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/452", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/452/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/452/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/452", "id": 150154366, "node_id": "MDU6SXNzdWUxNTAxNTQzNjY=", "number": 452, "title": "get_descendants not returning all descendants", "user": {"login": "jmerkow", "id": 5933681, "node_id": "MDQ6VXNlcjU5MzM2ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5933681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmerkow", "html_url": "https://github.com/jmerkow", "followers_url": "https://api.github.com/users/jmerkow/followers", "following_url": "https://api.github.com/users/jmerkow/following{/other_user}", "gists_url": "https://api.github.com/users/jmerkow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmerkow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmerkow/subscriptions", "organizations_url": "https://api.github.com/users/jmerkow/orgs", "repos_url": "https://api.github.com/users/jmerkow/repos", "events_url": "https://api.github.com/users/jmerkow/events{/privacy}", "received_events_url": "https://api.github.com/users/jmerkow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 47200, "node_id": "MDU6TGFiZWw0NzIwMA==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Defect", "name": "Defect", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-21T18:28:10Z", "updated_at": "2016-06-14T14:57:18Z", "closed_at": "2016-06-14T14:57:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a MPTT model that is not returning all descendants when get_descendants is called\n\n```\nclass LabelTree(MPTTModel):\n    name = models.CharField(max_length=64,db_index=True)\n    description = models.TextField(blank=True)\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children', db_index=True)\n\n    class MPTTMeta:\n        order_insertion_by = ['name']\n\n    def __str__(self):\n        return \"[{}] {}\".format(self.get_root().name,self.name)\n```\n\n`print('\\n'.join([str(a) for a in root.get_children()]))`:\n\n> [root1] OK\n> [root1] NOTOK\n\n`print('\\n'.join([str(a) for a in root.get_descendants()]))`:\n\n> [root1] root1\n> [root1] OK\n> [root1] OUTSIDE\n> [root1] AX1\n> [root1] AX2\n> [root1] NOT\n> [root1] MUSIC\n> [root1] ART\n> [root1] METAL\n> [root1] MOTION\n> [root1] ORB\n> [root1] PAINT\n> [root1] SCULPT\n\nThe nodes in subtree 'NOTOK' are missing, including NOTOK itself.\n`get_family` give the same result, `get_leafnodes` only returns nodes from the OK subtree.\n\nThe template (copied from http://django-mptt.github.io/django-mptt/tutorial.html) shows all nodes and children appropriately.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/450", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/450/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/450/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/450", "id": 150135099, "node_id": "MDU6SXNzdWUxNTAxMzUwOTk=", "number": 450, "title": "Source releases of django-mptt 0.8.3 contain pyc files", "user": {"login": "suutari-ai", "id": 3531281, "node_id": "MDQ6VXNlcjM1MzEyODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3531281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suutari-ai", "html_url": "https://github.com/suutari-ai", "followers_url": "https://api.github.com/users/suutari-ai/followers", "following_url": "https://api.github.com/users/suutari-ai/following{/other_user}", "gists_url": "https://api.github.com/users/suutari-ai/gists{/gist_id}", "starred_url": "https://api.github.com/users/suutari-ai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suutari-ai/subscriptions", "organizations_url": "https://api.github.com/users/suutari-ai/orgs", "repos_url": "https://api.github.com/users/suutari-ai/repos", "events_url": "https://api.github.com/users/suutari-ai/events{/privacy}", "received_events_url": "https://api.github.com/users/suutari-ai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-21T17:07:40Z", "updated_at": "2016-05-04T08:20:32Z", "closed_at": "2016-04-21T20:12:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that the source release (*.tar.gz and *.whl) of django-mptt 0.8.3 as distributed in PyPI are broken, since it they have pyc files. This causes some problems when installing django-mptt 0.8.3, since the pyc files could be for different python version.\n\nThe problem shows up as following error when running \"setup.py install\":\n\n```\nRunning django-mptt-0.8.3/setup.py -q bdist_egg...\n...\nValueError: bad marshal data (unknown type code)\n```\n\nA more detailed error can be seen on Shoop's documentation build log at readthedocs: http://readthedocs.org/projects/shoop/builds/3780065/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/447", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/447/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/447/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/447", "id": 148933612, "node_id": "MDU6SXNzdWUxNDg5MzM2MTI=", "number": 447, "title": "Unable to query MPTTModel \"flatly\"", "user": {"login": "wengole", "id": 383857, "node_id": "MDQ6VXNlcjM4Mzg1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/383857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wengole", "html_url": "https://github.com/wengole", "followers_url": "https://api.github.com/users/wengole/followers", "following_url": "https://api.github.com/users/wengole/following{/other_user}", "gists_url": "https://api.github.com/users/wengole/gists{/gist_id}", "starred_url": "https://api.github.com/users/wengole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wengole/subscriptions", "organizations_url": "https://api.github.com/users/wengole/orgs", "repos_url": "https://api.github.com/users/wengole/repos", "events_url": "https://api.github.com/users/wengole/events{/privacy}", "received_events_url": "https://api.github.com/users/wengole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-17T09:06:29Z", "updated_at": "2016-04-21T07:46:26Z", "closed_at": "2016-04-21T07:46:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build a query to find duplicates within a given tree. My Django query looks like this:\n\n``` python\nreadingorder = ReadingOrder.objects.get(pk=64)\nreadingorder.readingorderbook_set.values('book__id').annotate(book_count=Count('book__id')).query\n```\n\nThe raw SQL should be something like\n\n``` sql\nSELECT \"books_readingorderbook\".\"book_id\", COUNT(\"books_readingorderbook\".\"book_id\") AS \"book_count\" \nFROM \"books_readingorderbook\" \nWHERE \"books_readingorderbook\".\"reading_order_id\" = 64 \nGROUP BY \"books_readingorderbook\".\"book_id\"\n```\n\nThat SQL would give counts of each book_id, I can then filter where this is greater than 1 to remove duplicates.\n\nHowever as TreeManager is the default manager and this orders all QuerySets by tree position, the SQL is modified to:\n\n``` sql\nSELECT \"books_readingorderbook\".\"book_id\", COUNT(\"books_readingorderbook\".\"book_id\") AS \"book_count\" \nFROM \"books_readingorderbook\" \nWHERE \"books_readingorderbook\".\"reading_order_id\" = 64 \nGROUP BY \"books_readingorderbook\".\"book_id\", \"books_readingorderbook\".\"tree_id\", \"books_readingorderbook\".\"lft\" \nORDER BY \"books_readingorderbook\".\"tree_id\" ASC, \"books_readingorderbook\".\"lft\" ASC\n```\n\nwhich results in each book_id only having a count of 1.\n\nIt would be great if there was a TreeManager method that allowed you to ignore the tree order when making queries. Also I'm not sure what the reason was for removing the .tree manager and overriding the default, but having the Django default Manager here would have also solved my issue.\n\nFor reference, my models are this:\n\n``` python\nclass ReadingOrder(models.Model):\n    name = models.TextField()\n    source = models.URLField(\n        max_length=1024,\n        blank=True)\n    books = models.ManyToManyField(\n        to='Book',\n        related_name='reading_orders',\n        through='ReadingOrderBook')\n\n    def __str__(self):\n        return self.name\n\n\nclass ReadingOrderBook(MPTTModel):\n    reading_order = models.ForeignKey(\n        to='ReadingOrder')\n    book = models.ForeignKey(\n        to='Book')\n    previous = TreeForeignKey(\n        to='self',\n        on_delete=models.SET_NULL,\n        related_name='next',\n        null=True,\n        blank=True)\n\n    class Meta(object):\n        unique_together = (\n            'reading_order',\n            'book')\n\n    class MPTTMeta(object):\n        parent_attr = 'previous'\n\n    def __str__(self):\n        return '{} ({})'.format(self.book, self.reading_order)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/442", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/442/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/442/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/442", "id": 139077710, "node_id": "MDU6SXNzdWUxMzkwNzc3MTA=", "number": 442, "title": "Question / feature request: Bulk create tree from root node", "user": {"login": "jmcarp", "id": 1633460, "node_id": "MDQ6VXNlcjE2MzM0NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1633460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmcarp", "html_url": "https://github.com/jmcarp", "followers_url": "https://api.github.com/users/jmcarp/followers", "following_url": "https://api.github.com/users/jmcarp/following{/other_user}", "gists_url": "https://api.github.com/users/jmcarp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmcarp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmcarp/subscriptions", "organizations_url": "https://api.github.com/users/jmcarp/orgs", "repos_url": "https://api.github.com/users/jmcarp/repos", "events_url": "https://api.github.com/users/jmcarp/events{/privacy}", "received_events_url": "https://api.github.com/users/jmcarp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-07T19:58:20Z", "updated_at": "2019-04-13T19:16:11Z", "closed_at": "2019-04-13T19:16:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I can tell from the docs and the source, inserting nodes with tree properties (`lft`, `rght`, etc.) requires multiple database queries, even when passing flags like `save=False`. If a user wants to bulk-insert a large number of nodes on a tree that doesn't yet exist, it seems like they have to disable mptt, insert the nodes, and then rebuild the relevant partial tree. Instead, it should be possible to set all tree properties in python and do a single bulk insert. This would only work when the user wants to bulk create nodes in a tree that doesn't exist yet, so that it's safe to skip calling `_create_space` and other helpers that move around existing nodes. I'm imagining an interface like this:\n\n``` python\nnodes = [Node(**obj) for obj in objs]\nset_tree_properties(nodes)\nNode.manager.bulk_create(nodes)\n```\n\nWhere `set_tree_properties` sets `tree_id`, `lft`, and `rght` on all nodes without touching the database. The idea is to create an entire tree with a single request, without the need for a potentially expensive `rebuild`.\n\nDoes this make sense? Would there be interest in adding a feature like this? I wrote a very simple implementation of `set_tree_properties` for a project I'm working on that I'd be happy to contribute, if it would be worthwhile.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/438", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/438/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/438/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/438", "id": 136809062, "node_id": "MDU6SXNzdWUxMzY4MDkwNjI=", "number": 438, "title": "DraggableMPTTAdmin: Add a screenshot to the docs", "user": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/11", "html_url": "https://github.com/django-mptt/django-mptt/milestone/11", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/11/labels", "id": 1608749, "node_id": "MDk6TWlsZXN0b25lMTYwODc0OQ==", "number": 11, "title": "0.8.1", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2016-02-26T20:40:19Z", "updated_at": "2016-02-26T22:10:01Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-02-26T20:40:40Z", "updated_at": "2016-02-26T22:10:01Z", "closed_at": "2016-02-26T22:10:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/434", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/434/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/434/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/434", "id": 133904814, "node_id": "MDU6SXNzdWUxMzM5MDQ4MTQ=", "number": 434, "title": "DraggableMPTTAdmin improvements / setup.py troubles", "user": {"login": "matthiask", "id": 2627, "node_id": "MDQ6VXNlcjI2Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiask", "html_url": "https://github.com/matthiask", "followers_url": "https://api.github.com/users/matthiask/followers", "following_url": "https://api.github.com/users/matthiask/following{/other_user}", "gists_url": "https://api.github.com/users/matthiask/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiask/subscriptions", "organizations_url": "https://api.github.com/users/matthiask/orgs", "repos_url": "https://api.github.com/users/matthiask/repos", "events_url": "https://api.github.com/users/matthiask/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiask/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "matthiask", "id": 2627, "node_id": "MDQ6VXNlcjI2Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiask", "html_url": "https://github.com/matthiask", "followers_url": "https://api.github.com/users/matthiask/followers", "following_url": "https://api.github.com/users/matthiask/following{/other_user}", "gists_url": "https://api.github.com/users/matthiask/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiask/subscriptions", "organizations_url": "https://api.github.com/users/matthiask/orgs", "repos_url": "https://api.github.com/users/matthiask/repos", "events_url": "https://api.github.com/users/matthiask/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiask/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthiask", "id": 2627, "node_id": "MDQ6VXNlcjI2Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiask", "html_url": "https://github.com/matthiask", "followers_url": "https://api.github.com/users/matthiask/followers", "following_url": "https://api.github.com/users/matthiask/following{/other_user}", "gists_url": "https://api.github.com/users/matthiask/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiask/subscriptions", "organizations_url": "https://api.github.com/users/matthiask/orgs", "repos_url": "https://api.github.com/users/matthiask/repos", "events_url": "https://api.github.com/users/matthiask/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiask/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2016-02-16T07:20:01Z", "updated_at": "2016-03-02T06:51:34Z", "closed_at": "2016-03-02T06:51:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Collecting a few problems with the current implementation of DraggableMPTTAdmin here (I'm working on those right now)\n- [x] Make the implementation CSP-compatible (no inline JavaScript)\n- [x] Remove the customized base template \u2014 use stock `admin/change_list.html` instead\n- [x] When using filters, the `div#module.changelist` should also have the `filtered` class, otherwise filters overlap the change list area and hide cells beneath it\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/433", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/433/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/433/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/433", "id": 132066969, "node_id": "MDU6SXNzdWUxMzIwNjY5Njk=", "number": 433, "title": "Issues with existing data when change non-mptt model to mptt", "user": {"login": "verisadmin", "id": 15274390, "node_id": "MDQ6VXNlcjE1Mjc0Mzkw", "avatar_url": "https://avatars2.githubusercontent.com/u/15274390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verisadmin", "html_url": "https://github.com/verisadmin", "followers_url": "https://api.github.com/users/verisadmin/followers", "following_url": "https://api.github.com/users/verisadmin/following{/other_user}", "gists_url": "https://api.github.com/users/verisadmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/verisadmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verisadmin/subscriptions", "organizations_url": "https://api.github.com/users/verisadmin/orgs", "repos_url": "https://api.github.com/users/verisadmin/repos", "events_url": "https://api.github.com/users/verisadmin/events{/privacy}", "received_events_url": "https://api.github.com/users/verisadmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-08T06:53:24Z", "updated_at": "2020-07-21T15:51:41Z", "closed_at": "2016-02-09T08:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have changed default Django `User` model to `mptt`. But for exiting users mptt is behaving un- expectedly . I think when we run migrations and we need to choose default values for `level, left, right` . Then whatever value we choose it will create issues at some point.\n\n`E.g.,` I'll explain what I did and what I got then you will get an idea about the issue.\n- I changed `User` model to mptt by adding parent field. \n- run makemigreations an then it asks for default values of not null fields , `leve, lft , rgt, tree_id` etc.\n- I have chooses `0` as default value.\n- after successful migrations I opened the python shell and import mptt `User` model\n- `u1 = User.objects.get(username='admin')` \n- Now when I'll do `u1.get_family()` , It returns me entire users as its family (which is right I think because I have defined default values as 0 ) which is wrong.\n- Also `get_family()` is returning all users irrespective of the user instance I am using e.g., \n  `u2 = User.objects.get(username=\"abc\")`\n  `u2.get_family()` returns all users again.\n\nI hope you understand the issue with my above example, so there is any fix for this or should I defined `level, lft , rgt` field to in models an make them `null= true` , if yes then what will be the type of these fields.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/432", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/432/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/432/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/432", "id": 131273398, "node_id": "MDU6SXNzdWUxMzEyNzMzOTg=", "number": 432, "title": "get_family() not returning entire family of root node in mptt", "user": {"login": "veris-neerajdhiman", "id": 15321333, "node_id": "MDQ6VXNlcjE1MzIxMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/15321333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veris-neerajdhiman", "html_url": "https://github.com/veris-neerajdhiman", "followers_url": "https://api.github.com/users/veris-neerajdhiman/followers", "following_url": "https://api.github.com/users/veris-neerajdhiman/following{/other_user}", "gists_url": "https://api.github.com/users/veris-neerajdhiman/gists{/gist_id}", "starred_url": "https://api.github.com/users/veris-neerajdhiman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veris-neerajdhiman/subscriptions", "organizations_url": "https://api.github.com/users/veris-neerajdhiman/orgs", "repos_url": "https://api.github.com/users/veris-neerajdhiman/repos", "events_url": "https://api.github.com/users/veris-neerajdhiman/events{/privacy}", "received_events_url": "https://api.github.com/users/veris-neerajdhiman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-02-04T08:01:52Z", "updated_at": "2016-02-04T13:17:37Z", "closed_at": "2016-02-04T12:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using django mptt for tree structure. I ma adding parent to any object while updating not creating any object as shown below .\n\n`user= User.objects.create(username='abc')` \n\nafter some logics or steps when we are sure that it can be added as a child of some user the I am updating the user instance.\n\n`User.objects.filter(pk=user.pk).update(parent=parent_user_instance)`\n\nuser is added as the parent and when I'll do `user.get_siblings()` I'll get all siblings but when I'll do `user.get_family()` then it fails to fetch its ancestors or descendant .\n\ntwo important things here are :\n\n1 ) Built in User model (django auth_user) of django is extended to enable mptt .\n\n2 ) I am adding parent through `update()` not create() # I am not sure `update()` have something to do with the issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/428", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/428/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/428/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/428", "id": 124726443, "node_id": "MDU6SXNzdWUxMjQ3MjY0NDM=", "number": 428, "title": "'NoneType' object has no attribute 'tree_id'", "user": {"login": "robslotboom", "id": 8074866, "node_id": "MDQ6VXNlcjgwNzQ4NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8074866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robslotboom", "html_url": "https://github.com/robslotboom", "followers_url": "https://api.github.com/users/robslotboom/followers", "following_url": "https://api.github.com/users/robslotboom/following{/other_user}", "gists_url": "https://api.github.com/users/robslotboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/robslotboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robslotboom/subscriptions", "organizations_url": "https://api.github.com/users/robslotboom/orgs", "repos_url": "https://api.github.com/users/robslotboom/repos", "events_url": "https://api.github.com/users/robslotboom/events{/privacy}", "received_events_url": "https://api.github.com/users/robslotboom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-04T09:48:35Z", "updated_at": "2016-07-20T14:42:22Z", "closed_at": "2016-07-20T14:42:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Updating a root elements fiels which is the \"order_insertion_by\" raises:\n\n'NoneType' object has no attribute 'tree_id'\n\nI solved this bij adding two lines of code.\n\n```\ndef _make_sibling_of_root_node(self, node, target, position):\n    ...\n    elif position == 'right':\n        if target_tree_id > tree_id:\n            new_tree_id = target_tree_id\n            lower_bound, upper_bound = tree_id, target_tree_id\n            shift = -1\n        else:\n            right_sibling = target.get_next_sibling()\n            if node == right_sibling:\n                return\n            # Addition\n            if not right_sibling:\n                return\n            # end of addition\n            new_tree_id = getattr(right_sibling, self.tree_id_attr)\n            lower_bound, upper_bound = new_tree_id, tree_id\n            shift = 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/424", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/424/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/424/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/424", "id": 122010772, "node_id": "MDU6SXNzdWUxMjIwMTA3NzI=", "number": 424, "title": "RuntimeError: maximum recursion depth exceeded", "user": {"login": "Wtower", "id": 10957886, "node_id": "MDQ6VXNlcjEwOTU3ODg2", "avatar_url": "https://avatars1.githubusercontent.com/u/10957886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wtower", "html_url": "https://github.com/Wtower", "followers_url": "https://api.github.com/users/Wtower/followers", "following_url": "https://api.github.com/users/Wtower/following{/other_user}", "gists_url": "https://api.github.com/users/Wtower/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wtower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wtower/subscriptions", "organizations_url": "https://api.github.com/users/Wtower/orgs", "repos_url": "https://api.github.com/users/Wtower/repos", "events_url": "https://api.github.com/users/Wtower/events{/privacy}", "received_events_url": "https://api.github.com/users/Wtower/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/9", "html_url": "https://github.com/django-mptt/django-mptt/milestone/9", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/9/labels", "id": 1043770, "node_id": "MDk6TWlsZXN0b25lMTA0Mzc3MA==", "number": 9, "title": "0.8", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2015-03-29T21:44:59Z", "updated_at": "2015-12-20T22:33:09Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2015-12-14T10:07:28Z", "updated_at": "2015-12-21T09:39:59Z", "closed_at": "2015-12-20T22:33:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With Django 1.9 and django-mptt master: https://github.com/django-mptt/django-mptt/commit/0199fa61bc4561952905f8f4279281cee6c52d74 (as of today Dec 14), I get the error:\n\n```\nRuntimeError: maximum recursion depth exceeded\n```\n\nThe function responsible for this is `get_ancestors()`. Has something changed in how we should use this?\n\nThis does not happen with Django 1.8.7 and django-mptt 0.7.4.\n\nThe exact piece of code that breaks it is https://github.com/Wtower/django-ninecms/blob/7b13262120dd560a58cb1604931b9b9ec8c403f0/ninecms/templatetags/ninecms_extras.py#L136\n\nThe stack trace is enormous so I present only the (apparently) relevant part and attach the full.\n\n```\nDecember 14, 2015 - 11:07:11\nDjango version 1.9, using settings 'ttours.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\nInternal Server Error: /el/about/\nTraceback (most recent call last):\n  File \"/home/gkarak/.virtualenvs/ttours/lib/python3.4/site-packages/django/core/handlers/base.py\", line 149, in get_response\n    response = self.process_exception_by_middleware(e, request)\n...\n  File \"/home/gkarak/.virtualenvs/ttours/lib/python3.4/site-packages/django/db/models/sql/query.py\", line 2011, in add_to_dict\n    data[key] = {value}\nRuntimeError: maximum recursion depth exceeded\n```\n\n[django-mptt-maximum-recursion.txt](https://github.com/django-mptt/django-mptt/files/61034/django-mptt-maximum-recursion.txt)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/422", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/422/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/422/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/422", "id": 121886203, "node_id": "MDU6SXNzdWUxMjE4ODYyMDM=", "number": 422, "title": "Exception Value: \t  get_cached_trees() called on a queryset with the wrong ordering: ['lft']", "user": {"login": "Reivax84", "id": 9430763, "node_id": "MDQ6VXNlcjk0MzA3NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9430763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Reivax84", "html_url": "https://github.com/Reivax84", "followers_url": "https://api.github.com/users/Reivax84/followers", "following_url": "https://api.github.com/users/Reivax84/following{/other_user}", "gists_url": "https://api.github.com/users/Reivax84/gists{/gist_id}", "starred_url": "https://api.github.com/users/Reivax84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Reivax84/subscriptions", "organizations_url": "https://api.github.com/users/Reivax84/orgs", "repos_url": "https://api.github.com/users/Reivax84/repos", "events_url": "https://api.github.com/users/Reivax84/events{/privacy}", "received_events_url": "https://api.github.com/users/Reivax84/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133463039, "node_id": "MDU6TGFiZWwxMzM0NjMwMzk=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Needsinfo", "name": "Needsinfo", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-12T23:00:41Z", "updated_at": "2015-12-14T07:28:43Z", "closed_at": "2015-12-13T19:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "after updating i have problems with the following lines, disabling the test an all is ok. i cant find anything that i would have to change in my model to make it work again :/\n\nmptt/utils.py  line 221\n\n  # If `queryset` is QuerySet-like, set ordering to depth-first\n    if hasattr(queryset, 'order_by'):\n        mptt_opts = queryset.model._mptt_meta\n        tree_id_attr = mptt_opts.tree_id_attr\n        left_attr = mptt_opts.left_attr\n        if tuple(queryset.query.order_by) != (tree_id_attr, left_attr):\n            raise ValueError(\n                \"get_cached_trees() called on a queryset with the wrong \" +\n                \"ordering: %r\" % (queryset.query.order_by,))\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/421", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/421/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/421/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/421", "id": 121691732, "node_id": "MDU6SXNzdWUxMjE2OTE3MzI=", "number": 421, "title": "type object 'Category' has no attribute 'tree'", "user": {"login": "sam-thecoder", "id": 15666437, "node_id": "MDQ6VXNlcjE1NjY2NDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/15666437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-thecoder", "html_url": "https://github.com/sam-thecoder", "followers_url": "https://api.github.com/users/sam-thecoder/followers", "following_url": "https://api.github.com/users/sam-thecoder/following{/other_user}", "gists_url": "https://api.github.com/users/sam-thecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-thecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-thecoder/subscriptions", "organizations_url": "https://api.github.com/users/sam-thecoder/orgs", "repos_url": "https://api.github.com/users/sam-thecoder/repos", "events_url": "https://api.github.com/users/sam-thecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-thecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-11T11:35:15Z", "updated_at": "2016-09-27T12:53:43Z", "closed_at": "2015-12-13T03:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to migrate a site with django-mptt 0.5.4 on the destination server I get the error\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://stage.kenyabuzz.com/accounts/signup/\n\nDjango Version: 1.7.10\nPython Version: 2.7.5\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.sitemaps',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'django.contrib.redirects',\n 'django.contrib.humanize',\n 'autocomplete_light',\n 'djangorestframework',\n 'haystack',\n 'lamusoftware.generic',\n 'mptt',\n 'bootstrapform',\n 'sorl.thumbnail',\n 'oauth2client',\n 'articles',\n 'banners',\n 'common',\n 'directory',\n 'events',\n 'galleries',\n 'marketplace',\n 'movies',\n 'pages',\n 'profiles',\n 'search',\n 'stats',\n 'minidetector',\n 'mobile',\n 'reports',\n 'favorites',\n 'braces',\n 'allauth',\n 'allauth.account',\n 'allauth.socialaccount',\n 'allauth.socialaccount.providers.facebook',\n 'widget_tweaks',\n 'wordofmouth',\n 'ckeditor',\n 'django_mobile',\n 'markup_deprecated',\n 'whoosh',\n 'rest')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.contrib.redirects.middleware.RedirectFallbackMiddleware',\n 'minidetector.Middleware',\n 'mobileesp.middleware.MobileDetectionMiddleware',\n 'kb.middleware.log_ip_middleware.SetRemoteAddrFromForwardedFor',\n 'kb.middleware.log_ip_middleware.RedirectMovie')\n\nTraceback:\nFile \"/home/kbuzz/webapps/kenyabuzz/lib/python2.7/Django-1.7.10-py2.7.egg/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/kbuzz/webapps/kenyabuzz/lib/python2.7/Django-1.7.10-py2.7.egg/django/views/generic/base.py\" in view\n2.             return self.dispatch(request, _args, *_kwargs)\n   File \"/home/kbuzz/lib/python2.7/allauth/account/views.py\" in dispatch\n3.                                             **kwargs)\n   File \"/home/kbuzz/lib/python2.7/allauth/account/views.py\" in dispatch\n4.                                                           **kwargs)\n   File \"/home/kbuzz/webapps/kenyabuzz/lib/python2.7/Django-1.7.10-py2.7.egg/django/views/generic/base.py\" in dispatch\n5.         return handler(request, _args, *_kwargs)\n   File \"/home/kbuzz/webapps/kenyabuzz/lib/python2.7/Django-1.7.10-py2.7.egg/django/views/generic/edit.py\" in get\n6.         form = self.get_form(form_class)\n   File \"/home/kbuzz/webapps/kenyabuzz/lib/python2.7/Django-1.7.10-py2.7.egg/django/views/generic/edit.py\" in get_form\n7.         return form_class(**self.get_form_kwargs())\n   File \"/home/kbuzz/lib/python2.7/allauth/account/forms.py\" in **init**\n8.         super(SignupForm, self).**init**(_args, *_kwargs)\n   File \"/home/kbuzz/lib/python2.7/allauth/account/forms.py\" in **init**\n9.         super(BaseSignupForm, self).**init**(_args, *_kwargs)\n   File \"/home/kbuzz/webapps/kenyabuzz/kb/profiles/forms.py\" in **init**\n10.         events_cart = Category.tree.filter(level=1, tree_id__in=[x.tree_id for x in me])\n\nException Type: AttributeError at /accounts/signup/\nException Value: type object 'Category' has no attribute 'tree'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/419", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/419/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/419/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/419", "id": 120544171, "node_id": "MDU6SXNzdWUxMjA1NDQxNzE=", "number": 419, "title": "Issues with fetching children in DRF", "user": {"login": "veris-neerajdhiman", "id": 15321333, "node_id": "MDQ6VXNlcjE1MzIxMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/15321333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veris-neerajdhiman", "html_url": "https://github.com/veris-neerajdhiman", "followers_url": "https://api.github.com/users/veris-neerajdhiman/followers", "following_url": "https://api.github.com/users/veris-neerajdhiman/following{/other_user}", "gists_url": "https://api.github.com/users/veris-neerajdhiman/gists{/gist_id}", "starred_url": "https://api.github.com/users/veris-neerajdhiman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veris-neerajdhiman/subscriptions", "organizations_url": "https://api.github.com/users/veris-neerajdhiman/orgs", "repos_url": "https://api.github.com/users/veris-neerajdhiman/repos", "events_url": "https://api.github.com/users/veris-neerajdhiman/events{/privacy}", "received_events_url": "https://api.github.com/users/veris-neerajdhiman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-05T09:53:49Z", "updated_at": "2018-08-21T20:24:59Z", "closed_at": "2015-12-07T07:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "My Model : \n\n```\nclass Venue(MPTTModel):\n    name = models.CharField(_('name'), max_length=100)\n    description = models.TextField(_('description'), null=True, blank=True)\n    parent = TreeForeignKey('self', null=True, blank=True, related_name='children',\n   db_index=True, verbose_name=_('parent'))\n    is_deleted = models.BooleanField(_('is deleted'), default=False)\n```\n\nView : \n\n``````\nclass GroupViewSet(viewsets.ReadOnlyModelViewSet):\n    queryset = Group.objects.all()\n    permission_classes = (IsIdentifyUser, )\n    serializer_class = VenueSerializer\n    filter_backends = (ModifiedAtFilterBackend,)```\n\n    def get_queryset(self, *args, **kwargs):\n        queryset = super(GroupViewSet, self).get_queryset(*args, **kwargs)\n        queryset = queryset.objects.filter(level=0).exclude(is_deleted=True)\n        return queryset\n``````\n\nMy issue is when I am fetching all children of parent it fetches all children including `is_deleted=True`\nMay be its because My serializer includes `source = 'children.all'`. But How will I exclude some children then, If I'll remove this `source = 'children.all'` then it'll raise an error`Related manager not itratble`\n\nFor Recursive field I am using this package https://github.com/heywbj/django-rest-framework-recursive\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/418", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/418/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/418/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/418", "id": 120229330, "node_id": "MDU6SXNzdWUxMjAyMjkzMzA=", "number": 418, "title": "`tree_item_iterator` relationships mixed when filtering item list.", "user": {"login": "joshuajonah", "id": 120229, "node_id": "MDQ6VXNlcjEyMDIyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/120229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuajonah", "html_url": "https://github.com/joshuajonah", "followers_url": "https://api.github.com/users/joshuajonah/followers", "following_url": "https://api.github.com/users/joshuajonah/following{/other_user}", "gists_url": "https://api.github.com/users/joshuajonah/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuajonah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuajonah/subscriptions", "organizations_url": "https://api.github.com/users/joshuajonah/orgs", "repos_url": "https://api.github.com/users/joshuajonah/repos", "events_url": "https://api.github.com/users/joshuajonah/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuajonah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T17:41:23Z", "updated_at": "2016-08-18T14:03:39Z", "closed_at": "2015-12-03T20:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having a strange one here.\n\nIf I supply a filter to a queryset of mptt objects, then supply that qs to `tree_item_iterator`, the relationships are all messed up.\n#### Example\n\nIn the Django admin my tree appears correct:\n\n![django-admin-tree](http://i.imgur.com/MeSk68m.png)\n\nHowever if I do this:\n\n```\ncategory_qs = Category.objects.filter(pk__in=list_of_pks)\nfor c in tree_item_iterator(category_qs, ancestors=True):\n    print c\n```\n\nI get this output:\n\n```\n(<Category: BREAD>, {u'new_level': True, u'ancestors': [], u'closed_levels': []})\n(<Category: VACUUM>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: POLY>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: GARBAGE>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: PRODUCE>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: SELF CLOSURE>, {u'new_level': False, u'ancestors': [], u'closed_levels': [1]})\n(<Category: TABLE COVER>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: SAW BLADES>, {u'new_level': True, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: BOOKS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: GRINDER & EQUIPMENT>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: CASINGS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: FREEZER PAPER>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: MISCELLANEOUS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: STUFFING/COATER/MARINADE>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: BINDER>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: SEASONING & SPICES>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: GRAVY>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: OTHER INGREDIENTS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: EQUIPMENT>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: CLEANERS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: PAPER TOWELS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: TOILET PAPER>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: BUBBLE 3/16\">, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: BUBBLE 1/2\">, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: PEANUTS>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: TAPE>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: PALLET WRAP>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: CORRUGATED>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: STRAPPING>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: CAKE>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: SAUSAGE>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: INSERT>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: PATTY>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: INDUSTRIAL>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': []})\n(<Category: PIZZA>, {u'new_level': False, u'ancestors': [u'TABLE COVER'], u'closed_levels': [1]})\n(<Category: TAKE AWAY SUPPLIES>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: PLATES/TRAYS/CONTAINERS>, {u'new_level': True, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: CUTLERY>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: CONDIMENTS>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: NAPKINS>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: PLASTIC>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: SILVER>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: GOLD>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: COFFEE & FILTERS>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: ENVELOPE>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': []})\n(<Category: TAGS>, {u'new_level': False, u'ancestors': [u'TAKE AWAY SUPPLIES'], u'closed_levels': [1]})\n(<Category: DISPENSER>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: ELASTICS>, {u'new_level': False, u'ancestors': [], u'closed_levels': []})\n(<Category: PIPING BAGS>, {u'new_level': True, u'ancestors': [u'ELASTICS'], u'closed_levels': []})\n(<Category: BAKING CUPS>, {u'new_level': False, u'ancestors': [u'ELASTICS'], u'closed_levels': [1]})\n```\n\nThe ancestors are completely wrong. Is this a bug? or am I doing something I shouldn't be?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/415", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/415/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/415/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/415", "id": 119921710, "node_id": "MDU6SXNzdWUxMTk5MjE3MTA=", "number": 415, "title": "Release a version compatible with Django 1.9", "user": {"login": "patrys", "id": 81205, "node_id": "MDQ6VXNlcjgxMjA1", "avatar_url": "https://avatars1.githubusercontent.com/u/81205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrys", "html_url": "https://github.com/patrys", "followers_url": "https://api.github.com/users/patrys/followers", "following_url": "https://api.github.com/users/patrys/following{/other_user}", "gists_url": "https://api.github.com/users/patrys/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrys/subscriptions", "organizations_url": "https://api.github.com/users/patrys/orgs", "repos_url": "https://api.github.com/users/patrys/repos", "events_url": "https://api.github.com/users/patrys/events{/privacy}", "received_events_url": "https://api.github.com/users/patrys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-12-02T11:23:44Z", "updated_at": "2015-12-21T08:45:33Z", "closed_at": "2015-12-20T23:25:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current master seems to work fine on 1.9 but the last released version does not. Seeing that Django 1.9 has been officially released, it would be nice to have a compatible release of `django-mptt`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/414", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/414/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/414/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/414", "id": 118308023, "node_id": "MDU6SXNzdWUxMTgzMDgwMjM=", "number": 414, "title": "makemigrations failed on Django 1.9 rc1", "user": {"login": "mrgaolei", "id": 1567325, "node_id": "MDQ6VXNlcjE1NjczMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1567325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrgaolei", "html_url": "https://github.com/mrgaolei", "followers_url": "https://api.github.com/users/mrgaolei/followers", "following_url": "https://api.github.com/users/mrgaolei/following{/other_user}", "gists_url": "https://api.github.com/users/mrgaolei/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrgaolei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrgaolei/subscriptions", "organizations_url": "https://api.github.com/users/mrgaolei/orgs", "repos_url": "https://api.github.com/users/mrgaolei/repos", "events_url": "https://api.github.com/users/mrgaolei/events{/privacy}", "received_events_url": "https://api.github.com/users/mrgaolei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 291190220, "node_id": "MDU6TGFiZWwyOTExOTAyMjA=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Accepted", "name": "Accepted", "color": "006b75", "default": false, "description": null}, {"id": 47200, "node_id": "MDU6TGFiZWw0NzIwMA==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Defect", "name": "Defect", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-23T02:20:50Z", "updated_at": "2015-11-25T05:51:50Z", "closed_at": "2015-11-25T05:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "model:\n\n```\nclass Catalog(MPTTModel):\n    parent = TreeForeignKey('self',\n                            blank=True,\n                            null=True,\n                            db_index=True,\n                            related_name='children',)\n    name = models.CharField(u\"Name\", max_length=200, unique=True)\n```\n\nwhen `./manage.py makemigrations`:\n\n```\n(venv)\u279c  dj19test  ./manage.py makemigrations\nMigrations for 'mpttest':\n  0001_initial.py:\n    - Create model Catalog\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/core/management/__init__.py\", line 342, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/core/management/commands/makemigrations.py\", line 150, in handle\n    self.write_migration_files(changes)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/core/management/commands/makemigrations.py\", line 178, in write_migration_files\n    migration_string = writer.as_string()\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 167, in as_string\n    operation_string, operation_imports = OperationWriter(operation).serialize()\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 124, in serialize\n    _write(arg_name, arg_value)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 76, in _write\n    arg_string, arg_imports = MigrationWriter.serialize(item)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 353, in serialize\n    item_string, item_imports = cls.serialize(item)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 429, in serialize\n    return cls.serialize_deconstructed(path, args, kwargs)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 318, in serialize_deconstructed\n    arg_string, arg_imports = cls.serialize(arg)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 353, in serialize\n    item_string, item_imports = cls.serialize(item)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 473, in serialize\n    return cls.serialize_deconstructed(*value.deconstruct())\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 314, in serialize_deconstructed\n    arg_string, arg_imports = cls.serialize(arg)\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/db/migrations/writer.py\", line 512, in serialize\n    for item in value:\n  File \"/Users/mrgaolei/Desktop/dj19test/venv/lib/python2.7/site-packages/django/utils/functional.py\", line 205, in inner\n    return func(self._wrapped, *args)\nTypeError: '_sre.SRE_Pattern' object is not iterable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/413", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/413/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/413/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/413", "id": 117939674, "node_id": "MDU6SXNzdWUxMTc5Mzk2NzQ=", "number": 413, "title": "Move cache_tree_children to TreeManager", "user": {"login": "danielnaab", "id": 136512, "node_id": "MDQ6VXNlcjEzNjUxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielnaab", "html_url": "https://github.com/danielnaab", "followers_url": "https://api.github.com/users/danielnaab/followers", "following_url": "https://api.github.com/users/danielnaab/following{/other_user}", "gists_url": "https://api.github.com/users/danielnaab/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielnaab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielnaab/subscriptions", "organizations_url": "https://api.github.com/users/danielnaab/orgs", "repos_url": "https://api.github.com/users/danielnaab/repos", "events_url": "https://api.github.com/users/danielnaab/events{/privacy}", "received_events_url": "https://api.github.com/users/danielnaab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 291190220, "node_id": "MDU6TGFiZWwyOTExOTAyMjA=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Accepted", "name": "Accepted", "color": "006b75", "default": false, "description": null}, {"id": 47199, "node_id": "MDU6TGFiZWw0NzE5OQ==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Enhancement", "name": "Enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/9", "html_url": "https://github.com/django-mptt/django-mptt/milestone/9", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/milestones/9/labels", "id": 1043770, "node_id": "MDk6TWlsZXN0b25lMTA0Mzc3MA==", "number": 9, "title": "0.8", "description": null, "creator": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2015-03-29T21:44:59Z", "updated_at": "2015-12-20T22:33:09Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2015-11-20T00:26:06Z", "updated_at": "2015-12-06T23:02:04Z", "closed_at": "2015-12-06T23:02:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be great to be able to query a tree and get back an object that may be traversed using standard Python object notation. For example:\n\n```\n# This (with the hypothetical use of `as_tree`) should result in only two database hits:\nroot = TreeNode.objects.get(pk=1)\ntree_root = root.get_descendants(include_self=True).select_related('foreign_key').as_tree()\nfor child in tree_root.children:\n    print child.foreign_key.pk\n```\n\nIf there a way to do this already I would be thrilled to know, as I need to deal with a tree among disparate pieces of code and it's not clear how to efficiently pass a node into a function that may traverse the tree without it triggering unnecessary DB hits.\n\nI will create a separate package to do this if not a reasonable addition to the core library or there doesn't already exist a third-party page that does this. I'd appreciate some pointers on if that is the necessary path.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/411", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/411/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/411/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/411", "id": 117397192, "node_id": "MDU6SXNzdWUxMTczOTcxOTI=", "number": 411, "title": "Rearranging siblings with child2.move_to(child1, \"right\") intermittently fails", "user": {"login": "jwhitlock", "id": 286017, "node_id": "MDQ6VXNlcjI4NjAxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/286017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwhitlock", "html_url": "https://github.com/jwhitlock", "followers_url": "https://api.github.com/users/jwhitlock/followers", "following_url": "https://api.github.com/users/jwhitlock/following{/other_user}", "gists_url": "https://api.github.com/users/jwhitlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwhitlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwhitlock/subscriptions", "organizations_url": "https://api.github.com/users/jwhitlock/orgs", "repos_url": "https://api.github.com/users/jwhitlock/repos", "events_url": "https://api.github.com/users/jwhitlock/events{/privacy}", "received_events_url": "https://api.github.com/users/jwhitlock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-17T16:51:05Z", "updated_at": "2015-11-18T00:01:06Z", "closed_at": "2015-11-18T00:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my project, I'm using django-mptt to describe a large tree structure with multiple trees.  I was attempting to rearrange siblings with a model method [set_children_order](https://github.com/mdn/browsercompat/blob/c3de021273016a5ba541bc6b50a620a8088cc159/webplatformcompat/models.py#L105-L130):\n\n``` python\ndef set_children_order(self, children):\n        \"\"\"Set the child features in the given order.\n\n        django-mptt doesn't have a function to do this, and uses direct SQL\n        to change the tree, so a lot of reloading is required to get it right.\n        \"\"\"\n        # Verify that all children are present\n        current_children = list(self.get_children())\n        current_set = set([child.pk for child in current_children])\n        new_set = set([child.pk for child in children])\n        assert current_set == new_set, \"Can not add/remove child features.\"\n\n        # Set order, refreshing as we go\n        prev_child = None\n        moved = False\n        for pos, next_child in enumerate(children):\n            if current_children[pos].pk != next_child.pk:\n                if moved:\n                    next_child.refresh_from_db()\n                if prev_child is None:\n                    next_child.move_to(self, \"first-child\")\n                else:\n                    next_child.move_to(prev_child, \"right\")\n                current_children = list(self.get_children())\n                moved = True\n            prev_child = next_child\n```\n\nThis failed on a case with 5 siblings.  I was able to manually make it work by using combinations such as `last_child.move_to(parent, \"last-child\")`, and performing the moves in different orders.\n\nI'm working on a test case against the `django-mptt` module, but posting the issue now in case I'm doing something obviously wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-mptt/django-mptt/issues/409", "repository_url": "https://api.github.com/repos/django-mptt/django-mptt", "labels_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/409/comments", "events_url": "https://api.github.com/repos/django-mptt/django-mptt/issues/409/events", "html_url": "https://github.com/django-mptt/django-mptt/issues/409", "id": 114238736, "node_id": "MDU6SXNzdWUxMTQyMzg3MzY=", "number": 409, "title": "django admin display errors on using django mptt", "user": {"login": "perrylh", "id": 11730943, "node_id": "MDQ6VXNlcjExNzMwOTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/11730943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrylh", "html_url": "https://github.com/perrylh", "followers_url": "https://api.github.com/users/perrylh/followers", "following_url": "https://api.github.com/users/perrylh/following{/other_user}", "gists_url": "https://api.github.com/users/perrylh/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrylh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrylh/subscriptions", "organizations_url": "https://api.github.com/users/perrylh/orgs", "repos_url": "https://api.github.com/users/perrylh/repos", "events_url": "https://api.github.com/users/perrylh/events{/privacy}", "received_events_url": "https://api.github.com/users/perrylh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 47200, "node_id": "MDU6TGFiZWw0NzIwMA==", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Defect", "name": "Defect", "color": "eb6420", "default": false, "description": null}, {"id": 133463039, "node_id": "MDU6TGFiZWwxMzM0NjMwMzk=", "url": "https://api.github.com/repos/django-mptt/django-mptt/labels/Needsinfo", "name": "Needsinfo", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-30T10:11:46Z", "updated_at": "2016-01-23T01:20:13Z", "closed_at": "2016-01-23T01:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm using mptt 0.7.4 on django 1.9b1. When I running django project , the admin page displays as follows\uff1a\n\n![untitled](https://cloud.githubusercontent.com/assets/11730943/10843395/c88816a4-7f33-11e5-8048-a9bae1e66b08.png)\n\nIt works with my Django 1.5 code base.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}]}